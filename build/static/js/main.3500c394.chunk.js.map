{"version":3,"sources":["app/History.js","app/Saga/AppSaga.js","app/Saga/SagaMiddleware.js","app/axios/ConfigAxios.js","app/axios/Invoke.js","modules/App/Store/ComponentAction.js","modules/Auth/Store/AuthAction.js","modules/Auth/Store/AuthReducer.js","app/Helpers.js","modules/Roles/Store/RolesActions.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionAction.js","modules/ListServices/Store/ListServicesActions.js","modules/ListServices/Store/ListServicesReducer.js","modules/App/Store/ComponentReducer.js","modules/Customers/Store/CustomersActions.js","modules/Customers/Store/CustomersReducer.js","modules/Admin/Store/AdminActions.js","modules/Admin/Store/AdminReducer.js","modules/Roles/Store/RolesReducer.js","modules/MasterData/Store/MasterDataActions.js","modules/Employees/Store/EmployeesActions.js","modules/Employees/Store/EmployeesReducer.js","modules/Employees/Store/EmployeeTools/EmployeeToolsActions.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReducer.js","modules/MasterData/Store/MasterDataReducer.js","modules/Units/Store/UnitsActions.js","modules/Units/Store/UnitsReducer.js","modules/JobForms/Store/JobFormsActions.js","modules/JobForms/Store/JobFormsReducer.js","modules/Branch/Store/BranchActions.js","modules/Branch/Store/BranchReducer.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer.js","modules/Units/Store/UnitModelActions.js","modules/Units/Store/UnitModelReducer.js","modules/ExternalService/Store/ExternalServiceActions.js","modules/ExternalService/Store/ExternalServiceReducer.js","modules/Identification/Store/IdentificationActions.js","modules/Identification/Store/IdentificationReducer.js","modules/MachineConfiguration/Store/MachineConfigurationActions.js","modules/MachineConfiguration/Store/MachineConfigurationReducer.js","modules/Tools/Store/ToolsActions.js","modules/Tools/Store/ToolsReducer.js","modules/FormCategory/Store/FormCategoryActions.js","modules/FormCategory/Store/FormCategoryReducer.js","modules/Units/Store/UnitFieldsActions.js","modules/Units/Store/UnitFieldsReducer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeActions.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReducer.js","modules/ReportServiceRepair/Store/ReportServiceRepairActions.js","modules/ReportServiceRepair/Store/ReportServiceRepairReducer.js","modules/ReportEmployee/Store/ReportEmployeeActions.js","modules/ReportEmployee/Store/ReportEmployeeReducer.js","modules/Division/Store/DivisionActions.js","modules/Division/Store/DivisionReducer.js","modules/Division/Store/DivisionUnitActions.js","modules/Division/Store/DivisionUnitReducer.js","modules/Dashboard/Store/DashboardActions.js","modules/Dashboard/Store/DashboardReducer.js","modules/Units/Store/UnitSerialNumberActions.js","modules/Units/Store/UnitSerialNumberReducer.js","modules/Units/Store/UnitJobFormActions.js","modules/Units/Store/UnitJobFormsReducer.js","modules/WorkingHours/Store/WorkingHoursActions.js","modules/WorkingHours/Store/WorkingHoursReducer.js","app/RootReducers.js","app/ConfigureStore.js","app/FormHelpers.js","components/CGlobalOverlay/CGlobalOverlay.tsx","components/Sidebar/Sidebar.js","components/Footer/Footer.js","components/Navbar/Navbar.js","modules/Template/Component/TemplateComponent.js","modules/Auth/Selector/AuthSelector.js","modules/App/Selector/AppSelector.js","modules/Template/Container/TemplateContainer.js","app/withTemplate.js","components/CButton/CButtonAntd.tsx","modules/Dashboard/Component/DashboardComponent.js","app/InitializeApp.js","modules/Dashboard/Container/DashboardContainer.js","components/CInput/CInput.tsx","modules/Auth/Component/LoginComponent.js","app/validateForm.js","modules/Auth/Container/LoginContainer.js","components/CSelect/CSelect.js","components/CDatePicker/CDatePicker.js","components/CButton/CButton.tsx","modules/InternalService/Component/InternalServiceComponent.js","modules/InternalService/Store/InternalServiceActions.js","modules/InternalService/Container/InternalServiceContainer.js","modules/ExternalService/Component/ExternalServiceComponent.js","modules/ExternalService/Container/ExternalServiceContainer.js","modules/MonitoringEmployee/Component/MonitoringEmployeeComponent.js","modules/MonitoringEmployee/Container/MonitoringEmployeeContainer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReport.js","modules/ReportServiceRepair/Component/ReportServiceRepairComponent.js","modules/ReportServiceRepair/Container/ReportServiceRepairContainer.js","modules/ReportEmployee/Component/ReportEmployeeComponent.js","modules/ReportEmployee/Container/ReportEmployeeContainer.js","modules/ListServices/Component/ListServicesComponent.js","modules/ListServices/Container/ListServicesContainer.js","components/CTable/CTableAntd.js","components/CModal/CModal.tsx","modules/Admin/Component/AdminModalComponent.js","modules/Admin/Container/AdminModalContainer.js","modules/Admin/Component/AdminComponent.js","modules/Admin/Container/AdminContainer.js","components/NotFound/NotFound.js","app/AuthMiddleware.js","components/CBadgeText/CBadgeText.tsx","modules/DetailServiceTransaction/Component/AddEmployeeModalComponent.js","modules/DetailServiceTransaction/Container/AddEmployeeModalContainer.js","property/colors.js","modules/DetailServiceTransaction/Component/RejectedModalComponent.js","modules/DetailServiceTransaction/Container/RejectedModalContainer.js","modules/DetailServiceTransaction/Component/EditModalTransactionComponent.js","modules/DetailServiceTransaction/Container/EditModalTransactionContainer.js","modules/DetailServiceTransaction/Component/EditModalDailiesComponent.js","modules/DetailServiceTransaction/Container/EditModalDailiesContainer.js","modules/DetailServiceTransaction/Component/InsertImageModalComponent.js","modules/DetailServiceTransaction/Container/InsertImageModalContainer.js","modules/DetailServiceTransaction/Component/EditModalSummaryComponent.js","modules/DetailServiceTransaction/Container/EditModalSummaryContainer.js","modules/DetailServiceTransaction/Component/DetailServiceTransactionComponent.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelEmployeeComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelEmployeeContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelSummaryComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelSummaryContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelImagesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelImagesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelDailiesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelDailiesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelHistoriesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelHistoriesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelRejectionsComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelRejectionsContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelChecklistComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelChecklistContainer.js","modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer.js","modules/Roles/Component/RolesEditModalComponent.js","modules/Roles/Container/RolesEditModalContainer.js","modules/Roles/Component/RolesComponent.js","modules/Roles/Container/RolesContainer.js","modules/Employees/Component/EmployeesListComponent.js","modules/Employees/Container/EmployeesListContainer.js","modules/Employees/Component/EmployeeEditComponent.js","modules/Employees/Container/EmployeeEditContainer.js","modules/Branch/Component/BranchModalComponent.js","modules/Branch/Container/BranchModalContainer.js","modules/Branch/Component/BranchComponent.js","modules/Branch/Container/BranchContainer.js","modules/JobForms/Component/JobFormsModalComponent.js","modules/JobForms/Container/JobFormsModalContainer.js","modules/JobForms/Component/JobFormsComponent.js","modules/JobForms/Container/JobFormsContainer.js","modules/Identification/Component/Wizard/ContentStepOneComponent.js","modules/Identification/Component/Wizard/ContentUnitComponent.js","modules/Identification/Component/Wizard/ContentSparePartComponent.js","modules/Identification/Component/Wizard/FormWizardIdentificationComponent.js","modules/Identification/Component/Wizard/ContentMachineConfigurationComponent.js","modules/Identification/Component/Wizard/ContentStepOneRegularComponent.js","modules/Identification/Container/Wizard/FormWizardIdentificationContainer.js","modules/Identification/Component/IdentificationModalComponent.js","modules/Identification/Container/IdentificationModalContainer.js","modules/Identification/Component/ListIdentificationComponent.js","modules/Identification/Container/ListIdentificationContainer.js","modules/MachineConfiguration/Component/MachineConfigurationModalComponent.js","modules/MachineConfiguration/Container/MachineConfigurationModalContainer.js","modules/MachineConfiguration/Component/MachineConfigurationComponent.js","modules/MachineConfiguration/Container/MachineConfigurationContainer.js","modules/Units/Component/UnitsModalComponent.js","modules/Units/Container/UnitsModalContainer.js","modules/Units/Component/UnitsComponent.js","modules/Units/Container/UnitsContainer.js","modules/Customers/Component/CustomerModalComponent.js","modules/Customers/Container/CustomerModalContainer.js","modules/Customers/Component/CustomerComponent.js","modules/Customers/Container/CustomerContainer.js","modules/Tools/Component/ToolsModalComponent.js","modules/Tools/Container/ToolsModalContainer.js","modules/Tools/Component/ToolsComponent.js","modules/Tools/Container/ToolsContainer.js","modules/FormCategory/Component/FormCategoryModalComponent.js","modules/FormCategory/Container/FormCategoryModalContainer.js","modules/FormCategory/Component/FormCategoryComponent.js","modules/FormCategory/Container/FormCategoryContainer.js","modules/Units/Component/UnitsModelsModalComponent.js","modules/Units/Container/UnitModelsModalContainer.js","modules/Units/Component/UnitModelsComponent.js","modules/Units/Container/UnitModelsContainer.js","modules/Units/Component/UnitFields/UnitFieldsModalComponent.js","modules/Units/Container/UnitFields/UnitFieldsModalContainer.js","modules/Units/Component/UnitFields/UnitFieldsComponent.js","modules/Units/Container/UnitFields/UnitFieldsContainer.js","modules/ReportIdentification/Store/ReportIdentificationActions.js","modules/ReportIdentification/Component/ReportIdentificationComponent.js","modules/ReportIdentification/Container/ReportIdentificationContainer.js","modules/Division/Component/DivisionModalComponent.js","modules/Division/Container/DivisionModalContainer.js","modules/Division/Component/DivisionComponent.js","modules/Division/Container/DivisionContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsModalComponent.js","modules/Employees/Container/EmployeeTools/EmployeeToolsModalContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsComponent.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReport.js","modules/Employees/Container/EmployeeTools/EmployeeToolsContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitModalComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitModalContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitContainer.js","modules/ReportPdf/Components/DetailServiceReportComponent.js","modules/ReportPdf/Containers/DetailServiceReportContainer.js","modules/Units/Component/UnitSerialNumber/ModalUnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/ModalUnitSerialNumberContainer.js","modules/Units/Component/UnitSerialNumber/UnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer.js","modules/Units/Component/UnitJobFormsComponent.js","modules/Units/Container/UnitJobFormsContainer.js","modules/WorkingHours/Component/WorkingHoursComponent.js","modules/WorkingHours/Container/WorkingHoursContainer.js","modules/WorkingHours/Store/WorkingHoursReport.js","app/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["history","createBrowserHistory","basename","forceRefresh","handleErrorProcess","handleErrorAction","action","errorData","response","undefined","toastrConfirmOptions","onOk","window","location","reload","okText","disableCancel","toastr","confirm","error","responseStatus","status","console","log","data","ErrorCode","toastMessage","class","id","MessageKey","dataErr","Data","Failures","ErrorKey","Message","toast","takeEvery","all","fork","ConfigAxios","axios","create","baseURL","process","headers","Accept","timeout","defaults","delete","interceptors","request","use","requestFulfilled","method","Promise","resolve","requestRejected","_","isEmpty","reject","responseFulfilled","responseRejected","warning","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Invoke","headersConfigDelete","submitLogin","post","submitLoginEmployee","getListServices","page","limit","keyword","type","employeeId","get","deleteJobServiceById","jobId","getOneServices","getListAdmin","getAdminById","adminId","addAdmin","updateAdmin","put","deleteAdminById","getListAdminRoles","getAdminRolesById","customerId","addAdminRoles","updateAdminRoles","deleteAdminRolesById","getEmployeeRoles","getEmployeeTools","addEmployeeRole","deleteEmployeeRole","getCustomerList","branchId","getCustomerById","addCustomer","updateCustomer","deleteCustomerById","getEmployeeList","roleId","divisionId","getEmployeeById","addEmployee","updateEmployee","deleteEmployeeById","getListEmployeeTools","getEmployeeToolsById","addEmployeeTools","updateEmployeeTools","deleteEmployeeToolsById","employeeToolsId","getListRole","getRoleById","addRole","updateRole","deleteRoleById","getProvinceList","getCityList","provinceId","getDashboardProgressData","addInternalService","updateJobService","setFinishedService","setApprovedService","setRejectedService","payload","getServicesEmployee","addNewEmployeeService","setStatusEmployeeService","getJobServiceSummary","unitId","getJobServiceMedia","getJobServiceDailies","updateJobServiceDailies","getChecklistData","unitModelId","getRejectedData","getJobServiceHistories","addJobServiceMedia","addJobServiceDaily","updateSummary","getUnitList","addUnit","updateUnit","deleteUnitById","getListUnitModel","addUnitSerialNumber","updateUnitSerialNumber","unitSerialNumberId","deleteUnitSerialNumber","getUnitSerialNumber","addUnitModel","updateUnitModel","deleteUnitModelById","getListUnitFields","getListUnitJobForms","jobFormId","addUnitFields","updateUnitFields","deleteUnitFieldsById","unitfieldsId","getListJobForm","keyowrd","addJobForms","updateJobForms","deleteJobForms","jobFormsId","getListBranch","deleteBranchById","addBranch","updateBranch","getListMenu","addMenuRole","getMenuByRoleId","deleteMenuByMenuRoleId","menuRoleId","getListEngine","addEngine","updateEngine","deleteEngine","machineId","getListTools","addTool","updateTool","deleteTool","toolId","getFormCategory","addFormCategory","updateFormCategory","deleteFormCategory","categoryFormId","getIdentificationList","addIdentification","updateIdentificationMilling","updateIdentificationRegular","deleteIdentificationById","identificationId","getDivisionList","addDivision","updateDivision","deleteDivision","getDivisionUnitList","addDivisionUnit","getReportMonitoringEmployee","from","until","getReportServiceRepair","getReportEmployee","getWorkingHours","getTransactionPdfUrl","downloadPdfFromUrl","url","responseType","PROCESS_GLOBAL_LOADING","PROCESS_FORM_GLOBAL_LOADING","SHOW_GLOBAL_MODAL","RESET_ALL_LOADING","setGlobalLoading","setGlobalModal","setGlobalFormLoading","resetAllGlobalLoadingProcess","dispatch","store","SET_ACCESS_TOKEN_DATA","SET_USER_DETAIL_DATA","SET_ERROR_LOGIN","setUserDetail","setErrorLogin","appendItem","a","callback","accessToken","handleSubmitLogin","values","username","password","then","setTimeout","push","catch","onRejected","dataResponseRejected","initialState","userDetail","avatar","navigate","path","getIndex","currentpage","pageNumbers","startIndex","endIndex","i","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","SelectLocation","value","label","SelectType","SelectInstanceType","SelectStatus","SelectStatusServices","SelectStatusMilling","SelectInstanceTypeRegular","SelectMilling","enumTypeInternalServices","enumTypeExternalServices","enumWarranty","enumTypeActivities","warrantyMonths","toString","getProvinceEnum","SelectProvince","map","item","index","name","getCitiesEnum","SelectCities","enumSelectGenerator","enumName","SelectEnum","getUnitModelEnum","SelectUnitModel","getMachineConf","SelectMachines","replace","toLowerCase","getStatus","statusItem","toUpperCase","color","getStatusWorkingHours","categoryServices","categoryMonitoringServices","enumTypeMonitoringEmployee","isBlockedRoleDetailService","role","isBlocked","isBlockedRoleCustomer","SET_LIST_ROLES","SET_SELECTED_ROLE_ID","SET_SELECTED_ROLE_DETAIL","SET_FORM_STATUS","RESET_STATE","SET_SELECTED_ROLE_MENU","setSelectedRoleId","setFormStatus","setSelectedRoleDetail","setSelectedRoleMenu","showToast","success","getListRolesRequested","mapDetailRoleToForm","getState","roles","selectedRoleDetail","change","description","getMenuByRolesId","subItem","menu_id","resetForm","doAddRoleProcess","menuSelected","splitDescription","split","length","replaceAll","ComponentActions","doDeleteMenuRoleProcess","menuId","menuListApi","filter","x","menu","doAddMenuRoleProcess","role_id","view","insert","update","doSaveMenuRole","newMenuSelected","currentMenuSelected","selectedRoleMenu","selectedRoleId","newMenu","doEditRoleProcess","doDeleteRoleProcess","deleteRoleRequested","cancelText","saveRoleRequested","SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA","SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA","SET_GROUPING_SUMMARY_DATA","SET_SINGLE_SUMMARY_DATA","SET_GROUPING_CHECKLIST_DATA","SET_SELECTED_SERVICES_SUMMARY_DATA","SET_SELECTED_SERVICES_MEDIA_DATA","SET_SELECTED_SERVICES_DAILIES_DATA","SET_SELECTED_SERVICES_HISTORIES_DATA","SET_SELECTED_SERVICES_CHECKLIST_DATA","SET_SELECTED_SERVICES_REJECTED_DATA","SET_EDIT_TRANSACTION_MODAL","SET_REJECTIONS_MODAL","SET_EDIT_DAILIES_MODAL","SET_SELECTED_EDIT_DAILIES_DATA","SET_SELECTED_UNIT","RESET_DETAIL_SERVICE","SET_INSERT_MEDIA_MODAL","SET_TYPE_FORM_DAILIES","SET_EDIT_SUMMARY_MODAL","setRejectionsModal","setEditTransactionModal","setGroupingSelectedServicesMediaData","setGroupingSummaryData","setSingleSummaryData","setGroupingChecklistData","setEditDailiesModal","setEditSummaryModal","setInsertMediaModal","setSelectedServicesEmployeeListData","setSelectedServiceDailiesData","setSelectedServiceHistoriesData","setSelectedEditDailiesData","setTypeFormDailies","getJobServiceEmployeeList","serviceEmployeeList","results","subIitem","active","employee_service_id","employee_id","employee","logs","getJobServiceRejections","handleAddNewEmployeeService","setStatusEmployee","employeeServiceId","isActive","doRejectServiceProcess","reason","doEditServiceProcess","warranty","warrantyYears","start","moment","startDate","format","due","dueDate","job_perform","jobPerform","warranty_month","warranty_year","setSelectedJobService","units","unit_models","handlePressEditRequested","handlePressRejectedRequested","doEditDailiesProcess","dataService","services","selectedJobService","typeForm","detailService","typeFormDailies","insertPayload","splitActivity","activityType","timeStart","timeStartEnd","timeEnd","dailyStart","dailyEnd","endDate","title","daily_start","daily_end","doEditSummaryProcess","summary","is_external","getUnitSummary","res","doAddSummaryProcess","handlePressEditDailiesRequested","handlePressEditSummaryRequested","doInsertMedia","splitUnit","unit","base64","imageUrl","media","getUnitMedia","handlePressInsertMediaRequested","mapDetailTransactionToForm","end","mapDailiesToForm","selectedEditDailies","mulai","selesai","deskripsi","downloadTransactionPdf","dataTransactionPdf","downloadUrl","pdf","fileDownload","filename","resetFormModalImage","groupingSummaryList","singleSummary","sequence","setDispatch","dataSummary","err","unitName","unit_name","groupingMediaList","dataMedia","imageList","image","SET_LIST_SERVICES","SET_SELECTED_JOB_SERVICE","SET_PAGING_LIST_SERVICE","SET_SELECTED_JOB_SERVICE_ID","SET_DASHBOARD_LIST_SERVICES","setListServices","setPagingListService","setSelectedJobServiceId","getListServicesRequested","paging","totalPage","getTopTenService","handleSearch","filterValues","splitTypeService","typeService","splitStatusService","statusService","handlePressEdit","doDeleteJobServiceProcess","deleteJobServiceRequested","handlePressActionsRequested","doCallActionProcess","listServices","dashboardListServices","selectedJobServiceId","isLoadingGlobal","isLoadingFormGlobal","isModalVisible","SET_CUSTOMER_LIST_DATA","SET_PAGING_CUSTOMER","SET_SELECTED_CUSTOMER_DATA","SET_SELECTED_CUSTOMER_ID","SET_CUSTOMER_LIST_DATA_DROPDOWN","setCustomerListData","setCustomerListDataDropdown","setPagingCustomer","setSelectedCustomerData","setSelectedCustomerId","getCustomerListDataByPaging","isDropdownData","doDeleteCustomerProcess","branch","doAddCustomerProcess","customers","province","cityId","city","branch_id","province_id","city_id","phone","work_hour","workHour","pic","pic_phone","picPhone","address","doEditBranchProcess","saveCustomerRequested","mapDetailCustomerToForm","selectedCustomerData","province_name","city_name","branch_name","deleteCustomerRequested","listCustomers","listCustomersDropdown","formStatus","selectedCustomerId","SET_LIST_ADMIN","SET_PAGING_ADMIN","SET_SELECTED_ADMIN_ID","SET_SELECTED_ADMIN_DATA","setListAdmin","setPagingAdmin","setSelectedAdminId","setSelectedAdminData","getListAdminRequested","doAddAdminProcess","admins","fullname","doEditAdminProcess","doDeleteAdminProcess","saveAdminRequested","mapDetailAdminToForm","selectedAdminData","deleteAdminRequested","listAdmin","selectedAdminId","listRoles","SET_PROVINCE_LIST_DATA","SET_CITY_LIST_DATA","SET_MENU_LIST_DATA","setCityListData","loadProvinceListData","loadCityListData","loadMenuListData","SET_EMPLOYEE_LIST_DATA","SET_SELECTED_EMPLOYEE_ID","SET_SELECTED_EMPLOYEE_DATA","SET_SELECTED_ROLE_EMPLOYEE","SET_PAGING_EMPLOYEES","SET_EMPLOYEE_LIST_DROPDOWN","setEmployeeListData","setSelectedEmployeeId","setSelectedEmployeeData","setSelectedRoleEmployee","setPagingEmployees","loadEmployeeListData","loadEmployeeDataDropdown","getEmployeeDataByIdRequested","getRolesByEmployeeId","setAutoPopulateEmployee","selectedEmployeeData","employees","listBranch","defaultBranch","MasterDataActions","doAddEmployeeProcess","selectedRoles","nik","photo","doEditEmployeeProcess","roleSelected","doSaveEmployeeRole","doAddEmployeeRoleProcess","newRoleId","doDeleteAllEmployeeRoleProcess","roleListApi","doDeleteEmployeeProcess","newRoleSelected","currentRoleSelected","selectedRoleEmployee","selectedEmployeeId","saveEmployeeRequested","mapDetailEmployeeToForm","deleteEmployeeRequested","splitRole","splitBranch","splitDivision","division","listEmployees","listEmployeeDropdown","SET_EMPLOYEE_TOOL_LIST_DATA","SET_SELECTED_EMPLOYEE_TOOLS_ID","SET_SELECTED_EMPLOYEE_TOOLS_DATA","SET_PAGING_EMPLOYEE_TOOLS","setEmployeeToolsListData","setSelectedEmployeeToolsId","setSelectedEmployeeToolsData","setPagingEmployeeTools","getEmployeeToolsRequested","doAddEmployeeToolsProcess","slpitToolsId","tools","tool_id","doEditEmployeeToolsProcess","splitTools","doDeleteEmployeeToolsProcess","employeeTools","saveEmployeeToolsRequested","mapDetailEmployeeToolsToForm","selectedEmployeeToolsData","deleteEmployeeToolsRequested","listEmployeeTools","selectedEmployeeToolsId","listProvince","listCity","listMenu","SET_UNIT_LIST_DATA","SET_SELECTED_UNIT_ID","SET_SELECTED_UNIT_DATA","SET_PAGING_UNIT","setUnitListData","setPagingUnit","setSelectedUnitId","setSelectedUnitData","doDeleteUnitProcess","getUnitListDataRequested","doAddUnitProcess","doEditUnitProcess","mapDetailUnitToForm","selectedUnitsData","saveUnitRequested","deleteUnitRequested","listUnits","selectedUnitsId","SET_JOB_FORMS_LIST_DATA","SET_SELECTED_JOB_FORMS_ID","SET_SELECTED_JOB_FORMS_DATA","SET_PAGING_JOB_FORM","setJobFormsListData","setPagingJobForm","setSelectedJobFormsId","setSelectedJobFormsData","doDeleteBranchProcess","jobForms","getJobFormsListDataRequested","doAddJobFormsProcess","doEditJobFormsProcess","mapDetailJobFormsToForm","selectedJobFormsData","saveJobFormsRequested","deleteJobFormsRequested","listJobForms","selectedJobFormsId","SET_BRANCH_LIST_DATA","SET_SELECTED_BRANCH_ID","SET_SELECTED_BRANCH_DATA","SET_PAGING_BRANCH","SET_BRANCH_LIST_DATA_DROPDOWN","setBranchListData","setBranchListDataDropdown","setPagingBranch","setSelectedBranchId","setSelectedBranchData","getBranchListDataRequested","doAddBranchProcess","mapDetailBranchToForm","selectedBranchData","isDropdown","saveBranchRequested","deleteBranchRequested","listBranchDropdown","selectedBranchId","selectedServiceEmployeeList","selectedServiceSummary","selectedServiceMedia","groupingSelectedServiceMedia","groupingSelectedServiceSummary","singleSelectedServiceSummary","groupingSelectedServiceChecklist","selectedServiceDailies","selectedServiceHistories","selectedServiceChecklist","selectedServiceRejected","rejectionsModal","editTransactionModal","editDailiesModal","editSummaryModal","insertMediaModal","selectedUnit","SET_UNIT_MODEL_LIST_DATA","SET_SELECTED_UNIT_MODEL_ID","SET_SELECTED_UNIT_MODEL_DATA","SET_PAGING_UNIT_MODEL","setUnitModelListData","setPagingUnitModel","setSelectedUnitModelId","setSelectedUnitModelData","getUnitModelListDataRequested","doAddUnitModelsProcess","unitModels","unit_id","descriptions","serial_number","serialNumber","machine_no","machineNo","engine_model","engineModel","engine_no","engineNo","chasis_no","chasisNo","transmission_no","transmissionNo","doEditUnitModelsProcess","doDeleteUnitModelsProcess","saveUnitModelsRequested","deleteUnitModelRequested","mapDetailUnitModelToForm","selectedUnitModelsData","listUnitModels","selectedUnitModelsId","SET_ENUM_UNIT_MODEL","getEmployeeByIdFromReducer","tempData","getProvinceByIdFromReducer","masters","setAutoPopulateUnitModel","fieldIndex","indexEmployee","employeeData","provinceData","cityData","filteredCity","citySelected","setAutoPopulateCustomer","customersData","handleSubmitForm","splitCustomerId","customer","splitTypeId","splitWarranty","splitEmployeeId","unitList","splitUnitModel","unit_model_id","customer_id","job_form_id","uuidv4","identification_id","customerLocation","functionThatReturnPromise","reset","promise","pending","enumUnitModel","SET_IDENTIFICATIONN_LIST_DATA","SET_SELECTED_IDENTIFICATION_ID","SET_PAGING_IDENTIFICATION","SET_SELECTED_IDENTIFICATION_DATA","setIdentificationListData","setSelectedIdentificationId","setSelectedIdentificationData","getIdentificationListRequested","branches","identificationList","newIdentificationList","doDeleteIdentificationProcess","identification","doAddIdentificationProcess","splitCustomer","splitLocation","splitMilling","milling","splitType","doUpdateIdentificationMilling","isLastStep","selectedIdentificationId","splitInstanceType","instanceType","splitMillingStatus","millingStatus","splitCity","splitProvince","engineConfs","engine_confs","list","engine_conf_id","instance_type","instance_name","instanceName","customerName","ktp_npwp","milling_capacity","millingCapacity","milling_work_capacity_perday","millingWorkCapacityPerDay","rice_trademark","riceTrademark","history_service_place","history_service_type","notes","note","spare_part_needs","spare_part_changing_histories","spare_part_selling_histories","doUpdateIdentificationRegular","isFinished","instance_address","instanceAddress","address_district","address_city","address_province","address_subdistrict","kelurahan","address_postal_code","postalCode","instancePhoneNumber","product_name","productName","buy_date","assistance_date","machine_number","gearbox_number","production_unit_year","work_hour_per_day","hour_meter","saveIdentificationRequested","isMilling","selectedIdentificationData","deleteIdentificationRequested","listIdentification","SET_MACHINE_LIST_DATA","SET_SELECTED_MACHINE_ID","SET_SELECTED_MACHINE_DATA","SET_PAGING_MACHINE_CONF","setMachineListData","setPagingMachineConf","setSelectedMachineId","setSelectedMachineData","doDeleteMachineProcess","getMachineListDataRequested","doAddMachineProcess","doEditMachineProcess","mapDetailMachineToForm","machineConfiguration","selectedMachineData","saveMachineRequested","deleteMachineRequested","listMachine","selectedMachineId","SET_TOOLS_LIST_DATA","SET_SELECTED_TOOLS_ID","SET_SELECTED_TOOLS_DATA","SET_PAGING_TOOLS","setToolsListData","setPagingTools","setSelectedToolsId","setSelectedToolsData","doDeleteToolsProcess","toolsId","getToolsListDataRequested","doAddToolsProcess","doEditToolsProcess","mapDetailToolsToForm","selectedToolsData","saveToolsRequested","deleteToolsRequested","listTools","selectedToolsId","SET_FORM_CATEGORY_LIST_DATA","SET_SELECTED_FORM_CATEGORY_ID","SET_SELECTED_FORM_CATEGORY_DATA","SET_PAGING_FORM_CATEGORY","setFormCategoryListData","setPagingFormCategory","setSelectedFormCategoryId","setSelectedFormCategoryData","doDeleteFormCategoryProcess","getFormCatgeoryListDataRequested","doAddFormCategoryProcess","doEditFormCategoryProcess","mapDetailCategoryToForm","formCategory","selectedFormCategoryData","saveFormCategoryRequested","deleteFormCategoryRequested","formCategoryId","listFormCategory","selectedFormCategoryId","SET_UNIT_FIELDS_LIST_DATA","SET_SELECTED_UNIT_FIELDS_ID","SET_SELECTED_UNIT_FIELDS_DATA","SET_PAGING_UNIT_FIELDS","setUnitFieldsListData","setPagingUnitFields","setSelectedUnitFieldsId","setSelectedUnitFieldsData","getUnitFieldsListDataRequested","doAddUnitFieldsProcess","unitFields","splitCategoryFormId","splitjobFormId","jobForm","fieldName","category_form_id","doEditUnitFieldsProcess","doDeleteUnitFieldsProcess","unitFieldId","saveUnitFieldsRequested","deleteUnitFieldRequested","mapDetailUnitFieldToForm","selectedUnitFieldsData","job_form_name","category_form_name","listUnitFields","selectedUnitFieldsId","SET_MONITORING_EMPLOYEE_LIST_DATA","SET_PAGING_MONITORING_EMPLOYEE","setMonitoringEmployeeListData","setPagingMonitoringEmployee","getMonitoringEmployeeListDataRequested","monitoringEmployee","newListMonitoringEmployee","itemData","indexData","created_date","date","listMonitoringEmployee","SET_SERVICE_REPAIR_LIST_DATA","SET_PAGING_SERVICE_REPAIR","setServiceRepairListData","setPagingServiceRepair","getServiceRepairListDataRequested","serviceRepair","newListServiceRepair","listServiceRepair","SET_REPORT_EMPLOYEE_LIST_DATA","SET_PAGING_REPORT_EMPLOYEE","setReportEmployeeListData","setPagingReportEmployee","getReportEmployeeDataRequested","reportEmployee","newReportEmployee","listReportEmployee","SET_DIVISION_LIST_DATA","SET_SELECTED_DIVISION_ID","SET_SELECTED_DIVISION_DATA","SET_PAGING_DIVISION","setDivisionListData","setPagingDivision","setSelectedDivisionId","setSelectedDivisionData","doDeleteDivisionProcess","getDivisionListDataRequested","doAddDivisionProcess","headDivision","doEditDivisionProcess","mapDetailDivisionToForm","selectedDivisionData","employee_name","saveDivisionRequested","deleteDivisionRequested","listDivision","selectedDivisionId","SET_DIVISION_UNIT_LIST_DATA","SET_SELECTED_DIVISION_UNIT_ID","SET_SELECTED_DIVISION_UNIT_DATA","SET_PAGING_DIVISION_UNIT","setDivisionUnitListData","setPagingDivisionUnit","setSelectedDivisonUnitId","setSelectedDivisionUnitData","getDivisionUnitListRequested","doAddDivisionUnitProcess","divisionUnit","splitUnitId","division_id","doEditDivisionUnitProcess","saveDivisionUnitRequested","listDivisionUnit","selectedDivisionUnitId","selectedDivisionUnitData","SET_DASHBOARD_DATA","dashboardData","SET_UNIT_SERIAL_NUMBER_DATA","SET_SELECTED_UNIT_SERIAL_NUMBER_ID","SET_SELECTED_UNIT_SERIAL_NUMBER_DATA","setUnitSerialNumberData","setSelectedUnitSerialNumberId","setSelectedUnitSerialNumberData","doAddUnitSerialNumberProcess","doEditUnitSerialNumberProcess","unitSerialNumber","selectedUnitSerialNumberId","serialNumberId","saveUnitSerialNumberRequested","mapDetailUnitSerialNumberToForm","selectedUnitSerialNumberData","customer_name","listUnitSerialNumber","SET_UNIT_JOB_FORMS_LIST_DATA","SET_PAGING_UNIT_JOB_FORMS","setUnitJobFormsListData","getUnitJobFormsListDataRequested","listUnitJobForms","SET_WORKING_HOURS_LIST_DATA","setWorkingHoursListData","getWorkingHoursListDataRequested","workingHours","newListWorkingHours","created","done","done_date","listWorkingHours","rootReducer","rootReducers","combineReducers","router","connectRouter","auth","state","newState","Object","assign","externalService","unitJobForms","component","dashboard","form","formReducer","toastrReducer","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","createStore","applyMiddleware","routerMiddleware","persistor","persistStore","run","Saga","Component","props","Overlay","styled","div","CGlobalOverlay","loading","height","width","radius","margin","withRouter","mainMenu","masterDataMenu","reportMenu","serviceRepairMenu","reportDataMenu","href","icon","Footer","Date","getFullYear","Navbar","onLogout","placeholder","src","alt","onClick","children","isGlobalLoading","isLandingPage","logout","Fragment","className","selectorAuth","selectorComponent","mapStateToProps","createStructuredSelector","createSelector","withConnect","connect","authActions","React","useState","setRole","useEffect","menus","size","style","marginRight","getIconName","withTemplate","Template","WrappedComponent","hoistNonReactStatics","CButtonAntd","isLoading","disabled","shape","danger","backgroundColor","alignSelf","borderColor","block","DashboardComponent","totalCustomer","totalInternalService","totalExternalService","totalIdentification","bordered","columns","dataSource","pagination","pageSizeOptions","showSizeChanger","initializeApp","AdminActions","RoleActions","BranchActions","UnitsActions","MachineConfigurationActions","ListServiceActions","handlePressDelete","jobServiceId","setisBlocked","no","isBlockedRole","checkBlockedRole","keys","toLocaleString","dataIndex","sorter","b","render","items","isExternal","borderRadius","textAlign","unit_model_name","align","text","record","EditOutlined","CInput","typeComponent","htmlFor","whiteSpace","linebreak","maxLength","rows","onChange","onKeyDown","input","meta","touched","fontSize","labelSize","LoginComponent","handleSubmit","submitForm","onSubmit","Field","validateFormRoles","errors","validateFormUnitModel","validateFormTransaction","EnhanceContainer","valid","AuthActions","reduxForm","validate","FormItem","Form","Item","Option","Select","ASelect","hasFeedback","rest","hasError","invalid","validateStatus","help","CSelect","showSearch","onBlur","e","preventDefault","RenderDatePicker","defaultValue","CDatePicker","CButton","InternalServiceComponent","listEmployee","enumType","handleAutoPopulateEmployee","handleAutoPopulateCustomer","InfoCircleTwoTone","FieldArray","fields","PlusOutlined","itemEmployee","DeleteOutlined","remove","getCityByIdFromReducer","arrVal","InternalServiceActions","ComponentAction","CustomerActions","EmployeeActions","SelectCustomerData","SelectEmployeeData","initialValues","ExternalServiceComponent","listUnit","enumJobForms","handleAutoPopulateUnitModel","externalValues","onChangeUnitModel","handleChangeType","isTroubleShoot","itemUnit","indexUnit","val","selector","formValueSelector","formValues","getFormValues","ExternalServiceActions","enumModel","enumUnit","selectedUnitModel","unitQty","setUnitQty","unitData","setUnitData","setIsTroubleShoot","SelectUnit","SelectJobFormsData","JobFormsActions","totalUnit","handleAddNewUnit","handleSubtractUnit","MonitoringEmployeeComponent","onChangePagination","onSearch","enumBranch","enumTypeReport","handlePressGeneratePdf","orientation","SearchOutlined","FilePdfOutlined","monitoringEmployeeFormValues","getListMonitoringEmployee","MonitoringEmployeeActions","handlePressAddNew","printedData","jd_date","employee_nik","jobType","job_type","models","SelectBranch","nextPage","pageSize","monitoringEmployeeList","job_status","createdDate","doc","jsPDF","setFontSize","setFont","autoTable","startY","body","theme","head","content","rowSpan","halign","colSpan","styles","fillColor","headStyles","valign","overflow","columnWidth","header","dataKey","willDrawCell","dataCell","didParseCell","s","cell","lineColor","lineWidth","font","columnStyles","tableLineColor","tableLineWidth","save","exportMonitoringEmployeePdf","ReportServiceRepairComponent","scroll","serviceRepairFormValues","getListServiceRepair","ReportServiceRepairActions","BookOutlined","fixed","ReportEmployeeComponent","reportEmployeeFormValues","ReportEmployeeActions","technition","Search","Input","ListServiceComponent","enumStatus","total","current","enterButton","listServiceFormValues","user","getListEmployeesDropdown","renderActionTable","isBlockedRoleListService","ListServicesComponent","CTableAntd","renderActions","searchText","searchedColumn","searchInput","useRef","sortDirections","filterIcon","filtered","onFilter","includes","onFilterDropdownVisibleChange","visible","select","highlightStyle","padding","searchWords","autoEscape","textToHighlight","CModal","footer","destroyOnClose","onCancel","RenderFooter","handleSaveForm","RenderContent","formName","AdminModalComponent","handleCancel","enumMenu","AdminComponent","NotFound","AuthMiddleware","ComposedComponent","menuPath","isSecureRoute","isAuthenticated","userRole","userMenus","redirect","redirectToServices","CBadgeText","enumEmployee","AddEmployeeModalComponent","SelectEmployee","DetailServiceTransactionAction","Themes","RejectedModalComponent","DetailServiceTransactionActions","reson","handleClose","CloseOutlined","CheckOutlined","SelectRole","defaultValuesMenu","onChangeRoleMenu","Group","span","typeComponents","EditModalTransactionComponent","menuChecked","handleClearModalContent","SelectMenu","handleChangeTimePicker","marginBottom","RangePicker","EditModalDailiesComponent","editDailiesFormValues","setTimeDailiesForm","time","beforeUpload","handleChange","uploadButton","isImageLoaded","marginLeft","marginTop","listType","showUploadList","resizeMode","heigh","alignItems","justifyContent","opacity","InsertImageModalComponent","defaultImage","handleUploadPhoto","setLoading","setImageUrl","LoadingOutlined","file","isJpgOrPng","isLt2M","info","originFileObj","setIsImageLoaded","handleKeyDown","EditModalSummaryComponent","Text","Typography","TabPane","Tabs","DetailServiceTransactionComponent","TabPanel","onChangeTab","goBack","handlePressActions","RenderButtonAction","button","CheckCircleOutlined","CloseCircleOutlined","ArrowLeftOutlined","model","strong","customer_pic_name","defaultActiveKey","tab","EditModalTransactionContainer","Meta","Card","RenderDescription","handlePressNonactive","handlePressActive","TabPanelEmployeeComponent","cover","setIsBlockedRole","isBlock","RenderItemSummary","indexText","TabPanelSummaryComponent","summaryArr","isLoaded","FileOutlined","PlusCircleOutlined","gutter","fontWeight","textTransform","plain","selectedService","setSummaryArr","summaryMapping","summaryText","splitSummary","RenderImage","medias","hoverable","TabPanelImagesComponent","handlePressAdd","CameraOutlined","RenderDailies","dailies","karyawan","jam","hours","TabPanelDailiesComponent","handlePressCancel","RenderHistories","histories","user_name","TabPanelHistoriesComponent","TabPanelHistoriesContainer","rejections","TabPanelRejectionsComponent","TabPanelRejectionsContainer","alignContent","TabPanelChecklistComponent","checklistArr","checklist","itemChecklist","indexChecklist","borderBottom","itemFields","indexFields","field_name","checked","is_check","TabPanelChecklistContainer","setchecklistArr","DetailServiceActions","setMediaList","setSummaryList","setChecklist","isLoadedChecklist","setIsLoadedChecklist","isCompleteLoadedMedia","setIsCompleteLoadedMedia","isCompleteLoadedSummary","setIsCompleteLoadedSummary","FileImageOutlined","FileTextOutlined","UsergroupAddOutlined","CloseSquareOutlined","HistoryOutlined","fromIndex","indexOf","element","splice","callInitialize","EmployeesActions","groupingUnitMedia","groupingUnitSummary","groupingUnitChecklist","isCompleted","groupingChecklist","dataChecklist","activeTab","RolesEditModalComponent","RolesActions","setMenuSelected","RolesComponent","getListRoles","EmployeeListComponent","enumRoles","enumDivision","employeeFormValues","employeesFormValues","getListEmployees","ToolsActions","handlePressEmployeeTools","SelectRoles","getRolesEnum","SelectDivision","EmployeesListComponent","SettingOutlined","defaultValues","onChangeRoleEmployee","EmployeeEditComponent","enumRole","enumProvince","enumCity","onChangeProvince","onBackAction","getDetailEmployee","handleClearSelectedEmployeeRole","listCityState","setListCityState","setRoleSelected","setDefaultImage","SelectEmployeeRole","provinceMapping","detailEmployee","BranchModalComponent","BranchComponent","JobFormsModalComponent","JobFormsComponent","getListJobForms","ContentStepOneComponent","provinces","cities","enumInstanceType","enumStatusMilling","ContentUnitComponent","ContentSparePartComponent","onChangeServiced","isServiced","RenderSparePartSelling","RenderSparePartNeeded","_props","StepsContent","StepsAction","Step","Steps","FormWizardIdentificationComponent","steps","saveFormChanges","setCurrent","ContentMachineConfigurationComponent","machineConf","onAddMachineConf","RenderBodyHusker","ContentStepOneRegularComponent","identificationFormValues","setCities","serviced","setServiced","IdentificationActions","listCustomer","listLocation","listMilling","IdentificationModalComponent","enumCustomers","enumLocation","enumMilling","SelectCustomer","CustomersActions","ListIdentificationComponent","getListIdentification","created_at","MachineConfigurationModalComponent","MachineConfigurationComponent","getListMachine","MachineActions","UnitsModalComponent","UnitsComponent","placement","getListUnit","handlePressUnitModel","handlePressUnitFields","handlePressLink","tooltipText","BoxPlotOutlined","FileAddOutlined","CustomerModalComponent","CustomerComponent","customerBranchValue","getListCustomer","getListProvince","ToolsModalComponent","ToolsComponent","FormCategoryModalComponent","FormCategoryActions","FormCategoryComponent","getListFormCategory","UnitsModelsModalComponent","UnitModelActions","UnitModelsComponent","getListUnitModels","handlePressSerialNumber","FieldNumberOutlined","enumFormCategory","enumJobForm","UnitFieldsModalComponent","UnitFieldsActions","setFormCategory","setJobForm","loadOption","dataJobForm","listJobForm","SelectFormCategory","SelectJobForm","UnitFieldsComponent","unitFieldsId","setReportIdentificationListData","setPagingReportIdentification","ReportIdentificationComponent","enumHeadDivision","DivisionModalComponent","DivisionActions","SelectEmployees","DivisionComponent","getListDivision","getListEmlpoyee","handlePressDivisionUnit","enumTools","EmployeeToolsModalComponent","EmployeeToolsActions","SelectTools","EmployeeToolsComponent","generateEmployeeToolsReport","newListData","check","drawCell","docCell","section","column","setLineWidth","setFillColor","circle","y","addPage","employeeToolsFormValues","enumUnits","DivisionUnitModalComponent","DivisionUnitActions","SelectUnits","DivisionUnitComponent","getListDivisionUnit","divisionUnitId","StyleSheet","flexDirection","flexGrow","DetailServiceReportComponent","flex","DetailServiceReportContainer","enumCustomer","ModalUnitSerialNumberComponent","UnitSerialNumberActions","UnitSerialNumberComponent","onChangeCustomer","ModalUnitSerialNumberContainer","unitSerialNumberFormValues","selectedtUnitSerialNumber","UnitJobFormsComponent","UnitJobFormsActions","WorkingHoursComponent","workingHoursFormValues","getListWorkingHours","WorkingHoursActions","no_service","total_hours","workingHoursList","employeeNik","employeeName","noService","totalHours","doneDate","exportWorkingHoursReportPdf","Navigation","authenticatedPage","footerImg","TemplateContainer","templating","Login","LoginContainer","NotFoundPage","Admin","AdminContainer","Roles","RolesContainer","JobForms","JobFormsContainer","Branches","BranchContainer","EmployeeList","EmployeesListContainer","EmployeeTools","EmployeeToolsContainer","Division","DivisionContainer","DivisionUnit","DivisionUnitContainer","EditEmployee","EmployeeEditContainer","Dashboard","DashboardContainer","Units","UnitsContainer","UnitModels","UnitModelsContainer","UnitFields","UnitFieldsContainer","UnitJobForms","UnitJobFormsContainer","UnitSerialNumber","UnitSerialNumberContainer","Tools","ToolsContainer","Customers","CustomerContainer","FormCategory","FormCategoryContainer","MachineConfiguration","MachineConfigurationContainer","InternalService","InternalServiceContainer","ExternalService","ExternalServiceContainer","MonitoringEmployee","MonitoringEmployeeContainer","ReportServiceRepair","ReportServiceRepairContainer","ReportEmployee","ReportEmployeeContainer","WorkingHours","WorkingHoursContainer","ListServices","ListServicesContainer","ReportIdentification","ReportIdentificationContainer","DetailService","DetailServiceTransactionContainer","FormWizardIdentification","FormWizardIdentificationContainer","ListIdentification","ListIdentificationContainer","Helmet","titleTemplate","defaultTitle","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","closeOnToastrClick","exact","App","context","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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AAOG,WACtDH,EAAOI,cAAcL,IAGVM,GAAiB,CAC5B,CACEnP,GAAG,aACHoP,MAAO,KACPC,MAAO,UAET,CACErP,GAAG,aACHoP,MAAO,KACPC,MAAO,kBAIEC,GAAa,CACxB,CACEtP,GAAG,SACHoP,MAAO,KACPC,MAAO,WAET,CACErP,GAAG,SACHoP,MAAO,KACPC,MAAO,MAET,CACErP,GAAG,SACHoP,MAAO,KACPC,MAAO,aAIEE,GAAqB,CAChC,CACEvP,GAAG,SACHoP,MAAO,KACPC,MAAO,gBAET,CACErP,GAAG,SACHoP,MAAO,KACPC,MAAO,kBAIEG,GAAe,CAC1B,CACExP,GAAG,WACHoP,MAAO,KACPC,MAAO,YAET,CACErP,GAAG,WACHoP,MAAO,KACPC,MAAO,YAET,CACErP,GAAG,WACHoP,MAAO,KACPC,MAAO,aAIEI,GAAuB,CAClC,CACEzP,GAAG,WACHoP,MAAO,KACPC,MAAO,YAET,CACErP,GAAG,WACHoP,MAAO,KACPC,MAAO,aAET,CACErP,GAAG,WACHoP,MAAO,KACPC,MAAO,YAET,CACErP,GAAG,WACHoP,MAAO,KACPC,MAAO,aAIEK,GAAsB,CACjC,CACE1P,GAAG,WACHoP,MAAO,KACPC,MAAO,WAET,CACErP,GAAG,WACHoP,MAAO,KACPC,MAAO,YAET,CACErP,GAAG,WACHoP,MAAO,KACPC,MAAO,oBAET,CACErP,GAAG,WACHoP,MAAO,KACPC,MAAO,cAIEM,GAA4B,CACvC,CACE3P,GAAG,WACHoP,MAAO,KACPC,MAAO,uBAET,CACErP,GAAG,WACHoP,MAAO,KACPC,MAAO,cAET,CACErP,GAAG,WACHoP,MAAO,KACPC,MAAO,iBAET,CACErP,GAAG,WACHoP,MAAO,KACPC,MAAO,UAsBEO,GAAgB,CAC3B,CACE5P,GAAG,YACHoP,MAAO,OACPC,MAAO,gBAET,CACErP,GAAG,YACHoP,MAAO,QACPC,MAAO,qBAIEQ,GAA2B,CACtC,CAAE7P,GAAG,cAAgBoP,MAAO,KAAMC,MAAO,UACzC,CAAErP,GAAG,cAAgBoP,MAAO,KAAMC,MAAO,gBACzC,CA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","file":"static/js/main.3500c394.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL || \"\",\n  forceRefresh: true,\n});\nexport default history;\n","// import * as ActionAuth from \"../../Auth/Store/AuthAction\";\n// import * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\n\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { toastr } from \"react-redux-toastr\";\n\n// function* getToken() {\n//   return yield select(AuthSelector.Token());\n// }\n\n// export function* getCommonConfigHeader() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n// }\n// export function* getCommonConfigHeaderFormData() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"multipart/form-data\",\n//     },\n//   };\n// }\n\nexport function* handleErrorProcess(action) {\n  let toastMessage;\n\n  if (!action.errorData.response || action.errorData.response === undefined) {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        window.location.reload();\n      },\n      okText: \"Ya\",\n      disableCancel: true,\n    };\n\n    toastr.confirm(\n      \"Koneksi terputus, cek koneksi anda dan dimuat ulang\",\n      toastrConfirmOptions\n    );\n  }\n\n  if (action.errorData.response) {\n    const error = action.errorData;\n    const responseStatus = error?.response.status;\n    if (responseStatus === 401) {\n      // yield put(ActionAuth.renewToken(action));\n      console.log(\"=== Token Expired!\");\n    } else if (responseStatus === 500) {\n      if (error.response.data.ErrorCode === \"4201\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      }\n      if (error.response.data.ErrorCode === \"5100\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      } else {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error.response.data.MessageKey} />\n          </span>\n        );\n      }\n    } else if (responseStatus === 403) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={\"forbiddenError\"} />\n        </span>\n      );\n    } else {\n      try {\n        const dataErr = error.response.data?.Data?.Failures[0]?.ErrorKey;\n        if (dataErr) {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id={dataErr} />\n            </span>\n          );\n        } else {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id=\"unknownError\" />\n            </span>\n          );\n        }\n      } catch (error) {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error} />\n          </span>\n        );\n      }\n    }\n  } else {\n    if (action.errorData.response.data.Message) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={action.errorData.response.data.Message} />\n        </span>\n      );\n    }\n  }\n  if (toastMessage) {\n    toast.error(toastMessage);\n  }\n}\n\nexport function* handleErrorAction() {\n  yield takeEvery(\"HANDLE_ERROR_SAGA\", handleErrorProcess);\n}\n","import { all, fork } from \"redux-saga/effects\";\n// import {\n//   getUserDetailAction,\n//   loginUserAction,\n//   registerUserAction,\n//   updateUserAction,\n// } from \"../../Auth/Saga/AuthSaga\";\nimport { handleErrorAction } from \"../../app/Saga/AppSaga\";\n\nexport default function* () {\n  yield all([\n    fork(handleErrorAction),\n    // fork(registerUserAction),\n    // fork(getUserDetailAction),\n    // fork(loginUserAction),\n    // fork(updateUserAction),\n  ]);\n}\n","// First we need to import axios.js\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\n\n// Next we make an 'instance' of it\nconst ConfigAxios = axios.create({\n  // .. where we make our configurations\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Authorization\",\n  },\n  timeout: 15000,\n});\nConfigAxios.defaults.headers.delete = {\n  \"Content-Type\": \"application/json\",\n};\n\n// Where you would set stuff like your 'Authorization' header, etc ...\n// ConfigAxios.defaults.headers.common[\"Authorization\"] =\n//   \"AUTH TOKEN FROM INSTANCE\";\n\n// Also add/ configure interceptors && all the other cool stuff\nConfigAxios.interceptors.request.use(\n  (requestFulfilled) => {\n    if (requestFulfilled.method === \"get\") {\n      requestFulfilled.data = true;\n    }\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(requestFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-request-fulfilled\",\n        JSON.parse(JSON.stringify(requestFulfilled))\n      );\n    }\n    return Promise.resolve(requestFulfilled);\n  },\n  (requestRejected) => {\n    if (!_.isEmpty(requestRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-request-rejected\",\n          JSON.parse(\n            JSON.stringify(requestRejected.response || requestRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(requestRejected);\n  }\n);\n\nConfigAxios.interceptors.response.use(\n  (responseFulfilled) => {\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(responseFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-response-fulfilled\",\n        JSON.parse(JSON.stringify(responseFulfilled))\n      );\n    }\n    return Promise.resolve(responseFulfilled);\n  },\n  (responseRejected) => {\n    if (responseRejected.response && responseRejected.response.data) {\n      if (responseRejected.response.data.status === 400) {\n        toast.warning(responseRejected.response.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      } else {\n        toast.error(\"Request Timeout!\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n    if (!_.isEmpty(responseRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-response-rejected\",\n          JSON.parse(\n            JSON.stringify(responseRejected.response || responseRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(responseRejected);\n  }\n);\n\nexport default ConfigAxios;\n","import ConfigAxios from \"./ConfigAxios\";\n\nconst Invoke = {};\nconst headersConfigDelete = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  data: {},\n};\n\nInvoke.submitLogin = (data) => {\n  return ConfigAxios.post(\"/login\", data);\n};\n\nInvoke.submitLoginEmployee = (data) => {\n  return ConfigAxios.post(\"/m_auth\", data);\n};\n\nInvoke.getListServices = (page, limit, keyword, type, status, employeeId) => {\n  return ConfigAxios.get(\n    `/services?page=${page}&limit=${limit}&q=${keyword}&type=${type}&status=${status}&employeeId=${employeeId}`\n  );\n};\n\nInvoke.deleteJobServiceById = (jobId) => {\n  return ConfigAxios.delete(`/services/${jobId}`, headersConfigDelete);\n};\n\nInvoke.getOneServices = (jobId) => {\n  return ConfigAxios.get(`/services/${jobId}`);\n};\n\n// === Admin API : ===\nInvoke.getListAdmin = (page, limit, keyword = \"\") => {\n  return ConfigAxios.get(`/admins?page=${page}&limit=${limit}&q=${keyword}`);\n};\n\nInvoke.getAdminById = (adminId) => {\n  return ConfigAxios.get(`/admins/${adminId}`);\n};\n\nInvoke.addAdmin = (data) => {\n  return ConfigAxios.post(\"/admins\", data);\n};\n\nInvoke.updateAdmin = (data) => {\n  return ConfigAxios.put(\"/admins\", data);\n};\n\nInvoke.deleteAdminById = (adminId) => {\n  return ConfigAxios.delete(`/admins/${adminId}`, headersConfigDelete);\n};\n// === End Admin API ===\n\n// === Admin - Roles API : ===\nInvoke.getListAdminRoles = (adminId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${adminId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getAdminRolesById = (customerId) => {\n  return ConfigAxios.get(`/admins/roles${customerId}`);\n};\n\nInvoke.addAdminRoles = (data) => {\n  return ConfigAxios.post(\"/admins/roles\", data);\n};\n\nInvoke.updateAdminRoles = (data) => {\n  return ConfigAxios.put(\"/admins/roles\", data);\n};\n\nInvoke.deleteAdminRolesById = (customerId) => {\n  return ConfigAxios.delete(`/admins/roles${customerId}`);\n};\n// === End Admin - Roles API ===\n\n// === Employee - Roles API : ===\nInvoke.getEmployeeRoles = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\n// === Employee - Tools API : ===\nInvoke.getEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/tools/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.addEmployeeRole = (data) => {\n  return ConfigAxios.post(`/employees/roles`, data);\n};\n\nInvoke.deleteEmployeeRole = (id) => {\n  return ConfigAxios.delete(`/employees/roles/${id}`, headersConfigDelete);\n};\n// === End Employee - Roles API ===\n\n// === Customers API ===\nInvoke.getCustomerList = (page, limit, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/customers?page=${page}&limit=${limit}&q=${keyword}&branchId=${branchId}`\n  );\n};\nInvoke.getCustomerById = (customerId) => {\n  return ConfigAxios.get(`/customers/${customerId}`);\n};\n\nInvoke.addCustomer = (data) => {\n  return ConfigAxios.post(\"/customers\", data);\n};\n\nInvoke.updateCustomer = (data) => {\n  return ConfigAxios.put(\"/customers\", data);\n};\n\nInvoke.deleteCustomerById = (customerId) => {\n  return ConfigAxios.delete(`/customers/${customerId}`, headersConfigDelete);\n};\n// === End Customers API ===\n\n// === Employee API === :\nInvoke.getEmployeeList = (\n  page,\n  limit,\n  keyword,\n  roleId,\n  branchId,\n  divisionId\n) => {\n  return ConfigAxios.get(\n    `/employees?page=${page}&limit=${limit}&q=${keyword}&role_id=${roleId}&branch_id=${branchId}&division_id=${divisionId}`\n  );\n};\n\nInvoke.getEmployeeById = (employeeId) => {\n  return ConfigAxios.get(`/employees/${employeeId}`);\n};\n\nInvoke.addEmployee = (data) => {\n  return ConfigAxios.post(\"/employees\", data);\n};\n\nInvoke.updateEmployee = (data) => {\n  return ConfigAxios.put(\"/employees\", data);\n};\n\nInvoke.deleteEmployeeById = (employeeId) => {\n  return ConfigAxios.delete(`/employees/${employeeId}`, headersConfigDelete);\n};\n// === End employee API ===\n\n// === Employee - Tools API : ===\nInvoke.getListEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getEmployeeToolsById = (employeeId) => {\n  return ConfigAxios.get(`/employees/tools${employeeId}`);\n};\n\nInvoke.addEmployeeTools = (data) => {\n  return ConfigAxios.post(\"/employees/tools\", data);\n};\n\nInvoke.updateEmployeeTools = (data) => {\n  return ConfigAxios.put(\"/employees/tools\", data);\n};\n\nInvoke.deleteEmployeeToolsById = (employeeToolsId) => {\n  return ConfigAxios.delete(\n    `/employees/tools/${employeeToolsId}`,\n    headersConfigDelete\n  );\n};\n// === End Employee - Tools API ===\n\n// === Roles API ===\nInvoke.getListRole = (page, limit) => {\n  return ConfigAxios.get(`/roles?page=${page}&limit=${limit}`);\n};\nInvoke.getRoleById = (customerId) => {\n  return ConfigAxios.get(`/roles/${customerId}`);\n};\n\nInvoke.addRole = (data) => {\n  return ConfigAxios.post(\"/roles\", data);\n};\n\nInvoke.updateRole = (data) => {\n  return ConfigAxios.put(\"/roles\", data);\n};\n\nInvoke.deleteRoleById = (roleId) => {\n  return ConfigAxios.delete(`/roles/${roleId}`, headersConfigDelete);\n};\n// === End Roles API ===\n\n// === Master Province API === :\nInvoke.getProvinceList = (page, limit) => {\n  return ConfigAxios.get(`/provinces?page=${page}&limit=${limit}`);\n};\n// === End Master Province API ===\n\n// === Master Cities API === :\nInvoke.getCityList = (page, limit, provinceId) => {\n  return ConfigAxios.get(\n    `/provinces/cities/${provinceId}?page=${page}&limit=${limit}`\n  );\n};\n// === End Master Cities API ===\n\n// === Dashboard API ===\nInvoke.getDashboardProgressData = (data) => {\n  return ConfigAxios.get(\"/dashboards\", data);\n};\n// === End Dashboard API ===\n\n// === Services API ===\nInvoke.addInternalService = (data) => {\n  return ConfigAxios.post(\"/services\", data);\n};\nInvoke.updateJobService = (data) => {\n  return ConfigAxios.put(\"/services\", data);\n};\nInvoke.setFinishedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/finish/${jobId}`);\n};\nInvoke.setApprovedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/approve/${jobId}`);\n};\nInvoke.setRejectedService = (jobId, payload) => {\n  return ConfigAxios.post(\n    `/m_services/reject/${jobId}?allowReject=true`,\n    payload\n  );\n};\n// === End Service API ===\n\n// Services - Employee API\nInvoke.getServicesEmployee = (jobId, page, limit) => {\n  return ConfigAxios.get(\n    `/services/employees/${jobId}?page=${page}&limit=${limit}`\n  );\n};\nInvoke.addNewEmployeeService = (jobId, payload) => {\n  return ConfigAxios.post(`/services/employees/${jobId}`, payload);\n};\nInvoke.setStatusEmployeeService = (jobId, payload) => {\n  return ConfigAxios.put(\n    `/services/employees/${jobId}`,\n    payload,\n    headersConfigDelete\n  );\n};\n// End Services - Employee API\n\n// === Service - Views API ===\nInvoke.getJobServiceSummary = (jobId, unitId) => {\n  return ConfigAxios.get(\n    `/m_services/summary/${jobId}${unitId ? \"/\" + unitId : \"\"}`\n  );\n};\nInvoke.getJobServiceMedia = (jobId, unitId) => {\n  return ConfigAxios.get(\n    `/services/medias/${jobId}${unitId ? \"/\" + unitId : \"\"}`\n  );\n};\nInvoke.getJobServiceDailies = (jobId, unitId) => {\n  return ConfigAxios.get(`/services/dailies/${jobId}/${unitId}`);\n};\nInvoke.updateJobServiceDailies = (payload) => {\n  return ConfigAxios.put(`/services/dailies`, payload);\n};\nInvoke.getChecklistData = (unitModelId) => {\n  return ConfigAxios.get(`/m_services/checklist/${unitModelId}`);\n};\nInvoke.getRejectedData = (jobId) => {\n  return ConfigAxios.get(`/m_services/reject/${jobId}`);\n};\nInvoke.getJobServiceHistories = (jobId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/services/logs/${jobId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addJobServiceMedia = (payload, jobId, unitId) => {\n  return ConfigAxios.post(\n    `/m_services/media/${jobId}${unitId ? \"/\" + unitId : \"\"}`,\n    payload\n  );\n};\nInvoke.addJobServiceDaily = (payload, jobId) => {\n  return ConfigAxios.post(`/m_services/daily/${jobId}`, payload);\n};\nInvoke.updateSummary = (payload, jobId, unitId) => {\n  return ConfigAxios.put(\n    `/m_services/summary/${jobId}${unitId ? \"/\" + unitId : \"\"}`,\n    payload\n  );\n};\n\n// === End Service Views ===\n\n// === Master Unit API === :\nInvoke.getUnitList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/units?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addUnit = (payload) => {\n  return ConfigAxios.post(`/units`, payload);\n};\nInvoke.updateUnit = (payload) => {\n  return ConfigAxios.put(`/units`, payload);\n};\nInvoke.deleteUnitById = (unitId) => {\n  return ConfigAxios.delete(`units/${unitId}`, headersConfigDelete);\n};\n// === End Master Unit API ===\n\n// === Master unit-model API === :\nInvoke.getListUnitModel = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/models/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addUnitSerialNumber = (payload, unitModelId) => {\n  return ConfigAxios.post(`/units/serial/${unitModelId}`, payload);\n};\nInvoke.updateUnitSerialNumber = (payload, unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.put(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    payload\n  );\n};\nInvoke.deleteUnitSerialNumber = (unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.delete(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    headersConfigDelete\n  );\n};\nInvoke.getUnitSerialNumber = (\n  page,\n  limit,\n  keyword,\n  unitModelId,\n  customerId\n) => {\n  return ConfigAxios.get(\n    `/units/serial/${unitModelId}?page=${page}&limit=${limit}&q=${keyword}&customerId=${customerId}`\n  );\n};\nInvoke.addUnitModel = (payload) => {\n  return ConfigAxios.post(`/units/models`, payload);\n};\nInvoke.updateUnitModel = (payload) => {\n  return ConfigAxios.put(`/units/models`, payload);\n};\nInvoke.deleteUnitModelById = (unitModelId) => {\n  return ConfigAxios.delete(`units/models/${unitModelId}`, headersConfigDelete);\n};\n// === End Master Unit-Model API ===\n\n// === Master unit-fields API === :\nInvoke.getListUnitFields = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/fields/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.getListUnitJobForms = (unitId, jobFormId) => {\n  return ConfigAxios.get(`/units/job_forms/${unitId}?job_form_id=${jobFormId}`);\n};\nInvoke.addUnitFields = (payload) => {\n  return ConfigAxios.post(`/units/fields`, payload);\n};\nInvoke.updateUnitFields = (payload) => {\n  return ConfigAxios.put(`/units/fields`, payload);\n};\nInvoke.deleteUnitFieldsById = (unitfieldsId) => {\n  return ConfigAxios.delete(\n    `units/fields/${unitfieldsId}`,\n    headersConfigDelete\n  );\n};\n// === End Master Unit-Model API ===\n\n// === Master Job-Form API === :\nInvoke.getListJobForm = (page, limit, keyowrd) => {\n  return ConfigAxios.get(`job_forms?page=${page}&limit=${limit}&q=${keyowrd}`);\n};\nInvoke.addJobForms = (payload) => {\n  return ConfigAxios.post(`job_forms`, payload);\n};\nInvoke.updateJobForms = (payload) => {\n  return ConfigAxios.put(`job_forms`, payload);\n};\nInvoke.deleteJobForms = (jobFormsId) => {\n  return ConfigAxios.delete(`job_forms/${jobFormsId}`, headersConfigDelete);\n};\n// === End Job-Form API ===\n\n// === Master Branch API === :\nInvoke.getListBranch = (page, limit, keyword) => {\n  return ConfigAxios.get(`/branches?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.deleteBranchById = (branchId) => {\n  return ConfigAxios.delete(`/branches/${branchId}`, headersConfigDelete);\n};\nInvoke.addBranch = (payload) => {\n  return ConfigAxios.post(`/branches`, payload);\n};\nInvoke.updateBranch = (payload) => {\n  return ConfigAxios.put(`/branches`, payload);\n};\n// === End Branch API ===\n\n// === Master Menu API === :\nInvoke.getListMenu = (page, limit) => {\n  return ConfigAxios.get(`/menus?page=${page}&limit=${limit}`);\n};\n// === End Menu API ===\n\n// === Master Menu - Roles API === :\nInvoke.addMenuRole = (payload) => {\n  return ConfigAxios.post(`/menus/roles`, payload);\n};\n\nInvoke.getMenuByRoleId = (roleId) => {\n  return ConfigAxios.get(`/menus/menu_by_role/${roleId}`);\n};\n\nInvoke.deleteMenuByMenuRoleId = (menuRoleId) => {\n  return ConfigAxios.delete(`menus/roles/${menuRoleId}`, headersConfigDelete);\n};\n// === End Menu - Roles API ===\n\n// === Master Engines API === :\nInvoke.getListEngine = (page, limit, keyword) => {\n  return ConfigAxios.get(`/engines?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addEngine = (payload) => {\n  return ConfigAxios.post(`/engines`, payload);\n};\nInvoke.updateEngine = (payload) => {\n  return ConfigAxios.put(`/engines`, payload);\n};\nInvoke.deleteEngine = (machineId) => {\n  return ConfigAxios.delete(`/engines/${machineId}`, headersConfigDelete);\n};\n// === End Engines API ===\n\n// === Master Tools API === :\nInvoke.getListTools = (page, limit, keyword) => {\n  return ConfigAxios.get(`/tools?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addTool = (payload) => {\n  return ConfigAxios.post(`/tools`, payload);\n};\nInvoke.updateTool = (payload) => {\n  return ConfigAxios.put(`/tools`, payload);\n};\nInvoke.deleteTool = (toolId) => {\n  return ConfigAxios.delete(`/tools/${toolId}`, headersConfigDelete);\n};\n// === End Tools API ===\n\n// === Master FormCategory API === :\nInvoke.getFormCategory = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/category_forms?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addFormCategory = (payload) => {\n  return ConfigAxios.post(`/category_forms`, payload);\n};\nInvoke.updateFormCategory = (payload) => {\n  return ConfigAxios.put(`/category_forms`, payload);\n};\nInvoke.deleteFormCategory = (categoryFormId) => {\n  return ConfigAxios.delete(\n    `/category_forms/${categoryFormId}`,\n    headersConfigDelete\n  );\n};\n// === End FormCategory API ===\n\n// === Master Identification API === :\nInvoke.getIdentificationList = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/identifications?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\nInvoke.addIdentification = (payload) => {\n  return ConfigAxios.post(`/identifications`, payload);\n};\n\nInvoke.updateIdentificationMilling = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/milling\", payload);\n};\n\nInvoke.updateIdentificationRegular = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/regular\", payload);\n};\n\nInvoke.deleteIdentificationById = (identificationId) => {\n  return ConfigAxios.delete(\n    `/identifications/${identificationId}`,\n    headersConfigDelete\n  );\n};\n\n// === Master Dvision API === :\nInvoke.getDivisionList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/divisions?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addDivision = (payload) => {\n  return ConfigAxios.post(`/divisions`, payload);\n};\nInvoke.updateDivision = (payload) => {\n  return ConfigAxios.put(`/divisions`, payload);\n};\nInvoke.deleteDivision = (divisionId) => {\n  return ConfigAxios.delete(`/divisions/${divisionId}`, headersConfigDelete);\n};\n\n// === Master Dvision - Unit API === :\nInvoke.getDivisionUnitList = (divisionId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/units/divisions/${divisionId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addDivisionUnit = (payload) => {\n  return ConfigAxios.post(`/units/divisions`, payload);\n};\n\n// Monitoring Employee\nInvoke.getReportMonitoringEmployee = (\n  page,\n  limit,\n  from,\n  until,\n  type = \"all\",\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/monitoring?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&type=${type}&q=${keyword}`\n  );\n};\n\n// Report Service Repair\nInvoke.getReportServiceRepair = (\n  page,\n  limit,\n  from,\n  until,\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/report_services?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Report Employee\nInvoke.getReportEmployee = (page, limit, from, until, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/report/report_employee?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Working Hours\nInvoke.getWorkingHours = (page, limit, from, until, keyword) => {\n  return ConfigAxios.get(\n    `/services/monitor/hour?startDate=${from}&endDate=${until}&page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\n// Download pdf from server\nInvoke.getTransactionPdfUrl = (jobId) => {\n  return ConfigAxios.get(`/services/print_job/${jobId}`);\n};\n// Download pdf to BLOB\nInvoke.downloadPdfFromUrl = (url) => {\n  return ConfigAxios.get(url, { responseType: \"blob\" });\n};\n\nexport default Invoke;\n","import { store } from \"../../../app/ConfigureStore\";\n\nexport const PROCESS_GLOBAL_LOADING = \"PROCESS_GLOBAL_LOADING\";\nexport const PROCESS_FORM_GLOBAL_LOADING = \"PROCESS_FORM_GLOBAL_LOADING\";\nexport const SHOW_GLOBAL_MODAL = \"SHOW_GLOBAL_MODAL\";\nexport const RESET_ALL_LOADING = \"RESET_ALL_LOADING\";\n\nexport const setGlobalLoading = (payload) => {\n  return {\n    type: PROCESS_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const setGlobalModal = (payload) => {\n  return {\n    type: SHOW_GLOBAL_MODAL,\n    payload,\n  };\n};\n\nexport const setGlobalFormLoading = (payload) => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const resetAllProcessLoading = () => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n  };\n};\n\nexport const resetAllGlobalLoadingProcess = () => {\n  const { dispatch } = store;\n  dispatch(resetAllProcessLoading());\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport history from \"../../../app/History\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\n\nexport const SET_ACCESS_TOKEN_DATA = \"SET_ACCESS_TOKEN_DATA\";\nexport const SET_USER_DETAIL_DATA = \"SET_USER_DETAIL_DATA\";\nexport const SET_ERROR_LOGIN = \"SET_ERROR_LOGIN\";\n\nexport const setAccessToken = (payload) => {\n  return {\n    type: SET_ACCESS_TOKEN_DATA,\n    payload,\n  };\n};\nexport const setUserDetail = (payload) => {\n  return {\n    type: SET_USER_DETAIL_DATA,\n    payload,\n  };\n};\nexport const setErrorLogin = (payload) => {\n  return {\n    type: SET_ERROR_LOGIN,\n    payload,\n  };\n};\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\",\n  };\n};\n\nexport const doLogout = (dispatch) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      dispatch(logout());\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah Anda Yakin Ingin Keluar?\", toastrConfirmOptions);\n};\n\nconst appendItem = async (data) =>\n  new Promise((resolve, reject) => {\n    store.dispatch(setAccessToken(data.data.callback.accessToken));\n    delete data.data.callback.accessToken;\n    store.dispatch(setUserDetail(data.data.callback));\n    resolve();\n  });\n\nexport const handleSubmitLogin = async (values) => {\n  const { username, password } = values;\n  const payload = { username, password };\n\n  store.dispatch(setGlobalLoading(true));\n\n  Invoke.submitLogin(payload)\n    .then((data) => {\n      appendItem(data).then(() => {\n        setTimeout(() => {\n          history.push(\"/dashboard\");\n          window.location.reload();\n          store.dispatch(setGlobalLoading(false));\n        }, 5000);\n      });\n    })\n    .catch((onRejected) => {\n      store.dispatch(setGlobalLoading(false));\n      if (onRejected) {\n        const status = onRejected?.response?.data?.status;\n        const dataResponseRejected = onRejected?.response?.data ?? null;\n        if (dataResponseRejected) {\n          if (status === 400) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          } else if (status === 401) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          }\n        }\n      }\n    });\n};\n","import {\n  SET_ACCESS_TOKEN_DATA,\n  SET_USER_DETAIL_DATA,\n  SET_ERROR_LOGIN,\n} from \"./AuthAction\";\n\nexport const initialState = {\n  accessToken: \"\",\n  userDetail: null,\n  avatar: null,\n  error: {\n    status: false,\n    message: \"\",\n  },\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ACCESS_TOKEN_DATA:\n      newState.accessToken = action.payload;\n      return { ...newState };\n\n    case SET_USER_DETAIL_DATA:\n      newState.userDetail = action.payload;\n      return { ...newState };\n\n    case SET_ERROR_LOGIN:\n      newState.error = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import React from \"react\";\nimport history from \"./History\";\n\nexport const navigate = (path) => {\n  history.push(path);\n  // window.location.reload();\n};\n\nexport const getIndex = (currentpage, limit) => {\n  const pageNumbers = [];\n  const startIndex = currentpage * limit - limit + 1;\n  const endIndex = startIndex + limit;\n  for (let i = startIndex === 0 ? 1 : startIndex; i <= endIndex; i++) {\n    pageNumbers.push(i);\n  }\n  return pageNumbers;\n};\n\nexport const getBase64 = (img, callback) => {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\n\nexport const SelectLocation = [\n  {\n    id: `location-1`,\n    value: \"L1\",\n    label: \"Cabang\",\n  },\n  {\n    id: `location-2`,\n    value: \"L2\",\n    label: \"Depo PT Rutan\",\n  },\n];\n\nexport const SelectType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Project\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"PB\",\n  },\n  {\n    id: `type-3`,\n    value: \"T3\",\n    label: \"Komersil\",\n  },\n];\n\nexport const SelectInstanceType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"Kelompok Tani\",\n  },\n];\n\nexport const SelectStatus = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Finished\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusServices = [\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Completed\",\n  },\n  {\n    id: `status-2`,\n    value: \"S4\",\n    label: \"Approved\",\n  },\n  {\n    id: `status-3`,\n    value: \"S5\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusMilling = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n  {\n    id: `status-3`,\n    value: \"S4\",\n    label: \"Lain-lain\",\n  },\n];\n\nexport const SelectInstanceTypeRegular = [\n  {\n    id: `status-1`,\n    value: \"T1\",\n    label: \"Kepemilikan Pribadi\",\n  },\n  {\n    id: `status-2`,\n    value: \"T2\",\n    label: \"Perusahaan\",\n  },\n  {\n    id: `status-3`,\n    value: \"T3\",\n    label: \"Kelompok Tani\",\n  },\n  {\n    id: `status-3`,\n    value: \"T4\",\n    label: \"Dinas\",\n  },\n];\n\nexport const SelectStatusIdentification = [\n  {\n    id: `status-identification-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-identification-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-identification-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n];\n\nexport const SelectMilling = [\n  {\n    id: `milling-1`,\n    value: \"true\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `milling-2`,\n    value: \"false\",\n    label: \"non-Penggilingan\",\n  },\n];\n\nexport const enumTypeInternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T4\", label: \"Training\" },\n];\n\nexport const enumTypeExternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Training\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modification\" },\n];\n\nexport const enumWarranty = [\n  { id: `enum-warranty-1`, value: true, label: \"Warranty\" },\n  { id: `enum-warranty-2`, value: false, label: \"No Warranty\" },\n];\n\nexport const enumTypeActivities = [\n  { id: `enum-activity-1`, value: \"Perjalanan\", label: \"Perjalanan\" },\n  { id: `enum-activity-2`, value: \"Pekerjaan\", label: \"Pekerjaan\" },\n  { id: `enum-activity-3`, value: \"Istirahat\", label: \"Istirahat\" },\n  { id: `enum-activity-4`, value: \"Perjalanan Pulang\", label: \"Perjalanan Pulang\" },\n];\n\nexport const warrantyMonths = () => {\n  const warrantyMonths = [];\n  for (let i = 0; i <= 24; i++) {\n    warrantyMonths.push({\n      id: `enum-warranty-moths-${i}`,\n      value: i.toString(),\n      label: `${i} bulan`,\n    });\n  }\n  return warrantyMonths;\n};\n\nexport const getProvinceEnum = (data) => {\n  const SelectProvince = [];\n  data.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectProvince;\n};\n\nexport const getCitiesEnum = (data) => {\n  const SelectCities = [];\n  data.map((item, index) => {\n    SelectCities.push({\n      id: `city-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectCities;\n};\n\nexport const getRolesEnum = (data) => {\n  const SelectRoles = [];\n  data.map((item, index) => {\n    SelectRoles.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectRoles;\n};\n\nexport const enumSelectGenerator = (data, enumName) => {\n  const SelectEnum = [];\n  data.map((item, index) => {\n    SelectEnum.push({\n      id: `${enumName}-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectEnum;\n};\n\nexport const getUnitModelEnum = (data) => {\n  const SelectUnitModel = [];\n  data.map((item, index) => {\n    SelectUnitModel.push({\n      id: `unit-model-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectUnitModel;\n};\n\nexport const getMachineConf = (data) => {\n  const SelectMachines = [];\n  data.map((item, index) => {\n    SelectMachines.push({\n      id: item.id,\n      name: item.name.replace(/ /g, \"_\").toLowerCase(),\n      type: item.name,\n    });\n  });\n  return SelectMachines;\n};\n\nexport const getStatus = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S2\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Completed\", color: \"#87d068\" };\n      break;\n    case \"S4\":\n      statusItem = { value: \"Approved\", color: \"#87d068\" };\n      break;\n    case \"S5\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\nexport const getStatusWorkingHours = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S1\":\n      statusItem = { value: \"Draft\", color: \"#fff566\" };\n      break;\n    case \"S2\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Completed\", color: \"#95de64\" };\n      break;\n    case \"S4\":\n      statusItem = { value: \"Approved\", color: \"#95de64\" };\n      break;\n    case \"S5\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\n// This list not used\nexport const machineConf = [\n  {\n    name: \"dryer\",\n    type: \"dryer\",\n  },\n  {\n    name: \"cleaner\",\n    type: \"cleaner\",\n  },\n  {\n    name: \"head_husker\",\n    type: \"head husker\",\n  },\n  {\n    name: \"body_husker\",\n    type: \"body husker\",\n  },\n  {\n    name: \"separator\",\n    type: \"separator\",\n  },\n  {\n    name: \"destoner\",\n    type: \"destoner\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n\n  {\n    name: \"vertikal_abrasive\",\n    type: \"vertikal abrasive\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n  {\n    name: \"friction_abrasive\",\n    type: \"friction abrasive\",\n  },\n  {\n    name: \"rotary_rice_sifter\",\n    type: \"rotary rice sifter\",\n  },\n  {\n    name: \"non_rotary_rice_sifter\",\n    type: \"non rotary rice sifter\",\n  },\n\n  {\n    name: \"length_grader\",\n    type: \"length grader\",\n  },\n  {\n    name: \"milling_meter\",\n    type: \"milling meter\",\n  },\n  {\n    name: \"scale\",\n    type: \"scale\",\n  },\n];\n\nexport const monitoringType = {\n  all: \"all\",\n  external: \"T1\",\n  internal: \"T2\",\n  loss: \"T3\",\n};\n\nexport const categoryServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n];\n\nexport const categoryMonitoringServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n  {\n    name: \"Loss\",\n    status: \"error\",\n  },\n];\n\nexport const enumTypeMonitoringEmployee = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Pelatihan\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modifikasi\" },\n];\n\nexport const getBase64Image = (url) => {\n  const img = new Image();\n  img.setAttribute(\"crossOrigin\", \"anonymous\");\n  img.onload = () => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    const dataURL = canvas.toDataURL(\"image/png\");\n    console.log(dataURL);\n  };\n  img.src = url;\n};\n\n/**\n * This function calculate the width of a string based on its length\n * @param {String} text\n * @param {String} font\n */\nconst getTextWidth = (text, font = \"14px -apple-system\") => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n  return Math.round(metrics.width + 80);\n};\n\n/**\n * This function calculates the width of each column based in all CELL VALUES\n * @param {Array} columns\n * @param {Array} source\n * @param {Number} maxWidthPerCell\n */\nexport const calculateColumnsWidth = (\n  columns,\n  source,\n  maxWidthPerCell = 500\n) => {\n  const columnsParsed = JSON.parse(JSON.stringify(columns));\n\n  // First we calculate the width for each column\n  // The column width is based on its string length\n\n  const columnsWithWidth = columnsParsed.map((column) =>\n    Object.assign(column, {\n      width: getTextWidth(column.title),\n    })\n  );\n\n  // Since we have a minimum width (column's width already calculated),\n  // now we are going to verify if the cell value is bigger\n  // than the column width which is already set\n\n  source.map((entry) => {\n    columnsWithWidth.map((column, indexColumn) => {\n      const columnWidth = column.width;\n      const cellValue = Object.values(entry)[indexColumn];\n\n      // Get the string width based on chars length\n      let cellWidth = getTextWidth(cellValue);\n\n      // Verify if the cell value is smaller than column's width\n      if (cellWidth < columnWidth) cellWidth = columnWidth;\n\n      // Verify if the cell value width is bigger than our max width flag\n      if (cellWidth > maxWidthPerCell) cellWidth = maxWidthPerCell;\n\n      // Update the column width\n      columnsWithWidth[indexColumn].width = cellWidth;\n    });\n  });\n\n  // Sum of all columns width to determine the table max width\n  const tableWidth = columnsWithWidth\n    .map((column) => column.width)\n    .reduce((a, b) => {\n      return a + b;\n    });\n\n  return {\n    columns: columnsWithWidth,\n    source,\n    tableWidth,\n  };\n};\n\nexport const isBlockedRoleDetailService = (role) => {\n  let isBlocked;\n  switch (role) {\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\n// Check if roles is blocked on menu list service:\nexport const isBlockedRoleListService = (role) => {\n  let isBlocked;\n  switch (role) {\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    case \"7cf419b8-9275-479b-846a-cda27aa173eb\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\n// Check if roles is blocked on menu customer:\nexport const isBlockedRoleCustomer = (role) => {\n  let isBlocked = false;\n  switch (role) {\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"7cf419b8-9275-479b-846a-cda27aa173eb\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { toastr } from \"react-redux-toastr\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toast } from \"react-toastify\";\nimport { change } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ROLES = \"SET_LIST_ROLES\";\nexport const SET_SELECTED_ROLE_ID = \"SET_SELECTED_ROLE_ID\";\nexport const SET_SELECTED_ROLE_DETAIL = \"SET_SELECTED_ROLE_DETAIL\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const RESET_STATE = \"RESET_STATE\";\nexport const SET_SELECTED_ROLE_MENU = \"SET_SELECTED_ROLE_MENU\";\n\nexport const resetState = (payload) => {\n  return {\n    type: RESET_STATE,\n    payload,\n  };\n};\n\nexport const setListRoles = (payload) => {\n  return {\n    type: SET_LIST_ROLES,\n    payload,\n  };\n};\n\nexport const setSelectedRoleId = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_ID,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedRoleDetail = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_DETAIL,\n    payload,\n  };\n};\n\nexport const setSelectedRoleMenu = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_MENU,\n    payload,\n  };\n};\n\nexport const showToast = (message, type) => {\n  switch (type) {\n    case \"success\":\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n\n    case \"error\":\n      toast.error(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n    default:\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n  }\n};\n\nexport const getListRolesRequested = async () => {\n  const { data } = await Invoke.getListRole(1, 100);\n  store.dispatch(setListRoles(data.callback.data));\n};\n\nexport const mapDetailRoleToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().roles.selectedRoleDetail;\n  dispatch(change(\"editRolesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editRolesForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getMenuByRolesId = async (roleId) => {\n  const { data } = await Invoke.getMenuByRoleId(roleId);\n  let subItem = [];\n  data.callback.map((item, index) => {\n    subItem.push(item.menu_id);\n  });\n  store.dispatch(setSelectedRoleMenu(subItem));\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editRolesForm\", `id`, \"\"));\n  dispatch(change(\"editRolesForm\", `description`, \"\"));\n};\n\nconst doAddRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await Invoke.addRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteMenuRoleProcess = async (menuId, menuListApi) => {\n  const [menu] = menuListApi.filter((x) => x.menu_id === menuId);\n  await Invoke.deleteMenuByMenuRoleId(menu.id);\n};\n\nconst doAddMenuRoleProcess = async (menuId, roleId) => {\n  const payload = {\n    menu_id: menuId,\n    role_id: roleId,\n    view: true,\n    insert: true,\n    update: true,\n    delete: false,\n  };\n  await Invoke.addMenuRole(payload);\n};\n\nconst doSaveMenuRole = async (newMenuSelected) => {\n  const { getState } = store;\n  const currentMenuSelected = getState().roles.selectedRoleMenu;\n  const selectedRoleId = getState().roles.selectedRoleId;\n  const { data } = await Invoke.getMenuByRoleId(selectedRoleId);\n  const menuListApi = data.callback;\n\n  if (currentMenuSelected.length > 0) {\n    await currentMenuSelected.map((item, index) => {\n      doDeleteMenuRoleProcess(item, menuListApi);\n    });\n    setTimeout(() => {\n      newMenuSelected.map((newMenu, index) => {\n        doAddMenuRoleProcess(newMenu, selectedRoleId);\n      });\n    }, 1000);\n  } else {\n    newMenuSelected.map((item, index) => {\n      doAddMenuRoleProcess(item, selectedRoleId);\n    });\n  }\n};\n\nconst doEditRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.id = values.id;\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await doSaveMenuRole(menuSelected);\n    await Invoke.updateRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteRoleProcess = async (roleId) => {\n  try {\n    await Invoke.deleteRoleById(roleId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListRolesRequested();\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteRoleRequested = async (roleId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteRoleProcess(roleId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const saveRoleRequested = async (type, values, menuSelected) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddRoleProcess(values, menuSelected);\n      } else {\n        doEditRoleProcess(values, menuSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { change } from \"redux-form\";\nimport moment from \"moment\";\nimport { setSelectedJobService } from \"../../ListServices/Store/ListServicesActions\";\nimport fileDownload from \"js-file-download\";\n\nexport const SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA =\n  \"SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA\";\n\nexport const SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_GROUPING_SUMMARY_DATA = \"SET_GROUPING_SUMMARY_DATA\";\n\nexport const SET_SINGLE_SUMMARY_DATA = \"SET_SINGLE_SUMMARY_DATA\";\n\nexport const SET_GROUPING_CHECKLIST_DATA = \"SET_GROUPING_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_SUMMARY_DATA =\n  \"SET_SELECTED_SERVICES_SUMMARY_DATA\";\n\nexport const SET_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_SELECTED_SERVICES_DAILIES_DATA =\n  \"SET_SELECTED_SERVICES_DAILIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_HISTORIES_DATA =\n  \"SET_SELECTED_SERVICES_HISTORIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_CHECKLIST_DATA =\n  \"SET_SELECTED_SERVICES_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_REJECTED_DATA =\n  \"SET_SELECTED_SERVICES_REJECTED_DATA\";\n\nexport const SET_EDIT_TRANSACTION_MODAL = \"SET_EDIT_TRANSACTION_MODAL\";\n\nexport const SET_REJECTIONS_MODAL = \"SET_REJECTIONS_MODAL\";\n\nexport const SET_EDIT_DAILIES_MODAL = \"SET_EDIT_DAILIES_MODAL\";\n\nexport const SET_SELECTED_EDIT_DAILIES_DATA = \"SET_SELECTED_EDIT_DAILIES_DATA\";\n\nexport const SET_SELECTED_UNIT = \"SET_SELECTED_UNIT\";\n\nexport const RESET_DETAIL_SERVICE = \"RESET_DETAIL_SERVICE\";\n\nexport const SET_INSERT_MEDIA_MODAL = \"SET_INSERT_MEDIA_MODAL\";\n\nexport const SET_TYPE_FORM_DAILIES = \"SET_TYPE_FORM_DAILIES\";\n\nexport const SET_EDIT_SUMMARY_MODAL = \"SET_EDIT_SUMMARY_MODAL\";\n\nexport const setRejectionsModal = (payload) => {\n  return {\n    type: SET_REJECTIONS_MODAL,\n    payload,\n  };\n};\n\nexport const resetDetailService = () => {\n  return {\n    type: RESET_DETAIL_SERVICE,\n  };\n};\n\nexport const setSelectedUnit = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT,\n    payload,\n  };\n};\n\nexport const setEditTransactionModal = (payload) => {\n  return {\n    type: SET_EDIT_TRANSACTION_MODAL,\n    payload,\n  };\n};\n\nexport const setGroupingSelectedServicesMediaData = (payload) => {\n  return {\n    type: SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingSummaryData = (payload) => {\n  return {\n    type: SET_GROUPING_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setSingleSummaryData = (payload) => {\n  return {\n    type: SET_SINGLE_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingChecklistData = (payload) => {\n  return {\n    type: SET_GROUPING_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setEditDailiesModal = (payload) => {\n  return {\n    type: SET_EDIT_DAILIES_MODAL,\n    payload,\n  };\n};\n\nexport const setEditSummaryModal = (payload) => {\n  return {\n    type: SET_EDIT_SUMMARY_MODAL,\n    payload,\n  };\n};\n\nexport const setInsertMediaModal = (payload) => {\n  return {\n    type: SET_INSERT_MEDIA_MODAL,\n    payload,\n  };\n};\n\nexport const setSelectedServicesEmployeeListData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServicesChecklisttData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedSummaryData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceMediaData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceHistoriesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_HISTORIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceRejectedData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_REJECTED_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEditDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_EDIT_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const setTypeFormDailies = (payload) => {\n  return {\n    type: SET_TYPE_FORM_DAILIES,\n    payload,\n  };\n};\n\nexport const getJobServiceEmployeeList = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getServicesEmployee(jobId, 1, 100);\n  const serviceEmployeeList = data.callback.data;\n\n  const results = Promise.all(\n    serviceEmployeeList.map(async (item, index) => {\n      let subIitem = {};\n      subIitem.active = item.active;\n      subIitem.employee_service_id = item.id;\n      const employee = await Invoke.getEmployeeById(item.employee_id);\n      subIitem = { ...subIitem, ...employee.data.callback };\n      return subIitem;\n    })\n  );\n  dispatch(setSelectedServicesEmployeeListData(await results));\n};\n\nexport const getJobServiceSummary = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceSummary(jobId, unitId);\n    dispatch(setSelectedSummaryData(data.callback));\n  } catch (error) {\n    dispatch(setSelectedSummaryData({}));\n  }\n};\n\nexport const getJobServiceMedia = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceMedia(jobId, unitId);\n    dispatch(setSelectedServiceMediaData(data.callback.data));\n  } catch (error) {\n    dispatch(setSelectedServiceMediaData([]));\n  }\n};\n\nexport const getJobServiceDailies = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceDailies(jobId, unitId);\n    dispatch(\n      setSelectedServiceDailiesData(data.callback.data || data.callback)\n    );\n  } catch (error) {\n    dispatch(setSelectedServiceDailiesData([]));\n  }\n};\n\nexport const getJobServiceHistories = async (jobId, keyword = \"\") => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getJobServiceHistories(jobId, 1, 100, keyword);\n  dispatch(setSelectedServiceHistoriesData(data.callback.logs));\n};\n\nexport const getJobServiceRejections = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getRejectedData(jobId);\n  dispatch(setSelectedServiceRejectedData(data.callback));\n};\n\nexport const getChecklistData = async (unitModelId) => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getChecklistData(unitModelId);\n    dispatch(setSelectedServicesChecklisttData(data.callback));\n  } catch (e) {\n    console.log(e);\n    dispatch(setSelectedServicesChecklisttData([]));\n  }\n};\n\nexport const handleAddNewEmployeeService = async (jobId, employeeId) => {\n  const { dispatch } = store;\n  try {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.active = \"true\";\n    await Invoke.addNewEmployeeService(jobId, payload);\n    setTimeout(() => {\n      dispatch(ComponentActions.setGlobalModal(false));\n      dispatch(ComponentActions.setGlobalLoading(false));\n      getJobServiceEmployeeList(jobId);\n    }, 500);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nexport const setStatusEmployee = async (\n  jobId,\n  employeeServiceId,\n  employeeId,\n  isActive\n) => {\n  const payload = {};\n  payload.id = employeeServiceId;\n  payload.employee_id = employeeId;\n  payload.active = isActive;\n  await Invoke.setStatusEmployeeService(jobId, payload);\n  setTimeout(() => {\n    getJobServiceEmployeeList(jobId);\n  }, 500);\n};\n\nconst doRejectServiceProcess = async (jobId, values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.reason = values.reason;\n    await Invoke.setRejectedService(jobId, payload);\n    showToast(\"Berhasil melakukan reject\", \"success\");\n    navigate(\"/list_service\");\n    dispatch(setRejectionsModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setRejectionsModal(false));\n  }\n};\n\nconst doEditServiceProcess = async (values) => {\n  const { dispatch } = store;\n\n  const warranty = values.warranty.split(\"|\");\n  const warrantyYears = values.warrantyYears.split(\"|\");\n  const warrantyMonths = values.warrantyMonths.split(\"|\");\n\n  const payload = {};\n  payload.id = values.id;\n  payload.start = moment(values.startDate).format(\"YYYY-MM-DD\");\n  payload.due = moment(values.dueDate).format(\"YYYY-MM-DD\");\n  payload.job_perform = values.jobPerform;\n  payload.warranty = warranty[0];\n  payload.warranty_month = warrantyMonths[0] ?? 0;\n  payload.warranty_year = warrantyYears[0] ?? 0;\n\n  try {\n    await Invoke.updateJobService(payload);\n    showToast(\"Data berhasil disimpan\", \"success\");\n\n    const { data } = await Invoke.getOneServices(values.id);\n    await store.dispatch(\n      setSelectedJobService({ ...data.callback, units: values.unit_models })\n    );\n    dispatch(setEditTransactionModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nexport const handlePressEditRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditServiceProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah anda yakin menyimpan data ini?\", toastrConfirmOptions);\n};\n\nexport const handlePressRejectedRequested = async (jobId, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doRejectServiceProcess(jobId, values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin me me-reject data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nconst doEditDailiesProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n  const typeForm = getState().detailService.typeFormDailies;\n\n  const payload = {};\n  const insertPayload = {};\n  const splitActivity = values.activityType.split(\"|\") ?? \"\";\n  const timeStart = values.timeStartEnd[0]\n    ? moment(values.timeStartEnd[0]).format(\"HH:mm:ss\")\n    : moment().format(\"HH:mm:ss\");\n  const timeEnd = values.timeStartEnd[1]\n    ? moment(values.timeStartEnd[1]).format(\"HH:mm:ss\")\n    : moment().format(\"HH:mm:ss\");\n\n  const dailyStart = `${moment(values.startDate).format(\n    \"YYYY-MM-DD\"\n  )} ${timeStart}`;\n\n  const dailyEnd = `${moment(values.endDate).format(\"YYYY-MM-DD\")} ${timeEnd}`;\n\n  payload.id = values.id;\n  payload.title = values.title ?? \"\";\n  payload.daily_start = dailyStart;\n  payload.daily_end = dailyEnd;\n  payload.description = values.description ?? \"\";\n\n  insertPayload.title = values.title ?? \"\";\n  insertPayload.daily_start = dailyEnd;\n  insertPayload.daily_end = dailyStart;\n  insertPayload.description = values.description ?? \"\";\n  insertPayload.type = splitActivity[0] ?? \"none\";\n\n  try {\n    if (typeForm === \"add\") {\n      await Invoke.addJobServiceDaily(insertPayload, dataService.id);\n    } else {\n      await Invoke.updateJobServiceDailies(payload);\n    }\n\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    await getJobServiceDailies(dataService.id);\n    dispatch(setEditDailiesModal(false));\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nconst doEditSummaryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const payload = {};\n\n  payload.summary = values.summary ?? \"\";\n\n  if (dataService.is_external) {\n    try {\n      await Invoke.updateSummary(payload, dataService.id, values.unitId);\n      showToast(\"Berhasil menyimpan data\", \"success\");\n      dispatch(setEditSummaryModal(false));\n      // Call function to referesh summary unit group\n      getUnitSummary((res) => {});\n    } catch (error) {\n      showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n      dispatch(setEditSummaryModal(false));\n    }\n  } else {\n    try {\n      await Invoke.updateSummary(payload, dataService.id, null);\n      showToast(\"Berhasil menyimpan data\", \"success\");\n      dispatch(setEditSummaryModal(false));\n      // Call function to referesh summary unit single\n      getUnitSummary((res) => {});\n    } catch (error) {\n      showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n      dispatch(setEditSummaryModal(false));\n    }\n  }\n};\n\nconst doAddSummaryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const payload = {};\n\n  payload.summary = values.summary ?? \"\";\n\n  try {\n    await Invoke.updateSummary(payload, dataService.id, null);\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    dispatch(setEditSummaryModal(false));\n    // Call function to referesh summary unit group\n    getUnitSummary((res) => {});\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditSummaryModal(false));\n  }\n};\n\nexport const handlePressEditDailiesRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditDailiesProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handlePressEditSummaryRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (values.type === \"NEW\") {\n        doAddSummaryProcess(values);\n      } else {\n        doEditSummaryProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nconst doInsertMedia = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  dispatch(ComponentActions.setGlobalLoading(true));\n\n  const payload = {};\n\n  const splitUnit = values.unit ? values.unit.split(\"|\") : \"\";\n  const unitId = splitUnit[0] ?? \"\";\n\n  payload.title = values.title ?? \"\";\n  payload.description = values.description ?? \"\";\n  payload.type = \"image\";\n  payload.base64 = values.imageUrl ?? \"\";\n\n  const media = { media: [payload] };\n  try {\n    if (dataService.is_external) {\n      await Invoke.addJobServiceMedia(media, dataService.id, unitId);\n    } else {\n      await Invoke.addJobServiceMedia(media, dataService.id);\n    }\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    await getUnitMedia((callback) => {});\n    dispatch(setInsertMediaModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setInsertMediaModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nexport const handlePressInsertMediaRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doInsertMedia(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailTransactionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().services.selectedJobService;\n  dispatch(change(\"editTransactionForm\", `id`, data.id ?? \"\"));\n  dispatch(\n    change(\"editTransactionForm\", `startDate`, moment(data.start) ?? \"\")\n  );\n  dispatch(change(\"editTransactionForm\", `endDate`, moment(data.end) ?? \"\"));\n  dispatch(change(\"editTransactionForm\", `jobPerform`, data.job_perform ?? \"\"));\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warranty`,\n      `${data.warranty}|${data.warranty ? \"Warranty\" : \"No Warranty\"}`\n    )\n  );\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warrantyMonths`,\n      `${data.warranty_month}|${data.warranty_month} bulan` ?? \"0\"\n    )\n  );\n  dispatch(\n    change(\"editTransactionForm\", `warrantyYears`, data.warranty_year ?? \"\")\n  );\n};\n\nexport const mapDailiesToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().detailService.selectedEditDailies;\n  dispatch(change(\"editDailiesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `startDate`, moment(data.mulai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `endDate`, moment(data.selesai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `description`, data.deskripsi ?? \"\"));\n  dispatch(\n    change(\"editDailiesForm\", `activityType`, `${data.type}|${data.type}` ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editDailiesForm\",\n      `timeStartEnd`,\n      [moment(data.mulai), moment(data.selesai)] ?? \"\"\n    )\n  );\n};\n\nexport const downloadTransactionPdf = async () => {\n  const { dispatch, getState } = store;\n  const jobId = getState().services.selectedJobService.id;\n  dispatch(ComponentActions.setGlobalLoading(true));\n\n  try {\n    const { data: dataTransactionPdf } = await Invoke.getTransactionPdfUrl(\n      jobId\n    );\n    const downloadUrl = dataTransactionPdf.callback.pdf.url.replace(\n      \"103.158.192.161:3000\",\n      \"\"\n    );\n    const { data } = await Invoke.downloadPdfFromUrl(downloadUrl);\n    dispatch(ComponentActions.setGlobalLoading(false));\n    fileDownload(data, `${dataTransactionPdf.callback.pdf.filename}.pdf`);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n    showToast(\"Gagal mengunduh report!\", \"error\");\n  }\n};\n\nexport const resetFormModalImage = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editMediaForm\", `imageUrl`, null));\n  dispatch(change(\"editMediaForm\", `title`, \"\"));\n  dispatch(change(\"editMediaForm\", `description`, \"\"));\n  dispatch(change(\"editMediaForm\", `unit`, \"\"));\n};\n\nexport const getUnitSummary = async (callback) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  // setIsCompleteLoadedSummary(false);\n  const groupingSummaryList = [];\n  const singleSummary = {};\n  let sequence = 0;\n\n  const setDispatch = (responseStatus) => {\n    if (sequence === dataService.units.length) {\n      if (responseStatus === \"error\") {\n        setTimeout(() => {\n          if (dataService.is_external) {\n            dispatch(setGroupingSummaryData(groupingSummaryList));\n          } else {\n            dispatch(setSingleSummaryData(singleSummary));\n          }\n\n          callback(true);\n        }, 1000);\n      } else {\n        setTimeout(() => {\n          if (dataService.is_external) {\n            dispatch(setGroupingSummaryData(groupingSummaryList));\n          } else {\n            dispatch(setSingleSummaryData(singleSummary));\n          }\n\n          callback(true);\n        }, 1000);\n      }\n    }\n  };\n\n  if (!dataService.is_external) {\n    await Invoke.getJobServiceSummary(dataService.id, null)\n      .then((dataSummary) => {\n        singleSummary.id = dataService.id;\n        singleSummary.summary = dataSummary.data.callback.summary;\n\n        setDispatch(dataSummary.status);\n      })\n      .catch((err) => {\n        singleSummary.id = dataService.id;\n        singleSummary.summary = \"\";\n\n        setDispatch(\"error\");\n        callback(true);\n        console.log(err);\n      });\n  }\n\n  if (dataService.units.length > 0) {\n    await dataService.units.map(async (item, index) => {\n      await Invoke.getJobServiceSummary(dataService.id, item.id)\n        .then((dataSummary) => {\n          groupingSummaryList.push({\n            id: item.id,\n            unitName: item.unit_name,\n            summary: dataSummary.data.callback.summary,\n          });\n\n          sequence += 1;\n          setDispatch(dataSummary.status);\n        })\n        .catch((err) => {\n          groupingSummaryList.push({\n            id: item.id,\n            unitName: item.unit_name,\n            summary: [],\n          });\n          sequence += 1;\n          setDispatch(\"error\");\n          callback(true);\n          console.log(err);\n        });\n    });\n  } else {\n    callback(true);\n  }\n};\n\nexport const getUnitMedia = async (callback) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const groupingMediaList = [];\n  let sequence = 0;\n\n  const setDispatch = () => {\n    if (sequence === dataService.units.length) {\n      setTimeout(() => {\n        dispatch(setGroupingSelectedServicesMediaData(groupingMediaList));\n        callback(true);\n      }, 1000);\n    }\n  };\n\n  if (dataService.units.length > 0) {\n    await dataService.units.map(async (item, index) => {\n      await Invoke.getJobServiceMedia(dataService.id, item.id)\n        .then((dataMedia) => {\n          const imageList = dataMedia.data.callback.data ?? [];\n          // Push to tempporary array\n          groupingMediaList.push({\n            unitName: item.unit_name,\n            image: imageList ?? [],\n          });\n          sequence += 1;\n          setDispatch();\n        })\n        .catch((err) => {\n          groupingMediaList.push({\n            unitName: item.unit_name,\n            image: [],\n          });\n\n          sequence += 1;\n          setDispatch();\n        });\n    });\n  } else {\n    try {\n      // Get media without unitId\n      const { data: dataMedia } = await Invoke.getJobServiceMedia(\n        dataService.id\n      );\n      // Push to tempporary array\n      groupingMediaList.push({\n        unitName: \"All\",\n        image: dataMedia.callback.data ?? [],\n      });\n      callback(true);\n    } catch (error) {\n      dispatch(setGroupingSelectedServicesMediaData([]));\n      callback(true);\n    }\n\n    setTimeout(() => {\n      dispatch(setGroupingSelectedServicesMediaData(groupingMediaList));\n      callback(true);\n    }, 1000);\n  }\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { setRejectionsModal } from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\nimport * as DetailServiceActions from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\n\nexport const SET_LIST_SERVICES = \"SET_LIST_SERVICES\";\nexport const SET_SELECTED_JOB_SERVICE = \"SET_SELECTED_JOB_SERVICE\";\nexport const SET_PAGING_LIST_SERVICE = \"SET_PAGING_LIST_SERVICE\";\nexport const SET_SELECTED_JOB_SERVICE_ID = \"SET_SELECTED_JOB_SERVICE_ID\";\nexport const SET_DASHBOARD_LIST_SERVICES = \"SET_DASHBOARD_LIST_SERVICES\";\n\nexport const setListServices = (payload) => {\n  return {\n    type: SET_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setDashboardListService = (payload) => {\n  return {\n    type: SET_DASHBOARD_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setPagingListService = (payload) => {\n  return {\n    type: SET_PAGING_LIST_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobService = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobServiceId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE_ID,\n    payload,\n  };\n};\n\nexport const getListServicesRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  type = \"\",\n  status = \"\",\n  employeeId = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListServices(\n      page,\n      limit,\n      keyword,\n      type,\n      status,\n      employeeId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListServices(data.callback.data));\n    store.dispatch(setPagingListService(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTopTenService = async () => {\n  try {\n    const { data } = await Invoke.getListServices(1, 10, \"\", \"\", \"\", \"\");\n    store.dispatch(setDashboardListService(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (page, limit, keyword, filterValues) => {\n  if (!filterValues) {\n    getListServicesRequested(page, limit, keyword);\n    return;\n  }\n\n  const splitTypeService = filterValues.typeService\n    ? filterValues.typeService.split(\"|\")\n    : \"\";\n  const splitStatusService = filterValues.statusService\n    ? filterValues.statusService.split(\"|\")\n    : \"\";\n\n  const typeService = filterValues.typeService ? splitTypeService[0] : \"\";\n  const statusService = filterValues.statusService ? splitStatusService[0] : \"\";\n\n  try {\n    await getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      typeService,\n      statusService\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getDetailServicePerUnit = async (service) => {\n\n  const { dispatch } = store;\n  // Hit media api and grouping by units :\n  let groupingChecklist = [];\n  if (service.units) {\n    await service.units.map(async (item, index) => {\n      const { data: dataChecklist } = await Invoke.getChecklistData(item.id);\n      // Push to tempporary array\n      groupingChecklist.push({\n        unitName: item.unit_name,\n        checklist: dataChecklist.callback,\n      });\n    });\n\n    // Save to reducer\n    await dispatch(\n      DetailServiceActions.setGroupingChecklistData(groupingChecklist)\n    );\n  }\n};\n\nexport const handlePressEdit = async (values) => {\n  store.dispatch(setGlobalLoading(true));\n  try {\n    const { data } = await Invoke.getOneServices(values.id);\n    const dataService = { ...data.callback, units: values.unit_models };\n    await store.dispatch(setSelectedJobService(dataService));\n    // await getDetailServicePerUnit(dataService);\n    setTimeout(() => {\n      store.dispatch(setGlobalLoading(false));\n      \n      navigate(\"detail-services\");\n    }, 1500);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteJobServiceProcess = async (jobId) => {\n  const { getState } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteJobServiceById(jobId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListServicesRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteJobServiceRequested = async (jobId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteJobServiceProcess(jobId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handlePressActionsRequested = async (jobId, type) => {\n  const { dispatch } = store;\n  type = type.toLowerCase();\n  let message;\n\n  switch (type) {\n    case \"approved\":\n      message = \"Apakah anda yakin ingin meng-approve data ini?\";\n      break;\n\n    case \"finished\":\n      message = \"Apakah anda yakin ingin mem-finishing data ini?\";\n      break;\n\n    case \"rejected\":\n      message = \"Apakah anda yakin ingin me me-reject data ini?\";\n      await dispatch(setRejectionsModal(true));\n      break;\n  }\n\n  if (type.toLowerCase() !== \"rejected\") {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        doCallActionProcess(jobId, type);\n      },\n      okText: \"Ya\",\n      cancelText: \"Tidak\",\n    };\n\n    toastr.confirm(message, toastrConfirmOptions);\n  }\n};\n\nexport const doCallActionProcess = async (jobId, type) => {\n  const { getState, dispatch } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n  dispatch(setGlobalLoading(true));\n  try {\n    if (type === \"approved\") {\n      await Invoke.setApprovedService(jobId);\n    }\n    if (type === \"finished\") {\n      await Invoke.setFinishedService(jobId);\n    }\n    await getListServicesRequested(page, limit);\n    showToast(\"Data berhasil di approved\", \"success\");\n    setTimeout(() => {\n      navigate(\"/list_service\");\n      dispatch(setGlobalLoading(false));\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(setGlobalLoading(false));\n    console.log(\"error : \", error);\n  }\n};\n","import {\n  SET_LIST_SERVICES,\n  SET_SELECTED_JOB_SERVICE,\n  SET_PAGING_LIST_SERVICE,\n  SET_SELECTED_JOB_SERVICE_ID,\n  SET_DASHBOARD_LIST_SERVICES,\n} from \"./ListServicesActions\";\n\nexport const initialState = {\n  listServices: [],\n  dashboardListServices: [],\n  selectedJobService: {},\n  selectedJobServiceId: {},\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function listServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_SERVICES:\n      newState.listServices = action.payload;\n      return { ...newState };\n\n    case SET_DASHBOARD_LIST_SERVICES:\n      newState.dashboardListServices = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE:\n      newState.selectedJobService = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE_ID:\n      newState.selectedJobServiceId = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_LIST_SERVICE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  PROCESS_GLOBAL_LOADING,\n  PROCESS_FORM_GLOBAL_LOADING,\n  RESET_ALL_LOADING,\n  SHOW_GLOBAL_MODAL,\n} from \"./ComponentAction\";\n\nexport const initialState = {\n  isLoadingGlobal: false,\n  isLoadingFormGlobal: false,\n  isModalVisible: false,\n};\n\nexport default function ComponentReducer(state = initialState, action) {\n  if (!action) {\n    return state;\n  }\n  const newState = Object.assign({}, state);\n\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case PROCESS_GLOBAL_LOADING:\n      newState.isLoadingGlobal = action.payload;\n      return { ...newState };\n    case PROCESS_FORM_GLOBAL_LOADING:\n      newState.isLoadingFormGlobal = action.payload;\n      return { ...newState };\n    case SHOW_GLOBAL_MODAL:\n      newState.isModalVisible = action.payload;\n      return { ...newState };\n    case RESET_ALL_LOADING:\n      newState.isLoadingGlobal = false;\n      newState.isLoadingFormGlobal = false;\n      return { ...newState };\n  }\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_CUSTOMER_LIST_DATA = \"SET_CUSTOMER_LIST_DATA\";\nexport const SET_PAGING_CUSTOMER = \"SET_PAGING_CUSTOMER\";\nexport const SET_SELECTED_CUSTOMER_DATA = \"SET_SELECTED_CUSTOMER_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_CUSTOMER_ID = \"SET_SELECTED_CUSTOMER_ID\";\nexport const SET_CUSTOMER_LIST_DATA_DROPDOWN =\n  \"SET_CUSTOMER_LIST_DATA_DROPDOWN\";\n\nexport const setCustomerListData = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCustomerListDataDropdown = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingCustomer = (payload) => {\n  return {\n    type: SET_PAGING_CUSTOMER,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerData = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerId = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_ID,\n    payload,\n  };\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editCustomerForm\", `id`, \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, \"\"));\n};\n\nexport const loadCustomerListData = async () => {\n  try {\n    const { data } = await Invoke.getCustomerList(1, 100);\n    store.dispatch(setCustomerListData(data.callback.data));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getCustomerListDataByPaging = async (\n  page,\n  limit,\n  keyword = \"\",\n  branchId = \"\",\n  isDropdownData = false\n) => {\n  try {\n    const { data } = await Invoke.getCustomerList(\n      page,\n      limit,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdownData) {\n      store.dispatch(setCustomerListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setCustomerListData(data.callback.data));\n    }\n    store.dispatch(setPagingCustomer(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteCustomerProcess = async (customerId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteCustomerById(customerId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddCustomerProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n\n    await Invoke.addCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n    await Invoke.updateCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveCustomerRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddCustomerProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailCustomerToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().customers.selectedCustomerData;\n  const provinceId = data.province_id + \"|\" + data.province_name;\n  const cityId = data.city_id + \"|\" + data.city_name;\n  const branchId = data.branch_id + \"|\" + data.branch_name;\n\n  dispatch(change(\"editCustomerForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, data.pic_phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, data.pic ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, data.work_hour ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, provinceId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, cityId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, branchId ?? \"\"));\n};\n\nexport const deleteCustomerRequested = async (customerId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteCustomerProcess(customerId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_CUSTOMER_LIST_DATA,\n  SET_PAGING_CUSTOMER,\n  SET_FORM_STATUS,\n  SET_SELECTED_CUSTOMER_DATA,\n  SET_SELECTED_CUSTOMER_ID,\n  SET_CUSTOMER_LIST_DATA_DROPDOWN,\n} from \"./CustomersActions\";\n\nexport const initialState = {\n  listCustomers: [],\n  listCustomersDropdown: [],\n  formStatus: \"add\",\n  selectedCustomerData: {},\n  selectedCustomerId: \"\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_CUSTOMER_LIST_DATA:\n      newState.listCustomers = action.payload;\n      return { ...newState };\n\n    case SET_CUSTOMER_LIST_DATA_DROPDOWN:\n      newState.listCustomersDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_CUSTOMER:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_DATA:\n      newState.selectedCustomerData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_ID:\n      newState.selectedCustomerId = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ADMIN = \"SET_LIST_ADMIN\";\nexport const SET_PAGING_ADMIN = \"SET_PAGING_ADMIN\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ADMIN_ID = \"SET_SELECTED_ADMIN_ID\";\nexport const SET_SELECTED_ADMIN_DATA = \"SET_SELECTED_ADMIN_DATA\";\n\nexport const setListAdmin = (payload) => {\n  return {\n    type: SET_LIST_ADMIN,\n    payload,\n  };\n};\n\nexport const setPagingAdmin = (payload) => {\n  return {\n    type: SET_PAGING_ADMIN,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedAdminId = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_ID,\n    payload,\n  };\n};\n\nexport const setSelectedAdminData = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_DATA,\n    payload,\n  };\n};\n\nexport const getListAdminRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListAdmin(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListAdmin(data.callback.data));\n    store.dispatch(setPagingAdmin(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editAdminForm\", `id`, \"\"));\n  dispatch(change(\"editAdminForm\", `username`, \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, \"\"));\n  dispatch(change(\"editAdminForm\", `password`, \"\"));\n};\n\nconst doAddAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.addAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.updateAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteAdminProcess = async (adminId) => {\n  const { getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteAdminById(adminId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListAdminRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveAdminRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddAdminProcess(values);\n      } else {\n        doEditAdminProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailAdminToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().admins.selectedAdminData;\n  dispatch(change(\"editAdminForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editAdminForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, data.fullname ?? \"\"));\n};\n\nexport const deleteAdminRequested = async (adminId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteAdminProcess(adminId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_LIST_ADMIN,\n  SET_FORM_STATUS,\n  SET_PAGING_ADMIN,\n  SET_SELECTED_ADMIN_ID,\n  SET_SELECTED_ADMIN_DATA,\n} from \"./AdminActions\";\n\nexport const initialState = {\n  listAdmin: [],\n  selectedAdminId: \"\",\n  selectedAdminData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ADMIN:\n      newState.listAdmin = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_ID:\n      newState.selectedAdminId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_DATA:\n      newState.selectedAdminData = action.payload;\n      return { ...newState };\n    case SET_PAGING_ADMIN:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_LIST_ROLES,\n  SET_SELECTED_ROLE_ID,\n  SET_SELECTED_ROLE_DETAIL,\n  SET_FORM_STATUS,\n  RESET_STATE,\n  SET_SELECTED_ROLE_MENU\n} from \"./RolesActions\";\n\nexport const initialState = {\n  listRoles: [],\n  selectedRoleId: \"\",\n  selectedRoleDetail: {},\n  selectedRoleMenu: [],\n  formStatus: \"add\",\n};\n\nexport default function rolesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ROLES:\n      newState.listRoles = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_ID:\n      newState.selectedRoleId = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_DETAIL:\n      newState.selectedRoleDetail = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_MENU:\n      newState.selectedRoleMenu = action.payload;\n      return { ...newState };\n\n    case RESET_STATE:\n      newState.listRoles = [];\n      newState.selectedRoleId = \"\";\n      newState.selectedRoleDetail = {};\n      newState.formStatus = \"add\";\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_PROVINCE_LIST_DATA = \"SET_PROVINCE_LIST_DATA\";\nexport const SET_CITY_LIST_DATA = \"SET_CITY_LIST_DATA\";\nexport const SET_MENU_LIST_DATA = \"SET_MENU_LIST_DATA\";\n\nexport const setProvinceListData = (payload) => {\n  return {\n    type: SET_PROVINCE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setMenuListData = (payload) => {\n  return {\n    type: SET_MENU_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCityListData = (payload) => {\n  return {\n    type: SET_CITY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const loadProvinceListData = async () => {\n  try {\n    const { data } = await Invoke.getProvinceList(1, 100);\n    store.dispatch(setProvinceListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadCityListData = async (provinceId) => {\n  try {\n    const { data } = await Invoke.getCityList(1, 200, provinceId);\n    store.dispatch(setCityListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadMenuListData = async () => {\n  try {\n    const { data } = await Invoke.getListMenu(1, 100);\n    store.dispatch(setMenuListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_LIST_DATA = \"SET_EMPLOYEE_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_ID = \"SET_SELECTED_EMPLOYEE_ID\";\nexport const SET_SELECTED_EMPLOYEE_DATA = \"SET_SELECTED_EMPLOYEE_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEES = \"SET_PAGING_EMPLOYEES\";\nexport const SET_EMPLOYEE_LIST_DROPDOWN = \"SET_EMPLOYEE_LIST_DROPDOWN\";\n\nexport const setEmployeeListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setEmployeeListDropdown = (payload) => {\n  return {\n    type: SET_EMPLOYEE_LIST_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedRoleEmployee = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployees = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEES,\n    payload,\n  };\n};\n\nexport const loadEmployeeListData = async (\n  page,\n  limit,\n  keyword = \"\",\n  roleId = \"\",\n  branchId = \"\",\n  divisionId = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeList(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setEmployeeListData(data.callback.data));\n    store.dispatch(setPagingEmployees(paging));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const loadEmployeeDataDropdown = async () => {\n  try {\n    const { data } = await Invoke.getEmployeeList(1, 99999999, \"\", \"\", \"\", \"\");\n\n    store.dispatch(setEmployeeListDropdown(data.callback.data));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getEmployeeToolsRequested = (employeeId, page, limit) => {\n  try {\n    const { data } = Invoke.getEmployeeTools(employeeId, page, limit);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployees(paging));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getRolesByEmployeeId = async (employeeId) => {\n  const { data } = await Invoke.getEmployeeRoles(employeeId, 1, 100);\n  let subItem = [];\n  data.callback.data.map((item, index) => {\n    subItem.push(item.role_id);\n  });\n  store.dispatch(setSelectedRoleEmployee(subItem));\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeProcess = async (values, selectedRoles) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.nik = values.nik;\n    payload.password = values.password ?? \"\";\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n\n    await Invoke.addEmployee(payload);\n    // await doSaveEmployeeRole(selectedRoles, \"add\");\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    loadEmployeeListData(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employees\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeProcess = async (values, roleSelected) => {\n  const { dispatch } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.nik = values.nik;\n    payload.password = values.password ?? \"\";\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n    // Save Employee - roles actions\n    if (values.selectedRoles.length > 0) {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-and-add\");\n    } else {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-all\");\n    }\n    // Save Employee data actions\n    await Invoke.updateEmployee(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    // setTimeout(() => {\n    //   navigate(\"/employees\");\n    // }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doAddEmployeeRoleProcess = async (newRoleId, employeeId) => {\n  const payload = {\n    employee_id: employeeId,\n    role_id: newRoleId,\n  };\n  await Invoke.addEmployeeRole(payload);\n};\n\nconst doDeleteAllEmployeeRoleProcess = async (roleListApi) => {\n  roleListApi.data.map(async (item, index) => {\n    await Invoke.deleteEmployeeRole(item.id);\n  });\n};\n\nconst doDeleteEmployeeProcess = async (employeeId) => {\n  const { getState } = store;\n  const paging = getState().employees.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeById(employeeId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    loadEmployeeListData(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doSaveEmployeeRole = async (newRoleSelected, type) => {\n  const { getState } = store;\n  try {\n    const currentRoleSelected = getState().employees.selectedRoleEmployee;\n    const selectedEmployeeId = getState().employees.selectedEmployeeId;\n    const { data } = await Invoke.getEmployeeRoles(selectedEmployeeId, 1, 100);\n    const roleListApi = data.callback;\n\n    if (type === \"delete-all\") {\n      await currentRoleSelected.map(async (item, index) => {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n      });\n    } else if (type === \"add\") {\n      await newRoleSelected.map(async (item, index) => {\n        await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n      });\n    } else {\n      // Check if the user is has been have roles or not\n      if (currentRoleSelected.length > 0) {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      } else {\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveEmployeeRequested = async (\n  formStatus,\n  values,\n  roleSelected\n) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeProcess(values, roleSelected);\n      } else {\n        doEditEmployeeProcess(values, roleSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employees.selectedEmployeeData;\n  const branch = `${data.branch_id}|${data.branch_name}`;\n  const province = `${data.province_id}|${data.province_name}`;\n  const city = `${data.city_id}|${data.city_name}`;\n\n  dispatch(change(\"editEmployeeForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `nik`, data.nik ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, branch ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, province ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, city ?? \"\"));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(MasterDataActions.setCityListData([]));\n  dispatch(change(\"editEmployeeForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n};\n\nexport const deleteEmployeeRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n\n  if (!values) {\n    await loadEmployeeListData(page, limit, keyword);\n    return;\n  }\n\n  const splitRole = values.role ? values.role.split(\"|\") : \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const splitDivision = values.division ? values.division.split(\"|\") : \"\";\n\n  const roleId = values.role ? splitRole[0] : \"\";\n  const branchId = values.branch ? splitBranch[0] : \"\";\n  const divisionId = values.division ? splitDivision[0] : \"\";\n\n  try {\n    await loadEmployeeListData(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_ID,\n  SET_SELECTED_EMPLOYEE_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_ROLE_EMPLOYEE,\n  SET_PAGING_EMPLOYEES,\n  SET_EMPLOYEE_LIST_DROPDOWN\n} from \"./EmployeesActions\";\n\nexport const initialState = {\n  listEmployees: [],\n  listEmployeeDropdown: [],\n  selectedEmployeeId: \"\",\n  selectedEmployeeData: {},\n  selectedRoleEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_LIST_DATA:\n      newState.listEmployees = action.payload;\n      return { ...newState };\n\n      case SET_EMPLOYEE_LIST_DROPDOWN:\n      newState.listEmployeeDropdown = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_ID:\n      newState.selectedEmployeeId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_DATA:\n      newState.selectedEmployeeData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_EMPLOYEE:\n      newState.selectedRoleEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEES:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_TOOL_LIST_DATA = \"SET_EMPLOYEE_TOOL_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_ID = \"SET_SELECTED_EMPLOYEE_TOOLS_ID\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_DATA =\n  \"SET_SELECTED_EMPLOYEE_TOOLS_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEE_TOOLS = \"SET_PAGING_EMPLOYEE_TOOLS\";\n\nexport const setEmployeeToolsListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_TOOL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployeeTools = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEE_TOOLS,\n    payload,\n  };\n};\n\nexport const getEmployeeToolsRequested = async (\n  employeeId,\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeTools(employeeId, page, limit);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployeeTools(paging));\n    store.dispatch(setEmployeeToolsListData(data.callback.data));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeToolsData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const slpitToolsId = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.tool_id = slpitToolsId[0];\n\n    await Invoke.addEmployeeTools(payload);\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const employeeId = getState().employees.selectedEmployeeId;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const splitTools = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.employee_id = employeeId;\n    payload.tool_id = splitTools[0];\n\n    // Save Employee data actions\n    await Invoke.updateEmployeeTools(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doDeleteEmployeeToolsProcess = async (employeeToolsId) => {\n  const { getState } = store;\n  const paging = getState().employeeTools.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeToolsById(employeeToolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveEmployeeToolsRequested = async (formStatus, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeToolsProcess(values);\n      } else {\n        doEditEmployeeToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employeeTools.selectedEmployeeToolsData;\n  // const splitTools = data;\n  const tools = `${data.tool_id}|${data.name}`;\n\n  dispatch(change(\"editEmployeeToolsForm\", `id`, data.id));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, tools));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(change(\"editEmployeeToolsForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, \"\"));\n};\n\nexport const deleteEmployeeToolsRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeToolsProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n\n  if (!values) {\n    getEmployeeToolsRequested(employeeId, page, limit, keyword);\n    return;\n  }\n\n  try {\n    await getEmployeeToolsRequested(employeeId, page, limit, keyword);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_TOOL_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_TOOLS_ID,\n  SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_EMPLOYEE_TOOLS,\n} from \"./EmployeeToolsActions\";\n\nexport const initialState = {\n  listEmployeeTools: [],\n  selectedEmployeeToolsId: \"\",\n  selectedEmployeeToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeeToolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_TOOL_LIST_DATA:\n      newState.listEmployeeTools = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_ID:\n      newState.selectedEmployeeToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_DATA:\n      newState.selectedEmployeeToolsData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEE_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_PROVINCE_LIST_DATA,\n  SET_MENU_LIST_DATA,\n  SET_CITY_LIST_DATA\n} from \"./MasterDataActions\";\n\nexport const initialState = {\n  listProvince: [],\n  listCity: [],\n  listMenu: [],\n};\n\nexport default function masterDataReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_PROVINCE_LIST_DATA:\n      newState.listProvince = action.payload;\n      return { ...newState };\n    case SET_CITY_LIST_DATA:\n      newState.listCity = action.payload;\n      return { ...newState };\n    case SET_MENU_LIST_DATA:\n      newState.listMenu = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_ID = \"SET_SELECTED_UNIT_ID\";\nexport const SET_SELECTED_UNIT_DATA = \"SET_SELECTED_UNIT_DATA\";\nexport const SET_PAGING_UNIT = \"SET_PAGING_UNIT\";\n\nexport const setUnitListData = (payload) => {\n  return {\n    type: SET_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnit = (payload) => {\n  return {\n    type: SET_PAGING_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteUnitProcess = async (unitId) => {\n  const { getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitById(unitId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    payload.photo = values.imageUrl ?? \"\";\n    await Invoke.addUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.photo = values.imageUrl ?? \"\";\n    payload.description = values.description;\n    await Invoke.updateUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitForm\", `id`, \"\"));\n  dispatch(change(\"editUnitForm\", `name`, \"\"));\n  dispatch(change(\"editUnitForm\", `description`, \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, \"\"));\n};\n\nexport const mapDetailUnitToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().units.selectedUnitsData;\n\n  dispatch(change(\"editUnitForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitForm\", `description`, data.description ?? \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, data.photo ?? \"\"));\n};\n\nexport const getUnitListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getUnitList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitListData(data.callback.data));\n    store.dispatch(setPagingUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitProcess(values);\n      } else {\n        doEditUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitRequested = async (unitId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitProcess(unitId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_ID,\n  SET_SELECTED_UNIT_DATA,\n  SET_PAGING_UNIT\n} from \"./UnitsActions\";\n\nexport const initialState = {\n  listUnits: [],\n  selectedUnitsId: \"\",\n  selectedUnitsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_LIST_DATA:\n      newState.listUnits = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_ID:\n      newState.selectedUnitsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_DATA:\n      newState.selectedUnitsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_JOB_FORMS_LIST_DATA = \"SET_JOB_FORMS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_JOB_FORMS_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_JOB_FORMS_DATA = \"SET_SELECTED_JOB_FORMS_DATA\";\nexport const SET_PAGING_JOB_FORM = \"SET_PAGING_JOB_FORM\";\n\nexport const setJobFormsListData = (payload) => {\n  return {\n    type: SET_JOB_FORMS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingJobForm = (payload) => {\n  return {\n    type: SET_PAGING_JOB_FORM,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsData = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (jobFormsId) => {\n  const { getState } = store;\n  const data = getState().jobForms;\n  const { paging } = data;\n\n  try {\n    await Invoke.deleteJobForms(jobFormsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getJobFormsListDataRequested(paging.page, paging.limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editJobForms\", `id`, \"\"));\n  dispatch(change(\"editJobForms\", `name`, \"\"));\n  dispatch(change(\"editJobForms\", `description`, \"\"));\n};\n\nexport const mapDetailJobFormsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().jobForms.selectedJobFormsData;\n  dispatch(change(\"editJobForms\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editJobForms\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editJobForms\", `description`, data.description ?? \"\"));\n};\n\nexport const getJobFormsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListJobForm(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page ?? 1;\n    paging.limit = data.callback.limit ?? 10;\n    paging.totalPage = data.callback.totalPage ?? 1;\n    store.dispatch(setJobFormsListData(data.callback.data));\n    store.dispatch(setPagingJobForm(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveJobFormsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddJobFormsProcess(values);\n      } else {\n        doEditJobFormsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteJobFormsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_JOB_FORMS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_JOB_FORMS_ID,\n  SET_SELECTED_JOB_FORMS_DATA,\n  SET_PAGING_JOB_FORM,\n} from \"./JobFormsActions\";\n\nexport const initialState = {\n  listJobForms: [],\n  selectedJobFormsId: \"\",\n  selectedJobFormsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function jobFormsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_JOB_FORMS_LIST_DATA:\n      newState.listJobForms = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_ID:\n      newState.selectedJobFormsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_DATA:\n      newState.selectedJobFormsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_JOB_FORM:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_BRANCH_LIST_DATA = \"SET_BRANCH_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_BRANCH_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_BRANCH_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_BRANCH = \"SET_PAGING_BRANCH\";\nexport const SET_BRANCH_LIST_DATA_DROPDOWN = \"SET_BRANCH_LIST_DATA_DROPDOWN\";\n\nexport const setBranchListData = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setBranchListDataDropdown = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingBranch = (payload) => {\n  return {\n    type: SET_PAGING_BRANCH,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedBranchId = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_ID,\n    payload,\n  };\n};\n\nexport const setSelectedBranchData = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteBranchById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getBranchListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.addBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.updateBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editBranchForm\", `id`, \"\"));\n  dispatch(change(\"editBranchForm\", `description`, \"\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().branch.selectedBranchData;\n  dispatch(change(\"editBranchForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editBranchForm\", `description`, data.name ?? \"\"));\n};\n\nexport const getBranchListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  isDropdown = false\n) => {\n  try {\n    const { data } = await Invoke.getListBranch(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdown) {\n      store.dispatch(setBranchListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setBranchListData(data.callback.data));\n    }\n    store.dispatch(setPagingBranch(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveBranchRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddBranchProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteBranchRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_BRANCH_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_BRANCH,\n  SET_SELECTED_BRANCH_ID,\n  SET_SELECTED_BRANCH_DATA,\n  SET_BRANCH_LIST_DATA_DROPDOWN\n} from \"./BranchActions\";\n\nexport const initialState = {\n  listBranch: [],\n  listBranchDropdown: [],\n  selectedBranchId: \"\",\n  selectedBranchData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_BRANCH_LIST_DATA:\n      newState.listBranch = action.payload;\n      return { ...newState };\n\n    case SET_BRANCH_LIST_DATA_DROPDOWN:\n      newState.listBranchDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_ID:\n      newState.selectedBranchId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_DATA:\n      newState.selectedBranchData = action.payload;\n      return { ...newState };\n    case SET_PAGING_BRANCH:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_SERVICES_SUMMARY_DATA,\n  SET_SELECTED_SERVICES_MEDIA_DATA,\n  SET_SELECTED_SERVICES_DAILIES_DATA,\n  SET_SELECTED_SERVICES_HISTORIES_DATA,\n  SET_SELECTED_SERVICES_CHECKLIST_DATA,\n  SET_SELECTED_SERVICES_REJECTED_DATA,\n  SET_REJECTIONS_MODAL,\n  SET_EDIT_TRANSACTION_MODAL,\n  SET_EDIT_DAILIES_MODAL,\n  SET_SELECTED_EDIT_DAILIES_DATA,\n  SET_SELECTED_UNIT,\n  RESET_DETAIL_SERVICE,\n  SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n  SET_GROUPING_SUMMARY_DATA,\n  SET_SINGLE_SUMMARY_DATA,\n  SET_GROUPING_CHECKLIST_DATA,\n  SET_INSERT_MEDIA_MODAL,\n  SET_TYPE_FORM_DAILIES,\n  SET_EDIT_SUMMARY_MODAL,\n} from \"./DetailServiceTransactionAction\";\n\nexport const initialState = {\n  selectedServiceEmployeeList: [],\n  selectedServiceSummary: {},\n  selectedServiceMedia: [],\n  groupingSelectedServiceMedia: [],\n  groupingSelectedServiceSummary: [],\n  singleSelectedServiceSummary: {},\n  groupingSelectedServiceChecklist: [],\n  selectedServiceDailies: [],\n  selectedServiceHistories: [],\n  selectedServiceChecklist: [],\n  selectedServiceRejected: [],\n  rejectionsModal: false,\n  editTransactionModal: false,\n  editDailiesModal: false,\n  editSummaryModal: false,\n  insertMediaModal: false,\n  typeFormDailies: \"add\",\n  selectedEditDailies: {},\n  selectedUnit: \"Seluruh Unit\",\n};\n\nexport default function detailServiceTransactionReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA:\n      newState.selectedServiceEmployeeList = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_SUMMARY_DATA:\n      newState.selectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_MEDIA_DATA:\n      newState.selectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA:\n      newState.groupingSelectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SUMMARY_DATA:\n      newState.groupingSelectedServiceSummary = action.payload;\n    case SET_SINGLE_SUMMARY_DATA:\n      newState.singleSelectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_GROUPING_CHECKLIST_DATA:\n      newState.groupingSelectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_DAILIES_DATA:\n      newState.selectedServiceDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_HISTORIES_DATA:\n      newState.selectedServiceHistories = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_CHECKLIST_DATA:\n      newState.selectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_REJECTED_DATA:\n      newState.selectedServiceRejected = action.payload;\n      return { ...newState };\n    case SET_REJECTIONS_MODAL:\n      newState.rejectionsModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_TRANSACTION_MODAL:\n      newState.editTransactionModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_DAILIES_MODAL:\n      newState.editDailiesModal = action.payload;\n      return { ...newState };\n    case SET_SELECTED_EDIT_DAILIES_DATA:\n      newState.selectedEditDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      return { ...newState };\n    case SET_INSERT_MEDIA_MODAL:\n      newState.insertMediaModal = action.payload;\n      return { ...newState };\n    case SET_TYPE_FORM_DAILIES:\n      newState.typeFormDailies = action.payload;\n      return { ...newState };\n    case SET_EDIT_SUMMARY_MODAL:\n      newState.editSummaryModal = action.payload;\n      return { ...newState };\n    case RESET_DETAIL_SERVICE:\n      return initialState;\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_MODEL_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_MODEL_ID = \"SET_SELECTED_UNIT_MODEL_ID\";\nexport const SET_SELECTED_UNIT_MODEL_DATA = \"SET_SELECTED_UNIT_MODEL_DATA\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\n\nexport const setUnitModelListData = (payload) => {\n  return {\n    type: SET_UNIT_MODEL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_DATA,\n    payload,\n  };\n};\n\nexport const getUnitModelListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitModel(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitModelListData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitModelsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.addUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitModelsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = values.unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.updateUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (unitModelId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitModelById(unitModelId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitModelsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitModelsProcess(values);\n      } else {\n        doEditUnitModelsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitModelToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitModels.selectedUnitModelsData;\n\n  dispatch(change(\"editUnitModelForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, data.descriptions ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(change(\"editUnitModelForm\", `machineNo`, data.machine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, data.engine_model ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, data.engine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, data.chasis_no ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `transmissionNo`, data.transmission_no ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitModelForm\", `id`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `machineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `transmissionNo`, \"\"));\n};\n","import {\n  SET_UNIT_MODEL_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_MODEL_ID,\n  SET_SELECTED_UNIT_MODEL_DATA,\n  SET_PAGING_UNIT_MODEL\n} from \"./UnitModelActions\";\n\nexport const initialState = {\n  listUnitModels: [],\n  selectedUnitModelsId: \"\",\n  selectedUnitModelsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitModelReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_MODEL_LIST_DATA:\n      newState.listUnitModels = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_ID:\n      newState.selectedUnitModelsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_DATA:\n      newState.selectedUnitModelsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_ENUM_UNIT_MODEL = \"SET_ENUM_UNIT_MODEL\";\n\nexport const setEnumUnintModel = (payload) => {\n  return {\n    type: SET_ENUM_UNIT_MODEL,\n    payload,\n  };\n};\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateUnitModel = async (unitId, fieldIndex) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getListUnitModel(1, 100, unitId, \"\");\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${fieldIndex}].enumUnitModel`,\n      data.callback.data ?? []\n    )\n  );\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"externalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(1, 200, employeeData.province_id);\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === employeeData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        citySelected.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        citySelected\n      )\n    );\n    // store.dispatch(\n    //   change(\"externalServiceForm\", \"employeeCityName\", detailEmployee.nik)\n    // );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"externalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"externalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const onChangeUnitModel = (val, index, enumUnit) => {\n  const { dispatch } = store;\n\n  const splitUnitModel = val.split(\"|\");\n\n  const [selectedUnitModel] = enumUnit.filter(\n    (x) => x.id === splitUnitModel[0]\n  );\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${index}].unitModelSerialNumber`,\n      selectedUnitModel.serial_number ?? \"\"\n    )\n  );\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  const splitWarranty = values.warranty.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const unitList = [];\n  values.units.map((item, index) => {\n    const splitUnitModel = item.unitModelId.split(\"|\");\n    unitList.push({\n      unit_model_id: splitUnitModel[0],\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"true\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: splitWarranty[0],\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: unitList ?? [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              resolve();\n            }, 1000);\n            setTimeout(() => {\n              navigate(\"list_service\");\n            }, 1500);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import { SET_ENUM_UNIT_MODEL } from \"./ExternalServiceActions\";\n\nexport const initialState = {\n  enumUnitModel: [],\n};\n\nexport default function externalServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ENUM_UNIT_MODEL:\n      newState.enumUnitModel = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change, reset } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { message } from \"antd\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_IDENTIFICATIONN_LIST_DATA = \"SET_IDENTIFICATIONN_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_IDENTIFICATION_ID = \"SET_SELECTED_IDENTIFICATION_ID\";\nexport const SET_PAGING_IDENTIFICATION = \"SET_PAGING_IDENTIFICATION\";\nexport const SET_SELECTED_IDENTIFICATION_DATA =\n  \"SET_SELECTED_IDENTIFICATION_DATA\";\n\nexport const setIdentificationListData = (payload) => {\n  return {\n    type: SET_IDENTIFICATIONN_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingIdentification = (payload) => {\n  return {\n    type: SET_PAGING_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationId = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationData = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_DATA,\n    payload,\n  };\n};\n\nexport const getIdentificationListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState, dispatch } = store;\n  try {\n    const branches = getState().branch.listBranch;\n    const { data } = await Invoke.getIdentificationList(page, limit, keyword);\n    const identificationList = data.callback.data;\n\n    const newIdentificationList = [];\n    if (identificationList.length > 0) {\n      identificationList.map((item, index) => {\n        const [defaultBranch] = branches.filter((x) => x.id === item.branch_id);\n        item.branch_name = defaultBranch ? defaultBranch.name : \"-\";\n\n        newIdentificationList.push(item);\n      });\n    }\n\n    dispatch(setIdentificationListData(newIdentificationList));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteIdentificationProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteIdentificationById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddIdentificationProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const splitCustomer = values.customer.split(\"|\");\n    const splitBranch = values.branch.split(\"|\");\n    const splitLocation = values.location.split(\"|\");\n    const splitMilling = values.milling.split(\"|\");\n    const splitType = values.type.split(\"|\");\n\n    const payload = {};\n    payload.customer_id = splitCustomer[0];\n    payload.branch_id = splitBranch[0];\n    payload.location = splitLocation[0];\n    payload.type = splitType[0];\n    payload.status = SelectStatus[0].value;\n    payload.milling = splitMilling[0];\n\n    await Invoke.addIdentification(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationMilling = async (values, isLastStep) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = !values.instanceType\n      ? \"\"\n      : values.instanceType.split(\"|\");\n    const splitMillingStatus = !values.millingStatus\n      ? \"\"\n      : values.millingStatus.split(\"|\");\n    const splitCity = !values.city ? \"\" : values.city.split(\"|\") ?? [];\n    const splitProvince = !values.province\n      ? \"\"\n      : values.province.split(\"|\") ?? [];\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0],\n      instance_name: values.instanceName ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0] ?? \"\",\n      city: splitCity[1] ?? \"\",\n      province: splitProvince[1] ?? \"\",\n      phone: values.phone ?? \"\",\n      milling_capacity: values.millingCapacity ?? \"\",\n      milling_work_capacity_perday: values.millingWorkCapacityPerDay ?? \"\",\n      rice_trademark: values.riceTrademark ?? \"\",\n      history_service_place: values.history_service_place ?? \"\",\n      history_service_type: values.history_service_type ?? \"\",\n      notes: values.note ?? \"\",\n      engine_confs: engineConfs,\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    if (isLastStep) {\n      showToast(\"Menyimpan perubahan\", \"success\");\n      setTimeout(() => {\n        navigate(\"identification\");\n      }, 1000);\n    }\n    // return;\n    await Invoke.updateIdentificationMilling(payload);\n    // showToast(\"Pembaruan Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationRegular = async (values, isFinished) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    if (!values || values === undefined) {\n      // showToast(\"Harap lengkapi form untuk melanjutkan\", \"error\");\n      return;\n    }\n\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = values?.instanceType.split(\"|\");\n    const splitMillingStatus = values.millingStatus\n      ? values?.millingStatus.split(\"|\")\n      : [\"\"];\n    const splitCity = values?.city.split(\"|\");\n    const splitProvince = values?.province.split(\"|\");\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0] ?? \"\",\n      instance_name: values.instanceName ?? \"\",\n      instance_address: values.instanceAddress ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0],\n      address_district: \"\",\n      address_city: splitCity[1] ?? \"\",\n      address_province: splitProvince[1] ?? \"\",\n      address_subdistrict: values.kelurahan ?? \"\",\n      address_postal_code: values.postalCode ?? \"\",\n      phone: values.instancePhoneNumber ?? \"\",\n      product_name: values.productName,\n      buy_date: \"2021-09-22\",\n      assistance_date: \"2021-09-25\",\n      serial_number: \"SN1231\",\n      machine_number: \"MCN1231\",\n      gearbox_number: \"GB1231\",\n      production_unit_year: \"2021\",\n      work_hour_per_day: \"8 Hours\",\n      hour_meter: 1233,\n      history_service_place: \"Fee Text\",\n      history_service_type: \"Fee Text\",\n      notes: \"Test Regular Identification\",\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    // return;\n    await Invoke.updateIdentificationRegular(payload);\n    if (isFinished) {\n      showToast(\"Data berhasil disimpan\", \"success\");\n      getIdentificationListRequested(page, limit);\n      navigate(\"/identification\");\n    }\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n// === END INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(reset(\"editIdentificationhForm\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().identification.setSelectedIdentificationData;\n  dispatch(change(\"editIdentificationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editIdentificationForm\", `description`, data.name ?? \"\"));\n};\n\nexport const saveIdentificationRequested = async (\n  type,\n  values,\n  isLastStep = false\n) => {\n  const { getState } = store;\n  const isMilling =\n    getState().identification.selectedIdentificationData.milling;\n\n  if (type === \"add\") {\n    doAddIdentificationProcess(values);\n  } else {\n    if (isMilling) {\n      doUpdateIdentificationMilling(values, isLastStep);\n    } else {\n      doUpdateIdentificationRegular(values, isLastStep);\n    }\n  }\n};\n\nexport const deleteIdentificationRequested = async (identificationId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteIdentificationProcess(identificationId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_IDENTIFICATIONN_LIST_DATA,\n  SET_SELECTED_IDENTIFICATION_DATA,\n  SET_SELECTED_IDENTIFICATION_ID,\n  SET_FORM_STATUS,\n  SET_PAGING_IDENTIFICATION\n} from \"./IdentificationActions\";\n\nexport const initialState = {\n  listIdentification: [],\n  selectedIdentificationId: \"\",\n  selectedIdentificationData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function identificationReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_IDENTIFICATIONN_LIST_DATA:\n      newState.listIdentification = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_ID:\n      newState.selectedIdentificationId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_DATA:\n      newState.selectedIdentificationData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_IDENTIFICATION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_MACHINE_LIST_DATA = \"SET_MACHINE_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_MACHINE_ID = \"SET_SELECTED_MACHINE_ID\";\nexport const SET_SELECTED_MACHINE_DATA = \"SET_SELECTED_MACHINE_DATA\";\nexport const SET_PAGING_MACHINE_CONF = \"SET_PAGING_MACHINE_CONF\";\n\nexport const setMachineListData = (payload) => {\n  return {\n    type: SET_MACHINE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMachineConf = (payload) => {\n  return {\n    type: SET_PAGING_MACHINE_CONF,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedMachineId = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedMachineData = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteMachineProcess = async (machineId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteEngine(machineId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getMachineListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editMachineConfigurationForm\", `name`, \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `description`, \"\"));\n};\n\nexport const mapDetailMachineToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().machineConfiguration.selectedMachineData;\n  dispatch(change(\"editMachineConfigurationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `name`, data.name ?? \"\"));\n  dispatch(\n    change(\n      \"editMachineConfigurationForm\",\n      `description`,\n      data.description ?? \"\"\n    )\n  );\n};\n\nexport const getMachineListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListEngine(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setMachineListData(data.callback.data));\n    store.dispatch(setPagingMachineConf(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveMachineRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddMachineProcess(values);\n      } else {\n        doEditMachineProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteMachineRequested = async (machineId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteMachineProcess(machineId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_MACHINE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_MACHINE_ID,\n  SET_SELECTED_MACHINE_DATA,\n  SET_PAGING_MACHINE_CONF,\n} from \"./MachineConfigurationActions\";\n\nexport const initialState = {\n  listMachine: [],\n  selectedMachineId: \"\",\n  selectedMachineData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function machineConfigurationReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MACHINE_LIST_DATA:\n      newState.listMachine = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_ID:\n      newState.selectedMachineId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_DATA:\n      newState.selectedMachineData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MACHINE_CONF:\n      newState.paging = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_TOOLS_LIST_DATA = \"SET_TOOLS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_TOOLS_ID = \"SET_SELECTED_TOOLS_ID\";\nexport const SET_SELECTED_TOOLS_DATA = \"SET_SELECTED_TOOLS_DATA\";\nexport const SET_PAGING_TOOLS = \"SET_PAGING_TOOLS\";\n\nexport const setToolsListData = (payload) => {\n  return {\n    type: SET_TOOLS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingTools = (payload) => {\n  return {\n    type: SET_PAGING_TOOLS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteToolsProcess = async (toolsId) => {\n  const { getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteTool(toolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getToolsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.addTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.updateTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editToolsForm\", `id`, \"\"));\n  dispatch(change(\"editToolsForm\", `name`, \"\"));\n  dispatch(change(\"editToolsForm\", `description`, \"\"));\n};\n\nexport const mapDetailToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().tools.selectedToolsData;\n  dispatch(change(\"editToolsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editToolsForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editToolsForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getToolsListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListTools(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setToolsListData(data.callback.data));\n    store.dispatch(setPagingTools(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveToolsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddToolsProcess(values);\n      } else {\n        doEditToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteToolsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteToolsProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_TOOLS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_TOOLS_ID,\n  SET_SELECTED_TOOLS_DATA,\n  SET_PAGING_TOOLS,\n} from \"./ToolsActions\";\n\nexport const initialState = {\n  listTools: [],\n  selectedToolsId: \"\",\n  selectedToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function toolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_TOOLS_LIST_DATA:\n      newState.listTools = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_ID:\n      newState.selectedToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_DATA:\n      newState.selectedToolsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_FORM_CATEGORY_LIST_DATA = \"SET_FORM_CATEGORY_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_FORM_CATEGORY_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_FORM_CATEGORY_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_FORM_CATEGORY = \"SET_PAGING_FORM_CATEGORY\";\n\nexport const setFormCategoryListData = (payload) => {\n  return {\n    type: SET_FORM_CATEGORY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingFormCategory = (payload) => {\n  return {\n    type: SET_PAGING_FORM_CATEGORY,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryId = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_ID,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryData = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteFormCategoryProcess = async (categoryFormId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteFormCategory(categoryFormId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"Nones\";\n    await Invoke.updateFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editFormCategory\", `id`, \"\"));\n  dispatch(change(\"editFormCategory\", `name`, \"\"));\n  dispatch(change(\"editFormCategory\", `description`, \"\"));\n};\n\nexport const mapDetailCategoryToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().formCategory.selectedFormCategoryData;\n  dispatch(change(\"editFormCategory\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editFormCategory\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editFormCategory\", `description`, data.description ?? \"\"));\n};\n\nexport const getFormCatgeoryListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getFormCategory(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setFormCategoryListData(data.callback.data));\n    store.dispatch(setPagingFormCategory(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveFormCategoryRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddFormCategoryProcess(values);\n      } else {\n        doEditFormCategoryProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteFormCategoryRequested = async (formCategoryId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteFormCategoryProcess(formCategoryId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_FORM_CATEGORY_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_FORM_CATEGORY_ID,\n  SET_SELECTED_FORM_CATEGORY_DATA,\n  SET_PAGING_FORM_CATEGORY\n} from \"./FormCategoryActions\";\n\nexport const initialState = {\n  listFormCategory: [],\n  selectedFormCategoryId: \"\",\n  selectedFormCategoryData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function formCategoryReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_FORM_CATEGORY_LIST_DATA:\n      newState.listFormCategory = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_ID:\n      newState.selectedFormCategoryId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_DATA:\n      newState.selectedFormCategoryData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_FORM_CATEGORY:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_FIELDS_LIST_DATA = \"SET_UNIT_FIELDS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_FIELDS_ID = \"SET_SELECTED_UNIT_FIELDS_ID\";\nexport const SET_SELECTED_UNIT_FIELDS_DATA = \"SET_SELECTED_UNIT_FIELDS_DATA\";\nexport const SET_PAGING_UNIT_FIELDS = \"SET_PAGING_UNIT_FIELDS\";\n\nexport const setUnitFieldsListData = (payload) => {\n  return {\n    type: SET_UNIT_FIELDS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitFields = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_FIELDS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_DATA,\n    payload,\n  };\n};\n\nexport const getUnitFieldsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitFields(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitFieldsListData(data.callback.data));\n    store.dispatch(setPagingUnitFields(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddUnitFieldsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.addUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitFieldsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitFieldsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitFieldsProcess(values);\n      } else {\n        doEditUnitFieldsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_UNIT_FIELDS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_FIELDS_ID,\n  SET_SELECTED_UNIT_FIELDS_DATA,\n  SET_PAGING_UNIT_FIELDS,\n} from \"./UnitFieldsActions\";\n\nexport const initialState = {\n  listUnitFields: [],\n  selectedUnitFieldsId: \"\",\n  selectedUnitFieldsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitFieldsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_FIELDS_LIST_DATA:\n      newState.listUnitFields = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_ID:\n      newState.selectedUnitFieldsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_DATA:\n      newState.selectedUnitFieldsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_FIELDS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_MONITORING_EMPLOYEE_LIST_DATA =\n  \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setMonitoringEmployeeListData = (payload) => {\n  return {\n    type: SET_MONITORING_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getMonitoringEmployeeListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().monitoringEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportMonitoringEmployee(\n      page,\n      limit,\n      from,\n      until,\n      type,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListMonitoringEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newListMonitoringEmployee.push({\n            created_date: item.date,\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(\n      setMonitoringEmployeeListData(newListMonitoringEmployee ?? [])\n    );\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n\n  if (!values) {\n    await getMonitoringEmployeeListDataRequested(page, limit);\n    return;\n  }\n  const splitType = values.type ? values.type.split(\"|\") : \"\";\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const type = values.type ? splitType[0] : \"all\";\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_MONITORING_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./MonitoringEmployeeActions\";\n\nexport const initialState = {\n  listMonitoringEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function monitoringEmployeeReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MONITORING_EMPLOYEE_LIST_DATA:\n      newState.listMonitoringEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_SERVICE_REPAIR_LIST_DATA = \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_SERVICE_REPAIR = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setServiceRepairListData = (payload) => {\n  return {\n    type: SET_SERVICE_REPAIR_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingServiceRepair = (payload) => {\n  return {\n    type: SET_PAGING_SERVICE_REPAIR,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getServiceRepairListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().serviceRepair.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportServiceRepair(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListServiceRepair = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        newListServiceRepair.push({\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setServiceRepairListData(newListServiceRepair ?? []));\n    store.dispatch(setPagingServiceRepair(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().serviceRepair.paging;\n\n  if (!values) {\n    await getServiceRepairListDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_SERVICE_REPAIR_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_SERVICE_REPAIR,\n} from \"./ReportServiceRepairActions\";\n\nexport const initialState = {\n  listServiceRepair: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportServiceRepairReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SERVICE_REPAIR_LIST_DATA:\n      newState.listServiceRepair = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_SERVICE_REPAIR:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_EMPLOYEE_LIST_DATA = \"SET_REPORT_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_REPORT_EMPLOYEE = \"SET_PAGING_REPORT_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportEmployeeListData = (payload) => {\n  return {\n    type: SET_REPORT_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportEmployee = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportEmployeeListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee.paging;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/* eslint-disable default-case */\nimport {\n  SET_REPORT_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_REPORT_EMPLOYEE,\n} from \"./ReportEmployeeActions\";\n\nexport const initialState = {\n  listReportEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportEmployeeReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  switch (action.type) {\n    case SET_REPORT_EMPLOYEE_LIST_DATA:\n      newState.listReportEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_REPORT_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_LIST_DATA = \"SET_DIVISION_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_ID = \"SET_SELECTED_DIVISION_ID\";\nexport const SET_SELECTED_DIVISION_DATA = \"SET_SELECTED_DIVISION_DATA\";\nexport const SET_PAGING_DIVISION = \"SET_PAGING_DIVISION\";\n\nexport const setDivisionListData = (payload) => {\n  return {\n    type: SET_DIVISION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivision = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteDivisionProcess = async (divisionId) => {\n  const { getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteDivision(divisionId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddDivisionProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = headDivision[0];\n    payload.title = values.title;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.title = values.title;\n    payload.employee_id = headDivision[0];\n    payload.description = values.description ?? \"none\";\n    await Invoke.updateDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editDivisionForm\", `id`, \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, \"\"));\n  dispatch(change(\"editDivisionForm\", `headDivision`, \"\"));\n};\n\nexport const mapDetailDivisionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().division.selectedDivisionData;\n\n  dispatch(change(\"editDivisionForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, data.description ?? \"\"));\n  dispatch(\n    change(\n      \"editDivisionForm\",\n      `headDivision`,\n      `${data.employee_id}|${data.employee_name}`\n    )\n  );\n};\n\nexport const getDivisionListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getDivisionList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionListData(data.callback.data));\n    store.dispatch(setPagingDivision(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveDivisionRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionProcess(values);\n      } else {\n        doEditDivisionProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteDivisionRequested = async (divisionId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteDivisionProcess(divisionId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_DIVISION_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_ID,\n  SET_SELECTED_DIVISION_DATA,\n  SET_PAGING_DIVISION\n} from \"./DivisionActions\";\n\nexport const initialState = {\n  listDivision: [],\n  selectedDivisionId: \"\",\n  selectedDivisionData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_LIST_DATA:\n      newState.listDivision = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_ID:\n      newState.selectedDivisionId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_DATA:\n      newState.selectedDivisionData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_UNIT_LIST_DATA = \"SET_DIVISION_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_UNIT_ID = \"SET_SELECTED_DIVISION_UNIT_ID\";\nexport const SET_SELECTED_DIVISION_UNIT_DATA =\n  \"SET_SELECTED_DIVISION_UNIT_DATA\";\nexport const SET_PAGING_DIVISION_UNIT = \"SET_PAGING_DIVISION_UNIT\";\n\nexport const setDivisionUnitListData = (payload) => {\n  return {\n    type: SET_DIVISION_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivisionUnit = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisonUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_DATA,\n    payload,\n  };\n};\n\nexport const getDivisionUnitListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const divisionId = getState().division.selectedDivisionId;\n  try {\n    const { data } = await Invoke.getDivisionUnitList(\n      divisionId,\n      page,\n      limit,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionUnitListData(data.callback.data));\n    store.dispatch(setPagingDivisionUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddDivisionUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const divisionId = getState().division.selectedDivisionId;\n  const { page, limit } = paging;\n  const splitUnitId = values.unit.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = splitUnitId[0];\n    payload.division_id = divisionId;\n\n    await Invoke.addDivisionUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const unitId = getState().division.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveDivisionUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionUnitProcess(values);\n      } else {\n        doEditDivisionUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_DIVISION_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_UNIT_ID,\n  SET_SELECTED_DIVISION_UNIT_DATA,\n  SET_PAGING_DIVISION_UNIT,\n} from \"./DivisionUnitActions\";\n\nexport const initialState = {\n  listDivisionUnit: [],\n  selectedDivisionUnitId: \"\",\n  selectedDivisionUnitData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionUnitReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_UNIT_LIST_DATA:\n      newState.listDivisionUnit = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_ID:\n      newState.selectedDivisionUnitId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_DATA:\n      newState.selectedDivisionUnitData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_DASHBOARD_DATA = \"SET_DASHBOARD_DATA\";\n\nexport const setDashboardData = (payload) => {\n  return {\n    type: SET_DASHBOARD_DATA,\n    payload,\n  };\n};\n\nexport const getDashboardProgressData = async () => {\n  try {\n    const { dispatch } = store;\n    const { data } = await Invoke.getDashboardProgressData();\n    dispatch(setDashboardData(data.callback));\n  } catch (e) {\n    console.log(\"error : \", e);\n  }\n};\n","import { SET_DASHBOARD_DATA } from \"./DashboardActions\";\n\nexport const initialState = {\n  dashboardData: {},\n};\n\nexport default function dashboardReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DASHBOARD_DATA:\n      newState.dashboardData = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\n\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_UNIT_SERIAL_NUMBER_DATA = \"SET_UNIT_SERIAL_NUMBER_DATA\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_ID =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_ID\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_DATA =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_DATA\";\n\nexport const setUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const handleSearch = (val, keyword) => {\n  const { getState, dispatch } = store;\n  const { page, limit } = getState().unitSerialNumber.paging;\n  try {\n    if (!val) {\n      toast.warning(\n        \"Wajib memilih customer untuk menampilkan data serial number\",\n        {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n      dispatch(setUnitSerialNumberData([]));\n      return;\n    }\n    const splitCustomerId = val.customer.split(\"|\");\n    getUnitSerialNumber(page, limit, keyword, splitCustomerId[0]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUnitSerialNumber = async (\n  page,\n  limit,\n  keyword = \"\",\n  customerId\n) => {\n  // If customerId is null or undefined return this\n  if (!customerId) {\n    store.dispatch(setUnitSerialNumberData([]));\n    return;\n  }\n\n  const { getState } = store;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  try {\n    const { data } = await Invoke.getUnitSerialNumber(\n      page,\n      limit,\n      keyword,\n      unitModelId,\n      customerId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitSerialNumberData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitSerialNumberProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const customerId = values.customer.split(\"|\");\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.customer_id = customerId[0];\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.description ?? \"None\";\n\n    await Invoke.addUnitSerialNumber(payload, unitModelId);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitSerialNumberProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const unitSerialNumberId =\n    getState().unitSerialNumber.selectedUnitSerialNumberId;\n\n  try {\n    const payload = {};\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.descriptions ?? \"None\";\n\n    await Invoke.updateUnitSerialNumber(\n      payload,\n      unitModelId,\n      unitSerialNumberId\n    );\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (serialNumberId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitSerialNumber(unitModelId, serialNumberId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitSerialNumber(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitSerialNumberRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitSerialNumberProcess(values);\n      } else {\n        doEditUnitSerialNumberProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitSerialNumberToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitSerialNumber.selectedUnitSerialNumberData;\n\n  dispatch(\n    change(\n      \"editUnitSerialNumberForm\",\n      `customer`,\n      `${data.customer_id}|${data.customer_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `description`, data.descriptions ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitSerialNumberForm\", `customer`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `description`, \"\"));\n};\n","import {\n  SET_UNIT_SERIAL_NUMBER_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n  SET_PAGING_UNIT_MODEL,\n} from \"./UnitSerialNumberActions\";\n\nexport const initialState = {\n  listUnitSerialNumber: [],\n  selectedUnitSerialNumberId: \"\",\n  selectedUnitSerialNumberData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitSerialNumberReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_SERIAL_NUMBER_DATA:\n      newState.listUnitSerialNumber = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_ID:\n      newState.selectedUnitSerialNumberId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_DATA:\n      newState.selectedUnitSerialNumberData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\r\nimport Invoke from \"../../../app/axios/Invoke\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport { showToast } from \"../../Roles/Store/RolesActions\";\r\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\r\n\r\nexport const SET_UNIT_JOB_FORMS_LIST_DATA = \"SET_UNIT_JOB_FORMS_LIST_DATA\";\r\nexport const SET_PAGING_UNIT_JOB_FORMS = \"SET_PAGING_UNIT_JOB_FORMS\";\r\n\r\nexport const setUnitJobFormsListData = (payload) => {\r\n  return {\r\n    type: SET_UNIT_JOB_FORMS_LIST_DATA,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setPagingUnitJobForms = (payload) => {\r\n  return {\r\n    type: SET_PAGING_UNIT_JOB_FORMS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getUnitJobFormsListDataRequested = async (jobFormId = \"\") => {\r\n  const { getState } = store;\r\n  const unitId = getState().units.selectedUnitsId;\r\n  try {\r\n    // Get data unit jobforms from API\r\n    const { data } = await Invoke.getListUnitJobForms(unitId, jobFormId);\r\n\r\n    // Store data to reducer\r\n    store.dispatch(setUnitJobFormsListData(data.callback));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import {\r\n  SET_UNIT_JOB_FORMS_LIST_DATA,\r\n  SET_PAGING_UNIT_JOB_FORMS,\r\n} from \"./UnitJobFormActions\";\r\n\r\nexport const initialState = {\r\n  listUnitJobForms: [],\r\n  paging: {\r\n    page: 1,\r\n    limit: 10,\r\n    totalPage: 0,\r\n  },\r\n};\r\n\r\nexport default function unitJobFormsReducer(state = initialState, action) {\r\n  const newState = Object.assign({}, state);\r\n\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case SET_UNIT_JOB_FORMS_LIST_DATA:\r\n      newState.listUnitJobForms = action.payload;\r\n      return { ...newState };\r\n\r\n    case SET_PAGING_UNIT_JOB_FORMS:\r\n      newState.paging = { ...state.paging, ...action.payload };\r\n      return { ...newState };\r\n  }\r\n\r\n  return state;\r\n}\r\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_WORKING_HOURS_LIST_DATA = \"SET_WORKING_HOURS_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setWorkingHoursListData = (payload) => {\n  return {\n    type: SET_WORKING_HOURS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getWorkingHoursListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().workingHours.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getWorkingHours(\n      page,\n      limit,\n      from,\n      until,\n      keyword\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListWorkingHours = [];\n\n    if (data.callback.data.length > 0) {\n      data.callback.data.map((item, index) => {\n        newListWorkingHours.push({\n          created: moment(item.created_date).format(\"YYYY-MM-DD\"),\n          done: moment(item.done_date).format(\"YYYY-MM-DD\"),\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setWorkingHoursListData(newListWorkingHours ?? []));\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n\n  if (!values) {\n    await getWorkingHoursListDataRequested(page, limit);\n    return;\n  }\n  const keyword = values.keyword ?? \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  try {\n    await getWorkingHoursListDataRequested(\n      page,\n      limit,\n      keyword,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_WORKING_HOURS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./WorkingHoursActions\";\n\nexport const initialState = {\n  listWorkingHours: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function workingHoursReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_WORKING_HOURS_LIST_DATA:\n      newState.listWorkingHours = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { combineReducers } from \"redux\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport { connectRouter } from \"connected-react-router\";\nimport { reducer as formReducer } from \"redux-form\";\nimport history from \"./History\";\nimport authReducer from \"../modules/Auth/Store/AuthReducer\";\nimport listServicesReducer from \"../modules/ListServices/Store/ListServicesReducer\";\nimport ComponentReducer from \"../modules/App/Store/ComponentReducer\";\nimport customersReducer from \"../modules/Customers/Store/CustomersReducer\";\nimport adminReducer from \"../modules/Admin/Store/AdminReducer\";\nimport rolesReducer from \"../modules/Roles/Store/RolesReducer\";\nimport employeesReducer from \"../modules/Employees/Store/EmployeesReducer\";\nimport employeeToolsReducer from \"../modules/Employees/Store/EmployeeTools/EmployeeToolsReducer\";\nimport masterDataReducer from \"../modules/MasterData/Store/MasterDataReducer\";\nimport unitReducer from \"../modules/Units/Store/UnitsReducer\";\nimport jobFormsReducer from \"../modules/JobForms/Store/JobFormsReducer\";\nimport branchReducer from \"../modules/Branch/Store/BranchReducer\";\nimport detailServiceTransactionReducer from \"../modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer\";\nimport unitModelReducer from \"../modules/Units/Store/UnitModelReducer\";\nimport externalServiceReducer from \"../modules/ExternalService/Store/ExternalServiceReducer\";\nimport identificationReducer from \"../modules/Identification/Store/IdentificationReducer\";\nimport machineConfigurationReducer from \"../modules/MachineConfiguration/Store/MachineConfigurationReducer\";\nimport toolsReducer from \"../modules/Tools/Store/ToolsReducer\";\nimport formCategoryReducer from \"../modules/FormCategory/Store/FormCategoryReducer\";\nimport unitFieldsReducer from \"../modules/Units/Store/UnitFieldsReducer\";\nimport monitoringEmployeeReducer from \"../modules/MonitoringEmployee/Store/MonitoringEmployeeReducer\";\nimport reportServiceRepairReducer from \"../modules/ReportServiceRepair/Store/ReportServiceRepairReducer\";\nimport reportEmployeeReducer from \"../modules/ReportEmployee/Store/ReportEmployeeReducer\";\nimport divisionReducer from \"../modules/Division/Store/DivisionReducer\";\nimport divisionUnitReducer from \"../modules/Division/Store/DivisionUnitReducer\";\nimport dashboardReducer from \"../modules/Dashboard/Store/DashboardReducer\";\nimport unitSerialNumberReducer from \"../modules/Units/Store/UnitSerialNumberReducer\";\nimport unitJobFormsReducer from \"../modules/Units/Store/UnitJobFormsReducer\";\nimport workingHoursReducer from \"../modules/WorkingHours/Store/WorkingHoursReducer\";\n\nconst rootReducers = combineReducers({\n  router: connectRouter(history),\n  auth: authReducer,\n  services: listServicesReducer,\n  externalService: externalServiceReducer,\n  admins: adminReducer,\n  roles: rolesReducer,\n  units: unitReducer,\n  unitModels: unitModelReducer,\n  unitFields: unitFieldsReducer,\n  unitSerialNumber: unitSerialNumberReducer,\n  unitJobForms: unitJobFormsReducer,\n  jobForms: jobFormsReducer,\n  customers: customersReducer,\n  employees: employeesReducer,\n  employeeTools: employeeToolsReducer,\n  component: ComponentReducer,\n  identification: identificationReducer,\n  workingHours: workingHoursReducer,\n  masters: masterDataReducer,\n  branch: branchReducer,\n  formCategory: formCategoryReducer,\n  tools: toolsReducer,\n  machineConfiguration: machineConfigurationReducer,\n  detailService: detailServiceTransactionReducer,\n  monitoringEmployee: monitoringEmployeeReducer,\n  serviceRepair: reportServiceRepairReducer,\n  reportEmployee: reportEmployeeReducer,\n  division: divisionReducer,\n  divisionUnit: divisionUnitReducer,\n  dashboard: dashboardReducer,\n  form: formReducer,\n  toastr: toastrReducer,\n});\n\nexport default rootReducers;\n","import * as _ from \"lodash\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport Saga from \"./Saga/SagaMiddleware\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport history from \"../app/History\";\nimport rootReducers from \"./RootReducers\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"form\", \"component\"],\n};\n\nconst resetEnhancer = (rootReducer) => (state, action) => {\n  if (action.type !== \"LOGOUT\") {\n    return rootReducer(state, action);\n  } else {\n    const newState = rootReducer(undefined, {});\n    newState.router = state.router;\n    return newState;\n  }\n};\n\nconst persistedReducer = persistReducer(\n  persistConfig,\n  resetEnhancer(rootReducers)\n);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== \"production\" &&\n  typeof window === \"object\" &&\n  _.has(window, \"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\")\n    ? composeWithDevTools({ trace: true, traceLimit: 1000 })\n    : compose;\n\nexport const store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n);\nexport const persistor = persistStore(store);\nsagaMiddleware.run(Saga);\n","import { Form } from \"antd\";\nconst FormItem = Form.Item;\n\nexport const makeField =\n  (Component, props) =>\n  ({ style, input, meta, children, hasFeedback, label, ...rest }) => {\n    const hasError = meta.touched && meta.invalid;\n    return (\n      <FormItem\n        validateStatus={hasError ? \"error\" : \"success\"}\n        hasFeedback={hasFeedback && hasError}\n        help={hasError && meta.error}\n      >\n        <Component {...props} {...input} {...rest} children={children} />\n      </FormItem>\n    );\n  };\n","import React from \"react\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport styled from \"styled-components\";\ninterface IProps {\n  loading: boolean;\n}\n\nconst Overlay = styled.div`\n  position: fixed;\n  display: block;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 99999;\n  padding-top: 23vh;\n  text-align: center;\n  margin: auto;\n  display: block;\n`;\n\nconst CGlobalOverlay: React.FC<IProps> = (props) => {\n  const { loading } = props;\n  if (loading) {\n    return (\n      <Overlay>\n        <ScaleLoader\n          height={120}\n          width={18}\n          radius={12}\n          margin={5}\n          color={\"#faad14\"}\n          loading={true}\n        />\n      </Overlay>\n    );\n  }\n  return null;\n};\n\nexport default CGlobalOverlay;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Command } from \"react-feather\";\n\nconst Sidebar = ({\n  role,\n  mainMenu,\n  masterDataMenu,\n  reportMenu,\n  serviceRepairMenu,\n  reportDataMenu,\n}) => {\n  return (\n    <div>\n      <nav class=\"sidebar\">\n        <div class=\"sidebar-header\">\n          <a href=\"#\" class=\"sidebar-brand\">\n            Rutan<span>Admin</span>\n          </a>\n          <div class=\"sidebar-toggler not-active\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </div>\n        <div class=\"sidebar-body\">\n          <ul class=\"nav\">\n            {mainMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Main</li>\n            )}\n            {mainMenu?.length > 0 &&\n              mainMenu.map((item, index) => (\n                <li key={`sidebar-main-menu-${index}`} class=\"nav-item\">\n                  <a href={item.path} class=\"nav-link\">\n                    {item.icon}\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {masterDataMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Master Data</li>\n            )}\n            {masterDataMenu?.length > 0 &&\n              masterDataMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    {item.icon}\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {serviceRepairMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Service Repair</li>\n            )}\n            {serviceRepairMenu?.length > 0 &&\n              serviceRepairMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    {item.icon}\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {reportMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Monitoring</li>\n            )}\n            {reportMenu?.length > 0 &&\n              reportMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    {item.icon}\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {reportDataMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Laporan</li>\n            )}\n            {reportDataMenu?.length > 0 &&\n              reportDataMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    {item.icon}\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default withRouter(Sidebar);\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer class=\"footer d-flex flex-column flex-md-row align-items-center justify-content-between\">\n      <p class=\"text-muted text-center text-md-left\">\n        Copyright © {new Date().getFullYear() + \" \"}\n        <a href=\"#\">Rutan Team</a>. All rights reserved\n      </p>\n      <p class=\"text-muted text-center text-md-left mb-0 d-none d-md-block\">\n        Handcrafted With{\" \"}\n        <i class=\"mb-1 text-primary ml-1 icon-small\" data-feather=\"heart\"></i>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Navbar = (props) => {\n  const { onLogout, userDetail } = props;\n  return (\n    <nav class=\"navbar\">\n      <a href=\"#\" class=\"sidebar-toggler\">\n        <i data-feather=\"menu\"></i>\n      </a>\n      <div class=\"navbar-content\">\n        <form class=\"search-form\">\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <div class=\"input-group-text\">\n                <i data-feather=\"search\"></i>\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"navbarForm\"\n              placeholder=\"Search here...\"\n            />\n          </div>\n        </form>\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item dropdown nav-messages\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"messageDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"mail\"></i>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"messageDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">9 New Messages</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Leonardo Payne</p>\n                      <p class=\"sub-text text-muted\">2 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project status</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Carl Henson</p>\n                      <p class=\"sub-text text-muted\">30 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Client meeting</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Jensen Combs</p>\n                      <p class=\"sub-text text-muted\">1 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project updates</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>{userDetail.fullname}</p>\n                      <p class=\"sub-text text-muted\">2 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project deadline</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Yaretzi Mayo</p>\n                      <p class=\"sub-text text-muted\">5 hr ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">New record</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-notifications\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"notificationDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"bell\"></i>\n              <div class=\"indicator\">\n                <div class=\"circle\"></div>\n              </div>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"notificationDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">6 New Notifications</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"user-plus\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New customer registered</p>\n                    <p class=\"sub-text text-muted\">2 sec ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"gift\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New Order Recieved</p>\n                    <p class=\"sub-text text-muted\">30 min ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"alert-circle\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Server Limit Reached!</p>\n                    <p class=\"sub-text text-muted\">1 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"layers\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Apps are ready for update</p>\n                    <p class=\"sub-text text-muted\">5 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"download\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Download completed</p>\n                    <p class=\"sub-text text-muted\">6 hrs ago</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-profile\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"profileDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"https://via.placeholder.com/30x30\" alt=\"profile\" />\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"profileDropdown\">\n              <div class=\"dropdown-header d-flex flex-column align-items-center\">\n                {/* <div class=\"figure mb-3\">\n                  <img src=\"https://via.placeholder.com/80x80\" alt=\"\" />\n                </div> */}\n                <div class=\"info text-center\">\n                  <p class=\"name font-weight-bold mb-0\">\n                    {userDetail.fullname\n                      ? userDetail.fullname.toUpperCase()\n                      : \"Anonym\"}\n                  </p>\n                  <p class=\"email text-muted mb-3\">\n                    {userDetail.roles.map((item) => {\n                      if (userDetail.roles.length > 1) {\n                        return `${item.name},`;\n                      }\n                      return item.name;\n                    })}\n                  </p>\n                </div>\n              </div>\n              <div class=\"dropdown-body\">\n                <ul class=\"profile-nav p-0 pt-3\">\n                  <li class=\"nav-item\">\n                    <a href=\"pages/general/profile.html\" class=\"nav-link\">\n                      <i data-feather=\"user\"></i>\n                      <span>Profile</span>\n                    </a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a onClick={onLogout} class=\"nav-link cursor-pointer\">\n                      <i data-feather=\"log-out\"></i>\n                      <span>Log Out</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport CGlobalOverlay from \"../../../components/CGlobalOverlay/CGlobalOverlay\";\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport Navbar from \"../../../components/Navbar/Navbar\";\nimport { withRouter } from \"react-router-dom\";\n\nconst TemplateComponent = (props) => {\n  const {\n    children,\n    isGlobalLoading,\n    isLandingPage,\n    logout,\n    userDetail,\n    role,\n    mainMenu,\n    masterDataMenu,\n    reportMenu,\n    serviceRepairMenu,\n    reportDataMenu,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <CGlobalOverlay loading={isGlobalLoading} />\n      {isLandingPage && (\n        <Sidebar\n          role={role}\n          masterDataMenu={masterDataMenu}\n          mainMenu={mainMenu}\n          reportMenu={reportMenu}\n          serviceRepairMenu={serviceRepairMenu}\n          reportDataMenu={reportDataMenu}\n        />\n      )}\n      <div className={`page-wrapper ${!isLandingPage ? \"full-page\" : \"\"}`}>\n        {isLandingPage && <Navbar onLogout={logout} userDetail={userDetail} />}\n        {children}\n        {isLandingPage && <Footer />}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(TemplateComponent);\n","import { createSelector } from \"reselect\";\n\nconst selectorAuth = (state) => state.auth;\n\n// SELECTOR FOR AUTH\nexport const AllAuthData = () => createSelector(selectorAuth, (state) => state);\nexport const Token = () =>\n  createSelector(selectorAuth, (state) => state.accessToken);\nexport const UserDetail = () =>\n  createSelector(selectorAuth, (state) => state.userDetail);\nexport const ErrorData = () =>\n  createSelector(selectorAuth, (state) => state.error);\nexport const UserRole = () =>\n  createSelector(selectorAuth, (state) => state?.userDetail?.roles);\n  export const UserMenus = () =>\n  createSelector(selectorAuth, (state) => state?.userDetail?.menus);\n","import { createSelector } from \"reselect\";\n\nconst selectorComponent = (state) => state.component;\n\nexport const IsGlobalLoading = () =>\n  createSelector(selectorComponent, (state) => state.isLoadingGlobal);\n","import React from \"react\";\nimport { compose } from \"redux\";\n\nimport TemplateComponent from \"../Component/TemplateComponent\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as authActions from \"../../Auth/Store/AuthAction\";\nimport * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\nimport * as AppSelector from \"../../App/Selector/AppSelector\";\nimport {\n  Box,\n  Briefcase,\n  Clock,\n  Command,\n  FilePlus,\n  FileText,\n  Key,\n  Link,\n  List,\n  Monitor,\n  Settings,\n  Tool,\n  User,\n  Users,\n} from \"react-feather\";\n\nconst TemplateContainer = (props) => {\n  const [role, setRole] = React.useState(\"\");\n  const { userDetail } = props;\n\n  React.useEffect(() => {\n    if (userDetail && userDetail.role) {\n      setRole(userDetail.role[0].name);\n    }\n  }, [userDetail]);\n\n  const getIconName = (menu) => {\n    switch (menu) {\n      case \"/dashboard\":\n        return <Command size={14} style={{ marginRight: -15 }} />;\n\n      case \"/admin\":\n        return <User size={14} style={{ marginRight: -15 }} />;\n\n      case \"/cabang\":\n        return <Link size={14} style={{ marginRight: -15 }} />;\n\n      case \"/employees\":\n        return <Users size={14} style={{ marginRight: -15 }} />;\n\n      case \"/customer\":\n        return <Users size={14} style={{ marginRight: -15 }} />;\n\n      case \"/division\":\n        return <Briefcase size={14} style={{ marginRight: -15 }} />;\n\n      case \"/role\":\n        return <Key size={14} style={{ marginRight: -15 }} />;\n\n      case \"/tools\":\n        return <Tool size={14} style={{ marginRight: -15 }} />;\n\n      case \"/machine\":\n        return <Settings size={14} style={{ marginRight: -15 }} />;\n\n      case \"/jobforms\":\n        return <FileText size={14} style={{ marginRight: -15 }} />;\n\n      case \"/category\":\n        return <FileText size={14} style={{ marginRight: -15 }} />;\n\n      case \"/unit\":\n        return <Box size={14} style={{ marginRight: -15 }} />;\n\n      case \"/internal-service\":\n        return <FilePlus size={14} style={{ marginRight: -15 }} />;\n\n      case \"/external-service\":\n        return <FilePlus size={14} style={{ marginRight: -15 }} />;\n\n      case \"/list_service\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/monitoring-employee\":\n        return <Monitor size={14} style={{ marginRight: -15 }} />;\n\n      case \"/identification\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/report_trans\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/report_identification\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/report_employee\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/working-hours\":\n        return <Clock size={14} style={{ marginRight: -15 }} />;\n\n      default:\n        return \"command\";\n    }\n  };\n\n  const mainMenu = [];\n  const masterDataMenu = [];\n  const reportMenu = [];\n  const serviceRepairMenu = [];\n  const reportDataMenu = [];\n\n  if (userDetail) {\n    userDetail.menus.map((item, index) => {\n      let menu = {};\n      menu.icon = getIconName(item.path);\n      menu.name = item.menu;\n      menu.path = item.path;\n\n      if (\n        item.path === \"/admin\" ||\n        item.path === \"/cabang\" ||\n        item.path === \"/employees\" ||\n        item.path === \"/customer\" ||\n        item.path === \"/division\" ||\n        item.path === \"/role\" ||\n        item.path === \"/tools\" ||\n        item.path === \"/machine\" ||\n        item.path === \"/jobforms\" ||\n        item.path === \"/category\" ||\n        item.path === \"/unit\" ||\n        item.path === \"/identification\"\n      ) {\n        masterDataMenu.push(menu);\n      } else if (\n        item.path === \"/internal-service\" ||\n        item.path === \"/external-service\" ||\n        item.path === \"/list_service\"\n      ) {\n        serviceRepairMenu.push(menu);\n      } else if (item.path === \"/monitoring-employee\") {\n        reportMenu.push(menu);\n      } else if (\n        item.path === \"/report_trans\" ||\n        item.path === \"/report_employee\" ||\n        item.path === \"/report_identification\" ||\n        item.path === \"/working-hours\"\n      ) {\n        reportDataMenu.push(menu);\n      } else {\n        mainMenu.push(menu);\n      }\n    });\n  }\n\n  return (\n    <TemplateComponent\n      role={role}\n      mainMenu={mainMenu}\n      masterDataMenu={masterDataMenu}\n      reportMenu={reportMenu}\n      serviceRepairMenu={serviceRepairMenu}\n      reportDataMenu={reportDataMenu}\n      {...props}\n    />\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  isGlobalLoading: AppSelector.IsGlobalLoading(),\n  userDetail: AuthSelector.UserDetail(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => {\n    authActions.doLogout(dispatch);\n  },\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(TemplateContainer);\n","import * as React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\n\nconst withTemplate = (Template, WrappedComponent, isLandingPage) => {\n  const AddedTemplate = (props) => {\n    return (\n      <Template {...props} isLandingPage={isLandingPage}>\n        <WrappedComponent {...props} />\n      </Template>\n    );\n  };\n\n  return hoistNonReactStatics(AddedTemplate, WrappedComponent);\n};\n\nexport default withTemplate;\n","import React from \"react\";\nimport { Button } from \"antd\";\n\ninterface IProps {\n  onClick: any;\n  disabled: boolean;\n  isLoading: boolean;\n  backgroundColor: string;\n  icon: any;\n  shape: \"default\" | \"circle\" | \"round\";\n  type: \"primary\" | \"dashed\" | \"default\" | \"ghost\" | \"link\" | \"text\";\n  size: \"middle\" | \"small\" | \"large\";\n  danger: boolean;\n  block: boolean;\n}\n\nconst CButtonAntd: React.FC<IProps> = (props) => {\n  const {\n    onClick,\n    children,\n    isLoading,\n    disabled,\n    icon,\n    shape,\n    type,\n    size,\n    danger,\n    backgroundColor,\n  } = props;\n  return (\n    <Button\n      style={{\n        alignSelf: \"center\",\n        backgroundColor: backgroundColor,\n        borderColor: backgroundColor,\n      }}\n      block={props.block ?? false}\n      icon={icon ?? null}\n      type={type ?? \"default\"}\n      shape={shape ?? \"default\"}\n      onClick={onClick}\n      disabled={disabled}\n      loading={isLoading}\n      size={size ?? \"middle\"}\n      danger={danger}\n    >\n      {isLoading ? \"Loading\" : children}\n    </Button>\n  );\n};\n\nexport default CButtonAntd;\n","import { Table } from \"antd\";\nimport React from \"react\";\nimport \"../../../app/style/tableStyle.css\";\n\nconst DashboardComponent = (props) => {\n  const { userDetail, headers, listServices, dashboard, isBlocked } = props;\n  return (\n    <div>\n      <div class=\"page-content\">\n        <div class=\"d-flex justify-content-between align-items-center flex-wrap grid-margin\">\n          <h4 class=\"mt-5 ml-2\">{`Hallo, ${\n            userDetail.fullname ?? \"Anonym\"\n          }`}</h4>\n        </div>\n        {!isBlocked && (\n          <div class=\"row\">\n            <div class=\"col-12 col-xl-12 stretch-card\">\n              <div class=\"row flex-grow\">\n                <div class=\"col-md-3 grid-margin stretch-card\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <div class=\"d-flex justify-content-between align-items-baseline\">\n                        <h6 class=\"card-title mb-0\">Total Customer</h6>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12 col-md-12 col-xl-8\">\n                          <h3 class=\"mb-2\">{dashboard.totalCustomer}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3 grid-margin stretch-card\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <div class=\"d-flex justify-content-between align-items-baseline\">\n                        <h6 class=\"card-title mb-0\">Total Service Internal</h6>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-6 col-md-12 col-xl-8\">\n                          <h3 class=\"mb-2\">{dashboard.totalInternalService}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3 grid-margin stretch-card\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <div class=\"d-flex justify-content-between align-items-baseline\">\n                        <h6 class=\"card-title mb-0\">Total Service External</h6>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-6 col-md-12 col-xl-8\">\n                          <h3 class=\"mb-2\">{dashboard.totalExternalService}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3 grid-margin stretch-card\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <div class=\"d-flex justify-content-between align-items-baseline\">\n                        <h6 class=\"card-title mb-0\">Total Identifikasi</h6>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-6 col-md-12 col-xl-8\">\n                          <h3 class=\"mb-2\">{dashboard.totalIdentification}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div class=\"row\">\n          <div class=\"col-12 col-xl-12 grid-margin stretch-card\"></div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-lg-12 col-xl-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between align-items-baseline mb-2\">\n                  <h6 class=\"card-title mb-0\">10 Service Terbaru</h6>\n                </div>\n                <p class=\"text-muted mb-4\">\n                  Menampilkan 10 service berdasarkan tanggal terbaru\n                </p>\n                {/* <div class=\"monthly-sales-chart-wrapper\"> */}\n                {/* <canvas id=\"monthly-sales-chart\"></canvas> */}\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      // ...pagination,\n                    }}\n                  />\n                </div>\n                {/* </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardComponent;\n","import * as AdminActions from \"../modules/Admin/Store/AdminActions\";\nimport * as RoleActions from \"../modules/Roles/Store/RolesActions\";\nimport * as MasterDataActions from \"../modules/MasterData/Store/MasterDataActions\";\nimport * as BranchActions from \"../modules/Branch/Store/BranchActions\";\nimport * as UnitsActions from \"../modules/Units/Store/UnitsActions\";\nimport * as MachineConfigurationActions from \"../modules/MachineConfiguration/Store/MachineConfigurationActions\";\n\nexport const initializeApp = async () => {\n  await AdminActions.getListAdminRequested(1, 10);\n  await RoleActions.getListRolesRequested();\n  await MasterDataActions.loadMenuListData();\n  await MasterDataActions.loadProvinceListData();\n  await BranchActions.getBranchListDataRequested(1, 10);\n  await UnitsActions.getUnitListDataRequested(1, 10);\n  await MachineConfigurationActions.getMachineListDataRequested(1, 10);\n};\n","import { Space, Tag } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport DashboardComponent from \"../Component/DashboardComponent\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\nimport { getDashboardProgressData } from \"../Store/DashboardActions\";\nimport { initializeApp } from \"../../../app/InitializeApp\";\nimport { isBlockedRoleDetailService } from \"../../../app/Helpers\";\n\nconst DashboardContainer = (props) => {\n  const {\n    handlePressEdit,\n    auth: { userDetail },\n    services: { dashboardListServices },\n    dashboard: { dashboardData },\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n\n  if (dashboardListServices.length > 0) {\n    dashboardListServices.map((item, index) => {\n      dashboardListServices[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const checkBlockedRole = () => {\n    const roleId = userDetail.roles[0].role_id;\n    const isBlockedRole = isBlockedRoleDetailService(roleId);\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole()\n    initializeApp();\n    store.dispatch(setGlobalLoading(false));\n    ListServiceActions.getTopTenService();\n    getDashboardProgressData();\n  }, []);\n\n  if (Object.keys(dashboardData).length > 0) {\n    dashboardData.totalCustomer = dashboardData.totalCustomer\n      ? dashboardData.totalCustomer.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalInternalService = dashboardData.totalCustomer\n      ? dashboardData.totalInternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalExternalService = dashboardData.totalExternalService\n      ? dashboardData.totalExternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalIdentification = dashboardData.totalIdentification\n      ? dashboardData.totalIdentification.toLocaleString(\"en-US\")\n      : 0;\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"15%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"40%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: \"15%\",\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: \"15%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  return (\n    <DashboardComponent\n      userDetail={userDetail}\n      headers={headers}\n      listServices={dashboardListServices}\n      dashboard={dashboardData}\n      isBlocked={isBlocked}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  services: state.services,\n  dashboard: state.dashboard,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContainer);\n","import React from \"react\";\n\ninterface IProps {\n  onChange: any;\n  value: string;\n  label: string;\n  name: string;\n  placeholder: string;\n  type: string;\n  typeComponent: string;\n  input: any;\n  error: boolean;\n  message: string;\n  meta: { error: any; touched: any };\n  disabled: boolean;\n  maxLength: number;\n  rows: number;\n  key: string;\n  labelSize: number;\n  linebreak: boolean;\n  onKeyDown: any;\n}\n\nconst CInput: React.FC<IProps> = (props) => {\n  switch (props.typeComponent) {\n    case \"textarea\":\n      return (\n        <div className=\"form-group\">\n          <label htmlFor={props.name}>{props.label}</label>\n          <textarea\n            style={{ whiteSpace: props.linebreak ? \"pre-line\" : \"normal\" }}\n            key={props.key ?? \"\"}\n            id={props.name}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            maxLength={props.maxLength ?? 250}\n            rows={props.rows ?? 8}\n            name={props.name}\n            onChange={props.onChange}\n            onKeyDown={props.onKeyDown}\n            placeholder={props.placeholder ?? \"\"}\n            value={props.value}\n            {...props.input}\n          ></textarea>\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n    default:\n      return (\n        <div className=\"form-group\">\n          <label\n            htmlFor={props.name}\n            style={{ fontSize: props.labelSize ?? 14 }}\n          >\n            {props.label}\n          </label>\n          <input\n            id={props.name}\n            maxLength={props.maxLength ?? 250}\n            value={props.value}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            name={props.name}\n            type={props.type}\n            onChange={props.onChange}\n            placeholder={props.placeholder ?? \"\"}\n            disabled={props.disabled ?? false}\n            {...props.input}\n          />\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n  }\n};\n\nexport default CInput;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\n\nconst LoginComponent = (props) => {\n  const { handleSubmit, submitForm, error } = props;\n\n  return (\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto\">\n          <div class=\"card\">\n            <div class=\"row\">\n              <div class=\"col-md-4 pr-md-0\">\n                <div class=\"auth-left-wrapper\"></div>\n              </div>\n              <div class=\"col-md-8 pl-md-0\">\n                <div class=\"auth-form-wrapper px-4 py-5\">\n                  <a href=\"#\" class=\"noble-ui-logo d-block mb-2\">\n                    Rutan<span>Admin</span>\n                  </a>\n                  <h5 class=\"text-muted font-weight-normal mb-4\">\n                    Selamat datang! Silahkan login dengan akun anda.\n                  </h5>\n                  <form\n                    class=\"forms-sample\"\n                    onSubmit={handleSubmit(submitForm)}\n                  >\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"username\"\n                        label=\"Username\"\n                        placeholder=\"Username\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder=\"Password\"\n                        component={CInput}\n                        type=\"password\"\n                      />\n                    </div>\n\n                    {error.status && (\n                      <span className=\"mt-2 text-danger\">{error.message}</span>\n                    )}\n\n                    <div class=\"mt-3\">\n                      <button\n                        type=\"submit\"\n                        class=\"btn btn-primary mr-2 mb-2 mb-md-0 text-white\"\n                      >\n                        Login\n                      </button>\n                    </div>\n                    <a href=\"register.html\" class=\"d-block mt-3 text-muted\">\n                      Belum punya akun? Daftar\n                    </a>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginComponent;\n","import React from \"react\";\nimport { store } from \"./ConfigureStore\";\n\nexport const validateFormLogin = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Username wajib diisi!\";\n  } else if (values.username.length < 4) {\n    errors.username = \"Minimal 4 karakter atau lebih\";\n  }\n  if (!values.password) {\n    errors.password = \"Password wajib diisi!\";\n  } else if (values.password.length < 5) {\n    errors.password = \"Minimal 5 karakter atau lebih\";\n  }\n  return errors;\n};\n\nexport const validateFormInternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n};\n\nexport const validateFormExternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.jobForm) {\n    errors.jobForm = \"Job Form wajib diisi!\";\n  }\n  if (!values.warranty) {\n    errors.warranty = \"Job Form wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n  return errors;\n};\n\nexport const validateFormRoles = (values) => {\n  const errors = {};\n  if (!values.description) {\n    errors.description = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormCategory = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Judul wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnit = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Unit wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnitModel = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Model wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTools = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama peralatan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormEmployee = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama wajib diisi!\";\n  }\n  if (!values.phone) {\n    errors.phone = \"No. Telpon wajib diisi!\";\n  }\n  if (!values.province) {\n    errors.province = \"Wajib pilih provinsi!\";\n  }\n  if (!values.city) {\n    errors.city = \"Wajib pilih kota!\";\n  }\n  if (!values.branch) {\n    errors.branch = \"Wajib pilih cabang!\";\n  }\n  if (!values.address) {\n    errors.address = \"Wajib isi alamat!\";\n  }\n  return errors;\n};\n\nexport const validateServiceEmployeeForm = (values) => {\n  const errors = {};\n  if (!values.employee) {\n    errors.employee = \"Karyawan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionForm = (values) => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = \"Judul wajib diisi!\";\n  }\n  if (!values.headDivision) {\n    errors.headDivision = \"Kepala divisi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionUnitForm = (values) => {\n  const errors = {};\n  if (!values.unit) {\n    errors.unit = \"Unit wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateEmployeeToolsForm = (values) => {\n  const errors = {};\n  if (!values.tools) {\n    errors.tools = \"Peralatan wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateFormRejected = (values) => {\n  const errors = {};\n  if (!values.reson) {\n    errors.reson = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTransaction = (values) => {\n  const errors = {};\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormEditMedia = (values) => {\n  const { getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const errors = {};\n  if (!values.imageUrl) {\n    errors.imageUrl = \"Field ini wajib diisi!\";\n  }\n  if (!values.title) {\n    errors.title = \"Field ini wajib diisi!\";\n  }\n  if (!values.unit && dataService.is_external === true) {\n    errors.unit = \"Wajib pilih unit!\";\n  }\n\n  return errors;\n};\n\nexport const validateUnitSerialNumberForm = (values) => {\n  const errors = {};\n  if (!values.customer) {\n    errors.customer = \"Wajib memilih customer!\";\n  }\n  if (!values.serialNumber) {\n    errors.serialNumber = \"Serial number wajib diisi!\";\n  }\n  if (!values.descriptions) {\n    errors.descriptions = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDailiesForm = (values) => {\n  const errors = {};\n  if (!values.activityType) {\n    errors.activityType = \"Field ini wajib diisi!\";\n  }\n  if (!values.title) {\n    errors.title = \"Field ini wajib diisi!\";\n  }\n  if (!values.daily_start) {\n    errors.daily_start = \"Field ini wajib diisi!\";\n  }\n  if (!values.daily_end) {\n    errors.daily_end = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n","import React from \"react\";\nimport LoginComponent from \"../Component/LoginComponent\";\nimport { reduxForm, reset } from \"redux-form\"; // imported Field\nimport { connect } from \"react-redux\";\nimport * as AuthActions from \"../Store/AuthAction\";\nimport * as AuthSelector from \"../Selector/AuthSelector\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport { createStructuredSelector } from \"reselect\";\nimport { navigate } from \"../../../app/Helpers\";\n\nconst LoginContainer = (props) => {\n  const { valid } = props;\n\n  const submitForm = (values) => {\n    // navigate(\"/preview-pdf\");\n    if (valid) {\n      AuthActions.handleSubmitLogin(values);\n    }\n  };\n\n  return <LoginComponent submitForm={submitForm} {...props} />;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  auth: AuthSelector.AllAuthData(),\n  error: AuthSelector.ErrorData(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"loginForm\"));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginContainer);\n\nexport default reduxForm({\n  form: \"loginForm\",\n  validate: validateForm.validateFormLogin,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport { Field } from \"redux-form\";\nimport { makeField } from \"../../app/FormHelpers\";\n\nconst { Option } = Select;\nconst ASelect = makeField(Select);\n\nconst CSelect = (props) => {\n  return (\n    <div>\n      <label htmlFor={props.name}>{props.label}</label>\n      <br />\n      <Field\n        style={{ width: \"100%\" }}\n        showSearch={props.showSearch ?? false}\n        name={props.name}\n        component={ASelect}\n        onChange={props.onChange}\n        onBlur={(e) => {\n          if (props.onBlur) {\n            props.onBlur();\n          }\n          e.preventDefault();\n        }}\n        {...props}\n      >\n        <Option disabled={props.disabled ?? false} value=\"\">\n          {props.placeholder ?? \"- Pilih -\"}\n        </Option>\n        {props.data.length > 0 &&\n          props.data.map((item, index) => {\n            return (\n              <Option\n                value={`${item.value}|${item.label}`}\n                key={`option-${index}`}\n              >\n                {item.label}\n              </Option>\n            );\n          })}\n      </Field>\n    </div>\n  );\n};\n\nexport default CSelect;\n","import React from \"react\";\nimport { DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { Field } from \"redux-form\";\n\nconst RenderDatePicker = (props) => {\n  const { name, input, label, meta } = props;\n\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n      <br />\n      <DatePicker\n        placeholder=\"Pilih Tanggal\"\n        style={{ width: \"100%\" }}\n        name={name}\n        onBlur={(e) => {\n          e.preventDefault();\n        }}\n        defaultValue={moment()}\n        {...input}\n      />\n      {meta.touched && meta.error && (\n        <span className=\"mt-2 text-danger\">\n          {meta.error ?? \"This field required\"}\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst CDatePicker = (props) => {\n  return (\n    <Field\n      component={RenderDatePicker}\n      onBlur={(e) => {\n        e.preventDefault();\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default CDatePicker;\n","import React from \"react\";\n\ninterface IProps {\n  type: \"submit\" | \"button\" | \"reset\";\n  onClick: any;\n  isLoading: boolean;\n}\n\nconst CButton: React.FC<IProps> = (props) => {\n  const { type, isLoading, onClick, children } = props;\n  return (\n    <button\n      onClick={onClick}\n      className=\"btn btn-primary\"\n      type={type}\n      disabled={isLoading}\n    >\n      {isLoading && (\n        <span\n          className=\"spinner-grow spinner-grow-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        ></span>\n      )}\n      {isLoading ? \"Loading...\" : children}\n    </button>\n  );\n};\n\nexport default CButton;\n","import React from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\n\nconst InternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    isLoadingFormGlobal,\n  } = props;\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({ employee: \"\" })}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah Internal Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan internal service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-4 mt-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                      />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12 mt-2\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      {/* <input\n                        class=\"btn btn-primary\"\n                        type=\"submit\"\n                        value=\"Simpan\"\n                      /> */}\n                      <CButton type=\"submit\" isLoading={isLoadingFormGlobal}>\n                        Simpan\n                      </CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InternalServiceComponent;\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nconst getCityByIdFromReducer = async (cityId) => {\n  const { getState } = store;\n  const { listCity } = getState().masters;\n  const result = listCity.filter((x) => x.id === cityId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"internalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n    return;\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    await MasterDataActions.loadCityListData(employeeData.province_id);\n\n    const cityData = await getCityByIdFromReducer(employeeData.city_id);\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        cityData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        cityData\n      )\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"internalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"internalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"false\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: \"false\",\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              navigate(\"list_service\");\n              resolve();\n            }, 1000);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, reset } from \"redux-form\";\nimport InternalServiceComponent from \"../Component/InternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as InternalServiceActions from \"../Store/InternalServiceActions\";\nimport * as ComponentAction from \"../../App/Store/ComponentAction\";\nimport { enumTypeInternalServices } from \"../../../app/Helpers\";\n\nconst InternalServiceContainer = (props) => {\n  const {\n    valid,\n    customers: { listCustomersDropdown, paging, keyowrd },\n    employees: { listEmployees },\n    component: { isLoadingFormGlobal },\n  } = props;\n\n  const { page, limit } = paging;\n\n  const submitForm = (values) => {\n    if (valid) {\n      InternalServiceActions.handleSubmitForm(values);\n    } else {\n    }\n  };\n\n  React.useEffect(() => {\n    // Reset all form data and loading when first load data\n    ComponentAction.resetAllGlobalLoadingProcess();\n    // resetForm();\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    EmployeeActions.loadEmployeeListData(1, 999999);\n    MasterDataActions.loadProvinceListData();\n    // MasterDataActions.loadCityListData();\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <InternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      enumType={enumTypeInternalServices}\n      submitForm={submitForm}\n      isLoadingFormGlobal={isLoadingFormGlobal}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"internalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      InternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    InternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n    if (!customerId) {\n      InternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    InternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InternalServiceContainer);\n\nexport default reduxForm({\n  form: \"internalServiceForm\",\n  validate: validateForm.validateFormInternalService,\n  initialValues: {\n    employees: [],\n  },\n})(EnhanceContainer);\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport { getUnitModelEnum } from \"../../../app/Helpers\";\n\nconst ExternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    enumWarranty,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    listUnit,\n    enumJobForms,\n    handleAutoPopulateUnitModel,\n    externalValues,\n    onChangeUnitModel,\n    handleChangeType,\n    isTroubleShoot,\n  } = props;\n\n  const renderUnits = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Unit\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Unit ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-units-${indexUnit}`}\n                    onChange={(val) =>\n                      handleAutoPopulateUnitModel(val, indexUnit)\n                    }\n                    data={listUnit}\n                    name={`${itemUnit}.id`}\n                    label=\"Pilih Unit\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-model-${indexUnit}`}\n                    data={\n                      externalValues[indexUnit].enumUnitModel\n                        ? getUnitModelEnum(\n                            externalValues[indexUnit].enumUnitModel\n                          )\n                        : []\n                    }\n                    name={`${itemUnit}.unitModelId`}\n                    onChange={(val) => {\n                      if (externalValues[indexUnit].enumUnitModel.length > 0) {\n                        onChangeUnitModel(\n                          val,\n                          indexUnit,\n                          externalValues[indexUnit].enumUnitModel\n                        );\n                      }\n                    }}\n                    label=\"Model\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    key={`serial-number-${indexUnit}`}\n                    name={`${itemUnit}.unitModelSerialNumber`}\n                    label=\"Serial Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah External Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan external service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                        onChange={handleChangeType}\n                      />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                    <div class=\"col-md-2\">\n                      {!isTroubleShoot && (\n                        <CSelect\n                          data={enumJobForms}\n                          name=\"jobForm\"\n                          label=\"Job Form\"\n                        />\n                      )}\n                    </div>\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumWarranty}\n                        name=\"warranty\"\n                        label=\"Warranty\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu unit.\n                    </p>\n                  </div>\n                  <FieldArray name=\"units\" component={renderUnits} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      <CButton type=\"submit\">Simpan</CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExternalServiceComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  change,\n  formValueSelector,\n  getFormValues,\n  reduxForm,\n  reset,\n} from \"redux-form\";\nimport ExternalServiceComponent from \"../Component/ExternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ExternalServiceActions from \"../Store/ExternalServiceActions\";\nimport * as UnitsActions from \"../../Units/Store/UnitsActions\";\nimport * as JobFormsActions from \"../../JobForms/Store/JobFormsActions\";\nimport { enumTypeExternalServices, enumWarranty } from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"externalServiceForm\");\n\nconst ExternalServiceContainer = (props) => {\n  const [unitQty, setUnitQty] = React.useState(1);\n  const [unitData, setUnitData] = React.useState([]);\n  const [isTroubleShoot, setIsTroubleShoot] = React.useState(false);\n\n  const {\n    valid,\n    customers: { listCustomersDropdown },\n    employees: { listEmployees },\n    units: { listUnits },\n    jobForms: { listJobForms },\n    resetForm,\n    // form: { externalServiceForm },\n  } = props;\n\n  const submitForm = (values) => {\n    ExternalServiceActions.handleSubmitForm(values);\n    if (valid) {\n      console.log(\"success\");\n    }\n  };\n\n  const handleAddNewUnit = () => {\n    if (unitQty === 5) {\n      return;\n    }\n    setUnitQty(unitQty + 1);\n  };\n\n  const handleSubtractUnit = () => {\n    if (unitQty === 0) {\n      return;\n    }\n    setUnitQty(unitQty - 1);\n  };\n\n  const SelectUnit = [];\n  listUnits.map((item, index) => {\n    SelectUnit.push({\n      id: `unit-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    EmployeeActions.loadEmployeeListData(1, 99999);\n    MasterDataActions.loadProvinceListData();\n    return () => {\n      resetForm();\n    };\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectJobFormsData = [];\n  listJobForms.map((item, index) => {\n    SelectJobFormsData.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const handleChangeType = (val) => {\n    const type = val.split(\"|\");\n    if (\n      type[0] === \"T2\" ||\n      type[0] === \"T4\" ||\n      type[0] === \"T5\" ||\n      type[0] === \"T6\"\n    ) {\n      setIsTroubleShoot(true);\n    } else {\n      setIsTroubleShoot(false);\n    }\n  };\n\n  React.useEffect(() => {\n    UnitsActions.getUnitListDataRequested(1, 100);\n    JobFormsActions.getJobFormsListDataRequested(1, 100);\n    let totalUnit = [];\n    for (let i = 0; i < unitQty; i++) {\n      totalUnit.push(i);\n    }\n    setUnitData(totalUnit);\n  }, [unitQty]);\n\n  return (\n    <ExternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      listUnit={SelectUnit}\n      enumJobForms={SelectJobFormsData}\n      enumType={enumTypeExternalServices}\n      enumWarranty={enumWarranty}\n      submitForm={submitForm}\n      handleAddNewUnit={handleAddNewUnit}\n      handleSubtractUnit={handleSubtractUnit}\n      unitData={unitData}\n      handleChangeType={handleChangeType}\n      isTroubleShoot={isTroubleShoot}\n      // selectedUnitModelList={selectedUnitModelList}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  units: state.units,\n  jobForms: state.jobForms,\n  formValues: getFormValues(\"externalServiceForm\")(state),\n  externalValues: selector(state, \"units\"),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"externalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      ExternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n\n    if (!customerId) {\n      ExternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n  handleAutoPopulateUnitModel: (unitId, fieldIndex) => {\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].enumUnitModel`, [])\n    );\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].unitModelId`, \"\")\n    );\n    if (unitId) {\n      const arrVal = unitId.split(\"|\");\n      ExternalServiceActions.setAutoPopulateUnitModel(arrVal[0], fieldIndex);\n    }\n  },\n  onChangeUnitModel: (val, index, enumModel) => {\n    if (val) {\n      ExternalServiceActions.onChangeUnitModel(val, index, enumModel);\n    }\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExternalServiceContainer);\n\nexport default reduxForm({\n  form: \"externalServiceForm\",\n  validate: validateForm.validateFormExternalService,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryMonitoringServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst MonitoringEmployeeComponent = (props) => {\n  const {\n    headers,\n    listMonitoringEmployee,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumTypeReport,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Monitoring Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryMonitoringServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumTypeReport ?? []}\n                      name=\"type\"\n                      label=\"Tipe\"\n                    />\n                  </div>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                      placeholder=\"-Pilih Semua-\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Laporan\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listMonitoringEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MonitoringEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as MonitoringEmployeeActions from \"../Store/MonitoringEmployeeActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport MonitoringEmployeeComponent from \"../Component/MonitoringEmployeeComponent\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Tag } from \"antd\";\nimport { exportMonitoringEmployeePdf } from \"../Store/MonitoringEmployeeReport\";\nimport moment from \"moment\";\n\nconst MonitoringEmployeeContainer = (props) => {\n  const {\n    getListMonitoringEmployee,\n    handlePressAddNew,\n    monitoringEmployee: { listMonitoringEmployee, paging },\n    branch: { listBranchDropdown },\n    monitoringEmployeeFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMonitoringEmployee.length > 0) {\n    listMonitoringEmployee.map((item, index) => {\n      listMonitoringEmployee[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const printedData = {\n    listMonitoringEmployee,\n    from: moment(),\n    until: moment(),\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"job_type\",\n      key: \"job_type\",\n      render: (jobType) => {\n        let color = jobType === \"loss\" ? \"#f50\" : \"#f50\";\n        return (\n          <Tag style={{ width: 115, textAlign: \"center\" }} color={color}>\n            {jobType ? jobType.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.job_type.length - b.job_type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n      sorter: (a, b) => a.models.length - b.models.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranchDropdown.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListMonitoringEmployee(page, limit);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      MonitoringEmployeeActions.setPagingMonitoringEmployee(paging)\n    );\n    getListMonitoringEmployee(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    MonitoringEmployeeActions.handleSearch(monitoringEmployeeFormValues);\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportMonitoringEmployeePdf(printedData, monitoringEmployeeFormValues);\n  };\n\n  return (\n    <MonitoringEmployeeComponent\n      headers={headers}\n      listMonitoringEmployee={listMonitoringEmployee}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  monitoringEmployee: state.monitoringEmployee,\n  branch: state.branch,\n  monitoringEmployeeFormValues: getFormValues(\"monitoringEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMonitoringEmployee: (page, limit, keyword, type, from, until) =>\n    MonitoringEmployeeActions.getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MonitoringEmployeeContainer);\n\nexport default reduxForm({\n  form: \"monitoringEmployeeForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport moment from \"moment\";\n\nexport const exportMonitoringEmployeePdf = (data, values) => {\n  const { listMonitoringEmployee, from, until } = data;\n  const startDate = moment(from).format(\"YYYY-MM-DD\");\n  const dueDate = moment(until).format(\"YYYY-MM-DD\");\n  const monitoringEmployeeList = [];\n\n  listMonitoringEmployee.map((item, index) => {\n    monitoringEmployeeList.push({\n      no: index + 1,\n      nik: item.employee_nik,\n      name: item.employee_name,\n      phone: item.phone,\n      address: item.address,\n      type: item.job_type,\n      status: item.job_status,\n      branch: item.branch_name,\n      customer: item.customer_name,\n      createdDate: item.created_date,\n    });\n  });\n\n  const doc = new jsPDF();\n  // doc.text({from_left}, {from_top})\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Monitoring Karyawan\", 100, 20, \"center\");\n  doc.setFontSize(16);\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\n\n  doc.setFontSize(12);\n\n  //   Line 1\n  doc.text(15, 42, `Dari Tanggal`);\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\n  doc.text(15, 49, `Sampai Tanggal`);\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\n\n  // Check if filtered by branch\n  if (values) {\n    if (values.branch) {\n      const splitBranch = values.branch.split(\"|\");\n      doc.text(15, 56, `Cabang`);\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\n    }\n  }\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  const headTable = [\n    [\n      { content: \"Tanggal\", rowSpan: 2, halign: \"center\" },\n      {\n        content: \"Karyawan\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n      {\n        content: \"Service\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n    ],\n    [\n      \"NIK\",\n      \"Nama Karyawan\",\n      \"Cabang\",\n      \"Tipe\",\n      \"Customer\",\n      \"Unit\",\n      \"Model\",\n      \"Status\",\n    ],\n  ];\n\n  doc.autoTable({\n    startY: values ? 65 : 60,\n    body: monitoringEmployeeList,\n    theme: \"plain\",\n    head: headTable,\n    headStyles: { halign: \"center\", valign: \"middle\" },\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\n    columns: [\n      { header: \"Tanggal\", dataKey: \"createdDate\" },\n      { header: \"NIK\", dataKey: \"nik\" },\n      { header: \"Nama Karyawan\", dataKey: \"name\" },\n      { header: \"Cabang\", dataKey: \"branch\" },\n      { header: \"Tipe\", dataKey: \"type\" },\n      { header: \"Customer\", dataKey: \"customer\" },\n      { header: \"Unit\", dataKey: \"units\" },\n      { header: \"Model\", dataKey: \"unit_models\" },\n      { header: \"Status\", dataKey: \"status\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { columnWidth: 28 },\n      1: { columnWidth: 20 },\n      // 2: { halign: \"center\" },\n      // 3: { halign: \"center\" },\n      // 4: { halign: \"center\" },\n      // 5: { halign: \"center\" },\n      // 6: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  //   Export\n  doc.save(\"monitoring-employee.pdf\");\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportServiceRepairComponent = (props) => {\n  const { headers, listServiceRepair, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Service Repair</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServiceRepair}\n                    size={\"small\"}\n                    // scroll={{ x: 50, y: 50, scrollToFirstRowOnChange }}#108ee9\n                    scroll\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportServiceRepairComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { BookOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee, getStatus } from \"../../../app/Helpers\";\nimport * as ReportServiceRepairActions from \"../Store/ReportServiceRepairActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport ReportServiceRepairComponent from \"../Component/ReportServiceRepairComponent\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport moment from \"moment\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\n\n\nconst ReportServiceRepairContainer = (props) => {\n  const {\n    handlePressAddNew,\n    serviceRepair: { listServiceRepair, paging },\n    branch: { listBranch },\n    serviceRepairFormValues,\n    getListServiceRepair,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listServiceRepair.length > 0) {\n    listServiceRepair.map((item, index) => {\n      listServiceRepair[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<BookOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type ? type.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_model_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due.length - b.due.length,\n      render: (due) => (\n        <Text>{due ? moment(due).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = getStatus(status).color;\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status ? getStatus(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"start\",\n      key: \"start\",\n      width: 500,\n      render: (start) => (\n        <Text>{start ? moment(start).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: 200,\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListServiceRepair(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportServiceRepairActions.handleSearch(serviceRepairFormValues);\n  };\n\n  return (\n    <ReportServiceRepairComponent\n      headers={headers}\n      listServiceRepair={listServiceRepair}\n      handlePressAddNew={handlePressAddNew}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  serviceRepair: state.serviceRepair,\n  branch: state.branch,\n  serviceRepairFormValues: getFormValues(\"serviceRepairForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServiceRepair: (page, limit, keyword, branch, from, until) =>\n    ReportServiceRepairActions.getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      from,\n      until\n    ),\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportServiceRepairContainer);\n\nexport default reduxForm({\n  form: \"serviceRepairForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportEmployeeComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportEmployeeActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportEmployeeComponent\";\n\nconst ReportEmployeeContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportEmployeeContainer);\n\nexport default reduxForm({\n  form: \"reportEmployeeForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Input, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst ListServiceComponent = (props) => {\n  const {\n    headers,\n    listServices,\n    enumType,\n    enumStatus,\n    onChangePagination,\n    paging,\n    onSearch,\n    listEmployee,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">List Service</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row d-flex mb-2\">\n                      {/* This Filter */}\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumType ?? []}\n                          name=\"typeService\"\n                          label=\"Filter Tipe\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumStatus ?? []}\n                          name=\"statusService\"\n                          label=\"Filter Status\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      ...pagination,\n                    }}\n                    // scroll={{ x: dataTable.tableWidth, y: tableHeight }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListServiceComponent;\n","import React from \"react\";\nimport { Space, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeExternalServices,\n  getIndex,\n  isBlockedRoleListService,\n  SelectStatusServices,\n} from \"../../../app/Helpers\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListServicesComponent from \"../Component/ListServicesComponent\";\nimport * as ListServiceActions from \"../Store/ListServicesActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\n\nconst ListServicesContainer = (props) => {\n  const {\n    user: { roles },\n    getListServices,\n    handlePressEdit,\n    handlePressDelete,\n    services: { listServices, paging },\n    listServiceFormValues,\n    getListEmployeesDropdown,\n    listEmployee,\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n  const { page, limit, totalPage } = paging;\n\n  if (listServices.length > 0) {\n    listServices.map((item, index) => {\n      listServices[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      {roles[0].name === \"Administrator\" && (\n        <CButtonAntd\n          onClick={() => handlePressDelete(record.id)}\n          type=\"primary\"\n          icon={<DeleteOutlined />}\n          size=\"middle\"\n          danger\n        />\n      )}\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"15%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: \"15%\",\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: \"15%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const checkBlockedRole = () => {\n    getListServices(page, limit);\n\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleListService(roleId);\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    getListEmployeesDropdown();\n    checkBlockedRole();\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ListServiceActions.setPagingListService(paging));\n    getListServices(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    ListServiceActions.handleSearch(1, 10, val, listServiceFormValues);\n  };\n\n  const SelectEmployeeData = [];\n  listEmployee.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <ListServicesComponent\n      headers={headers}\n      listServices={listServices}\n      renderActionTable={renderActionTable}\n      handlePressEdit={handlePressEdit}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      enumType={enumTypeExternalServices}\n      enumStatus={SelectStatusServices}\n      listEmployee={SelectEmployeeData}\n      // columns={columns}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  listServiceFormValues: getFormValues(\"listServices\")(state),\n  user: state.auth.userDetail,\n  listEmployee: state.employees.listEmployeeDropdown,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServices: (page, limit, keyword, filterValues) => {\n    ListServiceActions.getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      filterValues\n    );\n  },\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n  getListEmployeesDropdown: () => {\n    EmployeeActions.loadEmployeeDataDropdown();\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListServicesContainer);\n\nexport default reduxForm({\n  form: \"listServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst CTableAntd = (props) => {\n  const { data, headers, renderActions, size, pagination, id } = props;\n\n  const [searchText, setSearchText] = React.useState(\"\");\n  const [searchedColumn, setSearchedColumn] = React.useState(\"\");\n  const searchInput = React.useRef();\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.current.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const columns = [];\n  headers.map((item, index) => {\n    columns.push({\n      title: item.title,\n      dataIndex: item.dataIndex,\n      key: item.dataIndex,\n      width: item.width ?? \"30%\",\n      sorter: item.sorter,\n      render: item.render,\n      sortDirections: [\"descend\", \"ascend\"],\n      ...getColumnSearchProps(item.dataIndex),\n    });\n  });\n\n  if (renderActions) {\n    columns.push({\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActions,\n    });\n  }\n\n  return (\n    <Table\n      bordered\n      id={id ?? \"my-table-customize\"}\n      columns={columns}\n      dataSource={data}\n      size={size ?? \"middle\"}\n      pagination={{\n        size: 3,\n        pageSizeOptions: [\"10\", \"20\", \"50\"],\n        showSizeChanger: true,\n        ...pagination,\n      }}\n      // {...props}\n    />\n  );\n};\n\nCTableAntd.propTypes = {\n  data: PropTypes.array,\n  headers: PropTypes.array,\n  renderActions: PropTypes.any,\n};\n\nexport default CTableAntd;\n","import { Modal } from \"antd\";\nimport React from \"react\";\n\ninterface IProps {\n  visible: boolean;\n  content: any;\n  footer: any;\n  onCancel: any;\n  width: any;\n}\n\nconst CModal: React.FC<IProps> = (props) => {\n  // const showModal = () => {\n  //   setVisible(true)\n  // };\n\n  // const handleOk = () => {\n  //   setLoading(true)\n  //   setTimeout(() => {\n  //     setLoading(false)\n  //     setVisible(false)\n  //   }, 3000);\n  // };\n\n  return (\n    <Modal\n      visible={props.visible}\n      footer={props.footer}\n      destroyOnClose\n      onCancel={props.onCancel}\n      width={props.width ? props.width : 600}\n    >\n      {props.content}\n    </Modal>\n  );\n};\n\nexport default CModal;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"username\"\n            label=\"Username\"\n            placeholder=\"\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"fullname\"\n            label=\"Nama Lengkap\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"password\"\n            label=\"Password\"\n            component={CInput}\n            type=\"password\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AdminModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default AdminModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport AdminModalComponent from \"../Component/AdminModalComponent\";\n\nconst AdminModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    admins: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  return (\n    <AdminModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    AdminActions.saveAdminRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminModalContainer);\n\nexport default reduxForm({\n  form: \"editAdminForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport AdminModalContainer from \"../Container/AdminModalContainer\";\n\nconst { Search } = Input;\n\nconst AdminComponent = (props) => {\n  const {\n    headers,\n    listAdmin,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Admin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Admin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listAdmin}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AdminModalContainer />\n    </div>\n  );\n};\n\nexport default AdminComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport AdminComponent from \"../Component/AdminComponent\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListAdmin,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    admins: { listAdmin, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listAdmin.length > 0) {\n    listAdmin.map((item, index) => {\n      listAdmin[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"10%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Username\",\n      dataIndex: \"username\",\n      key: \"username\",\n      width: \"30%\",\n      sorter: (a, b) => a.username.length - b.username.length,\n    },\n    {\n      title: \"Nama Lengkap\",\n      dataIndex: \"fullname\",\n      key: \"fullname\",\n      width: \"30%\",\n      sorter: (a, b) => a.fullname.length - b.fullname.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListAdmin(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(AdminActions.setPagingAdmin(paging));\n    getListAdmin(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListAdmin(page, limit, val);\n  };\n\n  return (\n    <AdminComponent\n      headers={headers}\n      listAdmin={listAdmin}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListAdmin: (page, limit, keyword) =>\n    AdminActions.getListAdminRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(AdminActions.setSelectedAdminData({}));\n    await dispatch(AdminActions.setSelectedAdminId(\"\"));\n    dispatch(AdminActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    AdminActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(AdminActions.setFormStatus(\"edit\"));\n    await dispatch(AdminActions.setSelectedAdminId(record.id));\n    await dispatch(AdminActions.setSelectedAdminData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await AdminActions.mapDetailAdminToForm();\n  },\n  handlePressDelete: async (adminId) => {\n    await dispatch(AdminActions.setSelectedAdminId(adminId));\n    AdminActions.deleteAdminRequested(adminId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"adminForm\",\n})(EnhanceContainer);\n","import React from \"react\";\n\nconst NotFound = (props) => {\n  return (\n    // <div class=\"main-wrapper\">\n    //   <div class=\"page-wrapper full-page\">\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto d-flex flex-column align-items-center\">\n          <img\n            src=\"../../../assets/images/404.svg\"\n            class=\"img-fluid mb-2\"\n            alt=\"404\"\n          />\n          <h1 class=\"font-weight-bold mb-22 mt-2 tx-80 text-muted\">404</h1>\n          <h4 class=\"mb-2\">Page Not Found</h4>\n          <h6 class=\"text-muted mb-3 text-center\">\n            Oopps!! The page you were looking for doesn't exist.\n          </h6>\n          <a href=\"/dashboard\" class=\"btn btn-primary\">\n            Back to home\n          </a>\n        </div>\n      </div>\n    </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport history from \"./History\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as Selectors from \"../modules/Auth/Selector/AuthSelector\";\nimport ConfigAxios from \"./axios/ConfigAxios\";\nimport { navigate } from \"./Helpers\";\n\nconst AuthMiddleware = (ComposedComponent, menuPath, isSecureRoute) => {\n  const returnData = (props) => {\n    const { isAuthenticated, redirect, userMenus, redirectToServices } = props;\n\n    if (!isAuthenticated) {\n      redirect();\n    } else {\n      if (isSecureRoute) {\n        const isMenuCanAccess = userMenus.filter((x) => x.path === menuPath);\n\n        if (isMenuCanAccess.length <= 0) {\n          redirectToServices();\n        }\n      }\n      ConfigAxios.defaults.headers[\n        \"Authorization\"\n      ] = `Bearer ${isAuthenticated}`;\n    }\n\n    return (\n      <div>{isAuthenticated ? <ComposedComponent {...props} /> : null}</div>\n    );\n  };\n\n  const mapStateToProps = createStructuredSelector({\n    isAuthenticated: Selectors.Token(),\n    userRole: Selectors.UserRole(),\n    userMenus: Selectors.UserMenus(),\n  });\n  const mapDispatchToProps = (dispatch) => ({\n    redirect: () => history.push(\"/auth\"),\n    redirectToServices: () => navigate(\"/list_service\"),\n  });\n  return connect(mapStateToProps, mapDispatchToProps)(returnData);\n};\n\nexport default AuthMiddleware;\n","import React from \"react\";\n\ninterface IProps {\n  type:\n    | \"primary\"\n    | \"danger\"\n    | \"warning\"\n    | \"info\"\n    | \"success\"\n    | \"secondary\"\n    | \"light\"\n    | \"dark\";\n}\n\nconst CBadgeText: React.FC<IProps> = (props) => {\n  return <span className={`badge badge-${props.type}`}>{props.children}</span>;\n};\n\nexport default CBadgeText;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumEmployee }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Teknisi</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <CSelect\n            showSearch\n            data={enumEmployee}\n            name=\"employee\"\n            label=\"Pilih Teknisi\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AddEmployeeModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    handleCancel,\n    enumEmployee,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          enumEmployee={enumEmployee}\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n        />\n      }\n    />\n  );\n};\n\nexport default AddEmployeeModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateServiceEmployeeForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport AddEmployeeModalComponent from \"../Component/AddEmployeeModalComponent\";\n\nconst AddEmployeeModalContainer = (props) => {\n  const {\n    handleCancel,\n    services: { selectedJobService },\n    component: { isModalVisible },\n    employees: { listEmployees },\n    valid,\n  } = props;\n\n  const SelectEmployee = [];\n  listEmployees.map((item, index) => {\n    SelectEmployee.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      const employee = values.employee.split(\"|\");\n      DetailServiceTransactionAction.handleAddNewEmployeeService(\n        selectedJobService.id,\n        employee[0]\n      );\n    } else {\n    }\n  };\n\n  return (\n    <AddEmployeeModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      enumEmployee={SelectEmployee}\n      submitForm={submitForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddEmployeeModalContainer);\n\nexport default reduxForm({\n  form: \"serviceEmployeeForm\",\n  validate: validateServiceEmployeeForm,\n})(EnhanceContainer);\n","export const Themes = {\n  success: \"#17B794\",\n  error: \"#f50\",\n  warning: \"#FEC260\",\n  secondary: \"#A5A5A5\",\n};\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"reason\"\n            label=\"Alasan Reject\"\n            component={CInput}\n            typeComponent=\"textarea\"\n            placeholder=\"Masukan alasan reject\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst RejectedModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RejectedModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRejected, validateFormRoles } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionActions from \"../Store/DetailServiceTransactionAction\";\nimport RejectedModalComponent from \"../Component/RejectedModalComponent\";\n\nconst RejectedModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { rejectionsModal },\n    services: { selectedJobService },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(selectedJobService.id, values);\n    } else {\n    }\n  };\n\n  return (\n    <RejectedModalComponent\n      isModalVisible={rejectionsModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formName={\"Alasan Reject\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  detailService: state.detailService,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionActions.setRejectionsModal(false)),\n\n  handleSubmitForm: (jobId, values) => {\n    DetailServiceTransactionActions.handlePressRejectedRequested(jobId, values);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RejectedModalContainer);\n\nexport default reduxForm({\n  form: \"editRejecetdForm\",\n  validate: validateFormRejected,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, InputNumber, Row, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumWarranty, warrantyMonths } from \"../../../app/Helpers\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">Ubah Service</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={enumWarranty}\n              name=\"warranty\"\n              label=\"Warranty\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-7\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={warrantyMonths()}\n              name=\"warrantyMonths\"\n              label=\"Warranty Months\"\n            />\n          </div>\n          <div class=\"col-md-5\">\n            <Field\n              name=\"warrantyYears\"\n              label=\"Warranty Year\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"jobPerform\"\n              label=\"Job Perform\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalTransactionComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalTransactionComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTransaction } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport EditModalTransactionComponent from \"../Component/EditModalTransactionComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editTransactionModal },\n    masters: { listMenu },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      // handleSubmitForm(\"edit\", values, menuSelected);\n      DetailServiceTransactionAction.handlePressEditRequested(values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <EditModalTransactionComponent\n      isModalVisible={editTransactionModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditTransactionModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) => {},\n  // DetailServiceTransactionAction.saveRoleRequested(\n  //   type,\n  //   values,\n  //   menuSelected\n  // ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editTransactionForm\",\n  validate: validateFormTransaction,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, Row, TimePicker, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumTypeActivities } from \"../../../app/Helpers\";\nimport moment from \"moment\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n  typeFormDailies,\n  handleChangeTimePicker,\n  timeStartEnd,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">{`${\n        typeFormDailies === \"add\" ? \"Tambah\" : \"Ubah\"\n      } Catatan Teknisi`}</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"title\"\n              label=\"Judul\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mb-3\">\n          <div class=\"col-md-6\">\n            <Typography\n              style={{ marginBottom: 7 }}\n            >{`Jam Mulai -> Selesai`}</Typography>\n            <TimePicker.RangePicker\n              name=\"timeStartEnd\"\n              value={[timeStartEnd[0] ?? \"\", timeStartEnd[1] ?? \"\"]}\n              onChange={handleChangeTimePicker}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-5\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-5\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n        </div>\n\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumTypeActivities}\n              name=\"activityType\"\n              label=\"Pilih Kegiatan\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalDailiesComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n    typeFormDailies,\n    handleChangeTimePicker,\n    timeStartEnd,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n          typeFormDailies={typeFormDailies}\n          handleChangeTimePicker={handleChangeTimePicker}\n          timeStartEnd={timeStartEnd}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, getFormValues, reduxForm } from \"redux-form\";\nimport { validateDailiesForm } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\n\nimport EditModalDailiesComponent from \"../Component/EditModalDailiesComponent\";\n\nconst EditModalDailiesContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editDailiesModal, typeFormDailies },\n    masters: { listMenu },\n    setTimeDailiesForm,\n    editDailiesFormValues,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      DetailServiceTransactionAction.handlePressEditDailiesRequested(values);\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleChangeTimePicker = (time) => {\n    setTimeDailiesForm(time);\n  };\n\n  return (\n    <EditModalDailiesComponent\n      isModalVisible={editDailiesModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      typeFormDailies={typeFormDailies}\n      handleChangeTimePicker={handleChangeTimePicker}\n      timeStartEnd={\n        editDailiesFormValues && editDailiesFormValues.timeStartEnd \n          ? editDailiesFormValues.timeStartEnd\n          : [\"\", \"\"]\n      }\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n  editDailiesFormValues: getFormValues(\"editDailiesForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditDailiesModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n  setTimeDailiesForm: (time) => {\n    dispatch(change(\"editDailiesForm\", \"timeStartEnd\", time ?? \"\"));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditModalDailiesContainer);\n\nexport default reduxForm({\n  form: \"editDailiesForm\",\n  validate: validateDailiesForm,\n})(EnhanceContainer);\n","import React from \"react\";\r\nimport CModal from \"../../../components/CModal/CModal\";\r\nimport { Field, Form } from \"redux-form\";\r\nimport CInput from \"../../../components/CInput/CInput\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { Checkbox, Col, Divider, message, Row, Typography, Upload } from \"antd\";\r\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\r\nimport {\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { getBase64 } from \"../../../app/Helpers\";\r\nimport CSelect from \"../../../components/CSelect/CSelect\";\r\n\r\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\r\n  return [\r\n    <CButtonAntd\r\n      icon={<CloseOutlined />}\r\n      key=\"submit\"\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleClose}\r\n      danger\r\n    >\r\n      Tutup\r\n    </CButtonAntd>,\r\n    <CButtonAntd\r\n      key=\"submit\"\r\n      icon={<CheckOutlined />}\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleSaveForm}\r\n    >\r\n      Simpan\r\n    </CButtonAntd>,\r\n  ];\r\n};\r\n\r\nconst RenderContent = ({\r\n  handleSubmit,\r\n  submitForm,\r\n  beforeUpload,\r\n  handleChange,\r\n  imageUrl,\r\n  uploadButton,\r\n  enumUnit,\r\n  isImageLoaded,\r\n  isExternal,\r\n}) => {\r\n  return (\r\n    <div class=\"page-content\">\r\n      <Divider orientation=\"left\">Tambah Media</Divider>\r\n      <Form onSubmit={handleSubmit(submitForm)}>\r\n        <Row>\r\n          <div\r\n            class=\"card-body\"\r\n            style={{\r\n              marginLeft: -22,\r\n              marginTop: -20,\r\n              alignSelf: \"center\",\r\n            }}\r\n          >\r\n            <Upload\r\n              name=\"avatar\"\r\n              listType=\"picture-card\"\r\n              className=\"avatar-uploader overflow-hidden\"\r\n              showUploadList={false}\r\n              beforeUpload={beforeUpload}\r\n              onChange={handleChange}\r\n            >\r\n              {imageUrl !== \"\" ? (\r\n                <>\r\n                  {\r\n                    <img\r\n                      src={imageUrl}\r\n                      alt=\"avatar\"\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        resizeMode: \"stretch\",\r\n                        borderRadius: 5,\r\n                      }}\r\n                    />\r\n                  }\r\n                  <div\r\n                    class=\"row\"\r\n                    style={{\r\n                      backgroundColor: \"#F3F3F3\",\r\n                      position: \"absolute\",\r\n                      width: 80,\r\n                      heigh: 30,\r\n                      borderRadius: 50,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      opacity: 0.7,\r\n                    }}\r\n                  >\r\n                    <Typography style={{ fontSize: 10 }}>Ubah</Typography>\r\n                    <EditOutlined\r\n                      style={{\r\n                        color: \"#020202\",\r\n                        fontSize: 10,\r\n                        marginLeft: 5,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                uploadButton\r\n              )}\r\n            </Upload>\r\n            {isImageLoaded === false && (\r\n              <Typography style={{ fontSize: 10, color: \"red\" }}>\r\n                Field foto wajib diisi!\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </Row>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <Field\r\n              name=\"title\"\r\n              label=\"Judul\"\r\n              component={CInput}\r\n              typeComponents=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <Field\r\n              name=\"description\"\r\n              label=\"Deskripsi\"\r\n              component={CInput}\r\n              typeComponents=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {isExternal && (\r\n          <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n              <CSelect\r\n                showSearch\r\n                data={enumUnit}\r\n                name=\"unit\"\r\n                label=\"Pilih Unit\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InsertImageModalComponent = (props) => {\r\n  const {\r\n    isModalVisible,\r\n    handleSubmit,\r\n    submitForm,\r\n    isLoadingFormGlobal,\r\n    handleCancel,\r\n    formName,\r\n    enumUnit,\r\n    menuChecked,\r\n    formStatus,\r\n    onChangeRoleMenu,\r\n    defaultImage,\r\n    handleUploadPhoto,\r\n    isImageLoaded,\r\n    isExternal,\r\n  } = props;\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [imageUrl, setImageUrl] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    if (defaultImage) {\r\n      setImageUrl(defaultImage);\r\n    } else {\r\n      setImageUrl(\"\");\r\n    }\r\n  }, [defaultImage, imageUrl]);\r\n\r\n  const beforeUpload = (file) => {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      message.error(\"You can only upload JPG/PNG file!\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"Image must smaller than 2MB!\");\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      info.file.status = \"done\";\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setImageUrl(imageUrl);\r\n        setLoading(false);\r\n        handleUploadPhoto(imageUrl);\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CModal\r\n      visible={isModalVisible}\r\n      onCancel={handleCancel}\r\n      footer={\r\n        <RenderFooter\r\n          handleSaveForm={handleSubmit}\r\n          handleClose={handleCancel}\r\n        />\r\n      }\r\n      content={\r\n        <RenderContent\r\n          handleSubmit={handleSubmit}\r\n          submitForm={submitForm}\r\n          isLoadingFormGlobal={isLoadingFormGlobal}\r\n          formName={formName}\r\n          enumUnit={enumUnit}\r\n          defaultValuesMenu={menuChecked}\r\n          formStatus={formStatus}\r\n          onChangeRoleMenu={onChangeRoleMenu}\r\n          setImageUrl={setImageUrl}\r\n          setLoading={setLoading}\r\n          beforeUpload={beforeUpload}\r\n          handleChange={handleChange}\r\n          uploadButton={uploadButton}\r\n          imageUrl={imageUrl}\r\n          isImageLoaded={isImageLoaded}\r\n          isExternal={isExternal}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default InsertImageModalComponent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { change, getFormValues, reduxForm } from \"redux-form\";\r\nimport { validateFormEditMedia } from \"../../../app/validateForm\";\r\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\r\n\r\nimport InsertImageModalComponent from \"../Component/InsertImageModalComponent\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport { showToast } from \"../../Roles/Store/RolesActions\";\r\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\r\n\r\nconst InsertImageModalContainer = (props) => {\r\n  const {\r\n    valid,\r\n    handleCancel,\r\n    detailService: { insertMediaModal },\r\n    formValues,\r\n    services: { selectedJobService },\r\n  } = props;\r\n  const [isImageLoaded, setIsImageLoaded] = React.useState(null);\r\n\r\n  const handleError = () => {\r\n    setIsImageLoaded(false);\r\n    showToast(\"Harap lengkapi form!\", \"error\");\r\n  };\r\n\r\n  const submitForm = (values) => {\r\n    if (valid) {\r\n      if (formValues.imageUrl) {\r\n        setIsImageLoaded(true);\r\n        DetailServiceTransactionAction.handlePressInsertMediaRequested(values);\r\n      } else {\r\n        handleError();\r\n      }\r\n    }\r\n  };\r\n\r\n  const SelectUnit = [];\r\n  if (selectedJobService.units && selectedJobService.units.length > 0) {\r\n    selectedJobService.units.map((item, index) => {\r\n      SelectUnit.push({\r\n        id: `unit-${index}`,\r\n        value: item.id,\r\n        label: item.unit_name,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleUploadPhoto = (base64) => {\r\n    store.dispatch(change(\"editMediaForm\", `imageUrl`, base64 ?? \"\"));\r\n  };\r\n\r\n  return (\r\n    <InsertImageModalComponent\r\n      isModalVisible={insertMediaModal}\r\n      handleCancel={handleCancel}\r\n      submitForm={submitForm}\r\n      enumUnit={SelectUnit}\r\n      handleUploadPhoto={handleUploadPhoto}\r\n      isImageLoaded={isImageLoaded}\r\n      defaultImage={\r\n        formValues && formValues.imageUrl ? formValues.imageUrl : \"\"\r\n      }\r\n      isExternal={selectedJobService.is_external}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  admins: state.admins,\r\n  roles: state.roles,\r\n  component: state.component,\r\n  masters: state.masters,\r\n  detailService: state.detailService,\r\n  services: state.services,\r\n  formValues: getFormValues(\"editMediaForm\")(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleCancel: () =>\r\n    dispatch(DetailServiceTransactionAction.setInsertMediaModal(false)),\r\n});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InsertImageModalContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"editMediaForm\",\r\n  validate: validateFormEditMedia,\r\n})(EnhanceContainer);\r\n","import React from \"react\";\r\nimport CModal from \"../../../components/CModal/CModal\";\r\nimport { Field, Form } from \"redux-form\";\r\nimport CInput from \"../../../components/CInput/CInput\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { Checkbox, Col, Divider, Row } from \"antd\";\r\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\r\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\r\n\r\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\r\n  return [\r\n    <CButtonAntd\r\n      icon={<CloseOutlined />}\r\n      key=\"submit\"\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleClose}\r\n      danger\r\n    >\r\n      Tutup\r\n    </CButtonAntd>,\r\n    <CButtonAntd\r\n      key=\"submit\"\r\n      icon={<CheckOutlined />}\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleSaveForm}\r\n    >\r\n      Simpan\r\n    </CButtonAntd>,\r\n  ];\r\n};\r\n\r\nconst SelectRole = (props) => {\r\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\r\n\r\n  const Item = ({ item }) => {\r\n    return (\r\n      <Checkbox name={`item.${item.value}`} value={item.value}>\r\n        {item.label}\r\n      </Checkbox>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Checkbox.Group\r\n        {...props.input}\r\n        style={{ width: \"100%\" }}\r\n        defaultValue={defaultValuesMenu}\r\n        onChange={onChangeRoleMenu}\r\n      >\r\n        <Row>\r\n          {data.map((item, index) => {\r\n            return (\r\n              <Col span={8}>\r\n                <Field\r\n                  item={item}\r\n                  name={`item.${item.value}`}\r\n                  component={Item}\r\n                />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Checkbox.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderContent = ({ handleSubmit, submitForm, handleKeyDown }) => {\r\n  return (\r\n    <div class=\"page-content\">\r\n      <Divider orientation=\"left\">Ubah laporan</Divider>\r\n      <Form onSubmit={handleSubmit(submitForm)}>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <Field\r\n              name=\"summary\"\r\n              label=\"Detail Laporan\"\r\n              component={CInput}\r\n              typeComponent=\"textarea\"\r\n              linebreak\r\n              onKeyDown={handleKeyDown}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditModalSummaryComponent = (props) => {\r\n  const {\r\n    isModalVisible,\r\n    handleSubmit,\r\n    submitForm,\r\n    isLoadingFormGlobal,\r\n    handleCancel,\r\n    formName,\r\n    enumMenu,\r\n    menuChecked,\r\n    formStatus,\r\n    onChangeRoleMenu,\r\n    typeFormDailies,\r\n  } = props;\r\n\r\n  return (\r\n    <CModal\r\n      visible={isModalVisible}\r\n      onCancel={handleCancel}\r\n      footer={\r\n        <RenderFooter\r\n          handleSaveForm={handleSubmit}\r\n          handleClose={handleCancel}\r\n        />\r\n      }\r\n      content={\r\n        <RenderContent\r\n          handleSubmit={handleSubmit}\r\n          submitForm={submitForm}\r\n          isLoadingFormGlobal={isLoadingFormGlobal}\r\n          formName={formName}\r\n          enumMenu={enumMenu}\r\n          defaultValuesMenu={menuChecked}\r\n          formStatus={formStatus}\r\n          onChangeRoleMenu={onChangeRoleMenu}\r\n          typeFormDailies={typeFormDailies}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditModalSummaryComponent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { validateFormTransaction } from \"../../../app/validateForm\";\r\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\r\nimport EditModalSummaryComponent from \"../Component/EditModalSummaryComponent\";\r\n\r\nconst EditModalSummaryContainer = (props) => {\r\n  const {\r\n    valid,\r\n    handleCancel,\r\n    detailService: { editSummaryModal, typeFormDailies },\r\n    masters: { listMenu },\r\n  } = props;\r\n\r\n  const submitForm = (values) => {\r\n    if (valid) {\r\n      DetailServiceTransactionAction.handlePressEditSummaryRequested(values);\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const SelectMenu = [];\r\n  listMenu.map((item, index) => {\r\n    SelectMenu.push({\r\n      id: `role-${index}`,\r\n      value: item.id,\r\n      label: item.menu,\r\n    });\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n        \r\n    }\r\n  };\r\n\r\n  return (\r\n    <EditModalSummaryComponent\r\n      isModalVisible={editSummaryModal}\r\n      handleCancel={handleCancel}\r\n      submitForm={submitForm}\r\n      enumMenu={SelectMenu}\r\n      typeFormDailies={typeFormDailies}\r\n      handleKeyDown={handleKeyDown}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  admins: state.admins,\r\n  roles: state.roles,\r\n  component: state.component,\r\n  masters: state.masters,\r\n  detailService: state.detailService,\r\n  services: state.services,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleCancel: () =>\r\n    dispatch(DetailServiceTransactionAction.setEditSummaryModal(false)),\r\n  handleClearModalContent: () => {},\r\n});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditModalSummaryContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"editSummaryForm\",\r\n  validate: validateFormTransaction,\r\n})(EnhanceContainer);\r\n","import React from \"react\";\nimport { Tabs } from \"antd\";\nimport { Typography } from \"antd\";\nimport CBadgeText from \"../../../components/CBadgeText/CBadgeText\";\nimport moment from \"moment\";\nimport AddEmployeeModalContainer from \"../Container/AddEmployeeModalContainer\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Themes } from \"../../../property/colors\";\nimport RejectedModalContainer from \"../Container/RejectedModalContainer\";\nimport EditModalTransactionContainer from \"../Container/EditModalTransactionContainer\";\nimport EditModalDailiesContainer from \"../Container/EditModalDailiesContainer\";\nimport InsertImageModalContainer from \"../Container/InsertImageModalContainer\";\nimport EditModalSummaryContainer from \"../Container/EditModalSummaryContainer\";\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\nconst DetailServiceTransactionComponent = (props) => {\n  const {\n    data,\n    isBlockedRole,\n    TabPanel,\n    onChangeTab,\n    handlePressGeneratePdf,\n    goBack,\n    handlePressActions,\n    handlePressEdit,\n  } = props;\n\n  const RenderButtonAction = ({ status, role }) => {\n    let button;\n    switch (status.toLowerCase()) {\n      case \"completed\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"approved\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Approve\n            </CButtonAntd>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"rejected\")}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"progress\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"finished\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Complete\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"finished\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              // onClick={handlePressAddNew}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n\n      default:\n        return <div />;\n    }\n    return button;\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"col-md-12 grid-margin stretch-card\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"row align-items-center justify-content-between\">\n                <div>\n                  <h6 class=\"card-title\">Detail Transaksi</h6>\n                </div>\n                <div class=\"row mb-3 ml-2 mr-2\">\n                  <CButtonAntd\n                    onClick={goBack}\n                    type=\"primary\"\n                    icon={<ArrowLeftOutlined />}\n                    size=\"middle\"\n                    danger\n                  >\n                    Kembali\n                  </CButtonAntd>\n                  <div class=\"ml-3\" />\n                  {data.status.toLowerCase() !== \"approved\" && !isBlockedRole && (\n                    <CButtonAntd\n                      onClick={handlePressEdit}\n                      type=\"primary\"\n                      icon={<EditOutlined />}\n                      size=\"middle\"\n                    >\n                      Ubah\n                    </CButtonAntd>\n                  )}\n                  <RenderButtonAction status={data.status} />\n                  <div class=\"mr-3\" />\n                  {/* button to trigger printing of target component */}\n                  {!isBlockedRole && (\n                    <CButtonAntd\n                      onClick={handlePressGeneratePdf}\n                      type=\"primary\"\n                      icon={<FilePdfOutlined />}\n                      size=\"middle\"\n                    >\n                      Cetak Formulir\n                    </CButtonAntd>\n                  )}\n                </div>\n              </div>\n              <div\n                id=\"header-detail-transaction\"\n                class=\"d-flex justify-content-between align-items-baseline\"\n              >\n                <div class=\"col-md-6\">\n                  <Text>Tipe : </Text>\n                  <CBadgeText type={data.is_external ? \"success\" : \"info\"}>\n                    {data.type ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Unit : </Text>\n                  <Text>{data.unit ?? \"-\"}</Text>\n                  <br />\n                  <Text>Model (SN) : </Text>\n                  <Text>{data.model ?? \"-\"}</Text>\n                  <br />\n                  <Text>Job Forms : </Text>\n                  <Text>{data.job_form_name ?? \"-\"}</Text>\n                  <br />\n                  <Text>Customer : </Text>\n                  <Text strong>{data.customer_name}</Text>\n                  <br />\n                  <Text>Warranty : </Text>\n                  <Text strong>\n                    {data.warranty ? \"Warranty\" : \"No Warranty\"}\n                  </Text>\n                  <br />\n                  <Text>PIC : </Text>\n                  <Text strong>{data.customer_pic_name ?? \"()\"}</Text>\n                </div>\n                <div class=\"col-md-6\">\n                  <Text>Status Transaksi : </Text>\n                  <CBadgeText\n                    type={\n                      data.status.toLowerCase() === \"draft\"\n                        ? \"warning\"\n                        : \"success\"\n                    }\n                  >\n                    {data.status ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Job Perform : </Text>\n                  <Text strong>{data.job_perform}</Text>\n                  <br />\n                  <Text>Start - Due : </Text>\n                  <Text strong>{`${moment(data.start).format(\n                    \"DD-MMM-YYYY\"\n                  )} - ${moment(data.due).format(\"DD-MMM-YYYY\")}`}</Text>\n\n                  <br />\n                  <Text>Dibuat : </Text>\n                  <Text strong>{data.created_date}</Text>\n                  <br />\n                  <Text>Lokasi : </Text>\n                  <Text strong>{data.location ?? \"-\"}</Text>\n                </div>\n                <div class=\"col-md-4\"></div>\n              </div>\n\n              <div class=\"ml-2 mt-3\">\n                <Tabs defaultActiveKey=\"1\" onChange={onChangeTab}>\n                  {TabPanel.map((item, index) => (\n                    <TabPane\n                      tab={\n                        <span>\n                          {item.icon}\n                          {item.title}\n                        </span>\n                      }\n                      key={item.key}\n                    >\n                      {item.component}\n                    </TabPane>\n                  ))}\n                </Tabs>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AddEmployeeModalContainer />\n      <RejectedModalContainer />\n      <EditModalTransactionContainer />\n      <EditModalDailiesContainer />\n      <InsertImageModalContainer />\n      <EditModalSummaryContainer />\n    </div>\n  );\n};\n\nexport default DetailServiceTransactionComponent;\n","import React from \"react\";\nimport { Card, Typography, Col, Row, Image } from \"antd\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  CheckCircleOutlined,\n} from \"@ant-design/icons\";\n\nconst { Meta } = Card;\nconst { Text } = Typography;\n\nconst RenderDescription = ({\n  data,\n  handlePressNonactive,\n  handlePressActive,\n}) => {\n  return (\n    <div>\n      <hr />\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Nik</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.nik}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Telepon</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.phone}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Alamat</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong style={{ fontSize: 12 }}>\n            {data.address}\n          </Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Tanggal Mulai</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.created_date}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Status</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <CBadgeText type={data.active ? \"success\" : \"danger\"}>\n            {data.active ? \"Aktif\" : \"Tidak Aktif\"}\n          </CBadgeText>\n        </div>\n      </Row>\n      <div class=\"mt-3\">\n        {data.active ? (\n          <CButtonAntd\n            onClick={handlePressNonactive}\n            type=\"primary\"\n            icon={<DeleteOutlined />}\n            size=\"middle\"\n            danger\n          >\n            Non-Aktifkan Teknisi\n          </CButtonAntd>\n        ) : (\n          <CButtonAntd\n            onClick={handlePressActive}\n            type=\"primary\"\n            icon={<CheckCircleOutlined />}\n            size=\"middle\"\n          >\n            Aktifkan teknisi\n          </CButtonAntd>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst TabPanelEmployeeComponent = (props) => {\n  const {\n    employees,\n    handlePressAddNew,\n    handlePressNonactive,\n    jobId,\n    handlePressActive,\n    isBlockedRole,\n  } = props;\n  return (\n    <div class=\"page-content\">\n      <Row style={{ marginLeft: 16 }}>\n        {!isBlockedRole && <CButtonAntd\n          onClick={handlePressAddNew}\n          type=\"primary\"\n          icon={<PlusOutlined />}\n          size=\"middle\"\n        >\n          Tambah Teknisi\n        </CButtonAntd>}\n      </Row>\n      <Row>\n        {employees.map((item, index) => {\n          return (\n            <Col style={{ margin: 16 }} key={`employee-${index}`}>\n              <Text strong>{`Teknisi-${index + 1}`}</Text>\n              <Card\n                style={{ width: 350, marginTop: 8 }}\n                cover={\n                  <Image\n                    alt=\"example\"\n                    src={\n                      item.photo ??\n                      \"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                    }\n                    width=\"100%\"\n                    height={200}\n                  />\n                }\n              >\n                <Meta\n                  title={item.name}\n                  description={\n                    <RenderDescription\n                      data={item}\n                      handlePressNonactive={() =>\n                        handlePressNonactive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                      handlePressActive={() =>\n                        handlePressActive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                    />\n                  }\n                />\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </div>\n  );\n};\n\nexport default TabPanelEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TabPanelEmployeeComponent from \"../../Component/TabPanel/TabPanelEmployeeComponent\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionActions from \"../../Store/DetailServiceTransactionAction\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\n\nconst TabPanelEmployeeContainer = (props) => {\n  const {\n    userRole,\n    services: { selectedJobService },\n  } = props;\n\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  return <TabPanelEmployeeComponent jobId={selectedJobService.id} isBlockedRole={isBlockedRole} {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n  detailService: state.detailService,\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressAddNew: () => {\n    dispatch(ComponentActions.setGlobalModal(true));\n  },\n  handlePressNonactive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      false\n    ),\n  handlePressActive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      true\n    ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelEmployeeContainer);\n","import React, { Fragment } from \"react\";\nimport { Typography, Row, Empty, Divider, Col, Spin } from \"antd\";\nimport {\n  FileOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst RenderItemSummary = ({ summary, index }) => {\n  return summary.length > 0 ? (\n    summary.map((item, indexText) => (\n      <Typography key={`item-summary${index}-text-${indexText}`}>\n        {item}\n      </Typography>\n    ))\n  ) : (\n    <Typography>Summary belum ada</Typography>\n  );\n};\n\nconst TabPanelSummaryComponent = (props) => {\n  const { summaryArr, isLoaded, handlePressEdit, isBlockedRole, isExternal } =\n    props;\n\n  return (\n    <div class=\"page-content\">\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <Fragment>\n          <Row\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Row\n              style={{\n                alignItems: \"center\",\n              }}\n            >\n              <FileOutlined />\n              <Typography style={{ marginLeft: 5 }}>Laporan Akhir</Typography>\n            </Row>\n            <div>\n              {isExternal === false && summaryArr.length < 0 && (\n                <CButtonAntd\n                  onClick={() => handlePressEdit(\"NEW_SUMMARY\")}\n                  type=\"primary\"\n                  icon={<PlusCircleOutlined />}\n                  size=\"middle\"\n                >\n                  Tambah Summary\n                </CButtonAntd>\n              )}\n            </div>\n          </Row>\n          <hr />\n          <Row gutter={[16, 16]}>\n            {summaryArr.length > 0 ? (\n              summaryArr.map((item, index) => (\n                <Col key={`col-unit-${index}`} span={12}>\n                  <div class=\"card p-2\">\n                    {isBlockedRole && (\n                      <CButtonAntd\n                        onClick={() => handlePressEdit(item.id)}\n                        type=\"primary\"\n                        icon={<EditOutlined />}\n                        size=\"middle\"\n                      >\n                        Ubah Summary\n                      </CButtonAntd>\n                    )}\n                    <Divider\n                      style={{\n                        fontSize: 12,\n                        fontWeight: \"bold\",\n                        textTransform: \"uppercase\",\n                      }}\n                      plain\n                    >\n                      {isExternal ? `Unit ${item.unitName}` : \"Job Summary\"}\n                    </Divider>\n                    {<RenderItemSummary index={index} summary={item.summary} />}\n                  </div>\n                </Col>\n              ))\n            ) : (\n              <div class=\"col-md-12 px-auto\">\n                <Empty />\n              </div>\n            )}\n          </Row>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelSummaryComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change } from \"redux-form\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport TabPanelSummaryComponent from \"../../Component/TabPanel/TabPanelSummaryComponent\";\nimport { setEditSummaryModal } from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelSummaryContainer = (props) => {\n  const { summary, userRole, selectedService } = props;\n  const [summaryArr, setSummaryArr] = React.useState([]);\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  React.useEffect(() => {\n    const summaryMapping = [];\n\n    if (selectedService.is_external) {\n      summary.map((item, index) => {\n        const summaryText = item.summary ?? \"\";\n        const checkBreakLine = summaryText.includes(\"\\n\");\n\n        if (checkBreakLine) {\n          const splitSummary = summaryText.split(\"\\n\");\n          summaryMapping.push({\n            id: item.id,\n            unitName: item.unitName,\n            summary: splitSummary,\n          });\n        } else {\n          summaryMapping.push({\n            id: item.id,\n            unitName: item.unitName,\n            summary: [summaryText],\n          });\n        }\n      });\n\n      setSummaryArr(summaryMapping);\n    } else {\n      const data = {};\n      const summaryText = summary.summary ?? \"\";\n      const checkBreakLine = summaryText.includes(\"\\\\n\");\n\n      if (checkBreakLine) {\n        const splitSummary = summaryText.split(\"\\\\n\");\n        data.id = selectedService.id;\n        data.unitName = \"\";\n        data.summary = splitSummary;\n      } else {\n        data.id = selectedService.id;\n        data.unitName = \"\";\n        data.summary = [summaryText];\n      }\n\n      setSummaryArr([data]);\n    }\n  }, [selectedService.id, selectedService.is_external, summary]);\n\n  return (\n    <TabPanelSummaryComponent\n      summaryArr={summaryArr}\n      isExternal={selectedService.is_external}\n      isBlockedRole={isBlockedRole}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userRole: state.auth.userDetail.roles,\n  selectedService: state.services.selectedJobService,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (unitId) => {\n    if (unitId === \"NEW_SUMMARY\") {\n      dispatch(change(\"editSummaryForm\", `type`, \"NEW\"));\n    } else {\n      dispatch(change(\"editSummaryForm\", `type`, \"EDIT\"));\n      dispatch(change(\"editSummaryForm\", `unitId`, unitId));\n    }\n\n    await dispatch(setEditSummaryModal(true));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelSummaryContainer);\n\nexport default EnhanceContainer;\n","import React, { Fragment } from \"react\";\nimport { Typography, Row, Empty, Card, Col, Image, Divider, Spin } from \"antd\";\nimport { CameraOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\n\nconst { Meta } = Card;\n\nconst RenderImage = ({ medias, unit }) => {\n  return medias.map((item, index) => {\n    return (\n      <Col\n        style={{\n          marginLeft: 10,\n          marginRight: 10,\n        }}\n      >\n        <Card\n          hoverable\n          style={{ width: 240, height: 200 }}\n          cover={<Image width={\"100%\"} height={150} src={item.path} />}\n        >\n          <Meta\n            style={{ marginTop: -10 }}\n            title={`Gambar Penting ${index + 1}`}\n          />\n        </Card>\n      </Col>\n    );\n  });\n};\n\nconst TabPanelImagesComponent = (props) => {\n  const { medias, handlePressAdd, isLoaded, isBlockedRole } = props;\n\n  return (\n    <div class=\"page-content\">\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <Fragment>\n          <Row\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Row\n              style={{\n                alignItems: \"center\",\n              }}\n            >\n              <CameraOutlined />\n              <Typography style={{ marginLeft: 5 }}>Media</Typography>\n            </Row>\n            {isBlockedRole && (\n              <CButtonAntd\n                onClick={handlePressAdd}\n                type=\"primary\"\n                icon={<PlusCircleOutlined />}\n                size=\"middle\"\n              >\n                Tambah Gambar\n              </CButtonAntd>\n            )}\n          </Row>\n          <hr />\n          {medias && medias.length > 0 ? (\n            medias.map((item, index) => (\n              <div>\n                <Divider\n                  style={{\n                    textTransform: \"uppercase\",\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                  }}\n                  plain\n                >{`Unit ${item.unitName}`}</Divider>\n                <Row>\n                  <RenderImage medias={item.image} unit={item.unitName} />\n                </Row>\n              </div>\n            ))\n          ) : (\n            <div>\n              <Empty />\n            </div>\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelImagesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport TabPanelImagesComponent from \"../../Component/TabPanel/TabPanelImagesComponent\";\nimport {\n  resetFormModalImage,\n  setInsertMediaModal,\n} from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelImagesContainer = (props) => {\n  const { userRole } = props;\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  return <TabPanelImagesComponent isBlockedRole={isBlockedRole} {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressAdd: async (values) => {\n    await resetFormModalImage();\n    await dispatch(setInsertMediaModal(true));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelImagesContainer);\n\nexport default EnhanceContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table, Space } from \"antd\";\nimport { EditOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst RenderDailies = ({ dailies, handlePressEdit }) => {\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"karyawan\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"deskripsi\",\n    },\n    {\n      title: \"Mulai\",\n      dataIndex: \"mulai\",\n    },\n    {\n      title: \"Selesai\",\n      dataIndex: \"selesai\",\n    },\n    {\n      title: \"Jam\",\n      dataIndex: \"jam\",\n    },\n  ];\n  columns.push({\n    align: \"center\",\n    title: \"Aksi\",\n    key: \"action\",\n    width: \"10%\",\n    render: renderActionTable,\n  });\n  const data = [];\n  dailies.map((item, index) => {\n    data.push({\n      key: index,\n      id: item.id,\n      karyawan: item.employee_name,\n      title: item.title,\n      deskripsi: item.description,\n      mulai: moment(item.daily_start).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      selesai: moment(item.daily_end).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      jam: item.hours,\n      type: item.type\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelDailiesComponent = (props) => {\n  const { dailies, handlePressEdit, handlePressAdd, isBlockedRole } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Row>\n          <EditOutlined />\n          <Typography style={{ marginLeft: 5 }}>Catatan</Typography>\n        </Row>\n        {isBlockedRole && (\n          <CButtonAntd\n            onClick={handlePressAdd}\n            type=\"primary\"\n            icon={<PlusCircleOutlined />}\n            size=\"middle\"\n          >\n            Tambah Catatan\n          </CButtonAntd>\n        )}\n      </Row>\n      <hr />\n      {dailies && dailies.length > 0 ? (\n        <RenderDailies dailies={dailies} handlePressEdit={handlePressEdit} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change } from \"redux-form\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport TabPanelDailiesComponent from \"../../Component/TabPanel/TabPanelDailiesComponent\";\nimport {\n  mapDailiesToForm,\n  setEditDailiesModal,\n  setSelectedEditDailiesData,\n  setTypeFormDailies,\n} from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelDailiesContainer = (props) => {\n  const {\n    userRole,\n    detailService: { typeFormDailies },\n  } = props;\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  return (\n    <TabPanelDailiesComponent\n      isBlockedRole={isBlockedRole}\n      typeFormDailies={typeFormDailies}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  detailService: state.detailService,\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (values) => {\n    await dispatch(setTypeFormDailies(\"edit\"));\n    await dispatch(setSelectedEditDailiesData(values));\n    store.dispatch(setEditDailiesModal(true));\n    mapDailiesToForm();\n  },\n  handlePressAdd: async () => {\n    dispatch(change(\"editDailiesForm\", `id`, \"\"));\n    dispatch(change(\"editDailiesForm\", `startDate`, \"\"));\n    dispatch(change(\"editDailiesForm\", `endDate`, \"\"));\n    dispatch(change(\"editDailiesForm\", `title`, \"\"));\n    dispatch(change(\"editDailiesForm\", `description`, \"\"));\n    dispatch(change(\"editDailiesForm\", `type`, \"\"));\n    dispatch(change(\"editDailiesForm\", `timeStartEnd`, null));\n    await dispatch(setSelectedEditDailiesData({}));\n    await dispatch(setTypeFormDailies(\"add\"));\n    store.dispatch(setEditDailiesModal(true));\n  },\n  handlePressCancel: () => {\n    store.dispatch(setEditDailiesModal(false));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelDailiesContainer);\n\nexport default EnhanceContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderHistories = ({ histories }) => {\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"user_name\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  histories.map((item, index) => {\n    data.push({\n      key: index,\n      user_name: item.user_name,\n      title: item.title,\n      description: item.description,\n      created_date: moment(item.created_date).format(\"DD-MMM-YYYY\"),\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelHistoriesComponent = (props) => {\n  const { histories } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Riwayat</Typography>\n      </Row>\n      <hr />\n      {histories.length > 0 ? (\n        <RenderHistories histories={histories} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelHistoriesComponent;\n","import React from \"react\";\nimport TabPanelHistoriesComponent from \"../../Component/TabPanel/TabPanelHistoriesComponent\";\n\nconst TabPanelHistoriesContainer = (props) => {\n  return <TabPanelHistoriesComponent {...props} />;\n};\n\nexport default TabPanelHistoriesContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderDailies = ({ rejections }) => {\n  const columns = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n    },\n    {\n      title: \"NIK\",\n      dataIndex: \"nik\",\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n    },\n    {\n      title: \"Alasan Reject\",\n      dataIndex: \"reason\",\n    },\n    {\n      title: \"Tanggal Di-Reject\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  rejections.map((item, index) => {\n    data.push({\n      no: index + 1,\n      nik: item.nik,\n      employee_name: item.employee_name,\n      reason: item.reason,\n      created_date: moment(item.created_date).format(\"DD-MMM-YYYY\"),\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelRejectionsComponent = (props) => {\n  const { rejections } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Alasan Reject</Typography>\n      </Row>\n      <hr />\n      {rejections.length > 0 ? (\n        <RenderDailies rejections={rejections} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelRejectionsComponent;\n","import React from \"react\";\nimport TabPanelRejectionsComponent from \"../../Component/TabPanel/TabPanelRejectionsComponent\";\n\nconst TabPanelRejectionsContainer = (props) => {\n  return <TabPanelRejectionsComponent {...props} />;\n};\n\nexport default TabPanelRejectionsContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Col, Checkbox, Divider, Spin } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Radio } from \"antd\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Themes } from \"../../../../property/colors\";\n\nconst TabPanelChecklistComponent = (props) => {\n  const { checklistArr, isLoaded } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Checklist</Typography>\n      </Row>\n      <hr />\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <div class=\"row d-flex flex-wrap col md-12\">\n          {checklistArr.length > 0 ? (\n            checklistArr.map((itemUnit, indexUnit) => (\n              <div key={`checklist-unit-${indexUnit}`}>\n                <Divider\n                  style={{\n                    textTransform: \"uppercase\",\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                  }}\n                  plain\n                >{`Unit ${itemUnit.unitName}`}</Divider>\n                <Row gutter={[16, 16]}>\n                  {itemUnit.checklist.map((itemChecklist, indexChecklist) => (\n                    <Col key={`item-unit-checklist-${indexChecklist}`} span={12}>\n                      <div style={{ width: \"100%\" }}>\n                        <div>\n                          <div class=\"mb-2 mt-2 pb-2\">\n                            <Row\n                              gutter={16}\n                              style={{\n                                alignItems: \"center\",\n                                padding: \"8px\",\n                                borderBottom: \"1px solid #020202\",\n                                marginRight: \"20px\",\n                                marginTop: \"20px\",\n                              }}\n                            >\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={7}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  {itemChecklist.category_form_name}\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  ADJUST\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  CHECK\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPAIR\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={5}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPLACE\n                                </Text>\n                              </Col>\n                            </Row>\n                          </div>\n\n                          <Radio.Group disabled>\n                            {itemChecklist.fields &&\n                              itemChecklist.fields.map(\n                                (itemFields, indexFields) => {\n                                  return (\n                                    <Row\n                                      key={`item-fields-${indexFields}`}\n                                      gutter={16}\n                                      style={{\n                                        alignItems: \"center\",\n                                        padding: \"8px\",\n                                        borderBottom: \"1px solid #020202\",\n                                        marginRight: \"30px\",\n                                      }}\n                                    >\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={8}\n                                      >\n                                        <div>\n                                          <Typography\n                                            style={{\n                                              fontSize: 12,\n                                              color: Themes.secondary,\n                                            }}\n                                          >\n                                            {itemFields.field_name}\n                                          </Typography>\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                    </Row>\n                                  );\n                                }\n                              )}\n                          </Radio.Group>\n                        </div>\n                        <div class=\"mr-3\" />\n                      </div>\n                    </Col>\n                  ))}\n                </Row>\n              </div>\n            ))\n          ) : (\n            <div class=\"page-content\">\n              <Empty />\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst style = {\n  width: \"200px\",\n  alignContent: \"center\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport default TabPanelChecklistComponent;\n","import React, { useState } from \"react\";\nimport TabPanelChecklistComponent from \"../../Component/TabPanel/TabPanelChecklistComponent\";\n\nconst TabPanelChecklistContainer = (props) => {\n  const { checklist, isLoaded } = props;\n  const [checklistArr, setchecklistArr] = useState([]);\n\n  React.useEffect(() => {\n    setchecklistArr(checklist);\n  }, [checklist]);\n\n  return (\n    <TabPanelChecklistComponent\n      isLoaded={isLoaded}\n      checklistArr={checklistArr}\n      {...props}\n    />\n  );\n};\n\nexport default TabPanelChecklistContainer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport DetailServiceTransactionComponent from \"../Component/DetailServiceTransactionComponent\";\nimport {\n  FileImageOutlined,\n  UsergroupAddOutlined,\n  CheckCircleOutlined,\n  EditOutlined,\n  FileTextOutlined,\n  CloseSquareOutlined,\n  HistoryOutlined,\n} from \"@ant-design/icons\";\nimport TabPanelEmployeeContainer from \"./TabPanel/TabPanelEmployeeContainer\";\nimport * as DetailServiceActions from \"../Store/DetailServiceTransactionAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport TabPanelSummaryContainer from \"./TabPanel/TabPanelSummaryContainer\";\nimport TabPanelImagesContainer from \"./TabPanel/TabPanelImagesContainer\";\nimport TabPanelDailiesContainer from \"./TabPanel/TabPanelDailiesContainer\";\nimport TabPanelHistoriesContainer from \"./TabPanel/TabPanelHistoriesContainer\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport TabPanelRejectionsContainer from \"./TabPanel/TabPanelRejectionsContainer\";\nimport TabPanelChecklistContainer from \"./TabPanel/TabPanelChecklistContainer\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { isBlockedRoleDetailService, navigate } from \"../../../app/Helpers\";\n\nconst DetailServiceTransactionContainer = (props) => {\n  const {\n    userRole,\n    setChecklist,\n    services: { selectedJobService },\n    detailService: {\n      selectedServiceEmployeeList,\n      groupingSelectedServiceMedia,\n      groupingSelectedServiceSummary,\n      groupingSelectedServiceChecklist,\n      selectedServiceDailies,\n      selectedServiceHistories,\n      selectedServiceRejected,\n      singleSelectedServiceSummary,\n    },\n  } = props;\n  const [isLoadedChecklist, setIsLoadedChecklist] = React.useState(false);\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n  const [isCompleteLoadedMedia, setIsCompleteLoadedMedia] =\n    React.useState(false);\n  const [isCompleteLoadedSummary, setIsCompleteLoadedSummary] =\n    React.useState(false);\n\n  const TabPanel = [\n    {\n      key: \"panel-gambar\",\n      title: \"Gambar\",\n      icon: <FileImageOutlined />,\n      component: (\n        <TabPanelImagesContainer\n          medias={groupingSelectedServiceMedia}\n          isLoaded={isCompleteLoadedMedia}\n        />\n      ),\n    },\n    {\n      key: \"panel-summary\",\n      title: \"Summary\",\n      icon: <FileTextOutlined />,\n      component: (\n        <TabPanelSummaryContainer\n          summary={\n            selectedJobService.is_external\n              ? groupingSelectedServiceSummary\n              : singleSelectedServiceSummary\n          }\n          isLoaded={isCompleteLoadedSummary}\n        />\n      ),\n    },\n    {\n      key: \"panel-teknisi\",\n      title: \"Teknisi\",\n      icon: <UsergroupAddOutlined />,\n      component: (\n        <TabPanelEmployeeContainer employees={selectedServiceEmployeeList} />\n      ),\n    },\n    {\n      key: \"panel-rejected\",\n      title: \"Alasan Reject\",\n      icon: <CloseSquareOutlined />,\n      component: (\n        <TabPanelRejectionsContainer rejections={selectedServiceRejected} />\n      ),\n    },\n    {\n      key: \"panel-dailies\",\n      title: \"Catatan Teknisi\",\n      icon: <EditOutlined />,\n      component: <TabPanelDailiesContainer dailies={selectedServiceDailies} />,\n    },\n    {\n      key: \"panel-histories\",\n      title: \"History\",\n      icon: <HistoryOutlined />,\n      component: (\n        <TabPanelHistoriesContainer\n          title=\"History\"\n          histories={selectedServiceHistories}\n        />\n      ),\n    },\n  ];\n\n  if (selectedJobService.is_external) {\n    TabPanel.push({\n      key: \"panel-checklist\",\n      title: \"Checklist\",\n      icon: <CheckCircleOutlined />,\n      component: (\n        <TabPanelChecklistContainer\n          isLoaded={isLoadedChecklist}\n          checklist={groupingSelectedServiceChecklist}\n        />\n      ),\n    });\n\n    // Move content of checklist to index 0\n    const fromIndex = TabPanel.indexOf(\"panel-checklist\"); // 👉️ 0\n    const toIndex = 0;\n\n    const element = TabPanel.splice(fromIndex, 1)[0];\n    console.log(element); // ['panel-checklist']\n\n    TabPanel.splice(toIndex, 0, element);\n  }\n\n  const onChangeTab = (activeTab) => {\n    switch (activeTab.toLowerCase()) {\n      case \"panel-teknisi\":\n        DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n        break;\n\n      case \"panel-summary\":\n        groupingUnitSummary();\n        break;\n\n      case \"panel-gambar\":\n        groupingUnitMedia();\n        break;\n\n      case \"panel-dailies\":\n        DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n        break;\n\n      case \"panel-histories\":\n        DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n        break;\n\n      case \"panel-checklist\":\n        groupingUnitChecklist();\n        break;\n\n      case \"panel-rejected\":\n        DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n        break;\n\n      default:\n        console.log(\"no panel selected...\");\n        break;\n    }\n  };\n\n  const callInitialize = async () => {\n    await EmployeesActions.loadEmployeeListData(1, 99999);\n    await DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n    await DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n    await DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n    await DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n    await groupingUnitMedia();\n    await groupingUnitSummary();\n    await groupingUnitChecklist();\n  };\n\n  const groupingUnitMedia = async () => {\n    setIsCompleteLoadedMedia(false);\n    await DetailServiceActions.getUnitMedia((isCompleted) => {\n      setIsCompleteLoadedMedia(isCompleted);\n    });\n  };\n\n  const groupingUnitSummary = async () => {\n    setIsCompleteLoadedSummary(false);\n    await DetailServiceActions.getUnitSummary((isCompleted) => {\n      setIsCompleteLoadedSummary(isCompleted);\n    });\n  };\n\n  const groupingUnitChecklist = async () => {\n    const groupingChecklist = [];\n\n    if (selectedJobService.units) {\n      await selectedJobService.units.map(async (item, index) => {\n        Invoke.getChecklistData(item.id)\n          .then((dataChecklist) => {\n            groupingChecklist.push({\n              unitName: item.unit_name,\n              checklist: dataChecklist.data.callback,\n            });\n            if (index + 1 === selectedJobService.units.length) {\n              setIsLoadedChecklist(true);\n            }\n          })\n          .catch(() => setIsLoadedChecklist(true));\n      });\n\n      setTimeout(() => {\n        setChecklist(groupingChecklist);\n      }, 1000);\n    }\n  };\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    callInitialize();\n    checkBlockedRole();\n  }, []);\n\n  const handlePressGeneratePdf = () => {\n    // exportDetailServicePdfRevision(printedData);\n    DetailServiceActions.downloadTransactionPdf();\n  };\n\n  const handleBackToListService = () => {\n    store.dispatch(DetailServiceActions.resetDetailService());\n    setTimeout(() => {\n      navigate(\"list_service\");\n    }, 500);\n  };\n\n  return (\n    <DetailServiceTransactionComponent\n      data={selectedJobService}\n      isBlockedRole={isBlockedRole}\n      TabPanel={TabPanel}\n      onChangeTab={onChangeTab}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      goBack={handleBackToListService}\n      medias={groupingSelectedServiceMedia}\n      checklist={groupingSelectedServiceChecklist}\n      employees={selectedServiceEmployeeList}\n      dailies={selectedServiceDailies}\n      summary={groupingSelectedServiceSummary}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  units: state.units,\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressDelete: (jobId) => {\n    ListServiceActions.deleteJobServiceRequested(jobId);\n  },\n  handlePressActions: (jobId, type) => {\n    ListServiceActions.handlePressActionsRequested(jobId, type);\n  },\n  handlePressEdit: async () => {\n    await dispatch(DetailServiceActions.setEditTransactionModal(true));\n    await DetailServiceActions.mapDetailTransactionToForm();\n    dispatch(DetailServiceActions.setEditTransactionModal(true));\n  },\n  setMediaList: (list) => {\n    dispatch(DetailServiceActions.setGroupingSelectedServicesMediaData(list));\n  },\n  setSummaryList: (list) => {\n    dispatch(DetailServiceActions.setGroupingSummaryData(list));\n  },\n  setChecklist: (list) => {\n    dispatch(DetailServiceActions.setGroupingChecklistData(list));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DetailServiceTransactionContainer);\n\nexport default reduxForm({\n  form: \"detailJobServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Row } from \"antd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const {\n    data,\n    defaultValuesMenu,\n    onChangeRoleMenu,\n    // options,\n    // plainOptions,\n    // optionsWithDisabled,\n  } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"Role ID\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Role\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst RolesEditModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RolesEditModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport RolesEditModalComponent from \"../Component/RolesEditModalComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { formStatus, selectedRoleMenu },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n  const [menuSelected, setMenuSelected] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values, menuSelected);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  const onChangeRoleMenu = (menus) => {\n    setMenuSelected(menus);\n  };\n\n  return (\n    <RolesEditModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumMenu={SelectMenu}\n      menuChecked={selectedRoleMenu}\n      onChangeRoleMenu={onChangeRoleMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) =>\n    RolesActions.saveRoleRequested(type, values, menuSelected),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editRolesForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport RolesEditModalContainer from \"../Container/RolesEditModalContainer\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nconst RolesComponent = (props) => {\n  const { headers, listRoles, renderActionTable, handlePressAddNew } = props;\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Roles</h6>\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Roles\n                  </CButtonAntd>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <RolesEditModalContainer />\n    </div>\n  );\n};\n\nexport default RolesComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport RolesComponent from \"../Component/RolesComponent\";\nimport * as RolesActions from \"../Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RolesContainer = (props) => {\n  const {\n    getListRoles,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    roles: { listRoles },\n  } = props;\n\n  if (listRoles.length > 0) {\n    listRoles.map((item, index) => {\n      listRoles[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListRoles();\n  }, []);\n\n  return (\n    <RolesComponent\n      headers={headers}\n      listRoles={listRoles}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListRoles: () => RolesActions.getListRolesRequested(),\n  handlePressAddNew: async () => {\n    await dispatch(RolesActions.setSelectedRoleDetail({}));\n    await dispatch(RolesActions.setSelectedRoleId(\"\"));\n    dispatch(RolesActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    RolesActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(RolesActions.setFormStatus(\"edit\"));\n    await dispatch(RolesActions.setSelectedRoleId(record.id));\n    await dispatch(RolesActions.setSelectedRoleDetail(record));\n    await RolesActions.getMenuByRolesId(record.id);\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await RolesActions.mapDetailRoleToForm();\n  },\n  handlePressDelete: async (roleId) => {\n    await dispatch(RolesActions.setSelectedRoleId(roleId));\n    RolesActions.deleteRoleRequested(roleId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesContainer);\n\nexport default reduxForm({\n  form: \"rolesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst EmployeeListComponent = (props) => {\n  const {\n    headers,\n    listEmployees,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumRoles,\n    enumDivision,\n    employeeFormValues,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Karyawan</h6>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Karyawan\n                    </CButtonAntd>\n                  </div>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2\">\n                  {/* This Filter */}\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumRoles ?? []}\n                      name=\"role\"\n                      label=\"Filter Role\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Filter Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumDivision ?? []}\n                      name=\"division\"\n                      label=\"Filter Divisi\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployees}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeListComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as EmployeeActions from \"../Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ToolsActions from \"../../Tools/Store/ToolsActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport EmployeesListComponent from \"../Component/EmployeesListComponent\";\nimport {\n  enumSelectGenerator,\n  getIndex,\n  getRolesEnum,\n  navigate,\n} from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getDivisionListDataRequested } from \"../../Division/Store/DivisionActions\";\n\nconst EmployeesListContainer = (props) => {\n  const {\n    getListEmployees,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressEmployeeTools,\n    employees: { listEmployees, paging },\n    roles: { listRoles },\n    branch: { listBranch },\n    division: { listDivision },\n    employeesFormValues,\n    getListTools,\n  } = props;\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployees.length > 0) {\n    listEmployees.map((item, index) => {\n      listEmployees[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, name: item.title };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"NIK\",\n      dataIndex: \"nik\",\n      key: \"nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.nik - b.nik,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name - b.name,\n    },\n    {\n      title: \"Nomor Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => handlePressEdit(record)}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressEmployeeTools(record)}\n        type=\"primary\"\n        icon={<SettingOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployees(1, 10);\n    getDivisionListDataRequested(1, 100);\n    getListTools(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage ?? 1;\n    paging.limit = pageSize ?? 10;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeActions.setPagingEmployees(paging));\n    getListEmployees(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    EmployeeActions.handleSearch(keyword, employeesFormValues);\n  };\n\n  const SelectRoles = listRoles.length > 0 ? getRolesEnum(listRoles) : [];\n  const SelectBranch =\n    listBranch.length > 0 ? enumSelectGenerator(listBranch, \"branch\") : [];\n  const SelectDivision =\n    listDivision.length > 0\n      ? enumSelectGenerator(listDivision, \"division\")\n      : [];\n\n  return (\n    <EmployeesListComponent\n      headers={headers}\n      listEmployees={listEmployees}\n      renderActionTable={renderActionTable}\n      paging={paging}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      enumRoles={SelectRoles}\n      enumDivision={SelectDivision}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  roles: state.roles,\n  branch: state.branch,\n  division: state.division,\n  employeesFormValues: getFormValues(\"employeesForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployees: (page, limit, keyword) =>\n    EmployeeActions.loadEmployeeListData(page, limit, keyword),\n  getListTools: (page, limit) => {\n    ToolsActions.getToolsListDataRequested(page, limit);\n  },\n  handlePressEdit: async (employee) => {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    dispatch(EmployeeActions.setFormStatus(\"edit\"));\n    await EmployeesActions.getRolesByEmployeeId(employee.id);\n    await MasterDataActions.loadCityListData(employee.province_id);\n    await dispatch(EmployeeActions.setSelectedEmployeeId(employee.id));\n    await EmployeesActions.getEmployeeDataByIdRequested(employee.id);\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n      dispatch(ComponentActions.setGlobalLoading(false));\n    }, 500);\n  },\n  handlePressAddNew: async () => {\n    dispatch(EmployeesActions.setFormStatus(\"add\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeId(\"\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeData({}));\n    EmployeesActions.resetForm();\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n    }, 500);\n  },\n  handlePressDelete: async (employeeId) => {\n    await dispatch(EmployeesActions.setSelectedEmployeeId(employeeId));\n    EmployeesActions.deleteEmployeeRequested(employeeId);\n  },\n  handlePressEmployeeTools: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(EmployeeActions.setSelectedEmployeeId(record.id));\n    await dispatch(EmployeeActions.setSelectedEmployeeData(record));\n    setTimeout(() => {\n      navigate(\"employee-tools\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeesListContainer);\n\nexport default reduxForm({\n  form: \"employeesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  LoadingOutlined,\n  PlusOutlined,\n  ArrowLeftOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport { Checkbox, Col, message, Row, Typography, Upload } from \"antd\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst SelectRole = (props) => {\n  const { data, defaultValues, onChangeRoleEmployee } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        onChange={onChangeRoleEmployee}\n        defaultValue={defaultValues}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst EmployeeEditComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    enumBranch,\n    enumRole,\n    enumProvince,\n    enumCity,\n    selectedRoleEmployee,\n    onChangeRoleEmployee,\n    handleUploadPhoto,\n    defaultImage,\n    onChangeProvince,\n    onBackAction,\n    formStatus,\n  } = props;\n\n  const [loading, setLoading] = React.useState(false);\n  const [imageUrl, setImageUrl] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (defaultImage) {\n      setImageUrl(defaultImage);\n    }\n  }, [defaultImage]);\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error(\"Image must smaller than 2MB!\");\n    }\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h1 class=\"card-title\">Profil Karyawan</h1>\n                <p class=\"card-description\">\n                  Anda dapat mengelola role ataupun mengubah data karyawan pada\n                  halaman ini.\n                </p>\n                <Form>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name=\"nik\"\n                        label=\"NIK\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <CSelect\n                        data={enumProvince}\n                        name=\"province\"\n                        label=\"Nama Provinsi\"\n                        onChange={(val) => onChangeProvince(val)}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder={formStatus === 'edit' ? \"* Isi jika ingin merubah kata sandi\" : \"* Masukan kata sandi anda\"}\n                        component={CInput}\n                        type=\"password\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <CSelect\n                        name=\"city\"\n                        data={enumCity}\n                        label=\"Kota/Kabupaten\"\n                        disabled={enumCity.length <= 0}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name={\"name\"}\n                        label=\"Nama Karyawan\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <Typography style={{ textAlign: \"left\" }}>\n                        Foto Profil\n                      </Typography>\n                      <div\n                        class=\"card-body\"\n                        style={{\n                          marginLeft: -22,\n                          marginTop: -20,\n                        }}\n                      >\n                        <Upload\n                          name=\"avatar\"\n                          listType=\"picture-card\"\n                          className=\"avatar-uploader overflow-hidden\"\n                          showUploadList={false}\n                          beforeUpload={beforeUpload}\n                          onChange={handleChange}\n                        >\n                          {imageUrl || defaultImage ? (\n                            <>\n                              <img\n                                src={imageUrl}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                  height: \"100%\",\n                                  resizeMode: \"stretch\",\n                                  borderRadius: 5,\n                                }}\n                              />\n                              <div\n                                class=\"row\"\n                                style={{\n                                  backgroundColor: \"#F3F3F3\",\n                                  position: \"absolute\",\n                                  width: 80,\n                                  heigh: 30,\n                                  borderRadius: 50,\n                                  alignItems: \"center\",\n                                  justifyContent: \"center\",\n                                  opacity: 0.7,\n                                }}\n                              >\n                                <Typography style={{ fontSize: 10 }}>\n                                  Ubah\n                                </Typography>\n                                <EditOutlined\n                                  style={{\n                                    color: \"#020202\",\n                                    fontSize: 10,\n                                    marginLeft: 5,\n                                  }}\n                                />\n                              </div>\n                            </>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name={`phone`}\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n                      <Field\n                        name=\"address\"\n                        label=\"Alamat\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                      />\n                      <br />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <hr />\n                      {formStatus === \"edit\" && (\n                        <div class=\"card\">\n                          <div class=\"card-body\">\n                            <h6 class=\"card-title text-center\">Pilih Role</h6>\n                            <SelectRole\n                              data={enumRole}\n                              defaultValues={selectedRoleEmployee}\n                              onChangeRoleEmployee={onChangeRoleEmployee}\n                            />\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div class=\"row ml-2\">\n                    <CButtonAntd\n                      key=\"submit\"\n                      type=\"primary\"\n                      loading={false}\n                      onClick={onBackAction}\n                      danger\n                      icon={<ArrowLeftOutlined />}\n                    >\n                      Kembali\n                    </CButtonAntd>\n                    <div class=\"ml-3\" />\n                    <CButtonAntd\n                      key=\"submit\"\n                      type=\"primary\"\n                      loading={false}\n                      onClick={handleSubmit(submitForm)}\n                    >\n                      Simpan\n                    </CButtonAntd>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeEditComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport EmployeeEditComponent from \"../Component/EmployeeEditComponent\";\nimport { validateFormEmployee } from \"../../../app/validateForm\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getCitiesEnum, navigate } from \"../../../app/Helpers\";\nimport Invoke from \"../../../app/axios/Invoke\";\n\nconst EmployeeEditContainer = (props) => {\n  const {\n    valid,\n    getListRoles,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { listRoles },\n    branch: { listBranch, paging, keyword },\n    employees: { formStatus, selectedEmployeeData, selectedRoleEmployee },\n    masters: { listProvince, listCity },\n    handleClearSelectedEmployeeRole,\n  } = props;\n  const [listCityState, setListCityState] = React.useState([]);\n  const [roleSelected, setRoleSelected] = React.useState([]);\n  const [defaultImage, setDefaultImage] = React.useState(\"\");\n\n  const { page, limit } = paging;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      EmployeesActions.saveEmployeeRequested(formStatus, values, roleSelected);\n    } else {\n    }\n  };\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editEmployeeForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  const SelectEmployeeRole = [];\n  listRoles.map((item, index) => {\n    SelectEmployeeRole.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListRoles();\n\n    let subItem = [];\n    listCity.map((item, index) => {\n      subItem.push({\n        id: `city-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setListCityState(subItem);\n    // Mapping detail data employee when edit\n    if (formStatus === \"edit\") {\n      MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n      EmployeesActions.mapDetailEmployeeToForm();\n      // convert image url to base64\n      setDefaultImage(selectedEmployeeData.photo);\n      // set selected roles to redux-form\n      store.dispatch(\n        change(\"editEmployeeForm\", \"selectedRoles\", selectedRoleEmployee)\n      );\n    }\n    return () => {\n      handleClearSelectedEmployeeRole();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    setListCityState([]);\n    if (formStatus === \"edit\" && selectedEmployeeData.province_id) {\n      const provinceId =\n        selectedEmployeeData.province_id +\n        \"|\" +\n        selectedEmployeeData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedEmployeeData.province_id]);\n\n  const onChangeRoleEmployee = (roles) => {\n    setRoleSelected(roles);\n    store.dispatch(change(\"editEmployeeForm\", \"selectedRoles\", roles));\n  };\n\n  const onChangeProvince = async (provinceId) => {\n    setListCityState([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setListCityState(provinceMapping);\n      } else {\n        store.dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n        setListCityState([]);\n      }\n    } catch (error) {\n      setListCityState([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onBackAction = async () => {\n    await handleClearSelectedEmployeeRole();\n    setTimeout(() => {\n      navigate(\"employees\");\n    }, 500);\n  };\n\n  return (\n    <EmployeeEditComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumBranch={SelectBranch}\n      enumRole={SelectEmployeeRole}\n      enumProvince={SelectProvince}\n      enumCity={listCityState}\n      detailEmployee={selectedEmployeeData}\n      handleUploadPhoto={handleUploadPhoto}\n      formStatus={formStatus}\n      selectedRoleEmployee={selectedRoleEmployee}\n      onChangeRoleEmployee={onChangeRoleEmployee}\n      defaultImage={defaultImage}\n      onChangeProvince={onChangeProvince}\n      onBackAction={onBackAction}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  employees: state.employees,\n  branch: state.branch,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListRoles: () => RolesActions.getListRolesRequested(),\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  getDetailEmployee: async (employeeId) =>\n    await EmployeesActions.getEmployeeDataByIdRequested(employeeId),\n  setAutoPopulateEmployee: () => EmployeesActions.setAutoPopulateEmployee(),\n  handleClearSelectedEmployeeRole: () => {\n    dispatch(EmployeesActions.setSelectedRoleEmployee([]));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeEditContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeForm\",\n  validate: validateFormEmployee,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"ID Cabang\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Cabang\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst BranchModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default BranchModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport BranchModalComponent from \"../Component/BranchModalComponent\";\n\nconst BranchModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values) =>\n    BranchActions.saveBranchRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchModalContainer);\n\nexport default reduxForm({\n  form: \"editBranchForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport BranchModalContainer from \"../Container/BranchModalContainer\";\n\nconst { Search } = Input;\n\nconst BranchComponent = (props) => {\n  const {\n    headers,\n    listRoles,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Cabang</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Branch\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <BranchModalContainer />\n    </div>\n  );\n};\n\nexport default BranchComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport BranchComponent from \"../Component/BranchComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListBranch,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    branch: { listBranch, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listBranch.length > 0) {\n    listBranch.map((item, index) => {\n      listBranch[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Cabang\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListBranch(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(BranchActions.setPagingBranch(paging));\n    getListBranch(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListBranch(page, limit, val);\n  };\n\n  return (\n    <BranchComponent\n      headers={headers}\n      listRoles={listBranch}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListBranch: (page, limit, keyword) =>\n    BranchActions.getBranchListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(BranchActions.setSelectedBranchData({}));\n    await dispatch(BranchActions.setSelectedBranchId(\"\"));\n    dispatch(BranchActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    BranchActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(BranchActions.setFormStatus(\"edit\"));\n    await dispatch(BranchActions.setSelectedBranchId(record.id));\n    await dispatch(BranchActions.setSelectedBranchData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await BranchActions.mapDetailBranchToForm();\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(BranchActions.setSelectedBranchId(branchId));\n    BranchActions.deleteBranchRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field name=\"name\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst JobFormsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default JobFormsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport JobFormsModalComponent from \"../Component/JobFormsModalComponent\";\n\nconst JobFormsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    jobForms: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <JobFormsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  jobForms: state.jobForms,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    JobFormsActions.saveJobFormsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsModalContainer);\n\nexport default reduxForm({\n  form: \"editJobForms\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport JobFormsModalContainer from \"../Container/JobFormsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst JobFormsComponent = (props) => {\n  const {\n    headers,\n    listJobForms,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Job Forms</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Job Forms\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listJobForms}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <JobFormsModalContainer />\n    </div>\n  );\n};\n\nexport default JobFormsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport JobFormsComponent from \"../Component/JobFormsComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst JobFormsContainer = (props) => {\n  const {\n    getListJobForms,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    jobForms: { listJobForms, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listJobForms.length > 0) {\n    listJobForms.map((item, index) => {\n      listJobForms[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"40%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListJobForms(page, limit);\n  }, []);\n\n  const onSearch = (val) => {\n    getListJobForms(page, limit, val);\n  };\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(JobFormsActions.setPagingJobForm(paging));\n    getListJobForms(nextPage, pageSize);\n  };\n\n  return (\n    <JobFormsComponent\n      headers={headers}\n      listJobForms={listJobForms}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onSearch={onSearch}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  jobForms: state.jobForms,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListJobForms: (page, limit, val) =>\n    JobFormsActions.getJobFormsListDataRequested(page, limit, val),\n  handlePressAddNew: async () => {\n    await dispatch(JobFormsActions.setSelectedJobFormsData({}));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(\"\"));\n    dispatch(JobFormsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    JobFormsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(JobFormsActions.setFormStatus(\"edit\"));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(record.id));\n    await dispatch(JobFormsActions.setSelectedJobFormsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await JobFormsActions.mapDetailJobFormsToForm();\n  },\n  handlePressDelete: async (jobFormsId) => {\n    await dispatch(JobFormsActions.setSelectedJobFormsId(jobFormsId));\n    JobFormsActions.deleteJobFormsRequested(jobFormsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect data={enumInstanceType} name=\"instanceType\" label=\"Tipe\" />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"riceTrademark\"\n            label=\"Merek Dagang Beras\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerAddress\"\n            label=\"Alamat\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"phone\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingCapacity\"\n            label=\"Kapasitas Penggilingan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingWorkCapacityPerDay\"\n            label=\"Kapasitas Kerja Penggilingan (Per Hari)\"\n            placeholder=\"-\"\n            component={CInput}\n            labelSize={12}\n            type=\"text\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentUnitComponent = () => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"serialNumber\"\n            label=\"Nomor Seri\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"engineNumber\"\n            label=\"Nomor Mesin\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"gearboxNumber\"\n            label=\"Nomor Gearbox\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"production_unit_year\"\n            label=\"Tahun Produksi Unit\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Jam Kerja</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>\n          (per Hari & Hour Meter )\n        </Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <Field\n            name=\"perHour\"\n            label=\"Per Hour\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"hourMeter\"\n            label=\"Hour Meter\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\"></div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Tanggal Transaksi Produk</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>(Bulan & Tahun)</Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Pembelian\" />\n        </div>\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Terima Bantuan\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentUnitComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentSparePartComponent = ({ onChangeServiced, isServiced }) => {\n  const [listServices] = React.useState([\n    {\n      id: `serviced-1`,\n      value: \"true\",\n      label: \"Pernah\",\n    },\n    {\n      id: `serviced-2`,\n      value: \"false\",\n      label: \"Tidak\",\n    },\n  ]);\n\n  const RenderServiceHistory = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_buy_place`}\n                    label=\"Tempat Pembelian Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartSelling = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_qty`}\n                    label=\"Qty\"\n                    placeholder=\"Jumlah Penjualan Spare Part\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartNeeded = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_name`}\n                    label=\"Nama Produk Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_code`}\n                    label=\"Kode Produk\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.part_number`}\n                    label=\"Part Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <CSelect\n            onChange={(val) => onChangeServiced(val)}\n            data={listServices}\n            label=\"Pernah Diservis\"\n            name=\"location\"\n          />\n        </div>\n      </div>\n      {isServiced && (\n        <div class=\"row m-2 text-left\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_place\"\n              label=\"Perbaikan Dilakukan Di\"\n              placeholder=\"cth: Blitar\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_type\"\n              label=\"Jenis Perbaikan\"\n              placeholder=\"cth: Service Sikring\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">Riwayat Penggantian Spare Part</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan service, maksimal 5 unit.\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_changing_histories\"\n          component={RenderServiceHistory}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Penjualan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>\n            (pada saat kunjuangan)\n          </Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan penjualan, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_selling_histories\"\n          component={(_props) => <RenderSparePartSelling {..._props} />}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Daftar Kebutuhan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>(per Quartal)</Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi apabila terdapat kebutuhan spare part, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_needs\"\n          component={(_props) => <RenderSparePartNeeded {..._props} />}\n        />\n        <hr />\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-12\">\n          <Field\n            name=\"note\"\n            label=\"Keterangan\"\n            placeholder=\"cth: Pernah dilakukan service namun tidak rampung\"\n            component={CInput}\n            typeComponent=\"textarea\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentSparePartComponent;\n","import React from \"react\";\n\nimport { Steps, Button, message } from \"antd\";\nimport { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\n\nconst { Text } = Typography;\n\nconst StepsContent = styled.div`\n  min-height: 200px;\n  margin-top: 16px;\n  padding-top: 22px;\n  text-align: center;\n  background-color: #fafafa;\n  border: 1px dashed #e9e9e9;\n  border-radius: 2px;\n`;\n\nconst StepsAction = styled.div`\n  margin-top: 24px;\n`;\n\nconst { Step } = Steps;\n\nconst FormWizardIdentificationComponent = (props) => {\n  const { data, steps, saveFormChanges } = props;\n  const [current, setCurrent] = React.useState(0);\n\n  const onClickNext = () => {\n    setCurrent(current + 1);\n    saveFormChanges(false);\n  };\n\n  const onClickPrevious = () => {\n    setCurrent(current - 1);\n  };\n\n  const onFinished = () => {\n    message.success(\"Processing complete!\");\n    saveFormChanges(true);\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">Form Identification</h4>\n            <h6 class=\"text-small\">\n              {data.milling ? \"(Penggilingan)\" : \"(Non Penggilingan)\"}\n            </h6>\n            <hr />\n            <div class=\"d-flex justify-content-between align-items-baseline\">\n              <div class=\"col-md-6 mb-3\">\n                <Text>Nama Customer : </Text>\n                <Text strong>{data.customer_name ?? \"-\"}</Text>\n                <br />\n                <Text>Tipe : </Text>\n                <Text strong>{data.type ?? \"-\"}</Text>\n                <br />\n                <Text>Cabang : </Text>\n                <Text strong>{data.branch_name ?? \"-\"}</Text>\n                <br />\n                <Text>Status : </Text>\n                <CBadgeText type=\"info\">{data.status ?? \"-\"}</CBadgeText>\n                <br />\n                <Text>Dibuat : </Text>\n                <Text strong>{data.created_date ?? \"-\"}</Text>\n              </div>\n            </div>\n            <Steps current={current}>\n              {steps.map((item) => (\n                <Step\n                  description={item.description}\n                  key={item.title}\n                  title={item.title}\n                />\n              ))}\n            </Steps>\n            <StepsContent>{steps[current].content}</StepsContent>\n            <StepsAction>\n              {current < steps.length - 1 && (\n                <Button type=\"primary\" onClick={onClickNext}>\n                  Next\n                </Button>\n              )}\n              {current === steps.length - 1 && (\n                <Button type=\"primary\" onClick={onFinished}>\n                  Done\n                </Button>\n              )}\n              {current > 0 && (\n                <Button style={{ margin: \"0 8px\" }} onClick={onClickPrevious}>\n                  Previous\n                </Button>\n              )}\n            </StepsAction>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormWizardIdentificationComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst ContentMachineConfigurationComponent = ({\n  machineConf,\n  onAddMachineConf,\n}) => {\n  const RenderBodyHusker = ({ fields, item }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 2) {\n                return;\n              }\n              fields.push({});\n              setTimeout(() => {\n                onAddMachineConf(item);\n              }, 500);\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`${item.type} ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.brand`}\n                    label=\"Merek\"\n                    placeholder=\"cth: merek_1, merek_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.type`}\n                    label=\"Tipe\"\n                    placeholder=\"cth: tipe_1, tipe_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-2\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"cth: 12, 5, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.buy_and_use_year`}\n                    label=\"Tahun Pembelian & Pemakaian\"\n                    placeholder=\"cth: 2015, 2017, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.serial_number`}\n                    label=\"Nomor Seri\"\n                    placeholder=\"cth: 77888, 66555, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return machineConf.map((item, index) => {\n    return (\n      <div key={`machine-conf-${index}`} className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">{item.type}</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Maksimal hanya input 2 field.\n          </p>\n        </div>\n        <FieldArray\n          name={`engine_confs.${item.name}.list`}\n          component={(_props) => <RenderBodyHusker item={item} {..._props} />}\n        />\n        <hr />\n      </div>\n    );\n  });\n};\n\nexport default ContentMachineConfigurationComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneRegularComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumInstanceType}\n            name=\"instanceType\"\n            label=\"Tipe Instansi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"productName\"\n            label=\"Nama Produk\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instancePhoneNumber\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-4\">\n        <h5 className=\"card-title\">Alamat Customer</h5>\n      </div>\n      <div class=\"row ml-2 mr-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"kelurahan\"\n            label=\"Kelurahan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"kecamatan\"\n            label=\"Kecamatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n          <Field\n            name=\"postalCode\"\n            label=\"Kode Pos\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneRegularComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, getFormValues, reduxForm } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport {\n  getCitiesEnum,\n  getMachineConf,\n  getProvinceEnum,\n  SelectInstanceType,\n  SelectInstanceTypeRegular,\n  SelectStatusMilling,\n} from \"../../../../app/Helpers\";\nimport ContentStepOneComponent from \"../../Component/Wizard/ContentStepOneComponent\";\nimport ContentUnitComponent from \"../../Component/Wizard/ContentUnitComponent\";\nimport ContentSparePartComponent from \"../../Component/Wizard/ContentSparePartComponent\";\nimport FormWizardIdentificationComponent from \"../../Component/Wizard/FormWizardIdentificationComponent\";\nimport ContentMachineConfigurationComponent from \"../../Component/Wizard/ContentMachineConfigurationComponent\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport ContentStepOneRegularComponent from \"../../Component/Wizard/ContentStepOneRegularComponent\";\nimport * as IdentificationActions from \"../../Store/IdentificationActions\";\n\nconst FormWizardIdentificationContainer = (props) => {\n  const [cities, setCities] = React.useState([]);\n  const [serviced, setServiced] = React.useState(false);\n  const {\n    identification: { selectedIdentificationData, formStatus },\n    masters: { listProvince },\n    machineConfiguration: { listMachine },\n    identificationFormValues,\n  } = props;\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"wizardIdentificationForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onChangeServiced = (val) => {\n    const isServiced = val.split(\"|\");\n    if (isServiced[0] === \"true\") {\n      setServiced(true);\n    } else {\n      setServiced(false);\n    }\n  };\n\n  const onAddMachineConf = (item) => {\n    store.dispatch(\n      change(\n        \"wizardIdentificationForm\",\n        `engine_confs.${item.name}.id`,\n        item.id\n      )\n    );\n  };\n\n  const saveFormChanges = (isLastStep) => {\n    IdentificationActions.saveIdentificationRequested(\n      formStatus,\n      identificationFormValues,\n      isLastStep\n    );\n  };\n\n  const steps = [];\n\n  if (selectedIdentificationData.milling) {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceType}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Konfigurasi Mesin\",\n      content: (\n        <ContentMachineConfigurationComponent\n          machineConf={getMachineConf(listMachine)}\n          onAddMachineConf={onAddMachineConf}\n        />\n      ),\n    });\n  } else {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneRegularComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceTypeRegular}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Unit\",\n      content: <ContentUnitComponent />,\n    });\n  }\n\n  steps.push({\n    title: \"Spare Part\",\n    content: (\n      <ContentSparePartComponent\n        onChangeServiced={onChangeServiced}\n        isServiced={serviced}\n      />\n    ),\n  });\n\n  return (\n    <FormWizardIdentificationComponent\n      data={selectedIdentificationData}\n      steps={steps}\n      saveFormChanges={saveFormChanges}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  identification: state.identification,\n  masters: state.masters,\n  machineConfiguration: state.machineConfiguration,\n  identificationFormValues: getFormValues(\"wizardIdentificationForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormWizardIdentificationContainer);\n\nexport default reduxForm({\n  form: \"wizardIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  formStatus,\n  listCustomer,\n  listType,\n  listBranch,\n  listLocation,\n  listMilling\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          {formStatus === \"edit\" && (\n            <Field\n              name=\"id\"\n              label=\"ID Cabang\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          )}\n        </div>\n        <div class=\"col-md-12\">\n          <CSelect\n            // onChange={(val) => handleAutoPopulateUnitModel(val, indexUnit)}\n            showSearch\n            data={listCustomer}\n            label=\"Nama Customer\"\n            name=\"customer\"\n          />\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <CSelect data={listBranch} label=\"Cabang\" name=\"branch\" />\n            </div>\n            <div class=\"col-md-6\">\n              <CSelect data={listLocation} label=\"Lokasi\" name=\"location\" />\n            </div>\n          </div>\n          <CSelect data={listType} label=\"Tipe Identifikasi\" name=\"type\" />\n          <CSelect data={listMilling} label=\"Milling\" name=\"milling\" />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst IdentificationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n    enumCustomers,\n    enumType,\n    enumBranch,\n    enumLocation,\n    enumMilling,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n          listCustomer={enumCustomers}\n          listType={enumType}\n          listBranch={enumBranch}\n          listLocation={enumLocation}\n          listMilling={enumMilling}\n        />\n      }\n    />\n  );\n};\n\nexport default IdentificationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as CustomersActions from \"../../Customers/Store/CustomersActions\";\nimport IdentificationModalComponent from \"../Component/IdentificationModalComponent\";\nimport {\n  SelectLocation,\n  SelectMilling,\n  SelectType,\n} from \"../../../app/Helpers\";\n\nconst IdentificationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    identification: { formStatus },\n    handleSubmitForm,\n    customers: { listCustomers },\n    branch: { listBranch },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomer = [];\n  listCustomers.map((item, index) => {\n    SelectCustomer.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    CustomersActions.getCustomerListDataByPaging(1, 300);\n  }, []);\n\n  return (\n    <IdentificationModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumCustomers={SelectCustomer}\n      enumType={SelectType}\n      enumBranch={SelectBranch}\n      enumLocation={SelectLocation}\n      enumMilling={SelectMilling}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  identification: state.identification,\n  component: state.component,\n  masters: state.masters,\n  customers: state.customers,\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    IdentificationActions.saveIdentificationRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IdentificationModalContainer);\n\nexport default reduxForm({\n  form: \"editIdentificationhForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport IdentificationModalContainer from \"../Container/IdentificationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ListIdentificationComponent = (props) => {\n  const {\n    headers,\n    listIdentification,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Identifikasi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Identifikasi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listIdentification}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    size=\"small\"\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <IdentificationModalContainer />\n    </div>\n  );\n};\n\nexport default ListIdentificationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListIdentificationComponent from \"../Component/ListIdentificationComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ListIdentificationContainer = (props) => {\n  const {\n    getListIdentification,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    identification: { listIdentification, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listIdentification.length > 0) {\n    listIdentification.map((item, index) => {\n      listIdentification[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_id\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_id.length - b.branch_id.length,\n    },\n    {\n      title: \"Tipe Identifikasi\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"20%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListIdentification(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(IdentificationActions.setPagingIdentification(paging));\n    getListIdentification(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListIdentification(page, limit, val);\n  };\n\n  return (\n    <ListIdentificationComponent\n      headers={headers}\n      listIdentification={listIdentification}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  identification: state.identification,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListIdentification: (page, limit, keyword) =>\n    IdentificationActions.getIdentificationListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(IdentificationActions.setSelectedIdentificationData({}));\n    await dispatch(IdentificationActions.setSelectedIdentificationId(\"\"));\n    dispatch(IdentificationActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    IdentificationActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(IdentificationActions.setFormStatus(\"edit\"));\n    await dispatch(\n      IdentificationActions.setSelectedIdentificationId(record.id)\n    );\n    await dispatch(IdentificationActions.setSelectedIdentificationData(record));\n    setTimeout(() => {\n      navigate(\"form-identification\");\n    }, 500);\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(IdentificationActions.setSelectedIdentificationId(branchId));\n    IdentificationActions.deleteIdentificationRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListIdentificationContainer);\n\nexport default reduxForm({\n  form: \"identificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, formStatus }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {formStatus === \"edit\" && (\n          <div class=\"col-md-12\">\n            <Field\n              name=\"id\"\n              label=\"ID Konfigurasi Mesin\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          </div>\n        )}\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Konfigurasi Mesin\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst MachineConfigurationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n        />\n      }\n    />\n  );\n};\n\nexport default MachineConfigurationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as MachineConfigurationActions from \"../Store/MachineConfigurationActions\";\nimport BranchModalComponent from \"../Component/MachineConfigurationModalComponent\";\n\nconst MachineConfigurationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    MachineConfigurationActions.saveMachineRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationModalContainer);\n\nexport default reduxForm({\n  form: \"editMachineConfigurationForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport MachineConfigurationModalContainer from \"../Container/MachineConfigurationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst MachineConfigurationComponent = (props) => {\n  const {\n    headers,\n    listMachine,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Konfigurasi Mesin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Konfigurasi Mesin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listMachine}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <MachineConfigurationModalContainer />\n    </div>\n  );\n};\n\nexport default MachineConfigurationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as MachineActions from \"../Store/MachineConfigurationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport MachineConfigurationComponent from \"../Component/MachineConfigurationComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst MachineConfigurationContainer = (props) => {\n  const {\n    getListMachine,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    machineConfiguration: { listMachine, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMachine.length > 0) {\n    listMachine.map((item, index) => {\n      listMachine[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Konfigurasi Mesin\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"50%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListMachine(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(MachineActions.setPagingMachineConf(paging));\n    getListMachine(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListMachine(page, limit, val);\n  };\n\n  return (\n    <MachineConfigurationComponent\n      headers={headers}\n      listMachine={listMachine}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  machineConfiguration: state.machineConfiguration,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMachine: (page, limit, keyword) =>\n    MachineActions.getMachineListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(MachineActions.setSelectedMachineData({}));\n    await dispatch(MachineActions.setSelectedMachineId(\"\"));\n    dispatch(MachineActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    MachineActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(MachineActions.setFormStatus(\"edit\"));\n    await dispatch(MachineActions.setSelectedMachineId(record.id));\n    await dispatch(MachineActions.setSelectedMachineData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await MachineActions.mapDetailMachineToForm();\n  },\n  handlePressDelete: async (machineId) => {\n    await dispatch(MachineActions.setSelectedMachineId(machineId));\n    MachineActions.deleteMachineRequested(machineId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationContainer);\n\nexport default reduxForm({\n  form: \"machineConfigurationForm\",\n})(EnhanceContainer);\n","import React, { useState } from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Upload, message, Typography } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\n\nconst beforeUpload = (file) => {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n  return isJpgOrPng && isLt2M;\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  handleUploadPhoto,\n  selectedUnitsData,\n}) => {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {/* <div class=\"col-md-12\">\n          <Text style={{ marginBottom: 10 }}>Foto Unit</Text>\n          <Upload\n            name=\"avatar\"\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n            // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            beforeUpload={beforeUpload}\n            onChange={handleChange}\n          >\n            {imageUrl ? (\n              <img\n                src={imageUrl}\n                alt=\"avatar\"\n                style={{ height: \"100%\", width: \"100%\" }}\n              />\n            ) : (\n              uploadButton\n            )}\n          </Upload>\n        </div> */}\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"name\" label=\"Nama Unit\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport UnitsModalComponent from \"../Component/UnitsModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    UnitsActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    UnitsActions.saveUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitForm\",\n  validate: validateFormUnit,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input, Table, Tooltip } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport UnitsModalContainer from \"../Container/UnitsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <Tooltip placement=\"top\" title=\"Edit unit\">\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </Tooltip>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    size=\"small\"\n                    columns={headers}\n                    dataSource={listUnits}\n                    // renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitsComponent;\n","import { Button, Space, Tooltip, Typography } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  BoxPlotOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/UnitsComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressUnitModel,\n    handlePressUnitFields,\n    handlePressLink,\n    units: { listUnits, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const tooltipText = <span>Unit Model</span>;\n\n  if (listUnits.length > 0) {\n    listUnits.map((item, index) => {\n      listUnits[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <Tooltip placement=\"topLeft\" title=\"Edit unit\">\n        <CButtonAntd\n          onClick={() => {\n            handlePressEdit(record);\n          }}\n          type=\"primary\"\n          icon={<EditOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n      <Tooltip placement=\"top\" title={tooltipText}>\n        <CButtonAntd\n          onClick={() => handlePressUnitModel(record.id)}\n          type=\"primary\"\n          icon={<BoxPlotOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n      <CButtonAntd\n        onClick={() => handlePressUnitFields(record)}\n        type=\"primary\"\n        icon={<FileAddOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n      render: (unit, record) => (\n        <Button\n          block\n          onClick={() => handlePressLink(record)}\n          type=\"link\"\n          style={{ whiteSpace: \"normal\", textAlign: \"left\" }}\n        >\n          <Typography\n            style={{ color: \"#1890ff\", fontWeight: \"bold\", fontSize: 11 }}\n          >\n            {unit}\n          </Typography>\n        </Button>\n      ),\n    },\n    {\n      title: \"Divisi\",\n      dataIndex: \"division\",\n      key: \"division\",\n      width: \"10%\",\n      sorter: (a, b) => a.division.length - b.division.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  React.useEffect(() => {\n    getListUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitsActions.setPagingUnit(paging));\n    getListUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnit(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listUnits}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnit: (page, limit, keyword) =>\n    UnitsActions.getUnitListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitsActions.setSelectedUnitData({}));\n    await dispatch(UnitsActions.setSelectedUnitId(\"\"));\n    dispatch(UnitsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitsActions.mapDetailUnitToForm();\n  },\n  handlePressDelete: async (unitId) => {\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    UnitsActions.deleteUnitRequested(unitId);\n  },\n  handlePressUnitModel: async (unitId) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    setTimeout(() => {\n      navigate(\"unit-models\");\n    }, 500);\n  },\n  handlePressUnitFields: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    setTimeout(() => {\n      navigate(\"unit-fields\");\n    }, 500);\n  },\n  handlePressLink: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    setTimeout(() => {\n      navigate(\"unit-job-forms\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"unitsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumProvince,\n  onChangeProvince,\n  cities,\n  enumBranch,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"name\"\n              label=\"Nama Customer\"\n              placeholder=\"Nama..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"picPhone\"\n              label=\"Telepon PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"username\"\n              label=\"Username\"\n              placeholder=\"Username..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              onChange={(val) => onChangeProvince(val)}\n              data={enumProvince}\n              name=\"province\"\n              label=\"Nama Provinsi\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"password\"\n              label=\"Password\"\n              placeholder=\"Password..\"\n              component={CInput}\n              type=\"password\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              data={cities}\n              name=\"city\"\n              label=\"Kota/Kabupaten\"\n              disabled={cities.length <= 0}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"phone\"\n              label=\"Telepon\"\n              placeholder=\"cth: 0821xxx\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"workHour\"\n              label=\"Jam Kerja\"\n              placeholder=\"cth : 08:00 - 15:20\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"pic\"\n              label=\"PIC\"\n              placeholder=\"PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"address\"\n              label=\"Alamat\"\n              component={CInput}\n              type=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst CustomerModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    enumProvince,\n    onChangeProvince,\n    cities,\n    enumBranch,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      width={900}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          enumProvince={enumProvince}\n          onChangeProvince={onChangeProvince}\n          cities={cities}\n          enumBranch={enumBranch}\n        />\n      }\n    />\n  );\n};\n\nexport default CustomerModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as CustomersActions from \"../Store/CustomersActions\";\nimport CustomerModalComponent from \"../Component/CustomerModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { getCitiesEnum } from \"../../../app/Helpers\";\n\nconst CustomerModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { listBranch },\n    masters: { listMenu, listProvince },\n    customers: { selectedCustomerData, formStatus },\n    handleSubmitForm,\n  } = props;\n  const [cities, setCities] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    setCities([]);\n    if (formStatus === \"edit\" && selectedCustomerData.province_id) {\n      const provinceId =\n        selectedCustomerData.province_id +\n        \"|\" +\n        selectedCustomerData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedCustomerData.province_id]);\n\n  React.useEffect(() => {\n    return () => {\n      CustomersActions.setFormStatus(\"add\");\n    };\n  });\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"editCustomerForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  return (\n    <CustomerModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumProvince={SelectProvince}\n      onChangeProvince={onChangeProvince}\n      cities={cities}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  customers: state.customers,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    CustomersActions.saveCustomerRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerModalContainer);\n\nexport default reduxForm({\n  form: \"editCustomerForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CustomerModalContainer from \"../Container/CustomerModalContainer\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst CustomerComponent = (props) => {\n  const {\n    headers,\n    listCustomers,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    isBlocked\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Customer</h6>\n                </div>\n                <div class=\"row align-items-center\">\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Customers\n                  </CButtonAntd>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2 mt-3\">\n                  {!isBlocked && <div class=\"col-md-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>}\n                  <div class=\"col-md-4 mt-4\">\n                    <div class=\"mt-2\" />\n                    <Search\n                      placeholder=\"Cari Customer\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listCustomers}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <CustomerModalContainer />\n    </div>\n  );\n};\n\nexport default CustomerComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { formValueSelector, reduxForm } from \"redux-form\";\nimport * as CustomerActions from \"../Store/CustomersActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CustomerComponent from \"../Component/CustomerComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex, isBlockedRoleCustomer } from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"customerForm\");\n\nconst CustomerContainer = (props) => {\n  const {\n    user: { roles, branchId },\n    getListCustomer,\n    getListBranch,\n    getListProvince,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    customerBranchValue,\n    customers: { listCustomers, paging, keyword },\n    branch: { listBranch },\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n  const { page, totalPage, limit } = paging;\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  if (listCustomers.length > 0) {\n    listCustomers.map((item, index) => {\n      listCustomers[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n    {\n      title: \"PIC | Phone\",\n      dataIndex: `phone`,\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const checkBlockedRole = () => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomer(roleId);\n\n    if (branchId) {\n      if (isBlockedRole) {\n        getListCustomer(1, 10, \"\", branchId);\n      } else {\n        getListCustomer(1, 10, \"\");\n      }\n    } else {\n      getListCustomer(1, 10, \"\");\n    }\n\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    getListBranch();\n    getListProvince();\n    checkBlockedRole();\n  }, []);\n\n  const onChangePagination = async (nextPage) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n    await store.dispatch(CustomerActions.setPagingCustomer(paging));\n    getListCustomer(nextPage, limit, keyword);\n  };\n\n  const onSearch = (val) => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomer(roleId);\n\n    if (branchId) {\n      if (isBlockedRole) {\n        getListCustomer(page, limit, val, branchId);\n      } else {\n        getListCustomer(page, limit, val, customerBranchValue);\n      }\n    } else {\n      getListCustomer(page, limit, val, customerBranchValue);\n    }\n  };\n\n  return (\n    <CustomerComponent\n      headers={headers}\n      paging={paging}\n      isBlocked={isBlocked}\n      listCustomers={listCustomers}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers,\n  branch: state.branch,\n  customerBranchValue: selector(state, \"branch\"),\n  user: state.auth.userDetail,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListCustomer: (page, limit, keyword, branchId) => {\n    const splitBranch = branchId ? branchId.split(\"|\") : [\"\"];\n    CustomerActions.getCustomerListDataByPaging(\n      page,\n      limit,\n      keyword,\n      splitBranch[0]\n    );\n  },\n  getListBranch: () => BranchActions.getBranchListDataRequested(1, 250),\n  getListProvince: () => MasterDataActions.loadProvinceListData(),\n  handlePressAddNew: async () => {\n    await dispatch(CustomerActions.setSelectedCustomerData({}));\n    await dispatch(CustomerActions.setSelectedCustomerId(\"\"));\n    dispatch(CustomerActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    CustomerActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(CustomerActions.setFormStatus(\"edit\"));\n    await dispatch(CustomerActions.setSelectedCustomerId(record.id));\n    await dispatch(CustomerActions.setSelectedCustomerData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await CustomerActions.mapDetailCustomerToForm();\n  },\n  handlePressDelete: async (customerId) => {\n    await dispatch(CustomerActions.setSelectedCustomerId(customerId));\n    CustomerActions.deleteCustomerRequested(customerId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerContainer);\n\nexport default reduxForm({\n  form: \"customerForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Peralatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default ToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTools } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport ToolsModalComponent from \"../Component/ToolsModalComponent\";\n\nconst ToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    tools: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <ToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    ToolsActions.saveToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editToolsForm\",\n  validate: validateFormTools,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ToolsModalContainer from \"../Container/ToolsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ToolsComponent = (props) => {\n  const {\n    headers,\n    listTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Peralatan</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Peralatan\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToolsModalContainer />\n    </div>\n  );\n};\n\nexport default ToolsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ToolsComponent from \"../Component/ToolsComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ToolsContainer = (props) => {\n  const {\n    getListTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    tools: { listTools, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listTools.length > 0) {\n    listTools.map((item, index) => {\n      listTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListTools(1, 10);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ToolsActions.setPagingTools(paging));\n    getListTools(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListTools(page, limit, val);\n  };\n\n  return (\n    <ToolsComponent\n      headers={headers}\n      listTools={listTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListTools: (page, limit, keyword) =>\n    ToolsActions.getToolsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(ToolsActions.setSelectedToolsData({}));\n    await dispatch(ToolsActions.setSelectedToolsId(\"\"));\n    dispatch(ToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    ToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(ToolsActions.setFormStatus(\"edit\"));\n    await dispatch(ToolsActions.setSelectedToolsId(record.id));\n    await dispatch(ToolsActions.setSelectedToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await ToolsActions.mapDetailToolsToForm();\n  },\n  handlePressDelete: async (toolsId) => {\n    await dispatch(ToolsActions.setSelectedToolsId(toolsId));\n    ToolsActions.deleteToolsRequested(toolsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsContainer);\n\nexport default reduxForm({\n  form: \"toolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Judul\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst FormCategoryModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default FormCategoryModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormCategory } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport BranchModalComponent from \"../Component/FormCategoryModalComponent\";\n\nconst FormCategoryModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    FormCategoryActions.saveFormCategoryRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryModalContainer);\n\nexport default reduxForm({\n  form: \"editFormCategory\",\n  validate: validateFormCategory,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport FormCategoryModalContainer from \"../Container/FormCategoryModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst FormCategoryComponent = (props) => {\n  const {\n    headers,\n    listFormCategory,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Kategori Form</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Kategori Form\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listFormCategory}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <FormCategoryModalContainer />\n    </div>\n  );\n};\n\nexport default FormCategoryComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport FormCategoryComponent from \"../Component/FormCategoryComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst FormCategoryContainer = (props) => {\n  const {\n    getListFormCategory,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    formCategory: { listFormCategory, paging, keyword },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listFormCategory.length > 0) {\n    listFormCategory.map((item, index) => {\n      listFormCategory[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListFormCategory(page, limit, keyword);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(FormCategoryActions.setPagingFormCategory(paging));\n    getListFormCategory(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListFormCategory(page, limit, val);\n  };\n\n  return (\n    <FormCategoryComponent\n      headers={headers}\n      listFormCategory={listFormCategory}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  formCategory: state.formCategory,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListFormCategory: (page, limit, keyword) =>\n    FormCategoryActions.getFormCatgeoryListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData({}));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(\"\"));\n    dispatch(FormCategoryActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    FormCategoryActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(FormCategoryActions.setFormStatus(\"edit\"));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(record.id));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await FormCategoryActions.mapDetailCategoryToForm();\n  },\n  handlePressDelete: async (formCategoryId) => {\n    await dispatch(\n      FormCategoryActions.setSelectedFormCategoryId(formCategoryId)\n    );\n    FormCategoryActions.deleteFormCategoryRequested(formCategoryId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryContainer);\n\nexport default reduxForm({\n  form: \"formCategory\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-12 mt-3\">\n            <Field\n              name=\"name\"\n              label=\"Nama Model\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModelsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModelsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit, validateFormUnitModel } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitsModelsModalComponent from \"../Component/UnitsModelsModalComponent\";\n\nconst UnitModelsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModelsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitModelActions.saveUnitModelsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitModelForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport UnitModelsModalContainer from \"../Container/UnitModelsModalContainer\";\nimport { navigate } from \"../../../app/Helpers\";\n\nconst { Search } = Input;\n\nconst UnitModelsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit Model</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Model\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitModelsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitModelsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FieldNumberOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitModelsComponent from \"../Component/UnitModelsComponent\";\n\nconst UnitModelsContainer = (props) => {\n  const {\n    getListUnitModels,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressSerialNumber,\n    unitModels: { listUnitModels, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitModels.length > 0) {\n    listUnitModels.map((item, index) => {\n      listUnitModels[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Model\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressSerialNumber(record)}\n        type=\"ghost\"\n        icon={<FieldNumberOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitModels(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitModelActions.setPagingUnitModel(paging));\n    getListUnitModels(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitModels(page, limit, val);\n  };\n\n  return (\n    <UnitModelsComponent\n      headers={headers}\n      listUnits={listUnitModels}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitModels: state.unitModels,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitModels: (page, limit, keyword) =>\n    UnitModelActions.getUnitModelListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitModelActions.setSelectedUnitModelData({}));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(\"\"));\n    dispatch(UnitModelActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitModelActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitModelActions.setFormStatus(\"edit\"));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitModelActions.mapDetailUnitModelToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(UnitModelActions.setSelectedUnitModelId(unitModelId));\n    UnitModelActions.deleteUnitModelRequested(unitModelId);\n  },\n  handlePressSerialNumber: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    setTimeout(() => {\n      navigate(\"unit-serial-number\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsContainer);\n\nexport default reduxForm({\n  form: \"unitsModelsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumFormCategory,\n  enumJobForm,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumFormCategory ?? []}\n              name=\"formCategory\"\n              label=\"Kategori\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"fieldName\"\n              label=\"Nama Field\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumJobForm ?? []}\n              name=\"jobForm\"\n              label=\"Jenis Form\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitFieldsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumFormCategory,\n    enumJobForm,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumFormCategory={enumFormCategory}\n          enumJobForm={enumJobForm}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitFieldsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsModalComponent from \"../../Component/UnitFields/UnitFieldsModalComponent\";\nimport Invoke from \"../../../../app/axios/Invoke\";\n\nconst UnitFieldsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    handleSubmitForm,\n  } = props;\n  const [formCategory, setFormCategory] = React.useState([]);\n  const [jobForm, setJobForm] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const loadOption = async () => {\n    const { data } = await Invoke.getFormCategory(1, 100, \"\");\n    const dataJobForm = await Invoke.getListJobForm(1, 100, \"\");\n    const listFormCategory = data.callback.data;\n    const listJobForm = dataJobForm.data.callback.data;\n\n    const SelectFormCategory = [];\n    listFormCategory.map((item, index) => {\n      SelectFormCategory.push({\n        id: `form-category-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    const SelectJobForm = [];\n    listJobForm.map((item, index) => {\n      SelectJobForm.push({\n        id: `job-form-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setFormCategory(SelectFormCategory);\n    setJobForm(SelectJobForm);\n  };\n\n  React.useEffect(() => {\n    loadOption();\n  }, []);\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitFieldsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      enumFormCategory={formCategory}\n      enumJobForm={jobForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitFieldsActions.saveUnitFieldsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitFieldsForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/UnitFields/UnitFieldsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitFieldsComponent = (props) => {\n  const {\n    headers,\n    listUnitFields,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitsData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Field Unit : ${selectedUnitsData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Field\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitFields}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitFieldsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsComponent from \"../../Component/UnitFields/UnitFieldsComponent\";\n\nconst UnitFieldsContainer = (props) => {\n  const {\n    getListUnitFields,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitFields: { listUnitFields, paging },\n    units: { selectedUnitsData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitFields.length > 0) {\n    listUnitFields.map((item, index) => {\n      listUnitFields[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Job Form\",\n      dataIndex: \"job_form_name\",\n      key: \"job_form_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\n    },\n    {\n      title: \"Nama Field\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Kategori\",\n      dataIndex: \"category_form_name\",\n      key: \"category_form_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.category_form_name.length - b.category_form_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"40%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitFields(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitFieldsActions.setPagingUnitFields(paging));\n    getListUnitFields(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitFields(page, limit, val);\n  };\n\n  return (\n    <UnitFieldsComponent\n      headers={headers}\n      listUnitFields={listUnitFields}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedUnitsData={selectedUnitsData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitFields: state.unitFields,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitFields: (page, limit, keyword) =>\n    UnitFieldsActions.getUnitFieldsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData({}));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(\"\"));\n    dispatch(UnitFieldsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitFieldsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitFieldsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(record.id));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitFieldsActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(unitFieldsId));\n    UnitFieldsActions.deleteUnitFieldRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsContainer);\n\nexport default reduxForm({\n  form: \"unitFieldsForm\",\n})(EnhanceContainer);\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_IDENTIFICATION_LIST_DATA =\n  \"SET_REPORT_IDENTIFICATION_LIST_DATA\";\nexport const SET_PAGING_REPORT_IDENTIFICATION =\n  \"SET_PAGING_REPORT_IDENTIFICATION\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportIdentificationListData = (payload) => {\n  return {\n    type: SET_REPORT_IDENTIFICATION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportIdentification = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportIdentificationListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportIdentification(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportIdentificationComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Identifikasi</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportIdentificationComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportIdentificationActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportIdentificationComponent\";\n\nconst ReportIdentificationContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportIdentificationContainer);\n\nexport default reduxForm({\n  form: \"reportIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Typography } from \"antd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumHeadDivision,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"title\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12 mt-3\">\n          <CSelect\n            showSearch\n            data={enumHeadDivision}\n            name=\"headDivision\"\n            label=\"Kepala Divisi\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumHeadDivision,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumHeadDivision={enumHeadDivision}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport DivisionModalComponent from \"../Component/DivisionModalComponent\";\nimport { enumSelectGenerator } from \"../../../app/Helpers\";\n\nconst DivisionModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    division: { formStatus },\n    masters: { listMenu },\n    employees: { listEmployees },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectEmployees = enumSelectGenerator(listEmployees, \"employee\");\n\n  return (\n    <DivisionModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumHeadDivision={SelectEmployees}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  division: state.division,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    DivisionActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    DivisionActions.saveDivisionRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionForm\",\n  validate: validateDivisionForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport DivisionModalContainer from \"../Container/DivisionModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Divisi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Divisi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <DivisionModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport * as DivisionUnitActions from \"../Store/DivisionUnitActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/DivisionComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListDivision,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressDivisionUnit,\n    division: { listDivision, paging },\n    getListEmlpoyee \n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n      key: \"title\",\n      width: \"30%\",\n      sorter: (a, b) => a.title.length - b.title.length,\n    },\n    {\n      title: \"Kepala Divisi\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDivisionUnit(record)}\n        type=\"primary\"\n        icon={<FileAddOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivision(page, limit);\n    getListEmlpoyee(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionActions.setPagingDivision(paging));\n    getListDivision(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivision(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listDivision}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivision: (page, limit, keyword) =>\n    DivisionActions.getDivisionListDataRequested(page, limit, keyword),\n  getListEmlpoyee: (page, limit) => {\n    EmployeeActions.loadEmployeeListData(page, limit);\n  },\n  handlePressAddNew: async () => {\n    await dispatch(DivisionActions.setSelectedDivisionData({}));\n    await dispatch(DivisionActions.setSelectedDivisionId(\"\"));\n    dispatch(DivisionActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionActions.mapDetailDivisionToForm();\n  },\n  handlePressDelete: async (divisionId) => {\n    await dispatch(DivisionActions.setSelectedDivisionId(divisionId));\n    DivisionActions.deleteDivisionRequested(divisionId);\n  },\n  handlePressDivisionUnit: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    setTimeout(() => {\n      navigate(\"division-unit\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"divisionForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumTools }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Peralatan Karyawan</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumTools}\n              name=\"tools\"\n              label=\"Peralatan\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst EmployeeToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    enumTools,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formStatus={formStatus}\n          enumTools={enumTools}\n        />\n      }\n    />\n  );\n};\n\nexport default EmployeeToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateEmployeeToolsForm, validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport EmployeeToolsModalComponent from \"../../Component/EmployeeTools/EmployeeToolsModalComponent\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\n\nconst EmployeeToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    employeeTools: { formStatus },\n    tools: { listTools },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectTools = enumSelectGenerator(listTools);\n\n  return (\n    <EmployeeToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      enumTools={SelectTools}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  employeeTools: state.employeeTools,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    EmployeeToolsActions.saveEmployeeToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeToolsForm\",\n  validate: validateEmployeeToolsForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport {\n  PlusOutlined,\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n} from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport EmployeeToolsModalContainer from \"../../Container/EmployeeTools/EmployeeToolsModalContainer\";\n\nconst { Search } = Input;\n\nconst EmployeeToolsComponent = (props) => {\n  const {\n    headers,\n    listEmployeeTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedEmployeeData,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Karyawan : ${selectedEmployeeData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-2 mb-2\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"employees\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Peralatan\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak PDF\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployeeTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <EmployeeToolsModalContainer />\n    </div>\n  );\n};\n\nexport default EmployeeToolsComponent;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nexport const generateEmployeeToolsReport = async (data) => {\n  const { selectedEmployeeData, listEmployeeTools } = data;\n  const newListData = [];\n\n  // eslint-disable-next-line array-callback-return\n  await listEmployeeTools.map((item, index) => {\n    newListData.push({ no: index + 1, name: item.name, check: \"-\" });\n  });\n\n  const doc = new jsPDF();\n\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Peralatan Karyawan\", 100, 20, \"center\");\n\n  doc.setFontSize(12);\n  doc.setFont(\"courier\");\n  //   Line 1\n  doc.text(15, 42, `Karyawan`);\n  doc.text(`: ${selectedEmployeeData.name.toUpperCase()}`, 50, 42);\n\n  doc.text(15, 49, `Cabang`);\n  doc.text(`: ${selectedEmployeeData.branch_name ?? \"-\"}`, 50, 49);\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    let docCell = dataCell.doc;\n\n    // --> Draw Circle shape for checklist\n    if (dataCell.cell.section === \"body\" && dataCell.column.index === 2) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 22, dataCell.cell.y + 4, 2, \"FD\");\n    } else if (\n      dataCell.cell.section === \"body\" &&\n      dataCell.column.index === 3\n    ) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 12, dataCell.cell.y + 4, 2, \"FD\");\n    }\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  doc.autoTable({\n    startY: 57,\n    body: newListData,\n    theme: \"plain\",\n    headStyles: { halign: \"center\" },\n    styles: { overflow: \"linebreak\" },\n    columns: [\n      { header: \"#\", dataKey: \"no\" },\n      { header: \"Nama Peralatan\", dataKey: \"name\" },\n      { header: \"Check\", dataKey: \"test1\" },\n      { header: \"NA\", dataKey: \"test2\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  // === Signature ===\n  doc.addPage();\n  doc.setFontSize(16);\n  doc.setFont(\"Times-Roman\", \"regular\");\n  //   Line 2\n  doc.setFontSize(12);\n\n  doc.setFontSize(16);\n  doc.text(80, 90, `MENGETAHUI`);\n\n  //   Line 1\n  doc.text(45, 120, `Karyawan`);\n  doc.text(130, 120, `Coordinator /`);\n  doc.text(130, 127, `Supervisor`);\n\n  doc.text(45, 163, `(...........................)`);\n  doc.text(130, 163, `(...........................)`);\n\n  //   Export\n  doc.save(\n    `Peralatan-Karyawan-${selectedEmployeeData.name.replace(\" \", \"-\")}.pdf`\n  );\n};\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport EmployeeToolsComponent from \"../../Component/EmployeeTools/EmployeeToolsComponent\";\nimport { generateEmployeeToolsReport } from \"../../Store/EmployeeTools/EmployeeToolsReport\";\n\nconst EmployeeToolsContainer = (props) => {\n  const {\n    getListEmployeeTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    employeeTools: { listEmployeeTools, paging },\n    employees: { selectedEmployeeData, selectedEmployeeId },\n    employeeToolsFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployeeTools.length > 0) {\n    listEmployeeTools.map((item, index) => {\n      listEmployeeTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployeeTools(selectedEmployeeId, page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeToolsActions.setPagingEmployeeTools(paging));\n    getListEmployeeTools(selectedEmployeeId, nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListEmployeeTools(selectedEmployeeId, page, limit, val);\n  };\n\n  const handlePressGeneratePdf = () => {\n    const dataPrinted = {\n      selectedEmployeeData,\n      listEmployeeTools,\n    };\n    generateEmployeeToolsReport(dataPrinted, employeeToolsFormValues);\n  };\n\n  return (\n    <EmployeeToolsComponent\n      headers={headers}\n      listEmployeeTools={listEmployeeTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedEmployeeData={selectedEmployeeData}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  employeeTools: state.employeeTools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployeeTools: (employeeId, page, limit, keyword) =>\n    EmployeeToolsActions.getEmployeeToolsRequested(\n      employeeId,\n      page,\n      limit,\n      keyword\n    ),\n  handlePressAddNew: async () => {\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData({}));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(\"\"));\n    dispatch(EmployeeToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    EmployeeToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(EmployeeToolsActions.setFormStatus(\"edit\"));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(record.id));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await EmployeeToolsActions.mapDetailEmployeeToolsToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(\n      EmployeeToolsActions.setSelectedEmployeeToolsId(unitFieldsId)\n    );\n    EmployeeToolsActions.deleteEmployeeToolsRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsContainer);\n\nexport default reduxForm({\n  form: \"employeeToolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, enumUnits }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect showSearch data={enumUnits} name=\"unit\" label=\"Unit\" />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionUnitModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumUnits,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumUnits={enumUnits}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionUnitModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionUnitForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\nimport DivisionUnitModalComponent from \"../../Component/DivisionUnit/DivisionUnitModalComponent\";\n\nconst DivisionUnitModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    divisionUnit: { formStatus, selectedDivisionUnitData },\n    units: { listUnits },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectUnits = enumSelectGenerator(listUnits, \"unit\");\n\n  return (\n    <DivisionUnitModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedDivisionUnitData={selectedDivisionUnitData}\n      enumUnits={SelectUnits}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    DivisionUnitActions.saveDivisionUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionUnitForm\",\n  validate: validateDivisionUnitForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/DivisionUnit/DivisionUnitModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionUnitComponent = (props) => {\n  const {\n    headers,\n    listDivisionUnit,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedDivisionData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Divisi : ${selectedDivisionData.title}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"division\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listDivisionUnit}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionUnitComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport DivisionUnitComponent from \"../../Component/DivisionUnit/DivisionUnitComponent\";\n\nconst DivisionUnitContainer = (props) => {\n  const {\n    getListDivisionUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    divisionUnit: { listDivisionUnit, paging },\n    division: { selectedDivisionData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivisionUnit.length > 0) {\n    listDivisionUnit.map((item, index) => {\n      listDivisionUnit[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"unit_name\",\n      key: \"unit_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.unit_name.length - b.unit_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"20%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivisionUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionUnitActions.setPagingDivisionUnit(paging));\n    getListDivisionUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivisionUnit(page, limit, val);\n  };\n\n  return (\n    <DivisionUnitComponent\n      headers={headers}\n      listDivisionUnit={listDivisionUnit}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedDivisionData={selectedDivisionData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivisionUnit: (page, limit, keyword) =>\n    DivisionUnitActions.getDivisionUnitListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData({}));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(\"\"));\n    dispatch(DivisionUnitActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionUnitActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionUnitActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(record.id));\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionUnitActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (divisionUnitId) => {\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(divisionUnitId));\n    DivisionUnitActions.deleteUnitFieldRequested(divisionUnitId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitContainer);\n\nexport default reduxForm({\n  form: \"divisionUnitForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  Image,\n} from \"@react-pdf/renderer\";\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#E4E4E4\",\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n});\n\nconst DetailServiceReportComponent = () => {\n  return (\n    <PDFViewer style={{ flex: 1 }}>\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>Section #1</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n          <View style={styles.section}>\n            <Image\n              style={{\n                width: 300,\n                height: 100,\n              }}\n              src=\"https://cors-anywhere.herokuapp.com/https://drive.google.com/file/d/1hwrQUgM6CvBwxIZUu1fRASxKQr0FxfsM/view\"\n            />\n          </View>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nexport default DetailServiceReportComponent;\n","import React from \"react\";\nimport DetailServiceReportComponent from \"../Components/DetailServiceReportComponent\";\n\nconst DetailServiceReportContainer = () => {\n  return <DetailServiceReportComponent />;\n};\n\nexport default DetailServiceReportContainer;\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumCustomer,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumCustomer ?? []}\n              name=\"customer\"\n              label=\"Pilih Customer\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"serialNumber\"\n              label=\"Serial Number\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              typeComponent=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ModalUnitSerialNumberComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumCustomer,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumCustomer={enumCustomer}\n        />\n      }\n    />\n  );\n};\n\nexport default ModalUnitSerialNumberComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormUnitModel, validateUnitSerialNumberForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport ModalUnitSerialNumberComponent from \"../../Component/UnitSerialNumber/ModalUnitSerialNumberComponent\";\n\nconst ModalUnitSerialNumber = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    customers: { listCustomersDropdown },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <ModalUnitSerialNumberComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedUnitsData={selectedUnitsData}\n      enumCustomer={SelectCustomerData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  customers: state.customers,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitSerialNumberActions.saveUnitSerialNumberRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModalUnitSerialNumber);\n\nexport default reduxForm({\n  form: \"editUnitSerialNumberForm\",\n  validate: validateUnitSerialNumberForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport ModalUnitSerialNumberContainer from \"../../Container/UnitSerialNumber/ModalUnitSerialNumberContainer\";\n\nconst { Search } = Input;\n\nconst UnitSerialNumberComponent = (props) => {\n  const {\n    headers,\n    listUnitSerialNumber,\n    listCustomer,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitModelsData,\n    onChangeCustomer,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <h6 class=\"ml-1 card-title\">{`Unit Serial Number : ${selectedUnitModelsData.name}`}</h6>\n                  <p class=\"card-description ml-1\">\n                    Silahkan pilih customer untuk menampilkan data serial number\n                  </p>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-1 mb-3\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit-models\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Serial Number\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-7\">\n                    <CSelect\n                      showSearch\n                      data={listCustomer}\n                      name=\"customer\"\n                      label=\"Pilih Customer\"\n                      onChange={(customer) => {\n                        onChangeCustomer(customer);\n                      }}\n                    />\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      name=\"keyword\"\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitSerialNumber}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ModalUnitSerialNumberContainer />\n    </div>\n  );\n};\n\nexport default UnitSerialNumberComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport * as CustomerActions from \"../../../Customers/Store/CustomersActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitSerialNumberComponent from \"../../Component/UnitSerialNumber/UnitSerialNumberComponent\";\n\nconst UnitSerialNumberContainer = (props) => {\n  const {\n    getUnitSerialNumber,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitSerialNumber: {\n      listUnitSerialNumber,\n      paging,\n      selectedtUnitSerialNumber,\n    },\n    unitModels: { selectedUnitModelsData },\n    customers: { listCustomersDropdown },\n    unitSerialNumberFormValues,\n  } = props;\n\n  const { dispatch } = store;\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitSerialNumber.length > 0) {\n    listUnitSerialNumber.map((item, index) => {\n      listUnitSerialNumber[index] = {\n        ...item,\n        no: getIndex(page, limit)[index],\n      };\n    });\n  }\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Serial Number\",\n      dataIndex: \"serial_number\",\n      key: \"serial_number\",\n      width: \"30%\",\n      sorter: (a, b) => a.serial_number.length - b.serial_number.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    // getUnitSerialNumber(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitSerialNumberActions.setPagingUnitModel(paging));\n    getUnitSerialNumber(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\n  };\n\n  const handleOnchangeCustomer = (customer) => {\n    if (!customer) {\n      dispatch(UnitSerialNumberActions.setUnitSerialNumberData([]));\n      return;\n    }\n\n    const splitCustomerId = customer.split(\"|\");\n    UnitSerialNumberActions.getUnitSerialNumber(\n      page,\n      limit,\n      \"\",\n      splitCustomerId[0]\n    );\n  };\n\n  return (\n    <UnitSerialNumberComponent\n      headers={headers}\n      listUnitSerialNumber={listUnitSerialNumber}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      listCustomer={SelectCustomerData}\n      selectedUnitModelsData={selectedUnitModelsData}\n      selectedtUnitSerialNumber={selectedtUnitSerialNumber}\n      onChangeCustomer={handleOnchangeCustomer}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitSerialNumber: state.unitSerialNumber,\n  unitModels: state.unitModels,\n  customers: state.customers,\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getUnitSerialNumber: (page, limit, keyword) =>\n    UnitSerialNumberActions.getUnitSerialNumber(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberData({}));\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberId(\"\"));\n    dispatch(UnitSerialNumberActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitSerialNumberActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitSerialNumberActions.setFormStatus(\"edit\"));\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(record.id)\n    );\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberData(record)\n    );\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitSerialNumberActions.mapDetailUnitSerialNumberToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(unitModelId)\n    );\n    UnitSerialNumberActions.deleteUnitModelRequested(unitModelId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitSerialNumberContainer);\n\nexport default reduxForm({\n  form: \"unitSerialNumberForm\",\n})(EnhanceContainer);\n","import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { navigate } from \"../../../app/Helpers\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst UnitJobFormsComponent = (props) => {\r\n  const {\r\n    headers,\r\n    listUnitJobForms,\r\n    renderActionTable,\r\n    onSearch,\r\n    selectedUnitsData,\r\n  } = props;\r\n\r\n  return (\r\n    <div class=\"page-content\">\r\n      <div class=\"mt-5\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 grid-margin stretch-card\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <div class=\"mb-2\">\r\n                  <h6 class=\"ml-1 card-title\">{`Unit : ${selectedUnitsData.name}`}</h6>\r\n                  {/* <p class=\"card-description ml-1\">\r\n                    Silahkan pilih customer untuk menampilkan data \r\n                  </p> */}\r\n                </div>\r\n                <div class=\"row d-flex justify-content-between mb-2\">\r\n                  <div class=\"col-md-7\">\r\n                    <div class=\"row ml-1 mb-3\">\r\n                      <CButtonAntd\r\n                        onClick={() => navigate(\"unit\")}\r\n                        type=\"primary\"\r\n                        icon={<ArrowLeftOutlined />}\r\n                        size=\"middle\"\r\n                        danger\r\n                      >\r\n                        Kembali\r\n                      </CButtonAntd>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4 mt-4\">\r\n                    <Search\r\n                      name=\"keyword\"\r\n                      placeholder=\"Cari\"\r\n                      onSearch={onSearch}\r\n                      enterButton\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <CTableAntd data={listUnitJobForms} headers={headers} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitJobFormsComponent;\r\n","import { Space } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFormValues, reduxForm } from \"redux-form\";\r\nimport * as UnitJobFormsActions from \"../../Units/Store/UnitJobFormActions\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport UnitJobFormsComponent from \"../Component/UnitJobFormsComponent\";\r\n\r\nconst UnitJobFormsContainer = (props) => {\r\n  const {\r\n    units: { selectedUnitsData },\r\n    unitJobForms: { listUnitJobForms },\r\n    handlePressEdit,\r\n    handlePressDelete,\r\n  } = props;\r\n\r\n  const { dispatch } = store;\r\n  //   const { page, limit, totalPage } = paging;\r\n\r\n  if (listUnitJobForms.length > 0) {\r\n    listUnitJobForms.map((item, index) => {\r\n      listUnitJobForms[index] = {\r\n        ...item,\r\n        no: index + 1,\r\n      };\r\n    });\r\n  }\r\n\r\n  const headers = [\r\n    {\r\n      title: \"No\",\r\n      dataIndex: \"no\",\r\n      key: \"no\",\r\n      width: \"7%\",\r\n      sorter: (a, b) => a.no - b.no,\r\n    },\r\n    {\r\n      title: \"Job Form\",\r\n      dataIndex: \"job_form_name\",\r\n      key: \"job_form_name\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\r\n    },\r\n    {\r\n      title: \"Deskripsi\",\r\n      dataIndex: \"descriptions\",\r\n      key: \"descriptions\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    UnitJobFormsActions.getUnitJobFormsListDataRequested(\"\");\r\n    // getUnitSerialNumber(page, limit);\r\n  }, []);\r\n\r\n  const onSearch = (keyword) => {\r\n    // UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\r\n  };\r\n\r\n  return (\r\n    <UnitJobFormsComponent\r\n      headers={headers}\r\n      selectedUnitsData={selectedUnitsData}\r\n      listUnitJobForms={listUnitJobForms}\r\n      onSearch={onSearch}\r\n      // {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  units: state.units,\r\n  unitJobForms: state.unitJobForms,\r\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UnitJobFormsContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"unitJobForms\",\r\n})(EnhanceContainer);\r\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst WorkingHoursComponent = (props) => {\n  const {\n    headers,\n    listMonitoringEmployee,\n    onChangePagination,\n    paging,\n    onSearch,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Jam Kerja Karyawan</h6>\n                </div>\n\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"No. Service\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Laporan\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listMonitoringEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkingHoursComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as WorkingHoursActions from \"../Store/WorkingHoursActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeMonitoringEmployee,\n  getStatusWorkingHours,\n} from \"../../../app/Helpers\";\nimport { Tag, Typography } from \"antd\";\nimport WorkingHoursComponent from \"../Component/WorkingHoursComponent\";\nimport { exportWorkingHoursReportPdf } from \"../Store/WorkingHoursReport\";\nimport moment from \"moment\";\n\nconst WorkingHoursContainer = (props) => {\n  const {\n    getListWorkingHours,\n    handlePressAddNew,\n    workingHours: { listWorkingHours, paging },\n    branch: { listBranchDropdown },\n    workingHoursFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const printedData = {\n    listWorkingHours,\n    from: moment(),\n    until: moment(),\n  };\n\n  if (listWorkingHours.length > 0) {\n    listWorkingHours.map((item, index) => {\n      listWorkingHours[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"No. Service\",\n      dataIndex: \"no_service\",\n      key: \"no_service\",\n      width: \"20%\",\n      sorter: (a, b) => a.no_service.length - b.no_service.length,\n      render: (no_service) => {\n        return (\n          <Tag style={{ width: 100, textAlign: \"center\" }} color={\"#f0f0f0\"}>\n            <Typography style={{ fontWeight: \"bold\" }}>\n              {no_service ? `${no_service}` : \"-\"}\n            </Typography>\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created\",\n      key: \"created\",\n      width: \"30%\",\n      sorter: (a, b) => a.created.length - b.created.length,\n    },\n    {\n      title: \"Jam Kerja\",\n      dataIndex: \"total_hours\",\n      key: \"total_hours\",\n      render: (total_hours) => {\n        return (\n          <Tag style={{ width: 80, textAlign: \"center\" }} color={\"#1890ff\"}>\n            {total_hours ? `${total_hours} Jam` : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.total_hours - b.total_hours,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n      render: (status) => {\n        let color = getStatusWorkingHours(status).color;\n        return (\n          <Tag style={{ width: 112, textAlign: \"center\" }} color={color}>\n            {status ? getStatusWorkingHours(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Tanggal Selesai\",\n      dataIndex: \"done\",\n      key: \"done\",\n      width: \"30%\",\n      sorter: (a, b) => a.done.length - b.done.length,\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranchDropdown.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListWorkingHours(page, limit);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      WorkingHoursActions.setPagingMonitoringEmployee(paging)\n    );\n    getListWorkingHours(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    WorkingHoursActions.handleSearch(workingHoursFormValues);\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportWorkingHoursReportPdf(printedData, workingHoursFormValues);\n  };\n\n  return (\n    <WorkingHoursComponent\n      headers={headers}\n      listMonitoringEmployee={listWorkingHours}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  workingHours: state.workingHours,\n  branch: state.branch,\n  workingHoursFormValues: getFormValues(\"workingHoursForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListWorkingHours: (page, limit, from, until, keyword) =>\n    WorkingHoursActions.getWorkingHoursListDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WorkingHoursContainer);\n\nexport default reduxForm({\n  form: \"workingHoursForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport moment from \"moment\";\r\nimport { getStatusWorkingHours } from \"../../../app/Helpers\";\r\n\r\nexport const exportWorkingHoursReportPdf = (data, values) => {\r\n  const { listWorkingHours, from, until } = data;\r\n  const startDate = moment(from).format(\"YYYY-MM-DD\");\r\n  const dueDate = moment(until).format(\"YYYY-MM-DD\");\r\n  const workingHoursList = [];\r\n\r\n  listWorkingHours.map((item, index) => {\r\n    workingHoursList.push({\r\n      no: index + 1,\r\n      employeeNik: item.employee_nik,\r\n      employeeName: item.employee_name,\r\n      noService: item.no_service,\r\n      customerName: item.customer_name,\r\n      type: item.job_type,\r\n      totalHours: item.total_hours,\r\n      status: item.status ? getStatusWorkingHours(item.status).value : \"-\",\r\n      createdDate: item.created,\r\n      doneDate: item.done,\r\n    });\r\n  });\r\n\r\n  const doc = new jsPDF();\r\n  // doc.text({from_left}, {from_top})\r\n  doc.setFontSize(20);\r\n  doc.setFont(\"courier\");\r\n  doc.text(\"Jam Kerja Karyawan\", 100, 20, \"center\");\r\n  doc.setFontSize(16);\r\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\r\n\r\n  doc.setFontSize(12);\r\n\r\n  //   Line 1\r\n  doc.text(15, 42, `Dari Tanggal`);\r\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\r\n  doc.text(15, 49, `Sampai Tanggal`);\r\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\r\n\r\n  // Check if filtered by branch\r\n  if (values) {\r\n    if (values.branch) {\r\n      const splitBranch = values.branch.split(\"|\");\r\n      doc.text(15, 56, `Cabang`);\r\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\r\n    }\r\n  }\r\n\r\n  // drawCell is function for styling font, color and add content to every cell\r\n  const drawCell = (dataCell) => {\r\n    // --> This for custom styling font too\r\n    // else if (dataCell.column.dataKey === \"no\") {\r\n    //   docCell.setFont(\"Verdana\", \"bold\");\r\n    //   docCell.setFontSize(12);\r\n    // }\r\n  };\r\n\r\n  // --> didParseCell is function for styling border, line, etc of every cell\r\n  const didParseCell = (dataCell) => {\r\n    let s = dataCell.cell.styles;\r\n    s.lineColor = [0, 0, 0];\r\n    s.lineWidth = 0.1;\r\n    s.font = \"courier\";\r\n\r\n    // --> This for spesific custom cell with spesific index\r\n    // if (dataCell.row.index === 1) {\r\n    //   s.lineColor = [0, 0, 0];\r\n    //   s.borders = \"t\";\r\n    // }\r\n  };\r\n\r\n  const headTable = [\r\n    [\r\n      \"No\",\r\n      \"NIK\",\r\n      \"Nama Karyawan\",\r\n      \"No. Service\",\r\n      \"Nama Customer\",\r\n      \"Dibuat\",\r\n      \"Jam Kerja\",\r\n      \"Status\",\r\n      \"Tanggal Selesai\",\r\n    ],\r\n  ];\r\n\r\n  doc.autoTable({\r\n    startY: values ? 65 : 60,\r\n    body: workingHoursList,\r\n    theme: \"plain\",\r\n    head: headTable,\r\n    headStyles: { halign: \"center\", valign: \"middle\" },\r\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\r\n    columns: [\r\n      { header: \"No\", dataKey: \"no\" },\r\n      { header: \"NIK\", dataKey: \"employeeNik\" },\r\n      { header: \"Nama Karyawan\", dataKey: \"employeeName\" },\r\n      { header: \"No. Service\", dataKey: \"noService\" },\r\n      { header: \"Nama Customer\", dataKey: \"customerName\" },\r\n      { header: \"Dibuat\", dataKey: \"createdDate\" },\r\n      { header: \"Jam Kerja\", dataKey: \"totalHours\" },\r\n      { header: \"Status\", dataKey: \"status\" },\r\n      { header: \"Tanggal Selesai\", dataKey: \"doneDate\" },\r\n    ],\r\n    willDrawCell: drawCell,\r\n    didParseCell: didParseCell,\r\n    columnStyles: {\r\n      0: { columnWidth: 28 },\r\n      1: { columnWidth: 20 },\r\n      // 2: { halign: \"center\" },\r\n      // 3: { halign: \"center\" },\r\n      // 4: { halign: \"center\" },\r\n      // 5: { halign: \"center\" },\r\n      // 6: { halign: \"center\" },\r\n    },\r\n    tableLineColor: [0, 0, 0],\r\n    tableLineWidth: 0.3,\r\n  });\r\n\r\n  //   Export\r\n  doc.save(\"working-hours.pdf\");\r\n};\r\n","import \"react-toastify/dist/ReactToastify.css\";\n\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer } from \"react-toastify\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport TemplateContainer from \"../modules/Template/Container/TemplateContainer\";\nimport withTemplate from \"./withTemplate\";\n\n// Pages\nimport DashboardContainer from \"../modules/Dashboard/Container/DashboardContainer\";\nimport LoginContainer from \"../modules/Auth/Container/LoginContainer\";\nimport InternalServiceContainer from \"../modules/InternalService/Container/InternalServiceContainer\";\nimport ExternalServiceContainer from \"../modules/ExternalService/Container/ExternalServiceContainer\";\nimport MonitoringEmployeeContainer from \"../modules/MonitoringEmployee/Container/MonitoringEmployeeContainer\";\nimport ReportServiceRepairContainer from \"../modules/ReportServiceRepair/Container/ReportServiceRepairContainer\";\nimport ReportEmployeeContainer from \"../modules/ReportEmployee/Container/ReportEmployeeContainer\";\nimport ListServicesContainer from \"../modules/ListServices/Container/ListServicesContainer\";\nimport AdminContainer from \"../modules/Admin/Container/AdminContainer\";\nimport NotFoundPage from \"../components/NotFound/NotFound\";\nimport AuthMiddleware from \"./AuthMiddleware\";\nimport DetailServiceTransactionContainer from \"../modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer\";\nimport RolesContainer from \"../modules/Roles/Container/RolesContainer\";\nimport EmployeesListContainer from \"../modules/Employees/Container/EmployeesListContainer\";\nimport EmployeeEditContainer from \"../modules/Employees/Container/EmployeeEditContainer\";\nimport BranchContainer from \"../modules/Branch/Container/BranchContainer\";\nimport JobFormsContainer from \"../modules/JobForms/Container/JobFormsContainer\";\nimport FormWizardIdentificationContainer from \"../modules/Identification/Container/Wizard/FormWizardIdentificationContainer\";\nimport ListIdentificationContainer from \"../modules/Identification/Container/ListIdentificationContainer\";\nimport MachineConfigurationContainer from \"../modules/MachineConfiguration/Container/MachineConfigurationContainer\";\nimport UnitsContainer from \"../modules/Units/Container/UnitsContainer\";\nimport CustomerContainer from \"../modules/Customers/Container/CustomerContainer\";\nimport ToolsContainer from \"../modules/Tools/Container/ToolsContainer\";\nimport FormCategoryContainer from \"../modules/FormCategory/Container/FormCategoryContainer\";\nimport UnitModelsContainer from \"../modules/Units/Container/UnitModelsContainer\";\nimport UnitFieldsContainer from \"../modules/Units/Container/UnitFields/UnitFieldsContainer\";\nimport ReportIdentificationContainer from \"../modules/ReportIdentification/Container/ReportIdentificationContainer\";\nimport DivisionContainer from \"../modules/Division/Container/DivisionContainer\";\nimport EmployeeToolsContainer from \"../modules/Employees/Container/EmployeeTools/EmployeeToolsContainer\";\nimport DivisionUnitContainer from \"../modules/Division/Container/DivisionUnit/DivisionUnitContainer\";\nimport DetailServiceReportContainer from \"../modules/ReportPdf/Containers/DetailServiceReportContainer\";\nimport UnitSerialNumberContainer from \"../modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer\";\nimport UnitJobFormsContainer from \"../modules/Units/Container/UnitJobFormsContainer\";\nimport WorkingHoursContainer from \"../modules/WorkingHours/Container/WorkingHoursContainer\";\n\nexport default function Navigation() {\n  const authenticatedPage = (\n    component,\n    footerImg,\n    menuPath = \"\",\n    isSecureRoute = false,\n    footer\n  ) => {\n    return AuthMiddleware(\n      withTemplate(TemplateContainer, component, footerImg, footer),\n      menuPath,\n      isSecureRoute\n    );\n  };\n\n  const templating = (component, isLandingPage) => {\n    return withTemplate(TemplateContainer, component, isLandingPage);\n  };\n\n  const Login = templating(LoginContainer, false);\n  const NotFound = templating(NotFoundPage, false);\n  const Admin = authenticatedPage(AdminContainer, true, \"/admin\", true);\n  const Roles = authenticatedPage(RolesContainer, true, \"/role\", true);\n  const JobForms = authenticatedPage(\n    JobFormsContainer,\n    true,\n    \"/jobforms\",\n    true\n  );\n  const Branches = authenticatedPage(BranchContainer, true, \"/cabang\", true);\n  const EmployeeList = authenticatedPage(\n    EmployeesListContainer,\n    true,\n    \"/employees\",\n    true\n  );\n  const EmployeeTools = authenticatedPage(\n    EmployeeToolsContainer,\n    true,\n    \"/employee-tool\"\n  );\n  const Division = authenticatedPage(\n    DivisionContainer,\n    true,\n    \"/division\",\n    true\n  );\n  const DivisionUnit = authenticatedPage(\n    DivisionUnitContainer,\n    true,\n    \"/division-unit\"\n  );\n  const EditEmployee = authenticatedPage(\n    EmployeeEditContainer,\n    true,\n    \"/edit-employee\"\n  );\n  const Dashboard = authenticatedPage(\n    DashboardContainer,\n    true,\n    \"/dashboard\",\n    false\n  );\n  const Units = authenticatedPage(UnitsContainer, true, \"/unit\", true);\n  const UnitModels = authenticatedPage(\n    UnitModelsContainer,\n    true,\n    \"/unit-models\"\n  );\n  const UnitFields = authenticatedPage(\n    UnitFieldsContainer,\n    true,\n    \"/unit-fields\"\n  );\n  const UnitJobForms = authenticatedPage(\n    UnitJobFormsContainer,\n    true,\n    \"/unit-job-forms\"\n  );\n  const UnitSerialNumber = authenticatedPage(\n    UnitSerialNumberContainer,\n    true,\n    \"/unit-serial-number\"\n  );\n  const Tools = authenticatedPage(ToolsContainer, true, \"/tools\");\n  const Customers = authenticatedPage(CustomerContainer, true, \"/customer\");\n  const FormCategory = authenticatedPage(\n    FormCategoryContainer,\n    true,\n    \"/category\",\n    true\n  );\n  const MachineConfiguration = authenticatedPage(\n    MachineConfigurationContainer,\n    true,\n    \"/machine\",\n    true\n  );\n  const InternalService = authenticatedPage(\n    InternalServiceContainer,\n    true,\n    \"/internal-service\",\n    true\n  );\n  const ExternalService = authenticatedPage(\n    ExternalServiceContainer,\n    true,\n    \"/external-service\",\n    true\n  );\n  const MonitoringEmployee = authenticatedPage(\n    MonitoringEmployeeContainer,\n    true,\n    \"/monitoring-employee\",\n    true\n  );\n  const ReportServiceRepair = authenticatedPage(\n    ReportServiceRepairContainer,\n    true,\n    \"/report_trans\",\n    true\n  );\n  const ReportEmployee = authenticatedPage(\n    ReportEmployeeContainer,\n    true,\n    \"/report_employee\",\n    true\n  );\n  const WorkingHours = authenticatedPage(\n    WorkingHoursContainer,\n    true,\n    \"/working-hours\",\n    true\n  );\n  const ListServices = authenticatedPage(\n    ListServicesContainer,\n    true,\n    \"/list_service\",\n    true\n  );\n  const ReportIdentification = authenticatedPage(\n    ReportIdentificationContainer,\n    true,\n    \"/report_identification\",\n    true\n  );\n  const DetailService = authenticatedPage(\n    DetailServiceTransactionContainer,\n    true,\n    \"/detail-services\"\n  );\n  const FormWizardIdentification = authenticatedPage(\n    FormWizardIdentificationContainer,\n    true,\n    \"/form-identification\"\n  );\n  const ListIdentification = authenticatedPage(\n    ListIdentificationContainer,\n    true,\n    \"/identification\",\n    true\n  );\n\n  return (\n    <>\n      <Helmet titleTemplate=\"PT. Rutan - \" defaultTitle=\"PT. Rutan\"></Helmet>\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates={true}\n        position=\"top-right\"\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"\n        progressBar={true}\n        closeOnToastrClick={true}\n      />\n      <ToastContainer autoClose={2000} />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n        <Route exact path=\"/auth\" component={Login} />\n        <Route exact path=\"/admin\" component={Admin} />\n        <Route exact path=\"/role\" component={Roles} />\n        <Route exact path=\"/cabang\" component={Branches} />\n        <Route exact path=\"/machine\" component={MachineConfiguration} />\n        <Route exact path=\"/jobforms\" component={JobForms} />\n        <Route exact path=\"/unit\" component={Units} />\n        <Route exact path=\"/unit-models\" component={UnitModels} />\n        <Route exact path=\"/unit-fields\" component={UnitFields} />\n        <Route exact path=\"/unit-job-forms\" component={UnitJobForms} />\n        <Route exact path=\"/unit-serial-number\" component={UnitSerialNumber} />\n        <Route exact path=\"/tools\" component={Tools} />\n        <Route exact path=\"/customer\" component={Customers} />\n        <Route exact path=\"/category\" component={FormCategory} />\n        <Route exact path=\"/employees\" component={EmployeeList} />\n        <Route exact path=\"/division\" component={Division} />\n        <Route exact path=\"/division-unit\" component={DivisionUnit} />\n        <Route exact path=\"/edit-employee\" component={EditEmployee} />\n        <Route exact path=\"/internal-service\" component={InternalService} />\n        <Route exact path=\"/external-service\" component={ExternalService} />\n        <Route exact path=\"/employee-tools\" component={EmployeeTools} />\n        <Route\n          exact\n          path=\"/report-transaction\"\n          component={DetailServiceReportContainer}\n        />\n        <Route\n          exact\n          path=\"/monitoring-employee\"\n          component={MonitoringEmployee}\n        />\n        <Route exact path=\"/report_trans\" component={ReportServiceRepair} />\n        <Route exact path=\"/list_service\" component={ListServices} />\n        <Route exact path=\"/detail-services\" component={DetailService} />\n        <Route exact path=\"/report_employee\" component={ReportEmployee} />\n        <Route exact path=\"/working-hours\" component={WorkingHours} />\n        <Route\n          exact\n          path=\"/report_identification\"\n          component={ReportIdentification}\n        />\n        <Route\n          exact\n          path=\"/form-identification\"\n          component={FormWizardIdentification}\n        />\n        <Route exact path=\"/identification\" component={ListIdentification} />\n        <Route path={\"*\"} component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n","import \"react-redux-toastr/lib/css/react-redux-toastr.min.css\";\nimport \"antd/dist/antd.css\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport history from \"./app/History\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./app/ConfigureStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Navigation from \"./app/Navigation\";\n\nfunction App({ context }) {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ConnectedRouter history={history}>\n          <Navigation />\n        </ConnectedRouter>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}