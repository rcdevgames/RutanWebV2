{"version":3,"sources":["app/History.js","app/Saga/AppSaga.js","app/Saga/SagaMiddleware.js","app/axios/ConfigAxios.js","app/axios/Invoke.js","modules/App/Store/ComponentAction.js","modules/Roles/Store/RolesActions.js","modules/Admin/Store/AdminActions.js","modules/MasterData/Store/MasterDataActions.js","modules/Branch/Store/BranchActions.js","modules/Units/Store/UnitsActions.js","modules/MachineConfiguration/Store/MachineConfigurationActions.js","app/InitializeApp.js","modules/Auth/Store/AuthAction.js","modules/Auth/Store/AuthReducer.js","app/Helpers.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionAction.js","modules/ListServices/Store/ListServicesActions.js","modules/ListServices/Store/ListServicesReducer.js","modules/App/Store/ComponentReducer.js","modules/Customers/Store/CustomersActions.js","modules/Customers/Store/CustomersReducer.js","modules/Admin/Store/AdminReducer.js","modules/Roles/Store/RolesReducer.js","modules/Employees/Store/EmployeesActions.js","modules/Employees/Store/EmployeesReducer.js","modules/Employees/Store/EmployeeTools/EmployeeToolsActions.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReducer.js","modules/MasterData/Store/MasterDataReducer.js","modules/Units/Store/UnitsReducer.js","modules/JobForms/Store/JobFormsActions.js","modules/JobForms/Store/JobFormsReducer.js","modules/Branch/Store/BranchReducer.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer.js","modules/Units/Store/UnitModelActions.js","modules/Units/Store/UnitModelReducer.js","modules/ExternalService/Store/ExternalServiceActions.js","modules/ExternalService/Store/ExternalServiceReducer.js","modules/Identification/Store/IdentificationActions.js","modules/Identification/Store/IdentificationReducer.js","modules/MachineConfiguration/Store/MachineConfigurationReducer.js","modules/Tools/Store/ToolsActions.js","modules/Tools/Store/ToolsReducer.js","modules/FormCategory/Store/FormCategoryActions.js","modules/FormCategory/Store/FormCategoryReducer.js","modules/Units/Store/UnitFieldsActions.js","modules/Units/Store/UnitFieldsReducer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeActions.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReducer.js","modules/ReportServiceRepair/Store/ReportServiceRepairActions.js","modules/ReportServiceRepair/Store/ReportServiceRepairReducer.js","modules/ReportEmployee/Store/ReportEmployeeActions.js","modules/ReportEmployee/Store/ReportEmployeeReducer.js","modules/Division/Store/DivisionActions.js","modules/Division/Store/DivisionReducer.js","modules/Division/Store/DivisionUnitActions.js","modules/Division/Store/DivisionUnitReducer.js","modules/Dashboard/Store/DashboardActions.js","modules/Dashboard/Store/DashboardReducer.js","modules/Units/Store/UnitSerialNumberActions.js","modules/Units/Store/UnitSerialNumberReducer.js","modules/Units/Store/UnitJobFormActions.js","modules/Units/Store/UnitJobFormsReducer.js","app/RootReducers.js","app/ConfigureStore.js","app/FormHelpers.js","components/CGlobalOverlay/CGlobalOverlay.tsx","components/Sidebar/Sidebar.js","components/Footer/Footer.js","components/Navbar/Navbar.js","modules/Template/Component/TemplateComponent.js","modules/Auth/Selector/AuthSelector.js","modules/App/Selector/AppSelector.js","modules/Template/Container/TemplateContainer.js","app/withTemplate.js","components/CButton/CButtonAntd.tsx","modules/Dashboard/Component/DashboardComponent.js","modules/Dashboard/Container/DashboardContainer.js","components/CInput/CInput.tsx","modules/Auth/Component/LoginComponent.js","app/validateForm.js","modules/Auth/Container/LoginContainer.js","components/CSelect/CSelect.js","components/CDatePicker/CDatePicker.js","components/CButton/CButton.tsx","modules/InternalService/Component/InternalServiceComponent.js","modules/InternalService/Store/InternalServiceActions.js","modules/InternalService/Container/InternalServiceContainer.js","modules/ExternalService/Component/ExternalServiceComponent.js","modules/ExternalService/Container/ExternalServiceContainer.js","modules/MonitoringEmployee/Component/MonitoringEmployeeComponent.js","modules/MonitoringEmployee/Container/MonitoringEmployeeContainer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReport.js","modules/ReportServiceRepair/Component/ReportServiceRepairComponent.js","modules/ReportServiceRepair/Container/ReportServiceRepairContainer.js","modules/ReportEmployee/Component/ReportEmployeeComponent.js","modules/ReportEmployee/Container/ReportEmployeeContainer.js","modules/ListServices/Component/ListServicesComponent.js","modules/ListServices/Container/ListServicesContainer.js","components/CTable/CTableAntd.js","components/CModal/CModal.tsx","modules/Admin/Component/AdminModalComponent.js","modules/Admin/Container/AdminModalContainer.js","modules/Admin/Component/AdminComponent.js","modules/Admin/Container/AdminContainer.js","components/NotFound/NotFound.js","app/AuthMiddleware.js","components/CBadgeText/CBadgeText.tsx","modules/DetailServiceTransaction/Component/AddEmployeeModalComponent.js","modules/DetailServiceTransaction/Container/AddEmployeeModalContainer.js","property/colors.js","modules/DetailServiceTransaction/Component/RejectedModalComponent.js","modules/DetailServiceTransaction/Container/RejectedModalContainer.js","modules/DetailServiceTransaction/Component/EditModalTransactionComponent.js","modules/DetailServiceTransaction/Container/EditModalTransactionContainer.js","modules/DetailServiceTransaction/Component/EditModalDailiesComponent.js","modules/DetailServiceTransaction/Container/EditModalDailiesContainer.js","modules/DetailServiceTransaction/Component/DetailServiceTransactionComponent.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelEmployeeComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelEmployeeContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelSummaryComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelSummaryContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelImagesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelImagesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelDailiesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelDailiesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelHistoriesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelHistoriesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelRejectionsComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelRejectionsContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelChecklistComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelChecklistContainer.js","modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer.js","modules/Roles/Component/RolesEditModalComponent.js","modules/Roles/Container/RolesEditModalContainer.js","modules/Roles/Component/RolesComponent.js","modules/Roles/Container/RolesContainer.js","modules/Employees/Component/EmployeesListComponent.js","modules/Employees/Container/EmployeesListContainer.js","modules/Employees/Component/EmployeeEditComponent.js","modules/Employees/Container/EmployeeEditContainer.js","modules/Branch/Component/BranchModalComponent.js","modules/Branch/Container/BranchModalContainer.js","modules/Branch/Component/BranchComponent.js","modules/Branch/Container/BranchContainer.js","modules/JobForms/Component/JobFormsModalComponent.js","modules/JobForms/Container/JobFormsModalContainer.js","modules/JobForms/Component/JobFormsComponent.js","modules/JobForms/Container/JobFormsContainer.js","modules/Identification/Component/Wizard/ContentStepOneComponent.js","modules/Identification/Component/Wizard/ContentUnitComponent.js","modules/Identification/Component/Wizard/ContentSparePartComponent.js","modules/Identification/Component/Wizard/FormWizardIdentificationComponent.js","modules/Identification/Component/Wizard/ContentMachineConfigurationComponent.js","modules/Identification/Component/Wizard/ContentStepOneRegularComponent.js","modules/Identification/Container/Wizard/FormWizardIdentificationContainer.js","modules/Identification/Component/IdentificationModalComponent.js","modules/Identification/Container/IdentificationModalContainer.js","modules/Identification/Component/ListIdentificationComponent.js","modules/Identification/Container/ListIdentificationContainer.js","modules/MachineConfiguration/Component/MachineConfigurationModalComponent.js","modules/MachineConfiguration/Container/MachineConfigurationModalContainer.js","modules/MachineConfiguration/Component/MachineConfigurationComponent.js","modules/MachineConfiguration/Container/MachineConfigurationContainer.js","modules/Units/Component/UnitsModalComponent.js","modules/Units/Container/UnitsModalContainer.js","modules/Units/Component/UnitsComponent.js","modules/Units/Container/UnitsContainer.js","modules/Customers/Component/CustomerModalComponent.js","modules/Customers/Container/CustomerModalContainer.js","modules/Customers/Component/CustomerComponent.js","modules/Customers/Container/CustomerContainer.js","modules/Tools/Component/ToolsModalComponent.js","modules/Tools/Container/ToolsModalContainer.js","modules/Tools/Component/ToolsComponent.js","modules/Tools/Container/ToolsContainer.js","modules/FormCategory/Component/FormCategoryModalComponent.js","modules/FormCategory/Container/FormCategoryModalContainer.js","modules/FormCategory/Component/FormCategoryComponent.js","modules/FormCategory/Container/FormCategoryContainer.js","modules/Units/Component/UnitsModelsModalComponent.js","modules/Units/Container/UnitModelsModalContainer.js","modules/Units/Component/UnitModelsComponent.js","modules/Units/Container/UnitModelsContainer.js","modules/Units/Component/UnitFields/UnitFieldsModalComponent.js","modules/Units/Container/UnitFields/UnitFieldsModalContainer.js","modules/Units/Component/UnitFields/UnitFieldsComponent.js","modules/Units/Container/UnitFields/UnitFieldsContainer.js","modules/ReportIdentification/Store/ReportIdentificationActions.js","modules/ReportIdentification/Component/ReportIdentificationComponent.js","modules/ReportIdentification/Container/ReportIdentificationContainer.js","modules/Division/Component/DivisionModalComponent.js","modules/Division/Container/DivisionModalContainer.js","modules/Division/Component/DivisionComponent.js","modules/Division/Container/DivisionContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsModalComponent.js","modules/Employees/Container/EmployeeTools/EmployeeToolsModalContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsComponent.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReport.js","modules/Employees/Container/EmployeeTools/EmployeeToolsContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitModalComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitModalContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitContainer.js","modules/ReportPdf/Components/DetailServiceReportComponent.js","modules/ReportPdf/Containers/DetailServiceReportContainer.js","modules/Units/Component/UnitSerialNumber/ModalUnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/ModalUnitSerialNumberContainer.js","modules/Units/Component/UnitSerialNumber/UnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer.js","modules/Units/Component/UnitJobFormsComponent.js","modules/Units/Container/UnitJobFormsContainer.js","app/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["history","createBrowserHistory","basename","handleErrorProcess","handleErrorAction","action","errorData","response","undefined","toastrConfirmOptions","onOk","window","location","reload","okText","disableCancel","toastr","confirm","error","responseStatus","status","console","log","data","ErrorCode","toastMessage","class","id","MessageKey","dataErr","Data","Failures","ErrorKey","Message","toast","takeEvery","all","fork","ConfigAxios","axios","create","baseURL","headers","Accept","timeout","defaults","delete","interceptors","request","use","requestFulfilled","method","Promise","resolve","requestRejected","_","isEmpty","reject","responseFulfilled","responseRejected","warning","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Invoke","headersConfigDelete","submitLogin","post","submitLoginEmployee","getListServices","page","limit","keyword","type","get","deleteJobServiceById","jobId","getOneServices","getListAdmin","getAdminById","adminId","addAdmin","updateAdmin","put","deleteAdminById","getListAdminRoles","getAdminRolesById","customerId","addAdminRoles","updateAdminRoles","deleteAdminRolesById","getEmployeeRoles","employeeId","getEmployeeTools","addEmployeeRole","deleteEmployeeRole","getCustomerList","branchId","getCustomerById","addCustomer","updateCustomer","deleteCustomerById","getEmployeeList","roleId","divisionId","getEmployeeById","addEmployee","updateEmployee","deleteEmployeeById","getListEmployeeTools","getEmployeeToolsById","addEmployeeTools","updateEmployeeTools","deleteEmployeeToolsById","employeeToolsId","getListRole","getRoleById","addRole","updateRole","deleteRoleById","getProvinceList","getCityList","provinceId","getDashboardProgressData","addInternalService","updateJobService","setFinishedService","setApprovedService","setRejectedService","payload","getServicesEmployee","addNewEmployeeService","setStatusEmployeeService","getJobServiceSummary","unitId","getJobServiceMedia","getJobServiceDailies","updateJobServiceDailies","getChecklistData","unitModelId","getRejectedData","getJobServiceHistories","getUnitList","addUnit","updateUnit","deleteUnitById","getListUnitModel","addUnitSerialNumber","updateUnitSerialNumber","unitSerialNumberId","deleteUnitSerialNumber","getUnitSerialNumber","addUnitModel","updateUnitModel","deleteUnitModelById","getListUnitFields","getListUnitJobForms","jobFormId","addUnitFields","updateUnitFields","deleteUnitFieldsById","unitfieldsId","getListJobForm","keyowrd","addJobForms","updateJobForms","deleteJobForms","jobFormsId","getListBranch","deleteBranchById","addBranch","updateBranch","getListMenu","addMenuRole","getMenuByRoleId","deleteMenuByMenuRoleId","menuRoleId","getListEngine","addEngine","updateEngine","deleteEngine","machineId","getListTools","addTool","updateTool","deleteTool","toolId","getFormCategory","addFormCategory","updateFormCategory","deleteFormCategory","categoryFormId","getIdentificationList","addIdentification","updateIdentificationMilling","updateIdentificationRegular","deleteIdentificationById","identificationId","getDivisionList","addDivision","updateDivision","deleteDivision","getDivisionUnitList","addDivisionUnit","getReportMonitoringEmployee","from","until","getReportServiceRepair","getReportEmployee","getTransactionPdfUrl","downloadPdfFromUrl","url","responseType","PROCESS_GLOBAL_LOADING","PROCESS_FORM_GLOBAL_LOADING","SHOW_GLOBAL_MODAL","RESET_ALL_LOADING","setGlobalLoading","setGlobalModal","setGlobalFormLoading","resetAllGlobalLoadingProcess","dispatch","store","SET_LIST_ROLES","SET_SELECTED_ROLE_ID","SET_SELECTED_ROLE_DETAIL","SET_FORM_STATUS","RESET_STATE","SET_SELECTED_ROLE_MENU","setSelectedRoleId","setFormStatus","setSelectedRoleDetail","setSelectedRoleMenu","showToast","success","getListRolesRequested","a","callback","mapDetailRoleToForm","getState","roles","selectedRoleDetail","change","description","getMenuByRolesId","subItem","map","item","index","push","menu_id","resetForm","doAddRoleProcess","values","menuSelected","splitDescription","split","name","length","replaceAll","ComponentActions","doDeleteMenuRoleProcess","menuId","menuListApi","filter","x","menu","doAddMenuRoleProcess","role_id","view","insert","update","doSaveMenuRole","newMenuSelected","currentMenuSelected","selectedRoleMenu","selectedRoleId","setTimeout","newMenu","doEditRoleProcess","doDeleteRoleProcess","deleteRoleRequested","cancelText","saveRoleRequested","SET_LIST_ADMIN","SET_PAGING_ADMIN","SET_SELECTED_ADMIN_ID","SET_SELECTED_ADMIN_DATA","setListAdmin","setPagingAdmin","setSelectedAdminId","setSelectedAdminData","getListAdminRequested","paging","totalPage","doAddAdminProcess","admins","username","fullname","password","doEditAdminProcess","doDeleteAdminProcess","saveAdminRequested","mapDetailAdminToForm","selectedAdminData","deleteAdminRequested","SET_PROVINCE_LIST_DATA","SET_CITY_LIST_DATA","SET_MENU_LIST_DATA","setCityListData","loadProvinceListData","loadCityListData","loadMenuListData","SET_BRANCH_LIST_DATA","SET_SELECTED_BRANCH_ID","SET_SELECTED_BRANCH_DATA","SET_PAGING_BRANCH","SET_BRANCH_LIST_DATA_DROPDOWN","setBranchListData","setBranchListDataDropdown","setPagingBranch","setSelectedBranchId","setSelectedBranchData","doDeleteBranchProcess","branch","getBranchListDataRequested","doAddBranchProcess","doEditBranchProcess","mapDetailBranchToForm","selectedBranchData","isDropdown","saveBranchRequested","deleteBranchRequested","SET_UNIT_LIST_DATA","SET_SELECTED_UNIT_ID","SET_SELECTED_UNIT_DATA","SET_PAGING_UNIT","setUnitListData","setPagingUnit","setSelectedUnitId","setSelectedUnitData","doDeleteUnitProcess","units","getUnitListDataRequested","doAddUnitProcess","photo","imageUrl","doEditUnitProcess","mapDetailUnitToForm","selectedUnitsData","saveUnitRequested","deleteUnitRequested","SET_MACHINE_LIST_DATA","SET_SELECTED_MACHINE_ID","SET_SELECTED_MACHINE_DATA","SET_PAGING_MACHINE_CONF","setMachineListData","setPagingMachineConf","setSelectedMachineId","setSelectedMachineData","doDeleteMachineProcess","getMachineListDataRequested","doAddMachineProcess","doEditMachineProcess","mapDetailMachineToForm","machineConfiguration","selectedMachineData","saveMachineRequested","deleteMachineRequested","initializeApp","AdminActions","RoleActions","MasterDataActions","BranchActions","UnitsActions","MachineConfigurationActions","SET_ACCESS_TOKEN_DATA","SET_USER_DETAIL_DATA","SET_ERROR_LOGIN","setUserDetail","setErrorLogin","appendItem","accessToken","handleSubmitLogin","then","catch","onRejected","dataResponseRejected","initialState","userDetail","avatar","navigate","path","getIndex","currentpage","pageNumbers","startIndex","endIndex","i","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","SelectLocation","value","label","SelectType","SelectInstanceType","SelectStatus","SelectStatusServices","SelectStatusMilling","SelectInstanceTypeRegular","SelectMilling","enumTypeInternalServices","enumTypeExternalServices","enumWarranty","warrantyMonths","toString","getProvinceEnum","SelectProvince","getCitiesEnum","SelectCities","enumSelectGenerator","enumName","SelectEnum","getUnitModelEnum","SelectUnitModel","getMachineConf","SelectMachines","replace","toLowerCase","getStatus","statusItem","toUpperCase","color","categoryServices","categoryMonitoringServices","enumTypeMonitoringEmployee","SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA","SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA","SET_GROUPING_SUMMARY_DATA","SET_GROUPING_CHECKLIST_DATA","SET_SELECTED_SERVICES_SUMMARY_DATA","SET_SELECTED_SERVICES_MEDIA_DATA","SET_SELECTED_SERVICES_DAILIES_DATA","SET_SELECTED_SERVICES_HISTORIES_DATA","SET_SELECTED_SERVICES_CHECKLIST_DATA","SET_SELECTED_SERVICES_REJECTED_DATA","SET_EDIT_TRANSACTION_MODAL","SET_REJECTIONS_MODAL","SET_EDIT_DAILIES_MODAL","SET_SELECTED_EDIT_DAILIES_DATA","SET_SELECTED_UNIT","RESET_DETAIL_SERVICE","setRejectionsModal","setEditTransactionModal","setGroupingSummaryData","setGroupingChecklistData","setEditDailiesModal","setSelectedServicesEmployeeListData","setSelectedServiceDailiesData","setSelectedServiceHistoriesData","getJobServiceEmployeeList","serviceEmployeeList","results","subIitem","active","employee_service_id","employee_id","employee","logs","getJobServiceRejections","handleAddNewEmployeeService","setStatusEmployee","employeeServiceId","isActive","doRejectServiceProcess","reason","doEditServiceProcess","warranty","warrantyYears","start","moment","startDate","format","due","dueDate","job_perform","jobPerform","warranty_month","warranty_year","setSelectedJobService","unit_models","handlePressEditRequested","handlePressRejectedRequested","doEditDailiesProcess","dataService","services","selectedJobService","title","daily_start","daily_end","endDate","handlePressEditDailiesRequested","mapDetailTransactionToForm","end","mapDailiesToForm","detailService","selectedEditDailies","mulai","selesai","deskripsi","downloadTransactionPdf","dataTransactionPdf","downloadUrl","pdf","fileDownload","filename","SET_LIST_SERVICES","SET_SELECTED_JOB_SERVICE","SET_PAGING_LIST_SERVICE","SET_SELECTED_JOB_SERVICE_ID","SET_DASHBOARD_LIST_SERVICES","setListServices","setPagingListService","setSelectedJobServiceId","getListServicesRequested","getTopTenService","handleSearch","filterValues","splitTypeService","typeService","splitStatusService","statusService","handlePressEdit","doDeleteJobServiceProcess","deleteJobServiceRequested","handlePressActionsRequested","doCallActionProcess","listServices","dashboardListServices","selectedJobServiceId","isLoadingGlobal","isLoadingFormGlobal","isModalVisible","SET_CUSTOMER_LIST_DATA","SET_PAGING_CUSTOMER","SET_SELECTED_CUSTOMER_DATA","SET_SELECTED_CUSTOMER_ID","SET_CUSTOMER_LIST_DATA_DROPDOWN","setCustomerListData","setCustomerListDataDropdown","setPagingCustomer","setSelectedCustomerData","setSelectedCustomerId","getCustomerListDataByPaging","isDropdownData","doDeleteCustomerProcess","doAddCustomerProcess","customers","province","cityId","city","branch_id","province_id","city_id","phone","work_hour","workHour","pic","pic_phone","picPhone","address","saveCustomerRequested","mapDetailCustomerToForm","selectedCustomerData","province_name","city_name","branch_name","deleteCustomerRequested","listCustomers","listCustomersDropdown","formStatus","selectedCustomerId","listAdmin","selectedAdminId","listRoles","SET_EMPLOYEE_LIST_DATA","SET_SELECTED_EMPLOYEE_ID","SET_SELECTED_EMPLOYEE_DATA","SET_SELECTED_ROLE_EMPLOYEE","SET_PAGING_EMPLOYEES","setEmployeeListData","setSelectedEmployeeId","setSelectedEmployeeData","setSelectedRoleEmployee","setPagingEmployees","loadEmployeeListData","getEmployeeDataByIdRequested","getRolesByEmployeeId","setAutoPopulateEmployee","selectedEmployeeData","employees","listBranch","defaultBranch","doAddEmployeeProcess","selectedRoles","nik","doEditEmployeeProcess","roleSelected","doSaveEmployeeRole","doAddEmployeeRoleProcess","newRoleId","doDeleteAllEmployeeRoleProcess","roleListApi","doDeleteEmployeeProcess","newRoleSelected","currentRoleSelected","selectedRoleEmployee","selectedEmployeeId","saveEmployeeRequested","mapDetailEmployeeToForm","deleteEmployeeRequested","splitRole","role","splitBranch","splitDivision","division","listEmployees","SET_EMPLOYEE_TOOL_LIST_DATA","SET_SELECTED_EMPLOYEE_TOOLS_ID","SET_SELECTED_EMPLOYEE_TOOLS_DATA","SET_PAGING_EMPLOYEE_TOOLS","setEmployeeToolsListData","setSelectedEmployeeToolsId","setSelectedEmployeeToolsData","setPagingEmployeeTools","getEmployeeToolsRequested","doAddEmployeeToolsProcess","slpitToolsId","tools","tool_id","doEditEmployeeToolsProcess","splitTools","doDeleteEmployeeToolsProcess","employeeTools","saveEmployeeToolsRequested","mapDetailEmployeeToolsToForm","selectedEmployeeToolsData","deleteEmployeeToolsRequested","listEmployeeTools","selectedEmployeeToolsId","listProvince","listCity","listMenu","listUnits","selectedUnitsId","SET_JOB_FORMS_LIST_DATA","SET_SELECTED_JOB_FORMS_ID","SET_SELECTED_JOB_FORMS_DATA","SET_PAGING_JOB_FORM","setJobFormsListData","setPagingJobForm","setSelectedJobFormsId","setSelectedJobFormsData","getJobFormsListDataRequested","doAddJobFormsProcess","doEditJobFormsProcess","mapDetailJobFormsToForm","jobForms","selectedJobFormsData","saveJobFormsRequested","deleteJobFormsRequested","listJobForms","selectedJobFormsId","listBranchDropdown","selectedBranchId","selectedServiceEmployeeList","selectedServiceSummary","selectedServiceMedia","groupingSelectedServiceMedia","groupingSelectedServiceSummary","groupingSelectedServiceChecklist","selectedServiceDailies","selectedServiceHistories","selectedServiceChecklist","selectedServiceRejected","rejectionsModal","editTransactionModal","editDailiesModal","selectedUnit","SET_UNIT_MODEL_LIST_DATA","SET_SELECTED_UNIT_MODEL_ID","SET_SELECTED_UNIT_MODEL_DATA","SET_PAGING_UNIT_MODEL","setUnitModelListData","setPagingUnitModel","setSelectedUnitModelId","setSelectedUnitModelData","getUnitModelListDataRequested","doAddUnitModelsProcess","unitModels","unit_id","descriptions","serial_number","serialNumber","machine_no","machineNo","engine_model","engineModel","engine_no","engineNo","chasis_no","chasisNo","transmission_no","transmissionNo","doEditUnitModelsProcess","doDeleteUnitModelsProcess","saveUnitModelsRequested","deleteUnitModelRequested","mapDetailUnitModelToForm","selectedUnitModelsData","listUnitModels","selectedUnitModelsId","SET_ENUM_UNIT_MODEL","getEmployeeByIdFromReducer","tempData","getProvinceByIdFromReducer","masters","setAutoPopulateUnitModel","fieldIndex","indexEmployee","employeeData","provinceData","cityData","filteredCity","citySelected","setAutoPopulateCustomer","customersData","handleSubmitForm","splitCustomerId","customer","splitTypeId","splitWarranty","splitEmployeeId","unitList","splitUnitModel","unit_model_id","customer_id","job_form_id","uuidv4","identification_id","is_external","customerLocation","functionThatReturnPromise","reset","promise","pending","enumUnitModel","SET_IDENTIFICATIONN_LIST_DATA","SET_SELECTED_IDENTIFICATION_ID","SET_PAGING_IDENTIFICATION","SET_SELECTED_IDENTIFICATION_DATA","setIdentificationListData","setSelectedIdentificationId","setSelectedIdentificationData","getIdentificationListRequested","branches","identificationList","newIdentificationList","doDeleteIdentificationProcess","identification","doAddIdentificationProcess","splitCustomer","splitLocation","splitMilling","milling","splitType","doUpdateIdentificationMilling","isLastStep","selectedIdentificationId","splitInstanceType","instanceType","splitMillingStatus","millingStatus","splitCity","splitProvince","engineConfs","engine_confs","list","engine_conf_id","instance_type","instance_name","instanceName","customerName","ktp_npwp","milling_capacity","millingCapacity","milling_work_capacity_perday","millingWorkCapacityPerDay","rice_trademark","riceTrademark","history_service_place","history_service_type","notes","note","spare_part_needs","spare_part_changing_histories","spare_part_selling_histories","doUpdateIdentificationRegular","isFinished","instance_address","instanceAddress","address_district","address_city","address_province","address_subdistrict","kelurahan","address_postal_code","postalCode","instancePhoneNumber","product_name","productName","buy_date","assistance_date","machine_number","gearbox_number","production_unit_year","work_hour_per_day","hour_meter","saveIdentificationRequested","isMilling","selectedIdentificationData","deleteIdentificationRequested","listIdentification","listMachine","selectedMachineId","SET_TOOLS_LIST_DATA","SET_SELECTED_TOOLS_ID","SET_SELECTED_TOOLS_DATA","SET_PAGING_TOOLS","setToolsListData","setPagingTools","setSelectedToolsId","setSelectedToolsData","doDeleteToolsProcess","toolsId","getToolsListDataRequested","doAddToolsProcess","doEditToolsProcess","mapDetailToolsToForm","selectedToolsData","saveToolsRequested","deleteToolsRequested","listTools","selectedToolsId","SET_FORM_CATEGORY_LIST_DATA","SET_SELECTED_FORM_CATEGORY_ID","SET_SELECTED_FORM_CATEGORY_DATA","SET_PAGING_FORM_CATEGORY","setFormCategoryListData","setPagingFormCategory","setSelectedFormCategoryId","setSelectedFormCategoryData","doDeleteFormCategoryProcess","getFormCatgeoryListDataRequested","doAddFormCategoryProcess","doEditFormCategoryProcess","mapDetailCategoryToForm","formCategory","selectedFormCategoryData","saveFormCategoryRequested","deleteFormCategoryRequested","formCategoryId","listFormCategory","selectedFormCategoryId","SET_UNIT_FIELDS_LIST_DATA","SET_SELECTED_UNIT_FIELDS_ID","SET_SELECTED_UNIT_FIELDS_DATA","SET_PAGING_UNIT_FIELDS","setUnitFieldsListData","setPagingUnitFields","setSelectedUnitFieldsId","setSelectedUnitFieldsData","getUnitFieldsListDataRequested","doAddUnitFieldsProcess","unitFields","splitCategoryFormId","splitjobFormId","jobForm","fieldName","category_form_id","doEditUnitFieldsProcess","doDeleteUnitFieldsProcess","unitFieldId","saveUnitFieldsRequested","deleteUnitFieldRequested","mapDetailUnitFieldToForm","selectedUnitFieldsData","job_form_name","category_form_name","listUnitFields","selectedUnitFieldsId","SET_MONITORING_EMPLOYEE_LIST_DATA","SET_PAGING_MONITORING_EMPLOYEE","setMonitoringEmployeeListData","setPagingMonitoringEmployee","getMonitoringEmployeeListDataRequested","monitoringEmployee","newListMonitoringEmployee","itemData","indexData","created_date","date","listMonitoringEmployee","SET_SERVICE_REPAIR_LIST_DATA","SET_PAGING_SERVICE_REPAIR","setServiceRepairListData","setPagingServiceRepair","getServiceRepairListDataRequested","serviceRepair","newListServiceRepair","listServiceRepair","SET_REPORT_EMPLOYEE_LIST_DATA","SET_PAGING_REPORT_EMPLOYEE","setReportEmployeeListData","setPagingReportEmployee","getReportEmployeeDataRequested","reportEmployee","newReportEmployee","listReportEmployee","SET_DIVISION_LIST_DATA","SET_SELECTED_DIVISION_ID","SET_SELECTED_DIVISION_DATA","SET_PAGING_DIVISION","setDivisionListData","setPagingDivision","setSelectedDivisionId","setSelectedDivisionData","doDeleteDivisionProcess","getDivisionListDataRequested","doAddDivisionProcess","headDivision","doEditDivisionProcess","mapDetailDivisionToForm","selectedDivisionData","employee_name","saveDivisionRequested","deleteDivisionRequested","listDivision","selectedDivisionId","SET_DIVISION_UNIT_LIST_DATA","SET_SELECTED_DIVISION_UNIT_ID","SET_SELECTED_DIVISION_UNIT_DATA","SET_PAGING_DIVISION_UNIT","setDivisionUnitListData","setPagingDivisionUnit","setSelectedDivisonUnitId","setSelectedDivisionUnitData","getDivisionUnitListRequested","doAddDivisionUnitProcess","divisionUnit","splitUnitId","unit","division_id","doEditDivisionUnitProcess","saveDivisionUnitRequested","listDivisionUnit","selectedDivisionUnitId","selectedDivisionUnitData","SET_DASHBOARD_DATA","dashboardData","SET_UNIT_SERIAL_NUMBER_DATA","SET_SELECTED_UNIT_SERIAL_NUMBER_ID","SET_SELECTED_UNIT_SERIAL_NUMBER_DATA","setUnitSerialNumberData","setSelectedUnitSerialNumberId","setSelectedUnitSerialNumberData","doAddUnitSerialNumberProcess","doEditUnitSerialNumberProcess","unitSerialNumber","selectedUnitSerialNumberId","serialNumberId","saveUnitSerialNumberRequested","mapDetailUnitSerialNumberToForm","selectedUnitSerialNumberData","customer_name","listUnitSerialNumber","SET_UNIT_JOB_FORMS_LIST_DATA","SET_PAGING_UNIT_JOB_FORMS","setUnitJobFormsListData","getUnitJobFormsListDataRequested","listUnitJobForms","rootReducer","rootReducers","combineReducers","router","connectRouter","auth","state","newState","Object","assign","externalService","unitJobForms","component","dashboard","form","formReducer","toastrReducer","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","createStore","applyMiddleware","routerMiddleware","persistor","persistStore","run","Saga","Component","props","Overlay","styled","div","CGlobalOverlay","loading","height","width","radius","margin","Sidebar","mainMenu","masterDataMenu","reportMenu","serviceRepairMenu","reportDataMenu","href","icon","Footer","Date","getFullYear","Navbar","onLogout","placeholder","src","alt","onClick","TemplateComponent","children","isGlobalLoading","isLandingPage","logout","Fragment","className","selectorAuth","selectorComponent","mapStateToProps","createStructuredSelector","createSelector","withConnect","connect","authActions","React","useState","setRole","useEffect","menus","getIconName","withTemplate","Template","WrappedComponent","hoistNonReactStatics","CButtonAntd","isLoading","disabled","shape","size","danger","backgroundColor","style","borderColor","block","DashboardComponent","totalCustomer","totalInternalService","totalExternalService","totalIdentification","bordered","columns","dataSource","pagination","pageSizeOptions","showSizeChanger","ListServiceActions","handlePressDelete","jobServiceId","no","keys","toLocaleString","dataIndex","sorter","b","render","items","isExternal","borderRadius","textAlign","unit_name","unit_model_name","align","text","record","EditOutlined","CInput","typeComponent","htmlFor","maxLength","rows","onChange","input","meta","touched","fontSize","labelSize","LoginComponent","handleSubmit","submitForm","onSubmit","Field","validateFormRoles","errors","validateFormUnitModel","validateFormTransaction","EnhanceContainer","valid","AuthActions","reduxForm","validate","FormItem","Form","Item","Option","Select","ASelect","hasFeedback","rest","hasError","invalid","validateStatus","help","CSelect","showSearch","onBlur","e","preventDefault","RenderDatePicker","defaultValue","CDatePicker","CButton","InternalServiceComponent","listEmployee","enumType","handleAutoPopulateEmployee","handleAutoPopulateCustomer","InfoCircleTwoTone","FieldArray","fields","PlusOutlined","itemEmployee","DeleteOutlined","remove","getCityByIdFromReducer","arrVal","InternalServiceActions","ComponentAction","CustomerActions","EmployeeActions","SelectCustomerData","SelectEmployeeData","initialValues","ExternalServiceComponent","listUnit","enumJobForms","handleAutoPopulateUnitModel","externalValues","onChangeUnitModel","handleChangeType","isTroubleShoot","itemUnit","indexUnit","val","selector","formValueSelector","formValues","getFormValues","ExternalServiceActions","enumModel","enumUnit","selectedUnitModel","unitQty","setUnitQty","unitData","setUnitData","setIsTroubleShoot","SelectUnit","SelectJobFormsData","JobFormsActions","totalUnit","handleAddNewUnit","handleSubtractUnit","MonitoringEmployeeComponent","onChangePagination","onSearch","enumBranch","enumTypeReport","handlePressGeneratePdf","orientation","SearchOutlined","FilePdfOutlined","monitoringEmployeeFormValues","getListMonitoringEmployee","MonitoringEmployeeActions","handlePressAddNew","printedData","jd_date","employee_nik","jobType","job_type","models","SelectBranch","nextPage","pageSize","monitoringEmployeeList","job_status","createdDate","doc","jsPDF","setFontSize","setFont","autoTable","startY","body","theme","head","content","rowSpan","halign","colSpan","styles","fillColor","headStyles","valign","overflow","columnWidth","header","dataKey","willDrawCell","dataCell","didParseCell","s","cell","lineColor","lineWidth","font","columnStyles","tableLineColor","tableLineWidth","save","exportMonitoringEmployeePdf","ReportServiceRepairComponent","scroll","serviceRepairFormValues","getListServiceRepair","ReportServiceRepairActions","BookOutlined","fixed","ReportEmployeeComponent","reportEmployeeFormValues","ReportEmployeeActions","technition","Search","Input","ListServiceComponent","enumStatus","total","current","enterButton","listServiceFormValues","renderActionTable","ListServicesComponent","CTableAntd","renderActions","searchText","searchedColumn","searchInput","useRef","sortDirections","filterIcon","filtered","onFilter","includes","onFilterDropdownVisibleChange","visible","select","highlightStyle","padding","searchWords","autoEscape","textToHighlight","CModal","footer","destroyOnClose","onCancel","RenderFooter","handleSaveForm","RenderContent","formName","AdminModalComponent","handleCancel","enumMenu","AdminComponent","NotFound","AuthMiddleware","ComposedComponent","isAuthenticated","redirect","CBadgeText","enumEmployee","AddEmployeeModalComponent","SelectEmployee","DetailServiceTransactionAction","Themes","RejectedModalComponent","DetailServiceTransactionActions","reson","handleClose","CloseOutlined","CheckOutlined","SelectRole","defaultValuesMenu","onChangeRoleMenu","Group","span","typeComponents","EditModalTransactionComponent","menuChecked","handleClearModalContent","SelectMenu","EditModalDailiesComponent","Text","Typography","TabPane","Tabs","DetailServiceTransactionComponent","TabPanel","onChangeTab","goBack","handlePressActions","RenderButtonAction","button","CheckCircleOutlined","CloseCircleOutlined","ArrowLeftOutlined","model","strong","customer_pic_name","defaultActiveKey","tab","EditModalTransactionContainer","Meta","Card","RenderDescription","handlePressNonactive","handlePressActive","TabPanelEmployeeComponent","marginLeft","marginTop","cover","RenderItemSummary","Paragraph","summary","indexText","TabPanelSummaryComponent","summaryArr","alignItems","FileOutlined","gutter","fontWeight","textTransform","plain","unitName","TabPanelSummaryContainer","setSummaryArr","summaryMapping","splitSummary","RenderImage","medias","marginRight","hoverable","TabPanelImagesComponent","CameraOutlined","image","TabPanelImagesContainer","RenderDailies","dailies","karyawan","jam","hours","TabPanelDailiesComponent","handlePressCancel","RenderHistories","histories","user_name","TabPanelHistoriesComponent","TabPanelHistoriesContainer","rejections","TabPanelRejectionsComponent","TabPanelRejectionsContainer","alignContent","justifyContent","TabPanelChecklistComponent","checklistArr","isLoaded","checklist","itemChecklist","indexChecklist","borderBottom","itemFields","indexFields","field_name","checked","is_check","TabPanelChecklistContainer","setchecklistArr","DetailServiceActions","isLoadedChecklist","setIsLoadedChecklist","FileImageOutlined","FileTextOutlined","UsergroupAddOutlined","CloseSquareOutlined","HistoryOutlined","fromIndex","indexOf","element","splice","callInitialize","EmployeesActions","getGroupingUnitData","groupingMediaList","groupingSummaryList","groupingChecklist","dataMedia","dataSummary","dataChecklist","activeTab","RolesEditModalComponent","RolesActions","setMenuSelected","RolesComponent","getListRoles","EmployeeListComponent","enumRoles","enumDivision","employeeFormValues","employeesFormValues","getListEmployees","ToolsActions","handlePressEmployeeTools","SelectRoles","getRolesEnum","SelectDivision","EmployeesListComponent","SettingOutlined","defaultValues","onChangeRoleEmployee","EmployeeEditComponent","enumRole","enumProvince","enumCity","handleUploadPhoto","defaultImage","onChangeProvince","onBackAction","setLoading","setImageUrl","uploadButton","LoadingOutlined","listType","showUploadList","beforeUpload","file","isJpgOrPng","isLt2M","info","originFileObj","resizeMode","heigh","opacity","getDetailEmployee","handleClearSelectedEmployeeRole","listCityState","setListCityState","setRoleSelected","setDefaultImage","SelectEmployeeRole","provinceMapping","detailEmployee","base64","BranchModalComponent","BranchComponent","JobFormsModalComponent","JobFormsComponent","getListJobForms","ContentStepOneComponent","provinces","cities","enumInstanceType","enumStatusMilling","ContentUnitComponent","ContentSparePartComponent","onChangeServiced","isServiced","RenderSparePartSelling","RenderSparePartNeeded","_props","StepsContent","StepsAction","Step","Steps","FormWizardIdentificationComponent","steps","saveFormChanges","setCurrent","ContentMachineConfigurationComponent","machineConf","onAddMachineConf","RenderBodyHusker","ContentStepOneRegularComponent","identificationFormValues","setCities","serviced","setServiced","IdentificationActions","listCustomer","listLocation","listMilling","IdentificationModalComponent","enumCustomers","enumLocation","enumMilling","SelectCustomer","CustomersActions","ListIdentificationComponent","getListIdentification","created_at","MachineConfigurationModalComponent","MachineConfigurationComponent","getListMachine","MachineActions","UnitsModalComponent","UnitsComponent","placement","getListUnit","handlePressUnitModel","handlePressUnitFields","handlePressLink","tooltipText","BoxPlotOutlined","FileAddOutlined","whiteSpace","CustomerModalComponent","CustomerComponent","customerBranchValue","getListCustomer","getListProvince","ToolsModalComponent","ToolsComponent","FormCategoryModalComponent","FormCategoryActions","FormCategoryComponent","getListFormCategory","UnitsModelsModalComponent","UnitModelActions","UnitModelsComponent","getListUnitModels","handlePressSerialNumber","FieldNumberOutlined","enumFormCategory","enumJobForm","UnitFieldsModalComponent","UnitFieldsActions","setFormCategory","setJobForm","loadOption","dataJobForm","listJobForm","SelectFormCategory","SelectJobForm","UnitFieldsComponent","unitFieldsId","setReportIdentificationListData","setPagingReportIdentification","ReportIdentificationComponent","enumHeadDivision","DivisionModalComponent","DivisionActions","SelectEmployees","DivisionComponent","getListDivision","getListEmlpoyee","handlePressDivisionUnit","enumTools","EmployeeToolsModalComponent","EmployeeToolsActions","SelectTools","EmployeeToolsComponent","generateEmployeeToolsReport","newListData","check","drawCell","docCell","section","column","setLineWidth","setFillColor","circle","y","addPage","employeeToolsFormValues","enumUnits","DivisionUnitModalComponent","DivisionUnitActions","SelectUnits","DivisionUnitComponent","getListDivisionUnit","divisionUnitId","StyleSheet","flexDirection","flexGrow","DetailServiceReportComponent","flex","DetailServiceReportContainer","enumCustomer","ModalUnitSerialNumberComponent","UnitSerialNumberActions","UnitSerialNumberComponent","onChangeCustomer","ModalUnitSerialNumberContainer","unitSerialNumberFormValues","selectedtUnitSerialNumber","UnitJobFormsComponent","UnitJobFormsActions","Navigation","authenticatedPage","footerImg","TemplateContainer","templating","Login","LoginContainer","NotFoundPage","Admin","AdminContainer","Roles","RolesContainer","JobForms","JobFormsContainer","Branches","BranchContainer","EmployeeList","EmployeesListContainer","EmployeeTools","EmployeeToolsContainer","Division","DivisionContainer","DivisionUnit","DivisionUnitContainer","EditEmployee","EmployeeEditContainer","Dashboard","DashboardContainer","Units","UnitsContainer","UnitModels","UnitModelsContainer","UnitFields","UnitFieldsContainer","UnitJobForms","UnitJobFormsContainer","UnitSerialNumber","UnitSerialNumberContainer","Tools","ToolsContainer","Customers","CustomerContainer","FormCategory","FormCategoryContainer","MachineConfiguration","MachineConfigurationContainer","InternalService","InternalServiceContainer","ExternalService","ExternalServiceContainer","MonitoringEmployee","MonitoringEmployeeContainer","ReportServiceRepair","ReportServiceRepairContainer","ReportEmployee","ReportEmployeeContainer","ListServices","ListServicesContainer","ReportIdentification","ReportIdentificationContainer","DetailService","DetailServiceTransactionContainer","FormWizardIdentification","FormWizardIdentificationContainer","ListIdentification","ListIdentificationContainer","Helmet","titleTemplate","defaultTitle","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","closeOnToastrClick","exact","App","context","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mMAKeA,EAHCC,YAAqB,CACnCC,SAAoC,K,yHC8BrBC,G,WAyFAC,GAzFV,SAAUD,EAAmBE,GAA7B,qFAkBL,GAfKA,EAAOC,UAAUC,eAA0CC,IAA9BH,EAAOC,UAAUC,WAC3CE,EAAuB,CAC3BC,KAAM,WACJC,OAAOC,SAASC,UAElBC,OAAQ,KACRC,eAAe,GAGjBC,SAAOC,QACL,sDACAR,IAIAJ,EAAOC,UAAUC,SAGnB,GAFMW,EAAQb,EAAOC,UAEE,OADjBa,EAFuB,OAEND,QAFM,IAENA,OAFM,EAENA,EAAOX,SAASa,QAGrCC,QAAQC,IAAI,2BACP,GAAuB,MAAnBH,EAC6B,SAAlCD,EAAMX,SAASgB,KAAKC,YACtBC,EACE,sBAAMC,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAG,yCAKzBF,EADoC,SAAlCP,EAAMX,SAASgB,KAAKC,UAEpB,sBAAME,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAG,wCAKvB,sBAAMD,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAIT,EAAMX,SAASgB,KAAKK,oBAI3C,GAAuB,MAAnBT,EACTM,EACE,sBAAMC,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAI,0BAI1B,IACQE,EADJ,UACcX,EAAMX,SAASgB,YAD7B,iBACc,EAAqBO,YADnC,iBACc,EAA2BC,SAAS,UADlD,aACc,EAAwCC,SAEtDP,EADEI,EAEA,sBAAMH,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAIE,MAKxB,sBAAMH,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAG,mBAI3B,MAAOT,GACPO,EACE,sBAAMC,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAIT,WAM1Bb,EAAOC,UAAUC,SAASgB,KAAKU,UACjCR,EACE,sBAAMC,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAItB,EAAOC,UAAUC,SAASgB,KAAKU,aAKzDR,GACFS,IAAMhB,MAAMO,GArFT,uCAyFA,SAAUrB,IAAV,iEACL,OADK,SACC+B,YAAU,oBAAqBhC,GADhC,uC,kBCjHQ,8EACb,OADa,SACPiC,YAAI,CACRC,YAAKjC,KAFM,uC,oDCHTkC,E,OAAcC,EAAMC,OAAO,CAE/BC,QAAS,8BACTC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,kCAChC,+BAAgC,iBAElCC,QAAS,OAEXN,EAAYO,SAASH,QAAQI,OAAS,CACpC,eAAgB,oBAQlBR,EAAYS,aAAaC,QAAQC,KAC/B,SAACC,GAaC,MAZgC,QAA5BA,EAAiBC,SACnBD,EAAiB3B,MAAO,GAWnB6B,QAAQC,QAAQH,MAEzB,SAACI,GAWC,OAVKC,IAAEC,QAAQF,GAURF,QAAQK,OAAOH,MAI1BhB,EAAYS,aAAaxC,SAAS0C,KAChC,SAACS,GAUC,OAAON,QAAQC,QAAQK,MAEzB,SAACC,GAkCC,OAjCIA,EAAiBpD,UAAYoD,EAAiBpD,SAASgB,OACX,MAA1CoC,EAAiBpD,SAASgB,KAAKH,OACjCc,IAAM0B,QAAQD,EAAiBpD,SAASgB,KAAKsC,QAAS,CACpDC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU5D,IAGZ0B,IAAMhB,MAAM,mBAAoB,CAC9B4C,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU5D,KAIX+C,IAAEC,QAAQG,GAURP,QAAQK,OAAOE,MAIXrB,QC3GT+B,EAAS,GACTC,EAAsB,CAC1B5B,QAAS,CACP,eAAgB,oBAElBnB,KAAM,IAGR8C,EAAOE,YAAc,SAAChD,GACpB,OAAOe,EAAYkC,KAAK,SAAUjD,IAGpC8C,EAAOI,oBAAsB,SAAClD,GAC5B,OAAOe,EAAYkC,KAAK,UAAWjD,IAGrC8C,EAAOK,gBAAkB,SAACC,EAAMC,EAAOC,EAASC,EAAM1D,GACpD,OAAOkB,EAAYyC,IAAZ,yBACaJ,EADb,kBAC2BC,EAD3B,cACsCC,EADtC,iBACsDC,EADtD,mBACqE1D,KAI9EiD,EAAOW,qBAAuB,SAACC,GAC7B,OAAO3C,EAAYQ,OAAZ,oBAAgCmC,GAASX,IAGlDD,EAAOa,eAAiB,SAACD,GACvB,OAAO3C,EAAYyC,IAAZ,oBAA6BE,KAItCZ,EAAOc,aAAe,SAACR,EAAMC,GAAyB,IAAlBC,EAAiB,uDAAP,GAC5C,OAAOvC,EAAYyC,IAAZ,uBAAgCJ,EAAhC,kBAA8CC,EAA9C,cAAyDC,KAGlER,EAAOe,aAAe,SAACC,GACrB,OAAO/C,EAAYyC,IAAZ,kBAA2BM,KAGpChB,EAAOiB,SAAW,SAAC/D,GACjB,OAAOe,EAAYkC,KAAK,UAAWjD,IAGrC8C,EAAOkB,YAAc,SAAChE,GACpB,OAAOe,EAAYkD,IAAI,UAAWjE,IAGpC8C,EAAOoB,gBAAkB,SAACJ,GACxB,OAAO/C,EAAYQ,OAAZ,kBAA8BuC,GAAWf,IAKlDD,EAAOqB,kBAAoB,SAACL,EAASV,EAAMC,GACzC,OAAOtC,EAAYyC,IAAZ,wBACYM,EADZ,iBAC4BV,EAD5B,kBAC0CC,KAInDP,EAAOsB,kBAAoB,SAACC,GAC1B,OAAOtD,EAAYyC,IAAZ,uBAAgCa,KAGzCvB,EAAOwB,cAAgB,SAACtE,GACtB,OAAOe,EAAYkC,KAAK,gBAAiBjD,IAG3C8C,EAAOyB,iBAAmB,SAACvE,GACzB,OAAOe,EAAYkD,IAAI,gBAAiBjE,IAG1C8C,EAAO0B,qBAAuB,SAACH,GAC7B,OAAOtD,EAAYQ,OAAZ,uBAAmC8C,KAK5CvB,EAAO2B,iBAAmB,SAACC,EAAYtB,EAAMC,GAC3C,OAAOtC,EAAYyC,IAAZ,2BACekB,EADf,iBACkCtB,EADlC,kBACgDC,KAKzDP,EAAO6B,iBAAmB,SAACD,EAAYtB,EAAMC,GAC3C,OAAOtC,EAAYyC,IAAZ,2BACekB,EADf,iBACkCtB,EADlC,kBACgDC,KAIzDP,EAAO8B,gBAAkB,SAAC5E,GACxB,OAAOe,EAAYkC,KAAZ,mBAAqCjD,IAG9C8C,EAAO+B,mBAAqB,SAACzE,GAC3B,OAAOW,EAAYQ,OAAZ,2BAAuCnB,GAAM2C,IAKtDD,EAAOgC,gBAAkB,SAAC1B,EAAMC,EAAOC,EAASyB,GAC9C,OAAOhE,EAAYyC,IAAZ,0BACcJ,EADd,kBAC4BC,EAD5B,cACuCC,EADvC,qBAC2DyB,KAGpEjC,EAAOkC,gBAAkB,SAACX,GACxB,OAAOtD,EAAYyC,IAAZ,qBAA8Ba,KAGvCvB,EAAOmC,YAAc,SAACjF,GACpB,OAAOe,EAAYkC,KAAK,aAAcjD,IAGxC8C,EAAOoC,eAAiB,SAAClF,GACvB,OAAOe,EAAYkD,IAAI,aAAcjE,IAGvC8C,EAAOqC,mBAAqB,SAACd,GAC3B,OAAOtD,EAAYQ,OAAZ,qBAAiC8C,GAActB,IAKxDD,EAAOsC,gBAAkB,SACvBhC,EACAC,EACAC,EACA+B,EACAN,EACAO,GAEA,OAAOvE,EAAYyC,IAAZ,0BACcJ,EADd,kBAC4BC,EAD5B,cACuCC,EADvC,oBAC0D+B,EAD1D,sBAC8EN,EAD9E,wBACsGO,KAI/GxC,EAAOyC,gBAAkB,SAACb,GACxB,OAAO3D,EAAYyC,IAAZ,qBAA8BkB,KAGvC5B,EAAO0C,YAAc,SAACxF,GACpB,OAAOe,EAAYkC,KAAK,aAAcjD,IAGxC8C,EAAO2C,eAAiB,SAACzF,GACvB,OAAOe,EAAYkD,IAAI,aAAcjE,IAGvC8C,EAAO4C,mBAAqB,SAAChB,GAC3B,OAAO3D,EAAYQ,OAAZ,qBAAiCmD,GAAc3B,IAKxDD,EAAO6C,qBAAuB,SAACjB,EAAYtB,EAAMC,GAC/C,OAAOtC,EAAYyC,IAAZ,wBACYkB,EADZ,iBAC+BtB,EAD/B,kBAC6CC,KAItDP,EAAO8C,qBAAuB,SAAClB,GAC7B,OAAO3D,EAAYyC,IAAZ,0BAAmCkB,KAG5C5B,EAAO+C,iBAAmB,SAAC7F,GACzB,OAAOe,EAAYkC,KAAK,mBAAoBjD,IAG9C8C,EAAOgD,oBAAsB,SAAC9F,GAC5B,OAAOe,EAAYkD,IAAI,mBAAoBjE,IAG7C8C,EAAOiD,wBAA0B,SAACC,GAChC,OAAOjF,EAAYQ,OAAZ,2BACeyE,GACpBjD,IAMJD,EAAOmD,YAAc,SAAC7C,EAAMC,GAC1B,OAAOtC,EAAYyC,IAAZ,sBAA+BJ,EAA/B,kBAA6CC,KAEtDP,EAAOoD,YAAc,SAAC7B,GACpB,OAAOtD,EAAYyC,IAAZ,iBAA0Ba,KAGnCvB,EAAOqD,QAAU,SAACnG,GAChB,OAAOe,EAAYkC,KAAK,SAAUjD,IAGpC8C,EAAOsD,WAAa,SAACpG,GACnB,OAAOe,EAAYkD,IAAI,SAAUjE,IAGnC8C,EAAOuD,eAAiB,SAAChB,GACvB,OAAOtE,EAAYQ,OAAZ,iBAA6B8D,GAAUtC,IAKhDD,EAAOwD,gBAAkB,SAAClD,EAAMC,GAC9B,OAAOtC,EAAYyC,IAAZ,0BAAmCJ,EAAnC,kBAAiDC,KAK1DP,EAAOyD,YAAc,SAACnD,EAAMC,EAAOmD,GACjC,OAAOzF,EAAYyC,IAAZ,4BACgBgD,EADhB,iBACmCpD,EADnC,kBACiDC,KAM1DP,EAAO2D,yBAA2B,SAACzG,GACjC,OAAOe,EAAYyC,IAAI,cAAexD,IAKxC8C,EAAO4D,mBAAqB,SAAC1G,GAC3B,OAAOe,EAAYkC,KAAK,YAAajD,IAEvC8C,EAAO6D,iBAAmB,SAAC3G,GACzB,OAAOe,EAAYkD,IAAI,YAAajE,IAEtC8C,EAAO8D,mBAAqB,SAAClD,GAC3B,OAAO3C,EAAYyC,IAAZ,6BAAsCE,KAE/CZ,EAAO+D,mBAAqB,SAACnD,GAC3B,OAAO3C,EAAYyC,IAAZ,8BAAuCE,KAEhDZ,EAAOgE,mBAAqB,SAACpD,EAAOqD,GAClC,OAAOhG,EAAYkC,KAAZ,6BACiBS,EADjB,qBAELqD,IAMJjE,EAAOkE,oBAAsB,SAACtD,EAAON,EAAMC,GACzC,OAAOtC,EAAYyC,IAAZ,8BACkBE,EADlB,iBACgCN,EADhC,kBAC8CC,KAGvDP,EAAOmE,sBAAwB,SAACvD,EAAOqD,GACrC,OAAOhG,EAAYkC,KAAZ,8BAAwCS,GAASqD,IAE1DjE,EAAOoE,yBAA2B,SAACxD,EAAOqD,GACxC,OAAOhG,EAAYkD,IAAZ,8BACkBP,GACvBqD,EACAhE,IAMJD,EAAOqE,qBAAuB,SAACzD,EAAO0D,GACpC,OAAOrG,EAAYyC,IAAZ,8BAAuCE,EAAvC,YAAgD0D,KAEzDtE,EAAOuE,mBAAqB,SAAC3D,EAAO0D,GAClC,OAAOrG,EAAYyC,IAAZ,2BAAoCE,EAApC,YAA6C0D,KAEtDtE,EAAOwE,qBAAuB,SAAC5D,EAAO0D,GACpC,OAAOrG,EAAYyC,IAAZ,4BAAqCE,EAArC,YAA8C0D,KAEvDtE,EAAOyE,wBAA0B,SAACR,GAChC,OAAOhG,EAAYkD,IAAZ,oBAAqC8C,IAE9CjE,EAAO0E,iBAAmB,SAACC,GACzB,OAAO1G,EAAYyC,IAAZ,gCAAyCiE,KAElD3E,EAAO4E,gBAAkB,SAAChE,GACxB,OAAO3C,EAAYyC,IAAZ,6BAAsCE,KAE/CZ,EAAO6E,uBAAyB,SAACjE,EAAON,EAAMC,EAAOC,GACnD,OAAOvC,EAAYyC,IAAZ,yBACaE,EADb,iBAC2BN,EAD3B,kBACyCC,EADzC,cACoDC,KAO7DR,EAAO8E,YAAc,SAACxE,EAAMC,EAAOC,GACjC,OAAOvC,EAAYyC,IAAZ,sBAA+BJ,EAA/B,kBAA6CC,EAA7C,cAAwDC,KAEjER,EAAO+E,QAAU,SAACd,GAChB,OAAOhG,EAAYkC,KAAZ,SAA2B8D,IAEpCjE,EAAOgF,WAAa,SAACf,GACnB,OAAOhG,EAAYkD,IAAZ,SAA0B8C,IAEnCjE,EAAOiF,eAAiB,SAACX,GACvB,OAAOrG,EAAYQ,OAAZ,gBAA4B6F,GAAUrE,IAK/CD,EAAOkF,iBAAmB,SAAC5E,EAAMC,EAAO+D,EAAQ9D,GAC9C,OAAOvC,EAAYyC,IAAZ,wBACY4D,EADZ,iBAC2BhE,EAD3B,kBACyCC,EADzC,cACoDC,KAG7DR,EAAOmF,oBAAsB,SAAClB,EAASU,GACrC,OAAO1G,EAAYkC,KAAZ,wBAAkCwE,GAAeV,IAE1DjE,EAAOoF,uBAAyB,SAACnB,EAASU,EAAaU,GACrD,OAAOpH,EAAYkD,IAAZ,wBACYwD,EADZ,YAC2BU,GAChCpB,IAGJjE,EAAOsF,uBAAyB,SAACX,EAAaU,GAC5C,OAAOpH,EAAYQ,OAAZ,wBACYkG,EADZ,YAC2BU,GAChCpF,IAGJD,EAAOuF,oBAAsB,SAC3BjF,EACAC,EACAC,EACAmE,EACApD,GAEA,OAAOtD,EAAYyC,IAAZ,wBACYiE,EADZ,iBACgCrE,EADhC,kBAC8CC,EAD9C,cACyDC,EADzD,uBAC+Ee,KAGxFvB,EAAOwF,aAAe,SAACvB,GACrB,OAAOhG,EAAYkC,KAAZ,gBAAkC8D,IAE3CjE,EAAOyF,gBAAkB,SAACxB,GACxB,OAAOhG,EAAYkD,IAAZ,gBAAiC8C,IAE1CjE,EAAO0F,oBAAsB,SAACf,GAC5B,OAAO1G,EAAYQ,OAAZ,uBAAmCkG,GAAe1E,IAK3DD,EAAO2F,kBAAoB,SAACrF,EAAMC,EAAO+D,EAAQ9D,GAC/C,OAAOvC,EAAYyC,IAAZ,wBACY4D,EADZ,iBAC2BhE,EAD3B,kBACyCC,EADzC,cACoDC,KAG7DR,EAAO4F,oBAAsB,SAACtB,EAAQuB,GACpC,OAAO5H,EAAYyC,IAAZ,2BAAoC4D,EAApC,wBAA0DuB,KAEnE7F,EAAO8F,cAAgB,SAAC7B,GACtB,OAAOhG,EAAYkC,KAAZ,gBAAkC8D,IAE3CjE,EAAO+F,iBAAmB,SAAC9B,GACzB,OAAOhG,EAAYkD,IAAZ,gBAAiC8C,IAE1CjE,EAAOgG,qBAAuB,SAACC,GAC7B,OAAOhI,EAAYQ,OAAZ,uBACWwH,GAChBhG,IAMJD,EAAOkG,eAAiB,SAAC5F,EAAMC,EAAO4F,GACpC,OAAOlI,EAAYyC,IAAZ,yBAAkCJ,EAAlC,kBAAgDC,EAAhD,cAA2D4F,KAEpEnG,EAAOoG,YAAc,SAACnC,GACpB,OAAOhG,EAAYkC,KAAZ,YAA8B8D,IAEvCjE,EAAOqG,eAAiB,SAACpC,GACvB,OAAOhG,EAAYkD,IAAZ,YAA6B8C,IAEtCjE,EAAOsG,eAAiB,SAACC,GACvB,OAAOtI,EAAYQ,OAAZ,oBAAgC8H,GAActG,IAKvDD,EAAOwG,cAAgB,SAAClG,EAAMC,EAAOC,GACnC,OAAOvC,EAAYyC,IAAZ,yBAAkCJ,EAAlC,kBAAgDC,EAAhD,cAA2DC,KAEpER,EAAOyG,iBAAmB,SAACxE,GACzB,OAAOhE,EAAYQ,OAAZ,oBAAgCwD,GAAYhC,IAErDD,EAAO0G,UAAY,SAACzC,GAClB,OAAOhG,EAAYkC,KAAZ,YAA8B8D,IAEvCjE,EAAO2G,aAAe,SAAC1C,GACrB,OAAOhG,EAAYkD,IAAZ,YAA6B8C,IAKtCjE,EAAO4G,YAAc,SAACtG,EAAMC,GAC1B,OAAOtC,EAAYyC,IAAZ,sBAA+BJ,EAA/B,kBAA6CC,KAKtDP,EAAO6G,YAAc,SAAC5C,GACpB,OAAOhG,EAAYkC,KAAZ,eAAiC8D,IAG1CjE,EAAO8G,gBAAkB,SAACvE,GACxB,OAAOtE,EAAYyC,IAAZ,8BAAuC6B,KAGhDvC,EAAO+G,uBAAyB,SAACC,GAC/B,OAAO/I,EAAYQ,OAAZ,sBAAkCuI,GAAc/G,IAKzDD,EAAOiH,cAAgB,SAAC3G,EAAMC,EAAOC,GACnC,OAAOvC,EAAYyC,IAAZ,wBAAiCJ,EAAjC,kBAA+CC,EAA/C,cAA0DC,KAEnER,EAAOkH,UAAY,SAACjD,GAClB,OAAOhG,EAAYkC,KAAZ,WAA6B8D,IAEtCjE,EAAOmH,aAAe,SAAClD,GACrB,OAAOhG,EAAYkD,IAAZ,WAA4B8C,IAErCjE,EAAOoH,aAAe,SAACC,GACrB,OAAOpJ,EAAYQ,OAAZ,mBAA+B4I,GAAapH,IAKrDD,EAAOsH,aAAe,SAAChH,EAAMC,EAAOC,GAClC,OAAOvC,EAAYyC,IAAZ,sBAA+BJ,EAA/B,kBAA6CC,EAA7C,cAAwDC,KAEjER,EAAOuH,QAAU,SAACtD,GAChB,OAAOhG,EAAYkC,KAAZ,SAA2B8D,IAEpCjE,EAAOwH,WAAa,SAACvD,GACnB,OAAOhG,EAAYkD,IAAZ,SAA0B8C,IAEnCjE,EAAOyH,WAAa,SAACC,GACnB,OAAOzJ,EAAYQ,OAAZ,iBAA6BiJ,GAAUzH,IAKhDD,EAAO2H,gBAAkB,SAACrH,EAAMC,EAAOC,GACrC,OAAOvC,EAAYyC,IAAZ,+BACmBJ,EADnB,kBACiCC,EADjC,cAC4CC,KAGrDR,EAAO4H,gBAAkB,SAAC3D,GACxB,OAAOhG,EAAYkC,KAAZ,kBAAoC8D,IAE7CjE,EAAO6H,mBAAqB,SAAC5D,GAC3B,OAAOhG,EAAYkD,IAAZ,kBAAmC8C,IAE5CjE,EAAO8H,mBAAqB,SAACC,GAC3B,OAAO9J,EAAYQ,OAAZ,0BACcsJ,GACnB9H,IAMJD,EAAOgI,sBAAwB,SAAC1H,EAAMC,EAAOC,GAC3C,OAAOvC,EAAYyC,IAAZ,gCACoBJ,EADpB,kBACkCC,EADlC,cAC6CC,KAItDR,EAAOiI,kBAAoB,SAAChE,GAC1B,OAAOhG,EAAYkC,KAAZ,mBAAqC8D,IAG9CjE,EAAOkI,4BAA8B,SAACjE,GACpC,OAAOhG,EAAYkD,IAAI,6BAA8B8C,IAGvDjE,EAAOmI,4BAA8B,SAAClE,GACpC,OAAOhG,EAAYkD,IAAI,6BAA8B8C,IAGvDjE,EAAOoI,yBAA2B,SAACC,GACjC,OAAOpK,EAAYQ,OAAZ,2BACe4J,GACpBpI,IAKJD,EAAOsI,gBAAkB,SAAChI,EAAMC,EAAOC,GACrC,OAAOvC,EAAYyC,IAAZ,0BAAmCJ,EAAnC,kBAAiDC,EAAjD,cAA4DC,KAErER,EAAOuI,YAAc,SAACtE,GACpB,OAAOhG,EAAYkC,KAAZ,aAA+B8D,IAExCjE,EAAOwI,eAAiB,SAACvE,GACvB,OAAOhG,EAAYkD,IAAZ,aAA8B8C,IAEvCjE,EAAOyI,eAAiB,SAACjG,GACvB,OAAOvE,EAAYQ,OAAZ,qBAAiC+D,GAAcvC,IAIxDD,EAAO0I,oBAAsB,SAAClG,EAAYlC,EAAMC,EAAOC,GACrD,OAAOvC,EAAYyC,IAAZ,2BACe8B,EADf,iBACkClC,EADlC,kBACgDC,EADhD,cAC2DC,KAGpER,EAAO2I,gBAAkB,SAAC1E,GACxB,OAAOhG,EAAYkC,KAAZ,mBAAqC8D,IAI9CjE,EAAO4I,4BAA8B,SACnCtI,EACAC,EACAsI,EACAC,GAII,IAHJrI,EAGG,uDAHI,MACPD,EAEG,uCADHyB,EACG,uCACH,OAAOhE,EAAYyC,IAAZ,kCACsBmI,EADtB,kBACoCC,EADpC,iBACkDxI,EADlD,kBACgEC,EADhE,qBACkF0B,EADlF,iBACmGxB,EADnG,cAC6GD,KAKtHR,EAAO+I,uBAAyB,SAC9BzI,EACAC,EACAsI,EACAC,EACAtI,EACAyB,GAEA,OAAOhE,EAAYyC,IAAZ,uCAC2BmI,EAD3B,kBACyCC,EADzC,iBACuDxI,EADvD,kBACqEC,EADrE,qBACuF0B,EADvF,cACqGzB,KAK9GR,EAAOgJ,kBAAoB,SAAC1I,EAAMC,EAAOsI,EAAMC,EAAOtI,EAASyB,GAC7D,OAAOhE,EAAYyC,IAAZ,uCAC2BmI,EAD3B,kBACyCC,EADzC,iBACuDxI,EADvD,kBACqEC,EADrE,qBACuF0B,EADvF,cACqGzB,KAK9GR,EAAOiJ,qBAAuB,SAACrI,GAC7B,OAAO3C,EAAYyC,IAAZ,8BAAuCE,KAGhDZ,EAAOkJ,mBAAqB,SAACC,GAC3B,OAAOlL,EAAYyC,IAAIyI,EAAK,CAAEC,aAAc,UAG/BpJ,QCnjBFqJ,EAAyB,yBACzBC,EAA8B,8BAC9BC,EAAoB,oBACpBC,EAAoB,oBAEpBC,EAAmB,SAACxF,GAC/B,MAAO,CACLxD,KAAM4I,EACNpF,YAISyF,EAAiB,SAACzF,GAC7B,MAAO,CACLxD,KAAM8I,EACNtF,YAIS0F,EAAuB,SAAC1F,GACnC,MAAO,CACLxD,KAAM6I,EACNrF,YAUS2F,EAA+B,YAE1CC,EADqBC,GAAbD,UAND,CACLpJ,KAAM6I,K,eCvBGS,EAAiB,iBACjBC,EAAuB,uBACvBC,EAA2B,2BAC3BC,EAAkB,kBAClBC,EAAc,cACdC,GAAyB,yBAgBzBC,GAAoB,SAACpG,GAChC,MAAO,CACLxD,KAAMuJ,EACN/F,YAISqG,GAAgB,SAACrG,GAC5B,MAAO,CACLxD,KAAMyJ,EACNjG,YAISsG,GAAwB,SAACtG,GACpC,MAAO,CACLxD,KAAMwJ,EACNhG,YAISuG,GAAsB,SAACvG,GAClC,MAAO,CACLxD,KAAM2J,GACNnG,YAISwG,GAAY,SAACjL,EAASiB,GACjC,OAAQA,GACN,IAAK,UAuBL,QACE5C,IAAM6M,QAAQlL,EAAS,CACrBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU5D,IAEZ,MArBF,IAAK,QACH0B,IAAMhB,MAAM2C,EAAS,CACnBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU5D,MAiBLwO,GAAqB,uCAAG,8BAAAC,EAAA,sEACZ5K,EAAOmD,YAAY,EAAG,KADV,gBAC3BjG,EAD2B,EAC3BA,KACR4M,GAAMD,UA5EqB5F,EA4EC/G,EAAK2N,SAAS3N,KA3EnC,CACLuD,KAAMsJ,EACN9F,aAuEiC,iCA1ET,IAACA,IA0EQ,OAAH,qDAKrB6G,GAAmB,uCAAG,oCAAAF,EAAA,sDACzBf,EAAuBC,GAAvBD,SAAUkB,EAAajB,GAAbiB,SACZ7N,EAAO6N,IAAWC,MAAMC,mBAC9BpB,EAASqB,YAAO,gBAAD,eAAwBhO,EAAKI,UAA7B,QAAmC,KAClDuM,EAASqB,YAAO,gBAAD,wBAAiChO,EAAKiO,mBAAtC,QAAqD,KAJnC,2CAAH,qDAOnBC,GAAgB,uCAAG,WAAO7I,GAAP,mBAAAqI,EAAA,sEACP5K,EAAO8G,gBAAgBvE,GADhB,gBACtBrF,EADsB,EACtBA,KACJmO,EAAU,GACdnO,EAAK2N,SAASS,KAAI,SAACC,EAAMC,GACvBH,EAAQI,KAAKF,EAAKG,YAEpB5B,GAAMD,SAASW,GAAoBa,IANL,2CAAH,sDAShBM,GAAS,uCAAG,4BAAAf,EAAA,uDACff,EAAaC,GAAbD,UACCqB,YAAO,gBAAD,KAAwB,KACvCrB,EAASqB,YAAO,gBAAD,cAAiC,KAHzB,2CAAH,qDAMhBU,GAAgB,uCAAG,WAAOC,EAAQC,GAAf,mBAAAlB,EAAA,6DACff,EAAaC,GAAbD,SADe,SAGfkC,EAAmBF,EAAOV,YAAYa,MAAM,MAC5C/H,EAAU,IACRgI,KACNF,EAAiBG,OAAS,EACtBL,EAAOV,YAAYgB,WAAW,IAAK,KACnCN,EAAOV,YACblH,EAAQkH,YAAcU,EAAOV,YATR,SAUfnL,EAAOqD,QAAQY,GAVA,OAWrBwG,GAAU,yBAA0B,WACpCE,KACAd,EAASuC,GAAgC,IAbpB,kDAerB3B,GAAU,yBAA0B,SACpCZ,EAASuC,GAAgC,IACzCpP,QAAQC,IAAI,WAAZ,MAjBqB,0DAAH,wDAqBhBoP,GAAuB,uCAAG,WAAOC,EAAQC,GAAf,mBAAA3B,EAAA,+DACf2B,EAAYC,QAAO,SAACC,GAAD,OAAOA,EAAEf,UAAYY,KADzB,mBACvBI,EADuB,cAExB1M,EAAO+G,uBAAuB2F,EAAKpP,IAFX,2CAAH,wDAKvBqP,GAAoB,uCAAG,WAAOL,EAAQ/J,GAAf,eAAAqI,EAAA,6DACrB3G,EAAU,CACdyH,QAASY,EACTM,QAASrK,EACTsK,MAAM,EACNC,QAAQ,EACRC,QAAQ,EACRtO,QAAQ,GAPiB,SASrBuB,EAAO6G,YAAY5C,GATE,2CAAH,wDAYpB+I,GAAc,uCAAG,WAAOC,GAAP,yBAAArC,EAAA,6DACbG,EAAajB,GAAbiB,SACFmC,EAAsBnC,IAAWC,MAAMmC,iBACvCC,EAAiBrC,IAAWC,MAAMoC,eAHnB,SAIEpN,EAAO8G,gBAAgBsG,GAJzB,mBAIblQ,EAJa,EAIbA,KACFqP,EAAcrP,EAAK2N,WAErBqC,EAAoBhB,OAAS,GAPZ,kCAQbgB,EAAoB5B,KAAI,SAACC,EAAMC,GACnCa,GAAwBd,EAAMgB,MATb,QAWnBc,YAAW,WACTJ,EAAgB3B,KAAI,SAACgC,EAAS9B,GAC5BmB,GAAqBW,EAASF,QAE/B,KAfgB,wBAiBnBH,EAAgB3B,KAAI,SAACC,EAAMC,GACzBmB,GAAqBpB,EAAM6B,MAlBV,4CAAH,sDAuBdG,GAAiB,uCAAG,WAAO1B,EAAQC,GAAf,mBAAAlB,EAAA,6DAChBf,EAAaC,GAAbD,SADgB,SAGhBkC,EAAmBF,EAAOV,YAAYa,MAAM,MAC5C/H,EAAU,IACR3G,GAAKuO,EAAOvO,GACpB2G,EAAQgI,KACNF,EAAiBG,OAAS,EACtBL,EAAOV,YAAYgB,WAAW,IAAK,KACnCN,EAAOV,YACblH,EAAQkH,YAAcU,EAAOV,YAVP,SAWhB6B,GAAelB,GAXC,wBAYhB9L,EAAOsD,WAAWW,GAZF,QAatBwG,GAAU,yBAA0B,WACpCE,KACAd,EAASuC,GAAgC,IAfnB,kDAiBtB3B,GAAU,yBAA0B,SACpCZ,EAASuC,GAAgC,IACzCpP,QAAQC,IAAI,WAAZ,MAnBsB,0DAAH,wDAuBjBuQ,GAAmB,uCAAG,WAAOjL,GAAP,SAAAqI,EAAA,+EAElB5K,EAAOuD,eAAehB,GAFJ,OAGxBkI,GAAU,wBAAyB,WACnCE,KAJwB,gDAMxBF,GAAU,yBAA0B,SACpCzN,QAAQC,IAAI,WAAZ,MAPwB,yDAAH,sDAWZwQ,GAAmB,uCAAG,WAAOlL,GAAP,eAAAqI,EAAA,sDAC3BxO,EAAuB,CAC3BC,KAAM,WACJmR,GAAoBjL,IAEtB9F,OAAQ,KACRiR,WAAY,SAGd/Q,SAAOC,QACL,8CACAR,GAX+B,2CAAH,sDAenBuR,GAAiB,uCAAG,WAAOlN,EAAMoL,EAAQC,GAArB,eAAAlB,EAAA,sDACzBxO,EAAuB,CAC3BC,KAAM,WACS,QAAToE,EACFmL,GAAiBC,EAAQC,GAEzByB,GAAkB1B,EAAQC,IAG9BrP,OAAQ,KACRiR,WAAY,SAGd/Q,SAAOC,QACL,8CACAR,GAf6B,2CAAH,0DCjOjBwR,GAAiB,iBACjBC,GAAmB,mBACnB3D,GAAkB,kBAClB4D,GAAwB,wBACxBC,GAA0B,0BAE1BC,GAAe,SAAC/J,GAC3B,MAAO,CACLxD,KAAMmN,GACN3J,YAISgK,GAAiB,SAAChK,GAC7B,MAAO,CACLxD,KAAMoN,GACN5J,YAISqG,GAAgB,SAACrG,GAC5B,MAAO,CACLxD,KAAMyJ,GACNjG,YAISiK,GAAqB,SAACjK,GACjC,MAAO,CACLxD,KAAMqN,GACN7J,YAISkK,GAAuB,SAAClK,GACnC,MAAO,CACLxD,KAAMsN,GACN9J,YAISmK,GAAqB,uCAAG,WAAO9N,EAAMC,GAAb,iCAAAqK,EAAA,6DAAoBpK,EAApB,+BAA8B,GAA9B,kBAEVR,EAAOc,aAAaR,EAAMC,EAAOC,GAFvB,gBAEzBtD,EAFyB,EAEzBA,MACFmR,EAAS,IACR/N,KAAOpD,EAAK2N,SAASvK,KAC5B+N,EAAO9N,MAAQrD,EAAK2N,SAAStK,MAC7B8N,EAAOC,UAAYpR,EAAK2N,SAASyD,UACjCxE,GAAMD,SAASmE,GAAa9Q,EAAK2N,SAAS3N,OAC1C4M,GAAMD,SAASoE,GAAeI,IARG,kDAUjCrR,QAAQC,IAAR,MAViC,0DAAH,wDAcrB0O,GAAS,uCAAG,4BAAAf,EAAA,uDACff,EAAaC,GAAbD,UACCqB,YAAO,gBAAD,KAAwB,KACvCrB,EAASqB,YAAO,gBAAD,WAA8B,KAC7CrB,EAASqB,YAAO,gBAAD,WAA8B,KAC7CrB,EAASqB,YAAO,gBAAD,WAA8B,KALtB,2CAAH,qDAQhBqD,GAAiB,uCAAG,WAAO1C,GAAP,yBAAAjB,EAAA,6DAChBf,EAAuBC,GAAvBD,SAAUkB,EAAajB,GAAbiB,SACZsD,EAAStD,IAAWyD,OAAOH,OACzB/N,EAAgB+N,EAAhB/N,KAAMC,EAAU8N,EAAV9N,MAHU,UAKhB0D,EAAU,IACRwK,SAAW5C,EAAO4C,SAC1BxK,EAAQyK,SAAW7C,EAAO6C,SAC1BzK,EAAQ0K,SAAW9C,EAAO8C,SARJ,UAShB3O,EAAOiB,SAASgD,GATA,QAUtBwG,GAAU,yBAA0B,WACpC2D,GAAsB9N,EAAMC,GAC5BsJ,EAASuC,GAAgC,IAZnB,kDActB3B,GAAU,yBAA0B,SACpCZ,EAASuC,GAAgC,IACzCpP,QAAQC,IAAI,WAAZ,MAhBsB,0DAAH,sDAoBjB2R,GAAkB,uCAAG,WAAO/C,GAAP,yBAAAjB,EAAA,6DACjBf,EAAuBC,GAAvBD,SAAUkB,EAAajB,GAAbiB,SACZsD,EAAStD,IAAWyD,OAAOH,OACzB/N,EAAgB+N,EAAhB/N,KAAMC,EAAU8N,EAAV9N,MAHW,UAMjB0D,EAAU,IACR3G,GAAKuO,EAAOvO,GACpB2G,EAAQwK,SAAW5C,EAAO4C,SAC1BxK,EAAQyK,SAAW7C,EAAO6C,SAC1BzK,EAAQ0K,SAAW9C,EAAO8C,SAVH,UAWjB3O,EAAOkB,YAAY+C,GAXF,QAYvBwG,GAAU,yBAA0B,WACpC2D,GAAsB9N,EAAMC,GAC5BsJ,EAASuC,GAAgC,IAdlB,kDAgBvB3B,GAAU,yBAA0B,SACpCZ,EAASuC,GAAgC,IACzCpP,QAAQC,IAAI,WAAZ,MAlBuB,0DAAH,sDAsBlB4R,GAAoB,uCAAG,WAAO7N,GAAP,qBAAA4J,EAAA,6DACnBG,EAAajB,GAAbiB,SACFsD,EAAStD,IAAWyD,OAAOH,OACzB/N,EAAgB+N,EAAhB/N,KAAMC,EAAU8N,EAAV9N,MAHa,kBAMnBP,EAAOoB,gBAAgBJ,GANJ,OAOzByJ,GAAU,wBAAyB,WACnC2D,GAAsB9N,EAAMC,GARH,kDAUzBkK,GAAU,yBAA0B,SACpCzN,QAAQC,IAAI,WAAZ,MAXyB,0DAAH,sDAeb6R,GAAkB,uCAAG,WAAOrO,EAAMoL,GAAb,eAAAjB,EAAA,sDAC1BxO,EAAuB,CAC3BC,KAAM,WACS,QAAToE,EACF8N,GAAkB1C,GAElB+C,GAAmB/C,IAGvBpP,OAAQ,KACRiR,WAAY,SAGd/Q,SAAOC,QACL,8CACAR,GAf8B,2CAAH,wDAmBlB2S,GAAoB,uCAAG,sCAAAnE,EAAA,sDAC1Bf,EAAuBC,GAAvBD,SAAUkB,EAAajB,GAAbiB,SACZ7N,EAAO6N,IAAWyD,OAAOQ,kBAC/BnF,EAASqB,YAAO,gBAAD,eAAwBhO,EAAKI,UAA7B,QAAmC,KAClDuM,EAASqB,YAAO,gBAAD,qBAA8BhO,EAAKuR,gBAAnC,QAA+C,KAC9D5E,EAASqB,YAAO,gBAAD,qBAA8BhO,EAAKwR,gBAAnC,QAA+C,KAL5B,2CAAH,qDAQpBO,GAAoB,uCAAG,WAAOjO,GAAP,eAAA4J,EAAA,sDAC5BxO,EAAuB,CAC3BC,KAAM,WACJwS,GAAqB7N,IAEvBvE,OAAQ,KACRiR,WAAY,SAGd/Q,SAAOC,QACL,8CACAR,GAXgC,2CAAH,sDCvJpB8S,GAAyB,yBACzBC,GAAqB,qBACrBC,GAAqB,qBAgBrBC,GAAkB,SAACpL,GAC9B,MAAO,CACLxD,KAAM0O,GACNlL,YAISqL,GAAoB,uCAAG,8BAAA1E,EAAA,+EAET5K,EAAOwD,gBAAgB,EAAG,KAFjB,gBAExBtG,EAFwB,EAExBA,KACR4M,GAAMD,UAxB0B5F,EAwBG/G,EAAK2N,SAAS3N,KAvB5C,CACLuD,KAAMyO,GACNjL,aAkBgC,gDAKhCjH,QAAQC,IAAR,MALgC,kCArBD,IAACgH,IAqBA,oBAAH,qDASpBsL,GAAgB,uCAAG,WAAO7L,GAAP,iBAAAkH,EAAA,+EAEL5K,EAAOyD,YAAY,EAAG,IAAKC,GAFtB,gBAEpBxG,EAFoB,EAEpBA,KACR4M,GAAMD,SAASwF,GAAgBnS,EAAK2N,SAAS3N,OAHjB,gDAK5BF,QAAQC,IAAR,MAL4B,yDAAH,sDAShBuS,GAAgB,uCAAG,8BAAA5E,EAAA,+EAEL5K,EAAO4G,YAAY,EAAG,KAFjB,gBAEpB1J,EAFoB,EAEpBA,KACR4M,GAAMD,UAnCsB5F,EAmCG/G,EAAK2N,SAAS3N,KAlCxC,CACLuD,KAAM2O,GACNnL,aA6B4B,gDAK5BjH,QAAQC,IAAR,MAL4B,kCAhCD,IAACgH,IAgCA,oBAAH,qDCvChBwL,GAAuB,uBACvBvF,GAAkB,kBAClBwF,GAAyB,yBACzBC,GAA2B,2BAC3BC,GAAoB,oBACpBC,GAAgC,gCAEhCC,GAAoB,SAAC7L,GAChC,MAAO,CACLxD,KAAMgP,GACNxL,YAIS8L,GAA4B,SAAC9L,GACxC,MAAO,CACLxD,KAAMoP,GACN5L,YAIS+L,GAAkB,SAAC/L,GAC9B,MAAO,CACLxD,KAAMmP,GACN3L,YAISqG,GAAgB,SAACrG,GAC5B,MAAO,CACLxD,KAAMyJ,GACNjG,YAISgM,GAAsB,SAAChM,GAClC,MAAO,CACLxD,KAAMiP,GACNzL,YAISiM,GAAwB,SAACjM,GACpC,MAAO,CACLxD,KAAMkP,GACN1L,YAKEkM,GAAqB,uCAAG,WAAOlO,GAAP,qBAAA2I,EAAA,6DACpBG,EAAajB,GAAbiB,SACFsD,EAAStD,IAAWqF,OAAO/B,OACzB/N,EAAgB+N,EAAhB/N,KAAMC,EAAU8N,EAAV9N,MAHc,kBAMpBP,EAAOyG,iBAAiBxE,GANJ,OAO1BwI,GAAU,wBAAyB,WACnC4F,GAA2B/P,EAAMC,GARP,kDAU1BkK,GAAU,yBAA0B,SACpCzN,QAAQC,IAAI,WAAZ,MAX0B,0DAAH,sDAerBqT,GAAkB,uCAAG,WAAOzE,GAAP,yBAAAjB,EAAA,6DACjBf,EAAuBC,GAAvBD,SAAUkB,EAAajB,GAAbiB,SACZsD,EAAStD,IAAWqF,OAAO/B,OACzB/N,EAAgB+N,EAAhB/N,KAAMC,EAAU8N,EAAV9N,MAHW,UAKjB0D,EAAU,IACRgI,KAAOJ,EAAOV,YACtBlH,EAAQkH,YAAcU,EAAOV,YAPN,SAQjBnL,EAAO0G,UAAUzC,GARA,OASvBwG,GAAU,yBAA0B,WACpC4F,GAA2B/P,EAAMC,GACjCsJ,EAASuC,GAAgC,IAXlB,kDAavB3B,GAAU,yBAA0B,SACpCZ,EAASuC,GAAgC,IACzCpP,QAAQC,IAAI,WAAZ,MAfuB,0DAAH,sDAmBlBsT,GAAmB,uCAAG,WAAO1E,GAAP,yBAAAjB,EAAA,6DAClBf,EAAuBC,GAAvBD,SAAUkB,EAAajB,GAAbiB,SACZsD,EAAStD,IAAWqF,OAAO/B,OACzB/N,EAAgB+N,EAAhB/N,KAAMC,EAAU8N,EAAV9N,MAHY,UAMlB0D,EAAU,IACR3G,GAAKuO,EAAOvO,GACpB2G,EAAQgI,KAAOJ,EAAOV,YACtBlH,EAAQkH,YAAcU,EAAOV,YATL,UAUlBnL,EAAO2G,aAAa1C,GAVF,QAWxBwG,GAAU,yBAA0B,WACpC4F,GAA2B/P,EAAMC,GACjCsJ,EAASuC,GAAgC,IAbjB,kDAexB3B,GAAU,yBAA0B,SACpCZ,EAASuC,GAAgC,IACzCpP,QAAQC,IAAI,WAAZ,MAjBwB,0DAAH,sDAsBZ0O,GAAS,uCAAG,4BAAAf,EAAA,uDACff,EAAaC,GAAbD,UACCqB,YAAO,iBAAD,KAAyB,KACxCrB,EAASqB,YAAO,iBAAD,cAAkC,KAH1B,2CAAH,qDAMTsF,GAAqB,uCAAG,oCAAA5F,EAAA,sDAC3Bf,EAAuBC,GAAvBD,SAAUkB,EAAajB,GAAbiB,SACZ7N,EAAO6N,IAAWqF,OAAOK,mBAC/B5G,EAASqB,YAAO,iBAAD,eAAyBhO,EAAKI,UAA9B,QAAoC,KACnDuM,EAASqB,YAAO,iBAAD,wBAAkChO,EAAK+O,YAAvC,QAA+C,KAJ3B,2CAAH,qDAOrBoE,GAA0B,uCAAG,WACxC/P,EACAC,GAFwC,mCAAAqK,EAAA,6DAGxCpK,EAHwC,+BAG9B,GACVkQ,EAJwC,kDAOf1Q,EAAOwG,cAAclG,EAAMC,EAAOC,GAPnB,gBAO9BtD,EAP8B,EAO9BA,MACFmR,EAAS,IACR/N,KAAOpD,EAAK2N,SAASvK,KAC5B+N,EAAO9N,MAAQrD,EAAK2N,SAAStK,MAC7B8N,EAAOC,UAAYpR,EAAK2N,SAASyD,UAC7BoC,EACF5G,GAAMD,SAASkG,GAA0B7S,EAAK2N,SAAS3N,OAEvD4M,GAAMD,SAASiG,GAAkB5S,EAAK2N,SAAS3N,OAEjD4M,GAAMD,SAASmG,GAAgB3B,IAjBO,kDAmBtCrR,QAAQC,IAAR,MAnBsC,0DAAH,wDAuB1B0T,GAAmB,uCAAG,WAAOlQ,EAAMoL,GAAb,eAAAjB,EAAA,sDAC3BxO,EAAuB,CAC3BC,KAAM,WACS,QAAToE,EACF6P,GAAmBzE,GAEnB0E,GAAoB1E,IAGxBpP,OAAQ,KACRiR,WAAY,SAGd/Q,SAAOC,QACL,8CACAR,GAf+B,2CAAH,wDAmBnBwU,GAAqB,uCAAG,WAAO3O,GAAP,eAAA2I,EAAA,sDAC7BxO,EAAuB,CAC3BC,KAAM,WACJ8T,GAAsBlO,IAExBxF,OAAQ,KACRiR,WAAY,SAGd/Q,SAAOC,QACL,8CACAR,GAXiC,2CAAH,sDCjKrByU,GAAqB,qBACrB3G,GAAkB,kBAClB4G,GAAuB,uBACvBC,GAAyB,yBACzBC,GAAkB,kBAElBC,GAAkB,SAAChN,GAC9B,MAAO,CACLxD,KAAMoQ,GACN5M,YAISiN,GAAgB,SAACjN,GAC5B,MAAO,CACLxD,KAAMuQ,GACN/M,YAISqG,GAAgB,SAACrG,GAC5B,MAAO,CACLxD,KAAMyJ,GACNjG,YAISkN,GAAoB,SAAClN,GAChC,MAAO,CACLxD,KAAMqQ,GACN7M,YAISmN,GAAsB,SAACnN,GAClC,MAAO,CACLxD,KAAMsQ,GACN9M,YAKEoN,GAAmB,uCAAG,WAAO/M,GAAP,qBAAAsG,EAAA,6DAClBG,EAAajB,GAAbiB,SACFsD,EAAStD,IAAWuG,MAAMjD,OACxB/N,EAAgB+N,EAAhB/N,KAAMC,EAAU8N,EAAV9N,MAHY,kBAKlBP,EAAOiF,eAAeX,GALJ,OAMxBmG,GAAU,wBAAyB,WACnC8G,GAAyBjR,EAAMC,GAPP,kDASxBkK,GAAU,yBAA0B,SACpCzN,QAAQC,IAAI,WAAZ,MAVwB,0DAAH,sDAcnBuU,GAAgB,uCAAG,WAAO3F,GAAP,2BAAAjB,EAAA,6DACff,EAAuBC,GAAvBD,SAAUkB,EAAajB,GAAbiB,SACZsD,EAAStD,IAAWuG,MAAMjD,OACxB/N,EAAgB+N,EAAhB/N,KAAMC,EAAU8N,EAAV9N,MAHS,UAKf0D,EAAU,IACRgI,KAAOJ,EAAOI,KACtBhI,EAAQkH,YAAcU,EAAOV,YAC7BlH,EAAQwN,MAAR,UAAgB5F,EAAO6F,gBAAvB,QAAmC,GARd,UASf1R,EAAO+E,QAAQd,GATA,QAUrBwG,GAAU,yBAA0B,WACpC8G,GAAyBjR,EAAMC,GAC/BsJ,EAASuC,GAAgC,IAZpB,kDAcrB3B,GAAU,yBAA0B,SACpCZ,EAASuC,GAAgC,IACzCpP,QAAQC,IAAI,WAAZ,MAhBqB,0DAAH,sDAoBhB0U,GAAiB,uCAAG,WAAO9F,GAAP,2BAAAjB,EAAA,6DACxBd,GAAMD,SAASuC,GAAkC,IACzCvC,EAAuBC,GAAvBD,SAAUkB,EAAajB,GAAbiB,SACZsD,EAAStD,IAAWuG,MAAMjD,OACxB/N,EAAgB+N,EAAhB/N,KAAMC,EAAU8N,EAAV9N,MAJU,UAMhB0D,EAAU,IACR3G,GAAKuO,EAAOvO,GACpB2G,EAAQgI,KAAOJ,EAAOI,KACtBhI,EAAQwN,MAAR,UAAgB5F,EAAO6F,gBAAvB,QAAmC,GACnCzN,EAAQkH,YAAcU,EAAOV,YAVP,UAWhBnL,EAAOgF,WAAWf,GAXF,QAYtBwG,GAAU,yBAA0B,WACpC8G,GAAyBjR,EAAMC,GAC/BuJ,GAAMD,SAASuC,GAAkC,IACjDvC,EAASuC,GAAgC,IAfnB,kDAiBtB3B,GAAU,yBAA0B,SACpCX,GAAMD,SAASuC,GAAkC,IACjDvC,EAASuC,GAAgC,IACzCpP,QAAQC,IAAI,WAAZ,MApBsB,0DAAH,sDAyBV0O,GAAS,uCAAG,4BAAAf,EAAA,uDACff,EAAaC,GAAbD,UACCqB,YAAO,eAAD,KAAuB,KACtCrB,EAASqB,YAAO,eAAD,OAAyB,KACxCrB,EAASqB,YAAO,eAAD,cAAgC,KAC/CrB,EAASqB,YAAO,eAAD,WAA6B,KALrB,2CAAH,qDAQT0G,GAAmB,uCAAG,wCAAAhH,EAAA,sDACzBf,EAAuBC,GAAvBD,SAAUkB,EAAajB,GAAbiB,SACZ7N,EAAO6N,IAAWuG,MAAMO,kBAE9BhI,EAASqB,YAAO,eAAD,eAAuBhO,EAAKI,UAA5B,QAAkC,KACjDuM,EAASqB,YAAO,eAAD,iBAAyBhO,EAAK+O,YAA9B,QAAsC,KACrDpC,EAASqB,YAAO,eAAD,wBAAgChO,EAAKiO,mBAArC,QAAoD,KACnEtB,EAASqB,YAAO,eAAD,qBAA6BhO,EAAKuU,aAAlC,QAA2C,KAPzB,2CAAH,qDAUnBF,GAAwB,uCAAG,WAAOjR,EAAMC,GAAb,iCAAAqK,EAAA,6DAAoBpK,EAApB,+BAA8B,GAA9B,kBAEbR,EAAO8E,YAAYxE,EAAMC,EAAOC,GAFnB,gBAE5BtD,EAF4B,EAE5BA,MACFmR,EAAS,IACR/N,KAAOpD,EAAK2N,SAASvK,KAC5B+N,EAAO9N,MAAQrD,EAAK2N,SAAStK,MAC7B8N,EAAOC,UAAYpR,EAAK2N,SAASyD,UACjCxE,GAAMD,SAASoH,GAAgB/T,EAAK2N,SAAS3N,OAC7C4M,GAAMD,SAASqH,GAAc7C,IARO,kDAUpCrR,QAAQC,IAAR,MAVoC,0DAAH,wDAcxB6U,GAAiB,uCAAG,WAAOrR,EAAMoL,GAAb,eAAAjB,EAAA,sDACzBxO,EAAuB,CAC3BC,KAAM,WACS,QAAToE,EACF+Q,GAAiB3F,GAEjB8F,GAAkB9F,IAGtBpP,OAAQ,KACRiR,WAAY,SAGd/Q,SAAOC,QACL,8CACAR,GAf6B,2CAAH,wDAmBjB2V,GAAmB,uCAAG,WAAOzN,GAAP,eAAAsG,EAAA,sDAC3BxO,EAAuB,CAC3BC,KAAM,WACJgV,GAAoB/M,IAEtB7H,OAAQ,KACRiR,WAAY,SAGd/Q,SAAOC,QACL,8CACAR,GAX+B,2CAAH,sDCxJnB4V,GAAwB,wBACxB9H,GAAkB,kBAClB+H,GAA0B,0BAC1BC,GAA4B,4BAC5BC,GAA0B,0BAE1BC,GAAqB,SAACnO,GACjC,MAAO,CACLxD,KAAMuR,GACN/N,YAISoO,GAAuB,SAACpO,GACnC,MAAO,CACLxD,KAAM0R,GACNlO,YAISqG,GAAgB,SAACrG,GAC5B,MAAO,CACLxD,KAAMyJ,GACNjG,YAISqO,GAAuB,SAACrO,GACnC,MAAO,CACLxD,KAAMwR,GACNhO,YAISsO,GAAyB,SAACtO,GACrC,MAAO,CACLxD,KAAMyR,GACNjO,YAKEuO,GAAsB,uCAAG,WAAOnL,GAAP,qBAAAuD,EAAA,6DACrBG,EAAajB,GAAbiB,SACFsD,EAAStD,IAAWqF,OAAO/B,OACzB/N,EAAgB+N,EAAhB/N,KAAMC,EAAU8N,EAAV9N,MAHe,kBAKrBP,EAAOoH,aAAaC,GALC,OAM3BoD,GAAU,wBAAyB,WACnCgI,GAA4BnS,EAAMC,GAPP,kDAS3BkK,GAAU,yBAA0B,SACpCzN,QAAQC,IAAI,WAAZ,MAV2B,0DAAH,sDActByV,GAAmB,uCAAG,WAAO7G,GAAP,yBAAAjB,EAAA,6DAClBG,EAAuBjB,GAAvBiB,SAAUlB,EAAaC,GAAbD,SACZwE,EAAStD,IAAWqF,OAAO/B,OACzB/N,EAAgB+N,EAAhB/N,KAAMC,EAAU8N,EAAV9N,MAHY,UAKlB0D,EAAU,IACRgI,KAAOJ,EAAOI,KACtBhI,EAAQkH,YAAcU,EAAOV,YAPL,SAQlBnL,EAAOkH,UAAUjD,GARC,OASxBwG,GAAU,yBAA0B,WACpCgI,GAA4BnS,EAAMC,GAClCsJ,EAASuC,GAAgC,IAXjB,kDAaxB3B,GAAU,yBAA0B,SACpCZ,EAASuC,GAAgC,IACzCpP,QAAQC,IAAI,WAAZ,MAfwB,0DAAH,sDAmBnB0V,GAAoB,uCAAG,WAAO9G,GAAP,yBAAAjB,EAAA,6DACnBG,EAAuBjB,GAAvBiB,SAAUlB,EAAaC,GAAbD,SACZwE,EAAStD,IAAWqF,OAAO/B,OACzB/N,EAAgB+N,EAAhB/N,KAAMC,EAAU8N,EAAV9N,MAHa,UAKnB0D,EAAU,IACR3G,GAAKuO,EAAOvO,GACpB2G,EAAQgI,KAAOJ,EAAOI,KACtBhI,EAAQkH,YAAcU,EAAOV,YARJ,UASnBnL,EAAOmH,aAAalD,GATD,QAUzBwG,GAAU,yBAA0B,WACpCgI,GAA4BnS,EAAMC,GAClCsJ,EAASuC,GAAgC,IAZhB,kDAczB3B,GAAU,yBAA0B,SACpCZ,EAASuC,GAAgC,IACzCpP,QAAQC,IAAI,WAAZ,MAhByB,0DAAH,sDAqBb0O,GAAS,uCAAG,4BAAAf,EAAA,uDACff,EAAaC,GAAbD,UACCqB,YAAO,+BAAD,OAAyC,KACxDrB,EAASqB,YAAO,+BAAD,cAAgD,KAHxC,2CAAH,qDAMT0H,GAAsB,uCAAG,sCAAAhI,EAAA,sDAC5Bf,EAAuBC,GAAvBD,SAAUkB,EAAajB,GAAbiB,SACZ7N,EAAO6N,IAAW8H,qBAAqBC,oBAC7CjJ,EAASqB,YAAO,+BAAD,eAAuChO,EAAKI,UAA5C,QAAkD,KACjEuM,EAASqB,YAAO,+BAAD,iBAAyChO,EAAK+O,YAA9C,QAAsD,KACrEpC,EACEqB,YACE,+BADI,wBAGJhO,EAAKiO,mBAHD,QAGgB,KATY,2CAAH,qDActBsH,GAA2B,uCAAG,WACzCnS,EACAC,GAFyC,iCAAAqK,EAAA,6DAGzCpK,EAHyC,+BAG/B,GAH+B,kBAMhBR,EAAOiH,cAAc3G,EAAMC,EAAOC,GANlB,gBAM/BtD,EAN+B,EAM/BA,MACFmR,EAAS,IACR/N,KAAOpD,EAAK2N,SAASvK,KAC5B+N,EAAO9N,MAAQrD,EAAK2N,SAAStK,MAC7B8N,EAAOC,UAAYpR,EAAK2N,SAASyD,UACjCxE,GAAMD,SAASuI,GAAmBlV,EAAK2N,SAAS3N,OAChD4M,GAAMD,SAASwI,GAAqBhE,IAZG,kDAcvCrR,QAAQC,IAAR,MAduC,0DAAH,wDAkB3B8V,GAAoB,uCAAG,WAAOtS,EAAMoL,GAAb,eAAAjB,EAAA,sDAC5BxO,EAAuB,CAC3BC,KAAM,WACS,QAAToE,EACFiS,GAAoB7G,GAEpB8G,GAAqB9G,IAGzBpP,OAAQ,KACRiR,WAAY,SAGd/Q,SAAOC,QACL,8CACAR,GAfgC,2CAAH,wDAmBpB4W,GAAsB,uCAAG,WAAO3L,GAAP,eAAAuD,EAAA,sDAC9BxO,EAAuB,CAC3BC,KAAM,WACJmW,GAAuBnL,IAEzB5K,OAAQ,KACRiR,WAAY,SAGd/Q,SAAOC,QACL,8CACAR,GAXkC,2CAAH,sDCzJtB6W,GAAa,uCAAG,sBAAArI,EAAA,sEACrBsI,GAAmC,EAAG,IADjB,uBAErBC,KAFqB,uBAGrBC,KAHqB,uBAIrBA,KAJqB,wBAKrBC,GAAyC,EAAG,IALvB,yBAMrBC,GAAsC,EAAG,IANpB,yBAOrBC,GAAwD,EAAG,IAPtC,4CAAH,qDCAbC,GAAwB,wBACxBC,GAAuB,uBACvBC,GAAkB,kBAQlBC,GAAgB,SAAC1P,GAC5B,MAAO,CACLxD,KAAMgT,GACNxP,YAGS2P,GAAgB,SAAC3P,GAC5B,MAAO,CACLxD,KAAMiT,GACNzP,YAqBE4P,GAAU,uCAAG,WAAO3W,GAAP,SAAA0N,EAAA,+EACjB,IAAI7L,SAAQ,SAACC,EAASI,GArCM,IAAC6E,EAsC3B6F,GAAMD,UAtCqB5F,EAsCG/G,EAAKA,KAAK2N,SAASiJ,YArC5C,CACLrT,KAAM+S,GACNvP,oBAoCO/G,EAAKA,KAAK2N,SAASiJ,YAC1BhK,GAAMD,SAAS8J,GAAczW,EAAKA,KAAK2N,WACvC7L,QALe,2CAAH,sDAQH+U,GAAiB,uCAAG,WAAOlI,GAAP,mBAAAjB,EAAA,sDACvB6D,EAAuB5C,EAAvB4C,SAAUE,EAAa9C,EAAb8C,SACZ1K,EAAU,CAAEwK,WAAUE,YAE5B3R,QAAQC,IAAI,mBAAoBwR,EAAUE,GAE1C7E,GAAMD,SAASJ,GAAiB,IAEhCzJ,EAAOE,YAAY+D,GAChB+P,MAAK,SAAC9W,GACL2W,GAAW3W,GAAM8W,MAAK,WACpB3G,YAAW,WACT1R,EAAQ8P,KAAK,cACbnP,OAAOC,SAASC,SAChBsN,GAAMD,SAASJ,GAAiB,MAC/B,WAGNwK,OAAM,SAACC,GAEN,GADApK,GAAMD,SAASJ,GAAiB,IAC5ByK,EAAY,CAAC,IAAD,QACRnX,EAAM,OAAGmX,QAAH,IAAGA,GAAH,UAAGA,EAAYhY,gBAAf,iBAAG,EAAsBgB,YAAzB,aAAG,EAA4BH,OACrCoX,EAAoB,iBAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAYhY,gBAAf,aAAG,EAAsBgB,YAAzB,QAAiC,KAC3D,GAAIiX,EACF,GAAe,MAAXpX,EAAgB,CAClB,IAAMF,EAAQ,CACdA,QAAe,GACfA,EAAM2C,QAAU2U,EAAqB3U,QACrCsK,GAAMD,SAAS+J,GAAc/W,SACxB,GAAe,MAAXE,EAAgB,CACzB,IAAMF,EAAQ,CACdA,QAAe,GACfA,EAAM2C,QAAU2U,EAAqB3U,QACrCsK,GAAMD,SAAS+J,GAAc/W,SAjCR,2CAAH,sDCjDjBuX,GAAe,CAC1BN,YAAa,GACbO,WAAY,KACZC,OAAQ,KACRzX,MAAO,CACLE,QAAQ,EACRyC,QAAS,KCVN,IAAM+U,GAAW,SAACC,GACvB7Y,EAAQ8P,KAAK+I,GACblY,OAAOC,SAASC,UAGLiY,GAAW,SAACC,EAAanU,GAIpC,IAHA,IAAMoU,EAAc,GACdC,EAAaF,EAAcnU,EAAQA,EAAQ,EAC3CsU,EAAWD,EAAarU,EACrBuU,EAAmB,IAAfF,EAAmB,EAAIA,EAAYE,GAAKD,EAAUC,IAC7DH,EAAYlJ,KAAKqJ,GAEnB,OAAOH,GAGII,GAAY,SAACC,EAAKnK,GAC7B,IAAMoK,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMtK,EAASoK,EAAOG,WACtDH,EAAOI,cAAcL,IAGVM,GAAiB,CAC5B,CACEhY,GAAG,aACHiY,MAAO,KACPC,MAAO,UAET,CACElY,GAAG,aACHiY,MAAO,KACPC,MAAO,kBAIEC,GAAa,CACxB,CACEnY,GAAG,SACHiY,MAAO,KACPC,MAAO,WAET,CACElY,GAAG,SACHiY,MAAO,KACPC,MAAO,MAET,CACElY,GAAG,SACHiY,MAAO,KACPC,MAAO,aAIEE,GAAqB,CAChC,CACEpY,GAAG,SACHiY,MAAO,KACPC,MAAO,gBAET,CACElY,GAAG,SACHiY,MAAO,KACPC,MAAO,kBAIEG,GAAe,CAC1B,CACErY,GAAG,WACHiY,MAAO,KACPC,MAAO,YAET,CACElY,GAAG,WACHiY,MAAO,KACPC,MAAO,YAET,CACElY,GAAG,WACHiY,MAAO,KACPC,MAAO,aAIEI,GAAuB,CAClC,CACEtY,GAAG,WACHiY,MAAO,KACPC,MAAO,YAET,CACElY,GAAG,WACHiY,MAAO,KACPC,MAAO,aAET,CACElY,GAAG,WACHiY,MAAO,KACPC,MAAO,YAET,CACElY,GAAG,WACHiY,MAAO,KACPC,MAAO,aAIEK,GAAsB,CACjC,CACEvY,GAAG,WACHiY,MAAO,KACPC,MAAO,WAET,CACElY,GAAG,WACHiY,MAAO,KACPC,MAAO,YAET,CACElY,GAAG,WACHiY,MAAO,KACPC,MAAO,oBAET,CACElY,GAAG,WACHiY,MAAO,KACPC,MAAO,cAIEM,GAA4B,CACvC,CACExY,GAAG,WACHiY,MAAO,KACPC,MAAO,uBAET,CACElY,GAAG,WACHiY,MAAO,KACPC,MAAO,cAET,CACElY,GAAG,WACHiY,MAAO,KACPC,MAAO,iBAET,CACElY,GAAG,WACHiY,MAAO,KACPC,MAAO,UAsBEO,GAAgB,CAC3B,CACEzY,GAAG,YACHiY,MAAO,OACPC,MAAO,gBAET,CACElY,GAAG,YACHiY,MAAO,QACPC,MAAO,qB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","file":"static/js/main.4b6b0b0f.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL || \"\",\n});\nexport default history;\n","// import * as ActionAuth from \"../../Auth/Store/AuthAction\";\n// import * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\n\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { toastr } from \"react-redux-toastr\";\n\n// function* getToken() {\n//   return yield select(AuthSelector.Token());\n// }\n\n// export function* getCommonConfigHeader() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n// }\n// export function* getCommonConfigHeaderFormData() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"multipart/form-data\",\n//     },\n//   };\n// }\n\nexport function* handleErrorProcess(action) {\n  let toastMessage;\n\n  if (!action.errorData.response || action.errorData.response === undefined) {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        window.location.reload();\n      },\n      okText: \"Ya\",\n      disableCancel: true,\n    };\n\n    toastr.confirm(\n      \"Koneksi terputus, cek koneksi anda dan dimuat ulang\",\n      toastrConfirmOptions\n    );\n  }\n\n  if (action.errorData.response) {\n    const error = action.errorData;\n    const responseStatus = error?.response.status;\n    if (responseStatus === 401) {\n      // yield put(ActionAuth.renewToken(action));\n      console.log(\"=== Token Expired!\");\n    } else if (responseStatus === 500) {\n      if (error.response.data.ErrorCode === \"4201\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      }\n      if (error.response.data.ErrorCode === \"5100\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      } else {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error.response.data.MessageKey} />\n          </span>\n        );\n      }\n    } else if (responseStatus === 403) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={\"forbiddenError\"} />\n        </span>\n      );\n    } else {\n      try {\n        const dataErr = error.response.data?.Data?.Failures[0]?.ErrorKey;\n        if (dataErr) {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id={dataErr} />\n            </span>\n          );\n        } else {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id=\"unknownError\" />\n            </span>\n          );\n        }\n      } catch (error) {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error} />\n          </span>\n        );\n      }\n    }\n  } else {\n    if (action.errorData.response.data.Message) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={action.errorData.response.data.Message} />\n        </span>\n      );\n    }\n  }\n  if (toastMessage) {\n    toast.error(toastMessage);\n  }\n}\n\nexport function* handleErrorAction() {\n  yield takeEvery(\"HANDLE_ERROR_SAGA\", handleErrorProcess);\n}\n","import { all, fork } from \"redux-saga/effects\";\n// import {\n//   getUserDetailAction,\n//   loginUserAction,\n//   registerUserAction,\n//   updateUserAction,\n// } from \"../../Auth/Saga/AuthSaga\";\nimport { handleErrorAction } from \"../../app/Saga/AppSaga\";\n\nexport default function* () {\n  yield all([\n    fork(handleErrorAction),\n    // fork(registerUserAction),\n    // fork(getUserDetailAction),\n    // fork(loginUserAction),\n    // fork(updateUserAction),\n  ]);\n}\n","// First we need to import axios.js\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\n\n// Next we make an 'instance' of it\nconst ConfigAxios = axios.create({\n  // .. where we make our configurations\n  baseURL: \"http://103.158.192.161:3000\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Authorization\",\n  },\n  timeout: 15000,\n});\nConfigAxios.defaults.headers.delete = {\n  \"Content-Type\": \"application/json\",\n};\n\n// Where you would set stuff like your 'Authorization' header, etc ...\n// ConfigAxios.defaults.headers.common[\"Authorization\"] =\n//   \"AUTH TOKEN FROM INSTANCE\";\n\n// Also add/ configure interceptors && all the other cool stuff\nConfigAxios.interceptors.request.use(\n  (requestFulfilled) => {\n    if (requestFulfilled.method === \"get\") {\n      requestFulfilled.data = true;\n    }\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(requestFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-request-fulfilled\",\n        JSON.parse(JSON.stringify(requestFulfilled))\n      );\n    }\n    return Promise.resolve(requestFulfilled);\n  },\n  (requestRejected) => {\n    if (!_.isEmpty(requestRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-request-rejected\",\n          JSON.parse(\n            JSON.stringify(requestRejected.response || requestRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(requestRejected);\n  }\n);\n\nConfigAxios.interceptors.response.use(\n  (responseFulfilled) => {\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(responseFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-response-fulfilled\",\n        JSON.parse(JSON.stringify(responseFulfilled))\n      );\n    }\n    return Promise.resolve(responseFulfilled);\n  },\n  (responseRejected) => {\n    if (responseRejected.response && responseRejected.response.data) {\n      if (responseRejected.response.data.status === 400) {\n        toast.warning(responseRejected.response.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      } else {\n        toast.error(\"Request Timeout!\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n    if (!_.isEmpty(responseRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-response-rejected\",\n          JSON.parse(\n            JSON.stringify(responseRejected.response || responseRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(responseRejected);\n  }\n);\n\nexport default ConfigAxios;\n","import ConfigAxios from \"./ConfigAxios\";\n\nconst Invoke = {};\nconst headersConfigDelete = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  data: {},\n};\n\nInvoke.submitLogin = (data) => {\n  return ConfigAxios.post(\"/login\", data);\n};\n\nInvoke.submitLoginEmployee = (data) => {\n  return ConfigAxios.post(\"/m_auth\", data);\n};\n\nInvoke.getListServices = (page, limit, keyword, type, status) => {\n  return ConfigAxios.get(\n    `/services?page=${page}&limit=${limit}&q=${keyword}&type=${type}&status=${status}`\n  );\n};\n\nInvoke.deleteJobServiceById = (jobId) => {\n  return ConfigAxios.delete(`/services/${jobId}`, headersConfigDelete);\n};\n\nInvoke.getOneServices = (jobId) => {\n  return ConfigAxios.get(`/services/${jobId}`);\n};\n\n// === Admin API : ===\nInvoke.getListAdmin = (page, limit, keyword = \"\") => {\n  return ConfigAxios.get(`/admins?page=${page}&limit=${limit}&q=${keyword}`);\n};\n\nInvoke.getAdminById = (adminId) => {\n  return ConfigAxios.get(`/admins/${adminId}`);\n};\n\nInvoke.addAdmin = (data) => {\n  return ConfigAxios.post(\"/admins\", data);\n};\n\nInvoke.updateAdmin = (data) => {\n  return ConfigAxios.put(\"/admins\", data);\n};\n\nInvoke.deleteAdminById = (adminId) => {\n  return ConfigAxios.delete(`/admins/${adminId}`, headersConfigDelete);\n};\n// === End Admin API ===\n\n// === Admin - Roles API : ===\nInvoke.getListAdminRoles = (adminId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${adminId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getAdminRolesById = (customerId) => {\n  return ConfigAxios.get(`/admins/roles${customerId}`);\n};\n\nInvoke.addAdminRoles = (data) => {\n  return ConfigAxios.post(\"/admins/roles\", data);\n};\n\nInvoke.updateAdminRoles = (data) => {\n  return ConfigAxios.put(\"/admins/roles\", data);\n};\n\nInvoke.deleteAdminRolesById = (customerId) => {\n  return ConfigAxios.delete(`/admins/roles${customerId}`);\n};\n// === End Admin - Roles API ===\n\n// === Employee - Roles API : ===\nInvoke.getEmployeeRoles = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\n// === Employee - Tools API : ===\nInvoke.getEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/tools/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.addEmployeeRole = (data) => {\n  return ConfigAxios.post(`/employees/roles`, data);\n};\n\nInvoke.deleteEmployeeRole = (id) => {\n  return ConfigAxios.delete(`/employees/roles/${id}`, headersConfigDelete);\n};\n// === End Employee - Roles API ===\n\n// === Customers API ===\nInvoke.getCustomerList = (page, limit, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/customers?page=${page}&limit=${limit}&q=${keyword}&branchId=${branchId}`\n  );\n};\nInvoke.getCustomerById = (customerId) => {\n  return ConfigAxios.get(`/customers/${customerId}`);\n};\n\nInvoke.addCustomer = (data) => {\n  return ConfigAxios.post(\"/customers\", data);\n};\n\nInvoke.updateCustomer = (data) => {\n  return ConfigAxios.put(\"/customers\", data);\n};\n\nInvoke.deleteCustomerById = (customerId) => {\n  return ConfigAxios.delete(`/customers/${customerId}`, headersConfigDelete);\n};\n// === End Customers API ===\n\n// === Employee API === :\nInvoke.getEmployeeList = (\n  page,\n  limit,\n  keyword,\n  roleId,\n  branchId,\n  divisionId\n) => {\n  return ConfigAxios.get(\n    `/employees?page=${page}&limit=${limit}&q=${keyword}&role_id=${roleId}&branch_id=${branchId}&division_id=${divisionId}`\n  );\n};\n\nInvoke.getEmployeeById = (employeeId) => {\n  return ConfigAxios.get(`/employees/${employeeId}`);\n};\n\nInvoke.addEmployee = (data) => {\n  return ConfigAxios.post(\"/employees\", data);\n};\n\nInvoke.updateEmployee = (data) => {\n  return ConfigAxios.put(\"/employees\", data);\n};\n\nInvoke.deleteEmployeeById = (employeeId) => {\n  return ConfigAxios.delete(`/employees/${employeeId}`, headersConfigDelete);\n};\n// === End employee API ===\n\n// === Employee - Tools API : ===\nInvoke.getListEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getEmployeeToolsById = (employeeId) => {\n  return ConfigAxios.get(`/employees/tools${employeeId}`);\n};\n\nInvoke.addEmployeeTools = (data) => {\n  return ConfigAxios.post(\"/employees/tools\", data);\n};\n\nInvoke.updateEmployeeTools = (data) => {\n  return ConfigAxios.put(\"/employees/tools\", data);\n};\n\nInvoke.deleteEmployeeToolsById = (employeeToolsId) => {\n  return ConfigAxios.delete(\n    `/employees/tools/${employeeToolsId}`,\n    headersConfigDelete\n  );\n};\n// === End Employee - Tools API ===\n\n// === Roles API ===\nInvoke.getListRole = (page, limit) => {\n  return ConfigAxios.get(`/roles?page=${page}&limit=${limit}`);\n};\nInvoke.getRoleById = (customerId) => {\n  return ConfigAxios.get(`/roles/${customerId}`);\n};\n\nInvoke.addRole = (data) => {\n  return ConfigAxios.post(\"/roles\", data);\n};\n\nInvoke.updateRole = (data) => {\n  return ConfigAxios.put(\"/roles\", data);\n};\n\nInvoke.deleteRoleById = (roleId) => {\n  return ConfigAxios.delete(`/roles/${roleId}`, headersConfigDelete);\n};\n// === End Roles API ===\n\n// === Master Province API === :\nInvoke.getProvinceList = (page, limit) => {\n  return ConfigAxios.get(`/provinces?page=${page}&limit=${limit}`);\n};\n// === End Master Province API ===\n\n// === Master Cities API === :\nInvoke.getCityList = (page, limit, provinceId) => {\n  return ConfigAxios.get(\n    `/provinces/cities/${provinceId}?page=${page}&limit=${limit}`\n  );\n};\n// === End Master Cities API ===\n\n// === Dashboard API ===\nInvoke.getDashboardProgressData = (data) => {\n  return ConfigAxios.get(\"/dashboards\", data);\n};\n// === End Dashboard API ===\n\n// === Services API ===\nInvoke.addInternalService = (data) => {\n  return ConfigAxios.post(\"/services\", data);\n};\nInvoke.updateJobService = (data) => {\n  return ConfigAxios.put(\"/services\", data);\n};\nInvoke.setFinishedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/finish/${jobId}`);\n};\nInvoke.setApprovedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/approve/${jobId}`);\n};\nInvoke.setRejectedService = (jobId, payload) => {\n  return ConfigAxios.post(\n    `/m_services/reject/${jobId}?allowReject=true`,\n    payload\n  );\n};\n// === End Service API ===\n\n// Services - Employee API\nInvoke.getServicesEmployee = (jobId, page, limit) => {\n  return ConfigAxios.get(\n    `/services/employees/${jobId}?page=${page}&limit=${limit}`\n  );\n};\nInvoke.addNewEmployeeService = (jobId, payload) => {\n  return ConfigAxios.post(`/services/employees/${jobId}`, payload);\n};\nInvoke.setStatusEmployeeService = (jobId, payload) => {\n  return ConfigAxios.put(\n    `/services/employees/${jobId}`,\n    payload,\n    headersConfigDelete\n  );\n};\n// End Services - Employee API\n\n// === Service - Views API ===\nInvoke.getJobServiceSummary = (jobId, unitId) => {\n  return ConfigAxios.get(`/m_services/summary/${jobId}/${unitId}`);\n};\nInvoke.getJobServiceMedia = (jobId, unitId) => {\n  return ConfigAxios.get(`/services/medias/${jobId}/${unitId}`);\n};\nInvoke.getJobServiceDailies = (jobId, unitId) => {\n  return ConfigAxios.get(`/services/dailies/${jobId}/${unitId}`);\n};\nInvoke.updateJobServiceDailies = (payload) => {\n  return ConfigAxios.put(`/services/dailies`, payload);\n};\nInvoke.getChecklistData = (unitModelId) => {\n  return ConfigAxios.get(`/m_services/checklist/${unitModelId}`);\n};\nInvoke.getRejectedData = (jobId) => {\n  return ConfigAxios.get(`/m_services/reject/${jobId}`);\n};\nInvoke.getJobServiceHistories = (jobId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/services/logs/${jobId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\n// === End Service Views ===\n\n// === Master Unit API === :\nInvoke.getUnitList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/units?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addUnit = (payload) => {\n  return ConfigAxios.post(`/units`, payload);\n};\nInvoke.updateUnit = (payload) => {\n  return ConfigAxios.put(`/units`, payload);\n};\nInvoke.deleteUnitById = (unitId) => {\n  return ConfigAxios.delete(`units/${unitId}`, headersConfigDelete);\n};\n// === End Master Unit API ===\n\n// === Master unit-model API === :\nInvoke.getListUnitModel = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/models/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addUnitSerialNumber = (payload, unitModelId) => {\n  return ConfigAxios.post(`/units/serial/${unitModelId}`, payload);\n};\nInvoke.updateUnitSerialNumber = (payload, unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.put(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    payload\n  );\n};\nInvoke.deleteUnitSerialNumber = (unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.delete(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    headersConfigDelete\n  );\n};\nInvoke.getUnitSerialNumber = (\n  page,\n  limit,\n  keyword,\n  unitModelId,\n  customerId\n) => {\n  return ConfigAxios.get(\n    `/units/serial/${unitModelId}?page=${page}&limit=${limit}&q=${keyword}&customerId=${customerId}`\n  );\n};\nInvoke.addUnitModel = (payload) => {\n  return ConfigAxios.post(`/units/models`, payload);\n};\nInvoke.updateUnitModel = (payload) => {\n  return ConfigAxios.put(`/units/models`, payload);\n};\nInvoke.deleteUnitModelById = (unitModelId) => {\n  return ConfigAxios.delete(`units/models/${unitModelId}`, headersConfigDelete);\n};\n// === End Master Unit-Model API ===\n\n// === Master unit-fields API === :\nInvoke.getListUnitFields = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/fields/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.getListUnitJobForms = (unitId, jobFormId) => {\n  return ConfigAxios.get(`/units/job_forms/${unitId}?job_form_id=${jobFormId}`);\n};\nInvoke.addUnitFields = (payload) => {\n  return ConfigAxios.post(`/units/fields`, payload);\n};\nInvoke.updateUnitFields = (payload) => {\n  return ConfigAxios.put(`/units/fields`, payload);\n};\nInvoke.deleteUnitFieldsById = (unitfieldsId) => {\n  return ConfigAxios.delete(\n    `units/fields/${unitfieldsId}`,\n    headersConfigDelete\n  );\n};\n// === End Master Unit-Model API ===\n\n// === Master Job-Form API === :\nInvoke.getListJobForm = (page, limit, keyowrd) => {\n  return ConfigAxios.get(`job_forms?page=${page}&limit=${limit}&q=${keyowrd}`);\n};\nInvoke.addJobForms = (payload) => {\n  return ConfigAxios.post(`job_forms`, payload);\n};\nInvoke.updateJobForms = (payload) => {\n  return ConfigAxios.put(`job_forms`, payload);\n};\nInvoke.deleteJobForms = (jobFormsId) => {\n  return ConfigAxios.delete(`job_forms/${jobFormsId}`, headersConfigDelete);\n};\n// === End Job-Form API ===\n\n// === Master Branch API === :\nInvoke.getListBranch = (page, limit, keyword) => {\n  return ConfigAxios.get(`/branches?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.deleteBranchById = (branchId) => {\n  return ConfigAxios.delete(`/branches/${branchId}`, headersConfigDelete);\n};\nInvoke.addBranch = (payload) => {\n  return ConfigAxios.post(`/branches`, payload);\n};\nInvoke.updateBranch = (payload) => {\n  return ConfigAxios.put(`/branches`, payload);\n};\n// === End Branch API ===\n\n// === Master Menu API === :\nInvoke.getListMenu = (page, limit) => {\n  return ConfigAxios.get(`/menus?page=${page}&limit=${limit}`);\n};\n// === End Menu API ===\n\n// === Master Menu - Roles API === :\nInvoke.addMenuRole = (payload) => {\n  return ConfigAxios.post(`/menus/roles`, payload);\n};\n\nInvoke.getMenuByRoleId = (roleId) => {\n  return ConfigAxios.get(`/menus/menu_by_role/${roleId}`);\n};\n\nInvoke.deleteMenuByMenuRoleId = (menuRoleId) => {\n  return ConfigAxios.delete(`menus/roles/${menuRoleId}`, headersConfigDelete);\n};\n// === End Menu - Roles API ===\n\n// === Master Engines API === :\nInvoke.getListEngine = (page, limit, keyword) => {\n  return ConfigAxios.get(`/engines?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addEngine = (payload) => {\n  return ConfigAxios.post(`/engines`, payload);\n};\nInvoke.updateEngine = (payload) => {\n  return ConfigAxios.put(`/engines`, payload);\n};\nInvoke.deleteEngine = (machineId) => {\n  return ConfigAxios.delete(`/engines/${machineId}`, headersConfigDelete);\n};\n// === End Engines API ===\n\n// === Master Tools API === :\nInvoke.getListTools = (page, limit, keyword) => {\n  return ConfigAxios.get(`/tools?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addTool = (payload) => {\n  return ConfigAxios.post(`/tools`, payload);\n};\nInvoke.updateTool = (payload) => {\n  return ConfigAxios.put(`/tools`, payload);\n};\nInvoke.deleteTool = (toolId) => {\n  return ConfigAxios.delete(`/tools/${toolId}`, headersConfigDelete);\n};\n// === End Tools API ===\n\n// === Master FormCategory API === :\nInvoke.getFormCategory = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/category_forms?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addFormCategory = (payload) => {\n  return ConfigAxios.post(`/category_forms`, payload);\n};\nInvoke.updateFormCategory = (payload) => {\n  return ConfigAxios.put(`/category_forms`, payload);\n};\nInvoke.deleteFormCategory = (categoryFormId) => {\n  return ConfigAxios.delete(\n    `/category_forms/${categoryFormId}`,\n    headersConfigDelete\n  );\n};\n// === End FormCategory API ===\n\n// === Master Identification API === :\nInvoke.getIdentificationList = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/identifications?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\nInvoke.addIdentification = (payload) => {\n  return ConfigAxios.post(`/identifications`, payload);\n};\n\nInvoke.updateIdentificationMilling = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/milling\", payload);\n};\n\nInvoke.updateIdentificationRegular = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/regular\", payload);\n};\n\nInvoke.deleteIdentificationById = (identificationId) => {\n  return ConfigAxios.delete(\n    `/identifications/${identificationId}`,\n    headersConfigDelete\n  );\n};\n\n// === Master Dvision API === :\nInvoke.getDivisionList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/divisions?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addDivision = (payload) => {\n  return ConfigAxios.post(`/divisions`, payload);\n};\nInvoke.updateDivision = (payload) => {\n  return ConfigAxios.put(`/divisions`, payload);\n};\nInvoke.deleteDivision = (divisionId) => {\n  return ConfigAxios.delete(`/divisions/${divisionId}`, headersConfigDelete);\n};\n\n// === Master Dvision - Unit API === :\nInvoke.getDivisionUnitList = (divisionId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/units/divisions/${divisionId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addDivisionUnit = (payload) => {\n  return ConfigAxios.post(`/units/divisions`, payload);\n};\n\n// Monitoring Employee\nInvoke.getReportMonitoringEmployee = (\n  page,\n  limit,\n  from,\n  until,\n  type = \"all\",\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/monitoring?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&type=${type}&q=${keyword}`\n  );\n};\n\n// Report Service Repair\nInvoke.getReportServiceRepair = (\n  page,\n  limit,\n  from,\n  until,\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/report_services?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Report Employee\nInvoke.getReportEmployee = (page, limit, from, until, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/report/report_employee?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Download pdf from server\nInvoke.getTransactionPdfUrl = (jobId) => {\n  return ConfigAxios.get(`/services/print_job/${jobId}`);\n};\n// Download pdf to BLOB\nInvoke.downloadPdfFromUrl = (url) => {\n  return ConfigAxios.get(url, { responseType: \"blob\" });\n};\n\nexport default Invoke;\n","import { store } from \"../../../app/ConfigureStore\";\n\nexport const PROCESS_GLOBAL_LOADING = \"PROCESS_GLOBAL_LOADING\";\nexport const PROCESS_FORM_GLOBAL_LOADING = \"PROCESS_FORM_GLOBAL_LOADING\";\nexport const SHOW_GLOBAL_MODAL = \"SHOW_GLOBAL_MODAL\";\nexport const RESET_ALL_LOADING = \"RESET_ALL_LOADING\";\n\nexport const setGlobalLoading = (payload) => {\n  return {\n    type: PROCESS_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const setGlobalModal = (payload) => {\n  return {\n    type: SHOW_GLOBAL_MODAL,\n    payload,\n  };\n};\n\nexport const setGlobalFormLoading = (payload) => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const resetAllProcessLoading = () => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n  };\n};\n\nexport const resetAllGlobalLoadingProcess = () => {\n  const { dispatch } = store;\n  dispatch(resetAllProcessLoading());\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { toastr } from \"react-redux-toastr\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toast } from \"react-toastify\";\nimport { change } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ROLES = \"SET_LIST_ROLES\";\nexport const SET_SELECTED_ROLE_ID = \"SET_SELECTED_ROLE_ID\";\nexport const SET_SELECTED_ROLE_DETAIL = \"SET_SELECTED_ROLE_DETAIL\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const RESET_STATE = \"RESET_STATE\";\nexport const SET_SELECTED_ROLE_MENU = \"SET_SELECTED_ROLE_MENU\";\n\nexport const resetState = (payload) => {\n  return {\n    type: RESET_STATE,\n    payload,\n  };\n};\n\nexport const setListRoles = (payload) => {\n  return {\n    type: SET_LIST_ROLES,\n    payload,\n  };\n};\n\nexport const setSelectedRoleId = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_ID,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedRoleDetail = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_DETAIL,\n    payload,\n  };\n};\n\nexport const setSelectedRoleMenu = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_MENU,\n    payload,\n  };\n};\n\nexport const showToast = (message, type) => {\n  switch (type) {\n    case \"success\":\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n\n    case \"error\":\n      toast.error(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n    default:\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n  }\n};\n\nexport const getListRolesRequested = async () => {\n  const { data } = await Invoke.getListRole(1, 100);\n  store.dispatch(setListRoles(data.callback.data));\n};\n\nexport const mapDetailRoleToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().roles.selectedRoleDetail;\n  dispatch(change(\"editRolesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editRolesForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getMenuByRolesId = async (roleId) => {\n  const { data } = await Invoke.getMenuByRoleId(roleId);\n  let subItem = [];\n  data.callback.map((item, index) => {\n    subItem.push(item.menu_id);\n  });\n  store.dispatch(setSelectedRoleMenu(subItem));\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editRolesForm\", `id`, \"\"));\n  dispatch(change(\"editRolesForm\", `description`, \"\"));\n};\n\nconst doAddRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await Invoke.addRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteMenuRoleProcess = async (menuId, menuListApi) => {\n  const [menu] = menuListApi.filter((x) => x.menu_id === menuId);\n  await Invoke.deleteMenuByMenuRoleId(menu.id);\n};\n\nconst doAddMenuRoleProcess = async (menuId, roleId) => {\n  const payload = {\n    menu_id: menuId,\n    role_id: roleId,\n    view: true,\n    insert: true,\n    update: true,\n    delete: false,\n  };\n  await Invoke.addMenuRole(payload);\n};\n\nconst doSaveMenuRole = async (newMenuSelected) => {\n  const { getState } = store;\n  const currentMenuSelected = getState().roles.selectedRoleMenu;\n  const selectedRoleId = getState().roles.selectedRoleId;\n  const { data } = await Invoke.getMenuByRoleId(selectedRoleId);\n  const menuListApi = data.callback;\n\n  if (currentMenuSelected.length > 0) {\n    await currentMenuSelected.map((item, index) => {\n      doDeleteMenuRoleProcess(item, menuListApi);\n    });\n    setTimeout(() => {\n      newMenuSelected.map((newMenu, index) => {\n        doAddMenuRoleProcess(newMenu, selectedRoleId);\n      });\n    }, 1000);\n  } else {\n    newMenuSelected.map((item, index) => {\n      doAddMenuRoleProcess(item, selectedRoleId);\n    });\n  }\n};\n\nconst doEditRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.id = values.id;\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await doSaveMenuRole(menuSelected);\n    await Invoke.updateRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteRoleProcess = async (roleId) => {\n  try {\n    await Invoke.deleteRoleById(roleId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListRolesRequested();\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteRoleRequested = async (roleId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteRoleProcess(roleId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const saveRoleRequested = async (type, values, menuSelected) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddRoleProcess(values, menuSelected);\n      } else {\n        doEditRoleProcess(values, menuSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ADMIN = \"SET_LIST_ADMIN\";\nexport const SET_PAGING_ADMIN = \"SET_PAGING_ADMIN\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ADMIN_ID = \"SET_SELECTED_ADMIN_ID\";\nexport const SET_SELECTED_ADMIN_DATA = \"SET_SELECTED_ADMIN_DATA\";\n\nexport const setListAdmin = (payload) => {\n  return {\n    type: SET_LIST_ADMIN,\n    payload,\n  };\n};\n\nexport const setPagingAdmin = (payload) => {\n  return {\n    type: SET_PAGING_ADMIN,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedAdminId = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_ID,\n    payload,\n  };\n};\n\nexport const setSelectedAdminData = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_DATA,\n    payload,\n  };\n};\n\nexport const getListAdminRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListAdmin(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListAdmin(data.callback.data));\n    store.dispatch(setPagingAdmin(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editAdminForm\", `id`, \"\"));\n  dispatch(change(\"editAdminForm\", `username`, \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, \"\"));\n  dispatch(change(\"editAdminForm\", `password`, \"\"));\n};\n\nconst doAddAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.addAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.updateAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteAdminProcess = async (adminId) => {\n  const { getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteAdminById(adminId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListAdminRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveAdminRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddAdminProcess(values);\n      } else {\n        doEditAdminProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailAdminToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().admins.selectedAdminData;\n  dispatch(change(\"editAdminForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editAdminForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, data.fullname ?? \"\"));\n};\n\nexport const deleteAdminRequested = async (adminId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteAdminProcess(adminId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_PROVINCE_LIST_DATA = \"SET_PROVINCE_LIST_DATA\";\nexport const SET_CITY_LIST_DATA = \"SET_CITY_LIST_DATA\";\nexport const SET_MENU_LIST_DATA = \"SET_MENU_LIST_DATA\";\n\nexport const setProvinceListData = (payload) => {\n  return {\n    type: SET_PROVINCE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setMenuListData = (payload) => {\n  return {\n    type: SET_MENU_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCityListData = (payload) => {\n  return {\n    type: SET_CITY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const loadProvinceListData = async () => {\n  try {\n    const { data } = await Invoke.getProvinceList(1, 100);\n    store.dispatch(setProvinceListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadCityListData = async (provinceId) => {\n  try {\n    const { data } = await Invoke.getCityList(1, 200, provinceId);\n    store.dispatch(setCityListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadMenuListData = async () => {\n  try {\n    const { data } = await Invoke.getListMenu(1, 100);\n    store.dispatch(setMenuListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_BRANCH_LIST_DATA = \"SET_BRANCH_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_BRANCH_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_BRANCH_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_BRANCH = \"SET_PAGING_BRANCH\";\nexport const SET_BRANCH_LIST_DATA_DROPDOWN = \"SET_BRANCH_LIST_DATA_DROPDOWN\";\n\nexport const setBranchListData = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setBranchListDataDropdown = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingBranch = (payload) => {\n  return {\n    type: SET_PAGING_BRANCH,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedBranchId = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_ID,\n    payload,\n  };\n};\n\nexport const setSelectedBranchData = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteBranchById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getBranchListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.addBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.updateBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editBranchForm\", `id`, \"\"));\n  dispatch(change(\"editBranchForm\", `description`, \"\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().branch.selectedBranchData;\n  dispatch(change(\"editBranchForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editBranchForm\", `description`, data.name ?? \"\"));\n};\n\nexport const getBranchListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  isDropdown = false\n) => {\n  try {\n    const { data } = await Invoke.getListBranch(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdown) {\n      store.dispatch(setBranchListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setBranchListData(data.callback.data));\n    }\n    store.dispatch(setPagingBranch(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveBranchRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddBranchProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteBranchRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_ID = \"SET_SELECTED_UNIT_ID\";\nexport const SET_SELECTED_UNIT_DATA = \"SET_SELECTED_UNIT_DATA\";\nexport const SET_PAGING_UNIT = \"SET_PAGING_UNIT\";\n\nexport const setUnitListData = (payload) => {\n  return {\n    type: SET_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnit = (payload) => {\n  return {\n    type: SET_PAGING_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteUnitProcess = async (unitId) => {\n  const { getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitById(unitId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    payload.photo = values.imageUrl ?? \"\";\n    await Invoke.addUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.photo = values.imageUrl ?? \"\";\n    payload.description = values.description;\n    await Invoke.updateUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitForm\", `id`, \"\"));\n  dispatch(change(\"editUnitForm\", `name`, \"\"));\n  dispatch(change(\"editUnitForm\", `description`, \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, \"\"));\n};\n\nexport const mapDetailUnitToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().units.selectedUnitsData;\n\n  dispatch(change(\"editUnitForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitForm\", `description`, data.description ?? \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, data.photo ?? \"\"));\n};\n\nexport const getUnitListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getUnitList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitListData(data.callback.data));\n    store.dispatch(setPagingUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitProcess(values);\n      } else {\n        doEditUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitRequested = async (unitId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitProcess(unitId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_MACHINE_LIST_DATA = \"SET_MACHINE_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_MACHINE_ID = \"SET_SELECTED_MACHINE_ID\";\nexport const SET_SELECTED_MACHINE_DATA = \"SET_SELECTED_MACHINE_DATA\";\nexport const SET_PAGING_MACHINE_CONF = \"SET_PAGING_MACHINE_CONF\";\n\nexport const setMachineListData = (payload) => {\n  return {\n    type: SET_MACHINE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMachineConf = (payload) => {\n  return {\n    type: SET_PAGING_MACHINE_CONF,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedMachineId = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedMachineData = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteMachineProcess = async (machineId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteEngine(machineId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getMachineListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editMachineConfigurationForm\", `name`, \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `description`, \"\"));\n};\n\nexport const mapDetailMachineToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().machineConfiguration.selectedMachineData;\n  dispatch(change(\"editMachineConfigurationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `name`, data.name ?? \"\"));\n  dispatch(\n    change(\n      \"editMachineConfigurationForm\",\n      `description`,\n      data.description ?? \"\"\n    )\n  );\n};\n\nexport const getMachineListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListEngine(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setMachineListData(data.callback.data));\n    store.dispatch(setPagingMachineConf(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveMachineRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddMachineProcess(values);\n      } else {\n        doEditMachineProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteMachineRequested = async (machineId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteMachineProcess(machineId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import * as AdminActions from \"../modules/Admin/Store/AdminActions\";\nimport * as RoleActions from \"../modules/Roles/Store/RolesActions\";\nimport * as MasterDataActions from \"../modules/MasterData/Store/MasterDataActions\";\nimport * as BranchActions from \"../modules/Branch/Store/BranchActions\";\nimport * as UnitsActions from \"../modules/Units/Store/UnitsActions\";\nimport * as MachineConfigurationActions from \"../modules/MachineConfiguration/Store/MachineConfigurationActions\";\n\nexport const initializeApp = async () => {\n  await AdminActions.getListAdminRequested(1, 10);\n  await RoleActions.getListRolesRequested();\n  await MasterDataActions.loadMenuListData();\n  await MasterDataActions.loadProvinceListData();\n  await BranchActions.getBranchListDataRequested(1, 10);\n  await UnitsActions.getUnitListDataRequested(1, 10);\n  await MachineConfigurationActions.getMachineListDataRequested(1, 10);\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport history from \"../../../app/History\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { initializeApp } from \"../../../app/InitializeApp\";\n\nexport const SET_ACCESS_TOKEN_DATA = \"SET_ACCESS_TOKEN_DATA\";\nexport const SET_USER_DETAIL_DATA = \"SET_USER_DETAIL_DATA\";\nexport const SET_ERROR_LOGIN = \"SET_ERROR_LOGIN\";\n\nexport const setAccessToken = (payload) => {\n  return {\n    type: SET_ACCESS_TOKEN_DATA,\n    payload,\n  };\n};\nexport const setUserDetail = (payload) => {\n  return {\n    type: SET_USER_DETAIL_DATA,\n    payload,\n  };\n};\nexport const setErrorLogin = (payload) => {\n  return {\n    type: SET_ERROR_LOGIN,\n    payload,\n  };\n};\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\",\n  };\n};\n\nexport const doLogout = (dispatch) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      dispatch(logout());\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah Anda Yakin Ingin Keluar?\", toastrConfirmOptions);\n};\n\nconst appendItem = async (data) =>\n  new Promise((resolve, reject) => {\n    store.dispatch(setAccessToken(data.data.callback.accessToken));\n    delete data.data.callback.accessToken;\n    store.dispatch(setUserDetail(data.data.callback));\n    resolve();\n  });\n\nexport const handleSubmitLogin = async (values) => {\n  const { username, password } = values;\n  const payload = { username, password };\n\n  console.log(\"=== user pass : \", username, password);\n\n  store.dispatch(setGlobalLoading(true));\n\n  Invoke.submitLogin(payload)\n    .then((data) => {\n      appendItem(data).then(() => {\n        setTimeout(() => {\n          history.push(\"/dashboard\");\n          window.location.reload();\n          store.dispatch(setGlobalLoading(false));\n        }, 5000);\n      });\n    })\n    .catch((onRejected) => {\n      store.dispatch(setGlobalLoading(false));\n      if (onRejected) {\n        const status = onRejected?.response?.data?.status;\n        const dataResponseRejected = onRejected?.response?.data ?? null;\n        if (dataResponseRejected) {\n          if (status === 400) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          } else if (status === 401) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          }\n        }\n      }\n    });\n};\n","import {\n  SET_ACCESS_TOKEN_DATA,\n  SET_USER_DETAIL_DATA,\n  SET_ERROR_LOGIN,\n} from \"./AuthAction\";\n\nexport const initialState = {\n  accessToken: \"\",\n  userDetail: null,\n  avatar: null,\n  error: {\n    status: false,\n    message: \"\",\n  },\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ACCESS_TOKEN_DATA:\n      newState.accessToken = action.payload;\n      return { ...newState };\n\n    case SET_USER_DETAIL_DATA:\n      newState.userDetail = action.payload;\n      return { ...newState };\n\n    case SET_ERROR_LOGIN:\n      newState.error = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import history from \"./History\";\n\nexport const navigate = (path) => {\n  history.push(path);\n  window.location.reload();\n};\n\nexport const getIndex = (currentpage, limit) => {\n  const pageNumbers = [];\n  const startIndex = currentpage * limit - limit + 1;\n  const endIndex = startIndex + limit;\n  for (let i = startIndex === 0 ? 1 : startIndex; i <= endIndex; i++) {\n    pageNumbers.push(i);\n  }\n  return pageNumbers;\n};\n\nexport const getBase64 = (img, callback) => {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\n\nexport const SelectLocation = [\n  {\n    id: `location-1`,\n    value: \"L1\",\n    label: \"Cabang\",\n  },\n  {\n    id: `location-2`,\n    value: \"L2\",\n    label: \"Depo PT Rutan\",\n  },\n];\n\nexport const SelectType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Project\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"PB\",\n  },\n  {\n    id: `type-3`,\n    value: \"T3\",\n    label: \"Komersil\",\n  },\n];\n\nexport const SelectInstanceType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"Kelompok Tani\",\n  },\n];\n\nexport const SelectStatus = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Finished\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusServices = [\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Completed\",\n  },\n  {\n    id: `status-2`,\n    value: \"S4\",\n    label: \"Approved\",\n  },\n  {\n    id: `status-3`,\n    value: \"S5\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusMilling = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n  {\n    id: `status-3`,\n    value: \"S4\",\n    label: \"Lain-lain\",\n  },\n];\n\nexport const SelectInstanceTypeRegular = [\n  {\n    id: `status-1`,\n    value: \"T1\",\n    label: \"Kepemilikan Pribadi\",\n  },\n  {\n    id: `status-2`,\n    value: \"T2\",\n    label: \"Perusahaan\",\n  },\n  {\n    id: `status-3`,\n    value: \"T3\",\n    label: \"Kelompok Tani\",\n  },\n  {\n    id: `status-3`,\n    value: \"T4\",\n    label: \"Dinas\",\n  },\n];\n\nexport const SelectStatusIdentification = [\n  {\n    id: `status-identification-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-identification-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-identification-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n];\n\nexport const SelectMilling = [\n  {\n    id: `milling-1`,\n    value: \"true\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `milling-2`,\n    value: \"false\",\n    label: \"non-Penggilingan\",\n  },\n];\n\nexport const enumTypeInternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Training\" },\n];\n\nexport const enumTypeExternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Training\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modification\" },\n];\n\nexport const enumWarranty = [\n  { id: `enum-warranty-1`, value: true, label: \"Warranty\" },\n  { id: `enum-warranty-2`, value: false, label: \"No Warranty\" },\n];\n\nexport const warrantyMonths = () => {\n  const warrantyMonths = [];\n  for (let i = 0; i <= 24; i++) {\n    warrantyMonths.push({\n      id: `enum-warranty-moths-${i}`,\n      value: i.toString(),\n      label: `${i} bulan`,\n    });\n  }\n  return warrantyMonths;\n};\n\nexport const getProvinceEnum = (data) => {\n  const SelectProvince = [];\n  data.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectProvince;\n};\n\nexport const getCitiesEnum = (data) => {\n  const SelectCities = [];\n  data.map((item, index) => {\n    SelectCities.push({\n      id: `city-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectCities;\n};\n\nexport const getRolesEnum = (data) => {\n  const SelectRoles = [];\n  data.map((item, index) => {\n    SelectRoles.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectRoles;\n};\n\nexport const enumSelectGenerator = (data, enumName) => {\n  const SelectEnum = [];\n  data.map((item, index) => {\n    SelectEnum.push({\n      id: `${enumName}-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectEnum;\n};\n\nexport const getUnitModelEnum = (data) => {\n  const SelectUnitModel = [];\n  data.map((item, index) => {\n    SelectUnitModel.push({\n      id: `unit-model-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectUnitModel;\n};\n\nexport const getMachineConf = (data) => {\n  const SelectMachines = [];\n  data.map((item, index) => {\n    SelectMachines.push({\n      id: item.id,\n      name: item.name.replace(/ /g, \"_\").toLowerCase(),\n      type: item.name,\n    });\n  });\n  return SelectMachines;\n};\n\nexport const getStatus = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S1\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S2\":\n      statusItem = { value: \"Finished\", color: \"#87d068\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\n// This list not used\nexport const machineConf = [\n  {\n    name: \"dryer\",\n    type: \"dryer\",\n  },\n  {\n    name: \"cleaner\",\n    type: \"cleaner\",\n  },\n  {\n    name: \"head_husker\",\n    type: \"head husker\",\n  },\n  {\n    name: \"body_husker\",\n    type: \"body husker\",\n  },\n  {\n    name: \"separator\",\n    type: \"separator\",\n  },\n  {\n    name: \"destoner\",\n    type: \"destoner\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n\n  {\n    name: \"vertikal_abrasive\",\n    type: \"vertikal abrasive\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n  {\n    name: \"friction_abrasive\",\n    type: \"friction abrasive\",\n  },\n  {\n    name: \"rotary_rice_sifter\",\n    type: \"rotary rice sifter\",\n  },\n  {\n    name: \"non_rotary_rice_sifter\",\n    type: \"non rotary rice sifter\",\n  },\n\n  {\n    name: \"length_grader\",\n    type: \"length grader\",\n  },\n  {\n    name: \"milling_meter\",\n    type: \"milling meter\",\n  },\n  {\n    name: \"scale\",\n    type: \"scale\",\n  },\n];\n\nexport const monitoringType = {\n  all: \"all\",\n  external: \"T1\",\n  internal: \"T2\",\n  loss: \"T3\",\n};\n\nexport const categoryServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n];\n\nexport const categoryMonitoringServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n  {\n    name: \"Loss\",\n    status: \"error\",\n  },\n];\n\nexport const enumTypeMonitoringEmployee = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Pelatihan\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modifikasi\" },\n];\n\nexport const getBase64Image = (url) => {\n  const img = new Image();\n  img.setAttribute(\"crossOrigin\", \"anonymous\");\n  img.onload = () => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    const dataURL = canvas.toDataURL(\"image/png\");\n    console.log(dataURL);\n  };\n  img.src = url;\n};\n\n/**\n * This function calculate the width of a string based on its length\n * @param {String} text\n * @param {String} font\n */\nconst getTextWidth = (text, font = \"14px -apple-system\") => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n  return Math.round(metrics.width + 80);\n};\n\n/**\n * This function calculates the width of each column based in all CELL VALUES\n * @param {Array} columns\n * @param {Array} source\n * @param {Number} maxWidthPerCell\n */\nexport const calculateColumnsWidth = (\n  columns,\n  source,\n  maxWidthPerCell = 500\n) => {\n  const columnsParsed = JSON.parse(JSON.stringify(columns));\n  console.log(\"=== columnsParsed : \", columnsParsed);\n\n  // First we calculate the width for each column\n  // The column width is based on its string length\n\n  const columnsWithWidth = columnsParsed.map((column) =>\n    Object.assign(column, {\n      width: getTextWidth(column.title),\n    })\n  );\n  console.log(\"=== columnsWithWidth : \", columnsWithWidth);\n\n  // Since we have a minimum width (column's width already calculated),\n  // now we are going to verify if the cell value is bigger\n  // than the column width which is already set\n\n  source.map((entry) => {\n    columnsWithWidth.map((column, indexColumn) => {\n      const columnWidth = column.width;\n      const cellValue = Object.values(entry)[indexColumn];\n\n      // Get the string width based on chars length\n      let cellWidth = getTextWidth(cellValue);\n\n      // Verify if the cell value is smaller than column's width\n      if (cellWidth < columnWidth) cellWidth = columnWidth;\n\n      // Verify if the cell value width is bigger than our max width flag\n      if (cellWidth > maxWidthPerCell) cellWidth = maxWidthPerCell;\n\n      // Update the column width\n      columnsWithWidth[indexColumn].width = cellWidth;\n    });\n  });\n\n  // Sum of all columns width to determine the table max width\n  const tableWidth = columnsWithWidth\n    .map((column) => column.width)\n    .reduce((a, b) => {\n      return a + b;\n    });\n  console.log(\"=== tableWidth : \", tableWidth);\n  console.log(\"=== source : \", source);\n\n  return {\n    columns: columnsWithWidth,\n    source,\n    tableWidth,\n  };\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { change } from \"redux-form\";\nimport moment from \"moment\";\nimport { setSelectedJobService } from \"../../ListServices/Store/ListServicesActions\";\nimport fileDownload from \"js-file-download\";\n\nexport const SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA =\n  \"SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA\";\n\nexport const SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_GROUPING_SUMMARY_DATA = \"SET_GROUPING_SUMMARY_DATA\";\n\nexport const SET_GROUPING_CHECKLIST_DATA = \"SET_GROUPING_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_SUMMARY_DATA =\n  \"SET_SELECTED_SERVICES_SUMMARY_DATA\";\n\nexport const SET_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_SELECTED_SERVICES_DAILIES_DATA =\n  \"SET_SELECTED_SERVICES_DAILIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_HISTORIES_DATA =\n  \"SET_SELECTED_SERVICES_HISTORIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_CHECKLIST_DATA =\n  \"SET_SELECTED_SERVICES_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_REJECTED_DATA =\n  \"SET_SELECTED_SERVICES_REJECTED_DATA\";\n\nexport const SET_EDIT_TRANSACTION_MODAL = \"SET_EDIT_TRANSACTION_MODAL\";\n\nexport const SET_REJECTIONS_MODAL = \"SET_REJECTIONS_MODAL\";\n\nexport const SET_EDIT_DAILIES_MODAL = \"SET_EDIT_DAILIES_MODAL\";\n\nexport const SET_SELECTED_EDIT_DAILIES_DATA = \"SET_SELECTED_EDIT_DAILIES_DATA\";\n\nexport const SET_SELECTED_UNIT = \"SET_SELECTED_UNIT\";\n\nexport const RESET_DETAIL_SERVICE = \"RESET_DETAIL_SERVICE\";\n\nexport const setRejectionsModal = (payload) => {\n  return {\n    type: SET_REJECTIONS_MODAL,\n    payload,\n  };\n};\n\nexport const resetDetailService = () => {\n  return {\n    type: RESET_DETAIL_SERVICE,\n  };\n};\n\nexport const setSelectedUnit = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT,\n    payload,\n  };\n};\n\nexport const setEditTransactionModal = (payload) => {\n  return {\n    type: SET_EDIT_TRANSACTION_MODAL,\n    payload,\n  };\n};\n\nexport const setGroupingSelectedServicesMediaData = (payload) => {\n  return {\n    type: SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingSummaryData = (payload) => {\n  return {\n    type: SET_GROUPING_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingChecklistData = (payload) => {\n  return {\n    type: SET_GROUPING_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setEditDailiesModal = (payload) => {\n  return {\n    type: SET_EDIT_DAILIES_MODAL,\n    payload,\n  };\n};\n\nexport const setSelectedServicesEmployeeListData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServicesChecklisttData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedSummaryData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceMediaData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceHistoriesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_HISTORIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceRejectedData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_REJECTED_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEditDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_EDIT_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const getJobServiceEmployeeList = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getServicesEmployee(jobId, 1, 100);\n  const serviceEmployeeList = data.callback.data;\n\n  const results = Promise.all(\n    serviceEmployeeList.map(async (item, index) => {\n      let subIitem = {};\n      subIitem.active = item.active;\n      subIitem.employee_service_id = item.id;\n      const employee = await Invoke.getEmployeeById(item.employee_id);\n      subIitem = { ...subIitem, ...employee.data.callback };\n      return subIitem;\n    })\n  );\n  dispatch(setSelectedServicesEmployeeListData(await results));\n};\n\nexport const getJobServiceSummary = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceSummary(jobId, unitId);\n    dispatch(setSelectedSummaryData(data.callback));\n  } catch (error) {\n    dispatch(setSelectedSummaryData({}));\n  }\n};\n\nexport const getJobServiceMedia = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceMedia(jobId, unitId);\n    dispatch(setSelectedServiceMediaData(data.callback.data));\n  } catch (error) {\n    dispatch(setSelectedServiceMediaData([]));\n  }\n};\n\nexport const getJobServiceDailies = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceDailies(jobId, unitId);\n    dispatch(\n      setSelectedServiceDailiesData(data.callback.data || data.callback)\n    );\n  } catch (error) {\n    dispatch(setSelectedServiceDailiesData([]));\n  }\n};\n\nexport const getJobServiceHistories = async (jobId, keyword = \"\") => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getJobServiceHistories(jobId, 1, 100, keyword);\n  dispatch(setSelectedServiceHistoriesData(data.callback.logs));\n};\n\nexport const getJobServiceRejections = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getRejectedData(jobId);\n  dispatch(setSelectedServiceRejectedData(data.callback));\n};\n\nexport const getChecklistData = async (unitModelId) => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getChecklistData(unitModelId);\n    dispatch(setSelectedServicesChecklisttData(data.callback));\n  } catch (e) {\n    console.log(e);\n    dispatch(setSelectedServicesChecklisttData([]));\n  }\n};\n\nexport const handleAddNewEmployeeService = async (jobId, employeeId) => {\n  const { dispatch } = store;\n  try {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.active = \"true\";\n    await Invoke.addNewEmployeeService(jobId, payload);\n    setTimeout(() => {\n      dispatch(ComponentActions.setGlobalModal(false));\n      dispatch(ComponentActions.setGlobalLoading(false));\n      getJobServiceEmployeeList(jobId);\n    }, 500);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nexport const setStatusEmployee = async (\n  jobId,\n  employeeServiceId,\n  employeeId,\n  isActive\n) => {\n  const payload = {};\n  payload.id = employeeServiceId;\n  payload.employee_id = employeeId;\n  payload.active = isActive;\n  await Invoke.setStatusEmployeeService(jobId, payload);\n  setTimeout(() => {\n    getJobServiceEmployeeList(jobId);\n  }, 500);\n};\n\nconst doRejectServiceProcess = async (jobId, values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.reason = values.reason;\n    await Invoke.setRejectedService(jobId, payload);\n    showToast(\"Berhasil melakukan reject\", \"success\");\n    navigate(\"/list_service\");\n    dispatch(setRejectionsModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setRejectionsModal(false));\n  }\n};\n\nconst doEditServiceProcess = async (values) => {\n  const { dispatch } = store;\n\n  const warranty = values.warranty.split(\"|\");\n  const warrantyYears = values.warrantyYears.split(\"|\");\n  const warrantyMonths = values.warrantyMonths.split(\"|\");\n\n  const payload = {};\n  payload.id = values.id;\n  payload.start = moment(values.startDate).format(\"YYYY-MM-DD\");\n  payload.due = moment(values.dueDate).format(\"YYYY-MM-DD\");\n  payload.job_perform = values.jobPerform;\n  payload.warranty = warranty[0];\n  payload.warranty_month = warrantyMonths[0] ?? 0;\n  payload.warranty_year = warrantyYears[0] ?? 0;\n\n  try {\n    await Invoke.updateJobService(payload);\n    showToast(\"Data berhasil disimpan\", \"success\");\n\n    const { data } = await Invoke.getOneServices(values.id);\n    await store.dispatch(\n      setSelectedJobService({ ...data.callback, units: values.unit_models })\n    );\n    dispatch(setEditTransactionModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nexport const handlePressEditRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditServiceProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah anda yakin menyimpan data ini?\", toastrConfirmOptions);\n};\n\nexport const handlePressRejectedRequested = async (jobId, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doRejectServiceProcess(jobId, values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin me me-reject data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nconst doEditDailiesProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const payload = {};\n  payload.id = values.id;\n  payload.title = values.title ?? \"\";\n  payload.daily_start = moment(values.startDate).format(\"YYYY-MM-DD\");\n  payload.daily_end = moment(values.endDate).format(\"YYYY-MM-DD\");\n  payload.description = values.description ?? \"\";\n  try {\n    await Invoke.updateJobServiceDailies(payload);\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    await getJobServiceDailies(dataService.id);\n    dispatch(setEditDailiesModal(false));\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nexport const handlePressEditDailiesRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditDailiesProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailTransactionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().services.selectedJobService;\n  dispatch(change(\"editTransactionForm\", `id`, data.id ?? \"\"));\n  dispatch(\n    change(\"editTransactionForm\", `startDate`, moment(data.start) ?? \"\")\n  );\n  dispatch(change(\"editTransactionForm\", `endDate`, moment(data.end) ?? \"\"));\n  dispatch(change(\"editTransactionForm\", `jobPerform`, data.job_perform ?? \"\"));\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warranty`,\n      `${data.warranty}|${data.warranty ? \"Warranty\" : \"No Warranty\"}`\n    )\n  );\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warrantyMonths`,\n      `${data.warranty_month}|${data.warranty_month} bulan` ?? \"0\"\n    )\n  );\n  dispatch(\n    change(\"editTransactionForm\", `warrantyYears`, data.warranty_year ?? \"\")\n  );\n};\n\nexport const mapDailiesToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().detailService.selectedEditDailies;\n  dispatch(change(\"editDailiesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `startDate`, moment(data.mulai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `endDate`, moment(data.selesai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `description`, data.deskripsi ?? \"\"));\n};\n\nexport const downloadTransactionPdf = async () => {\n  const { dispatch, getState } = store;\n  const jobId = getState().services.selectedJobService.id;\n  dispatch(ComponentActions.setGlobalLoading(true));\n\n  try {\n    const { data: dataTransactionPdf } = await Invoke.getTransactionPdfUrl(\n      jobId\n    );\n    const downloadUrl = dataTransactionPdf.callback.pdf.url.replace(\n      \"103.158.192.161:3000\",\n      \"\"\n    );\n    const { data } = await Invoke.downloadPdfFromUrl(downloadUrl);\n    dispatch(ComponentActions.setGlobalLoading(false));\n    fileDownload(data, `${dataTransactionPdf.callback.pdf.filename}.pdf`);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n    showToast(\"Gagal mengunduh report!\", \"error\");\n  }\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { setRejectionsModal } from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\nimport * as DetailServiceActions from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\n\nexport const SET_LIST_SERVICES = \"SET_LIST_SERVICES\";\nexport const SET_SELECTED_JOB_SERVICE = \"SET_SELECTED_JOB_SERVICE\";\nexport const SET_PAGING_LIST_SERVICE = \"SET_PAGING_LIST_SERVICE\";\nexport const SET_SELECTED_JOB_SERVICE_ID = \"SET_SELECTED_JOB_SERVICE_ID\";\nexport const SET_DASHBOARD_LIST_SERVICES = \"SET_DASHBOARD_LIST_SERVICES\";\n\nexport const setListServices = (payload) => {\n  return {\n    type: SET_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setDashboardListService = (payload) => {\n  return {\n    type: SET_DASHBOARD_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setPagingListService = (payload) => {\n  return {\n    type: SET_PAGING_LIST_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobService = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobServiceId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE_ID,\n    payload,\n  };\n};\n\nexport const getListServicesRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  type = \"\",\n  status = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListServices(\n      page,\n      limit,\n      keyword,\n      type,\n      status\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListServices(data.callback.data));\n    store.dispatch(setPagingListService(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTopTenService = async () => {\n  try {\n    const { data } = await Invoke.getListServices(1, 10, \"\", \"\", \"\");\n    store.dispatch(setDashboardListService(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (page, limit, keyword, filterValues) => {\n  if (!filterValues) {\n    getListServicesRequested(page, limit, keyword);\n    return;\n  }\n\n  const splitTypeService = filterValues.typeService\n    ? filterValues.typeService.split(\"|\")\n    : \"\";\n  const splitStatusService = filterValues.statusService\n    ? filterValues.statusService.split(\"|\")\n    : \"\";\n\n  const typeService = filterValues.typeService ? splitTypeService[0] : \"\";\n  const statusService = filterValues.statusService ? splitStatusService[0] : \"\";\n\n  try {\n    await getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      typeService,\n      statusService\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getDetailServicePerUnit = async (service) => {\n  console.log(\"=== service : \", service);\n\n  const { dispatch } = store;\n  // Hit media api and grouping by units :\n  let groupingChecklist = [];\n  if (service.units) {\n    await service.units.map(async (item, index) => {\n      const { data: dataChecklist } = await Invoke.getChecklistData(item.id);\n\n      console.log(\"=== dataChecklist : \", dataChecklist);\n      // Push to tempporary array\n      groupingChecklist.push({\n        unitName: item.unit_name,\n        checklist: dataChecklist.callback,\n      });\n    });\n\n    // Save to reducer\n    await dispatch(\n      DetailServiceActions.setGroupingChecklistData(groupingChecklist)\n    );\n  }\n};\n\nexport const handlePressEdit = async (values) => {\n  store.dispatch(setGlobalLoading(true));\n  try {\n    const { data } = await Invoke.getOneServices(values.id);\n    const dataService = { ...data.callback, units: values.unit_models };\n    await store.dispatch(setSelectedJobService(dataService));\n    // await getDetailServicePerUnit(dataService);\n    setTimeout(() => {\n      store.dispatch(setGlobalLoading(false));\n      navigate(\"detail-services\");\n    }, 1500);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteJobServiceProcess = async (jobId) => {\n  const { getState } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteJobServiceById(jobId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListServicesRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteJobServiceRequested = async (jobId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteJobServiceProcess(jobId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handlePressActionsRequested = async (jobId, type) => {\n  const { dispatch } = store;\n  type = type.toLowerCase();\n  let message;\n\n  switch (type) {\n    case \"approved\":\n      message = \"Apakah anda yakin ingin meng-approve data ini?\";\n      break;\n\n    case \"finished\":\n      message = \"Apakah anda yakin ingin mem-finishing data ini?\";\n      break;\n\n    case \"rejected\":\n      message = \"Apakah anda yakin ingin me me-reject data ini?\";\n      await dispatch(setRejectionsModal(true));\n      break;\n  }\n\n  if (type.toLowerCase() !== \"rejected\") {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        doCallActionProcess(jobId, type);\n      },\n      okText: \"Ya\",\n      cancelText: \"Tidak\",\n    };\n\n    toastr.confirm(message, toastrConfirmOptions);\n  }\n};\n\nexport const doCallActionProcess = async (jobId, type) => {\n  const { getState, dispatch } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n  dispatch(setGlobalLoading(true));\n  try {\n    if (type === \"approved\") {\n      await Invoke.setApprovedService(jobId);\n    }\n    if (type === \"finished\") {\n      await Invoke.setFinishedService(jobId);\n    }\n    await getListServicesRequested(page, limit);\n    showToast(\"Data berhasil di approved\", \"success\");\n    setTimeout(() => {\n      navigate(\"/list_service\");\n      dispatch(setGlobalLoading(false));\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(setGlobalLoading(false));\n    console.log(\"error : \", error);\n  }\n};\n","import {\n  SET_LIST_SERVICES,\n  SET_SELECTED_JOB_SERVICE,\n  SET_PAGING_LIST_SERVICE,\n  SET_SELECTED_JOB_SERVICE_ID,\n  SET_DASHBOARD_LIST_SERVICES,\n} from \"./ListServicesActions\";\n\nexport const initialState = {\n  listServices: [],\n  dashboardListServices: [],\n  selectedJobService: {},\n  selectedJobServiceId: {},\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function listServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_SERVICES:\n      newState.listServices = action.payload;\n      return { ...newState };\n\n    case SET_DASHBOARD_LIST_SERVICES:\n      newState.dashboardListServices = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE:\n      newState.selectedJobService = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE_ID:\n      newState.selectedJobServiceId = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_LIST_SERVICE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  PROCESS_GLOBAL_LOADING,\n  PROCESS_FORM_GLOBAL_LOADING,\n  RESET_ALL_LOADING,\n  SHOW_GLOBAL_MODAL,\n} from \"./ComponentAction\";\n\nexport const initialState = {\n  isLoadingGlobal: false,\n  isLoadingFormGlobal: false,\n  isModalVisible: false,\n};\n\nexport default function ComponentReducer(state = initialState, action) {\n  if (!action) {\n    return state;\n  }\n  const newState = Object.assign({}, state);\n\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case PROCESS_GLOBAL_LOADING:\n      newState.isLoadingGlobal = action.payload;\n      return { ...newState };\n    case PROCESS_FORM_GLOBAL_LOADING:\n      newState.isLoadingFormGlobal = action.payload;\n      return { ...newState };\n    case SHOW_GLOBAL_MODAL:\n      newState.isModalVisible = action.payload;\n      return { ...newState };\n    case RESET_ALL_LOADING:\n      newState.isLoadingGlobal = false;\n      newState.isLoadingFormGlobal = false;\n      return { ...newState };\n  }\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_CUSTOMER_LIST_DATA = \"SET_CUSTOMER_LIST_DATA\";\nexport const SET_PAGING_CUSTOMER = \"SET_PAGING_CUSTOMER\";\nexport const SET_SELECTED_CUSTOMER_DATA = \"SET_SELECTED_CUSTOMER_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_CUSTOMER_ID = \"SET_SELECTED_CUSTOMER_ID\";\nexport const SET_CUSTOMER_LIST_DATA_DROPDOWN =\n  \"SET_CUSTOMER_LIST_DATA_DROPDOWN\";\n\nexport const setCustomerListData = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCustomerListDataDropdown = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingCustomer = (payload) => {\n  return {\n    type: SET_PAGING_CUSTOMER,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerData = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerId = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_ID,\n    payload,\n  };\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editCustomerForm\", `id`, \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, \"\"));\n};\n\nexport const loadCustomerListData = async () => {\n  try {\n    const { data } = await Invoke.getCustomerList(1, 100);\n    store.dispatch(setCustomerListData(data.callback.data));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getCustomerListDataByPaging = async (\n  page,\n  limit,\n  keyword = \"\",\n  branchId = \"\",\n  isDropdownData = false\n) => {\n  try {\n    const { data } = await Invoke.getCustomerList(\n      page,\n      limit,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdownData) {\n      store.dispatch(setCustomerListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setCustomerListData(data.callback.data));\n    }\n    store.dispatch(setPagingCustomer(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteCustomerProcess = async (customerId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteCustomerById(customerId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddCustomerProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n\n    await Invoke.addCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n    await Invoke.updateCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveCustomerRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddCustomerProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailCustomerToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().customers.selectedCustomerData;\n  const provinceId = data.province_id + \"|\" + data.province_name;\n  const cityId = data.city_id + \"|\" + data.city_name;\n  const branchId = data.branch_id + \"|\" + data.branch_name;\n\n  dispatch(change(\"editCustomerForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, data.pic_phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, data.pic ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, data.work_hour ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, provinceId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, cityId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, branchId ?? \"\"));\n};\n\nexport const deleteCustomerRequested = async (customerId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteCustomerProcess(customerId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_CUSTOMER_LIST_DATA,\n  SET_PAGING_CUSTOMER,\n  SET_FORM_STATUS,\n  SET_SELECTED_CUSTOMER_DATA,\n  SET_SELECTED_CUSTOMER_ID,\n  SET_CUSTOMER_LIST_DATA_DROPDOWN,\n} from \"./CustomersActions\";\n\nexport const initialState = {\n  listCustomers: [],\n  listCustomersDropdown: [],\n  formStatus: \"add\",\n  selectedCustomerData: {},\n  selectedCustomerId: \"\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_CUSTOMER_LIST_DATA:\n      newState.listCustomers = action.payload;\n      return { ...newState };\n\n    case SET_CUSTOMER_LIST_DATA_DROPDOWN:\n      newState.listCustomersDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_CUSTOMER:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_DATA:\n      newState.selectedCustomerData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_ID:\n      newState.selectedCustomerId = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_LIST_ADMIN,\n  SET_FORM_STATUS,\n  SET_PAGING_ADMIN,\n  SET_SELECTED_ADMIN_ID,\n  SET_SELECTED_ADMIN_DATA,\n} from \"./AdminActions\";\n\nexport const initialState = {\n  listAdmin: [],\n  selectedAdminId: \"\",\n  selectedAdminData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ADMIN:\n      newState.listAdmin = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_ID:\n      newState.selectedAdminId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_DATA:\n      newState.selectedAdminData = action.payload;\n      return { ...newState };\n    case SET_PAGING_ADMIN:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_LIST_ROLES,\n  SET_SELECTED_ROLE_ID,\n  SET_SELECTED_ROLE_DETAIL,\n  SET_FORM_STATUS,\n  RESET_STATE,\n  SET_SELECTED_ROLE_MENU\n} from \"./RolesActions\";\n\nexport const initialState = {\n  listRoles: [],\n  selectedRoleId: \"\",\n  selectedRoleDetail: {},\n  selectedRoleMenu: [],\n  formStatus: \"add\",\n};\n\nexport default function rolesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ROLES:\n      newState.listRoles = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_ID:\n      newState.selectedRoleId = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_DETAIL:\n      newState.selectedRoleDetail = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_MENU:\n      newState.selectedRoleMenu = action.payload;\n      return { ...newState };\n\n    case RESET_STATE:\n      newState.listRoles = [];\n      newState.selectedRoleId = \"\";\n      newState.selectedRoleDetail = {};\n      newState.formStatus = \"add\";\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_LIST_DATA = \"SET_EMPLOYEE_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_ID = \"SET_SELECTED_EMPLOYEE_ID\";\nexport const SET_SELECTED_EMPLOYEE_DATA = \"SET_SELECTED_EMPLOYEE_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEES = \"SET_PAGING_EMPLOYEES\";\n\nexport const setEmployeeListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedRoleEmployee = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployees = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEES,\n    payload,\n  };\n};\n\nexport const loadEmployeeListData = async (\n  page,\n  limit,\n  keyword = \"\",\n  roleId = \"\",\n  branchId = \"\",\n  divisionId = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeList(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setEmployeeListData(data.callback.data));\n    store.dispatch(setPagingEmployees(paging));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getEmployeeToolsRequested = (employeeId, page, limit) => {\n  try {\n    const { data } = Invoke.getEmployeeTools(employeeId, page, limit);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployees(paging));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getRolesByEmployeeId = async (employeeId) => {\n  const { data } = await Invoke.getEmployeeRoles(employeeId, 1, 100);\n  let subItem = [];\n  data.callback.data.map((item, index) => {\n    subItem.push(item.role_id);\n  });\n  store.dispatch(setSelectedRoleEmployee(subItem));\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeProcess = async (values, selectedRoles) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.nik = values.nik;\n    payload.password = values.password ?? \"\";\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n\n    await Invoke.addEmployee(payload);\n    // await doSaveEmployeeRole(selectedRoles, \"add\");\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    loadEmployeeListData(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employees\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeProcess = async (values, roleSelected) => {\n  const { dispatch } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.nik = values.nik;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n    // Save Employee - roles actions\n    if (values.selectedRoles.length > 0) {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-and-add\");\n    } else {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-all\");\n    }\n    // Save Employee data actions\n    await Invoke.updateEmployee(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    setTimeout(() => {\n      navigate(\"/employees\");\n    }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doAddEmployeeRoleProcess = async (newRoleId, employeeId) => {\n  const payload = {\n    employee_id: employeeId,\n    role_id: newRoleId,\n  };\n  await Invoke.addEmployeeRole(payload);\n};\n\nconst doDeleteAllEmployeeRoleProcess = async (roleListApi) => {\n  roleListApi.data.map(async (item, index) => {\n    await Invoke.deleteEmployeeRole(item.id);\n  });\n};\n\nconst doDeleteEmployeeProcess = async (employeeId) => {\n  const { getState } = store;\n  const paging = getState().employees.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeById(employeeId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    loadEmployeeListData(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doSaveEmployeeRole = async (newRoleSelected, type) => {\n  const { getState } = store;\n  try {\n    const currentRoleSelected = getState().employees.selectedRoleEmployee;\n    const selectedEmployeeId = getState().employees.selectedEmployeeId;\n    const { data } = await Invoke.getEmployeeRoles(selectedEmployeeId, 1, 100);\n    const roleListApi = data.callback;\n\n    if (type === \"delete-all\") {\n      await currentRoleSelected.map(async (item, index) => {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n      });\n    } else if (type === \"add\") {\n      await newRoleSelected.map(async (item, index) => {\n        await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n      });\n    } else {\n      // Check if the user is has been have roles or not\n      if (currentRoleSelected.length > 0) {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      } else {\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveEmployeeRequested = async (\n  formStatus,\n  values,\n  roleSelected\n) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeProcess(values, roleSelected);\n      } else {\n        doEditEmployeeProcess(values, roleSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employees.selectedEmployeeData;\n  const branch = `${data.branch_id}|${data.branch_name}`;\n  const province = `${data.province_id}|${data.province_name}`;\n  const city = `${data.city_id}|${data.city_name}`;\n\n  dispatch(change(\"editEmployeeForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `nik`, data.nik ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, branch ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, province ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, city ?? \"\"));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(MasterDataActions.setCityListData([]));\n  dispatch(change(\"editEmployeeForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n};\n\nexport const deleteEmployeeRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n\n  if (!values) {\n    await loadEmployeeListData(page, limit, keyword);\n    return;\n  }\n\n  const splitRole = values.role ? values.role.split(\"|\") : \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const splitDivision = values.division ? values.division.split(\"|\") : \"\";\n\n  const roleId = values.role ? splitRole[0] : \"\";\n  const branchId = values.branch ? splitBranch[0] : \"\";\n  const divisionId = values.division ? splitDivision[0] : \"\";\n\n  try {\n    await loadEmployeeListData(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_ID,\n  SET_SELECTED_EMPLOYEE_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_ROLE_EMPLOYEE,\n  SET_PAGING_EMPLOYEES,\n} from \"./EmployeesActions\";\n\nexport const initialState = {\n  listEmployees: [],\n  selectedEmployeeId: \"\",\n  selectedEmployeeData: {},\n  selectedRoleEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_LIST_DATA:\n      newState.listEmployees = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_ID:\n      newState.selectedEmployeeId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_DATA:\n      newState.selectedEmployeeData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_EMPLOYEE:\n      newState.selectedRoleEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEES:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_TOOL_LIST_DATA = \"SET_EMPLOYEE_TOOL_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_ID = \"SET_SELECTED_EMPLOYEE_TOOLS_ID\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_DATA =\n  \"SET_SELECTED_EMPLOYEE_TOOLS_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEE_TOOLS = \"SET_PAGING_EMPLOYEE_TOOLS\";\n\nexport const setEmployeeToolsListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_TOOL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployeeTools = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEE_TOOLS,\n    payload,\n  };\n};\n\nexport const getEmployeeToolsRequested = async (\n  employeeId,\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeTools(employeeId, page, limit);\n    console.log(\"=== data : \", data);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployeeTools(paging));\n    store.dispatch(setEmployeeToolsListData(data.callback.data));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeToolsData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const slpitToolsId = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.tool_id = slpitToolsId[0];\n\n    await Invoke.addEmployeeTools(payload);\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const employeeId = getState().employees.selectedEmployeeId;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const splitTools = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.employee_id = employeeId;\n    payload.tool_id = splitTools[0];\n\n    // Save Employee data actions\n    await Invoke.updateEmployeeTools(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doDeleteEmployeeToolsProcess = async (employeeToolsId) => {\n  const { getState } = store;\n  const paging = getState().employeeTools.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeToolsById(employeeToolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveEmployeeToolsRequested = async (formStatus, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeToolsProcess(values);\n      } else {\n        doEditEmployeeToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employeeTools.selectedEmployeeToolsData;\n  // const splitTools = data;\n  const tools = `${data.tool_id}|${data.name}`;\n\n  dispatch(change(\"editEmployeeToolsForm\", `id`, data.id));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, tools));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(change(\"editEmployeeToolsForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, \"\"));\n};\n\nexport const deleteEmployeeToolsRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeToolsProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n\n  if (!values) {\n    getEmployeeToolsRequested(employeeId, page, limit, keyword);\n    return;\n  }\n\n  try {\n    await getEmployeeToolsRequested(employeeId, page, limit, keyword);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_TOOL_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_TOOLS_ID,\n  SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_EMPLOYEE_TOOLS,\n} from \"./EmployeeToolsActions\";\n\nexport const initialState = {\n  listEmployeeTools: [],\n  selectedEmployeeToolsId: \"\",\n  selectedEmployeeToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeeToolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_TOOL_LIST_DATA:\n      newState.listEmployeeTools = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_ID:\n      newState.selectedEmployeeToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_DATA:\n      newState.selectedEmployeeToolsData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEE_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_PROVINCE_LIST_DATA,\n  SET_MENU_LIST_DATA,\n  SET_CITY_LIST_DATA\n} from \"./MasterDataActions\";\n\nexport const initialState = {\n  listProvince: [],\n  listCity: [],\n  listMenu: [],\n};\n\nexport default function masterDataReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_PROVINCE_LIST_DATA:\n      newState.listProvince = action.payload;\n      return { ...newState };\n    case SET_CITY_LIST_DATA:\n      newState.listCity = action.payload;\n      return { ...newState };\n    case SET_MENU_LIST_DATA:\n      newState.listMenu = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_ID,\n  SET_SELECTED_UNIT_DATA,\n  SET_PAGING_UNIT\n} from \"./UnitsActions\";\n\nexport const initialState = {\n  listUnits: [],\n  selectedUnitsId: \"\",\n  selectedUnitsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_LIST_DATA:\n      newState.listUnits = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_ID:\n      newState.selectedUnitsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_DATA:\n      newState.selectedUnitsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_JOB_FORMS_LIST_DATA = \"SET_JOB_FORMS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_JOB_FORMS_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_JOB_FORMS_DATA = \"SET_SELECTED_JOB_FORMS_DATA\";\nexport const SET_PAGING_JOB_FORM = \"SET_PAGING_JOB_FORM\";\n\nexport const setJobFormsListData = (payload) => {\n  return {\n    type: SET_JOB_FORMS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingJobForm = (payload) => {\n  return {\n    type: SET_PAGING_JOB_FORM,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsData = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (jobFormsId) => {\n  try {\n    await Invoke.deleteJobForms(jobFormsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getJobFormsListDataRequested();\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editJobForms\", `id`, \"\"));\n  dispatch(change(\"editJobForms\", `name`, \"\"));\n  dispatch(change(\"editJobForms\", `description`, \"\"));\n};\n\nexport const mapDetailJobFormsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().jobForms.selectedJobFormsData;\n  dispatch(change(\"editJobForms\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editJobForms\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editJobForms\", `description`, data.description ?? \"\"));\n};\n\nexport const getJobFormsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListJobForm(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setJobFormsListData(data.callback.data));\n    store.dispatch(setPagingJobForm(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveJobFormsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddJobFormsProcess(values);\n      } else {\n        doEditJobFormsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteJobFormsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_JOB_FORMS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_JOB_FORMS_ID,\n  SET_SELECTED_JOB_FORMS_DATA,\n  SET_PAGING_JOB_FORM,\n} from \"./JobFormsActions\";\n\nexport const initialState = {\n  listJobForms: [],\n  selectedJobFormsId: \"\",\n  selectedJobFormsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function jobFormsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_JOB_FORMS_LIST_DATA:\n      newState.listJobForms = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_ID:\n      newState.selectedJobFormsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_DATA:\n      newState.selectedJobFormsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_JOB_FORM:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_BRANCH_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_BRANCH,\n  SET_SELECTED_BRANCH_ID,\n  SET_SELECTED_BRANCH_DATA,\n  SET_BRANCH_LIST_DATA_DROPDOWN\n} from \"./BranchActions\";\n\nexport const initialState = {\n  listBranch: [],\n  listBranchDropdown: [],\n  selectedBranchId: \"\",\n  selectedBranchData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_BRANCH_LIST_DATA:\n      newState.listBranch = action.payload;\n      return { ...newState };\n\n    case SET_BRANCH_LIST_DATA_DROPDOWN:\n      newState.listBranchDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_ID:\n      newState.selectedBranchId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_DATA:\n      newState.selectedBranchData = action.payload;\n      return { ...newState };\n    case SET_PAGING_BRANCH:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_SERVICES_SUMMARY_DATA,\n  SET_SELECTED_SERVICES_MEDIA_DATA,\n  SET_SELECTED_SERVICES_DAILIES_DATA,\n  SET_SELECTED_SERVICES_HISTORIES_DATA,\n  SET_SELECTED_SERVICES_CHECKLIST_DATA,\n  SET_SELECTED_SERVICES_REJECTED_DATA,\n  SET_REJECTIONS_MODAL,\n  SET_EDIT_TRANSACTION_MODAL,\n  SET_EDIT_DAILIES_MODAL,\n  SET_SELECTED_EDIT_DAILIES_DATA,\n  SET_SELECTED_UNIT,\n  RESET_DETAIL_SERVICE,\n  SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n  SET_GROUPING_SUMMARY_DATA,\n  SET_GROUPING_CHECKLIST_DATA,\n} from \"./DetailServiceTransactionAction\";\n\nexport const initialState = {\n  selectedServiceEmployeeList: [],\n  selectedServiceSummary: {},\n  selectedServiceMedia: [],\n  groupingSelectedServiceMedia: [],\n  groupingSelectedServiceSummary: [],\n  groupingSelectedServiceChecklist: [],\n  selectedServiceDailies: [],\n  selectedServiceHistories: [],\n  selectedServiceChecklist: [],\n  selectedServiceRejected: [],\n  rejectionsModal: false,\n  editTransactionModal: false,\n  editDailiesModal: false,\n  selectedEditDailies: {},\n  selectedUnit: \"Seluruh Unit\",\n};\n\nexport default function detailServiceTransactionReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA:\n      newState.selectedServiceEmployeeList = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_SUMMARY_DATA:\n      newState.selectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_MEDIA_DATA:\n      newState.selectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA:\n      newState.groupingSelectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SUMMARY_DATA:\n      newState.groupingSelectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_GROUPING_CHECKLIST_DATA:\n      newState.groupingSelectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_DAILIES_DATA:\n      newState.selectedServiceDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_HISTORIES_DATA:\n      newState.selectedServiceHistories = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_CHECKLIST_DATA:\n      newState.selectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_REJECTED_DATA:\n      newState.selectedServiceRejected = action.payload;\n      return { ...newState };\n    case SET_REJECTIONS_MODAL:\n      newState.rejectionsModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_TRANSACTION_MODAL:\n      newState.editTransactionModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_DAILIES_MODAL:\n      newState.editDailiesModal = action.payload;\n      return { ...newState };\n    case SET_SELECTED_EDIT_DAILIES_DATA:\n      newState.selectedEditDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      return { ...newState };\n    case RESET_DETAIL_SERVICE:\n      return initialState;\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_MODEL_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_MODEL_ID = \"SET_SELECTED_UNIT_MODEL_ID\";\nexport const SET_SELECTED_UNIT_MODEL_DATA = \"SET_SELECTED_UNIT_MODEL_DATA\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\n\nexport const setUnitModelListData = (payload) => {\n  return {\n    type: SET_UNIT_MODEL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_DATA,\n    payload,\n  };\n};\n\nexport const getUnitModelListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitModel(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitModelListData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitModelsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.addUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitModelsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = values.unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.updateUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (unitModelId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitModelById(unitModelId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitModelsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitModelsProcess(values);\n      } else {\n        doEditUnitModelsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitModelToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitModels.selectedUnitModelsData;\n\n  dispatch(change(\"editUnitModelForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, data.descriptions ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(change(\"editUnitModelForm\", `machineNo`, data.machine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, data.engine_model ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, data.engine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, data.chasis_no ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `transmissionNo`, data.transmission_no ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitModelForm\", `id`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `machineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `transmissionNo`, \"\"));\n};\n","import {\n  SET_UNIT_MODEL_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_MODEL_ID,\n  SET_SELECTED_UNIT_MODEL_DATA,\n  SET_PAGING_UNIT_MODEL\n} from \"./UnitModelActions\";\n\nexport const initialState = {\n  listUnitModels: [],\n  selectedUnitModelsId: \"\",\n  selectedUnitModelsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitModelReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_MODEL_LIST_DATA:\n      newState.listUnitModels = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_ID:\n      newState.selectedUnitModelsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_DATA:\n      newState.selectedUnitModelsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_ENUM_UNIT_MODEL = \"SET_ENUM_UNIT_MODEL\";\n\nexport const setEnumUnintModel = (payload) => {\n  return {\n    type: SET_ENUM_UNIT_MODEL,\n    payload,\n  };\n};\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateUnitModel = async (unitId, fieldIndex) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getListUnitModel(1, 100, unitId, \"\");\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${fieldIndex}].enumUnitModel`,\n      data.callback.data ?? []\n    )\n  );\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"externalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(1, 200, employeeData.province_id);\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === employeeData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        citySelected.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        citySelected\n      )\n    );\n    // store.dispatch(\n    //   change(\"externalServiceForm\", \"employeeCityName\", detailEmployee.nik)\n    // );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"externalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"externalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const onChangeUnitModel = (val, index, enumUnit) => {\n  const { dispatch } = store;\n\n  const splitUnitModel = val.split(\"|\");\n\n  const [selectedUnitModel] = enumUnit.filter(\n    (x) => x.id === splitUnitModel[0]\n  );\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${index}].unitModelSerialNumber`,\n      selectedUnitModel.serial_number ?? \"\"\n    )\n  );\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  const splitWarranty = values.warranty.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const unitList = [];\n  values.units.map((item, index) => {\n    const splitUnitModel = item.unitModelId.split(\"|\");\n    unitList.push({\n      unit_model_id: splitUnitModel[0],\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"true\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: splitWarranty[0],\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: unitList ?? [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              resolve();\n            }, 1000);\n            setTimeout(() => {\n              navigate(\"list_service\");\n            }, 1500);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import { SET_ENUM_UNIT_MODEL } from \"./ExternalServiceActions\";\n\nexport const initialState = {\n  enumUnitModel: [],\n};\n\nexport default function externalServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ENUM_UNIT_MODEL:\n      newState.enumUnitModel = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change, reset } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { message } from \"antd\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_IDENTIFICATIONN_LIST_DATA = \"SET_IDENTIFICATIONN_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_IDENTIFICATION_ID = \"SET_SELECTED_IDENTIFICATION_ID\";\nexport const SET_PAGING_IDENTIFICATION = \"SET_PAGING_IDENTIFICATION\";\nexport const SET_SELECTED_IDENTIFICATION_DATA =\n  \"SET_SELECTED_IDENTIFICATION_DATA\";\n\nexport const setIdentificationListData = (payload) => {\n  return {\n    type: SET_IDENTIFICATIONN_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingIdentification = (payload) => {\n  return {\n    type: SET_PAGING_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationId = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationData = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_DATA,\n    payload,\n  };\n};\n\nexport const getIdentificationListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState, dispatch } = store;\n  try {\n    const branches = getState().branch.listBranch;\n    const { data } = await Invoke.getIdentificationList(page, limit, keyword);\n    const identificationList = data.callback.data;\n\n    const newIdentificationList = [];\n    if (identificationList.length > 0) {\n      identificationList.map((item, index) => {\n        const [defaultBranch] = branches.filter((x) => x.id === item.branch_id);\n        item.branch_name = defaultBranch ? defaultBranch.name : \"-\";\n\n        newIdentificationList.push(item);\n      });\n    }\n\n    dispatch(setIdentificationListData(newIdentificationList));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteIdentificationProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteIdentificationById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddIdentificationProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const splitCustomer = values.customer.split(\"|\");\n    const splitBranch = values.branch.split(\"|\");\n    const splitLocation = values.location.split(\"|\");\n    const splitMilling = values.milling.split(\"|\");\n    const splitType = values.type.split(\"|\");\n\n    const payload = {};\n    payload.customer_id = splitCustomer[0];\n    payload.branch_id = splitBranch[0];\n    payload.location = splitLocation[0];\n    payload.type = splitType[0];\n    payload.status = SelectStatus[0].value;\n    payload.milling = splitMilling[0];\n\n    await Invoke.addIdentification(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationMilling = async (values, isLastStep) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = !values.instanceType\n      ? \"\"\n      : values.instanceType.split(\"|\");\n    const splitMillingStatus = !values.millingStatus\n      ? \"\"\n      : values.millingStatus.split(\"|\");\n    const splitCity = !values.city ? \"\" : values.city.split(\"|\") ?? [];\n    const splitProvince = !values.province\n      ? \"\"\n      : values.province.split(\"|\") ?? [];\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0],\n      instance_name: values.instanceName ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0] ?? \"\",\n      city: splitCity[1] ?? \"\",\n      province: splitProvince[1] ?? \"\",\n      phone: values.phone ?? \"\",\n      milling_capacity: values.millingCapacity ?? \"\",\n      milling_work_capacity_perday: values.millingWorkCapacityPerDay ?? \"\",\n      rice_trademark: values.riceTrademark ?? \"\",\n      history_service_place: values.history_service_place ?? \"\",\n      history_service_type: values.history_service_type ?? \"\",\n      notes: values.note ?? \"\",\n      engine_confs: engineConfs,\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    if (isLastStep) {\n      showToast(\"Menyimpan perubahan\", \"success\");\n      setTimeout(() => {\n        navigate(\"identification\");\n      }, 1000);\n    }\n    // return;\n    await Invoke.updateIdentificationMilling(payload);\n    // showToast(\"Pembaruan Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationRegular = async (values, isFinished) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    if (!values || values === undefined) {\n      // showToast(\"Harap lengkapi form untuk melanjutkan\", \"error\");\n      return;\n    }\n\n    console.log(\"=== values : \", values);\n\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = values?.instanceType.split(\"|\");\n    const splitMillingStatus = values.millingStatus\n      ? values?.millingStatus.split(\"|\")\n      : [\"\"];\n    const splitCity = values?.city.split(\"|\");\n    const splitProvince = values?.province.split(\"|\");\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0] ?? \"\",\n      instance_name: values.instanceName ?? \"\",\n      instance_address: values.instanceAddress ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0],\n      address_district: \"\",\n      address_city: splitCity[1] ?? \"\",\n      address_province: splitProvince[1] ?? \"\",\n      address_subdistrict: values.kelurahan ?? \"\",\n      address_postal_code: values.postalCode ?? \"\",\n      phone: values.instancePhoneNumber ?? \"\",\n      product_name: values.productName,\n      buy_date: \"2021-09-22\",\n      assistance_date: \"2021-09-25\",\n      serial_number: \"SN1231\",\n      machine_number: \"MCN1231\",\n      gearbox_number: \"GB1231\",\n      production_unit_year: \"2021\",\n      work_hour_per_day: \"8 Hours\",\n      hour_meter: 1233,\n      history_service_place: \"Fee Text\",\n      history_service_type: \"Fee Text\",\n      notes: \"Test Regular Identification\",\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    // return;\n    await Invoke.updateIdentificationRegular(payload);\n    if (isFinished) {\n      showToast(\"Data berhasil disimpan\", \"success\");\n      getIdentificationListRequested(page, limit);\n      navigate(\"/identification\");\n    }\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n// === END INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(reset(\"editIdentificationhForm\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().identification.setSelectedIdentificationData;\n  dispatch(change(\"editIdentificationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editIdentificationForm\", `description`, data.name ?? \"\"));\n};\n\nexport const saveIdentificationRequested = async (\n  type,\n  values,\n  isLastStep = false\n) => {\n  const { getState } = store;\n  const isMilling =\n    getState().identification.selectedIdentificationData.milling;\n\n  if (type === \"add\") {\n    doAddIdentificationProcess(values);\n  } else {\n    if (isMilling) {\n      doUpdateIdentificationMilling(values, isLastStep);\n    } else {\n      doUpdateIdentificationRegular(values, isLastStep);\n    }\n  }\n};\n\nexport const deleteIdentificationRequested = async (identificationId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteIdentificationProcess(identificationId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_IDENTIFICATIONN_LIST_DATA,\n  SET_SELECTED_IDENTIFICATION_DATA,\n  SET_SELECTED_IDENTIFICATION_ID,\n  SET_FORM_STATUS,\n  SET_PAGING_IDENTIFICATION\n} from \"./IdentificationActions\";\n\nexport const initialState = {\n  listIdentification: [],\n  selectedIdentificationId: \"\",\n  selectedIdentificationData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function identificationReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_IDENTIFICATIONN_LIST_DATA:\n      newState.listIdentification = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_ID:\n      newState.selectedIdentificationId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_DATA:\n      newState.selectedIdentificationData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_IDENTIFICATION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_MACHINE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_MACHINE_ID,\n  SET_SELECTED_MACHINE_DATA,\n  SET_PAGING_MACHINE_CONF,\n} from \"./MachineConfigurationActions\";\n\nexport const initialState = {\n  listMachine: [],\n  selectedMachineId: \"\",\n  selectedMachineData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function machineConfigurationReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MACHINE_LIST_DATA:\n      newState.listMachine = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_ID:\n      newState.selectedMachineId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_DATA:\n      newState.selectedMachineData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MACHINE_CONF:\n      newState.paging = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_TOOLS_LIST_DATA = \"SET_TOOLS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_TOOLS_ID = \"SET_SELECTED_TOOLS_ID\";\nexport const SET_SELECTED_TOOLS_DATA = \"SET_SELECTED_TOOLS_DATA\";\nexport const SET_PAGING_TOOLS = \"SET_PAGING_TOOLS\";\n\nexport const setToolsListData = (payload) => {\n  return {\n    type: SET_TOOLS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingTools = (payload) => {\n  return {\n    type: SET_PAGING_TOOLS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteToolsProcess = async (toolsId) => {\n  const { getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteTool(toolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getToolsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.addTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.updateTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editToolsForm\", `id`, \"\"));\n  dispatch(change(\"editToolsForm\", `name`, \"\"));\n  dispatch(change(\"editToolsForm\", `description`, \"\"));\n};\n\nexport const mapDetailToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().tools.selectedToolsData;\n  dispatch(change(\"editToolsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editToolsForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editToolsForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getToolsListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListTools(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setToolsListData(data.callback.data));\n    store.dispatch(setPagingTools(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveToolsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddToolsProcess(values);\n      } else {\n        doEditToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteToolsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteToolsProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_TOOLS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_TOOLS_ID,\n  SET_SELECTED_TOOLS_DATA,\n  SET_PAGING_TOOLS,\n} from \"./ToolsActions\";\n\nexport const initialState = {\n  listTools: [],\n  selectedToolsId: \"\",\n  selectedToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function toolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_TOOLS_LIST_DATA:\n      newState.listTools = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_ID:\n      newState.selectedToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_DATA:\n      newState.selectedToolsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_FORM_CATEGORY_LIST_DATA = \"SET_FORM_CATEGORY_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_FORM_CATEGORY_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_FORM_CATEGORY_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_FORM_CATEGORY = \"SET_PAGING_FORM_CATEGORY\";\n\nexport const setFormCategoryListData = (payload) => {\n  return {\n    type: SET_FORM_CATEGORY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingFormCategory = (payload) => {\n  return {\n    type: SET_PAGING_FORM_CATEGORY,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryId = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_ID,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryData = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteFormCategoryProcess = async (categoryFormId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteFormCategory(categoryFormId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"Nones\";\n    await Invoke.updateFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editFormCategory\", `id`, \"\"));\n  dispatch(change(\"editFormCategory\", `name`, \"\"));\n  dispatch(change(\"editFormCategory\", `description`, \"\"));\n};\n\nexport const mapDetailCategoryToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().formCategory.selectedFormCategoryData;\n  dispatch(change(\"editFormCategory\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editFormCategory\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editFormCategory\", `description`, data.description ?? \"\"));\n};\n\nexport const getFormCatgeoryListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getFormCategory(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setFormCategoryListData(data.callback.data));\n    store.dispatch(setPagingFormCategory(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveFormCategoryRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddFormCategoryProcess(values);\n      } else {\n        doEditFormCategoryProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteFormCategoryRequested = async (formCategoryId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteFormCategoryProcess(formCategoryId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_FORM_CATEGORY_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_FORM_CATEGORY_ID,\n  SET_SELECTED_FORM_CATEGORY_DATA,\n  SET_PAGING_FORM_CATEGORY\n} from \"./FormCategoryActions\";\n\nexport const initialState = {\n  listFormCategory: [],\n  selectedFormCategoryId: \"\",\n  selectedFormCategoryData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function formCategoryReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_FORM_CATEGORY_LIST_DATA:\n      newState.listFormCategory = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_ID:\n      newState.selectedFormCategoryId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_DATA:\n      newState.selectedFormCategoryData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_FORM_CATEGORY:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_FIELDS_LIST_DATA = \"SET_UNIT_FIELDS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_FIELDS_ID = \"SET_SELECTED_UNIT_FIELDS_ID\";\nexport const SET_SELECTED_UNIT_FIELDS_DATA = \"SET_SELECTED_UNIT_FIELDS_DATA\";\nexport const SET_PAGING_UNIT_FIELDS = \"SET_PAGING_UNIT_FIELDS\";\n\nexport const setUnitFieldsListData = (payload) => {\n  return {\n    type: SET_UNIT_FIELDS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitFields = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_FIELDS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_DATA,\n    payload,\n  };\n};\n\nexport const getUnitFieldsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitFields(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitFieldsListData(data.callback.data));\n    store.dispatch(setPagingUnitFields(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddUnitFieldsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.addUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitFieldsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitFieldsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitFieldsProcess(values);\n      } else {\n        doEditUnitFieldsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_UNIT_FIELDS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_FIELDS_ID,\n  SET_SELECTED_UNIT_FIELDS_DATA,\n  SET_PAGING_UNIT_FIELDS,\n} from \"./UnitFieldsActions\";\n\nexport const initialState = {\n  listUnitFields: [],\n  selectedUnitFieldsId: \"\",\n  selectedUnitFieldsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitFieldsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_FIELDS_LIST_DATA:\n      newState.listUnitFields = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_ID:\n      newState.selectedUnitFieldsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_DATA:\n      newState.selectedUnitFieldsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_FIELDS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_MONITORING_EMPLOYEE_LIST_DATA =\n  \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setMonitoringEmployeeListData = (payload) => {\n  return {\n    type: SET_MONITORING_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getMonitoringEmployeeListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().monitoringEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportMonitoringEmployee(\n      page,\n      limit,\n      from,\n      until,\n      type,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListMonitoringEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newListMonitoringEmployee.push({\n            created_date: item.date,\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(\n      setMonitoringEmployeeListData(newListMonitoringEmployee ?? [])\n    );\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n\n  if (!values) {\n    await getMonitoringEmployeeListDataRequested(page, limit);\n    return;\n  }\n  const splitType = values.type ? values.type.split(\"|\") : \"\";\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const type = values.type ? splitType[0] : \"all\";\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_MONITORING_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./MonitoringEmployeeActions\";\n\nexport const initialState = {\n  listMonitoringEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function monitoringEmployeeReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MONITORING_EMPLOYEE_LIST_DATA:\n      newState.listMonitoringEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_SERVICE_REPAIR_LIST_DATA = \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_SERVICE_REPAIR = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setServiceRepairListData = (payload) => {\n  return {\n    type: SET_SERVICE_REPAIR_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingServiceRepair = (payload) => {\n  return {\n    type: SET_PAGING_SERVICE_REPAIR,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getServiceRepairListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().serviceRepair.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportServiceRepair(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListServiceRepair = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        newListServiceRepair.push({\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setServiceRepairListData(newListServiceRepair ?? []));\n    store.dispatch(setPagingServiceRepair(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().serviceRepair.paging;\n\n  if (!values) {\n    await getServiceRepairListDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_SERVICE_REPAIR_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_SERVICE_REPAIR,\n} from \"./ReportServiceRepairActions\";\n\nexport const initialState = {\n  listServiceRepair: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportServiceRepairReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SERVICE_REPAIR_LIST_DATA:\n      newState.listServiceRepair = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_SERVICE_REPAIR:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_EMPLOYEE_LIST_DATA = \"SET_REPORT_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_REPORT_EMPLOYEE = \"SET_PAGING_REPORT_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportEmployeeListData = (payload) => {\n  return {\n    type: SET_REPORT_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportEmployee = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportEmployeeListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee.paging;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/* eslint-disable default-case */\nimport {\n  SET_REPORT_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_REPORT_EMPLOYEE,\n} from \"./ReportEmployeeActions\";\n\nexport const initialState = {\n  listReportEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportEmployeeReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  switch (action.type) {\n    case SET_REPORT_EMPLOYEE_LIST_DATA:\n      newState.listReportEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_REPORT_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_LIST_DATA = \"SET_DIVISION_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_ID = \"SET_SELECTED_DIVISION_ID\";\nexport const SET_SELECTED_DIVISION_DATA = \"SET_SELECTED_DIVISION_DATA\";\nexport const SET_PAGING_DIVISION = \"SET_PAGING_DIVISION\";\n\nexport const setDivisionListData = (payload) => {\n  return {\n    type: SET_DIVISION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivision = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteDivisionProcess = async (divisionId) => {\n  const { getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteDivision(divisionId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddDivisionProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = headDivision[0];\n    payload.title = values.title;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.title = values.title;\n    payload.employee_id = headDivision[0];\n    payload.description = values.description ?? \"none\";\n    await Invoke.updateDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editDivisionForm\", `id`, \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, \"\"));\n  dispatch(change(\"editDivisionForm\", `headDivision`, \"\"));\n};\n\nexport const mapDetailDivisionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().division.selectedDivisionData;\n\n  dispatch(change(\"editDivisionForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, data.description ?? \"\"));\n  dispatch(\n    change(\n      \"editDivisionForm\",\n      `headDivision`,\n      `${data.employee_id}|${data.employee_name}`\n    )\n  );\n};\n\nexport const getDivisionListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getDivisionList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionListData(data.callback.data));\n    store.dispatch(setPagingDivision(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveDivisionRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionProcess(values);\n      } else {\n        doEditDivisionProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteDivisionRequested = async (divisionId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteDivisionProcess(divisionId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_DIVISION_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_ID,\n  SET_SELECTED_DIVISION_DATA,\n  SET_PAGING_DIVISION\n} from \"./DivisionActions\";\n\nexport const initialState = {\n  listDivision: [],\n  selectedDivisionId: \"\",\n  selectedDivisionData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_LIST_DATA:\n      newState.listDivision = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_ID:\n      newState.selectedDivisionId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_DATA:\n      newState.selectedDivisionData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_UNIT_LIST_DATA = \"SET_DIVISION_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_UNIT_ID = \"SET_SELECTED_DIVISION_UNIT_ID\";\nexport const SET_SELECTED_DIVISION_UNIT_DATA =\n  \"SET_SELECTED_DIVISION_UNIT_DATA\";\nexport const SET_PAGING_DIVISION_UNIT = \"SET_PAGING_DIVISION_UNIT\";\n\nexport const setDivisionUnitListData = (payload) => {\n  return {\n    type: SET_DIVISION_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivisionUnit = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisonUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_DATA,\n    payload,\n  };\n};\n\nexport const getDivisionUnitListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const divisionId = getState().division.selectedDivisionId;\n  try {\n    const { data } = await Invoke.getDivisionUnitList(\n      divisionId,\n      page,\n      limit,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionUnitListData(data.callback.data));\n    store.dispatch(setPagingDivisionUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddDivisionUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const divisionId = getState().division.selectedDivisionId;\n  const { page, limit } = paging;\n  const splitUnitId = values.unit.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = splitUnitId[0];\n    payload.division_id = divisionId;\n\n    await Invoke.addDivisionUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const unitId = getState().division.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveDivisionUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionUnitProcess(values);\n      } else {\n        doEditDivisionUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_DIVISION_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_UNIT_ID,\n  SET_SELECTED_DIVISION_UNIT_DATA,\n  SET_PAGING_DIVISION_UNIT,\n} from \"./DivisionUnitActions\";\n\nexport const initialState = {\n  listDivisionUnit: [],\n  selectedDivisionUnitId: \"\",\n  selectedDivisionUnitData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionUnitReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_UNIT_LIST_DATA:\n      newState.listDivisionUnit = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_ID:\n      newState.selectedDivisionUnitId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_DATA:\n      newState.selectedDivisionUnitData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_DASHBOARD_DATA = \"SET_DASHBOARD_DATA\";\n\nexport const setDashboardData = (payload) => {\n  return {\n    type: SET_DASHBOARD_DATA,\n    payload,\n  };\n};\n\nexport const getDashboardProgressData = async () => {\n  try {\n    const { dispatch } = store;\n    const { data } = await Invoke.getDashboardProgressData();\n    dispatch(setDashboardData(data.callback));\n  } catch (e) {\n    console.log(\"error : \", e);\n  }\n};\n","import { SET_DASHBOARD_DATA } from \"./DashboardActions\";\n\nexport const initialState = {\n  dashboardData: {},\n};\n\nexport default function dashboardReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DASHBOARD_DATA:\n      newState.dashboardData = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\n\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_UNIT_SERIAL_NUMBER_DATA = \"SET_UNIT_SERIAL_NUMBER_DATA\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_ID =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_ID\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_DATA =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_DATA\";\n\nexport const setUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const handleSearch = (val, keyword) => {\n  const { getState, dispatch } = store;\n  const { page, limit } = getState().unitSerialNumber.paging;\n  try {\n    if (!val) {\n      toast.warning(\n        \"Wajib memilih customer untuk menampilkan data serial number\",\n        {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n      dispatch(setUnitSerialNumberData([]));\n      return;\n    }\n    const splitCustomerId = val.customer.split(\"|\");\n    getUnitSerialNumber(page, limit, keyword, splitCustomerId[0]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUnitSerialNumber = async (\n  page,\n  limit,\n  keyword = \"\",\n  customerId\n) => {\n  // If customerId is null or undefined return this\n  if (!customerId) {\n    store.dispatch(setUnitSerialNumberData([]));\n    return;\n  }\n\n  const { getState } = store;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  try {\n    const { data } = await Invoke.getUnitSerialNumber(\n      page,\n      limit,\n      keyword,\n      unitModelId,\n      customerId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitSerialNumberData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitSerialNumberProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const customerId = values.customer.split(\"|\");\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.customer_id = customerId[0];\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.description ?? \"None\";\n\n    await Invoke.addUnitSerialNumber(payload, unitModelId);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitSerialNumberProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const unitSerialNumberId =\n    getState().unitSerialNumber.selectedUnitSerialNumberId;\n\n  try {\n    const payload = {};\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.descriptions ?? \"None\";\n\n    await Invoke.updateUnitSerialNumber(\n      payload,\n      unitModelId,\n      unitSerialNumberId\n    );\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (serialNumberId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitSerialNumber(unitModelId, serialNumberId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitSerialNumber(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitSerialNumberRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitSerialNumberProcess(values);\n      } else {\n        doEditUnitSerialNumberProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitSerialNumberToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitSerialNumber.selectedUnitSerialNumberData;\n\n  dispatch(\n    change(\n      \"editUnitSerialNumberForm\",\n      `customer`,\n      `${data.customer_id}|${data.customer_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `description`, data.descriptions ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitSerialNumberForm\", `customer`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `description`, \"\"));\n};\n","import {\n  SET_UNIT_SERIAL_NUMBER_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n  SET_PAGING_UNIT_MODEL,\n} from \"./UnitSerialNumberActions\";\n\nexport const initialState = {\n  listUnitSerialNumber: [],\n  selectedUnitSerialNumberId: \"\",\n  selectedUnitSerialNumberData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitSerialNumberReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_SERIAL_NUMBER_DATA:\n      newState.listUnitSerialNumber = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_ID:\n      newState.selectedUnitSerialNumberId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_DATA:\n      newState.selectedUnitSerialNumberData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\r\nimport Invoke from \"../../../app/axios/Invoke\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport { showToast } from \"../../Roles/Store/RolesActions\";\r\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\r\n\r\nexport const SET_UNIT_JOB_FORMS_LIST_DATA = \"SET_UNIT_JOB_FORMS_LIST_DATA\";\r\nexport const SET_PAGING_UNIT_JOB_FORMS = \"SET_PAGING_UNIT_JOB_FORMS\";\r\n\r\nexport const setUnitJobFormsListData = (payload) => {\r\n  return {\r\n    type: SET_UNIT_JOB_FORMS_LIST_DATA,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setPagingUnitJobForms = (payload) => {\r\n  return {\r\n    type: SET_PAGING_UNIT_JOB_FORMS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getUnitJobFormsListDataRequested = async (jobFormId = \"\") => {\r\n  const { getState } = store;\r\n  const unitId = getState().units.selectedUnitsId;\r\n  try {\r\n    // Get data unit jobforms from API\r\n    const { data } = await Invoke.getListUnitJobForms(unitId, jobFormId);\r\n\r\n    // Store data to reducer\r\n    store.dispatch(setUnitJobFormsListData(data.callback));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import {\r\n  SET_UNIT_JOB_FORMS_LIST_DATA,\r\n  SET_PAGING_UNIT_JOB_FORMS,\r\n} from \"./UnitJobFormActions\";\r\n\r\nexport const initialState = {\r\n  listUnitJobForms: [],\r\n  paging: {\r\n    page: 1,\r\n    limit: 10,\r\n    totalPage: 0,\r\n  },\r\n};\r\n\r\nexport default function unitJobFormsReducer(state = initialState, action) {\r\n  const newState = Object.assign({}, state);\r\n\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case SET_UNIT_JOB_FORMS_LIST_DATA:\r\n      newState.listUnitJobForms = action.payload;\r\n      return { ...newState };\r\n\r\n    case SET_PAGING_UNIT_JOB_FORMS:\r\n      newState.paging = { ...state.paging, ...action.payload };\r\n      return { ...newState };\r\n  }\r\n\r\n  return state;\r\n}\r\n","import { combineReducers } from \"redux\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport { connectRouter } from \"connected-react-router\";\nimport { reducer as formReducer } from \"redux-form\";\nimport history from \"./History\";\nimport authReducer from \"../modules/Auth/Store/AuthReducer\";\nimport listServicesReducer from \"../modules/ListServices/Store/ListServicesReducer\";\nimport ComponentReducer from \"../modules/App/Store/ComponentReducer\";\nimport customersReducer from \"../modules/Customers/Store/CustomersReducer\";\nimport adminReducer from \"../modules/Admin/Store/AdminReducer\";\nimport rolesReducer from \"../modules/Roles/Store/RolesReducer\";\nimport employeesReducer from \"../modules/Employees/Store/EmployeesReducer\";\nimport employeeToolsReducer from \"../modules/Employees/Store/EmployeeTools/EmployeeToolsReducer\";\nimport masterDataReducer from \"../modules/MasterData/Store/MasterDataReducer\";\nimport unitReducer from \"../modules/Units/Store/UnitsReducer\";\nimport jobFormsReducer from \"../modules/JobForms/Store/JobFormsReducer\";\nimport branchReducer from \"../modules/Branch/Store/BranchReducer\";\nimport detailServiceTransactionReducer from \"../modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer\";\nimport unitModelReducer from \"../modules/Units/Store/UnitModelReducer\";\nimport externalServiceReducer from \"../modules/ExternalService/Store/ExternalServiceReducer\";\nimport identificationReducer from \"../modules/Identification/Store/IdentificationReducer\";\nimport machineConfigurationReducer from \"../modules/MachineConfiguration/Store/MachineConfigurationReducer\";\nimport toolsReducer from \"../modules/Tools/Store/ToolsReducer\";\nimport formCategoryReducer from \"../modules/FormCategory/Store/FormCategoryReducer\";\nimport unitFieldsReducer from \"../modules/Units/Store/UnitFieldsReducer\";\nimport monitoringEmployeeReducer from \"../modules/MonitoringEmployee/Store/MonitoringEmployeeReducer\";\nimport reportServiceRepairReducer from \"../modules/ReportServiceRepair/Store/ReportServiceRepairReducer\";\nimport reportEmployeeReducer from \"../modules/ReportEmployee/Store/ReportEmployeeReducer\";\nimport divisionReducer from \"../modules/Division/Store/DivisionReducer\";\nimport divisionUnitReducer from \"../modules/Division/Store/DivisionUnitReducer\";\nimport dashboardReducer from \"../modules/Dashboard/Store/DashboardReducer\";\nimport unitSerialNumberReducer from \"../modules/Units/Store/UnitSerialNumberReducer\";\nimport unitJobFormsReducer from \"../modules/Units/Store/UnitJobFormsReducer\";\n\nconst rootReducers = combineReducers({\n  router: connectRouter(history),\n  auth: authReducer,\n  services: listServicesReducer,\n  externalService: externalServiceReducer,\n  admins: adminReducer,\n  roles: rolesReducer,\n  units: unitReducer,\n  unitModels: unitModelReducer,\n  unitFields: unitFieldsReducer,\n  unitSerialNumber: unitSerialNumberReducer,\n  unitJobForms: unitJobFormsReducer,\n  jobForms: jobFormsReducer,\n  customers: customersReducer,\n  employees: employeesReducer,\n  employeeTools: employeeToolsReducer,\n  component: ComponentReducer,\n  identification: identificationReducer,\n  masters: masterDataReducer,\n  branch: branchReducer,\n  formCategory: formCategoryReducer,\n  tools: toolsReducer,\n  machineConfiguration: machineConfigurationReducer,\n  detailService: detailServiceTransactionReducer,\n  monitoringEmployee: monitoringEmployeeReducer,\n  serviceRepair: reportServiceRepairReducer,\n  reportEmployee: reportEmployeeReducer,\n  division: divisionReducer,\n  divisionUnit: divisionUnitReducer,\n  dashboard: dashboardReducer,\n  form: formReducer,\n  toastr: toastrReducer,\n});\n\nexport default rootReducers;\n","import * as _ from \"lodash\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport Saga from \"./Saga/SagaMiddleware\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport history from \"../app/History\";\nimport rootReducers from \"./RootReducers\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"form\", \"component\"],\n};\n\nconst resetEnhancer = (rootReducer) => (state, action) => {\n  if (action.type !== \"LOGOUT\") {\n    return rootReducer(state, action);\n  } else {\n    const newState = rootReducer(undefined, {});\n    newState.router = state.router;\n    return newState;\n  }\n};\n\nconst persistedReducer = persistReducer(\n  persistConfig,\n  resetEnhancer(rootReducers)\n);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== \"production\" &&\n  typeof window === \"object\" &&\n  _.has(window, \"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\")\n    ? composeWithDevTools({ trace: true, traceLimit: 1000 })\n    : compose;\n\nexport const store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n);\nexport const persistor = persistStore(store);\nsagaMiddleware.run(Saga);\n","import { Form } from \"antd\";\nconst FormItem = Form.Item;\n\nexport const makeField =\n  (Component, props) =>\n  ({ style, input, meta, children, hasFeedback, label, ...rest }) => {\n    const hasError = meta.touched && meta.invalid;\n    return (\n      <FormItem\n        validateStatus={hasError ? \"error\" : \"success\"}\n        hasFeedback={hasFeedback && hasError}\n        help={hasError && meta.error}\n      >\n        <Component {...props} {...input} {...rest} children={children} />\n      </FormItem>\n    );\n  };\n","import React from \"react\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport styled from \"styled-components\";\ninterface IProps {\n  loading: boolean;\n}\n\nconst Overlay = styled.div`\n  position: fixed;\n  display: block;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 99999;\n  padding-top: 23vh;\n  text-align: center;\n  margin: auto;\n  display: block;\n`;\n\nconst CGlobalOverlay: React.FC<IProps> = (props) => {\n  const { loading } = props;\n  if (loading) {\n    return (\n      <Overlay>\n        <ScaleLoader\n          height={120}\n          width={18}\n          radius={12}\n          margin={5}\n          color={\"#faad14\"}\n          loading={true}\n        />\n      </Overlay>\n    );\n  }\n  return null;\n};\n\nexport default CGlobalOverlay;\n","import React from \"react\";\n\nconst Sidebar = ({\n  role,\n  mainMenu,\n  masterDataMenu,\n  reportMenu,\n  serviceRepairMenu,\n  reportDataMenu,\n}) => {\n  return (\n    <div>\n      <nav class=\"sidebar\">\n        <div class=\"sidebar-header\">\n          <a href=\"#\" class=\"sidebar-brand\">\n            Rutan<span>Admin</span>\n          </a>\n          <div class=\"sidebar-toggler not-active\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </div>\n        <div class=\"sidebar-body\">\n          <ul class=\"nav\">\n            {mainMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Main</li>\n            )}\n            {mainMenu?.length > 0 &&\n              mainMenu.map((item, index) => (\n                <li key={`sidebar-main-menu-${index}`} class=\"nav-item\">\n                  <a href={item.path} class=\"nav-link\">\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {masterDataMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Master Data</li>\n            )}\n            {masterDataMenu?.length > 0 &&\n              masterDataMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {serviceRepairMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Service Repair</li>\n            )}\n            {serviceRepairMenu?.length > 0 &&\n              serviceRepairMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {reportMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Monitoring</li>\n            )}\n            {reportMenu?.length > 0 &&\n              reportMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {reportDataMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Laporan</li>\n            )}\n            {reportDataMenu?.length > 0 &&\n              reportDataMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer class=\"footer d-flex flex-column flex-md-row align-items-center justify-content-between\">\n      <p class=\"text-muted text-center text-md-left\">\n        Copyright © {new Date().getFullYear() + \" \"}\n        <a href=\"#\">Rutan Team</a>. All rights reserved\n      </p>\n      <p class=\"text-muted text-center text-md-left mb-0 d-none d-md-block\">\n        Handcrafted With{\" \"}\n        <i class=\"mb-1 text-primary ml-1 icon-small\" data-feather=\"heart\"></i>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Navbar = (props) => {\n  const { onLogout, userDetail } = props;\n  return (\n    <nav class=\"navbar\">\n      <a href=\"#\" class=\"sidebar-toggler\">\n        <i data-feather=\"menu\"></i>\n      </a>\n      <div class=\"navbar-content\">\n        <form class=\"search-form\">\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <div class=\"input-group-text\">\n                <i data-feather=\"search\"></i>\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"navbarForm\"\n              placeholder=\"Search here...\"\n            />\n          </div>\n        </form>\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item dropdown nav-messages\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"messageDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"mail\"></i>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"messageDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">9 New Messages</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Leonardo Payne</p>\n                      <p class=\"sub-text text-muted\">2 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project status</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Carl Henson</p>\n                      <p class=\"sub-text text-muted\">30 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Client meeting</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Jensen Combs</p>\n                      <p class=\"sub-text text-muted\">1 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project updates</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>{userDetail.fullname}</p>\n                      <p class=\"sub-text text-muted\">2 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project deadline</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Yaretzi Mayo</p>\n                      <p class=\"sub-text text-muted\">5 hr ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">New record</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-notifications\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"notificationDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"bell\"></i>\n              <div class=\"indicator\">\n                <div class=\"circle\"></div>\n              </div>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"notificationDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">6 New Notifications</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"user-plus\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New customer registered</p>\n                    <p class=\"sub-text text-muted\">2 sec ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"gift\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New Order Recieved</p>\n                    <p class=\"sub-text text-muted\">30 min ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"alert-circle\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Server Limit Reached!</p>\n                    <p class=\"sub-text text-muted\">1 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"layers\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Apps are ready for update</p>\n                    <p class=\"sub-text text-muted\">5 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"download\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Download completed</p>\n                    <p class=\"sub-text text-muted\">6 hrs ago</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-profile\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"profileDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"https://via.placeholder.com/30x30\" alt=\"profile\" />\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"profileDropdown\">\n              <div class=\"dropdown-header d-flex flex-column align-items-center\">\n                {/* <div class=\"figure mb-3\">\n                  <img src=\"https://via.placeholder.com/80x80\" alt=\"\" />\n                </div> */}\n                <div class=\"info text-center\">\n                  <p class=\"name font-weight-bold mb-0\">\n                    {userDetail.fullname\n                      ? userDetail.fullname.toUpperCase()\n                      : \"Anonym\"}\n                  </p>\n                  <p class=\"email text-muted mb-3\">\n                    {userDetail.roles.map((item) => {\n                      if (userDetail.roles.length > 1) {\n                        return `${item.name},`;\n                      }\n                      return item.name;\n                    })}\n                  </p>\n                </div>\n              </div>\n              <div class=\"dropdown-body\">\n                <ul class=\"profile-nav p-0 pt-3\">\n                  <li class=\"nav-item\">\n                    <a href=\"pages/general/profile.html\" class=\"nav-link\">\n                      <i data-feather=\"user\"></i>\n                      <span>Profile</span>\n                    </a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a onClick={onLogout} class=\"nav-link cursor-pointer\">\n                      <i data-feather=\"log-out\"></i>\n                      <span>Log Out</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport CGlobalOverlay from \"../../../components/CGlobalOverlay/CGlobalOverlay\";\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport Navbar from \"../../../components/Navbar/Navbar\";\n\nconst TemplateComponent = (props) => {\n  const {\n    children,\n    isGlobalLoading,\n    isLandingPage,\n    logout,\n    userDetail,\n    role,\n    mainMenu,\n    masterDataMenu,\n    reportMenu,\n    serviceRepairMenu,\n    reportDataMenu,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <CGlobalOverlay loading={isGlobalLoading} />\n      {isLandingPage && (\n        <Sidebar\n          role={role}\n          masterDataMenu={masterDataMenu}\n          mainMenu={mainMenu}\n          reportMenu={reportMenu}\n          serviceRepairMenu={serviceRepairMenu}\n          reportDataMenu={reportDataMenu}\n        />\n      )}\n      <div className={`page-wrapper ${!isLandingPage ? \"full-page\" : \"\"}`}>\n        {isLandingPage && <Navbar onLogout={logout} userDetail={userDetail} />}\n        {children}\n        {isLandingPage && <Footer />}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TemplateComponent;\n","import { createSelector } from \"reselect\";\n\nconst selectorAuth = (state) => state.auth;\n\n// SELECTOR FOR AUTH\nexport const AllAuthData = () => createSelector(selectorAuth, (state) => state);\nexport const Token = () =>\n  createSelector(selectorAuth, (state) => state.accessToken);\nexport const UserDetail = () =>\n  createSelector(selectorAuth, (state) => state.userDetail);\nexport const ErrorData = () =>\n  createSelector(selectorAuth, (state) => state.error);\n","import { createSelector } from \"reselect\";\n\nconst selectorComponent = (state) => state.component;\n\nexport const IsGlobalLoading = () =>\n  createSelector(selectorComponent, (state) => state.isLoadingGlobal);\n","import React from \"react\";\nimport { compose } from \"redux\";\n\nimport TemplateComponent from \"../Component/TemplateComponent\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as authActions from \"../../Auth/Store/AuthAction\";\nimport * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\nimport * as AppSelector from \"../../App/Selector/AppSelector\";\n\nconst TemplateContainer = (props) => {\n  const [role, setRole] = React.useState(\"\");\n  const { userDetail } = props;\n\n  React.useEffect(() => {\n    if (userDetail && userDetail.role) {\n      setRole(userDetail.role[0].name);\n    }\n  }, [userDetail]);\n\n  const getIconName = (menu) => {\n    switch (menu) {\n      case \"/dashboard\":\n        return \"command\";\n\n      case \"/admin\":\n        return \"user\";\n\n      case \"/cabang\":\n        return \"link\";\n\n      case \"/employees\":\n        return \"users\";\n\n      case \"/customer\":\n        return \"users\";\n\n      case \"/division\":\n        return \"briefcase\";\n\n      case \"/role\":\n        return \"key\";\n\n      case \"/tools\":\n        return \"tool\";\n\n      case \"/machine\":\n        return \"settings\";\n\n      case \"/jobforms\":\n        return \"file-text\";\n\n      case \"/category\":\n        return \"file-text\";\n\n      case \"/unit\":\n        return \"box\";\n\n      case \"/internal-service\":\n        return \"file-plus\";\n\n      case \"/external-service\":\n        return \"file-plus\";\n\n      case \"/list_service\":\n        return \"list\";\n\n      case \"/monitoring-employee\":\n        return \"monitor\";\n\n      case \"/identification\":\n        return \"list\";\n\n      case \"/report_trans\":\n        return \"list\";\n\n      case \"/report_identification\":\n        return \"list\";\n\n      case \"/report_employee\":\n        return \"list\";\n\n      default:\n        return \"command\";\n    }\n  };\n\n  const mainMenu = [];\n  const masterDataMenu = [];\n  const reportMenu = [];\n  const serviceRepairMenu = [];\n  const reportDataMenu = [];\n\n  if (userDetail) {\n    userDetail.menus.map((item, index) => {\n      let menu = {};\n      menu.icon = getIconName(item.path);\n      menu.name = item.menu;\n      menu.path = item.path;\n\n      if (\n        item.path === \"/admin\" ||\n        item.path === \"/cabang\" ||\n        item.path === \"/employees\" ||\n        item.path === \"/customer\" ||\n        item.path === \"/division\" ||\n        item.path === \"/role\" ||\n        item.path === \"/tools\" ||\n        item.path === \"/machine\" ||\n        item.path === \"/jobforms\" ||\n        item.path === \"/category\" ||\n        item.path === \"/unit\" ||\n        item.path === \"/identification\"\n      ) {\n        masterDataMenu.push(menu);\n      } else if (\n        item.path === \"/internal-service\" ||\n        item.path === \"/external-service\" ||\n        item.path === \"/list_service\"\n      ) {\n        serviceRepairMenu.push(menu);\n      } else if (item.path === \"/monitoring-employee\") {\n        reportMenu.push(menu);\n      } else if (\n        item.path === \"/report_trans\" ||\n        item.path === \"/report_employee\" ||\n        item.path === \"/report_identification\"\n      ) {\n        reportDataMenu.push(menu);\n      } else {\n        mainMenu.push(menu);\n      }\n    });\n  }\n\n  return (\n    <TemplateComponent\n      role={role}\n      mainMenu={mainMenu}\n      masterDataMenu={masterDataMenu}\n      reportMenu={reportMenu}\n      serviceRepairMenu={serviceRepairMenu}\n      reportDataMenu={reportDataMenu}\n      {...props}\n    />\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  isGlobalLoading: AppSelector.IsGlobalLoading(),\n  userDetail: AuthSelector.UserDetail(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => {\n    authActions.doLogout(dispatch);\n  },\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(TemplateContainer);\n","import * as React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\n\nconst withTemplate = (Template, WrappedComponent, isLandingPage) => {\n  const AddedTemplate = (props) => {\n    return (\n      <Template {...props} isLandingPage={isLandingPage}>\n        <WrappedComponent {...props} />\n      </Template>\n    );\n  };\n\n  return hoistNonReactStatics(AddedTemplate, WrappedComponent);\n};\n\nexport default withTemplate;\n","import React from \"react\";\nimport { Button } from \"antd\";\n\ninterface IProps {\n  onClick: any;\n  disabled: boolean;\n  isLoading: boolean;\n  backgroundColor: string;\n  icon: any;\n  shape: \"default\" | \"circle\" | \"round\";\n  type: \"primary\" | \"dashed\" | \"default\" | \"ghost\" | \"link\" | \"text\";\n  size: \"middle\" | \"small\" | \"large\";\n  danger: boolean;\n  block: boolean;\n}\n\nconst CButtonAntd: React.FC<IProps> = (props) => {\n  const {\n    onClick,\n    children,\n    isLoading,\n    disabled,\n    icon,\n    shape,\n    type,\n    size,\n    danger,\n    backgroundColor\n  } = props;\n  return (\n    <Button\n      style={{backgroundColor: backgroundColor, borderColor: backgroundColor}}\n      block={props.block ?? false}\n      icon={icon ?? null}\n      type={type ?? \"default\"}\n      shape={shape ?? \"default\"}\n      onClick={onClick}\n      disabled={disabled}\n      loading={isLoading}\n      size={size ?? \"middle\"}\n      danger={danger}\n    >\n      {isLoading ? \"Loading\" : children}\n    </Button>\n  );\n};\n\nexport default CButtonAntd;\n","import { Table } from \"antd\";\nimport React from \"react\";\nimport '../../../app/style/tableStyle.css'\n\nconst DashboardComponent = (props) => {\n  const { userDetail, headers, listServices, dashboard } = props;\n  return (\n    <div>\n      <div class=\"page-content\">\n        <div class=\"d-flex justify-content-between align-items-center flex-wrap grid-margin\">\n          <h4 class=\"mt-5 ml-2\">{`Hallo, ${\n            userDetail.fullname ?? \"Anonym\"\n          }`}</h4>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12 col-xl-12 stretch-card\">\n            <div class=\"row flex-grow\">\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Customer</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-12 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalCustomer}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Service Internal</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-6 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalInternalService}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Service External</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-6 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalExternalService}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Identifikasi</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-6 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalIdentification}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12 col-xl-12 grid-margin stretch-card\"></div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-lg-12 col-xl-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between align-items-baseline mb-2\">\n                  <h6 class=\"card-title mb-0\">10 Service Terbaru</h6>\n                </div>\n                <p class=\"text-muted mb-4\">\n                  Menampilkan 10 service berdasarkan tanggal terbaru\n                </p>\n                {/* <div class=\"monthly-sales-chart-wrapper\"> */}\n                {/* <canvas id=\"monthly-sales-chart\"></canvas> */}\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      // ...pagination,\n                    }}\n                  />\n                </div>\n                {/* </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardComponent;\n","import { Space, Tag } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as AdminActions from \"../../Admin/Store/AdminActions\";\nimport * as RoleActions from \"../../Roles/Store/RolesActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport DashboardComponent from \"../Component/DashboardComponent\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\nimport { getDashboardProgressData } from \"../Store/DashboardActions\";\nimport { initializeApp } from \"../../../app/InitializeApp\";\n\nconst DashboardContainer = (props) => {\n  const {\n    handlePressEdit,\n    auth: { userDetail },\n    services: { dashboardListServices },\n    dashboard: { dashboardData },\n  } = props;\n  if (dashboardListServices.length > 0) {\n    dashboardListServices.map((item, index) => {\n      dashboardListServices[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  React.useEffect(() => {\n    store.dispatch(setGlobalLoading(false));\n    ListServiceActions.getTopTenService();\n    getDashboardProgressData();\n    initializeApp();\n  }, []);\n\n  if (Object.keys(dashboardData).length > 0) {\n    dashboardData.totalCustomer = dashboardData.totalCustomer\n      ? dashboardData.totalCustomer.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalInternalService = dashboardData.totalCustomer\n      ? dashboardData.totalInternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalExternalService = dashboardData.totalExternalService\n      ? dashboardData.totalExternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalIdentification = dashboardData.totalIdentification\n      ? dashboardData.totalIdentification.toLocaleString(\"en-US\")\n      : 0;\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"15%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"40%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: \"15%\",\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: \"15%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  return (\n    <DashboardComponent\n      userDetail={userDetail}\n      headers={headers}\n      listServices={dashboardListServices}\n      dashboard={dashboardData}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  services: state.services,\n  dashboard: state.dashboard,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContainer);\n","import React from \"react\";\n\ninterface IProps {\n  onChange: any;\n  value: string;\n  label: string;\n  name: string;\n  placeholder: string;\n  type: string;\n  typeComponent: string;\n  input: any;\n  error: boolean;\n  message: string;\n  meta: { error: any; touched: any };\n  disabled: boolean;\n  maxLength: number;\n  rows: number;\n  key: string;\n  labelSize: number;\n}\n\nconst CInput: React.FC<IProps> = (props) => {\n  switch (props.typeComponent) {\n    case \"textarea\":\n      return (\n        <div className=\"form-group\">\n          <label htmlFor={props.name}>{props.label}</label>\n          <textarea\n            key={props.key ?? \"\"}\n            id={props.name}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            maxLength={props.maxLength ?? 250}\n            rows={props.rows ?? 8}\n            name={props.name}\n            onChange={props.onChange}\n            placeholder={props.placeholder ?? \"\"}\n            value={props.value}\n            {...props.input}\n          ></textarea>\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n    default:\n      return (\n        <div className=\"form-group\">\n          <label\n            htmlFor={props.name}\n            style={{ fontSize: props.labelSize ?? 14 }}\n          >\n            {props.label}\n          </label>\n          <input\n            id={props.name}\n            maxLength={props.maxLength ?? 250}\n            value={props.value}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            name={props.name}\n            type={props.type}\n            onChange={props.onChange}\n            placeholder={props.placeholder ?? \"\"}\n            disabled={props.disabled ?? false}\n            {...props.input}\n          />\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n  }\n};\n\nexport default CInput;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\n\nconst LoginComponent = (props) => {\n  const { handleSubmit, submitForm, error } = props;\n\n  return (\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto\">\n          <div class=\"card\">\n            <div class=\"row\">\n              <div class=\"col-md-4 pr-md-0\">\n                <div class=\"auth-left-wrapper\"></div>\n              </div>\n              <div class=\"col-md-8 pl-md-0\">\n                <div class=\"auth-form-wrapper px-4 py-5\">\n                  <a href=\"#\" class=\"noble-ui-logo d-block mb-2\">\n                    Rutan<span>Admin</span>\n                  </a>\n                  <h5 class=\"text-muted font-weight-normal mb-4\">\n                    Selamat datang! Silahkan login dengan akun anda.\n                  </h5>\n                  <form\n                    class=\"forms-sample\"\n                    onSubmit={handleSubmit(submitForm)}\n                  >\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"username\"\n                        label=\"Username\"\n                        placeholder=\"Username\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder=\"Password\"\n                        component={CInput}\n                        type=\"password\"\n                      />\n                    </div>\n\n                    {error.status && (\n                      <span className=\"mt-2 text-danger\">{error.message}</span>\n                    )}\n\n                    <div class=\"mt-3\">\n                      <button\n                        type=\"submit\"\n                        class=\"btn btn-primary mr-2 mb-2 mb-md-0 text-white\"\n                      >\n                        Login\n                      </button>\n                    </div>\n                    <a href=\"register.html\" class=\"d-block mt-3 text-muted\">\n                      Belum punya akun? Daftar\n                    </a>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginComponent;\n","export const validateFormLogin = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Username wajib diisi!\";\n  } else if (values.username.length < 4) {\n    errors.username = \"Minimal 4 karakter atau lebih\";\n  }\n  if (!values.password) {\n    errors.password = \"Password wajib diisi!\";\n  } else if (values.password.length < 5) {\n    errors.password = \"Minimal 5 karakter atau lebih\";\n  }\n  return errors;\n};\n\nexport const validateFormInternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n};\n\nexport const validateFormExternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.jobForm) {\n    errors.jobForm = \"Job Form wajib diisi!\";\n  }\n  if (!values.warranty) {\n    errors.warranty = \"Job Form wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n  return errors;\n};\n\nexport const validateFormRoles = (values) => {\n  const errors = {};\n  if (!values.description) {\n    errors.description = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormCategory = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Judul wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnit = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Unit wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnitModel = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Model wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTools = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama peralatan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormEmployee = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama wajib diisi!\";\n  }\n  if (!values.phone) {\n    errors.phone = \"No. Telpon wajib diisi!\";\n  }\n  if (!values.province) {\n    errors.province = \"Wajib pilih provinsi!\";\n  }\n  if (!values.city) {\n    errors.city = \"Wajib pilih kota!\";\n  }\n  if (!values.branch) {\n    errors.branch = \"Wajib pilih cabang!\";\n  }\n  if (!values.address) {\n    errors.address = \"Wajib isi alamat!\";\n  }\n  return errors;\n};\n\nexport const validateServiceEmployeeForm = (values) => {\n  const errors = {};\n  if (!values.employee) {\n    errors.employee = \"Karyawan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionForm = (values) => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = \"Judul wajib diisi!\";\n  }\n  if (!values.headDivision) {\n    errors.headDivision = \"Kepala divisi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionUnitForm = (values) => {\n  const errors = {};\n  if (!values.unit) {\n    errors.unit = \"Unit wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateEmployeeToolsForm = (values) => {\n  const errors = {};\n  if (!values.tools) {\n    errors.tools = \"Peralatan wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateFormRejected = (values) => {\n  const errors = {};\n  if (!values.reson) {\n    errors.reson = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTransaction = (values) => {\n  const errors = {};\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateUnitSerialNumberForm = (values) => {\n  const errors = {};\n  if (!values.customer) {\n    errors.customer = \"Wajib memilih customer!\";\n  }\n  if (!values.serialNumber) {\n    errors.serialNumber = \"Serial number wajib diisi!\";\n  }\n  if (!values.descriptions) {\n    errors.descriptions = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n","import React from \"react\";\nimport LoginComponent from \"../Component/LoginComponent\";\nimport { reduxForm, reset } from \"redux-form\"; // imported Field\nimport { connect } from \"react-redux\";\nimport * as AuthActions from \"../Store/AuthAction\";\nimport * as AuthSelector from \"../Selector/AuthSelector\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport { createStructuredSelector } from \"reselect\";\nimport { navigate } from \"../../../app/Helpers\";\n\nconst LoginContainer = (props) => {\n  const { valid } = props;\n\n  const submitForm = (values) => {\n    // navigate(\"/preview-pdf\");\n    if (valid) {\n      AuthActions.handleSubmitLogin(values);\n    }\n  };\n\n  return <LoginComponent submitForm={submitForm} {...props} />;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  auth: AuthSelector.AllAuthData(),\n  error: AuthSelector.ErrorData(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"loginForm\"));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginContainer);\n\nexport default reduxForm({\n  form: \"loginForm\",\n  validate: validateForm.validateFormLogin,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport { Field } from \"redux-form\";\nimport { makeField } from \"../../app/FormHelpers\";\n\nconst { Option } = Select;\nconst ASelect = makeField(Select);\n\nconst CSelect = (props) => {\n  return (\n    <div>\n      <label htmlFor={props.name}>{props.label}</label>\n      <br />\n      <Field\n        style={{ width: \"100%\" }}\n        showSearch={props.showSearch ?? false}\n        name={props.name}\n        component={ASelect}\n        onChange={props.onChange}\n        onBlur={(e) => {\n          if (props.onBlur) {\n            props.onBlur();\n          }\n          e.preventDefault();\n        }}\n        {...props}\n      >\n        <Option disabled={props.disabled ?? false} value=\"\">\n          {props.placeholder ?? \"- Pilih -\"}\n        </Option>\n        {props.data.length > 0 &&\n          props.data.map((item, index) => {\n            return (\n              <Option\n                value={`${item.value}|${item.label}`}\n                key={`option-${index}`}\n              >\n                {item.label}\n              </Option>\n            );\n          })}\n      </Field>\n    </div>\n  );\n};\n\nexport default CSelect;\n","import React from \"react\";\nimport { DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { Field } from \"redux-form\";\n\nconst RenderDatePicker = (props) => {\n  const { name, input, label, meta } = props;\n\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n      <br />\n      <DatePicker\n        placeholder=\"Pilih Tanggal\"\n        style={{ width: \"100%\" }}\n        name={name}\n        onBlur={(e) => {\n          e.preventDefault();\n        }}\n        defaultValue={moment()}\n        {...input}\n      />\n      {meta.touched && meta.error && (\n        <span className=\"mt-2 text-danger\">\n          {meta.error ?? \"This field required\"}\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst CDatePicker = (props) => {\n  return (\n    <Field\n      component={RenderDatePicker}\n      onBlur={(e) => {\n        e.preventDefault();\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default CDatePicker;\n","import React from \"react\";\n\ninterface IProps {\n  type: \"submit\" | \"button\" | \"reset\";\n  onClick: any;\n  isLoading: boolean;\n}\n\nconst CButton: React.FC<IProps> = (props) => {\n  const { type, isLoading, onClick, children } = props;\n  return (\n    <button\n      onClick={onClick}\n      className=\"btn btn-primary\"\n      type={type}\n      disabled={isLoading}\n    >\n      {isLoading && (\n        <span\n          className=\"spinner-grow spinner-grow-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        ></span>\n      )}\n      {isLoading ? \"Loading...\" : children}\n    </button>\n  );\n};\n\nexport default CButton;\n","import React from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\n\nconst InternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    isLoadingFormGlobal,\n  } = props;\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({ employee: \"\" })}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah Internal Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan internal service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-4 mt-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                      />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12 mt-2\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      {/* <input\n                        class=\"btn btn-primary\"\n                        type=\"submit\"\n                        value=\"Simpan\"\n                      /> */}\n                      <CButton type=\"submit\" isLoading={isLoadingFormGlobal}>\n                        Simpan\n                      </CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InternalServiceComponent;\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nconst getCityByIdFromReducer = async (cityId) => {\n  const { getState } = store;\n  const { listCity } = getState().masters;\n  const result = listCity.filter((x) => x.id === cityId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"internalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n    return;\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    await MasterDataActions.loadCityListData(employeeData.province_id);\n\n    const cityData = await getCityByIdFromReducer(employeeData.city_id);\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        cityData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        cityData\n      )\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"internalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"internalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    console.log(\"=== City : \", cityData);\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"false\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: \"false\",\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              navigate(\"list_service\");\n              resolve();\n            }, 1000);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, reset } from \"redux-form\";\nimport InternalServiceComponent from \"../Component/InternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as InternalServiceActions from \"../Store/InternalServiceActions\";\nimport * as ComponentAction from \"../../App/Store/ComponentAction\";\nimport { enumTypeInternalServices } from \"../../../app/Helpers\";\n\nconst InternalServiceContainer = (props) => {\n  const {\n    valid,\n    customers: { listCustomersDropdown, paging, keyowrd },\n    employees: { listEmployees },\n    component: { isLoadingFormGlobal },\n  } = props;\n\n  const { page, limit } = paging;\n\n  const submitForm = (values) => {\n    if (valid) {\n      InternalServiceActions.handleSubmitForm(values);\n    } else {\n    }\n  };\n\n  React.useEffect(() => {\n    // Reset all form data and loading when first load data\n    ComponentAction.resetAllGlobalLoadingProcess();\n    // resetForm();\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    EmployeeActions.loadEmployeeListData(1, 999999);\n    MasterDataActions.loadProvinceListData();\n    // MasterDataActions.loadCityListData();\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <InternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      enumType={enumTypeInternalServices}\n      submitForm={submitForm}\n      isLoadingFormGlobal={isLoadingFormGlobal}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"internalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      InternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    InternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n    if (!customerId) {\n      InternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    InternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InternalServiceContainer);\n\nexport default reduxForm({\n  form: \"internalServiceForm\",\n  validate: validateForm.validateFormInternalService,\n  initialValues: {\n    employees: [],\n  },\n})(EnhanceContainer);\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport { getUnitModelEnum } from \"../../../app/Helpers\";\n\nconst ExternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    enumWarranty,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    listUnit,\n    enumJobForms,\n    handleAutoPopulateUnitModel,\n    externalValues,\n    onChangeUnitModel,\n    handleChangeType,\n    isTroubleShoot,\n  } = props;\n\n  const renderUnits = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Unit\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Unit ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-units-${indexUnit}`}\n                    onChange={(val) =>\n                      handleAutoPopulateUnitModel(val, indexUnit)\n                    }\n                    data={listUnit}\n                    name={`${itemUnit}.id`}\n                    label=\"Pilih Unit\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-model-${indexUnit}`}\n                    data={\n                      externalValues[indexUnit].enumUnitModel\n                        ? getUnitModelEnum(\n                            externalValues[indexUnit].enumUnitModel\n                          )\n                        : []\n                    }\n                    name={`${itemUnit}.unitModelId`}\n                    onChange={(val) => {\n                      if (externalValues[indexUnit].enumUnitModel.length > 0) {\n                        onChangeUnitModel(\n                          val,\n                          indexUnit,\n                          externalValues[indexUnit].enumUnitModel\n                        );\n                      }\n                    }}\n                    label=\"Model\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    key={`serial-number-${indexUnit}`}\n                    name={`${itemUnit}.unitModelSerialNumber`}\n                    label=\"Serial Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah External Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan external service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                        onChange={handleChangeType}\n                      />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                    <div class=\"col-md-2\">\n                      {!isTroubleShoot && (\n                        <CSelect\n                          data={enumJobForms}\n                          name=\"jobForm\"\n                          label=\"Job Form\"\n                        />\n                      )}\n                    </div>\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumWarranty}\n                        name=\"warranty\"\n                        label=\"Warranty\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu unit.\n                    </p>\n                  </div>\n                  <FieldArray name=\"units\" component={renderUnits} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      <CButton type=\"submit\">Simpan</CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExternalServiceComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  change,\n  formValueSelector,\n  getFormValues,\n  reduxForm,\n  reset,\n} from \"redux-form\";\nimport ExternalServiceComponent from \"../Component/ExternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ExternalServiceActions from \"../Store/ExternalServiceActions\";\nimport * as UnitsActions from \"../../Units/Store/UnitsActions\";\nimport * as JobFormsActions from \"../../JobForms/Store/JobFormsActions\";\nimport { enumTypeExternalServices, enumWarranty } from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"externalServiceForm\");\n\nconst ExternalServiceContainer = (props) => {\n  const [unitQty, setUnitQty] = React.useState(1);\n  const [unitData, setUnitData] = React.useState([]);\n  const [isTroubleShoot, setIsTroubleShoot] = React.useState(false);\n\n  const {\n    valid,\n    customers: { listCustomersDropdown },\n    employees: { listEmployees },\n    units: { listUnits },\n    jobForms: { listJobForms },\n    resetForm,\n    // form: { externalServiceForm },\n  } = props;\n\n  const submitForm = (values) => {\n    ExternalServiceActions.handleSubmitForm(values);\n    if (valid) {\n      console.log(\"success\");\n    }\n  };\n\n  const handleAddNewUnit = () => {\n    if (unitQty === 5) {\n      return;\n    }\n    setUnitQty(unitQty + 1);\n  };\n\n  const handleSubtractUnit = () => {\n    if (unitQty === 0) {\n      return;\n    }\n    setUnitQty(unitQty - 1);\n  };\n\n  const SelectUnit = [];\n  listUnits.map((item, index) => {\n    SelectUnit.push({\n      id: `unit-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    EmployeeActions.loadEmployeeListData(1, 99999);\n    MasterDataActions.loadProvinceListData();\n    return () => {\n      resetForm();\n    };\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectJobFormsData = [];\n  listJobForms.map((item, index) => {\n    SelectJobFormsData.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const handleChangeType = (val) => {\n    const type = val.split(\"|\");\n    if (\n      type[0] === \"T2\" ||\n      type[0] === \"T4\" ||\n      type[0] === \"T5\" ||\n      type[0] === \"T6\"\n    ) {\n      setIsTroubleShoot(true);\n    } else {\n      setIsTroubleShoot(false);\n    }\n  };\n\n  React.useEffect(() => {\n    UnitsActions.getUnitListDataRequested(1, 100);\n    JobFormsActions.getJobFormsListDataRequested(1, 100);\n    let totalUnit = [];\n    for (let i = 0; i < unitQty; i++) {\n      totalUnit.push(i);\n    }\n    setUnitData(totalUnit);\n  }, [unitQty]);\n\n  return (\n    <ExternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      listUnit={SelectUnit}\n      enumJobForms={SelectJobFormsData}\n      enumType={enumTypeExternalServices}\n      enumWarranty={enumWarranty}\n      submitForm={submitForm}\n      handleAddNewUnit={handleAddNewUnit}\n      handleSubtractUnit={handleSubtractUnit}\n      unitData={unitData}\n      handleChangeType={handleChangeType}\n      isTroubleShoot={isTroubleShoot}\n      // selectedUnitModelList={selectedUnitModelList}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  units: state.units,\n  jobForms: state.jobForms,\n  formValues: getFormValues(\"externalServiceForm\")(state),\n  externalValues: selector(state, \"units\"),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"externalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      ExternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n\n    if (!customerId) {\n      ExternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n  handleAutoPopulateUnitModel: (unitId, fieldIndex) => {\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].enumUnitModel`, [])\n    );\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].unitModelId`, \"\")\n    );\n    if (unitId) {\n      const arrVal = unitId.split(\"|\");\n      ExternalServiceActions.setAutoPopulateUnitModel(arrVal[0], fieldIndex);\n    }\n  },\n  onChangeUnitModel: (val, index, enumModel) => {\n    if (val) {\n      ExternalServiceActions.onChangeUnitModel(val, index, enumModel);\n    }\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExternalServiceContainer);\n\nexport default reduxForm({\n  form: \"externalServiceForm\",\n  validate: validateForm.validateFormExternalService,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryMonitoringServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst MonitoringEmployeeComponent = (props) => {\n  const {\n    headers,\n    listMonitoringEmployee,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumTypeReport,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Monitoring Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryMonitoringServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumTypeReport ?? []}\n                      name=\"type\"\n                      label=\"Tipe\"\n                    />\n                  </div>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                      placeholder=\"-Pilih Semua-\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Laporan\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listMonitoringEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MonitoringEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as MonitoringEmployeeActions from \"../Store/MonitoringEmployeeActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport MonitoringEmployeeComponent from \"../Component/MonitoringEmployeeComponent\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Tag } from \"antd\";\nimport { exportMonitoringEmployeePdf } from \"../Store/MonitoringEmployeeReport\";\nimport moment from \"moment\";\n\nconst MonitoringEmployeeContainer = (props) => {\n  const {\n    getListMonitoringEmployee,\n    handlePressAddNew,\n    monitoringEmployee: { listMonitoringEmployee, paging },\n    branch: { listBranchDropdown },\n    monitoringEmployeeFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMonitoringEmployee.length > 0) {\n    listMonitoringEmployee.map((item, index) => {\n      listMonitoringEmployee[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const printedData = {\n    listMonitoringEmployee,\n    from: moment(),\n    until: moment(),\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"job_type\",\n      key: \"job_type\",\n      render: (jobType) => {\n        let color = jobType === \"loss\" ? \"#f50\" : \"#f50\";\n        return (\n          <Tag style={{ width: 115, textAlign: \"center\" }} color={color}>\n            {jobType ? jobType.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.job_type.length - b.job_type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n      sorter: (a, b) => a.models.length - b.models.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranchDropdown.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListMonitoringEmployee(page, limit);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      MonitoringEmployeeActions.setPagingMonitoringEmployee(paging)\n    );\n    getListMonitoringEmployee(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    MonitoringEmployeeActions.handleSearch(monitoringEmployeeFormValues);\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportMonitoringEmployeePdf(printedData, monitoringEmployeeFormValues);\n  };\n\n  return (\n    <MonitoringEmployeeComponent\n      headers={headers}\n      listMonitoringEmployee={listMonitoringEmployee}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  monitoringEmployee: state.monitoringEmployee,\n  branch: state.branch,\n  monitoringEmployeeFormValues: getFormValues(\"monitoringEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMonitoringEmployee: (page, limit, keyword, type, from, until) =>\n    MonitoringEmployeeActions.getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MonitoringEmployeeContainer);\n\nexport default reduxForm({\n  form: \"monitoringEmployeeForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport moment from \"moment\";\n\nexport const exportMonitoringEmployeePdf = (data, values) => {\n  const { listMonitoringEmployee, from, until } = data;\n  const startDate = moment(from).format(\"YYYY-MM-DD\");\n  const dueDate = moment(until).format(\"YYYY-MM-DD\");\n  const monitoringEmployeeList = [];\n\n  listMonitoringEmployee.map((item, index) => {\n    monitoringEmployeeList.push({\n      no: index + 1,\n      nik: item.employee_nik,\n      name: item.employee_name,\n      phone: item.phone,\n      address: item.address,\n      type: item.job_type,\n      status: item.job_status,\n      branch: item.branch_name,\n      customer: item.customer_name,\n      createdDate: item.created_date,\n    });\n  });\n\n  const doc = new jsPDF();\n  // doc.text({from_left}, {from_top})\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Monitoring Karyawan\", 100, 20, \"center\");\n  doc.setFontSize(16);\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\n\n  doc.setFontSize(12);\n\n  //   Line 1\n  doc.text(15, 42, `Dari Tanggal`);\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\n  doc.text(15, 49, `Sampai Tanggal`);\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\n\n  // Check if filtered by branch\n  if (values) {\n    if (values.branch) {\n      const splitBranch = values.branch.split(\"|\");\n      doc.text(15, 56, `Cabang`);\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\n    }\n  }\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  const headTable = [\n    [\n      { content: \"Tanggal\", rowSpan: 2, halign: \"center\" },\n      {\n        content: \"Karyawan\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n      {\n        content: \"Service\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n    ],\n    [\n      \"NIK\",\n      \"Nama Karyawan\",\n      \"Cabang\",\n      \"Tipe\",\n      \"Customer\",\n      \"Unit\",\n      \"Model\",\n      \"Status\",\n    ],\n  ];\n\n  doc.autoTable({\n    startY: values ? 65 : 60,\n    body: monitoringEmployeeList,\n    theme: \"plain\",\n    head: headTable,\n    headStyles: { halign: \"center\", valign: \"middle\" },\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\n    columns: [\n      { header: \"Tanggal\", dataKey: \"createdDate\" },\n      { header: \"NIK\", dataKey: \"nik\" },\n      { header: \"Nama Karyawan\", dataKey: \"name\" },\n      { header: \"Cabang\", dataKey: \"branch\" },\n      { header: \"Tipe\", dataKey: \"type\" },\n      { header: \"Customer\", dataKey: \"customer\" },\n      { header: \"Unit\", dataKey: \"units\" },\n      { header: \"Model\", dataKey: \"unit_models\" },\n      { header: \"Status\", dataKey: \"status\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { columnWidth: 28 },\n      1: { columnWidth: 20 },\n      // 2: { halign: \"center\" },\n      // 3: { halign: \"center\" },\n      // 4: { halign: \"center\" },\n      // 5: { halign: \"center\" },\n      // 6: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  //   Export\n  doc.save(\"monitoring-employee.pdf\");\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportServiceRepairComponent = (props) => {\n  const { headers, listServiceRepair, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Service Repair</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServiceRepair}\n                    size={\"small\"}\n                    // scroll={{ x: 50, y: 50, scrollToFirstRowOnChange }}#108ee9\n                    scroll\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportServiceRepairComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined, BookOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee, getStatus } from \"../../../app/Helpers\";\nimport * as ReportServiceRepairActions from \"../Store/ReportServiceRepairActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport ReportServiceRepairComponent from \"../Component/ReportServiceRepairComponent\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport moment from \"moment\";\n\nconst ReportServiceRepairContainer = (props) => {\n  const {\n    handlePressAddNew,\n    serviceRepair: { listServiceRepair, paging },\n    branch: { listBranch },\n    serviceRepairFormValues,\n    getListServiceRepair,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listServiceRepair.length > 0) {\n    listServiceRepair.map((item, index) => {\n      listServiceRepair[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<BookOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type ? type.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_model_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due.length - b.due.length,\n      render: (due) => (\n        <Text>{due ? moment(due).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = getStatus(status).color;\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status ? getStatus(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"start\",\n      key: \"start\",\n      width: 500,\n      render: (start) => (\n        <Text>{start ? moment(start).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: 200,\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListServiceRepair(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportServiceRepairActions.handleSearch(serviceRepairFormValues);\n  };\n\n  return (\n    <ReportServiceRepairComponent\n      headers={headers}\n      listServiceRepair={listServiceRepair}\n      handlePressAddNew={handlePressAddNew}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  serviceRepair: state.serviceRepair,\n  branch: state.branch,\n  serviceRepairFormValues: getFormValues(\"serviceRepairForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServiceRepair: (page, limit, keyword, branch, from, until) =>\n    ReportServiceRepairActions.getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportServiceRepairContainer);\n\nexport default reduxForm({\n  form: \"serviceRepairForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportEmployeeComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportEmployeeActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportEmployeeComponent\";\n\nconst ReportEmployeeContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportEmployeeContainer);\n\nexport default reduxForm({\n  form: \"reportEmployeeForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Input, Table } from \"antd\";\nimport { calculateColumnsWidth, categoryServices } from \"../../../app/Helpers\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst ListServiceComponent = (props) => {\n  const {\n    headers,\n    listServices,\n    enumType,\n    enumStatus,\n    onChangePagination,\n    paging,\n    onSearch,\n    columns,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  // const tableHeight = 500;\n  // const maxWidthPerCell = 600;\n\n  // This helper function helps to calculate the width for each column\n  // based on all table cells - column cell and source cell\n  // const dataTable = calculateColumnsWidth(\n  //   columns,\n  //   listServices,\n  //   maxWidthPerCell\n  // );\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">List Service</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row d-flex mb-2\">\n                      {/* This Filter */}\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumType ?? []}\n                          name=\"typeService\"\n                          label=\"Filter Tipe\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumStatus ?? []}\n                          name=\"statusService\"\n                          label=\"Filter Status\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      ...pagination,\n                    }}\n                    // scroll={{ x: dataTable.tableWidth, y: tableHeight }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListServiceComponent;\n","import React from \"react\";\nimport { Space, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeExternalServices,\n  getIndex,\n  SelectStatusServices,\n} from \"../../../app/Helpers\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListServicesComponent from \"../Component/ListServicesComponent\";\nimport * as ListServiceActions from \"../Store/ListServicesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\n\nconst ListServicesContainer = (props) => {\n  const {\n    getListServices,\n    handlePressEdit,\n    handlePressDelete,\n    services: { listServices, paging },\n    listServiceFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listServices.length > 0) {\n    listServices.map((item, index) => {\n      listServices[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  // const columns = [\n  //   { dataIndex: \"no\", title: \"No\" },\n  //   { dataIndex: \"type\", title: \"Tipe\" },\n  //   { dataIndex: \"customer_name\", title: \"Customer\" },\n  //   { dataIndex: \"employees\", title: \"Teknisi\" },\n  //   { dataIndex: \"unit_models\", title: \"Unit\" },\n  //   { dataIndex: \"due\", title: \"Due Date\" },\n  //   { dataIndex: \"status\", title: \"Status\" },\n  //   { dataIndex: \"created_date\", title: \"Dibuat\" },\n  //   { dataIndex: \"action\", title: \"Aksi\", fixed: \"right\" },\n  // ];\n\n  // const source = listServices.map((service) => ({\n  //   no: service.no,\n  //   type: service.type,\n  //   customer_name: service.customer_name,\n  //   unit_models: service.unit_models,\n  //   due: service.due,\n  //   status: service.status,\n  //   created_date: service.created_date,\n  //   action: service.actions,\n  // }));\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"15%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: \"15%\",\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: \"15%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  React.useEffect(() => {\n    getListServices(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ListServiceActions.setPagingListService(paging));\n    getListServices(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    ListServiceActions.handleSearch(1, 10, val, listServiceFormValues);\n  };\n\n  return (\n    <ListServicesComponent\n      headers={headers}\n      listServices={listServices}\n      renderActionTable={renderActionTable}\n      handlePressEdit={handlePressEdit}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      enumType={enumTypeExternalServices}\n      enumStatus={SelectStatusServices}\n      // columns={columns}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  listServiceFormValues: getFormValues(\"listServices\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServices: (page, limit, keyword, filterValues) => {\n    ListServiceActions.getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      filterValues\n    );\n  },\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListServicesContainer);\n\nexport default reduxForm({\n  form: \"listServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst CTableAntd = (props) => {\n  const { data, headers, renderActions, size, pagination, id } = props;\n\n  const [searchText, setSearchText] = React.useState(\"\");\n  const [searchedColumn, setSearchedColumn] = React.useState(\"\");\n  const searchInput = React.useRef();\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.current.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const columns = [];\n  headers.map((item, index) => {\n    columns.push({\n      title: item.title,\n      dataIndex: item.dataIndex,\n      key: item.dataIndex,\n      width: item.width ?? \"30%\",\n      sorter: item.sorter,\n      render: item.render,\n      sortDirections: [\"descend\", \"ascend\"],\n      ...getColumnSearchProps(item.dataIndex),\n    });\n  });\n\n  if (renderActions) {\n    columns.push({\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActions,\n    });\n  }\n\n  return (\n    <Table\n      bordered\n      id={id ?? \"my-table-customize\"}\n      columns={columns}\n      dataSource={data}\n      size={size ?? \"middle\"}\n      pagination={{\n        size: 3,\n        pageSizeOptions: [\"10\", \"20\", \"50\"],\n        showSizeChanger: true,\n        ...pagination,\n      }}\n      // {...props}\n    />\n  );\n};\n\nCTableAntd.propTypes = {\n  data: PropTypes.array,\n  headers: PropTypes.array,\n  renderActions: PropTypes.any,\n};\n\nexport default CTableAntd;\n","import { Modal } from \"antd\";\nimport React from \"react\";\n\ninterface IProps {\n  visible: boolean;\n  content: any;\n  footer: any;\n  onCancel: any;\n  width: any;\n}\n\nconst CModal: React.FC<IProps> = (props) => {\n  // const showModal = () => {\n  //   setVisible(true)\n  // };\n\n  // const handleOk = () => {\n  //   setLoading(true)\n  //   setTimeout(() => {\n  //     setLoading(false)\n  //     setVisible(false)\n  //   }, 3000);\n  // };\n\n  return (\n    <Modal\n      visible={props.visible}\n      footer={props.footer}\n      destroyOnClose\n      onCancel={props.onCancel}\n      width={props.width ? props.width : 600}\n    >\n      {props.content}\n    </Modal>\n  );\n};\n\nexport default CModal;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"username\"\n            label=\"Username\"\n            placeholder=\"\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"fullname\"\n            label=\"Nama Lengkap\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"password\"\n            label=\"Password\"\n            component={CInput}\n            type=\"password\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AdminModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default AdminModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport AdminModalComponent from \"../Component/AdminModalComponent\";\n\nconst AdminModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    admins: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  return (\n    <AdminModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    AdminActions.saveAdminRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminModalContainer);\n\nexport default reduxForm({\n  form: \"editAdminForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport AdminModalContainer from \"../Container/AdminModalContainer\";\n\nconst { Search } = Input;\n\nconst AdminComponent = (props) => {\n  const {\n    headers,\n    listAdmin,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Admin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Admin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listAdmin}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AdminModalContainer />\n    </div>\n  );\n};\n\nexport default AdminComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport AdminComponent from \"../Component/AdminComponent\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListAdmin,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    admins: { listAdmin, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listAdmin.length > 0) {\n    listAdmin.map((item, index) => {\n      listAdmin[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"10%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Username\",\n      dataIndex: \"username\",\n      key: \"username\",\n      width: \"30%\",\n      sorter: (a, b) => a.username.length - b.username.length,\n    },\n    {\n      title: \"Nama Lengkap\",\n      dataIndex: \"fullname\",\n      key: \"fullname\",\n      width: \"30%\",\n      sorter: (a, b) => a.fullname.length - b.fullname.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListAdmin(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(AdminActions.setPagingAdmin(paging));\n    getListAdmin(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListAdmin(page, limit, val);\n  };\n\n  return (\n    <AdminComponent\n      headers={headers}\n      listAdmin={listAdmin}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListAdmin: (page, limit, keyword) =>\n    AdminActions.getListAdminRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(AdminActions.setSelectedAdminData({}));\n    await dispatch(AdminActions.setSelectedAdminId(\"\"));\n    dispatch(AdminActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    AdminActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(AdminActions.setFormStatus(\"edit\"));\n    await dispatch(AdminActions.setSelectedAdminId(record.id));\n    await dispatch(AdminActions.setSelectedAdminData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await AdminActions.mapDetailAdminToForm();\n  },\n  handlePressDelete: async (adminId) => {\n    await dispatch(AdminActions.setSelectedAdminId(adminId));\n    AdminActions.deleteAdminRequested(adminId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"adminForm\",\n})(EnhanceContainer);\n","import React from \"react\";\n\nconst NotFound = (props) => {\n  return (\n    // <div class=\"main-wrapper\">\n    //   <div class=\"page-wrapper full-page\">\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto d-flex flex-column align-items-center\">\n          <img\n            src=\"../../../assets/images/404.svg\"\n            class=\"img-fluid mb-2\"\n            alt=\"404\"\n          />\n          <h1 class=\"font-weight-bold mb-22 mt-2 tx-80 text-muted\">404</h1>\n          <h4 class=\"mb-2\">Page Not Found</h4>\n          <h6 class=\"text-muted mb-3 text-center\">\n            Oopps!! The page you were looking for doesn't exist.\n          </h6>\n          <a href=\"/dashboard\" class=\"btn btn-primary\">\n            Back to home\n          </a>\n        </div>\n      </div>\n    </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport history from \"./History\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as Selectors from \"../modules/Auth/Selector/AuthSelector\";\nimport ConfigAxios from \"./axios/ConfigAxios\";\n\nconst AuthMiddleware = (ComposedComponent) => {\n  const returnData = (props) => {\n    const { isAuthenticated, redirect } = props;\n\n    if (!isAuthenticated) {\n      redirect();\n    } else {\n      ConfigAxios.defaults.headers[\n        \"Authorization\"\n      ] = `Bearer ${isAuthenticated}`;\n    }\n\n    return (\n      <div>{isAuthenticated ? <ComposedComponent {...props} /> : null}</div>\n    );\n  };\n\n  const mapStateToProps = createStructuredSelector({\n    isAuthenticated: Selectors.Token(),\n  });\n  const mapDispatchToProps = (dispatch) => ({\n    redirect: () => history.push(\"/auth\"),\n  });\n  return connect(mapStateToProps, mapDispatchToProps)(returnData);\n};\n\nexport default AuthMiddleware;\n","import React from \"react\";\n\ninterface IProps {\n  type:\n    | \"primary\"\n    | \"danger\"\n    | \"warning\"\n    | \"info\"\n    | \"success\"\n    | \"secondary\"\n    | \"light\"\n    | \"dark\";\n}\n\nconst CBadgeText: React.FC<IProps> = (props) => {\n  return <span className={`badge badge-${props.type}`}>{props.children}</span>;\n};\n\nexport default CBadgeText;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumEmployee }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Teknisi</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <CSelect\n            showSearch\n            data={enumEmployee}\n            name=\"employee\"\n            label=\"Pilih Teknisi\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AddEmployeeModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    handleCancel,\n    enumEmployee,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          enumEmployee={enumEmployee}\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n        />\n      }\n    />\n  );\n};\n\nexport default AddEmployeeModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateServiceEmployeeForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport AddEmployeeModalComponent from \"../Component/AddEmployeeModalComponent\";\n\nconst AddEmployeeModalContainer = (props) => {\n  const {\n    handleCancel,\n    services: { selectedJobService },\n    component: { isModalVisible },\n    employees: { listEmployees },\n    valid,\n  } = props;\n\n  const SelectEmployee = [];\n  listEmployees.map((item, index) => {\n    SelectEmployee.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      const employee = values.employee.split(\"|\");\n      DetailServiceTransactionAction.handleAddNewEmployeeService(\n        selectedJobService.id,\n        employee[0]\n      );\n    } else {\n    }\n  };\n\n  return (\n    <AddEmployeeModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      enumEmployee={SelectEmployee}\n      submitForm={submitForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddEmployeeModalContainer);\n\nexport default reduxForm({\n  form: \"serviceEmployeeForm\",\n  validate: validateServiceEmployeeForm,\n})(EnhanceContainer);\n","export const Themes = {\n  success: \"#17B794\",\n  error: \"#f50\",\n  warning: \"#FEC260\",\n  secondary: \"#A5A5A5\",\n};\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"reason\"\n            label=\"Alasan Reject\"\n            component={CInput}\n            typeComponent=\"textarea\"\n            placeholder=\"Masukan alasan reject\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst RejectedModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RejectedModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRejected, validateFormRoles } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionActions from \"../Store/DetailServiceTransactionAction\";\nimport RejectedModalComponent from \"../Component/RejectedModalComponent\";\n\nconst RejectedModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { rejectionsModal },\n    services: { selectedJobService },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(selectedJobService.id, values);\n    } else {\n    }\n  };\n\n  return (\n    <RejectedModalComponent\n      isModalVisible={rejectionsModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formName={\"Alasan Reject\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  detailService: state.detailService,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionActions.setRejectionsModal(false)),\n\n  handleSubmitForm: (jobId, values) => {\n    DetailServiceTransactionActions.handlePressRejectedRequested(jobId, values);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RejectedModalContainer);\n\nexport default reduxForm({\n  form: \"editRejecetdForm\",\n  validate: validateFormRejected,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, InputNumber, Row, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumWarranty, warrantyMonths } from \"../../../app/Helpers\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">Ubah Service</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={enumWarranty}\n              name=\"warranty\"\n              label=\"Warranty\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-7\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={warrantyMonths()}\n              name=\"warrantyMonths\"\n              label=\"Warranty Months\"\n            />\n          </div>\n          <div class=\"col-md-5\">\n            <Field\n              name=\"warrantyYears\"\n              label=\"Warranty Year\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"jobPerform\"\n              label=\"Job Perform\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalTransactionComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalTransactionComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTransaction } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport EditModalTransactionComponent from \"../Component/EditModalTransactionComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editTransactionModal },\n    masters: { listMenu },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      // handleSubmitForm(\"edit\", values, menuSelected);\n      DetailServiceTransactionAction.handlePressEditRequested(values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <EditModalTransactionComponent\n      isModalVisible={editTransactionModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditTransactionModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) => {},\n  // DetailServiceTransactionAction.saveRoleRequested(\n  //   type,\n  //   values,\n  //   menuSelected\n  // ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editTransactionForm\",\n  validate: validateFormTransaction,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, InputNumber, Row, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumWarranty, warrantyMonths } from \"../../../app/Helpers\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">Ubah Catatan Teknisi</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"title\"\n              label=\"Judul\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalDailiesComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTransaction } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\n\nimport EditModalDailiesComponent from \"../Component/EditModalDailiesComponent\";\n\nconst EditModalDailiesContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editDailiesModal },\n    masters: { listMenu },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      DetailServiceTransactionAction.handlePressEditDailiesRequested(values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <EditModalDailiesComponent\n      isModalVisible={editDailiesModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditDailiesModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditModalDailiesContainer);\n\nexport default reduxForm({\n  form: \"editDailiesForm\",\n  validate: validateFormTransaction,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Button, Tabs } from \"antd\";\nimport { Typography } from \"antd\";\nimport CBadgeText from \"../../../components/CBadgeText/CBadgeText\";\nimport moment from \"moment\";\nimport AddEmployeeModalContainer from \"../Container/AddEmployeeModalContainer\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Themes } from \"../../../property/colors\";\nimport RejectedModalContainer from \"../Container/RejectedModalContainer\";\nimport EditModalTransactionContainer from \"../Container/EditModalTransactionContainer\";\nimport EditModalDailiesContainer from \"../Container/EditModalDailiesContainer\";\n// import ReactToPrint from \"react-to-print\";\n// import ServiceReportPdfPrint from \"./ServiceReportPdfPrint\";\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\n// const pageStyle = `\n//   @page {\n//     size: 80mm 50mm;\n//   }\n\n//   @media all {\n//     .pagebreak {\n//       display: none;\n//     }\n//   }\n\n//   @media print {\n//     .pagebreak {\n//       page-break-before: always;\n//     }\n//   }\n// `;\n\nconst DetailServiceTransactionComponent = (props) => {\n  const {\n    data,\n    TabPanel,\n    onChangeTab,\n    handlePressGeneratePdf,\n    goBack,\n    handlePressActions,\n    handlePressEdit,\n    // medias,\n    // checklist,\n    // employees,\n    // dailies,\n    // summary,\n  } = props;\n  // let componentRef = React.useRef();\n\n  const RenderButtonAction = ({ status }) => {\n    let button;\n    switch (status.toLowerCase()) {\n      case \"completed\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"approved\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Approve\n            </CButtonAntd>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"rejected\")}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"approved\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"rejected\")}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"finished\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Finished\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"finished\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              // onClick={handlePressAddNew}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n\n      default:\n        return <div />;\n    }\n    return button;\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"col-md-12 grid-margin stretch-card\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"row align-items-center justify-content-between\">\n                <div>\n                  <h6 class=\"card-title\">Detail Transaksi</h6>\n                </div>\n                <div class=\"row mb-3 ml-2 mr-2\">\n                  <CButtonAntd\n                    onClick={goBack}\n                    type=\"primary\"\n                    icon={<ArrowLeftOutlined />}\n                    size=\"middle\"\n                    danger\n                  >\n                    Kembali\n                  </CButtonAntd>\n                  <div class=\"ml-3\" />\n                  {data.status.toLowerCase() !== \"approved\" && (\n                    <CButtonAntd\n                      onClick={handlePressEdit}\n                      type=\"primary\"\n                      icon={<EditOutlined />}\n                      size=\"middle\"\n                    >\n                      Ubah\n                    </CButtonAntd>\n                  )}\n                  <RenderButtonAction status={data.status} />\n                  <div class=\"mr-3\" />\n                  {/* button to trigger printing of target component */}\n                  <CButtonAntd\n                    onClick={handlePressGeneratePdf}\n                    type=\"primary\"\n                    icon={<FilePdfOutlined />}\n                    size=\"middle\"\n                  >\n                    Cetak Formulir\n                  </CButtonAntd>\n                  {/* <ReactToPrint\n                    fonts={[\n                      {\n                        name: \"'Courier Prime', monospace\",\n                        url: \"https://fonts.googleapis.com/css2?family=Courier+Prime&display=swap\",\n                      },\n                    ]}\n                    pageStyle={pageStyle}\n                    trigger={() => (\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Formulir\n                      </CButtonAntd>\n                    )}\n                    content={() => componentRef}\n                  /> */}\n                </div>\n              </div>\n              <div\n                id=\"header-detail-transaction\"\n                class=\"d-flex justify-content-between align-items-baseline\"\n              >\n                <div class=\"col-md-6\">\n                  <Text>Tipe : </Text>\n                  <CBadgeText type={data.is_external ? \"success\" : \"info\"}>\n                    {data.type ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Unit : </Text>\n                  <Text>{data.unit ?? \"-\"}</Text>\n                  <br />\n                  <Text>Model (SN) : </Text>\n                  <Text>{data.model ?? \"-\"}</Text>\n                  <br />\n                  <Text>Job Forms : </Text>\n                  <Text>{data.job_form_name ?? \"-\"}</Text>\n                  <br />\n                  <Text>Customer : </Text>\n                  <Text strong>{data.customer_name}</Text>\n                  <br />\n                  <Text>Warranty : </Text>\n                  <Text strong>\n                    {data.warranty ? \"Warranty\" : \"No Warranty\"}\n                  </Text>\n                  <br />\n                  <Text>PIC : </Text>\n                  <Text strong>{data.customer_pic_name ?? \"()\"}</Text>\n                </div>\n                <div class=\"col-md-6\">\n                  <Text>Status Transaksi : </Text>\n                  <CBadgeText\n                    type={\n                      data.status.toLowerCase() === \"draft\"\n                        ? \"warning\"\n                        : \"success\"\n                    }\n                  >\n                    {data.status ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Job Perform : </Text>\n                  <Text strong>{data.job_perform}</Text>\n                  <br />\n                  <Text>Start - Due : </Text>\n                  <Text strong>{`${moment(data.start).format(\n                    \"DD-MMM-YYYY\"\n                  )} - ${moment(data.due).format(\"DD-MMM-YYYY\")}`}</Text>\n\n                  <br />\n                  <Text>Dibuat : </Text>\n                  <Text strong>{data.created_date}</Text>\n                  <br />\n                  <Text>Lokasi : </Text>\n                  <Text strong>{data.location ?? \"-\"}</Text>\n                </div>\n                <div class=\"col-md-4\"></div>\n              </div>\n\n              <div class=\"ml-2 mt-3\">\n                <Tabs defaultActiveKey=\"1\" onChange={onChangeTab}>\n                  {TabPanel.map((item, index) => (\n                    <TabPane\n                      tab={\n                        <span>\n                          {item.icon}\n                          {item.title}\n                        </span>\n                      }\n                      key={item.key}\n                    >\n                      {item.component}\n                    </TabPane>\n                  ))}\n                </Tabs>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AddEmployeeModalContainer />\n      <RejectedModalContainer />\n      <EditModalTransactionContainer />\n      <EditModalDailiesContainer />\n      {/* component to be printed */}\n      {/* <div style={{ display: \"none\", width: \"100%\", flex: 1 }}>\n        <ServiceReportPdfPrint\n          ref={(el) => (componentRef = el)}\n          data={data}\n          medias={medias}\n          checklist={checklist}\n          employees={employees}\n          dailies={dailies}\n          summary={summary}\n        />\n      </div> */}\n    </div>\n  );\n};\n\nexport default DetailServiceTransactionComponent;\n","import React from \"react\";\nimport { Card, Typography, Col, Row, Image } from \"antd\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  CheckCircleOutlined,\n} from \"@ant-design/icons\";\n\nconst { Meta } = Card;\nconst { Text } = Typography;\n\nconst RenderDescription = ({\n  data,\n  handlePressNonactive,\n  handlePressActive,\n}) => {\n  return (\n    <div>\n      <hr />\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Nik</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.nik}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Telepon</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.phone}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Alamat</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong style={{ fontSize: 12 }}>\n            {data.address}\n          </Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Tanggal Mulai</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.created_date}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Status</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <CBadgeText type={data.active ? \"success\" : \"danger\"}>\n            {data.active ? \"Aktif\" : \"Tidak Aktif\"}\n          </CBadgeText>\n        </div>\n      </Row>\n      <div class=\"mt-3\">\n        {data.active ? (\n          <CButtonAntd\n            onClick={handlePressNonactive}\n            type=\"primary\"\n            icon={<DeleteOutlined />}\n            size=\"middle\"\n            danger\n          >\n            Non-Aktifkan Teknisi\n          </CButtonAntd>\n        ) : (\n          <CButtonAntd\n            onClick={handlePressActive}\n            type=\"primary\"\n            icon={<CheckCircleOutlined />}\n            size=\"middle\"\n          >\n            Aktifkan teknisi\n          </CButtonAntd>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst TabPanelEmployeeComponent = (props) => {\n  const {\n    employees,\n    handlePressAddNew,\n    handlePressNonactive,\n    jobId,\n    handlePressActive,\n  } = props;\n  return (\n    <div class=\"page-content\">\n      <Row style={{ marginLeft: 16 }}>\n        <CButtonAntd\n          onClick={handlePressAddNew}\n          type=\"primary\"\n          icon={<PlusOutlined />}\n          size=\"middle\"\n        >\n          Tambah Teknisi\n        </CButtonAntd>\n      </Row>\n      <Row>\n        {employees.map((item, index) => {\n          return (\n            <Col style={{ margin: 16 }} key={`employee-${index}`}>\n              <Text strong>{`Teknisi-${index + 1}`}</Text>\n              <Card\n                style={{ width: 350, marginTop: 8 }}\n                cover={\n                  <Image\n                    alt=\"example\"\n                    src={\n                      item.photo ??\n                      \"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                    }\n                    width=\"100%\"\n                    height={200}\n                  />\n                }\n              >\n                <Meta\n                  title={item.name}\n                  description={\n                    <RenderDescription\n                      data={item}\n                      handlePressNonactive={() =>\n                        handlePressNonactive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                      handlePressActive={() =>\n                        handlePressActive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                    />\n                  }\n                />\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </div>\n  );\n};\n\nexport default TabPanelEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TabPanelEmployeeComponent from \"../../Component/TabPanel/TabPanelEmployeeComponent\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionActions from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelEmployeeContainer = (props) => {\n  const {\n    services: { selectedJobService },\n  } = props;\n  return <TabPanelEmployeeComponent jobId={selectedJobService.id} {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n  detailService: state.detailService,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressAddNew: () => {\n    dispatch(ComponentActions.setGlobalModal(true));\n  },\n  handlePressNonactive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      false\n    ),\n  handlePressActive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      true\n    ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelEmployeeContainer);\n","import React from \"react\";\nimport { Typography, Row, Empty, Divider, Col } from \"antd\";\nimport { FileOutlined } from \"@ant-design/icons\";\n\nconst { Paragraph } = Typography;\n\nconst RenderItemSummary = ({ summary, index }) => {\n  return summary.length > 0 ? (\n    summary.map((item, indexText) => (\n      <Typography key={`item-summary${index}-text-${indexText}`}>\n        {item}\n      </Typography>\n    ))\n  ) : (\n    <Typography>Summary belum ada</Typography>\n  );\n};\n\nconst TabPanelSummaryComponent = (props) => {\n  const { summaryArr } = props;\n\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <FileOutlined />\n        <Typography style={{ marginLeft: 5 }}>Laporan Akhir</Typography>\n      </Row>\n      <hr />\n      <Row gutter={[16, 16]}>\n        {summaryArr.length > 0 ? (\n          summaryArr.map((item, index) => (\n            <Col key={`col-unit-${index}`} span={12}>\n              <div class=\"card p-2\">\n                <Divider\n                  style={{\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                    textTransform: \"uppercase\",\n                  }}\n                  plain\n                >{`Unit ${item.unitName}`}</Divider>\n                <RenderItemSummary index={index} summary={item.summary} />\n              </div>\n            </Col>\n          ))\n        ) : (\n          <div>\n            <Empty />\n          </div>\n        )}\n      </Row>\n    </div>\n  );\n};\n\nexport default TabPanelSummaryComponent;\n","import React from \"react\";\nimport TabPanelSummaryComponent from \"../../Component/TabPanel/TabPanelSummaryComponent\";\n\nconst TabPanelSummaryContainer = (props) => {\n  const { summary } = props;\n  const [summaryArr, setSummaryArr] = React.useState([]);\n\n  React.useEffect(() => {\n    const summaryMapping = [];\n\n    summary.map((item, index) => {\n      const summaryText = item.summary;\n      const splitSummary = summaryText.split(\"\\n\");\n      summaryMapping.push({ unitName: item.unitName, summary: splitSummary });\n    });\n    setSummaryArr(summaryMapping);\n  }, [summary]);\n\n  return <TabPanelSummaryComponent summaryArr={summaryArr} {...props} />;\n};\n\nexport default TabPanelSummaryContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Card, Col, Image, Divider } from \"antd\";\nimport { CameraOutlined } from \"@ant-design/icons\";\n\nconst { Meta } = Card;\n\nconst RenderImage = ({ medias, unit }) => {\n  return medias.map((item, index) => {\n    return (\n      <Col\n        style={{\n          marginLeft: 10,\n          marginRight: 10,\n        }}\n      >\n        <Card\n          hoverable\n          style={{ width: 240, height: 200 }}\n          cover={<Image width={\"100%\"} height={150} src={item.path} />}\n        >\n          <Meta\n            style={{ marginTop: -10 }}\n            title={`Gambar Penting ${index + 1}`}\n          />\n        </Card>\n      </Col>\n    );\n  });\n};\n\nconst TabPanelImagesComponent = (props) => {\n  const { medias } = props;\n\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <CameraOutlined />\n        <Typography style={{ marginLeft: 5 }}>Media</Typography>\n      </Row>\n      <hr />\n      {medias && medias.length > 0 ? (\n        medias.map((item, index) => (\n          <div>\n            <Divider\n              style={{\n                textTransform: \"uppercase\",\n                fontSize: 12,\n                fontWeight: \"bold\",\n              }}\n              plain\n            >{`Unit ${item.unitName}`}</Divider>\n            <Row>\n              <RenderImage medias={item.image} unit={item.unitName} />\n            </Row>\n          </div>\n        ))\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelImagesComponent;\n","import React from \"react\";\nimport TabPanelImagesComponent from \"../../Component/TabPanel/TabPanelImagesComponent\";\n\nconst TabPanelImagesContainer = (props) => {\n  return <TabPanelImagesComponent {...props} />;\n};\n\nexport default TabPanelImagesContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table, Space } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst RenderDailies = ({ dailies, handlePressEdit }) => {\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"karyawan\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"deskripsi\",\n    },\n    {\n      title: \"Mulai\",\n      dataIndex: \"mulai\",\n    },\n    {\n      title: \"Selesai\",\n      dataIndex: \"selesai\",\n    },\n    {\n      title: \"Jam\",\n      dataIndex: \"jam\",\n    },\n  ];\n  columns.push({\n    align: \"center\",\n    title: \"Aksi\",\n    key: \"action\",\n    width: \"10%\",\n    render: renderActionTable,\n  });\n  const data = [];\n  dailies.map((item, index) => {\n    data.push({\n      key: index,\n      id: item.id,\n      karyawan: item.employee_name,\n      title: item.title,\n      deskripsi: item.description,\n      mulai: moment(item.daily_start).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      selesai: moment(item.daily_end).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      jam: item.hours,\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelDailiesComponent = (props) => {\n  const { dailies, handlePressEdit } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Catatan</Typography>\n      </Row>\n      <hr />\n      {dailies && dailies.length > 0 ? (\n        <RenderDailies dailies={dailies} handlePressEdit={handlePressEdit} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport TabPanelDailiesComponent from \"../../Component/TabPanel/TabPanelDailiesComponent\";\nimport {\n  mapDailiesToForm,\n  setEditDailiesModal,\n  setSelectedEditDailiesData,\n} from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelDailiesContainer = (props) => {\n  return <TabPanelDailiesComponent {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  // dailies: state.dailies,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (values) => {\n    await dispatch(setSelectedEditDailiesData(values));\n    store.dispatch(setEditDailiesModal(true));\n    mapDailiesToForm();\n  },\n  handlePressCancel: () => {\n    store.dispatch(setEditDailiesModal(false));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelDailiesContainer);\n\nexport default EnhanceContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderHistories = ({ histories }) => {\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"user_name\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  histories.map((item, index) => {\n    data.push({\n      key: index,\n      user_name: item.user_name,\n      title: item.title,\n      description: item.description,\n      created_date: moment(item.created_date).format(\"DD-MMM-YYYY\"),\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelHistoriesComponent = (props) => {\n  const { histories } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Riwayat</Typography>\n      </Row>\n      <hr />\n      {histories.length > 0 ? (\n        <RenderHistories histories={histories} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelHistoriesComponent;\n","import React from \"react\";\nimport TabPanelHistoriesComponent from \"../../Component/TabPanel/TabPanelHistoriesComponent\";\n\nconst TabPanelHistoriesContainer = (props) => {\n  return <TabPanelHistoriesComponent {...props} />;\n};\n\nexport default TabPanelHistoriesContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderDailies = ({ rejections }) => {\n  const columns = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n    },\n    {\n      title: \"NIK\",\n      dataIndex: \"nik\",\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n    },\n    {\n      title: \"Alasan Reject\",\n      dataIndex: \"reason\",\n    },\n    {\n      title: \"Tanggal Di-Reject\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  rejections.map((item, index) => {\n    data.push({\n      no: index + 1,\n      nik: item.nik,\n      employee_name: item.employee_name,\n      reason: item.reason,\n      created_date: moment(item.created_date).format(\"DD-MMM-YYYY\"),\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelRejectionsComponent = (props) => {\n  const { rejections } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Alasan Reject</Typography>\n      </Row>\n      <hr />\n      {rejections.length > 0 ? (\n        <RenderDailies rejections={rejections} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelRejectionsComponent;\n","import React from \"react\";\nimport TabPanelRejectionsComponent from \"../../Component/TabPanel/TabPanelRejectionsComponent\";\n\nconst TabPanelRejectionsContainer = (props) => {\n  return <TabPanelRejectionsComponent {...props} />;\n};\n\nexport default TabPanelRejectionsContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Col, Checkbox, Divider, Spin } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Radio } from \"antd\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Themes } from \"../../../../property/colors\";\n\nconst TabPanelChecklistComponent = (props) => {\n  const { checklistArr, isLoaded } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Checklist</Typography>\n      </Row>\n      <hr />\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <div class=\"row d-flex flex-wrap col md-12\">\n          {checklistArr.length > 0 ? (\n            checklistArr.map((itemUnit, indexUnit) => (\n              <div key={`checklist-unit-${indexUnit}`}>\n                <Divider\n                  style={{\n                    textTransform: \"uppercase\",\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                  }}\n                  plain\n                >{`Unit ${itemUnit.unitName}`}</Divider>\n                <Row gutter={[16, 16]}>\n                  {itemUnit.checklist.map((itemChecklist, indexChecklist) => (\n                    <Col key={`item-unit-checklist-${indexChecklist}`} span={12}>\n                      <div style={{ width: \"100%\" }}>\n                        <div>\n                          <div class=\"mb-2 mt-2 pb-2\">\n                            <Row\n                              gutter={16}\n                              style={{\n                                alignItems: \"center\",\n                                padding: \"8px\",\n                                borderBottom: \"1px solid #020202\",\n                                marginRight: \"20px\",\n                                marginTop: \"20px\",\n                              }}\n                            >\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={7}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  {itemChecklist.category_form_name}\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  ADJUST\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  CHECK\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPAIR\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={5}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPLACE\n                                </Text>\n                              </Col>\n                            </Row>\n                          </div>\n\n                          <Radio.Group disabled>\n                            {itemChecklist.fields &&\n                              itemChecklist.fields.map(\n                                (itemFields, indexFields) => {\n                                  return (\n                                    <Row\n                                      key={`item-fields-${indexFields}`}\n                                      gutter={16}\n                                      style={{\n                                        alignItems: \"center\",\n                                        padding: \"8px\",\n                                        borderBottom: \"1px solid #020202\",\n                                        marginRight: \"30px\",\n                                      }}\n                                    >\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={8}\n                                      >\n                                        <div>\n                                          <Typography\n                                            style={{\n                                              fontSize: 12,\n                                              color: Themes.secondary,\n                                            }}\n                                          >\n                                            {itemFields.field_name}\n                                          </Typography>\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                    </Row>\n                                  );\n                                }\n                              )}\n                          </Radio.Group>\n                        </div>\n                        <div class=\"mr-3\" />\n                      </div>\n                    </Col>\n                  ))}\n                </Row>\n              </div>\n            ))\n          ) : (\n            <div class=\"page-content\">\n              <Empty />\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst style = {\n  width: \"200px\",\n  alignContent: \"center\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport default TabPanelChecklistComponent;\n","import React, { useState } from \"react\";\nimport TabPanelChecklistComponent from \"../../Component/TabPanel/TabPanelChecklistComponent\";\n\nconst TabPanelChecklistContainer = (props) => {\n  const { checklist, isLoaded } = props;\n  const [checklistArr, setchecklistArr] = useState([]);\n\n  React.useEffect(() => {\n    setchecklistArr(checklist);\n  }, [checklist]);\n\n  return (\n    <TabPanelChecklistComponent\n      isLoaded={isLoaded}\n      checklistArr={checklistArr}\n      {...props}\n    />\n  );\n};\n\nexport default TabPanelChecklistContainer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport DetailServiceTransactionComponent from \"../Component/DetailServiceTransactionComponent\";\nimport {\n  FileImageOutlined,\n  UsergroupAddOutlined,\n  CheckCircleOutlined,\n  EditOutlined,\n  FileTextOutlined,\n  CloseSquareOutlined,\n  HistoryOutlined,\n} from \"@ant-design/icons\";\nimport TabPanelEmployeeContainer from \"./TabPanel/TabPanelEmployeeContainer\";\nimport * as DetailServiceActions from \"../Store/DetailServiceTransactionAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport TabPanelSummaryContainer from \"./TabPanel/TabPanelSummaryContainer\";\nimport TabPanelImagesContainer from \"./TabPanel/TabPanelImagesContainer\";\nimport TabPanelDailiesContainer from \"./TabPanel/TabPanelDailiesContainer\";\nimport TabPanelHistoriesContainer from \"./TabPanel/TabPanelHistoriesContainer\";\nimport { exportDetailServicePdf } from \"../Store/DetailServiceTransactionReport\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport TabPanelRejectionsContainer from \"./TabPanel/TabPanelRejectionsContainer\";\nimport TabPanelChecklistContainer from \"./TabPanel/TabPanelChecklistContainer\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { exportDetailServicePdfRevision } from \"../Store/DetailServiceTransactionReportRevision\";\n\nconst DetailServiceTransactionContainer = (props) => {\n  const {\n    services: { selectedJobService },\n    detailService: {\n      selectedServiceEmployeeList,\n      selectedServiceSummary,\n      selectedServiceMedia,\n      groupingSelectedServiceMedia,\n      groupingSelectedServiceSummary,\n      groupingSelectedServiceChecklist,\n      selectedServiceDailies,\n      selectedServiceHistories,\n      selectedServiceChecklist,\n      selectedServiceRejected,\n      selectedUnit,\n    },\n  } = props;\n  const { dispatch } = store;\n  const [isLoadedChecklist, setIsLoadedChecklist] = React.useState(false);\n\n  const printedData = {\n    selectedJobService,\n    selectedServiceEmployeeList,\n    selectedServiceSummary,\n    selectedServiceMedia,\n    selectedServiceDailies,\n    selectedServiceHistories,\n    selectedServiceChecklist,\n    selectedServiceRejected,\n    selectedUnit,\n    groupingSelectedServiceMedia,\n    groupingSelectedServiceSummary,\n    groupingSelectedServiceChecklist,\n  };\n\n  const TabPanel = [\n    {\n      key: \"panel-gambar\",\n      title: \"Gambar\",\n      icon: <FileImageOutlined />,\n      component: (\n        <TabPanelImagesContainer medias={groupingSelectedServiceMedia} />\n      ),\n    },\n    {\n      key: \"panel-summary\",\n      title: \"Summary\",\n      icon: <FileTextOutlined />,\n      component: (\n        <TabPanelSummaryContainer summary={groupingSelectedServiceSummary} />\n      ),\n    },\n    {\n      key: \"panel-teknisi\",\n      title: \"Teknisi\",\n      icon: <UsergroupAddOutlined />,\n      component: (\n        <TabPanelEmployeeContainer employees={selectedServiceEmployeeList} />\n      ),\n    },\n    {\n      key: \"panel-rejected\",\n      title: \"Alasan Reject\",\n      icon: <CloseSquareOutlined />,\n      component: (\n        <TabPanelRejectionsContainer rejections={selectedServiceRejected} />\n      ),\n    },\n    {\n      key: \"panel-dailies\",\n      title: \"Catatan Teknisi\",\n      icon: <EditOutlined />,\n      component: <TabPanelDailiesContainer dailies={selectedServiceDailies} />,\n    },\n    {\n      key: \"panel-histories\",\n      title: \"History\",\n      icon: <HistoryOutlined />,\n      component: (\n        <TabPanelHistoriesContainer\n          title=\"History\"\n          histories={selectedServiceHistories}\n        />\n      ),\n    },\n  ];\n\n  if (selectedJobService.is_external) {\n    TabPanel.push({\n      key: \"panel-checklist\",\n      title: \"Checklist\",\n      icon: <CheckCircleOutlined />,\n      component: (\n        <TabPanelChecklistContainer\n          isLoaded={isLoadedChecklist}\n          checklist={groupingSelectedServiceChecklist}\n        />\n      ),\n    });\n\n    // Move content of checklist to index 0\n    const fromIndex = TabPanel.indexOf(\"panel-checklist\"); // 👉️ 0\n    const toIndex = 0;\n\n    const element = TabPanel.splice(fromIndex, 1)[0];\n    console.log(element); // ['panel-checklist']\n\n    TabPanel.splice(toIndex, 0, element);\n  }\n\n  const onChangeTab = (activeTab) => {\n    switch (activeTab.toLowerCase()) {\n      case \"panel-teknisi\":\n        DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n        break;\n\n      case \"panel-summary\":\n        // DetailServiceActions.getJobServiceSummary(selectedJobService.id);\n        break;\n\n      case \"panel-gambar\":\n        // DetailServiceActions.getJobServiceMedia(selectedJobService.id);\n        break;\n\n      case \"panel-dailies\":\n        DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n        break;\n\n      case \"panel-histories\":\n        DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n        break;\n\n      case \"panel-checklist\":\n        // DetailServiceActions.getChecklistData(selectedJobService.id);\n        break;\n\n      case \"panel-rejected\":\n        DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n        break;\n\n      default:\n        console.log(\"no panel selected...\");\n        break;\n    }\n  };\n\n  const callInitialize = async () => {\n    await EmployeesActions.loadEmployeeListData(1, 99999);\n    await DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n    await DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n    await DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n    await DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n    await getGroupingUnitData();\n  };\n\n  const getGroupingUnitData = async () => {\n    // Hit media api and grouping by units :\n    let groupingMediaList = [];\n    let groupingSummaryList = [];\n    let groupingChecklist = [];\n    if (selectedJobService.units) {\n      await selectedJobService.units.map(async (item, index) => {\n        const { data: dataMedia } = await Invoke.getJobServiceMedia(\n          selectedJobService.id,\n          item.id\n        );\n        const { data: dataSummary } = await Invoke.getJobServiceSummary(\n          selectedJobService.id,\n          item.id\n        );\n        Invoke.getChecklistData(item.id)\n          .then((dataChecklist) => {\n            console.log(\"=== dataChecklist : \", dataChecklist);\n            groupingChecklist.push({\n              unitName: item.unit_name,\n              checklist: dataChecklist.data.callback,\n            });\n            if (index + 1 === selectedJobService.units.length) {\n              setIsLoadedChecklist(true);\n            }\n          })\n          .catch(() => setIsLoadedChecklist(true));\n\n        // Push to tempporary array\n        groupingMediaList.push({\n          unitName: item.unit_name,\n          image: dataMedia.callback.data,\n        });\n        groupingSummaryList.push({\n          unitName: item.unit_name,\n          summary: dataSummary.callback.summary,\n        });\n      });\n\n      // Save to reducer\n      await dispatch(\n        DetailServiceActions.setGroupingSelectedServicesMediaData(\n          groupingMediaList\n        )\n      );\n      await dispatch(\n        DetailServiceActions.setGroupingSummaryData(groupingSummaryList)\n      );\n      await dispatch(\n        DetailServiceActions.setGroupingChecklistData(groupingChecklist)\n      );\n    }\n  };\n\n  React.useEffect(() => {\n    callInitialize();\n  }, []);\n\n  const handlePressGeneratePdf = () => {\n    // exportDetailServicePdfRevision(printedData);\n    DetailServiceActions.downloadTransactionPdf()\n  };\n\n  const handleBackToListService = () => {\n    store.dispatch(DetailServiceActions.resetDetailService());\n    setTimeout(() => {\n      navigate(\"list_service\");\n    }, 500);\n  };\n\n  return (\n    <DetailServiceTransactionComponent\n      data={selectedJobService}\n      TabPanel={TabPanel}\n      onChangeTab={onChangeTab}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      goBack={handleBackToListService}\n      medias={groupingSelectedServiceMedia}\n      checklist={groupingSelectedServiceChecklist}\n      employees={selectedServiceEmployeeList}\n      dailies={selectedServiceDailies}\n      summary={groupingSelectedServiceSummary}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  units: state.units,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressDelete: (jobId) => {\n    ListServiceActions.deleteJobServiceRequested(jobId);\n  },\n  handlePressActions: (jobId, type) => {\n    ListServiceActions.handlePressActionsRequested(jobId, type);\n  },\n  handlePressEdit: async () => {\n    await dispatch(DetailServiceActions.setEditTransactionModal(true));\n    await DetailServiceActions.mapDetailTransactionToForm();\n    dispatch(DetailServiceActions.setEditTransactionModal(true));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DetailServiceTransactionContainer);\n\nexport default reduxForm({\n  form: \"detailJobServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Row } from \"antd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const {\n    data,\n    defaultValuesMenu,\n    onChangeRoleMenu,\n    // options,\n    // plainOptions,\n    // optionsWithDisabled,\n  } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"Role ID\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Role\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst RolesEditModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RolesEditModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport RolesEditModalComponent from \"../Component/RolesEditModalComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { formStatus, selectedRoleMenu },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n  const [menuSelected, setMenuSelected] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values, menuSelected);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  const onChangeRoleMenu = (menus) => {\n    setMenuSelected(menus);\n  };\n\n  return (\n    <RolesEditModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumMenu={SelectMenu}\n      menuChecked={selectedRoleMenu}\n      onChangeRoleMenu={onChangeRoleMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) =>\n    RolesActions.saveRoleRequested(type, values, menuSelected),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editRolesForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport RolesEditModalContainer from \"../Container/RolesEditModalContainer\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nconst RolesComponent = (props) => {\n  const { headers, listRoles, renderActionTable, handlePressAddNew } = props;\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Roles</h6>\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Roles\n                  </CButtonAntd>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <RolesEditModalContainer />\n    </div>\n  );\n};\n\nexport default RolesComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport RolesComponent from \"../Component/RolesComponent\";\nimport * as RolesActions from \"../Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RolesContainer = (props) => {\n  const {\n    getListRoles,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    roles: { listRoles },\n  } = props;\n\n  if (listRoles.length > 0) {\n    listRoles.map((item, index) => {\n      listRoles[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListRoles();\n  }, []);\n\n  return (\n    <RolesComponent\n      headers={headers}\n      listRoles={listRoles}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListRoles: () => RolesActions.getListRolesRequested(),\n  handlePressAddNew: async () => {\n    await dispatch(RolesActions.setSelectedRoleDetail({}));\n    await dispatch(RolesActions.setSelectedRoleId(\"\"));\n    dispatch(RolesActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    RolesActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(RolesActions.setFormStatus(\"edit\"));\n    await dispatch(RolesActions.setSelectedRoleId(record.id));\n    await dispatch(RolesActions.setSelectedRoleDetail(record));\n    await RolesActions.getMenuByRolesId(record.id);\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await RolesActions.mapDetailRoleToForm();\n  },\n  handlePressDelete: async (roleId) => {\n    await dispatch(RolesActions.setSelectedRoleId(roleId));\n    RolesActions.deleteRoleRequested(roleId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesContainer);\n\nexport default reduxForm({\n  form: \"rolesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst EmployeeListComponent = (props) => {\n  const {\n    headers,\n    listEmployees,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumRoles,\n    enumDivision,\n    employeeFormValues,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Karyawan</h6>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Karyawan\n                    </CButtonAntd>\n                  </div>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2\">\n                  {/* This Filter */}\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumRoles ?? []}\n                      name=\"role\"\n                      label=\"Filter Role\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Filter Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumDivision ?? []}\n                      name=\"division\"\n                      label=\"Filter Divisi\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployees}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeListComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as EmployeeActions from \"../Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ToolsActions from \"../../Tools/Store/ToolsActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport EmployeesListComponent from \"../Component/EmployeesListComponent\";\nimport {\n  enumSelectGenerator,\n  getIndex,\n  getRolesEnum,\n  navigate,\n} from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getDivisionListDataRequested } from \"../../Division/Store/DivisionActions\";\n\nconst EmployeesListContainer = (props) => {\n  const {\n    getListEmployees,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressEmployeeTools,\n    employees: { listEmployees, paging },\n    roles: { listRoles },\n    branch: { listBranch },\n    division: { listDivision },\n    employeesFormValues,\n    getListTools,\n  } = props;\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployees.length > 0) {\n    listEmployees.map((item, index) => {\n      listEmployees[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, name: item.title };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"NIK\",\n      dataIndex: \"nik\",\n      key: \"nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.nik - b.nik,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name - b.name,\n    },\n    {\n      title: \"Nomor Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => handlePressEdit(record)}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressEmployeeTools(record)}\n        type=\"primary\"\n        icon={<SettingOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployees(1, 10);\n    getDivisionListDataRequested(1, 100);\n    getListTools(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage ?? 1;\n    paging.limit = pageSize ?? 10;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeActions.setPagingEmployees(paging));\n    getListEmployees(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    EmployeeActions.handleSearch(keyword, employeesFormValues);\n  };\n\n  const SelectRoles = listRoles.length > 0 ? getRolesEnum(listRoles) : [];\n  const SelectBranch =\n    listBranch.length > 0 ? enumSelectGenerator(listBranch, \"branch\") : [];\n  const SelectDivision =\n    listDivision.length > 0\n      ? enumSelectGenerator(listDivision, \"division\")\n      : [];\n\n  return (\n    <EmployeesListComponent\n      headers={headers}\n      listEmployees={listEmployees}\n      renderActionTable={renderActionTable}\n      paging={paging}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      enumRoles={SelectRoles}\n      enumDivision={SelectDivision}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  roles: state.roles,\n  branch: state.branch,\n  division: state.division,\n  employeesFormValues: getFormValues(\"employeesForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployees: (page, limit, keyword) =>\n    EmployeeActions.loadEmployeeListData(page, limit, keyword),\n  getListTools: (page, limit) => {\n    ToolsActions.getToolsListDataRequested(page, limit);\n  },\n  handlePressEdit: async (employee) => {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    dispatch(EmployeeActions.setFormStatus(\"edit\"));\n    await EmployeesActions.getRolesByEmployeeId(employee.id);\n    await MasterDataActions.loadCityListData(employee.province_id);\n    await dispatch(EmployeeActions.setSelectedEmployeeId(employee.id));\n    await EmployeesActions.getEmployeeDataByIdRequested(employee.id);\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n      dispatch(ComponentActions.setGlobalLoading(false));\n    }, 500);\n  },\n  handlePressAddNew: async () => {\n    dispatch(EmployeesActions.setFormStatus(\"add\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeId(\"\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeData({}));\n    EmployeesActions.resetForm();\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n    }, 500);\n  },\n  handlePressDelete: async (employeeId) => {\n    await dispatch(EmployeesActions.setSelectedEmployeeId(employeeId));\n    EmployeesActions.deleteEmployeeRequested(employeeId);\n  },\n  handlePressEmployeeTools: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(EmployeeActions.setSelectedEmployeeId(record.id));\n    await dispatch(EmployeeActions.setSelectedEmployeeData(record));\n    setTimeout(() => {\n      navigate(\"employee-tools\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeesListContainer);\n\nexport default reduxForm({\n  form: \"employeesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  LoadingOutlined,\n  PlusOutlined,\n  ArrowLeftOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport { Checkbox, Col, message, Row, Typography, Upload } from \"antd\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst SelectRole = (props) => {\n  const { data, defaultValues, onChangeRoleEmployee } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        onChange={onChangeRoleEmployee}\n        defaultValue={defaultValues}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst EmployeeEditComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    enumBranch,\n    enumRole,\n    enumProvince,\n    enumCity,\n    selectedRoleEmployee,\n    onChangeRoleEmployee,\n    handleUploadPhoto,\n    defaultImage,\n    onChangeProvince,\n    onBackAction,\n    formStatus,\n  } = props;\n\n  const [loading, setLoading] = React.useState(false);\n  const [imageUrl, setImageUrl] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (defaultImage) {\n      setImageUrl(defaultImage);\n    }\n  }, [defaultImage]);\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error(\"Image must smaller than 2MB!\");\n    }\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h1 class=\"card-title\">Profil Karyawan</h1>\n                <p class=\"card-description\">\n                  Anda dapat mengelola role ataupun mengubah data karyawan pada\n                  halaman ini.\n                </p>\n                <Form>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name=\"nik\"\n                        label=\"NIK\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <CSelect\n                        data={enumProvince}\n                        name=\"province\"\n                        label=\"Nama Provinsi\"\n                        onChange={(val) => onChangeProvince(val)}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder=\"* Isi jika ingin merubah password\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <CSelect\n                        name=\"city\"\n                        data={enumCity}\n                        label=\"Kota/Kabupaten\"\n                        disabled={enumCity.length <= 0}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name={\"name\"}\n                        label=\"Nama Karyawan\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <Typography style={{ textAlign: \"left\" }}>\n                        Foto Profil\n                      </Typography>\n                      <div\n                        class=\"card-body\"\n                        style={{\n                          marginLeft: -22,\n                          marginTop: -20,\n                        }}\n                      >\n                        <Upload\n                          name=\"avatar\"\n                          listType=\"picture-card\"\n                          className=\"avatar-uploader overflow-hidden\"\n                          showUploadList={false}\n                          beforeUpload={beforeUpload}\n                          onChange={handleChange}\n                        >\n                          {imageUrl || defaultImage ? (\n                            <>\n                              <img\n                                src={imageUrl}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                  height: \"100%\",\n                                  resizeMode: \"stretch\",\n                                  borderRadius: 5,\n                                }}\n                              />\n                              <div\n                                class=\"row\"\n                                style={{\n                                  backgroundColor: \"#F3F3F3\",\n                                  position: \"absolute\",\n                                  width: 80,\n                                  heigh: 30,\n                                  borderRadius: 50,\n                                  alignItems: \"center\",\n                                  justifyContent: \"center\",\n                                  opacity: 0.7,\n                                }}\n                              >\n                                <Typography style={{ fontSize: 10 }}>\n                                  Ubah\n                                </Typography>\n                                <EditOutlined\n                                  style={{\n                                    color: \"#020202\",\n                                    fontSize: 10,\n                                    marginLeft: 5,\n                                  }}\n                                />\n                              </div>\n                            </>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name={`phone`}\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n                      <Field\n                        name=\"address\"\n                        label=\"Alamat\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                      />\n                      <hr />\n                      {formStatus === \"edit\" && (\n                        <div class=\"card\">\n                          <div class=\"card-body\">\n                            <h6 class=\"card-title text-center\">Pilih Role</h6>\n                            <SelectRole\n                              data={enumRole}\n                              defaultValues={selectedRoleEmployee}\n                              onChangeRoleEmployee={onChangeRoleEmployee}\n                            />\n                          </div>\n                        </div>\n                      )}\n                      <br />\n                    </div>\n                  </div>\n                  <div class=\"row ml-2\">\n                    <CButtonAntd\n                      key=\"submit\"\n                      type=\"primary\"\n                      loading={false}\n                      onClick={onBackAction}\n                      danger\n                      icon={<ArrowLeftOutlined />}\n                    >\n                      Kembali\n                    </CButtonAntd>\n                    <div class=\"ml-3\" />\n                    <CButtonAntd\n                      key=\"submit\"\n                      type=\"primary\"\n                      loading={false}\n                      onClick={handleSubmit(submitForm)}\n                    >\n                      Simpan\n                    </CButtonAntd>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeEditComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport EmployeeEditComponent from \"../Component/EmployeeEditComponent\";\nimport { validateFormEmployee } from \"../../../app/validateForm\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getCitiesEnum, navigate } from \"../../../app/Helpers\";\nimport Invoke from \"../../../app/axios/Invoke\";\n\nconst EmployeeEditContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { listRoles },\n    branch: { listBranch, paging, keyword },\n    employees: { formStatus, selectedEmployeeData, selectedRoleEmployee },\n    masters: { listProvince, listCity },\n    handleClearSelectedEmployeeRole,\n  } = props;\n  const [listCityState, setListCityState] = React.useState([]);\n  const [roleSelected, setRoleSelected] = React.useState([]);\n  const [defaultImage, setDefaultImage] = React.useState(\"\");\n\n  const { page, limit } = paging;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      EmployeesActions.saveEmployeeRequested(formStatus, values, roleSelected);\n    } else {\n    }\n  };\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editEmployeeForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  const SelectEmployeeRole = [];\n  listRoles.map((item, index) => {\n    SelectEmployeeRole.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    let subItem = [];\n    listCity.map((item, index) => {\n      subItem.push({\n        id: `city-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setListCityState(subItem);\n    // Mapping detail data employee when edit\n    if (formStatus === \"edit\") {\n      MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n      EmployeesActions.mapDetailEmployeeToForm();\n      // convert image url to base64\n      setDefaultImage(selectedEmployeeData.photo);\n      // set selected roles to redux-form\n      store.dispatch(\n        change(\"editEmployeeForm\", \"selectedRoles\", selectedRoleEmployee)\n      );\n    }\n    return () => {\n      handleClearSelectedEmployeeRole();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    setListCityState([]);\n    if (formStatus === \"edit\" && selectedEmployeeData.province_id) {\n      const provinceId =\n        selectedEmployeeData.province_id +\n        \"|\" +\n        selectedEmployeeData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedEmployeeData.province_id]);\n\n  const onChangeRoleEmployee = (roles) => {\n    console.log(\"=== roles : \", roles);\n    setRoleSelected(roles);\n    store.dispatch(change(\"editEmployeeForm\", \"selectedRoles\", roles));\n  };\n\n  const onChangeProvince = async (provinceId) => {\n    setListCityState([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setListCityState(provinceMapping);\n      } else {\n        store.dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n        setListCityState([]);\n      }\n    } catch (error) {\n      setListCityState([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onBackAction = async () => {\n    await handleClearSelectedEmployeeRole();\n    setTimeout(() => {\n      navigate(\"employees\");\n    }, 500);\n  };\n\n  return (\n    <EmployeeEditComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumBranch={SelectBranch}\n      enumRole={SelectEmployeeRole}\n      enumProvince={SelectProvince}\n      enumCity={listCityState}\n      detailEmployee={selectedEmployeeData}\n      handleUploadPhoto={handleUploadPhoto}\n      formStatus={formStatus}\n      selectedRoleEmployee={selectedRoleEmployee}\n      onChangeRoleEmployee={onChangeRoleEmployee}\n      defaultImage={defaultImage}\n      onChangeProvince={onChangeProvince}\n      onBackAction={onBackAction}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  employees: state.employees,\n  branch: state.branch,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  getDetailEmployee: async (employeeId) =>\n    await EmployeesActions.getEmployeeDataByIdRequested(employeeId),\n  setAutoPopulateEmployee: () => EmployeesActions.setAutoPopulateEmployee(),\n  handleClearSelectedEmployeeRole: () => {\n    dispatch(EmployeesActions.setSelectedRoleEmployee([]));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeEditContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeForm\",\n  validate: validateFormEmployee,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"ID Cabang\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Cabang\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst BranchModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default BranchModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport BranchModalComponent from \"../Component/BranchModalComponent\";\n\nconst BranchModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values) =>\n    BranchActions.saveBranchRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchModalContainer);\n\nexport default reduxForm({\n  form: \"editBranchForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport BranchModalContainer from \"../Container/BranchModalContainer\";\n\nconst { Search } = Input;\n\nconst BranchComponent = (props) => {\n  const {\n    headers,\n    listRoles,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Cabang</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Branch\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <BranchModalContainer />\n    </div>\n  );\n};\n\nexport default BranchComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport BranchComponent from \"../Component/BranchComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListBranch,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    branch: { listBranch, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listBranch.length > 0) {\n    listBranch.map((item, index) => {\n      listBranch[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Cabang\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListBranch(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(BranchActions.setPagingBranch(paging));\n    getListBranch(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListBranch(page, limit, val);\n  };\n\n  return (\n    <BranchComponent\n      headers={headers}\n      listRoles={listBranch}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListBranch: (page, limit, keyword) =>\n    BranchActions.getBranchListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(BranchActions.setSelectedBranchData({}));\n    await dispatch(BranchActions.setSelectedBranchId(\"\"));\n    dispatch(BranchActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    BranchActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(BranchActions.setFormStatus(\"edit\"));\n    await dispatch(BranchActions.setSelectedBranchId(record.id));\n    await dispatch(BranchActions.setSelectedBranchData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await BranchActions.mapDetailBranchToForm();\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(BranchActions.setSelectedBranchId(branchId));\n    BranchActions.deleteBranchRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field name=\"name\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst JobFormsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default JobFormsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport JobFormsModalComponent from \"../Component/JobFormsModalComponent\";\n\nconst JobFormsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    jobForms: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <JobFormsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  jobForms: state.jobForms,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    JobFormsActions.saveJobFormsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsModalContainer);\n\nexport default reduxForm({\n  form: \"editJobForms\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport JobFormsModalContainer from \"../Container/JobFormsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst JobFormsComponent = (props) => {\n  const {\n    headers,\n    listJobForms,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Job Forms</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Job Forms\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listJobForms}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <JobFormsModalContainer />\n    </div>\n  );\n};\n\nexport default JobFormsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport JobFormsComponent from \"../Component/JobFormsComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst JobFormsContainer = (props) => {\n  const {\n    getListJobForms,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    jobForms: { listJobForms, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listJobForms.length > 0) {\n    listJobForms.map((item, index) => {\n      listJobForms[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"40%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListJobForms(page, limit);\n  }, []);\n\n  const onSearch = (val) => {\n    getListJobForms(page, limit, val);\n  };\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(JobFormsActions.setPagingJobForm(paging));\n    getListJobForms(nextPage, pageSize);\n  };\n\n  return (\n    <JobFormsComponent\n      headers={headers}\n      listJobForms={listJobForms}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onSearch={onSearch}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  jobForms: state.jobForms,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListJobForms: (page, limit, val) =>\n    JobFormsActions.getJobFormsListDataRequested(page, limit, val),\n  handlePressAddNew: async () => {\n    await dispatch(JobFormsActions.setSelectedJobFormsData({}));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(\"\"));\n    dispatch(JobFormsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    JobFormsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(JobFormsActions.setFormStatus(\"edit\"));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(record.id));\n    await dispatch(JobFormsActions.setSelectedJobFormsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await JobFormsActions.mapDetailJobFormsToForm();\n  },\n  handlePressDelete: async (jobFormsId) => {\n    await dispatch(JobFormsActions.setSelectedJobFormsId(jobFormsId));\n    JobFormsActions.deleteJobFormsRequested(jobFormsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect data={enumInstanceType} name=\"instanceType\" label=\"Tipe\" />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"riceTrademark\"\n            label=\"Merek Dagang Beras\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerAddress\"\n            label=\"Alamat\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"phone\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingCapacity\"\n            label=\"Kapasitas Penggilingan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingWorkCapacityPerDay\"\n            label=\"Kapasitas Kerja Penggilingan (Per Hari)\"\n            placeholder=\"-\"\n            component={CInput}\n            labelSize={12}\n            type=\"text\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentUnitComponent = () => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"serialNumber\"\n            label=\"Nomor Seri\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"engineNumber\"\n            label=\"Nomor Mesin\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"gearboxNumber\"\n            label=\"Nomor Gearbox\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"production_unit_year\"\n            label=\"Tahun Produksi Unit\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Jam Kerja</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>\n          (per Hari & Hour Meter )\n        </Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <Field\n            name=\"perHour\"\n            label=\"Per Hour\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"hourMeter\"\n            label=\"Hour Meter\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\"></div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Tanggal Transaksi Produk</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>(Bulan & Tahun)</Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Pembelian\" />\n        </div>\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Terima Bantuan\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentUnitComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentSparePartComponent = ({ onChangeServiced, isServiced }) => {\n  const [listServices] = React.useState([\n    {\n      id: `serviced-1`,\n      value: \"true\",\n      label: \"Pernah\",\n    },\n    {\n      id: `serviced-2`,\n      value: \"false\",\n      label: \"Tidak\",\n    },\n  ]);\n\n  const RenderServiceHistory = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_buy_place`}\n                    label=\"Tempat Pembelian Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartSelling = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_qty`}\n                    label=\"Qty\"\n                    placeholder=\"Jumlah Penjualan Spare Part\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartNeeded = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_name`}\n                    label=\"Nama Produk Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_code`}\n                    label=\"Kode Produk\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.part_number`}\n                    label=\"Part Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <CSelect\n            onChange={(val) => onChangeServiced(val)}\n            data={listServices}\n            label=\"Pernah Diservis\"\n            name=\"location\"\n          />\n        </div>\n      </div>\n      {isServiced && (\n        <div class=\"row m-2 text-left\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_place\"\n              label=\"Perbaikan Dilakukan Di\"\n              placeholder=\"cth: Blitar\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_type\"\n              label=\"Jenis Perbaikan\"\n              placeholder=\"cth: Service Sikring\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">Riwayat Penggantian Spare Part</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan service, maksimal 5 unit.\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_changing_histories\"\n          component={RenderServiceHistory}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Penjualan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>\n            (pada saat kunjuangan)\n          </Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan penjualan, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_selling_histories\"\n          component={(_props) => <RenderSparePartSelling {..._props} />}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Daftar Kebutuhan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>(per Quartal)</Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi apabila terdapat kebutuhan spare part, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_needs\"\n          component={(_props) => <RenderSparePartNeeded {..._props} />}\n        />\n        <hr />\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-12\">\n          <Field\n            name=\"note\"\n            label=\"Keterangan\"\n            placeholder=\"cth: Pernah dilakukan service namun tidak rampung\"\n            component={CInput}\n            typeComponent=\"textarea\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentSparePartComponent;\n","import React from \"react\";\n\nimport { Steps, Button, message } from \"antd\";\nimport { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\n\nconst { Text } = Typography;\n\nconst StepsContent = styled.div`\n  min-height: 200px;\n  margin-top: 16px;\n  padding-top: 22px;\n  text-align: center;\n  background-color: #fafafa;\n  border: 1px dashed #e9e9e9;\n  border-radius: 2px;\n`;\n\nconst StepsAction = styled.div`\n  margin-top: 24px;\n`;\n\nconst { Step } = Steps;\n\nconst FormWizardIdentificationComponent = (props) => {\n  const { data, steps, saveFormChanges } = props;\n  const [current, setCurrent] = React.useState(0);\n\n  const onClickNext = () => {\n    setCurrent(current + 1);\n    saveFormChanges(false);\n  };\n\n  const onClickPrevious = () => {\n    setCurrent(current - 1);\n  };\n\n  const onFinished = () => {\n    message.success(\"Processing complete!\");\n    saveFormChanges(true);\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">Form Identification</h4>\n            <h6 class=\"text-small\">\n              {data.milling ? \"(Penggilingan)\" : \"(Non Penggilingan)\"}\n            </h6>\n            <hr />\n            <div class=\"d-flex justify-content-between align-items-baseline\">\n              <div class=\"col-md-6 mb-3\">\n                <Text>Nama Customer : </Text>\n                <Text strong>{data.customer_name ?? \"-\"}</Text>\n                <br />\n                <Text>Tipe : </Text>\n                <Text strong>{data.type ?? \"-\"}</Text>\n                <br />\n                <Text>Cabang : </Text>\n                <Text strong>{data.branch_name ?? \"-\"}</Text>\n                <br />\n                <Text>Status : </Text>\n                <CBadgeText type=\"info\">{data.status ?? \"-\"}</CBadgeText>\n                <br />\n                <Text>Dibuat : </Text>\n                <Text strong>{data.created_date ?? \"-\"}</Text>\n              </div>\n            </div>\n            <Steps current={current}>\n              {steps.map((item) => (\n                <Step\n                  description={item.description}\n                  key={item.title}\n                  title={item.title}\n                />\n              ))}\n            </Steps>\n            <StepsContent>{steps[current].content}</StepsContent>\n            <StepsAction>\n              {current < steps.length - 1 && (\n                <Button type=\"primary\" onClick={onClickNext}>\n                  Next\n                </Button>\n              )}\n              {current === steps.length - 1 && (\n                <Button type=\"primary\" onClick={onFinished}>\n                  Done\n                </Button>\n              )}\n              {current > 0 && (\n                <Button style={{ margin: \"0 8px\" }} onClick={onClickPrevious}>\n                  Previous\n                </Button>\n              )}\n            </StepsAction>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormWizardIdentificationComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst ContentMachineConfigurationComponent = ({\n  machineConf,\n  onAddMachineConf,\n}) => {\n  const RenderBodyHusker = ({ fields, item }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 2) {\n                return;\n              }\n              fields.push({});\n              setTimeout(() => {\n                onAddMachineConf(item);\n              }, 500);\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`${item.type} ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.brand`}\n                    label=\"Merek\"\n                    placeholder=\"cth: merek_1, merek_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.type`}\n                    label=\"Tipe\"\n                    placeholder=\"cth: tipe_1, tipe_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-2\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"cth: 12, 5, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.buy_and_use_year`}\n                    label=\"Tahun Pembelian & Pemakaian\"\n                    placeholder=\"cth: 2015, 2017, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.serial_number`}\n                    label=\"Nomor Seri\"\n                    placeholder=\"cth: 77888, 66555, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return machineConf.map((item, index) => {\n    return (\n      <div key={`machine-conf-${index}`} className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">{item.type}</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Maksimal hanya input 2 field.\n          </p>\n        </div>\n        <FieldArray\n          name={`engine_confs.${item.name}.list`}\n          component={(_props) => <RenderBodyHusker item={item} {..._props} />}\n        />\n        <hr />\n      </div>\n    );\n  });\n};\n\nexport default ContentMachineConfigurationComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneRegularComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumInstanceType}\n            name=\"instanceType\"\n            label=\"Tipe Instansi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"productName\"\n            label=\"Nama Produk\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instancePhoneNumber\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-4\">\n        <h5 className=\"card-title\">Alamat Customer</h5>\n      </div>\n      <div class=\"row ml-2 mr-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"kelurahan\"\n            label=\"Kelurahan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"kecamatan\"\n            label=\"Kecamatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n          <Field\n            name=\"postalCode\"\n            label=\"Kode Pos\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneRegularComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, getFormValues, reduxForm } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport {\n  getCitiesEnum,\n  getMachineConf,\n  getProvinceEnum,\n  SelectInstanceType,\n  SelectInstanceTypeRegular,\n  SelectStatusMilling,\n} from \"../../../../app/Helpers\";\nimport ContentStepOneComponent from \"../../Component/Wizard/ContentStepOneComponent\";\nimport ContentUnitComponent from \"../../Component/Wizard/ContentUnitComponent\";\nimport ContentSparePartComponent from \"../../Component/Wizard/ContentSparePartComponent\";\nimport FormWizardIdentificationComponent from \"../../Component/Wizard/FormWizardIdentificationComponent\";\nimport ContentMachineConfigurationComponent from \"../../Component/Wizard/ContentMachineConfigurationComponent\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport ContentStepOneRegularComponent from \"../../Component/Wizard/ContentStepOneRegularComponent\";\nimport * as IdentificationActions from \"../../Store/IdentificationActions\";\n\nconst FormWizardIdentificationContainer = (props) => {\n  const [cities, setCities] = React.useState([]);\n  const [serviced, setServiced] = React.useState(false);\n  const {\n    identification: { selectedIdentificationData, formStatus },\n    masters: { listProvince },\n    machineConfiguration: { listMachine },\n    identificationFormValues,\n  } = props;\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"wizardIdentificationForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onChangeServiced = (val) => {\n    const isServiced = val.split(\"|\");\n    if (isServiced[0] === \"true\") {\n      setServiced(true);\n    } else {\n      setServiced(false);\n    }\n  };\n\n  const onAddMachineConf = (item) => {\n    store.dispatch(\n      change(\n        \"wizardIdentificationForm\",\n        `engine_confs.${item.name}.id`,\n        item.id\n      )\n    );\n  };\n\n  const saveFormChanges = (isLastStep) => {\n    IdentificationActions.saveIdentificationRequested(\n      formStatus,\n      identificationFormValues,\n      isLastStep\n    );\n  };\n\n  const steps = [];\n\n  if (selectedIdentificationData.milling) {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceType}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Konfigurasi Mesin\",\n      content: (\n        <ContentMachineConfigurationComponent\n          machineConf={getMachineConf(listMachine)}\n          onAddMachineConf={onAddMachineConf}\n        />\n      ),\n    });\n  } else {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneRegularComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceTypeRegular}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Unit\",\n      content: <ContentUnitComponent />,\n    });\n  }\n\n  steps.push({\n    title: \"Spare Part\",\n    content: (\n      <ContentSparePartComponent\n        onChangeServiced={onChangeServiced}\n        isServiced={serviced}\n      />\n    ),\n  });\n\n  return (\n    <FormWizardIdentificationComponent\n      data={selectedIdentificationData}\n      steps={steps}\n      saveFormChanges={saveFormChanges}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  identification: state.identification,\n  masters: state.masters,\n  machineConfiguration: state.machineConfiguration,\n  identificationFormValues: getFormValues(\"wizardIdentificationForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormWizardIdentificationContainer);\n\nexport default reduxForm({\n  form: \"wizardIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  formStatus,\n  listCustomer,\n  listType,\n  listBranch,\n  listLocation,\n  listMilling\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          {formStatus === \"edit\" && (\n            <Field\n              name=\"id\"\n              label=\"ID Cabang\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          )}\n        </div>\n        <div class=\"col-md-12\">\n          <CSelect\n            // onChange={(val) => handleAutoPopulateUnitModel(val, indexUnit)}\n            showSearch\n            data={listCustomer}\n            label=\"Nama Customer\"\n            name=\"customer\"\n          />\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <CSelect data={listBranch} label=\"Cabang\" name=\"branch\" />\n            </div>\n            <div class=\"col-md-6\">\n              <CSelect data={listLocation} label=\"Lokasi\" name=\"location\" />\n            </div>\n          </div>\n          <CSelect data={listType} label=\"Tipe Identifikasi\" name=\"type\" />\n          <CSelect data={listMilling} label=\"Milling\" name=\"milling\" />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst IdentificationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n    enumCustomers,\n    enumType,\n    enumBranch,\n    enumLocation,\n    enumMilling,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n          listCustomer={enumCustomers}\n          listType={enumType}\n          listBranch={enumBranch}\n          listLocation={enumLocation}\n          listMilling={enumMilling}\n        />\n      }\n    />\n  );\n};\n\nexport default IdentificationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as CustomersActions from \"../../Customers/Store/CustomersActions\";\nimport IdentificationModalComponent from \"../Component/IdentificationModalComponent\";\nimport {\n  SelectLocation,\n  SelectMilling,\n  SelectType,\n} from \"../../../app/Helpers\";\n\nconst IdentificationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    identification: { formStatus },\n    handleSubmitForm,\n    customers: { listCustomers },\n    branch: { listBranch },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomer = [];\n  listCustomers.map((item, index) => {\n    SelectCustomer.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    CustomersActions.getCustomerListDataByPaging(1, 300);\n  }, []);\n\n  return (\n    <IdentificationModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumCustomers={SelectCustomer}\n      enumType={SelectType}\n      enumBranch={SelectBranch}\n      enumLocation={SelectLocation}\n      enumMilling={SelectMilling}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  identification: state.identification,\n  component: state.component,\n  masters: state.masters,\n  customers: state.customers,\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    IdentificationActions.saveIdentificationRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IdentificationModalContainer);\n\nexport default reduxForm({\n  form: \"editIdentificationhForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport IdentificationModalContainer from \"../Container/IdentificationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ListIdentificationComponent = (props) => {\n  const {\n    headers,\n    listIdentification,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Identifikasi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Identifikasi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listIdentification}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    size=\"small\"\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <IdentificationModalContainer />\n    </div>\n  );\n};\n\nexport default ListIdentificationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListIdentificationComponent from \"../Component/ListIdentificationComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ListIdentificationContainer = (props) => {\n  const {\n    getListIdentification,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    identification: { listIdentification, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listIdentification.length > 0) {\n    listIdentification.map((item, index) => {\n      listIdentification[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_id\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_id.length - b.branch_id.length,\n    },\n    {\n      title: \"Tipe Identifikasi\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"20%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListIdentification(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(IdentificationActions.setPagingIdentification(paging));\n    getListIdentification(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListIdentification(page, limit, val);\n  };\n\n  return (\n    <ListIdentificationComponent\n      headers={headers}\n      listIdentification={listIdentification}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  identification: state.identification,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListIdentification: (page, limit, keyword) =>\n    IdentificationActions.getIdentificationListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(IdentificationActions.setSelectedIdentificationData({}));\n    await dispatch(IdentificationActions.setSelectedIdentificationId(\"\"));\n    dispatch(IdentificationActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    IdentificationActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(IdentificationActions.setFormStatus(\"edit\"));\n    await dispatch(\n      IdentificationActions.setSelectedIdentificationId(record.id)\n    );\n    await dispatch(IdentificationActions.setSelectedIdentificationData(record));\n    setTimeout(() => {\n      navigate(\"form-identification\");\n    }, 500);\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(IdentificationActions.setSelectedIdentificationId(branchId));\n    IdentificationActions.deleteIdentificationRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListIdentificationContainer);\n\nexport default reduxForm({\n  form: \"identificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, formStatus }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {formStatus === \"edit\" && (\n          <div class=\"col-md-12\">\n            <Field\n              name=\"id\"\n              label=\"ID Konfigurasi Mesin\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          </div>\n        )}\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Konfigurasi Mesin\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst MachineConfigurationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n        />\n      }\n    />\n  );\n};\n\nexport default MachineConfigurationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as MachineConfigurationActions from \"../Store/MachineConfigurationActions\";\nimport BranchModalComponent from \"../Component/MachineConfigurationModalComponent\";\n\nconst MachineConfigurationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    MachineConfigurationActions.saveMachineRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationModalContainer);\n\nexport default reduxForm({\n  form: \"editMachineConfigurationForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport MachineConfigurationModalContainer from \"../Container/MachineConfigurationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst MachineConfigurationComponent = (props) => {\n  const {\n    headers,\n    listMachine,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Konfigurasi Mesin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Konfigurasi Mesin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listMachine}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <MachineConfigurationModalContainer />\n    </div>\n  );\n};\n\nexport default MachineConfigurationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as MachineActions from \"../Store/MachineConfigurationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport MachineConfigurationComponent from \"../Component/MachineConfigurationComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst MachineConfigurationContainer = (props) => {\n  const {\n    getListMachine,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    machineConfiguration: { listMachine, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMachine.length > 0) {\n    listMachine.map((item, index) => {\n      listMachine[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Konfigurasi Mesin\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"50%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListMachine(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(MachineActions.setPagingMachineConf(paging));\n    getListMachine(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListMachine(page, limit, val);\n  };\n\n  return (\n    <MachineConfigurationComponent\n      headers={headers}\n      listMachine={listMachine}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  machineConfiguration: state.machineConfiguration,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMachine: (page, limit, keyword) =>\n    MachineActions.getMachineListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(MachineActions.setSelectedMachineData({}));\n    await dispatch(MachineActions.setSelectedMachineId(\"\"));\n    dispatch(MachineActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    MachineActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(MachineActions.setFormStatus(\"edit\"));\n    await dispatch(MachineActions.setSelectedMachineId(record.id));\n    await dispatch(MachineActions.setSelectedMachineData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await MachineActions.mapDetailMachineToForm();\n  },\n  handlePressDelete: async (machineId) => {\n    await dispatch(MachineActions.setSelectedMachineId(machineId));\n    MachineActions.deleteMachineRequested(machineId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationContainer);\n\nexport default reduxForm({\n  form: \"machineConfigurationForm\",\n})(EnhanceContainer);\n","import React, { useState } from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Upload, message, Typography } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\n\nconst beforeUpload = (file) => {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n  return isJpgOrPng && isLt2M;\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  handleUploadPhoto,\n  selectedUnitsData,\n}) => {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {/* <div class=\"col-md-12\">\n          <Text style={{ marginBottom: 10 }}>Foto Unit</Text>\n          <Upload\n            name=\"avatar\"\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n            // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            beforeUpload={beforeUpload}\n            onChange={handleChange}\n          >\n            {imageUrl ? (\n              <img\n                src={imageUrl}\n                alt=\"avatar\"\n                style={{ height: \"100%\", width: \"100%\" }}\n              />\n            ) : (\n              uploadButton\n            )}\n          </Upload>\n        </div> */}\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"name\" label=\"Nama Unit\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport UnitsModalComponent from \"../Component/UnitsModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    UnitsActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    UnitsActions.saveUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitForm\",\n  validate: validateFormUnit,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input, Table, Tooltip } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport UnitsModalContainer from \"../Container/UnitsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <Tooltip placement=\"top\" title=\"Edit unit\">\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </Tooltip>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    size=\"small\"\n                    columns={headers}\n                    dataSource={listUnits}\n                    // renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitsComponent;\n","import { Button, Space, Tooltip, Typography } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  BoxPlotOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/UnitsComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressUnitModel,\n    handlePressUnitFields,\n    handlePressLink,\n    units: { listUnits, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const tooltipText = <span>Unit Model</span>;\n\n  if (listUnits.length > 0) {\n    listUnits.map((item, index) => {\n      listUnits[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <Tooltip placement=\"topLeft\" title=\"Edit unit\">\n        <CButtonAntd\n          onClick={() => {\n            handlePressEdit(record);\n          }}\n          type=\"primary\"\n          icon={<EditOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n      <Tooltip placement=\"top\" title={tooltipText}>\n        <CButtonAntd\n          onClick={() => handlePressUnitModel(record.id)}\n          type=\"primary\"\n          icon={<BoxPlotOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n      <CButtonAntd\n        onClick={() => handlePressUnitFields(record)}\n        type=\"primary\"\n        icon={<FileAddOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n      render: (unit, record) => (\n        <Button\n          block\n          onClick={() => handlePressLink(record)}\n          type=\"link\"\n          style={{ whiteSpace: \"normal\", textAlign: \"left\" }}\n        >\n          <Typography\n            style={{ color: \"#1890ff\", fontWeight: \"bold\", fontSize: 11 }}\n          >\n            {unit}\n          </Typography>\n        </Button>\n      ),\n    },\n    {\n      title: \"Divisi\",\n      dataIndex: \"division\",\n      key: \"division\",\n      width: \"10%\",\n      sorter: (a, b) => a.division.length - b.division.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  React.useEffect(() => {\n    getListUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitsActions.setPagingUnit(paging));\n    getListUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnit(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listUnits}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnit: (page, limit, keyword) =>\n    UnitsActions.getUnitListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitsActions.setSelectedUnitData({}));\n    await dispatch(UnitsActions.setSelectedUnitId(\"\"));\n    dispatch(UnitsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitsActions.mapDetailUnitToForm();\n  },\n  handlePressDelete: async (unitId) => {\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    UnitsActions.deleteUnitRequested(unitId);\n  },\n  handlePressUnitModel: async (unitId) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    setTimeout(() => {\n      navigate(\"unit-models\");\n    }, 500);\n  },\n  handlePressUnitFields: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    setTimeout(() => {\n      navigate(\"unit-fields\");\n    }, 500);\n  },\n  handlePressLink: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    setTimeout(() => {\n      navigate(\"unit-job-forms\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"unitsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumProvince,\n  onChangeProvince,\n  cities,\n  enumBranch,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"name\"\n              label=\"Nama Customer\"\n              placeholder=\"Nama..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"picPhone\"\n              label=\"Telepon PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"username\"\n              label=\"Username\"\n              placeholder=\"Username..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              onChange={(val) => onChangeProvince(val)}\n              data={enumProvince}\n              name=\"province\"\n              label=\"Nama Provinsi\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"password\"\n              label=\"Password\"\n              placeholder=\"Password..\"\n              component={CInput}\n              type=\"password\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              data={cities}\n              name=\"city\"\n              label=\"Kota/Kabupaten\"\n              disabled={cities.length <= 0}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"phone\"\n              label=\"Telepon\"\n              placeholder=\"cth: 0821xxx\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"workHour\"\n              label=\"Jam Kerja\"\n              placeholder=\"cth : 08:00 - 15:20\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"pic\"\n              label=\"PIC\"\n              placeholder=\"PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"address\"\n              label=\"Alamat\"\n              component={CInput}\n              type=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst CustomerModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    enumProvince,\n    onChangeProvince,\n    cities,\n    enumBranch,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      width={900}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          enumProvince={enumProvince}\n          onChangeProvince={onChangeProvince}\n          cities={cities}\n          enumBranch={enumBranch}\n        />\n      }\n    />\n  );\n};\n\nexport default CustomerModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as CustomersActions from \"../Store/CustomersActions\";\nimport CustomerModalComponent from \"../Component/CustomerModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { getCitiesEnum } from \"../../../app/Helpers\";\n\nconst CustomerModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { listBranch },\n    masters: { listMenu, listProvince },\n    customers: { selectedCustomerData, formStatus },\n    handleSubmitForm,\n  } = props;\n  const [cities, setCities] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    setCities([]);\n    if (formStatus === \"edit\" && selectedCustomerData.province_id) {\n      const provinceId =\n        selectedCustomerData.province_id +\n        \"|\" +\n        selectedCustomerData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedCustomerData.province_id]);\n\n  React.useEffect(() => {\n    return () => {\n      CustomersActions.setFormStatus(\"add\");\n    };\n  });\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"editCustomerForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  return (\n    <CustomerModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumProvince={SelectProvince}\n      onChangeProvince={onChangeProvince}\n      cities={cities}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  customers: state.customers,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    CustomersActions.saveCustomerRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerModalContainer);\n\nexport default reduxForm({\n  form: \"editCustomerForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CustomerModalContainer from \"../Container/CustomerModalContainer\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst CustomerComponent = (props) => {\n  const {\n    headers,\n    listCustomers,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Customer</h6>\n                </div>\n                <div class=\"row align-items-center\">\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Customers\n                  </CButtonAntd>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2 mt-3\">\n                  <div class=\"col-md-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <div class=\"mt-2\" />\n                    <Search\n                      placeholder=\"Cari Customer\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listCustomers}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <CustomerModalContainer />\n    </div>\n  );\n};\n\nexport default CustomerComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { formValueSelector, reduxForm } from \"redux-form\";\nimport * as CustomerActions from \"../Store/CustomersActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CustomerComponent from \"../Component/CustomerComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"customerForm\");\n\nconst CustomerContainer = (props) => {\n  const {\n    getListCustomer,\n    getListBranch,\n    getListProvince,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    customerBranchValue,\n    customers: { listCustomers, paging, keyword },\n    branch: { listBranch },\n  } = props;\n\n  const { page, totalPage, limit } = paging;\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  if (listCustomers.length > 0) {\n    listCustomers.map((item, index) => {\n      listCustomers[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n    {\n      title: \"PIC | Phone\",\n      dataIndex: `phone`,\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListCustomer(1, 10, \"\");\n    getListBranch();\n    getListProvince();\n  }, []);\n\n  const onChangePagination = async (nextPage) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n    await store.dispatch(CustomerActions.setPagingCustomer(paging));\n    getListCustomer(nextPage, limit, keyword);\n  };\n\n  const onSearch = (val) => {\n    getListCustomer(page, limit, val, customerBranchValue);\n  };\n\n  return (\n    <CustomerComponent\n      headers={headers}\n      paging={paging}\n      listCustomers={listCustomers}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers,\n  branch: state.branch,\n  customerBranchValue: selector(state, \"branch\"),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListCustomer: (page, limit, keyword, branchId) => {\n    const splitBranch = branchId ? branchId.split(\"|\") : [\"\"];\n    CustomerActions.getCustomerListDataByPaging(\n      page,\n      limit,\n      keyword,\n      splitBranch[0]\n    );\n  },\n  getListBranch: () => BranchActions.getBranchListDataRequested(1, 250),\n  getListProvince: () => MasterDataActions.loadProvinceListData(),\n  handlePressAddNew: async () => {\n    await dispatch(CustomerActions.setSelectedCustomerData({}));\n    await dispatch(CustomerActions.setSelectedCustomerId(\"\"));\n    dispatch(CustomerActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    CustomerActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(CustomerActions.setFormStatus(\"edit\"));\n    await dispatch(CustomerActions.setSelectedCustomerId(record.id));\n    await dispatch(CustomerActions.setSelectedCustomerData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await CustomerActions.mapDetailCustomerToForm();\n  },\n  handlePressDelete: async (customerId) => {\n    await dispatch(CustomerActions.setSelectedCustomerId(customerId));\n    CustomerActions.deleteCustomerRequested(customerId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerContainer);\n\nexport default reduxForm({\n  form: \"customerForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Peralatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default ToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTools } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport ToolsModalComponent from \"../Component/ToolsModalComponent\";\n\nconst ToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    tools: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <ToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    ToolsActions.saveToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editToolsForm\",\n  validate: validateFormTools,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ToolsModalContainer from \"../Container/ToolsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ToolsComponent = (props) => {\n  const {\n    headers,\n    listTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Peralatan</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Peralatan\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToolsModalContainer />\n    </div>\n  );\n};\n\nexport default ToolsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ToolsComponent from \"../Component/ToolsComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ToolsContainer = (props) => {\n  const {\n    getListTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    tools: { listTools, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listTools.length > 0) {\n    listTools.map((item, index) => {\n      listTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListTools(1, 10);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ToolsActions.setPagingTools(paging));\n    getListTools(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListTools(page, limit, val);\n  };\n\n  return (\n    <ToolsComponent\n      headers={headers}\n      listTools={listTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListTools: (page, limit, keyword) =>\n    ToolsActions.getToolsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(ToolsActions.setSelectedToolsData({}));\n    await dispatch(ToolsActions.setSelectedToolsId(\"\"));\n    dispatch(ToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    ToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(ToolsActions.setFormStatus(\"edit\"));\n    await dispatch(ToolsActions.setSelectedToolsId(record.id));\n    await dispatch(ToolsActions.setSelectedToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await ToolsActions.mapDetailToolsToForm();\n  },\n  handlePressDelete: async (toolsId) => {\n    await dispatch(ToolsActions.setSelectedToolsId(toolsId));\n    ToolsActions.deleteToolsRequested(toolsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsContainer);\n\nexport default reduxForm({\n  form: \"toolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Judul\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst FormCategoryModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default FormCategoryModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormCategory } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport BranchModalComponent from \"../Component/FormCategoryModalComponent\";\n\nconst FormCategoryModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    FormCategoryActions.saveFormCategoryRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryModalContainer);\n\nexport default reduxForm({\n  form: \"editFormCategory\",\n  validate: validateFormCategory,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport FormCategoryModalContainer from \"../Container/FormCategoryModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst FormCategoryComponent = (props) => {\n  const {\n    headers,\n    listFormCategory,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Kategori Form</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Kategori Form\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listFormCategory}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <FormCategoryModalContainer />\n    </div>\n  );\n};\n\nexport default FormCategoryComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport FormCategoryComponent from \"../Component/FormCategoryComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst FormCategoryContainer = (props) => {\n  const {\n    getListFormCategory,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    formCategory: { listFormCategory, paging, keyword },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listFormCategory.length > 0) {\n    listFormCategory.map((item, index) => {\n      listFormCategory[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListFormCategory(page, limit, keyword);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(FormCategoryActions.setPagingFormCategory(paging));\n    getListFormCategory(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListFormCategory(page, limit, val);\n  };\n\n  return (\n    <FormCategoryComponent\n      headers={headers}\n      listFormCategory={listFormCategory}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  formCategory: state.formCategory,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListFormCategory: (page, limit, keyword) =>\n    FormCategoryActions.getFormCatgeoryListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData({}));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(\"\"));\n    dispatch(FormCategoryActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    FormCategoryActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(FormCategoryActions.setFormStatus(\"edit\"));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(record.id));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await FormCategoryActions.mapDetailCategoryToForm();\n  },\n  handlePressDelete: async (formCategoryId) => {\n    await dispatch(\n      FormCategoryActions.setSelectedFormCategoryId(formCategoryId)\n    );\n    FormCategoryActions.deleteFormCategoryRequested(formCategoryId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryContainer);\n\nexport default reduxForm({\n  form: \"formCategory\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-12 mt-3\">\n            <Field\n              name=\"name\"\n              label=\"Nama Model\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModelsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModelsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit, validateFormUnitModel } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitsModelsModalComponent from \"../Component/UnitsModelsModalComponent\";\n\nconst UnitModelsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModelsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitModelActions.saveUnitModelsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitModelForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport UnitModelsModalContainer from \"../Container/UnitModelsModalContainer\";\nimport { navigate } from \"../../../app/Helpers\";\n\nconst { Search } = Input;\n\nconst UnitModelsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit Model</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Model\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitModelsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitModelsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FieldNumberOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitModelsComponent from \"../Component/UnitModelsComponent\";\n\nconst UnitModelsContainer = (props) => {\n  const {\n    getListUnitModels,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressSerialNumber,\n    unitModels: { listUnitModels, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitModels.length > 0) {\n    listUnitModels.map((item, index) => {\n      listUnitModels[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Model\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressSerialNumber(record)}\n        type=\"ghost\"\n        icon={<FieldNumberOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitModels(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitModelActions.setPagingUnitModel(paging));\n    getListUnitModels(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitModels(page, limit, val);\n  };\n\n  return (\n    <UnitModelsComponent\n      headers={headers}\n      listUnits={listUnitModels}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitModels: state.unitModels,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitModels: (page, limit, keyword) =>\n    UnitModelActions.getUnitModelListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitModelActions.setSelectedUnitModelData({}));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(\"\"));\n    dispatch(UnitModelActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitModelActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitModelActions.setFormStatus(\"edit\"));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitModelActions.mapDetailUnitModelToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(UnitModelActions.setSelectedUnitModelId(unitModelId));\n    UnitModelActions.deleteUnitModelRequested(unitModelId);\n  },\n  handlePressSerialNumber: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    setTimeout(() => {\n      navigate(\"unit-serial-number\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsContainer);\n\nexport default reduxForm({\n  form: \"unitsModelsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumFormCategory,\n  enumJobForm,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumFormCategory ?? []}\n              name=\"formCategory\"\n              label=\"Kategori\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"fieldName\"\n              label=\"Nama Field\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumJobForm ?? []}\n              name=\"jobForm\"\n              label=\"Jenis Form\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitFieldsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumFormCategory,\n    enumJobForm,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumFormCategory={enumFormCategory}\n          enumJobForm={enumJobForm}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitFieldsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsModalComponent from \"../../Component/UnitFields/UnitFieldsModalComponent\";\nimport Invoke from \"../../../../app/axios/Invoke\";\n\nconst UnitFieldsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    handleSubmitForm,\n  } = props;\n  const [formCategory, setFormCategory] = React.useState([]);\n  const [jobForm, setJobForm] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const loadOption = async () => {\n    const { data } = await Invoke.getFormCategory(1, 100, \"\");\n    const dataJobForm = await Invoke.getListJobForm(1, 100, \"\");\n    const listFormCategory = data.callback.data;\n    const listJobForm = dataJobForm.data.callback.data;\n\n    const SelectFormCategory = [];\n    listFormCategory.map((item, index) => {\n      SelectFormCategory.push({\n        id: `form-category-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    const SelectJobForm = [];\n    listJobForm.map((item, index) => {\n      SelectJobForm.push({\n        id: `job-form-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setFormCategory(SelectFormCategory);\n    setJobForm(SelectJobForm);\n  };\n\n  React.useEffect(() => {\n    loadOption();\n  }, []);\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitFieldsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      enumFormCategory={formCategory}\n      enumJobForm={jobForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitFieldsActions.saveUnitFieldsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitFieldsForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/UnitFields/UnitFieldsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitFieldsComponent = (props) => {\n  const {\n    headers,\n    listUnitFields,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitsData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Field Unit : ${selectedUnitsData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Field\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitFields}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitFieldsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsComponent from \"../../Component/UnitFields/UnitFieldsComponent\";\n\nconst UnitFieldsContainer = (props) => {\n  const {\n    getListUnitFields,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitFields: { listUnitFields, paging },\n    units: { selectedUnitsData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitFields.length > 0) {\n    listUnitFields.map((item, index) => {\n      listUnitFields[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Job Form\",\n      dataIndex: \"job_form_name\",\n      key: \"job_form_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\n    },\n    {\n      title: \"Nama Field\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Kategori\",\n      dataIndex: \"category_form_name\",\n      key: \"category_form_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.category_form_name.length - b.category_form_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"40%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitFields(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitFieldsActions.setPagingUnitFields(paging));\n    getListUnitFields(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitFields(page, limit, val);\n  };\n\n  return (\n    <UnitFieldsComponent\n      headers={headers}\n      listUnitFields={listUnitFields}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedUnitsData={selectedUnitsData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitFields: state.unitFields,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitFields: (page, limit, keyword) =>\n    UnitFieldsActions.getUnitFieldsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData({}));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(\"\"));\n    dispatch(UnitFieldsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitFieldsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitFieldsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(record.id));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitFieldsActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(unitFieldsId));\n    UnitFieldsActions.deleteUnitFieldRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsContainer);\n\nexport default reduxForm({\n  form: \"unitFieldsForm\",\n})(EnhanceContainer);\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_IDENTIFICATION_LIST_DATA =\n  \"SET_REPORT_IDENTIFICATION_LIST_DATA\";\nexport const SET_PAGING_REPORT_IDENTIFICATION =\n  \"SET_PAGING_REPORT_IDENTIFICATION\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportIdentificationListData = (payload) => {\n  return {\n    type: SET_REPORT_IDENTIFICATION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportIdentification = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportIdentificationListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportIdentification(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportIdentificationComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Identifikasi</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportIdentificationComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportIdentificationActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportIdentificationComponent\";\n\nconst ReportIdentificationContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportIdentificationContainer);\n\nexport default reduxForm({\n  form: \"reportIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Typography } from \"antd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumHeadDivision,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"title\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12 mt-3\">\n          <CSelect\n            showSearch\n            data={enumHeadDivision}\n            name=\"headDivision\"\n            label=\"Kepala Divisi\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumHeadDivision,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumHeadDivision={enumHeadDivision}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport DivisionModalComponent from \"../Component/DivisionModalComponent\";\nimport { enumSelectGenerator } from \"../../../app/Helpers\";\n\nconst DivisionModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    division: { formStatus },\n    masters: { listMenu },\n    employees: { listEmployees },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectEmployees = enumSelectGenerator(listEmployees, \"employee\");\n\n  return (\n    <DivisionModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumHeadDivision={SelectEmployees}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  division: state.division,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    DivisionActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    DivisionActions.saveDivisionRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionForm\",\n  validate: validateDivisionForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport DivisionModalContainer from \"../Container/DivisionModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Divisi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Divisi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <DivisionModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport * as DivisionUnitActions from \"../Store/DivisionUnitActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/DivisionComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListDivision,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressDivisionUnit,\n    division: { listDivision, paging },\n    getListEmlpoyee \n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n      key: \"title\",\n      width: \"30%\",\n      sorter: (a, b) => a.title.length - b.title.length,\n    },\n    {\n      title: \"Kepala Divisi\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDivisionUnit(record)}\n        type=\"primary\"\n        icon={<FileAddOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivision(page, limit);\n    getListEmlpoyee(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionActions.setPagingDivision(paging));\n    getListDivision(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivision(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listDivision}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivision: (page, limit, keyword) =>\n    DivisionActions.getDivisionListDataRequested(page, limit, keyword),\n  getListEmlpoyee: (page, limit) => {\n    EmployeeActions.loadEmployeeListData(page, limit);\n  },\n  handlePressAddNew: async () => {\n    await dispatch(DivisionActions.setSelectedDivisionData({}));\n    await dispatch(DivisionActions.setSelectedDivisionId(\"\"));\n    dispatch(DivisionActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionActions.mapDetailDivisionToForm();\n  },\n  handlePressDelete: async (divisionId) => {\n    await dispatch(DivisionActions.setSelectedDivisionId(divisionId));\n    DivisionActions.deleteDivisionRequested(divisionId);\n  },\n  handlePressDivisionUnit: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    setTimeout(() => {\n      navigate(\"division-unit\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"divisionForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumTools }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Peralatan Karyawan</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumTools}\n              name=\"tools\"\n              label=\"Peralatan\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst EmployeeToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    enumTools,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formStatus={formStatus}\n          enumTools={enumTools}\n        />\n      }\n    />\n  );\n};\n\nexport default EmployeeToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateEmployeeToolsForm, validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport EmployeeToolsModalComponent from \"../../Component/EmployeeTools/EmployeeToolsModalComponent\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\n\nconst EmployeeToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    employeeTools: { formStatus },\n    tools: { listTools },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectTools = enumSelectGenerator(listTools);\n\n  return (\n    <EmployeeToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      enumTools={SelectTools}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  employeeTools: state.employeeTools,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    EmployeeToolsActions.saveEmployeeToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeToolsForm\",\n  validate: validateEmployeeToolsForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport {\n  PlusOutlined,\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n} from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport EmployeeToolsModalContainer from \"../../Container/EmployeeTools/EmployeeToolsModalContainer\";\n\nconst { Search } = Input;\n\nconst EmployeeToolsComponent = (props) => {\n  const {\n    headers,\n    listEmployeeTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedEmployeeData,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Karyawan : ${selectedEmployeeData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-2 mb-2\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"employees\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Peralatan\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak PDF\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployeeTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <EmployeeToolsModalContainer />\n    </div>\n  );\n};\n\nexport default EmployeeToolsComponent;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nexport const generateEmployeeToolsReport = async (data) => {\n  const { selectedEmployeeData, listEmployeeTools } = data;\n  const newListData = [];\n\n  // eslint-disable-next-line array-callback-return\n  await listEmployeeTools.map((item, index) => {\n    newListData.push({ no: index + 1, name: item.name, check: \"-\" });\n  });\n\n  const doc = new jsPDF();\n\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Peralatan Karyawan\", 100, 20, \"center\");\n\n  doc.setFontSize(12);\n  doc.setFont(\"courier\");\n  //   Line 1\n  doc.text(15, 42, `Karyawan`);\n  doc.text(`: ${selectedEmployeeData.name.toUpperCase()}`, 50, 42);\n\n  doc.text(15, 49, `Cabang`);\n  doc.text(`: ${selectedEmployeeData.branch_name ?? \"-\"}`, 50, 49);\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    let docCell = dataCell.doc;\n\n    // --> Draw Circle shape for checklist\n    if (dataCell.cell.section === \"body\" && dataCell.column.index === 2) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 22, dataCell.cell.y + 4, 2, \"FD\");\n    } else if (\n      dataCell.cell.section === \"body\" &&\n      dataCell.column.index === 3\n    ) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 12, dataCell.cell.y + 4, 2, \"FD\");\n    }\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  doc.autoTable({\n    startY: 57,\n    body: newListData,\n    theme: \"plain\",\n    headStyles: { halign: \"center\" },\n    styles: { overflow: \"linebreak\" },\n    columns: [\n      { header: \"#\", dataKey: \"no\" },\n      { header: \"Nama Peralatan\", dataKey: \"name\" },\n      { header: \"Check\", dataKey: \"test1\" },\n      { header: \"NA\", dataKey: \"test2\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  // === Signature ===\n  doc.addPage();\n  doc.setFontSize(16);\n  doc.setFont(\"Times-Roman\", \"regular\");\n  //   Line 2\n  doc.setFontSize(12);\n\n  doc.setFontSize(16);\n  doc.text(80, 90, `MENGETAHUI`);\n\n  //   Line 1\n  doc.text(45, 120, `Karyawan`);\n  doc.text(130, 120, `Coordinator /`);\n  doc.text(130, 127, `Supervisor`);\n\n  doc.text(45, 163, `(...........................)`);\n  doc.text(130, 163, `(...........................)`);\n\n  //   Export\n  doc.save(\n    `Peralatan-Karyawan-${selectedEmployeeData.name.replace(\" \", \"-\")}.pdf`\n  );\n};\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport EmployeeToolsComponent from \"../../Component/EmployeeTools/EmployeeToolsComponent\";\nimport { generateEmployeeToolsReport } from \"../../Store/EmployeeTools/EmployeeToolsReport\";\n\nconst EmployeeToolsContainer = (props) => {\n  const {\n    getListEmployeeTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    employeeTools: { listEmployeeTools, paging },\n    employees: { selectedEmployeeData, selectedEmployeeId },\n    employeeToolsFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployeeTools.length > 0) {\n    listEmployeeTools.map((item, index) => {\n      listEmployeeTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployeeTools(selectedEmployeeId, page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeToolsActions.setPagingEmployeeTools(paging));\n    getListEmployeeTools(selectedEmployeeId, nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListEmployeeTools(selectedEmployeeId, page, limit, val);\n  };\n\n  const handlePressGeneratePdf = () => {\n    const dataPrinted = {\n      selectedEmployeeData,\n      listEmployeeTools,\n    };\n    generateEmployeeToolsReport(dataPrinted, employeeToolsFormValues);\n  };\n\n  return (\n    <EmployeeToolsComponent\n      headers={headers}\n      listEmployeeTools={listEmployeeTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedEmployeeData={selectedEmployeeData}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  employeeTools: state.employeeTools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployeeTools: (employeeId, page, limit, keyword) =>\n    EmployeeToolsActions.getEmployeeToolsRequested(\n      employeeId,\n      page,\n      limit,\n      keyword\n    ),\n  handlePressAddNew: async () => {\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData({}));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(\"\"));\n    dispatch(EmployeeToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    EmployeeToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(EmployeeToolsActions.setFormStatus(\"edit\"));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(record.id));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await EmployeeToolsActions.mapDetailEmployeeToolsToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(\n      EmployeeToolsActions.setSelectedEmployeeToolsId(unitFieldsId)\n    );\n    EmployeeToolsActions.deleteEmployeeToolsRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsContainer);\n\nexport default reduxForm({\n  form: \"employeeToolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, enumUnits }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect showSearch data={enumUnits} name=\"unit\" label=\"Unit\" />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionUnitModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumUnits,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumUnits={enumUnits}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionUnitModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionUnitForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\nimport DivisionUnitModalComponent from \"../../Component/DivisionUnit/DivisionUnitModalComponent\";\n\nconst DivisionUnitModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    divisionUnit: { formStatus, selectedDivisionUnitData },\n    units: { listUnits },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectUnits = enumSelectGenerator(listUnits, \"unit\");\n\n  return (\n    <DivisionUnitModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedDivisionUnitData={selectedDivisionUnitData}\n      enumUnits={SelectUnits}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    DivisionUnitActions.saveDivisionUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionUnitForm\",\n  validate: validateDivisionUnitForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/DivisionUnit/DivisionUnitModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionUnitComponent = (props) => {\n  const {\n    headers,\n    listDivisionUnit,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedDivisionData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Divisi : ${selectedDivisionData.title}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"division\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listDivisionUnit}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionUnitComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport DivisionUnitComponent from \"../../Component/DivisionUnit/DivisionUnitComponent\";\n\nconst DivisionUnitContainer = (props) => {\n  const {\n    getListDivisionUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    divisionUnit: { listDivisionUnit, paging },\n    division: { selectedDivisionData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivisionUnit.length > 0) {\n    listDivisionUnit.map((item, index) => {\n      listDivisionUnit[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"unit_name\",\n      key: \"unit_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.unit_name.length - b.unit_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"20%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivisionUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionUnitActions.setPagingDivisionUnit(paging));\n    getListDivisionUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivisionUnit(page, limit, val);\n  };\n\n  return (\n    <DivisionUnitComponent\n      headers={headers}\n      listDivisionUnit={listDivisionUnit}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedDivisionData={selectedDivisionData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivisionUnit: (page, limit, keyword) =>\n    DivisionUnitActions.getDivisionUnitListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData({}));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(\"\"));\n    dispatch(DivisionUnitActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionUnitActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionUnitActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(record.id));\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionUnitActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (divisionUnitId) => {\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(divisionUnitId));\n    DivisionUnitActions.deleteUnitFieldRequested(divisionUnitId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitContainer);\n\nexport default reduxForm({\n  form: \"divisionUnitForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  Image,\n} from \"@react-pdf/renderer\";\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#E4E4E4\",\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n});\n\nconst DetailServiceReportComponent = () => {\n  return (\n    <PDFViewer style={{ flex: 1 }}>\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>Section #1</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n          <View style={styles.section}>\n            <Image\n              style={{\n                width: 300,\n                height: 100,\n              }}\n              src=\"https://cors-anywhere.herokuapp.com/https://drive.google.com/file/d/1hwrQUgM6CvBwxIZUu1fRASxKQr0FxfsM/view\"\n            />\n          </View>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nexport default DetailServiceReportComponent;\n","import React from \"react\";\nimport DetailServiceReportComponent from \"../Components/DetailServiceReportComponent\";\n\nconst DetailServiceReportContainer = () => {\n  return <DetailServiceReportComponent />;\n};\n\nexport default DetailServiceReportContainer;\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumCustomer,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumCustomer ?? []}\n              name=\"customer\"\n              label=\"Pilih Customer\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"serialNumber\"\n              label=\"Serial Number\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              typeComponent=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ModalUnitSerialNumberComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumCustomer,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumCustomer={enumCustomer}\n        />\n      }\n    />\n  );\n};\n\nexport default ModalUnitSerialNumberComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormUnitModel, validateUnitSerialNumberForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport ModalUnitSerialNumberComponent from \"../../Component/UnitSerialNumber/ModalUnitSerialNumberComponent\";\n\nconst ModalUnitSerialNumber = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    customers: { listCustomersDropdown },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <ModalUnitSerialNumberComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedUnitsData={selectedUnitsData}\n      enumCustomer={SelectCustomerData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  customers: state.customers,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitSerialNumberActions.saveUnitSerialNumberRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModalUnitSerialNumber);\n\nexport default reduxForm({\n  form: \"editUnitSerialNumberForm\",\n  validate: validateUnitSerialNumberForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport ModalUnitSerialNumberContainer from \"../../Container/UnitSerialNumber/ModalUnitSerialNumberContainer\";\n\nconst { Search } = Input;\n\nconst UnitSerialNumberComponent = (props) => {\n  const {\n    headers,\n    listUnitSerialNumber,\n    listCustomer,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitModelsData,\n    onChangeCustomer,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <h6 class=\"ml-1 card-title\">{`Unit Serial Number : ${selectedUnitModelsData.name}`}</h6>\n                  <p class=\"card-description ml-1\">\n                    Silahkan pilih customer untuk menampilkan data serial number\n                  </p>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-1 mb-3\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit-models\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Serial Number\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-7\">\n                    <CSelect\n                      showSearch\n                      data={listCustomer}\n                      name=\"customer\"\n                      label=\"Pilih Customer\"\n                      onChange={(customer) => {\n                        onChangeCustomer(customer);\n                      }}\n                    />\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      name=\"keyword\"\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitSerialNumber}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ModalUnitSerialNumberContainer />\n    </div>\n  );\n};\n\nexport default UnitSerialNumberComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport * as CustomerActions from \"../../../Customers/Store/CustomersActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitSerialNumberComponent from \"../../Component/UnitSerialNumber/UnitSerialNumberComponent\";\n\nconst UnitSerialNumberContainer = (props) => {\n  const {\n    getUnitSerialNumber,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitSerialNumber: {\n      listUnitSerialNumber,\n      paging,\n      selectedtUnitSerialNumber,\n    },\n    unitModels: { selectedUnitModelsData },\n    customers: { listCustomersDropdown },\n    unitSerialNumberFormValues,\n  } = props;\n\n  const { dispatch } = store;\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitSerialNumber.length > 0) {\n    listUnitSerialNumber.map((item, index) => {\n      listUnitSerialNumber[index] = {\n        ...item,\n        no: getIndex(page, limit)[index],\n      };\n    });\n  }\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Serial Number\",\n      dataIndex: \"serial_number\",\n      key: \"serial_number\",\n      width: \"30%\",\n      sorter: (a, b) => a.serial_number.length - b.serial_number.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    // getUnitSerialNumber(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitSerialNumberActions.setPagingUnitModel(paging));\n    getUnitSerialNumber(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\n  };\n\n  const handleOnchangeCustomer = (customer) => {\n    if (!customer) {\n      dispatch(UnitSerialNumberActions.setUnitSerialNumberData([]));\n      return;\n    }\n\n    const splitCustomerId = customer.split(\"|\");\n    UnitSerialNumberActions.getUnitSerialNumber(\n      page,\n      limit,\n      \"\",\n      splitCustomerId[0]\n    );\n  };\n\n  return (\n    <UnitSerialNumberComponent\n      headers={headers}\n      listUnitSerialNumber={listUnitSerialNumber}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      listCustomer={SelectCustomerData}\n      selectedUnitModelsData={selectedUnitModelsData}\n      selectedtUnitSerialNumber={selectedtUnitSerialNumber}\n      onChangeCustomer={handleOnchangeCustomer}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitSerialNumber: state.unitSerialNumber,\n  unitModels: state.unitModels,\n  customers: state.customers,\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getUnitSerialNumber: (page, limit, keyword) =>\n    UnitSerialNumberActions.getUnitSerialNumber(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberData({}));\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberId(\"\"));\n    dispatch(UnitSerialNumberActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitSerialNumberActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitSerialNumberActions.setFormStatus(\"edit\"));\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(record.id)\n    );\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberData(record)\n    );\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitSerialNumberActions.mapDetailUnitSerialNumberToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(unitModelId)\n    );\n    UnitSerialNumberActions.deleteUnitModelRequested(unitModelId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitSerialNumberContainer);\n\nexport default reduxForm({\n  form: \"unitSerialNumberForm\",\n})(EnhanceContainer);\n","import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { navigate } from \"../../../app/Helpers\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst UnitJobFormsComponent = (props) => {\r\n  const {\r\n    headers,\r\n    listUnitJobForms,\r\n    renderActionTable,\r\n    onSearch,\r\n    selectedUnitsData,\r\n  } = props;\r\n\r\n  return (\r\n    <div class=\"page-content\">\r\n      <div class=\"mt-5\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 grid-margin stretch-card\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <div class=\"mb-2\">\r\n                  <h6 class=\"ml-1 card-title\">{`Unit : ${selectedUnitsData.name}`}</h6>\r\n                  {/* <p class=\"card-description ml-1\">\r\n                    Silahkan pilih customer untuk menampilkan data \r\n                  </p> */}\r\n                </div>\r\n                <div class=\"row d-flex justify-content-between mb-2\">\r\n                  <div class=\"col-md-7\">\r\n                    <div class=\"row ml-1 mb-3\">\r\n                      <CButtonAntd\r\n                        onClick={() => navigate(\"unit\")}\r\n                        type=\"primary\"\r\n                        icon={<ArrowLeftOutlined />}\r\n                        size=\"middle\"\r\n                        danger\r\n                      >\r\n                        Kembali\r\n                      </CButtonAntd>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4 mt-4\">\r\n                    <Search\r\n                      name=\"keyword\"\r\n                      placeholder=\"Cari\"\r\n                      onSearch={onSearch}\r\n                      enterButton\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <CTableAntd data={listUnitJobForms} headers={headers} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitJobFormsComponent;\r\n","import { Space } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFormValues, reduxForm } from \"redux-form\";\r\nimport * as UnitJobFormsActions from \"../../Units/Store/UnitJobFormActions\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport UnitJobFormsComponent from \"../Component/UnitJobFormsComponent\";\r\n\r\nconst UnitJobFormsContainer = (props) => {\r\n  const {\r\n    units: { selectedUnitsData },\r\n    unitJobForms: { listUnitJobForms },\r\n    handlePressEdit,\r\n    handlePressDelete,\r\n  } = props;\r\n\r\n  const { dispatch } = store;\r\n  //   const { page, limit, totalPage } = paging;\r\n\r\n  if (listUnitJobForms.length > 0) {\r\n    listUnitJobForms.map((item, index) => {\r\n      listUnitJobForms[index] = {\r\n        ...item,\r\n        no: index + 1,\r\n      };\r\n    });\r\n  }\r\n\r\n  const headers = [\r\n    {\r\n      title: \"No\",\r\n      dataIndex: \"no\",\r\n      key: \"no\",\r\n      width: \"7%\",\r\n      sorter: (a, b) => a.no - b.no,\r\n    },\r\n    {\r\n      title: \"Job Form\",\r\n      dataIndex: \"job_form_name\",\r\n      key: \"job_form_name\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\r\n    },\r\n    {\r\n      title: \"Deskripsi\",\r\n      dataIndex: \"descriptions\",\r\n      key: \"descriptions\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    UnitJobFormsActions.getUnitJobFormsListDataRequested(\"\");\r\n    // getUnitSerialNumber(page, limit);\r\n  }, []);\r\n\r\n  const onSearch = (keyword) => {\r\n    // UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\r\n  };\r\n\r\n  return (\r\n    <UnitJobFormsComponent\r\n      headers={headers}\r\n      selectedUnitsData={selectedUnitsData}\r\n      listUnitJobForms={listUnitJobForms}\r\n      onSearch={onSearch}\r\n      // {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  units: state.units,\r\n  unitJobForms: state.unitJobForms,\r\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UnitJobFormsContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"unitJobForms\",\r\n})(EnhanceContainer);\r\n","import \"react-toastify/dist/ReactToastify.css\";\n\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer } from \"react-toastify\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport TemplateContainer from \"../modules/Template/Container/TemplateContainer\";\nimport withTemplate from \"./withTemplate\";\n\n// Pages\nimport DashboardContainer from \"../modules/Dashboard/Container/DashboardContainer\";\nimport LoginContainer from \"../modules/Auth/Container/LoginContainer\";\nimport InternalServiceContainer from \"../modules/InternalService/Container/InternalServiceContainer\";\nimport ExternalServiceContainer from \"../modules/ExternalService/Container/ExternalServiceContainer\";\nimport MonitoringEmployeeContainer from \"../modules/MonitoringEmployee/Container/MonitoringEmployeeContainer\";\nimport ReportServiceRepairContainer from \"../modules/ReportServiceRepair/Container/ReportServiceRepairContainer\";\nimport ReportEmployeeContainer from \"../modules/ReportEmployee/Container/ReportEmployeeContainer\";\nimport ListServicesContainer from \"../modules/ListServices/Container/ListServicesContainer\";\nimport AdminContainer from \"../modules/Admin/Container/AdminContainer\";\nimport NotFoundPage from \"../components/NotFound/NotFound\";\nimport AuthMiddleware from \"./AuthMiddleware\";\nimport DetailServiceTransactionContainer from \"../modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer\";\nimport RolesContainer from \"../modules/Roles/Container/RolesContainer\";\nimport EmployeesListContainer from \"../modules/Employees/Container/EmployeesListContainer\";\nimport EmployeeEditContainer from \"../modules/Employees/Container/EmployeeEditContainer\";\nimport BranchContainer from \"../modules/Branch/Container/BranchContainer\";\nimport JobFormsContainer from \"../modules/JobForms/Container/JobFormsContainer\";\nimport FormWizardIdentificationContainer from \"../modules/Identification/Container/Wizard/FormWizardIdentificationContainer\";\nimport ListIdentificationContainer from \"../modules/Identification/Container/ListIdentificationContainer\";\nimport MachineConfigurationContainer from \"../modules/MachineConfiguration/Container/MachineConfigurationContainer\";\nimport UnitsContainer from \"../modules/Units/Container/UnitsContainer\";\nimport CustomerContainer from \"../modules/Customers/Container/CustomerContainer\";\nimport ToolsContainer from \"../modules/Tools/Container/ToolsContainer\";\nimport FormCategoryContainer from \"../modules/FormCategory/Container/FormCategoryContainer\";\nimport UnitModelsContainer from \"../modules/Units/Container/UnitModelsContainer\";\nimport UnitFieldsContainer from \"../modules/Units/Container/UnitFields/UnitFieldsContainer\";\nimport ReportIdentificationContainer from \"../modules/ReportIdentification/Container/ReportIdentificationContainer\";\nimport DivisionContainer from \"../modules/Division/Container/DivisionContainer\";\nimport EmployeeToolsContainer from \"../modules/Employees/Container/EmployeeTools/EmployeeToolsContainer\";\nimport DivisionUnitContainer from \"../modules/Division/Container/DivisionUnit/DivisionUnitContainer\";\nimport DetailServiceReportContainer from \"../modules/ReportPdf/Containers/DetailServiceReportContainer\";\nimport UnitSerialNumberContainer from \"../modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer\";\nimport UnitJobFormsContainer from \"../modules/Units/Container/UnitJobFormsContainer\";\n\nexport default function Navigation() {\n  const authenticatedPage = (component, footerImg, footer) => {\n    return AuthMiddleware(\n      withTemplate(TemplateContainer, component, footerImg, footer)\n    );\n  };\n\n  const templating = (component, isLandingPage) => {\n    return withTemplate(TemplateContainer, component, isLandingPage);\n  };\n\n  const Login = templating(LoginContainer, false);\n  const NotFound = templating(NotFoundPage, false);\n  const Admin = authenticatedPage(AdminContainer, true);\n  const Roles = authenticatedPage(RolesContainer, true);\n  const JobForms = authenticatedPage(JobFormsContainer, true);\n  const Branches = authenticatedPage(BranchContainer, true);\n  const EmployeeList = authenticatedPage(EmployeesListContainer, true);\n  const EmployeeTools = authenticatedPage(EmployeeToolsContainer, true);\n  const Division = authenticatedPage(DivisionContainer, true);\n  const DivisionUnit = authenticatedPage(DivisionUnitContainer, true);\n  const EditEmployee = authenticatedPage(EmployeeEditContainer, true);\n  const Dashboard = authenticatedPage(DashboardContainer, true);\n  const Units = authenticatedPage(UnitsContainer, true);\n  const UnitModels = authenticatedPage(UnitModelsContainer, true);\n  const UnitFields = authenticatedPage(UnitFieldsContainer, true);\n  const UnitJobForms = authenticatedPage(UnitJobFormsContainer, true);\n  const UnitSerialNumber = authenticatedPage(UnitSerialNumberContainer, true);\n  const Tools = authenticatedPage(ToolsContainer, true);\n  const Customers = authenticatedPage(CustomerContainer, true);\n  const FormCategory = authenticatedPage(FormCategoryContainer, true);\n  const MachineConfiguration = authenticatedPage(\n    MachineConfigurationContainer,\n    true\n  );\n  const InternalService = authenticatedPage(InternalServiceContainer, true);\n  const ExternalService = authenticatedPage(ExternalServiceContainer, true);\n  const MonitoringEmployee = authenticatedPage(\n    MonitoringEmployeeContainer,\n    true\n  );\n  const ReportServiceRepair = authenticatedPage(\n    ReportServiceRepairContainer,\n    true\n  );\n  const ReportEmployee = authenticatedPage(ReportEmployeeContainer, true);\n  const ListServices = authenticatedPage(ListServicesContainer, true);\n  const ReportIdentification = authenticatedPage(\n    ReportIdentificationContainer,\n    true\n  );\n  const DetailService = authenticatedPage(\n    DetailServiceTransactionContainer,\n    true\n  );\n  const FormWizardIdentification = authenticatedPage(\n    FormWizardIdentificationContainer,\n    true\n  );\n  const ListIdentification = authenticatedPage(\n    ListIdentificationContainer,\n    true\n  );\n\n  return (\n    <>\n      <Helmet titleTemplate=\"PT. Rutan - \" defaultTitle=\"PT. Rutan\"></Helmet>\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates={true}\n        position=\"top-right\"\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"\n        progressBar={true}\n        closeOnToastrClick={true}\n      />\n      <ToastContainer autoClose={2000} />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n        <Route exact path=\"/auth\" component={Login} />\n        <Route exact path=\"/admin\" component={Admin} />\n        <Route exact path=\"/role\" component={Roles} />\n        <Route exact path=\"/cabang\" component={Branches} />\n        <Route exact path=\"/machine\" component={MachineConfiguration} />\n        <Route exact path=\"/jobforms\" component={JobForms} />\n        <Route exact path=\"/unit\" component={Units} />\n        <Route exact path=\"/unit-models\" component={UnitModels} />\n        <Route exact path=\"/unit-fields\" component={UnitFields} />\n        <Route exact path=\"/unit-job-forms\" component={UnitJobForms} />\n        <Route exact path=\"/unit-serial-number\" component={UnitSerialNumber} />\n        <Route exact path=\"/tools\" component={Tools} />\n        <Route exact path=\"/customer\" component={Customers} />\n        <Route exact path=\"/category\" component={FormCategory} />\n        <Route exact path=\"/employees\" component={EmployeeList} />\n        <Route exact path=\"/division\" component={Division} />\n        <Route exact path=\"/division-unit\" component={DivisionUnit} />\n        <Route exact path=\"/edit-employee\" component={EditEmployee} />\n        <Route exact path=\"/internal-service\" component={InternalService} />\n        <Route exact path=\"/external-service\" component={ExternalService} />\n        <Route exact path=\"/employee-tools\" component={EmployeeTools} />\n        <Route\n          exact\n          path=\"/report-transaction\"\n          component={DetailServiceReportContainer}\n        />\n        <Route\n          exact\n          path=\"/monitoring-employee\"\n          component={MonitoringEmployee}\n        />\n        <Route exact path=\"/report_trans\" component={ReportServiceRepair} />\n        <Route exact path=\"/list_service\" component={ListServices} />\n        <Route exact path=\"/detail-services\" component={DetailService} />\n        <Route exact path=\"/report_employee\" component={ReportEmployee} />\n        <Route\n          exact\n          path=\"/report_identification\"\n          component={ReportIdentification}\n        />\n        <Route\n          exact\n          path=\"/form-identification\"\n          component={FormWizardIdentification}\n        />\n        <Route exact path=\"/identification\" component={ListIdentification} />\n        <Route path={\"*\"} component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n","import \"react-redux-toastr/lib/css/react-redux-toastr.min.css\";\nimport \"antd/dist/antd.css\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport history from \"./app/History\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./app/ConfigureStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Navigation from \"./app/Navigation\";\n\nfunction App({ context }) {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ConnectedRouter history={history}>\n          <Navigation />\n        </ConnectedRouter>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}