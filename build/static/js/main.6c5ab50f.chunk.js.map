{"version":3,"sources":["app/History.js","app/Saga/AppSaga.js","app/Saga/SagaMiddleware.js","app/axios/ConfigAxios.js","app/axios/Invoke.js","modules/App/Store/ComponentAction.js","app/Helpers.js","modules/Auth/Store/AuthAction.js","modules/Auth/Store/AuthReducer.js","modules/Roles/Store/RolesActions.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionAction.js","modules/ListServices/Store/ListServicesActions.js","modules/ListServices/Store/ListServicesReducer.js","modules/App/Store/ComponentReducer.js","modules/Customers/Store/CustomersActions.js","modules/Customers/Store/CustomersReducer.js","modules/Admin/Store/AdminActions.js","modules/Admin/Store/AdminReducer.js","modules/Roles/Store/RolesReducer.js","modules/MasterData/Store/MasterDataActions.js","modules/Employees/Store/EmployeesActions.js","modules/Employees/Store/EmployeesReducer.js","modules/Employees/Store/EmployeeTools/EmployeeToolsActions.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReducer.js","modules/MasterData/Store/MasterDataReducer.js","modules/Units/Store/UnitsActions.js","modules/Units/Store/UnitsReducer.js","modules/JobForms/Store/JobFormsActions.js","modules/JobForms/Store/JobFormsReducer.js","modules/Branch/Store/BranchActions.js","modules/Branch/Store/BranchReducer.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer.js","modules/Units/Store/UnitModelActions.js","modules/Units/Store/UnitModelReducer.js","modules/ExternalService/Store/ExternalServiceActions.js","modules/ExternalService/Store/ExternalServiceReducer.js","modules/Identification/Store/IdentificationActions.js","modules/Identification/Store/IdentificationReducer.js","modules/MachineConfiguration/Store/MachineConfigurationActions.js","modules/MachineConfiguration/Store/MachineConfigurationReducer.js","modules/Tools/Store/ToolsActions.js","modules/Tools/Store/ToolsReducer.js","modules/FormCategory/Store/FormCategoryActions.js","modules/FormCategory/Store/FormCategoryReducer.js","modules/Units/Store/UnitFieldsActions.js","modules/Units/Store/UnitFieldsReducer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeActions.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReducer.js","modules/ReportServiceRepair/Store/ReportServiceRepairActions.js","modules/ReportServiceRepair/Store/ReportServiceRepairReducer.js","modules/ReportEmployee/Store/ReportEmployeeActions.js","modules/ReportEmployee/Store/ReportEmployeeReducer.js","modules/Division/Store/DivisionActions.js","modules/Division/Store/DivisionReducer.js","modules/Division/Store/DivisionUnitActions.js","modules/Division/Store/DivisionUnitReducer.js","modules/Dashboard/Store/DashboardActions.js","modules/Dashboard/Store/DashboardReducer.js","modules/Units/Store/UnitSerialNumberActions.js","modules/Units/Store/UnitSerialNumberReducer.js","modules/Units/Store/UnitJobFormActions.js","modules/Units/Store/UnitJobFormsReducer.js","modules/WorkingHours/Store/WorkingHoursActions.js","modules/WorkingHours/Store/WorkingHoursReducer.js","app/RootReducers.js","app/ConfigureStore.js","app/FormHelpers.js","components/CGlobalOverlay/CGlobalOverlay.tsx","components/Sidebar/Sidebar.js","components/Footer/Footer.js","components/Navbar/Navbar.js","modules/Template/Component/TemplateComponent.js","modules/Auth/Selector/AuthSelector.js","modules/App/Selector/AppSelector.js","modules/Template/Container/TemplateContainer.js","app/withTemplate.js","components/CButton/CButtonAntd.tsx","modules/Dashboard/Component/DashboardComponent.js","app/InitializeApp.js","modules/Dashboard/Container/DashboardContainer.js","components/CInput/CInput.tsx","modules/Auth/Component/LoginComponent.js","app/validateForm.js","modules/Auth/Container/LoginContainer.js","components/CSelect/CSelect.js","components/CDatePicker/CDatePicker.js","components/CButton/CButton.tsx","modules/InternalService/Component/InternalServiceComponent.js","modules/InternalService/Store/InternalServiceActions.js","modules/InternalService/Container/InternalServiceContainer.js","modules/ExternalService/Component/ExternalServiceComponent.js","modules/ExternalService/Container/ExternalServiceContainer.js","modules/MonitoringEmployee/Component/MonitoringEmployeeComponent.js","modules/MonitoringEmployee/Container/MonitoringEmployeeContainer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReport.js","modules/ReportServiceRepair/Component/ReportServiceRepairComponent.js","modules/ReportServiceRepair/Container/ReportServiceRepairContainer.js","modules/ReportEmployee/Component/ReportEmployeeComponent.js","modules/ReportEmployee/Container/ReportEmployeeContainer.js","modules/ListServices/Component/ListServicesComponent.js","modules/ListServices/Container/ListServicesContainer.js","components/CTable/CTableAntd.js","components/CModal/CModal.tsx","modules/Admin/Component/AdminModalComponent.js","modules/Admin/Container/AdminModalContainer.js","modules/Admin/Component/AdminComponent.js","modules/Admin/Container/AdminContainer.js","components/NotFound/NotFound.js","app/AuthMiddleware.js","components/CBadgeText/CBadgeText.tsx","modules/DetailServiceTransaction/Component/AddEmployeeModalComponent.js","modules/DetailServiceTransaction/Container/AddEmployeeModalContainer.js","property/colors.js","modules/DetailServiceTransaction/Component/RejectedModalComponent.js","modules/DetailServiceTransaction/Container/RejectedModalContainer.js","modules/DetailServiceTransaction/Component/EditModalTransactionComponent.js","modules/DetailServiceTransaction/Container/EditModalTransactionContainer.js","modules/DetailServiceTransaction/Component/EditModalDailiesComponent.js","modules/DetailServiceTransaction/Container/EditModalDailiesContainer.js","modules/DetailServiceTransaction/Component/InsertImageModalComponent.js","modules/DetailServiceTransaction/Container/InsertImageModalContainer.js","modules/DetailServiceTransaction/Component/EditModalSummaryComponent.js","modules/DetailServiceTransaction/Container/EditModalSummaryContainer.js","modules/DetailServiceTransaction/Component/DetailServiceTransactionComponent.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelEmployeeComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelEmployeeContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelSummaryComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelSummaryContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelImagesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelImagesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelDailiesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelDailiesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelHistoriesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelHistoriesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelRejectionsComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelRejectionsContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelChecklistComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelChecklistContainer.js","modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer.js","modules/Roles/Component/RolesEditModalComponent.js","modules/Roles/Container/RolesEditModalContainer.js","modules/Roles/Component/RolesComponent.js","modules/Roles/Container/RolesContainer.js","modules/Employees/Component/EmployeesListComponent.js","modules/Employees/Container/EmployeesListContainer.js","modules/Employees/Component/EmployeeEditComponent.js","modules/Employees/Container/EmployeeEditContainer.js","modules/Branch/Component/BranchModalComponent.js","modules/Branch/Container/BranchModalContainer.js","modules/Branch/Component/BranchComponent.js","modules/Branch/Container/BranchContainer.js","modules/JobForms/Component/JobFormsModalComponent.js","modules/JobForms/Container/JobFormsModalContainer.js","modules/JobForms/Component/JobFormsComponent.js","modules/JobForms/Container/JobFormsContainer.js","modules/Identification/Component/Wizard/ContentStepOneComponent.js","modules/Identification/Component/Wizard/ContentUnitComponent.js","modules/Identification/Component/Wizard/ContentSparePartComponent.js","modules/Identification/Component/Wizard/FormWizardIdentificationComponent.js","modules/Identification/Component/Wizard/ContentMachineConfigurationComponent.js","modules/Identification/Component/Wizard/ContentStepOneRegularComponent.js","modules/Identification/Container/Wizard/FormWizardIdentificationContainer.js","modules/Identification/Component/IdentificationModalComponent.js","modules/Identification/Container/IdentificationModalContainer.js","modules/Identification/Component/ListIdentificationComponent.js","modules/Identification/Container/ListIdentificationContainer.js","modules/MachineConfiguration/Component/MachineConfigurationModalComponent.js","modules/MachineConfiguration/Container/MachineConfigurationModalContainer.js","modules/MachineConfiguration/Component/MachineConfigurationComponent.js","modules/MachineConfiguration/Container/MachineConfigurationContainer.js","modules/Units/Component/UnitsModalComponent.js","modules/Units/Container/UnitsModalContainer.js","modules/Units/Component/UnitsComponent.js","modules/Units/Container/UnitsContainer.js","modules/Customers/Component/CustomerModalComponent.js","modules/Customers/Container/CustomerModalContainer.js","modules/Customers/Component/CustomerComponent.js","modules/Customers/Container/CustomerContainer.js","modules/Tools/Component/ToolsModalComponent.js","modules/Tools/Container/ToolsModalContainer.js","modules/Tools/Component/ToolsComponent.js","modules/Tools/Container/ToolsContainer.js","modules/FormCategory/Component/FormCategoryModalComponent.js","modules/FormCategory/Container/FormCategoryModalContainer.js","modules/FormCategory/Component/FormCategoryComponent.js","modules/FormCategory/Container/FormCategoryContainer.js","modules/Units/Component/UnitsModelsModalComponent.js","modules/Units/Container/UnitModelsModalContainer.js","modules/Units/Component/UnitModelsComponent.js","modules/Units/Container/UnitModelsContainer.js","modules/Units/Component/UnitFields/UnitFieldsModalComponent.js","modules/Units/Container/UnitFields/UnitFieldsModalContainer.js","modules/Units/Component/UnitFields/UnitFieldsComponent.js","modules/Units/Container/UnitFields/UnitFieldsContainer.js","modules/ReportIdentification/Store/ReportIdentificationActions.js","modules/ReportIdentification/Component/ReportIdentificationComponent.js","modules/ReportIdentification/Container/ReportIdentificationContainer.js","modules/Division/Component/DivisionModalComponent.js","modules/Division/Container/DivisionModalContainer.js","modules/Division/Component/DivisionComponent.js","modules/Division/Container/DivisionContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsModalComponent.js","modules/Employees/Container/EmployeeTools/EmployeeToolsModalContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsComponent.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReport.js","modules/Employees/Container/EmployeeTools/EmployeeToolsContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitModalComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitModalContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitContainer.js","modules/ReportPdf/Components/DetailServiceReportComponent.js","modules/ReportPdf/Containers/DetailServiceReportContainer.js","modules/Units/Component/UnitSerialNumber/ModalUnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/ModalUnitSerialNumberContainer.js","modules/Units/Component/UnitSerialNumber/UnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer.js","modules/Units/Component/UnitJobFormsComponent.js","modules/Units/Container/UnitJobFormsContainer.js","modules/WorkingHours/Component/WorkingHoursComponent.js","modules/WorkingHours/Container/WorkingHoursContainer.js","modules/WorkingHours/Store/WorkingHoursReport.js","app/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["history","createBrowserHistory","basename","handleErrorProcess","handleErrorAction","action","errorData","response","undefined","toastrConfirmOptions","onOk","window","location","reload","okText","disableCancel","toastr","confirm","error","responseStatus","status","console","log","data","ErrorCode","toastMessage","class","id","MessageKey","dataErr","Data","Failures","ErrorKey","Message","toast","takeEvery","all","fork","ConfigAxios","axios","create","baseURL","process","headers","Accept","timeout","defaults","delete","interceptors","request","use","requestFulfilled","method","Promise","resolve","requestRejected","_","isEmpty","reject","responseFulfilled","responseRejected","warning","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Invoke","headersConfigDelete","submitLogin","post","submitLoginEmployee","getListServices","page","limit","keyword","type","employeeId","get","deleteJobServiceById","jobId","getOneServices","getListAdmin","getAdminById","adminId","addAdmin","updateAdmin","put","deleteAdminById","getListAdminRoles","getAdminRolesById","customerId","addAdminRoles","updateAdminRoles","deleteAdminRolesById","getEmployeeRoles","getEmployeeTools","addEmployeeRole","deleteEmployeeRole","getCustomerList","branchId","getCustomerById","addCustomer","updateCustomer","deleteCustomerById","getEmployeeList","roleId","divisionId","getEmployeeById","addEmployee","updateEmployee","deleteEmployeeById","getListEmployeeTools","getEmployeeToolsById","addEmployeeTools","updateEmployeeTools","deleteEmployeeToolsById","employeeToolsId","getListRole","getRoleById","addRole","updateRole","deleteRoleById","getProvinceList","getCityList","provinceId","getDashboardProgressData","addInternalService","updateJobService","setFinishedService","setApprovedService","setRejectedService","payload","getServicesEmployee","addNewEmployeeService","setStatusEmployeeService","getJobServiceSummary","unitId","getJobServiceMedia","getJobServiceDailies","updateJobServiceDailies","getChecklistData","unitModelId","getRejectedData","getJobServiceHistories","addJobServiceMedia","addJobServiceDaily","updateSummary","setJobToProgress","updateChecklist","getUnitList","addUnit","updateUnit","deleteUnitById","getListUnitModel","addUnitSerialNumber","updateUnitSerialNumber","unitSerialNumberId","deleteUnitSerialNumber","getUnitSerialNumber","addUnitModel","updateUnitModel","deleteUnitModelById","getListUnitFields","getListUnitJobForms","jobFormId","addUnitFields","updateUnitFields","deleteUnitFieldsById","unitfieldsId","getListJobForm","keyowrd","addJobForms","updateJobForms","deleteJobForms","jobFormsId","getListBranch","deleteBranchById","addBranch","updateBranch","getListMenu","addMenuRole","getMenuByRoleId","deleteMenuByMenuRoleId","menuRoleId","getListEngine","addEngine","updateEngine","deleteEngine","machineId","getListTools","addTool","updateTool","deleteTool","toolId","getFormCategory","addFormCategory","updateFormCategory","deleteFormCategory","categoryFormId","getIdentificationList","addIdentification","updateIdentificationMilling","updateIdentificationRegular","deleteIdentificationById","identificationId","getDivisionList","addDivision","updateDivision","deleteDivision","getDivisionUnitList","addDivisionUnit","getReportMonitoringEmployee","from","until","getReportServiceRepair","getReportEmployee","getWorkingHours","getTransactionPdfUrl","downloadPdfFromUrl","url","responseType","PROCESS_GLOBAL_LOADING","PROCESS_FORM_GLOBAL_LOADING","SHOW_GLOBAL_MODAL","RESET_ALL_LOADING","setGlobalLoading","setGlobalModal","setGlobalFormLoading","resetAllGlobalLoadingProcess","dispatch","store","navigate","path","push","getIndex","currentpage","pageNumbers","startIndex","endIndex","i","getBase64","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","SelectLocation","value","label","SelectType","SelectInstanceType","SelectStatus","SelectStatusServices","SelectStatusMilling","SelectInstanceTypeRegular","SelectMilling","enumTypeInternalServices","enumTypeExternalServices","enumWarranty","enumTypeActivities","warrantyMonths","toString","getProvinceEnum","SelectProvince","map","item","index","name","getCitiesEnum","SelectCities","enumSelectGenerator","enumName","SelectEnum","getUnitModelEnum","SelectUnitModel","getMachineConf","SelectMachines","replace","toLowerCase","getStatus","statusItem","toUpperCase","color","getStatusWorkingHours","categoryServices","categoryMonitoringServices","enumTypeMonitoringEmployee","isBlockedRoleDetailService","role","isBlocked","isBlockedRoleCustomerView","SET_ACCESS_TOKEN_DATA","SET_USER_DETAIL_DATA","SET_ERROR_LOGIN","setUserDetail","setErrorLogin","appendItem","a","accessToken","handleSubmitLogin","values","username","password","then","setTimeout","catch","onRejected","dataResponseRejected","initialState","userDetail","avatar","SET_LIST_ROLES","SET_SELECTED_ROLE_ID","SET_SELECTED_ROLE_DETAIL","SET_FORM_STATUS","RESET_STATE","SET_SELECTED_ROLE_MENU","setSelectedRoleId","setFormStatus","setSelectedRoleDetail","setSelectedRoleMenu","showToast","success","getListRolesRequested","mapDetailRoleToForm","getState","roles","selectedRoleDetail","change","description","getMenuByRolesId","subItem","menu_id","resetForm","doAddRoleProcess","menuSelected","splitDescription","split","length","replaceAll","ComponentActions","doDeleteMenuRoleProcess","menuId","menuListApi","filter","x","menu","doAddMenuRoleProcess","role_id","view","insert","update","doSaveMenuRole","newMenuSelected","currentMenuSelected","selectedRoleMenu","selectedRoleId","newMenu","doEditRoleProcess","doDeleteRoleProcess","deleteRoleRequested","cancelText","saveRoleRequested","SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA","SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA","SET_GROUPING_SUMMARY_DATA","SET_SINGLE_SUMMARY_DATA","SET_GROUPING_CHECKLIST_DATA","SET_SELECTED_SERVICES_SUMMARY_DATA","SET_SELECTED_SERVICES_MEDIA_DATA","SET_SELECTED_SERVICES_DAILIES_DATA","SET_SELECTED_SERVICES_HISTORIES_DATA","SET_SELECTED_SERVICES_CHECKLIST_DATA","SET_SELECTED_SERVICES_REJECTED_DATA","SET_EDIT_TRANSACTION_MODAL","SET_REJECTIONS_MODAL","SET_EDIT_DAILIES_MODAL","SET_SELECTED_EDIT_DAILIES_DATA","SET_SELECTED_UNIT","RESET_DETAIL_SERVICE","SET_INSERT_MEDIA_MODAL","SET_TYPE_FORM_DAILIES","SET_EDIT_SUMMARY_MODAL","setRejectionsModal","setEditTransactionModal","setGroupingSelectedServicesMediaData","setGroupingSummaryData","setSingleSummaryData","setGroupingChecklistData","setEditDailiesModal","setEditSummaryModal","setInsertMediaModal","setSelectedServicesEmployeeListData","setSelectedServiceDailiesData","setSelectedServiceHistoriesData","setSelectedEditDailiesData","setTypeFormDailies","getJobServiceEmployeeList","serviceEmployeeList","results","subIitem","active","employee_service_id","employee_id","employee","logs","getJobServiceRejections","handleAddNewEmployeeService","setStatusEmployee","employeeServiceId","isActive","doRejectServiceProcess","reason","doEditServiceProcess","warranty","warrantyYears","start","moment","startDate","format","due","dueDate","job_perform","jobPerform","warranty_month","warranty_year","setSelectedJobService","units","unit_models","handlePressEditRequested","handlePressRejectedRequested","doEditDailiesProcess","dataService","services","selectedJobService","typeForm","detailService","typeFormDailies","insertPayload","splitActivity","activityType","timeStart","timeStartEnd","timeEnd","dailyStart","dailyEnd","endDate","title","daily_start","daily_end","doEditSummaryProcess","summary","is_external","getUnitSummary","res","resetModalSummary","doAddSummaryProcess","handlePressEditDailiesRequested","handlePressEditSummaryRequested","doInsertMedia","splitUnit","unit","base64","imageUrl","media","getUnitMedia","handlePressInsertMediaRequested","mapDetailTransactionToForm","end","mapDailiesToForm","selectedEditDailies","mulai","selesai","deskripsi","downloadTransactionPdf","dataTransactionPdf","downloadUrl","pdf","fileDownload","filename","resetFormModalImage","groupingSummaryList","singleSummary","sequence","setDispatch","dataSummary","err","unitName","unit_name","groupingMediaList","dataMedia","imageList","image","SET_LIST_SERVICES","SET_SELECTED_JOB_SERVICE","SET_PAGING_LIST_SERVICE","SET_SELECTED_JOB_SERVICE_ID","SET_DASHBOARD_LIST_SERVICES","setListServices","setPagingListService","setSelectedJobServiceId","getListServicesRequested","paging","totalPage","getTopTenService","handleSearch","filterValues","splitTypeService","typeService","splitStatusService","statusService","handlePressEdit","doDeleteJobServiceProcess","deleteJobServiceRequested","handlePressActionsRequested","doCallActionProcess","listServices","dashboardListServices","selectedJobServiceId","isLoadingGlobal","isLoadingFormGlobal","isModalVisible","SET_CUSTOMER_LIST_DATA","SET_PAGING_CUSTOMER","SET_SELECTED_CUSTOMER_DATA","SET_SELECTED_CUSTOMER_ID","SET_CUSTOMER_LIST_DATA_DROPDOWN","setCustomerListData","setCustomerListDataDropdown","setPagingCustomer","setSelectedCustomerData","setSelectedCustomerId","getCustomerListDataByPaging","isDropdownData","doDeleteCustomerProcess","branch","doAddCustomerProcess","customers","province","cityId","city","branch_id","province_id","city_id","phone","work_hour","workHour","pic","pic_phone","picPhone","address","doEditBranchProcess","saveCustomerRequested","mapDetailCustomerToForm","selectedCustomerData","province_name","city_name","branch_name","deleteCustomerRequested","listCustomers","listCustomersDropdown","formStatus","selectedCustomerId","SET_LIST_ADMIN","SET_PAGING_ADMIN","SET_SELECTED_ADMIN_ID","SET_SELECTED_ADMIN_DATA","setListAdmin","setPagingAdmin","setSelectedAdminId","setSelectedAdminData","getListAdminRequested","doAddAdminProcess","admins","fullname","doEditAdminProcess","doDeleteAdminProcess","saveAdminRequested","mapDetailAdminToForm","selectedAdminData","deleteAdminRequested","listAdmin","selectedAdminId","listRoles","SET_PROVINCE_LIST_DATA","SET_CITY_LIST_DATA","SET_MENU_LIST_DATA","setCityListData","loadProvinceListData","loadCityListData","loadMenuListData","SET_EMPLOYEE_LIST_DATA","SET_SELECTED_EMPLOYEE_ID","SET_SELECTED_EMPLOYEE_DATA","SET_SELECTED_ROLE_EMPLOYEE","SET_PAGING_EMPLOYEES","SET_EMPLOYEE_LIST_DROPDOWN","SET_IS_EMPLOYEE_DATA_LOADED","setEmployeeListData","setISEmployeeDataLoaded","setSelectedEmployeeId","setSelectedEmployeeData","setSelectedRoleEmployee","setPagingEmployees","loadEmployeeListData","loadEmployeeDataDropdown","getEmployeeDataByIdRequested","getRolesByEmployeeId","setAutoPopulateEmployee","selectedEmployeeData","employees","listBranch","defaultBranch","MasterDataActions","doAddEmployeeProcess","selectedRoles","nik","photo","doEditEmployeeProcess","roleSelected","doSaveEmployeeRole","doAddEmployeeRoleProcess","newRoleId","doDeleteAllEmployeeRoleProcess","roleListApi","doDeleteEmployeeProcess","newRoleSelected","currentRoleSelected","selectedRoleEmployee","selectedEmployeeId","saveEmployeeRequested","mapDetailEmployeeToForm","deleteEmployeeRequested","splitRole","splitBranch","splitDivision","division","listEmployees","isEmployeeDataLoaded","listEmployeeDropdown","SET_EMPLOYEE_TOOL_LIST_DATA","SET_SELECTED_EMPLOYEE_TOOLS_ID","SET_SELECTED_EMPLOYEE_TOOLS_DATA","SET_PAGING_EMPLOYEE_TOOLS","setEmployeeToolsListData","setSelectedEmployeeToolsId","setSelectedEmployeeToolsData","setPagingEmployeeTools","getEmployeeToolsRequested","doAddEmployeeToolsProcess","slpitToolsId","tools","tool_id","doEditEmployeeToolsProcess","splitTools","doDeleteEmployeeToolsProcess","employeeTools","saveEmployeeToolsRequested","mapDetailEmployeeToolsToForm","selectedEmployeeToolsData","deleteEmployeeToolsRequested","listEmployeeTools","selectedEmployeeToolsId","listProvince","listCity","listMenu","SET_UNIT_LIST_DATA","SET_SELECTED_UNIT_ID","SET_SELECTED_UNIT_DATA","SET_PAGING_UNIT","setUnitListData","setPagingUnit","setSelectedUnitId","setSelectedUnitData","doDeleteUnitProcess","getUnitListDataRequested","doAddUnitProcess","doEditUnitProcess","mapDetailUnitToForm","selectedUnitsData","saveUnitRequested","deleteUnitRequested","listUnits","selectedUnitsId","SET_JOB_FORMS_LIST_DATA","SET_SELECTED_JOB_FORMS_ID","SET_SELECTED_JOB_FORMS_DATA","SET_PAGING_JOB_FORM","setJobFormsListData","setPagingJobForm","setSelectedJobFormsId","setSelectedJobFormsData","doDeleteBranchProcess","jobForms","getJobFormsListDataRequested","doAddJobFormsProcess","doEditJobFormsProcess","mapDetailJobFormsToForm","selectedJobFormsData","saveJobFormsRequested","deleteJobFormsRequested","listJobForms","selectedJobFormsId","SET_BRANCH_LIST_DATA","SET_SELECTED_BRANCH_ID","SET_SELECTED_BRANCH_DATA","SET_PAGING_BRANCH","SET_BRANCH_LIST_DATA_DROPDOWN","setBranchListData","setBranchListDataDropdown","setPagingBranch","setSelectedBranchId","setSelectedBranchData","getBranchListDataRequested","doAddBranchProcess","mapDetailBranchToForm","selectedBranchData","isDropdown","saveBranchRequested","deleteBranchRequested","listBranchDropdown","selectedBranchId","selectedServiceEmployeeList","selectedServiceSummary","selectedServiceMedia","groupingSelectedServiceMedia","groupingSelectedServiceSummary","singleSelectedServiceSummary","groupingSelectedServiceChecklist","selectedServiceDailies","selectedServiceHistories","selectedServiceChecklist","selectedServiceRejected","rejectionsModal","editTransactionModal","editDailiesModal","editSummaryModal","insertMediaModal","selectedUnit","SET_UNIT_MODEL_LIST_DATA","SET_SELECTED_UNIT_MODEL_ID","SET_SELECTED_UNIT_MODEL_DATA","SET_PAGING_UNIT_MODEL","setUnitModelListData","setPagingUnitModel","setSelectedUnitModelId","setSelectedUnitModelData","getUnitModelListDataRequested","doAddUnitModelsProcess","unitModels","unit_id","descriptions","serial_number","serialNumber","machine_no","machineNo","engine_model","engineModel","engine_no","engineNo","chasis_no","chasisNo","transmission_no","transmissionNo","doEditUnitModelsProcess","doDeleteUnitModelsProcess","saveUnitModelsRequested","deleteUnitModelRequested","mapDetailUnitModelToForm","selectedUnitModelsData","listUnitModels","selectedUnitModelsId","SET_ENUM_UNIT_MODEL","getEmployeeByIdFromReducer","tempData","getProvinceByIdFromReducer","masters","setAutoPopulateUnitModel","fieldIndex","indexEmployee","employeeData","provinceData","cityData","filteredCity","citySelected","setAutoPopulateCustomer","customersData","handleSubmitForm","splitCustomerId","customer","splitTypeId","splitWarranty","splitEmployeeId","unitList","splitUnitModel","unit_model_id","customer_id","job_form_id","uuidv4","identification_id","customerLocation","functionThatReturnPromise","reset","promise","pending","enumUnitModel","SET_IDENTIFICATIONN_LIST_DATA","SET_SELECTED_IDENTIFICATION_ID","SET_PAGING_IDENTIFICATION","SET_SELECTED_IDENTIFICATION_DATA","setIdentificationListData","setSelectedIdentificationId","setSelectedIdentificationData","getIdentificationListRequested","branches","identificationList","newIdentificationList","doDeleteIdentificationProcess","identification","doAddIdentificationProcess","splitCustomer","splitLocation","splitMilling","milling","splitType","doUpdateIdentificationMilling","isLastStep","selectedIdentificationId","splitInstanceType","instanceType","splitMillingStatus","millingStatus","splitCity","splitProvince","engineConfs","engine_confs","list","engine_conf_id","instance_type","instance_name","instanceName","customerName","ktp_npwp","milling_capacity","millingCapacity","milling_work_capacity_perday","millingWorkCapacityPerDay","rice_trademark","riceTrademark","history_service_place","history_service_type","notes","note","spare_part_needs","spare_part_changing_histories","spare_part_selling_histories","doUpdateIdentificationRegular","isFinished","instance_address","instanceAddress","address_district","address_city","address_province","address_subdistrict","kelurahan","address_postal_code","postalCode","instancePhoneNumber","product_name","productName","buy_date","assistance_date","machine_number","gearbox_number","production_unit_year","work_hour_per_day","hour_meter","saveIdentificationRequested","isMilling","selectedIdentificationData","deleteIdentificationRequested","listIdentification","SET_MACHINE_LIST_DATA","SET_SELECTED_MACHINE_ID","SET_SELECTED_MACHINE_DATA","SET_PAGING_MACHINE_CONF","setMachineListData","setPagingMachineConf","setSelectedMachineId","setSelectedMachineData","doDeleteMachineProcess","getMachineListDataRequested","doAddMachineProcess","doEditMachineProcess","mapDetailMachineToForm","machineConfiguration","selectedMachineData","saveMachineRequested","deleteMachineRequested","listMachine","selectedMachineId","SET_TOOLS_LIST_DATA","SET_SELECTED_TOOLS_ID","SET_SELECTED_TOOLS_DATA","SET_PAGING_TOOLS","setToolsListData","setPagingTools","setSelectedToolsId","setSelectedToolsData","doDeleteToolsProcess","toolsId","getToolsListDataRequested","doAddToolsProcess","doEditToolsProcess","mapDetailToolsToForm","selectedToolsData","saveToolsRequested","deleteToolsRequested","listTools","selectedToolsId","SET_FORM_CATEGORY_LIST_DATA","SET_SELECTED_FORM_CATEGORY_ID","SET_SELECTED_FORM_CATEGORY_DATA","SET_PAGING_FORM_CATEGORY","setFormCategoryListData","setPagingFormCategory","setSelectedFormCategoryId","setSelectedFormCategoryData","doDeleteFormCategoryProcess","getFormCatgeoryListDataRequested","doAddFormCategoryProcess","doEditFormCategoryProcess","mapDetailCategoryToForm","formCategory","selectedFormCategoryData","saveFormCategoryRequested","deleteFormCategoryRequested","formCategoryId","listFormCategory","selectedFormCategoryId","SET_UNIT_FIELDS_LIST_DATA","SET_SELECTED_UNIT_FIELDS_ID","SET_SELECTED_UNIT_FIELDS_DATA","SET_PAGING_UNIT_FIELDS","setUnitFieldsListData","setPagingUnitFields","setSelectedUnitFieldsId","setSelectedUnitFieldsData","getUnitFieldsListDataRequested","doAddUnitFieldsProcess","unitFields","splitCategoryFormId","splitjobFormId","jobForm","fieldName","category_form_id","doEditUnitFieldsProcess","doDeleteUnitFieldsProcess","unitFieldId","saveUnitFieldsRequested","deleteUnitFieldRequested","mapDetailUnitFieldToForm","selectedUnitFieldsData","job_form_name","category_form_name","listUnitFields","selectedUnitFieldsId","SET_MONITORING_EMPLOYEE_LIST_DATA","SET_PAGING_MONITORING_EMPLOYEE","setMonitoringEmployeeListData","setPagingMonitoringEmployee","getMonitoringEmployeeListDataRequested","monitoringEmployee","newListMonitoringEmployee","itemData","indexData","created_date","date","isBlock","auth","specificBranch","listMonitoringEmployee","SET_SERVICE_REPAIR_LIST_DATA","SET_PAGING_SERVICE_REPAIR","setServiceRepairListData","setPagingServiceRepair","getServiceRepairListDataRequested","serviceRepair","newListServiceRepair","listServiceRepair","SET_REPORT_EMPLOYEE_LIST_DATA","SET_PAGING_REPORT_EMPLOYEE","setReportEmployeeListData","setPagingReportEmployee","getReportEmployeeDataRequested","reportEmployee","newReportEmployee","listReportEmployee","SET_DIVISION_LIST_DATA","SET_SELECTED_DIVISION_ID","SET_SELECTED_DIVISION_DATA","SET_PAGING_DIVISION","setDivisionListData","setPagingDivision","setSelectedDivisionId","setSelectedDivisionData","doDeleteDivisionProcess","getDivisionListDataRequested","doAddDivisionProcess","headDivision","doEditDivisionProcess","mapDetailDivisionToForm","selectedDivisionData","employee_name","saveDivisionRequested","deleteDivisionRequested","listDivision","selectedDivisionId","SET_DIVISION_UNIT_LIST_DATA","SET_SELECTED_DIVISION_UNIT_ID","SET_SELECTED_DIVISION_UNIT_DATA","SET_PAGING_DIVISION_UNIT","setDivisionUnitListData","setPagingDivisionUnit","setSelectedDivisonUnitId","setSelectedDivisionUnitData","getDivisionUnitListRequested","doAddDivisionUnitProcess","divisionUnit","splitUnitId","division_id","doEditDivisionUnitProcess","saveDivisionUnitRequested","listDivisionUnit","selectedDivisionUnitId","selectedDivisionUnitData","SET_DASHBOARD_DATA","dashboardData","SET_UNIT_SERIAL_NUMBER_DATA","SET_SELECTED_UNIT_SERIAL_NUMBER_ID","SET_SELECTED_UNIT_SERIAL_NUMBER_DATA","setUnitSerialNumberData","setSelectedUnitSerialNumberId","setSelectedUnitSerialNumberData","doAddUnitSerialNumberProcess","doEditUnitSerialNumberProcess","unitSerialNumber","selectedUnitSerialNumberId","serialNumberId","saveUnitSerialNumberRequested","mapDetailUnitSerialNumberToForm","selectedUnitSerialNumberData","customer_name","listUnitSerialNumber","SET_UNIT_JOB_FORMS_LIST_DATA","SET_PAGING_UNIT_JOB_FORMS","setUnitJobFormsListData","getUnitJobFormsListDataRequested","listUnitJobForms","SET_WORKING_HOURS_LIST_DATA","setWorkingHoursListData","getWorkingHoursListDataRequested","workingHours","newListWorkingHours","created","done","done_date","listWorkingHours","rootReducer","rootReducers","combineReducers","router","connectRouter","state","newState","Object","assign","externalService","unitJobForms","component","dashboard","form","formReducer","toastrReducer","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","createStore","applyMiddleware","routerMiddleware","persistor","persistStore","run","Saga","Component","props","Overlay","styled","div","CGlobalOverlay","loading","height","width","radius","margin","Sidebar","mainMenu","masterDataMenu","reportMenu","serviceRepairMenu","reportDataMenu","href","to","icon","Footer","Date","getFullYear","Navbar","onLogout","placeholder","size","src","alt","onClick","withRouter","children","isGlobalLoading","isLandingPage","logout","Fragment","className","selectorAuth","selectorComponent","mapStateToProps","createStructuredSelector","createSelector","withConnect","connect","authActions","React","useState","setRole","useEffect","menus","style","marginRight","getIconName","withTemplate","Template","WrappedComponent","hoistNonReactStatics","CButtonAntd","isLoading","disabled","shape","danger","backgroundColor","alignSelf","borderColor","block","DashboardComponent","totalCustomer","totalInternalService","totalExternalService","totalIdentification","bordered","columns","dataSource","pagination","pageSizeOptions","showSizeChanger","scroll","y","initializeApp","AdminActions","RoleActions","BranchActions","UnitsActions","MachineConfigurationActions","ListServiceActions","handlePressDelete","jobServiceId","setisBlocked","no","isBlockedRole","checkBlockedRole","keys","toLocaleString","dataIndex","align","sorter","b","no_service","render","items","isExternal","borderRadius","textAlign","unit_model_name","text","record","EditOutlined","fixed","CInput","typeComponent","htmlFor","whiteSpace","linebreak","maxLength","rows","onChange","onKeyDown","input","meta","touched","fontSize","labelSize","LoginComponent","handleSubmit","submitForm","onSubmit","Field","validateFormRoles","errors","validateFormUnitModel","validateFormTransaction","EnhanceContainer","valid","AuthActions","reduxForm","validate","FormItem","Form","Item","Option","Select","ASelect","hasFeedback","rest","hasError","invalid","validateStatus","help","CSelect","showSearch","onBlur","e","preventDefault","RenderDatePicker","defaultValue","CDatePicker","CButton","InternalServiceComponent","listEmployee","enumType","handleAutoPopulateEmployee","handleAutoPopulateCustomer","InfoCircleTwoTone","FieldArray","fields","PlusOutlined","itemEmployee","DeleteOutlined","remove","getCityByIdFromReducer","user","arrVal","InternalServiceActions","ComponentAction","CustomerActions","EmployeeActions","SelectCustomerData","SelectEmployeeData","initialValues","ExternalServiceComponent","listUnit","enumJobForms","handleAutoPopulateUnitModel","externalValues","onChangeUnitModel","handleChangeType","isTroubleShoot","itemUnit","indexUnit","val","selector","formValueSelector","formValues","getFormValues","ExternalServiceActions","enumModel","enumUnit","selectedUnitModel","unitQty","setUnitQty","unitData","setUnitData","setIsTroubleShoot","SelectUnit","SelectJobFormsData","JobFormsActions","totalUnit","handleAddNewUnit","handleSubtractUnit","MonitoringEmployeeComponent","onSearch","enumBranch","enumTypeReport","handlePressGeneratePdf","orientation","FilePdfOutlined","SearchOutlined","monitoringEmployeeFormValues","getListMonitoringEmployee","MonitoringEmployeeActions","handlePressAddNew","setIsLoading","setIsBlockedRole","selectBranch","setSelectBranch","printedData","jd_date","employee_nik","jobType","job_type","models","SelectBranch","blocked","selectedBranch","includes","onChangePagination","nextPage","pageSize","hasOwnProperty","monitoringEmployeeList","job_status","createdDate","doc","jsPDF","setFontSize","setFont","drawCell","dataCell","didParseCell","s","cell","styles","lineColor","lineWidth","font","headTable","content","rowSpan","halign","colSpan","fillColor","autoTable","startY","body","theme","head","headStyles","valign","overflow","columnWidth","header","dataKey","willDrawCell","columnStyles","tableLineColor","tableLineWidth","save","exportMonitoringEmployeePdf","ReportServiceRepairComponent","serviceRepairFormValues","getListServiceRepair","ReportServiceRepairActions","setSuccessLoaded","BookOutlined","successLoadedListBranch","ReportEmployeeComponent","reportEmployeeFormValues","ReportEmployeeActions","technition","Search","Input","ListServiceComponent","enumStatus","total","current","enterButton","listServiceFormValues","getListEmployeesDropdown","renderActionTable","isBlockedRoleListService","ListServicesComponent","CTableAntd","renderActions","searchText","searchedColumn","searchInput","useRef","sortDirections","filterIcon","filtered","onFilter","onFilterDropdownVisibleChange","visible","select","highlightStyle","padding","searchWords","autoEscape","textToHighlight","CModal","footer","destroyOnClose","onCancel","RenderFooter","handleSaveForm","RenderContent","formName","AdminModalComponent","handleCancel","enumMenu","AdminComponent","NotFound","AuthMiddleware","ComposedComponent","menuPath","isSecureRoute","isAuthenticated","userRole","userMenus","redirect","redirectToServices","CBadgeText","enumEmployee","AddEmployeeModalComponent","SelectEmployee","DetailServiceTransactionAction","Themes","RejectedModalComponent","DetailServiceTransactionActions","reson","handleClose","CloseOutlined","CheckOutlined","SelectRole","defaultValuesMenu","onChangeRoleMenu","Group","span","typeComponents","EditModalTransactionComponent","menuChecked","handleClearModalContent","SelectMenu","handleChangeTimePicker","marginBottom","RangePicker","EditModalDailiesComponent","editDailiesFormValues","setTimeDailiesForm","time","beforeUpload","handleChange","uploadButton","isImageLoaded","marginLeft","marginTop","listType","showUploadList","resizeMode","heigh","alignItems","justifyContent","opacity","InsertImageModalComponent","defaultImage","handleUploadPhoto","setLoading","setImageUrl","LoadingOutlined","file","isJpgOrPng","isLt2M","info","originFileObj","setIsImageLoaded","handleKeyDown","EditModalSummaryComponent","Text","Typography","TabPane","Tabs","DetailServiceTransactionComponent","isNotBlockedRole","isBlockedRoleActionButton","TabPanel","onChangeTab","goBack","handlePressActions","handleSetOnProgress","RenderButtonAction","button","CheckCircleOutlined","CloseCircleOutlined","ArrowLeftOutlined","StarOutlined","model","strong","customer_pic_name","defaultActiveKey","tab","EditModalTransactionContainer","Meta","Card","RenderDescription","handlePressNonactive","handlePressActive","TabPanelEmployeeComponent","cover","RenderItemSummary","indexText","TabPanelSummaryComponent","summaryArr","isLoaded","FileOutlined","PlusCircleOutlined","gutter","fontWeight","textTransform","plain","selectedService","setSummaryArr","summaryMapping","summaryText","splitSummary","RenderImage","medias","hoverable","TabPanelImagesComponent","handlePressAdd","CameraOutlined","RenderDailies","dailies","karyawan","jam","hours","TabPanelDailiesComponent","handlePressCancel","RenderHistories","histories","user_name","TabPanelHistoriesComponent","TabPanelHistoriesContainer","rejections","TabPanelRejectionsComponent","TabPanelRejectionsContainer","alignContent","TabPanelChecklistComponent","checklistArr","handleChangeRadio","getDefaultValueCheckbox","handleSubmitUpdateChecklist","checklist","itemChecklist","indexChecklist","borderBottom","itemFields","indexFields","field_name","unit_field_id","TabPanelChecklistContainer","setIsBlocked","countHitApi","itemParent","is_check","is_adjust","is_repair","is_replace","checklistTemp","valueCheck","target","field","DetailServiceActions","setMediaList","setSummaryList","setChecklist","isLoadedChecklist","setIsLoadedChecklist","setNotIsBlockedRole","setIsBlockedRoleActionButton","isCompleteLoadedMedia","setIsCompleteLoadedMedia","isCompleteLoadedSummary","setIsCompleteLoadedSummary","FileImageOutlined","FileTextOutlined","UsergroupAddOutlined","CloseSquareOutlined","HistoryOutlined","fromIndex","indexOf","element","splice","callInitialize","EmployeesActions","groupingUnitMedia","groupingUnitSummary","groupingUnitChecklist","isCompleted","groupingChecklist","dataChecklist","isNotBlocked","isNotBlockedRolePrintForm","isBlockedRoleButtonAction","activeTab","RolesEditModalComponent","RolesActions","setMenuSelected","RolesComponent","getListRoles","EmployeeListComponent","enumRoles","enumDivision","employeeFormValues","employeesFormValues","getListEmployees","ToolsActions","p1","p2","p3","handlePressEmployeeTools","SelectRoles","getRolesEnum","SelectDivision","EmployeesListComponent","SettingOutlined","defaultValues","onChangeRoleEmployee","EmployeeEditComponent","enumRole","enumProvince","enumCity","onChangeProvince","onBackAction","getDetailEmployee","handleClearSelectedEmployeeRole","listCityState","setListCityState","setRoleSelected","setDefaultImage","SelectEmployeeRole","provinceMapping","detailEmployee","BranchModalComponent","BranchComponent","JobFormsModalComponent","JobFormsComponent","getListJobForms","ContentStepOneComponent","provinces","cities","enumInstanceType","enumStatusMilling","ContentUnitComponent","ContentSparePartComponent","onChangeServiced","isServiced","RenderSparePartSelling","RenderSparePartNeeded","_props","StepsContent","StepsAction","Step","Steps","FormWizardIdentificationComponent","steps","saveFormChanges","setCurrent","ContentMachineConfigurationComponent","machineConf","onAddMachineConf","RenderBodyHusker","ContentStepOneRegularComponent","identificationFormValues","setCities","serviced","setServiced","IdentificationActions","listCustomer","listLocation","listMilling","IdentificationModalComponent","enumCustomers","enumLocation","enumMilling","SelectCustomer","CustomersActions","ListIdentificationComponent","getListIdentification","created_at","MachineConfigurationModalComponent","MachineConfigurationComponent","getListMachine","MachineActions","UnitsModalComponent","UnitsComponent","placement","getListUnit","handlePressUnitModel","handlePressUnitFields","handlePressLink","BoxPlotOutlined","FileAddOutlined","CustomerModalComponent","CustomerComponent","customerBranchValue","getListCustomer","getListProvince","ToolsModalComponent","ToolsComponent","FormCategoryModalComponent","FormCategoryActions","FormCategoryComponent","getListFormCategory","UnitsModelsModalComponent","UnitModelActions","UnitModelsComponent","getListUnitModels","handlePressSerialNumber","FieldNumberOutlined","enumFormCategory","enumJobForm","UnitFieldsModalComponent","UnitFieldsActions","setFormCategory","setJobForm","loadOption","dataJobForm","listJobForm","SelectFormCategory","SelectJobForm","UnitFieldsComponent","unitFieldsId","setReportIdentificationListData","setPagingReportIdentification","ReportIdentificationComponent","enumHeadDivision","DivisionModalComponent","DivisionActions","SelectEmployees","DivisionComponent","getListDivision","getListEmlpoyee","handlePressDivisionUnit","enumTools","EmployeeToolsModalComponent","EmployeeToolsActions","SelectTools","EmployeeToolsComponent","generateEmployeeToolsReport","newListData","check","docCell","section","column","setLineWidth","setFillColor","circle","addPage","employeeToolsFormValues","enumUnits","DivisionUnitModalComponent","DivisionUnitActions","SelectUnits","DivisionUnitComponent","getListDivisionUnit","divisionUnitId","StyleSheet","flexDirection","flexGrow","DetailServiceReportComponent","flex","DetailServiceReportContainer","enumCustomer","ModalUnitSerialNumberComponent","UnitSerialNumberActions","UnitSerialNumberComponent","onChangeCustomer","ModalUnitSerialNumberContainer","unitSerialNumberFormValues","selectedtUnitSerialNumber","UnitJobFormsComponent","UnitJobFormsActions","WorkingHoursComponent","workingHoursFormValues","getListWorkingHours","WorkingHoursActions","total_hours","workingHoursList","employeeNik","employeeName","noService","totalHours","doneDate","exportWorkingHoursReportPdf","authenticatedPage","footerImg","TemplateContainer","templating","Login","LoginContainer","NotFoundPage","Admin","AdminContainer","Roles","RolesContainer","JobForms","JobFormsContainer","Branches","BranchContainer","EmployeeList","EmployeesListContainer","EmployeeTools","EmployeeToolsContainer","Division","DivisionContainer","DivisionUnit","DivisionUnitContainer","EditEmployee","EmployeeEditContainer","Dashboard","DashboardContainer","Units","UnitsContainer","UnitModels","UnitModelsContainer","UnitFields","UnitFieldsContainer","UnitJobForms","UnitJobFormsContainer","UnitSerialNumber","UnitSerialNumberContainer","Tools","ToolsContainer","Customers","CustomerContainer","FormCategory","FormCategoryContainer","MachineConfiguration","MachineConfigurationContainer","InternalService","InternalServiceContainer","ExternalService","ExternalServiceContainer","MonitoringEmployee","MonitoringEmployeeContainer","ReportServiceRepair","ReportServiceRepairContainer","ReportEmployee","ReportEmployeeContainer","WorkingHours","WorkingHoursContainer","ListServices","ListServicesContainer","ReportIdentification","ReportIdentificationContainer","DetailService","DetailServiceTransactionContainer","FormWizardIdentification","FormWizardIdentificationContainer","ListIdentification","ListIdentificationContainer","Helmet","titleTemplate","defaultTitle","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","closeOnToastrClick","exact","App","context","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"mMAMeA,EAJCC,YAAqB,CACnCC,SAAoC,K,yHC8BrBC,G,WAyFAC,GAzFV,SAAUD,EAAmBE,GAA7B,qFAkBL,GAfKA,EAAOC,UAAUC,eAA0CC,IAA9BH,EAAOC,UAAUC,WAC3CE,EAAuB,CAC3BC,KAAM,WACJC,OAAOC,SAASC,UAElBC,OAAQ,KACRC,eAAe,GAGjBC,SAAOC,QACL,sDACAR,IAIAJ,EAAOC,UAAUC,SAGnB,GAFMW,EAAQb,EAAOC,UAEE,OADjBa,EAFuB,OAEND,QAFM,IAENA,OAFM,EAENA,EAAOX,SAASa,QAGrCC,QAAQC,IAAI,2BACP,GAAuB,MAAnBH,EAC6B,SAAlCD,EAAMX,SAASgB,KAAKC,YACtBC,EACE,sBAAMC,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAG,yCAKzBF,EADoC,SAAlCP,EAAMX,SAASgB,KAAKC,UAEpB,sBAAME,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAG,wCAKvB,sBAAMD,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAIT,EAAMX,SAASgB,KAAKK,oBAI3C,GAAuB,MAAnBT,EACTM,EACE,sBAAMC,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAI,0BAI1B,IACQE,EADJ,UACcX,EAAMX,SAASgB,YAD7B,iBACc,EAAqBO,YADnC,iBACc,EAA2BC,SAAS,UADlD,aACc,EAAwCC,SAEtDP,EADEI,EAEA,sBAAMH,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAIE,MAKxB,sBAAMH,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAG,mBAI3B,MAAOT,GACPO,EACE,sBAAMC,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAIT,WAM1Bb,EAAOC,UAAUC,SAASgB,KAAKU,UACjCR,EACE,sBAAMC,MAAM,eAAZ,SACE,cAAC,IAAD,CAAkBC,GAAItB,EAAOC,UAAUC,SAASgB,KAAKU,aAKzDR,GACFS,IAAMhB,MAAMO,GArFT,uCAyFA,SAAUrB,IAAV,iEACL,OADK,SACC+B,YAAU,oBAAqBhC,GADhC,uC,kBCjHQ,8EACb,OADa,SACPiC,YAAI,CACRC,YAAKjC,KAFM,uC,oDCHTkC,E,OAAcC,EAAMC,OAAO,CAE/BC,QAASC,2BACTC,QAAS,CACPC,OAAQ,mBACR,eAAgB,mBAChB,8BAA+B,IAC/B,+BAAgC,kCAChC,+BAAgC,iBAElCC,QAAS,OAEXP,EAAYQ,SAASH,QAAQI,OAAS,CACpC,eAAgB,oBAQlBT,EAAYU,aAAaC,QAAQC,KAC/B,SAACC,GAaC,MAZgC,QAA5BA,EAAiBC,SACnBD,EAAiB5B,MAAO,GAWnB8B,QAAQC,QAAQH,MAEzB,SAACI,GAWC,OAVKC,IAAEC,QAAQF,GAURF,QAAQK,OAAOH,MAI1BjB,EAAYU,aAAazC,SAAS2C,KAChC,SAACS,GAUC,OAAON,QAAQC,QAAQK,MAEzB,SAACC,GAkCC,OAjCIA,EAAiBrD,UAAYqD,EAAiBrD,SAASgB,OACX,MAA1CqC,EAAiBrD,SAASgB,KAAKH,OACjCc,IAAM2B,QAAQD,EAAiBrD,SAASgB,KAAKuC,QAAS,CACpDC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU7D,IAGZ0B,IAAMhB,MAAM,mBAAoB,CAC9B6C,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU7D,KAIXgD,IAAEC,QAAQG,GAURP,QAAQK,OAAOE,MAIXtB,QC3GTgC,EAAS,GACTC,EAAsB,CAC1B5B,QAAS,CACP,eAAgB,oBAElBpB,KAAM,IAGR+C,EAAOE,YAAc,SAACjD,GACpB,OAAOe,EAAYmC,KAAK,SAAUlD,IAGpC+C,EAAOI,oBAAsB,SAACnD,GAC5B,OAAOe,EAAYmC,KAAK,UAAWlD,IAGrC+C,EAAOK,gBAAkB,SAACC,EAAMC,EAAOC,EAASC,EAAM3D,EAAQ4D,GAC5D,OAAO1C,EAAY2C,IAAZ,yBACaL,EADb,kBAC2BC,EAD3B,cACsCC,EADtC,iBACsDC,EADtD,mBACqE3D,EADrE,uBAC0F4D,KAInGV,EAAOY,qBAAuB,SAACC,GAC7B,OAAO7C,EAAYS,OAAZ,oBAAgCoC,GAASZ,IAGlDD,EAAOc,eAAiB,SAACD,GACvB,OAAO7C,EAAY2C,IAAZ,oBAA6BE,KAItCb,EAAOe,aAAe,SAACT,EAAMC,GAAyB,IAAlBC,EAAiB,uDAAP,GAC5C,OAAOxC,EAAY2C,IAAZ,uBAAgCL,EAAhC,kBAA8CC,EAA9C,cAAyDC,KAGlER,EAAOgB,aAAe,SAACC,GACrB,OAAOjD,EAAY2C,IAAZ,kBAA2BM,KAGpCjB,EAAOkB,SAAW,SAACjE,GACjB,OAAOe,EAAYmC,KAAK,UAAWlD,IAGrC+C,EAAOmB,YAAc,SAAClE,GACpB,OAAOe,EAAYoD,IAAI,UAAWnE,IAGpC+C,EAAOqB,gBAAkB,SAACJ,GACxB,OAAOjD,EAAYS,OAAZ,kBAA8BwC,GAAWhB,IAKlDD,EAAOsB,kBAAoB,SAACL,EAASX,EAAMC,GACzC,OAAOvC,EAAY2C,IAAZ,wBACYM,EADZ,iBAC4BX,EAD5B,kBAC0CC,KAInDP,EAAOuB,kBAAoB,SAACC,GAC1B,OAAOxD,EAAY2C,IAAZ,uBAAgCa,KAGzCxB,EAAOyB,cAAgB,SAACxE,GACtB,OAAOe,EAAYmC,KAAK,gBAAiBlD,IAG3C+C,EAAO0B,iBAAmB,SAACzE,GACzB,OAAOe,EAAYoD,IAAI,gBAAiBnE,IAG1C+C,EAAO2B,qBAAuB,SAACH,GAC7B,OAAOxD,EAAYS,OAAZ,uBAAmC+C,KAK5CxB,EAAO4B,iBAAmB,SAAClB,EAAYJ,EAAMC,GAC3C,OAAOvC,EAAY2C,IAAZ,2BACeD,EADf,iBACkCJ,EADlC,kBACgDC,KAKzDP,EAAO6B,iBAAmB,SAACnB,EAAYJ,EAAMC,GAC3C,OAAOvC,EAAY2C,IAAZ,2BACeD,EADf,iBACkCJ,EADlC,kBACgDC,KAIzDP,EAAO8B,gBAAkB,SAAC7E,GACxB,OAAOe,EAAYmC,KAAZ,mBAAqClD,IAG9C+C,EAAO+B,mBAAqB,SAAC1E,GAC3B,OAAOW,EAAYS,OAAZ,2BAAuCpB,GAAM4C,IAKtDD,EAAOgC,gBAAkB,SAAC1B,EAAMC,EAAOC,EAASyB,GAC9C,OAAOjE,EAAY2C,IAAZ,0BACcL,EADd,kBAC4BC,EAD5B,cACuCC,EADvC,qBAC2DyB,KAGpEjC,EAAOkC,gBAAkB,SAACV,GACxB,OAAOxD,EAAY2C,IAAZ,qBAA8Ba,KAGvCxB,EAAOmC,YAAc,SAAClF,GACpB,OAAOe,EAAYmC,KAAK,aAAclD,IAGxC+C,EAAOoC,eAAiB,SAACnF,GACvB,OAAOe,EAAYoD,IAAI,aAAcnE,IAGvC+C,EAAOqC,mBAAqB,SAACb,GAC3B,OAAOxD,EAAYS,OAAZ,qBAAiC+C,GAAcvB,IAKxDD,EAAOsC,gBAAkB,SACvBhC,EACAC,EACAC,EACA+B,EACAN,EACAO,GAEA,OAAOxE,EAAY2C,IAAZ,0BACcL,EADd,kBAC4BC,EAD5B,cACuCC,EADvC,oBAC0D+B,EAD1D,sBAC8EN,EAD9E,wBACsGO,KAI/GxC,EAAOyC,gBAAkB,SAAC/B,GACxB,OAAO1C,EAAY2C,IAAZ,qBAA8BD,KAGvCV,EAAO0C,YAAc,SAACzF,GACpB,OAAOe,EAAYmC,KAAK,aAAclD,IAGxC+C,EAAO2C,eAAiB,SAAC1F,GACvB,OAAOe,EAAYoD,IAAI,aAAcnE,IAGvC+C,EAAO4C,mBAAqB,SAAClC,GAC3B,OAAO1C,EAAYS,OAAZ,qBAAiCiC,GAAcT,IAKxDD,EAAO6C,qBAAuB,SAACnC,EAAYJ,EAAMC,GAC/C,OAAOvC,EAAY2C,IAAZ,wBACYD,EADZ,iBAC+BJ,EAD/B,kBAC6CC,KAItDP,EAAO8C,qBAAuB,SAACpC,GAC7B,OAAO1C,EAAY2C,IAAZ,0BAAmCD,KAG5CV,EAAO+C,iBAAmB,SAAC9F,GACzB,OAAOe,EAAYmC,KAAK,mBAAoBlD,IAG9C+C,EAAOgD,oBAAsB,SAAC/F,GAC5B,OAAOe,EAAYoD,IAAI,mBAAoBnE,IAG7C+C,EAAOiD,wBAA0B,SAACC,GAChC,OAAOlF,EAAYS,OAAZ,2BACeyE,GACpBjD,IAMJD,EAAOmD,YAAc,SAAC7C,EAAMC,GAC1B,OAAOvC,EAAY2C,IAAZ,sBAA+BL,EAA/B,kBAA6CC,KAEtDP,EAAOoD,YAAc,SAAC5B,GACpB,OAAOxD,EAAY2C,IAAZ,iBAA0Ba,KAGnCxB,EAAOqD,QAAU,SAACpG,GAChB,OAAOe,EAAYmC,KAAK,SAAUlD,IAGpC+C,EAAOsD,WAAa,SAACrG,GACnB,OAAOe,EAAYoD,IAAI,SAAUnE,IAGnC+C,EAAOuD,eAAiB,SAAChB,GACvB,OAAOvE,EAAYS,OAAZ,iBAA6B8D,GAAUtC,IAKhDD,EAAOwD,gBAAkB,SAAClD,EAAMC,GAC9B,OAAOvC,EAAY2C,IAAZ,0BAAmCL,EAAnC,kBAAiDC,KAK1DP,EAAOyD,YAAc,SAACnD,EAAMC,EAAOmD,GACjC,OAAO1F,EAAY2C,IAAZ,4BACgB+C,EADhB,iBACmCpD,EADnC,kBACiDC,KAM1DP,EAAO2D,yBAA2B,SAAC1G,GACjC,OAAOe,EAAY2C,IAAI,cAAe1D,IAKxC+C,EAAO4D,mBAAqB,SAAC3G,GAC3B,OAAOe,EAAYmC,KAAK,YAAalD,IAEvC+C,EAAO6D,iBAAmB,SAAC5G,GACzB,OAAOe,EAAYoD,IAAI,YAAanE,IAEtC+C,EAAO8D,mBAAqB,SAACjD,GAC3B,OAAO7C,EAAY2C,IAAZ,6BAAsCE,KAE/Cb,EAAO+D,mBAAqB,SAAClD,GAC3B,OAAO7C,EAAY2C,IAAZ,8BAAuCE,KAEhDb,EAAOgE,mBAAqB,SAACnD,EAAOoD,GAClC,OAAOjG,EAAYmC,KAAZ,6BACiBU,EADjB,qBAELoD,IAMJjE,EAAOkE,oBAAsB,SAACrD,EAAOP,EAAMC,GACzC,OAAOvC,EAAY2C,IAAZ,8BACkBE,EADlB,iBACgCP,EADhC,kBAC8CC,KAGvDP,EAAOmE,sBAAwB,SAACtD,EAAOoD,GACrC,OAAOjG,EAAYmC,KAAZ,8BAAwCU,GAASoD,IAE1DjE,EAAOoE,yBAA2B,SAACvD,EAAOoD,GACxC,OAAOjG,EAAYoD,IAAZ,8BACkBP,GACvBoD,EACAhE,IAMJD,EAAOqE,qBAAuB,SAACxD,EAAOyD,GACpC,OAAOtG,EAAY2C,IAAZ,8BACkBE,GADlB,OAC0ByD,EAAS,IAAMA,EAAS,MAG3DtE,EAAOuE,mBAAqB,SAAC1D,EAAOyD,GAClC,OAAOtG,EAAY2C,IAAZ,2BACeE,GADf,OACuByD,EAAS,IAAMA,EAAS,MAGxDtE,EAAOwE,qBAAuB,SAAC3D,EAAOyD,GACpC,OAAOtG,EAAY2C,IAAZ,4BAAqCE,EAArC,YAA8CyD,KAEvDtE,EAAOyE,wBAA0B,SAACR,GAChC,OAAOjG,EAAYoD,IAAZ,oBAAqC6C,IAE9CjE,EAAO0E,iBAAmB,SAACC,GACzB,OAAO3G,EAAY2C,IAAZ,gCAAyCgE,KAElD3E,EAAO4E,gBAAkB,SAAC/D,GACxB,OAAO7C,EAAY2C,IAAZ,6BAAsCE,KAE/Cb,EAAO6E,uBAAyB,SAAChE,EAAOP,EAAMC,EAAOC,GACnD,OAAOxC,EAAY2C,IAAZ,yBACaE,EADb,iBAC2BP,EAD3B,kBACyCC,EADzC,cACoDC,KAG7DR,EAAO8E,mBAAqB,SAACb,EAASpD,EAAOyD,GAC3C,OAAOtG,EAAYmC,KAAZ,4BACgBU,GADhB,OACwByD,EAAS,IAAMA,EAAS,IACrDL,IAGJjE,EAAO+E,mBAAqB,SAACd,EAASpD,GACpC,OAAO7C,EAAYmC,KAAZ,4BAAsCU,GAASoD,IAExDjE,EAAOgF,cAAgB,SAACf,EAASpD,EAAOyD,GACtC,OAAOtG,EAAYoD,IAAZ,8BACkBP,GADlB,OAC0ByD,EAAS,IAAMA,EAAS,IACvDL,IAGJjE,EAAOiF,iBAAmB,SAACpE,GACzB,OAAO7C,EAAY2C,IAAZ,+BAAwCE,KAEjDb,EAAOkF,gBAAkB,SAACjB,EAASK,GACjC,OAAOtG,EAAYoD,IAAZ,gCAAyCkD,GAAUL,IAM5DjE,EAAOmF,YAAc,SAAC7E,EAAMC,EAAOC,GACjC,OAAOxC,EAAY2C,IAAZ,sBAA+BL,EAA/B,kBAA6CC,EAA7C,cAAwDC,KAEjER,EAAOoF,QAAU,SAACnB,GAChB,OAAOjG,EAAYmC,KAAZ,SAA2B8D,IAEpCjE,EAAOqF,WAAa,SAACpB,GACnB,OAAOjG,EAAYoD,IAAZ,SAA0B6C,IAEnCjE,EAAOsF,eAAiB,SAAChB,GACvB,OAAOtG,EAAYS,OAAZ,gBAA4B6F,GAAUrE,IAK/CD,EAAOuF,iBAAmB,SAACjF,EAAMC,EAAO+D,EAAQ9D,GAC9C,OAAOxC,EAAY2C,IAAZ,wBACY2D,EADZ,iBAC2BhE,EAD3B,kBACyCC,EADzC,cACoDC,KAG7DR,EAAOwF,oBAAsB,SAACvB,EAASU,GACrC,OAAO3G,EAAYmC,KAAZ,wBAAkCwE,GAAeV,IAE1DjE,EAAOyF,uBAAyB,SAACxB,EAASU,EAAae,GACrD,OAAO1H,EAAYoD,IAAZ,wBACYuD,EADZ,YAC2Be,GAChCzB,IAGJjE,EAAO2F,uBAAyB,SAAChB,EAAae,GAC5C,OAAO1H,EAAYS,OAAZ,wBACYkG,EADZ,YAC2Be,GAChCzF,IAGJD,EAAO4F,oBAAsB,SAC3BtF,EACAC,EACAC,EACAmE,EACAnD,GAEA,OAAOxD,EAAY2C,IAAZ,wBACYgE,EADZ,iBACgCrE,EADhC,kBAC8CC,EAD9C,cACyDC,EADzD,uBAC+EgB,KAGxFxB,EAAO6F,aAAe,SAAC5B,GACrB,OAAOjG,EAAYmC,KAAZ,gBAAkC8D,IAE3CjE,EAAO8F,gBAAkB,SAAC7B,GACxB,OAAOjG,EAAYoD,IAAZ,gBAAiC6C,IAE1CjE,EAAO+F,oBAAsB,SAACpB,GAC5B,OAAO3G,EAAYS,OAAZ,uBAAmCkG,GAAe1E,IAK3DD,EAAOgG,kBAAoB,SAAC1F,EAAMC,EAAO+D,EAAQ9D,GAC/C,OAAOxC,EAAY2C,IAAZ,wBACY2D,EADZ,iBAC2BhE,EAD3B,kBACyCC,EADzC,cACoDC,KAG7DR,EAAOiG,oBAAsB,SAAC3B,EAAQ4B,GACpC,OAAOlI,EAAY2C,IAAZ,2BAAoC2D,EAApC,wBAA0D4B,KAEnElG,EAAOmG,cAAgB,SAAClC,GACtB,OAAOjG,EAAYmC,KAAZ,gBAAkC8D,IAE3CjE,EAAOoG,iBAAmB,SAACnC,GACzB,OAAOjG,EAAYoD,IAAZ,gBAAiC6C,IAE1CjE,EAAOqG,qBAAuB,SAACC,GAC7B,OAAOtI,EAAYS,OAAZ,uBACW6H,GAChBrG,IAMJD,EAAOuG,eAAiB,SAACjG,EAAMC,EAAOiG,GACpC,OAAOxI,EAAY2C,IAAZ,yBAAkCL,EAAlC,kBAAgDC,EAAhD,cAA2DiG,KAEpExG,EAAOyG,YAAc,SAACxC,GACpB,OAAOjG,EAAYmC,KAAZ,YAA8B8D,IAEvCjE,EAAO0G,eAAiB,SAACzC,GACvB,OAAOjG,EAAYoD,IAAZ,YAA6B6C,IAEtCjE,EAAO2G,eAAiB,SAACC,GACvB,OAAO5I,EAAYS,OAAZ,oBAAgCmI,GAAc3G,IAKvDD,EAAO6G,cAAgB,SAACvG,EAAMC,EAAOC,GACnC,OAAOxC,EAAY2C,IAAZ,yBAAkCL,EAAlC,kBAAgDC,EAAhD,cAA2DC,KAEpER,EAAO8G,iBAAmB,SAAC7E,GACzB,OAAOjE,EAAYS,OAAZ,oBAAgCwD,GAAYhC,IAErDD,EAAO+G,UAAY,SAAC9C,GAClB,OAAOjG,EAAYmC,KAAZ,YAA8B8D,IAEvCjE,EAAOgH,aAAe,SAAC/C,GACrB,OAAOjG,EAAYoD,IAAZ,YAA6B6C,IAKtCjE,EAAOiH,YAAc,SAAC3G,EAAMC,GAC1B,OAAOvC,EAAY2C,IAAZ,sBAA+BL,EAA/B,kBAA6CC,KAKtDP,EAAOkH,YAAc,SAACjD,GACpB,OAAOjG,EAAYmC,KAAZ,eAAiC8D,IAG1CjE,EAAOmH,gBAAkB,SAAC5E,GACxB,OAAOvE,EAAY2C,IAAZ,8BAAuC4B,KAGhDvC,EAAOoH,uBAAyB,SAACC,GAC/B,OAAOrJ,EAAYS,OAAZ,sBAAkC4I,GAAcpH,IAKzDD,EAAOsH,cAAgB,SAAChH,EAAMC,EAAOC,GACnC,OAAOxC,EAAY2C,IAAZ,wBAAiCL,EAAjC,kBAA+CC,EAA/C,cAA0DC,KAEnER,EAAOuH,UAAY,SAACtD,GAClB,OAAOjG,EAAYmC,KAAZ,WAA6B8D,IAEtCjE,EAAOwH,aAAe,SAACvD,GACrB,OAAOjG,EAAYoD,IAAZ,WAA4B6C,IAErCjE,EAAOyH,aAAe,SAACC,GACrB,OAAO1J,EAAYS,OAAZ,mBAA+BiJ,GAAazH,IAKrDD,EAAO2H,aAAe,SAACrH,EAAMC,EAAOC,GAClC,OAAOxC,EAAY2C,IAAZ,sBAA+BL,EAA/B,kBAA6CC,EAA7C,cAAwDC,KAEjER,EAAO4H,QAAU,SAAC3D,GAChB,OAAOjG,EAAYmC,KAAZ,SAA2B8D,IAEpCjE,EAAO6H,WAAa,SAAC5D,GACnB,OAAOjG,EAAYoD,IAAZ,SAA0B6C,IAEnCjE,EAAO8H,WAAa,SAACC,GACnB,OAAO/J,EAAYS,OAAZ,iBAA6BsJ,GAAU9H,IAKhDD,EAAOgI,gBAAkB,SAAC1H,EAAMC,EAAOC,GACrC,OAAOxC,EAAY2C,IAAZ,+BACmBL,EADnB,kBACiCC,EADjC,cAC4CC,KAGrDR,EAAOiI,gBAAkB,SAAChE,GACxB,OAAOjG,EAAYmC,KAAZ,kBAAoC8D,IAE7CjE,EAAOkI,mBAAqB,SAACjE,GAC3B,OAAOjG,EAAYoD,IAAZ,kBAAmC6C,IAE5CjE,EAAOmI,mBAAqB,SAACC,GAC3B,OAAOpK,EAAYS,OAAZ,0BACc2J,GACnBnI,IAMJD,EAAOqI,sBAAwB,SAAC/H,EAAMC,EAAOC,GAC3C,OAAOxC,EAAY2C,IAAZ,gCACoBL,EADpB,kBACkCC,EADlC,cAC6CC,KAItDR,EAAOsI,kBAAoB,SAACrE,GAC1B,OAAOjG,EAAYmC,KAAZ,mBAAqC8D,IAG9CjE,EAAOuI,4BAA8B,SAACtE,GACpC,OAAOjG,EAAYoD,IAAI,6BAA8B6C,IAGvDjE,EAAOwI,4BAA8B,SAACvE,GACpC,OAAOjG,EAAYoD,IAAI,6BAA8B6C,IAGvDjE,EAAOyI,yBAA2B,SAACC,GACjC,OAAO1K,EAAYS,OAAZ,2BACeiK,GACpBzI,IAKJD,EAAO2I,gBAAkB,SAACrI,EAAMC,EAAOC,GACrC,OAAOxC,EAAY2C,IAAZ,0BAAmCL,EAAnC,kBAAiDC,EAAjD,cAA4DC,KAErER,EAAO4I,YAAc,SAAC3E,GACpB,OAAOjG,EAAYmC,KAAZ,aAA+B8D,IAExCjE,EAAO6I,eAAiB,SAAC5E,GACvB,OAAOjG,EAAYoD,IAAZ,aAA8B6C,IAEvCjE,EAAO8I,eAAiB,SAACtG,GACvB,OAAOxE,EAAYS,OAAZ,qBAAiC+D,GAAcvC,IAIxDD,EAAO+I,oBAAsB,SAACvG,EAAYlC,EAAMC,EAAOC,GACrD,OAAOxC,EAAY2C,IAAZ,2BACe6B,EADf,iBACkClC,EADlC,kBACgDC,EADhD,cAC2DC,KAGpER,EAAOgJ,gBAAkB,SAAC/E,GACxB,OAAOjG,EAAYmC,KAAZ,mBAAqC8D,IAI9CjE,EAAOiJ,4BAA8B,SACnC3I,EACAC,EACA2I,EACAC,GAII,IAHJ1I,EAGG,uDAHI,MACPD,EAEG,uCADHyB,EACG,uCACH,OAAOjE,EAAY2C,IAAZ,kCACsBuI,EADtB,kBACoCC,EADpC,iBACkD7I,EADlD,kBACgEC,EADhE,qBACkF0B,EADlF,iBACmGxB,EADnG,cAC6GD,KAKtHR,EAAOoJ,uBAAyB,SAC9B9I,EACAC,EACA2I,EACAC,EACA3I,EACAyB,GAEA,OAAOjE,EAAY2C,IAAZ,uCAC2BuI,EAD3B,kBACyCC,EADzC,iBACuD7I,EADvD,kBACqEC,EADrE,qBACuF0B,EADvF,cACqGzB,KAK9GR,EAAOqJ,kBAAoB,SAAC/I,EAAMC,EAAO2I,EAAMC,EAAO3I,EAASyB,GAC7D,OAAOjE,EAAY2C,IAAZ,uCAC2BuI,EAD3B,kBACyCC,EADzC,iBACuD7I,EADvD,kBACqEC,EADrE,qBACuF0B,EADvF,cACqGzB,KAK9GR,EAAOsJ,gBAAkB,SAAChJ,EAAMC,EAAO2I,EAAMC,EAAO3I,GAClD,OAAOxC,EAAY2C,IAAZ,2CAC+BuI,EAD/B,oBAC+CC,EAD/C,iBAC6D7I,EAD7D,kBAC2EC,EAD3E,cACsFC,KAK/FR,EAAOuJ,qBAAuB,SAAC1I,GAC7B,OAAO7C,EAAY2C,IAAZ,8BAAuCE,KAGhDb,EAAOwJ,mBAAqB,SAACC,GAC3B,OAAOzL,EAAY2C,IAAI8I,EAAK,CAAEC,aAAc,UAG/B1J,QCnlBF2J,EAAyB,yBACzBC,EAA8B,8BAC9BC,EAAoB,oBACpBC,EAAoB,oBAEpBC,EAAmB,SAAC9F,GAC/B,MAAO,CACLxD,KAAMkJ,EACN1F,YAIS+F,EAAiB,SAAC/F,GAC7B,MAAO,CACLxD,KAAMoJ,EACN5F,YAISgG,EAAuB,SAAChG,GACnC,MAAO,CACLxD,KAAMmJ,EACN3F,YAUSiG,EAA+B,YAE1CC,EADqBC,GAAbD,UAND,CACL1J,KAAMmJ,KC3BGS,EAAW,SAACC,GACvB5O,EAAQ6O,KAAKD,GACbjO,OAAOC,SAASC,UAGLiO,EAAW,SAACC,EAAalK,GAIpC,IAHA,IAAMmK,EAAc,GACdC,EAAaF,EAAclK,EAAQA,EAAQ,EAC3CqK,EAAWD,EAAapK,EACrBsK,EAAmB,IAAfF,EAAmB,EAAIA,EAAYE,GAAKD,EAAUC,IAC7DH,EAAYH,KAAKM,GAEnB,OAAOH,GAGII,EAAY,SAACC,EAAKC,GAC7B,IAAMC,EAAS,IAAIC,WACnBD,EAAOE,iBAAiB,QAAQ,kBAAMH,EAASC,EAAOG,WACtDH,EAAOI,cAAcN,IAGVO,EAAiB,CAC5B,CACEjO,GAAG,aACHkO,MAAO,KACPC,MAAO,UAET,CACEnO,GAAG,aACHkO,MAAO,KACPC,MAAO,kBAIEC,EAAa,CACxB,CACEpO,GAAG,SACHkO,MAAO,KACPC,MAAO,WAET,CACEnO,GAAG,SACHkO,MAAO,KACPC,MAAO,MAET,CACEnO,GAAG,SACHkO,MAAO,KACPC,MAAO,aAIEE,EAAqB,CAChC,CACErO,GAAG,SACHkO,MAAO,KACPC,MAAO,gBAET,CACEnO,GAAG,SACHkO,MAAO,KACPC,MAAO,kBAIEG,EAAe,CAC1B,CACEtO,GAAG,WACHkO,MAAO,KACPC,MAAO,YAET,CACEnO,GAAG,WACHkO,MAAO,KACPC,MAAO,YAET,CACEnO,GAAG,WACHkO,MAAO,KACPC,MAAO,aAIEI,GAAuB,CAClC,CACEvO,GAAG,WACHkO,MAAO,KACPC,MAAO,YAET,CACEnO,GAAG,WACHkO,MAAO,KACPC,MAAO,aAET,CACEnO,GAAG,WACHkO,MAAO,KACPC,MAAO,YAET,CACEnO,GAAG,WACHkO,MAAO,KACPC,MAAO,aAIEK,GAAsB,CACjC,CACExO,GAAG,WACHkO,MAAO,KACPC,MAAO,WAET,CACEnO,GAAG,WACHkO,MAAO,KACPC,MAAO,YAET,CACEnO,GAAG,WACHkO,MAAO,KACPC,MAAO,oBAET,CACEnO,GAAG,WACHkO,MAAO,KACPC,MAAO,cAIEM,GAA4B,CACvC,CACEzO,GAAG,WACHkO,MAAO,KACPC,MAAO,uBAET,CACEnO,GAAG,WACHkO,MAAO,KACPC,MAAO,cAET,CACEnO,GAAG,WACHkO,MAAO,KACPC,MAAO,iBAET,CACEnO,GAAG,WACHkO,MAAO,KACPC,MAAO,UAsBEO,GAAgB,CAC3B,CACE1O,GAAG,YACHkO,MAAO,OACPC,MAAO,gBAET,CACEnO,GAAG,YACHkO,MAAO,QACPC,MAAO,qBAIEQ,GAA2B,CACtC,CAAE3O,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,UACzC,CAAEnO,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,gBACzC,CAAEnO,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,aAG9BS,GAA2B,CACtC,CAAE5O,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,UACzC,CAAEnO,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,gBACzC,CAAEnO,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,kBACzC,CAAEnO,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,YACzC,CAAEnO,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,QACzC,CAAEnO,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,iBAG9BU,GAAe,CAC1B,CAAE7O,GAAG,kBAAoBkO,OAAO,EAAMC,MAAO,YAC7C,CAAEnO,GAAG,kBAAoBkO,OAAO,EAAOC,MAAO,gBAGnCW,GAAqB,CAChC,CAAE9O,GAAG,kBAAoBkO,MAAO,aAAcC,MAAO,cACrD,CAAEnO,GAAG,kBAAoBkO,MAAO,YAAaC,MAAO,aACpD,CAAEnO,GAAG,kBAAoBkO,MAAO,YAAaC,MAAO,aACpD,CACEnO,GAAG,kBACHkO,MAAO,oBACPC,MAAO,sBAIEY,GAAiB,WAE5B,IADA,IAAMA,EAAiB,GACdvB,EAAI,EAAGA,GAAK,GAAIA,IACvBuB,EAAe7B,KAAK,CAClBlN,GAAG,uBAAD,OAAyBwN,GAC3BU,MAAOV,EAAEwB,WACTb,MAAM,GAAD,OAAKX,EAAL,YAGT,OAAOuB,GAGIE,GAAkB,SAACrP,GAC9B,IAAMsP,EAAiB,GAQvB,OAPAtP,EAAKuP,KAAI,SAACC,EAAMC,GACdH,EAAehC,KAAK,CAClBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAGTJ,GAGIK,GAAgB,SAAC3P,GAC5B,IAAM4P,EAAe,GAQrB,OAPA5P,EAAKuP,KAAI,SAACC,EAAMC,GACdG,EAAatC,KAAK,CAChBlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAGTE,GAeIC,GAAsB,SAAC7P,EAAM8P,GACxC,IAAMC,EAAa,GAQnB,OAPA/P,EAAKuP,KAAI,SAACC,EAAMC,GACdM,EAAWzC,KAAK,CACdlN,GAAG,GAAD,OAAK0P,EAAL,YAAiBL,GACnBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAGTK,GAGIC,GAAmB,SAAChQ,GAC/B,IAAMiQ,EAAkB,GAQxB,OAPAjQ,EAAKuP,KAAI,SAACC,EAAMC,GACdQ,EAAgB3C,KAAK,CACnBlN,GAAG,cAAD,OAAgBqP,GAClBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAGTO,GAGIC,GAAiB,SAAClQ,GAC7B,IAAMmQ,EAAiB,GAQvB,OAPAnQ,EAAKuP,KAAI,SAACC,EAAMC,GACdU,EAAe7C,KAAK,CAClBlN,GAAIoP,EAAKpP,GACTsP,KAAMF,EAAKE,KAAKU,QAAQ,KAAM,KAAKC,cACnC7M,KAAMgM,EAAKE,UAGRS,GAGIG,GAAY,WAAkB,IAAjBzQ,EAAgB,uDAAP,GAC7B0Q,EAAa,GACjB,OAAQ1Q,EAAO2Q,eACb,IAAK,KACHD,EAAa,CAAEjC,MAAO,WAAYmC,MAAO,WACzC,MACF,IAAK,KACHF,EAAa,CAAEjC,MAAO,YAAamC,MAAO,WAC1C,MACF,IAAK,KACHF,EAAa,CAAEjC,MAAO,WAAYmC,MAAO,WACzC,MACF,IAAK,KACHF,EAAa,CAAEjC,MAAO,WAAYmC,MAAO,QACzC,MACF,QACEF,EAAa,CAAEjC,MAAO,IAAKmC,MAAO,QAItC,OAAOF,GAGIG,GAAwB,WAAkB,IAAjB7Q,EAAgB,uDAAP,GACzC0Q,EAAa,GACjB,OAAQ1Q,EAAO2Q,eACb,IAAK,KACHD,EAAa,CAAEjC,MAAO,QAASmC,MAAO,WACtC,MACF,IAAK,KACHF,EAAa,CAAEjC,MAAO,WAAYmC,MAAO,WACzC,MACF,IAAK,KACHF,EAAa,CAAEjC,MAAO,YAAamC,MAAO,WAC1C,MACF,IAAK,KACHF,EAAa,CAAEjC,MAAO,WAAYmC,MAAO,WACzC,MACF,IAAK,KACHF,EAAa,CAAEjC,MAAO,WAAYmC,MAAO,QACzC,MACF,QACEF,EAAa,CAAEjC,MAAO,IAAKmC,MAAO,QAItC,OAAOF,GA4EII,GAAmB,CAC9B,CACEjB,KAAM,mBACN7P,OAAQ,cAEV,CACE6P,KAAM,mBACN7P,OAAQ,WAEV,CACE6P,KAAM,wBACN7P,OAAQ,YAIC+Q,GAA6B,CACxC,CACElB,KAAM,mBACN7P,OAAQ,cAEV,CACE6P,KAAM,mBACN7P,OAAQ,WAEV,CACE6P,KAAM,wBACN7P,OAAQ,WAEV,CACE6P,KAAM,OACN7P,OAAQ,UAICgR,GAA6B,CACxC,CAAEzQ,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,UACzC,CAAEnO,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,gBACzC,CAAEnO,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,kBACzC,CAAEnO,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,aACzC,CAAEnO,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,QACzC,CAAEnO,GAAG,cAAgBkO,MAAO,KAAMC,MAAO,eAyH9BuC,GAA6B,SAACC,GACzC,IAAIC,EACJ,OAAQD,GAEN,IAAK,uCAKL,IAAK,uCACHC,GAAY,EACZ,MAOF,QACEA,GAAY,EAIhB,OAAOA,GAIIC,GAA4B,SAACF,GACxC,IAAIC,EACJ,OAAQD,GACN,IAAK,uCAIL,IAAK,uCAIL,IAAK,uCACHC,GAAY,EACZ,MAEF,QACEA,GAAY,EAIhB,OAAOA,GChnBIE,GAAwB,wBACxBC,GAAuB,uBACvBC,GAAkB,kBAQlBC,GAAgB,SAACrK,GAC5B,MAAO,CACLxD,KAAM2N,GACNnK,YAGSsK,GAAgB,SAACtK,GAC5B,MAAO,CACLxD,KAAM4N,GACNpK,YAsBEuK,GAAU,uCAAG,WAAOvR,GAAP,SAAAwR,EAAA,+EACjB,IAAI1P,SAAQ,SAACC,EAASI,GAtCM,IAAC6E,EAuC3BmG,GAAMD,UAvCqBlG,EAuCGhH,EAAKA,KAAK+N,SAAS0D,YAtC5C,CACLjO,KAAM0N,GACNlK,oBAqCOhH,EAAKA,KAAK+N,SAAS0D,YAC1BtE,GAAMD,SAASmE,GAAcrR,EAAKA,KAAK+N,WACvChM,QALe,2CAAH,sDAQH2P,GAAiB,uCAAG,WAAOC,GAAP,mBAAAH,EAAA,sDACvBI,EAAuBD,EAAvBC,SAAUC,EAAaF,EAAbE,SACZ7K,EAAU,CAAE4K,WAAUC,YAE5B1E,GAAMD,SAASJ,GAAiB,IAEhC/J,EAAOE,YAAY+D,GAChB8K,MAAK,SAAC9R,GACLuR,GAAWvR,GAAM8R,MAAK,WACpBC,YAAW,WACTtT,EAAQ6O,KAAK,cACblO,OAAOC,SAASC,SAChB6N,GAAMD,SAASJ,GAAiB,MAC/B,WAGNkF,OAAM,SAACC,GAEN,GADA9E,GAAMD,SAASJ,GAAiB,IAC5BmF,EAAY,CAAC,IAAD,QACRpS,EAAM,OAAGoS,QAAH,IAAGA,GAAH,UAAGA,EAAYjT,gBAAf,iBAAG,EAAsBgB,YAAzB,aAAG,EAA4BH,OACrCqS,EAAoB,iBAAGD,QAAH,IAAGA,GAAH,UAAGA,EAAYjT,gBAAf,aAAG,EAAsBgB,YAAzB,QAAiC,KAC3D,GAAIkS,EACF,GAAe,MAAXrS,EAAgB,CAClB,IAAMF,EAAQ,CACdA,QAAe,GACfA,EAAM4C,QAAU2P,EAAqB3P,QACrC4K,GAAMD,SAASoE,GAAc3R,SACxB,GAAe,MAAXE,EAAgB,CACzB,IAAMF,EAAQ,CACdA,QAAe,GACfA,EAAM4C,QAAU2P,EAAqB3P,QACrC4K,GAAMD,SAASoE,GAAc3R,SA/BR,2CAAH,sDClDjBwS,GAAe,CAC1BV,YAAa,GACbW,WAAY,KACZC,OAAQ,KACR1S,MAAO,CACLE,QAAQ,EACR0C,QAAS,K,qBCLA+P,GAAiB,iBACjBC,GAAuB,uBACvBC,GAA2B,2BAC3BC,GAAkB,kBAClBC,GAAc,cACdC,GAAyB,yBAgBzBC,GAAoB,SAAC5L,GAChC,MAAO,CACLxD,KAAM+O,GACNvL,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAIS8L,GAAwB,SAAC9L,GACpC,MAAO,CACLxD,KAAMgP,GACNxL,YAIS+L,GAAsB,SAAC/L,GAClC,MAAO,CACLxD,KAAMmP,GACN3L,YAISgM,GAAY,SAACzQ,EAASiB,GACjC,OAAQA,GACN,IAAK,UAuBL,QACE7C,IAAMsS,QAAQ1Q,EAAS,CACrBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU7D,IAEZ,MArBF,IAAK,QACH0B,IAAMhB,MAAM4C,EAAS,CACnBC,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU7D,MAiBLiU,GAAqB,uCAAG,8BAAA1B,EAAA,sEACZzO,EAAOmD,YAAY,EAAG,KADV,gBAC3BlG,EAD2B,EAC3BA,KACRmN,GAAMD,UA5EqBlG,EA4EChH,EAAK+N,SAAS/N,KA3EnC,CACLwD,KAAM8O,GACNtL,aAuEiC,iCA1ET,IAACA,IA0EQ,OAAH,qDAKrBmM,GAAmB,uCAAG,oCAAA3B,EAAA,sDACzBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWC,MAAMC,mBAC9BpG,EAASqG,aAAO,gBAAD,eAAwBvT,EAAKI,UAA7B,QAAmC,KAClD8M,EAASqG,aAAO,gBAAD,wBAAiCvT,EAAKwT,mBAAtC,QAAqD,KAJnC,2CAAH,qDAOnBC,GAAgB,uCAAG,WAAOnO,GAAP,mBAAAkM,EAAA,sEACPzO,EAAOmH,gBAAgB5E,GADhB,gBACtBtF,EADsB,EACtBA,KACJ0T,EAAU,GACd1T,EAAK+N,SAASwB,KAAI,SAACC,EAAMC,GACvBiE,EAAQpG,KAAKkC,EAAKmE,YAEpBxG,GAAMD,SAAS6F,GAAoBW,IANL,2CAAH,sDAShBE,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,gBAAD,KAAwB,KACvCrG,EAASqG,aAAO,gBAAD,cAAiC,KAHzB,2CAAH,qDAMhBM,GAAgB,uCAAG,WAAOlC,EAAQmC,GAAf,mBAAAtC,EAAA,6DACftE,EAAaC,GAAbD,SADe,SAGf6G,EAAmBpC,EAAO6B,YAAYQ,MAAM,MAC5ChN,EAAU,IACR0I,KACNqE,EAAiBE,OAAS,EACtBtC,EAAO6B,YAAYU,WAAW,IAAK,KACnCvC,EAAO6B,YACbxM,EAAQwM,YAAc7B,EAAO6B,YATR,SAUfzQ,EAAOqD,QAAQY,GAVA,OAWrBgM,GAAU,yBAA0B,WACpCE,KACAhG,EAASiH,GAAgC,IAbpB,kDAerBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAjBqB,0DAAH,wDAqBhBqU,GAAuB,uCAAG,WAAOC,EAAQC,GAAf,mBAAA9C,EAAA,+DACf8C,EAAYC,QAAO,SAACC,GAAD,OAAOA,EAAEb,UAAYU,KADzB,oBACvBI,EADuB,cAExB1R,EAAOoH,uBAAuBsK,EAAKrU,IAFX,2CAAH,wDAKvBsU,GAAoB,uCAAG,WAAOL,EAAQ/O,GAAf,eAAAkM,EAAA,6DACrBxK,EAAU,CACd2M,QAASU,EACTM,QAASrP,EACTsP,MAAM,EACNC,QAAQ,EACRC,QAAQ,EACRtT,QAAQ,GAPiB,SASrBuB,EAAOkH,YAAYjD,GATE,2CAAH,wDAYpB+N,GAAc,uCAAG,WAAOC,GAAP,yBAAAxD,EAAA,6DACb4B,EAAajG,GAAbiG,SACF6B,EAAsB7B,IAAWC,MAAM6B,iBACvCC,EAAiB/B,IAAWC,MAAM8B,eAHnB,SAIEpS,EAAOmH,gBAAgBiL,GAJzB,mBAIbnV,EAJa,EAIbA,KACFsU,EAActU,EAAK+N,WAErBkH,EAAoBhB,OAAS,GAPZ,kCAQbgB,EAAoB1F,KAAI,SAACC,EAAMC,GACnC2E,GAAwB5E,EAAM8E,MATb,QAWnBvC,YAAW,WACTiD,EAAgBzF,KAAI,SAAC6F,EAAS3F,GAC5BiF,GAAqBU,EAASD,QAE/B,KAfgB,wBAiBnBH,EAAgBzF,KAAI,SAACC,EAAMC,GACzBiF,GAAqBlF,EAAM2F,MAlBV,4CAAH,sDAuBdE,GAAiB,uCAAG,WAAO1D,EAAQmC,GAAf,mBAAAtC,EAAA,6DAChBtE,EAAaC,GAAbD,SADgB,SAGhB6G,EAAmBpC,EAAO6B,YAAYQ,MAAM,MAC5ChN,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ0I,KACNqE,EAAiBE,OAAS,EACtBtC,EAAO6B,YAAYU,WAAW,IAAK,KACnCvC,EAAO6B,YACbxM,EAAQwM,YAAc7B,EAAO6B,YAVP,SAWhBuB,GAAejB,GAXC,wBAYhB/Q,EAAOsD,WAAWW,GAZF,QAatBgM,GAAU,yBAA0B,WACpCE,KACAhG,EAASiH,GAAgC,IAfnB,kDAiBtBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAnBsB,0DAAH,wDAuBjBuV,GAAmB,uCAAG,WAAOhQ,GAAP,SAAAkM,EAAA,+EAElBzO,EAAOuD,eAAehB,GAFJ,OAGxB0N,GAAU,wBAAyB,WACnCE,KAJwB,gDAMxBF,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAPwB,yDAAH,sDAWZwV,GAAmB,uCAAG,WAAOjQ,GAAP,eAAAkM,EAAA,sDAC3BtS,EAAuB,CAC3BC,KAAM,WACJmW,GAAoBhQ,IAEtB/F,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAX+B,2CAAH,sDAenBuW,GAAiB,uCAAG,WAAOjS,EAAMmO,EAAQmC,GAArB,eAAAtC,EAAA,sDACzBtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACFqQ,GAAiBlC,EAAQmC,GAEzBuB,GAAkB1D,EAAQmC,IAG9BvU,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAf6B,2CAAH,0D,yCC7NjBwW,GACX,2CAEWC,GACX,4CAEWC,GAA4B,4BAE5BC,GAA0B,0BAE1BC,GAA8B,8BAE9BC,GACX,qCAEWC,GACX,mCAEWC,GACX,qCAEWC,GACX,uCAEWC,GACX,uCAEWC,GACX,sCAEWC,GAA6B,6BAE7BC,GAAuB,uBAEvBC,GAAyB,yBAEzBC,GAAiC,iCAEjCC,GAAoB,oBAEpBC,GAAuB,uBAEvBC,GAAyB,yBAEzBC,GAAwB,wBAExBC,GAAyB,yBAEzBC,GAAqB,SAAC9P,GACjC,MAAO,CACLxD,KAAM8S,GACNtP,YAiBS+P,GAA0B,SAAC/P,GACtC,MAAO,CACLxD,KAAM6S,GACNrP,YAISgQ,GAAuC,SAAChQ,GACnD,MAAO,CACLxD,KAAMmS,GACN3O,YAISiQ,GAAyB,SAACjQ,GACrC,MAAO,CACLxD,KAAMoS,GACN5O,YAISkQ,GAAuB,SAAClQ,GACnC,MAAO,CACLxD,KAAMqS,GACN7O,YAISmQ,GAA2B,SAACnQ,GACvC,MAAO,CACLxD,KAAMsS,GACN9O,YAISoQ,GAAsB,SAACpQ,GAClC,MAAO,CACLxD,KAAM+S,GACNvP,YAISqQ,GAAsB,SAACrQ,GAClC,MAAO,CACLxD,KAAMqT,GACN7P,YAISsQ,GAAsB,SAACtQ,GAClC,MAAO,CACLxD,KAAMmT,GACN3P,YAISuQ,GAAsC,SAACvQ,GAClD,MAAO,CACLxD,KAAMkS,GACN1O,YAyBSwQ,GAAgC,SAACxQ,GAC5C,MAAO,CACLxD,KAAMyS,GACNjP,YAISyQ,GAAkC,SAACzQ,GAC9C,MAAO,CACLxD,KAAM0S,GACNlP,YAWS0Q,GAA6B,SAAC1Q,GACzC,MAAO,CACLxD,KAAMgT,GACNxP,YAIS2Q,GAAqB,SAAC3Q,GACjC,MAAO,CACLxD,KAAMoT,GACN5P,YAIS4Q,GAAyB,uCAAG,WAAOhU,GAAP,uBAAA4N,EAAA,6DAC/BtE,EAAaC,GAAbD,SAD+B,SAEhBnK,EAAOkE,oBAAoBrD,EAAO,EAAG,KAFrB,uBAE/B5D,EAF+B,EAE/BA,KACF6X,EAAsB7X,EAAK+N,SAAS/N,KAEpC8X,EAAUhW,QAAQjB,IACtBgX,EAAoBtI,IAApB,uCAAwB,WAAOC,EAAMC,GAAb,iBAAA+B,EAAA,6DAClBuG,EAAW,IACNC,OAASxI,EAAKwI,OACvBD,EAASE,oBAAsBzI,EAAKpP,GAHd,SAIC2C,EAAOyC,gBAAgBgK,EAAK0I,aAJ7B,cAIhBC,EAJgB,OAKtBJ,EAAQ,2BAAQA,GAAaI,EAASnY,KAAK+N,UALrB,kBAMfgK,GANe,2CAAxB,0DANqC,KAevC7K,EAfuC,KAe9BqK,GAf8B,UAeYO,EAfZ,mGAAH,sDAsCzBvQ,GAAoB,uCAAG,WAAO3D,GAAP,iCAAA4N,EAAA,6DAAcnK,EAAd,+BAAuB,GACjD6F,EAAaC,GAAbD,SAD0B,kBAGTnK,EAAOwE,qBAAqB3D,EAAOyD,GAH1B,gBAGxBrH,EAHwB,EAGxBA,KACRkN,EACEsK,GAA8BxX,EAAK+N,SAAS/N,MAAQA,EAAK+N,WAL3B,kDAQhCb,EAASsK,GAA8B,KARP,0DAAH,sDAYpB5P,GAAsB,uCAAG,WAAOhE,GAAP,iCAAA4N,EAAA,6DAAcjO,EAAd,+BAAwB,GACpD2J,EAAaC,GAAbD,SAD4B,SAEbnK,EAAO6E,uBAAuBhE,EAAO,EAAG,IAAKL,GAFhC,gBAE5BvD,EAF4B,EAE5BA,KACRkN,EAASuK,GAAgCzX,EAAK+N,SAASqK,OAHnB,2CAAH,sDAMtBC,GAAuB,uCAAG,WAAOzU,GAAP,mBAAA4N,EAAA,6DAC7BtE,EAAaC,GAAbD,SAD6B,SAEdnK,EAAO4E,gBAAgB/D,GAFT,gBAE7B5D,EAF6B,EAE7BA,KACRkN,GAhF6ClG,EAgFLhH,EAAK+N,SA/EtC,CACLvK,KAAM4S,GACNpP,aA0EmC,iCA7EO,IAACA,IA6ER,OAAH,sDAiBvBsR,GAA2B,uCAAG,WAAO1U,EAAOH,GAAd,iBAAA+N,EAAA,6DACjCtE,EAAaC,GAAbD,SADiC,SAGvCA,EAASiH,GAAkC,KACrCnN,EAAU,IACRkR,YAAczU,EACtBuD,EAAQgR,OAAS,OANsB,SAOjCjV,EAAOmE,sBAAsBtD,EAAOoD,GAPH,OAQvC+K,YAAW,WACT7E,EAASiH,GAAgC,IACzCjH,EAASiH,GAAkC,IAC3CyD,GAA0BhU,KACzB,KAZoC,kDAcvCsJ,EAASiH,GAAkC,IAdJ,0DAAH,wDAkB3BoE,GAAiB,uCAAG,WAC/B3U,EACA4U,EACA/U,EACAgV,GAJ+B,eAAAjH,EAAA,6DAMzBxK,EAAU,IACR5G,GAAKoY,EACbxR,EAAQkR,YAAczU,EACtBuD,EAAQgR,OAASS,EATc,SAUzB1V,EAAOoE,yBAAyBvD,EAAOoD,GAVd,OAW/B+K,YAAW,WACT6F,GAA0BhU,KACzB,KAb4B,2CAAH,4DAgBxB8U,GAAsB,uCAAG,WAAO9U,EAAO+N,GAAd,iBAAAH,EAAA,6DACrBtE,EAAaC,GAAbD,SADqB,UAGrBlG,EAAU,IACR2R,OAAShH,EAAOgH,OAJG,SAKrB5V,EAAOgE,mBAAmBnD,EAAOoD,GALZ,OAM3BgM,GAAU,4BAA6B,WACvC5F,EAAS,iBACTF,EAAS4J,IAAmB,IARD,kDAU3B9D,GAAU,0CAA2C,SACrD9F,EAAS4J,IAAmB,IAXD,0DAAH,wDAetB8B,GAAoB,uCAAG,WAAOjH,GAAP,+BAAAH,EAAA,6DACnBtE,EAAaC,GAAbD,SAEF2L,EAAWlH,EAAOkH,SAAS7E,MAAM,KACjC8E,EAAgBnH,EAAOmH,cAAc9E,MAAM,KAC3C7E,EAAiBwC,EAAOxC,eAAe6E,MAAM,MAE7ChN,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ+R,MAAQC,KAAOrH,EAAOsH,WAAWC,OAAO,cAChDlS,EAAQmS,IAAMH,KAAOrH,EAAOyH,SAASF,OAAO,cAC5ClS,EAAQqS,YAAc1H,EAAO2H,WAC7BtS,EAAQ6R,SAAWA,EAAS,GAC5B7R,EAAQuS,eAAR,UAAyBpK,EAAe,UAAxC,QAA8C,EAC9CnI,EAAQwS,cAAR,UAAwBV,EAAc,UAAtC,QAA4C,EAdjB,oBAiBnB/V,EAAO6D,iBAAiBI,GAjBL,eAkBzBgM,GAAU,yBAA0B,WAlBX,UAoBFjQ,EAAOc,eAAe8N,EAAOvR,IApB3B,wBAoBjBJ,EApBiB,EAoBjBA,KApBiB,UAqBnBmN,GAAMD,SACVuM,GAAsB,2BAAKzZ,EAAK+N,UAAX,IAAqB2L,MAAO/H,EAAOgI,gBAtBjC,QAwBzBzM,EAAS6J,IAAwB,IAxBR,mDA0BzB/D,GAAU,0CAA2C,SACrD9F,EAAS6J,IAAwB,IA3BR,2DAAH,sDA+Bb6C,GAAwB,uCAAG,WAAOjI,GAAP,eAAAH,EAAA,sDAChCtS,EAAuB,CAC3BC,KAAM,WACJyZ,GAAqBjH,IAEvBpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QAAQ,wCAAyCR,GATlB,2CAAH,sDAYxB2a,GAA4B,uCAAG,WAAOjW,EAAO+N,GAAd,eAAAH,EAAA,sDACpCtS,EAAuB,CAC3BC,KAAM,WACJuZ,GAAuB9U,EAAO+N,IAEhCpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,iDACAR,GAXwC,2CAAH,wDAenC4a,GAAoB,uCAAG,WAAOnI,GAAP,+CAAAH,EAAA,yDACnBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZ2G,EAAc3G,IAAW4G,SAASC,mBAClCC,EAAW9G,IAAW+G,cAAcC,gBAEpCpT,EAAU,GACVqT,EAAgB,GAChBC,EAPqB,UAOL3I,EAAO4I,aAAavG,MAAM,YAPrB,QAO6B,GAClDwG,EAAY7I,EAAO8I,aAAa,GAClCzB,KAAOrH,EAAO8I,aAAa,IAAIvB,OAAO,YACtCF,OAASE,OAAO,YACdwB,EAAU/I,EAAO8I,aAAa,GAChCzB,KAAOrH,EAAO8I,aAAa,IAAIvB,OAAO,YACtCF,OAASE,OAAO,YAEdyB,EAfqB,UAeL3B,KAAOrH,EAAOsH,WAAWC,OAC7C,cAhByB,YAiBtBsB,GAECI,EAnBqB,UAmBP5B,KAAOrH,EAAOkJ,SAAS3B,OAAO,cAnBvB,YAmBwCwB,GAEnE1T,EAAQ5G,GAAKuR,EAAOvR,GACpB4G,EAAQ8T,MAAR,UAAgBnJ,EAAOmJ,aAAvB,QAAgC,GAChC9T,EAAQ+T,YAAcJ,EACtB3T,EAAQgU,UAAYJ,EACpB5T,EAAQwM,YAAR,UAAsB7B,EAAO6B,mBAA7B,QAA4C,GAE5C6G,EAAcS,MAAd,UAAsBnJ,EAAOmJ,aAA7B,QAAsC,GACtCT,EAAcU,YAAcH,EAC5BP,EAAcW,UAAYL,EAC1BN,EAAc7G,YAAd,UAA4B7B,EAAO6B,mBAAnC,QAAkD,GAClD6G,EAAc7W,KAAd,UAAqB8W,EAAc,UAAnC,QAAyC,OA/Bd,UAkCR,QAAbJ,EAlCqB,kCAmCjBnX,EAAO+E,mBAAmBuS,EAAeN,EAAY3Z,IAnCpC,iDAqCjB2C,EAAOyE,wBAAwBR,GArCd,eAwCzBgM,GAAU,0BAA2B,WAxCZ,UAyCnBzL,GAAqBwS,EAAY3Z,IAzCd,QA0CzB8M,EAASkK,IAAoB,IA1CJ,mDA4CzBpE,GAAU,6CAA8C,SACxD9F,EAAS6J,IAAwB,IA7CR,2DAAH,sDAiDpBkE,GAAoB,uCAAG,WAAOtJ,GAAP,uBAAAH,EAAA,yDACnBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZ2G,EAAc3G,IAAW4G,SAASC,oBAElCjT,EAAU,IAERkU,QAAR,UAAkBvJ,EAAOuJ,eAAzB,QAAoC,IAEhCnB,EAAYoB,YARW,0CAUjBpY,EAAOgF,cAAcf,EAAS+S,EAAY3Z,GAAIuR,EAAOtK,QAVpC,OAWvB2L,GAAU,0BAA2B,WACrC9F,EAASmK,IAAoB,IAE7B+D,IAAe,SAACC,GACdC,QAfqB,kDAkBvBtI,GAAU,6CAA8C,SACxD9F,EAASmK,IAAoB,IAnBN,2DAuBjBtU,EAAOgF,cAAcf,EAAS+S,EAAY3Z,GAAI,MAvB7B,QAwBvB4S,GAAU,0BAA2B,WACrC9F,EAASmK,IAAoB,IAE7B+D,IAAe,SAACC,GACdC,QA5BqB,mDA+BvBtI,GAAU,6CAA8C,SACxD9F,EAASmK,IAAoB,IAhCN,kEAAH,sDAqCpBkE,GAAmB,uCAAG,WAAO5J,GAAP,uBAAAH,EAAA,6DAClBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZ2G,EAAc3G,IAAW4G,SAASC,oBAElCjT,EAAU,IAERkU,QAAR,UAAkBvJ,EAAOuJ,eAAzB,QAAoC,GANV,kBASlBnY,EAAOgF,cAAcf,EAAS+S,EAAY3Z,GAAI,MAT5B,OAUxB4S,GAAU,0BAA2B,WACrC9F,EAASmK,IAAoB,IAE7B+D,IAAe,SAACC,GACdC,QAdsB,kDAiBxBtI,GAAU,6CAA8C,SACxD9F,EAASmK,IAAoB,IAlBL,0DAAH,sDAsBZmE,GAA+B,uCAAG,WAAO7J,GAAP,eAAAH,EAAA,sDACvCtS,EAAuB,CAC3BC,KAAM,WACJ2a,GAAqBnI,IAEvBpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAX2C,2CAAH,sDAe/Buc,GAA+B,uCAAG,WAAO9J,GAAP,eAAAH,EAAA,sDACvCtS,EAAuB,CAC3BC,KAAM,WACgB,QAAhBwS,EAAOnO,KACT+X,GAAoB5J,GAEpBsJ,GAAqBtJ,IAGzBpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAf2C,2CAAH,sDAmBtCwc,GAAa,uCAAG,WAAO/J,GAAP,mCAAAH,EAAA,yDACZtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZ2G,EAAc3G,IAAW4G,SAASC,mBAExC/M,EAASiH,GAAkC,IAErCnN,EAAU,GAEV2U,EAAYhK,EAAOiK,KAAOjK,EAAOiK,KAAK5H,MAAM,KAAO,GACnD3M,EATc,UASLsU,EAAU,UATL,QASW,GAE/B3U,EAAQ8T,MAAR,UAAgBnJ,EAAOmJ,aAAvB,QAAgC,GAChC9T,EAAQwM,YAAR,UAAsB7B,EAAO6B,mBAA7B,QAA4C,GAC5CxM,EAAQxD,KAAO,QACfwD,EAAQ6U,OAAR,UAAiBlK,EAAOmK,gBAAxB,QAAoC,GAE9BC,EAAQ,CAAEA,MAAO,CAAC/U,IAhBJ,WAkBd+S,EAAYoB,YAlBE,kCAmBVpY,EAAO8E,mBAAmBkU,EAAOhC,EAAY3Z,GAAIiH,GAnBvC,iDAqBVtE,EAAO8E,mBAAmBkU,EAAOhC,EAAY3Z,IArBnC,eAuBlB4S,GAAU,0BAA2B,WAvBnB,UAwBZgJ,IAAa,SAACjO,OAxBF,QAyBlBb,EAASoK,IAAoB,IAC7BpK,EAASiH,GAAkC,IA1BzB,mDA4BlBnB,GAAU,6CAA8C,SACxD9F,EAASoK,IAAoB,IAC7BpK,EAASiH,GAAkC,IA9BzB,2DAAH,sDAkCN8H,GAA+B,uCAAG,WAAOtK,GAAP,eAAAH,EAAA,sDACvCtS,EAAuB,CAC3BC,KAAM,WACJuc,GAAc/J,IAEhBpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAX2C,2CAAH,sDAe/Bgd,GAA0B,uCAAG,4CAAA1K,EAAA,sDAChCtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAW4G,SAASC,mBACjC/M,EAASqG,aAAO,sBAAD,eAA8BvT,EAAKI,UAAnC,QAAyC,KACxD8M,EACEqG,aAAO,sBAAD,sBAAqCyF,KAAOhZ,EAAK+Y,cAAjD,QAA2D,KAEnE7L,EAASqG,aAAO,sBAAD,oBAAmCyF,KAAOhZ,EAAKmc,YAA/C,QAAuD,KACtEjP,EAASqG,aAAO,sBAAD,uBAAsCvT,EAAKqZ,mBAA3C,QAA0D,KACzEnM,EACEqG,aACE,sBADI,qBAGDvT,EAAK6Y,SAHJ,YAGgB7Y,EAAK6Y,SAAW,WAAa,iBAGrD3L,EACEqG,aACE,sBADI,qCAGDvT,EAAKuZ,eAHJ,YAGsBvZ,EAAKuZ,eAH3B,yBAGqD,MAG7DrM,EACEqG,aAAO,sBAAD,0BAAyCvT,EAAKwZ,qBAA9C,QAA+D,KAxB/B,2CAAH,qDA4B1B4C,GAAgB,uCAAG,8CAAA5K,EAAA,sDACtBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAW+G,cAAckC,oBACtCnP,EAASqG,aAAO,kBAAD,eAA0BvT,EAAKI,UAA/B,QAAqC,KACpD8M,EAASqG,aAAO,kBAAD,sBAAiCyF,KAAOhZ,EAAKsc,cAA7C,QAAuD,KACtEpP,EAASqG,aAAO,kBAAD,oBAA+ByF,KAAOhZ,EAAKuc,gBAA3C,QAAuD,KACtErP,EAASqG,aAAO,kBAAD,kBAA6BvT,EAAK8a,aAAlC,QAA2C,KAC1D5N,EAASqG,aAAO,kBAAD,wBAAmCvT,EAAKwc,iBAAxC,QAAqD,KACpEtP,EACEqG,aAAO,kBAAD,mCAAuCvT,EAAKwD,KAA5C,YAAoDxD,EAAKwD,aAAzD,QAAmE,KAE3E0J,EACEqG,aACE,kBADI,yBAGJ,CAACyF,KAAOhZ,EAAKsc,OAAQtD,KAAOhZ,EAAKuc,iBAH7B,QAG0C,KAfpB,2CAAH,qDAoBhBjB,GAAoB,WAC/B,IAAQpO,EAAaC,GAAbD,SACRA,EAASqG,aAAO,kBAAD,OAA4B,KAC3CrG,EAASqG,aAAO,kBAAD,SAA8B,KAC7CrG,EAASqG,aAAO,kBAAD,UAA+B,MAGnCkJ,GAAsB,uCAAG,0CAAAjL,EAAA,6DAC5BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZxP,EAAQwP,IAAW4G,SAASC,mBAAmB7Z,GACrD8M,EAASiH,GAAkC,IAHP,kBAMSpR,EAAOuJ,qBAChD1I,GAPgC,uBAMpB8Y,EANoB,EAM1B1c,KAGF2c,EAAcD,EAAmB3O,SAAS6O,IAAIpQ,IAAI4D,QACtDjP,2BAA8BiP,QAAQ,UAAW,IACjD,IAXgC,UAaXrN,EAAOwJ,mBAAmBoQ,GAbf,iBAa1B3c,EAb0B,EAa1BA,KACRkN,EAASiH,GAAkC,IAC3C0I,KAAa7c,EAAD,UAAU0c,EAAmB3O,SAAS6O,IAAIE,SAA1C,SAfsB,kDAiBlC5P,EAASiH,GAAkC,IAC3CnB,GAAU,+BAAgC,SAlBR,0DAAH,qDAsBtB+J,GAAmB,uCAAG,4BAAAvL,EAAA,uDACzBtE,EAAaC,GAAbD,UACCqG,aAAO,gBAAD,WAA8B,OAC7CrG,EAASqG,aAAO,gBAAD,QAA2B,KAC1CrG,EAASqG,aAAO,gBAAD,cAAiC,KAChDrG,EAASqG,aAAO,gBAAD,OAA0B,KALR,2CAAH,qDAQnB6H,GAAc,uCAAG,WAAOrN,GAAP,2BAAAyD,EAAA,yDACpBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZ2G,EAAc3G,IAAW4G,SAASC,mBAGlC+C,EAAsB,GACtBC,EAAgB,GAClBC,EAAW,EAETC,EAAc,SAACvd,GACfsd,IAAanD,EAAYL,MAAMzF,QAE/BlC,YAAW,WACLgI,EAAYoB,YACdjO,EAAS+J,GAAuB+F,IAEhC9P,EAASgK,GAAqB+F,IAGhClP,GAAS,KACR,MAeJgM,EAAYoB,YAnCW,gCAoCpBpY,EAAOqE,qBAAqB2S,EAAY3Z,GAAI,MAC/C0R,MAAK,SAACsL,GACLH,EAAc7c,GAAK2Z,EAAY3Z,GAC/B6c,EAAc/B,QAAUkC,EAAYpd,KAAK+N,SAASmN,QAElDiC,EAAYC,EAAYvd,WAEzBmS,OAAM,SAACqL,GACNJ,EAAc7c,GAAK2Z,EAAY3Z,GAC/B6c,EAAc/B,QAAU,GAExBiC,EAAY,SACZpP,GAAS,GACTjO,QAAQC,IAAIsd,MAjDU,YAqDxBtD,EAAYL,MAAMzF,OAAS,GArDH,kCAsDpB8F,EAAYL,MAAMnK,IAAlB,uCAAsB,WAAOC,EAAMC,GAAb,SAAA+B,EAAA,sEACpBzO,EAAOqE,qBAAqB2S,EAAY3Z,GAAIoP,EAAKpP,IACpD0R,MAAK,SAACsL,GACLJ,EAAoB1P,KAAK,CACvBlN,GAAIoP,EAAKpP,GACTkd,SAAU9N,EAAK+N,UACfrC,QAASkC,EAAYpd,KAAK+N,SAASmN,UAGrCgC,GAAY,EACZC,EAAYC,EAAYvd,WAEzBmS,OAAM,SAACqL,GACNL,EAAoB1P,KAAK,CACvBlN,GAAIoP,EAAKpP,GACTkd,SAAU9N,EAAK+N,UACfrC,QAAS,KAEXgC,GAAY,EACZC,EAAY,SACZpP,GAAS,GACTjO,QAAQC,IAAIsd,MArBU,2CAAtB,yDAtDoB,gCA+E1BtP,GAAS,GA/EiB,4CAAH,sDAmFdiO,GAAY,uCAAG,WAAOjO,GAAP,+BAAAyD,EAAA,yDAClBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZ2G,EAAc3G,IAAW4G,SAASC,mBAElCuD,EAAoB,GACtBN,EAAW,EAETC,EAAc,WACdD,IAAanD,EAAYL,MAAMzF,QACjClC,YAAW,WACT7E,EAAS8J,GAAqCwG,IAC9CzP,GAAS,KACR,QAIHgM,EAAYL,MAAMzF,OAAS,GAhBL,iCAiBlB8F,EAAYL,MAAMnK,IAAlB,uCAAsB,WAAOC,EAAMC,GAAb,SAAA+B,EAAA,sEACpBzO,EAAOuE,mBAAmByS,EAAY3Z,GAAIoP,EAAKpP,IAClD0R,MAAK,SAAC2L,GAAe,IAAD,EACbC,EAAS,UAAGD,EAAUzd,KAAK+N,SAAS/N,YAA3B,QAAmC,GAElDwd,EAAkBlQ,KAAK,CACrBgQ,SAAU9N,EAAK+N,UACfI,MAAK,OAAED,QAAF,IAAEA,IAAa,KAEtBR,GAAY,EACZC,OAEDnL,OAAM,SAACqL,GACNG,EAAkBlQ,KAAK,CACrBgQ,SAAU9N,EAAK+N,UACfI,MAAO,KAGTT,GAAY,EACZC,OAnBsB,2CAAtB,yDAjBkB,0DA0CYpa,EAAOuE,mBACvCyS,EAAY3Z,IA3CQ,iBA0CRqd,EA1CQ,EA0Cdzd,KAIRwd,EAAkBlQ,KAAK,CACrBgQ,SAAU,MACVK,MAAK,UAAEF,EAAU1P,SAAS/N,YAArB,QAA6B,KAEpC+N,GAAS,GAlDa,mDAoDtBb,EAAS8J,GAAqC,KAC9CjJ,GAAS,GArDa,QAwDxBgE,YAAW,WACT7E,EAAS8J,GAAqCwG,IAC9CzP,GAAS,KACR,KA3DqB,2DAAH,sDCxtBZ6P,GAAoB,oBACpBC,GAA2B,2BAC3BC,GAA0B,0BAC1BC,GAA8B,8BAC9BC,GAA8B,8BAE9BC,GAAkB,SAACjX,GAC9B,MAAO,CACLxD,KAAMoa,GACN5W,YAWSkX,GAAuB,SAAClX,GACnC,MAAO,CACLxD,KAAMsa,GACN9W,YAISyS,GAAwB,SAACzS,GACpC,MAAO,CACLxD,KAAMqa,GACN7W,YAISmX,GAA0B,SAACnX,GACtC,MAAO,CACLxD,KAAMua,GACN/W,YAISoX,GAAwB,uCAAG,WACtC/a,EACAC,GAFsC,uCAAAkO,EAAA,6DAGtCjO,EAHsC,+BAG5B,GACVC,EAJsC,+BAI/B,GACP3D,EALsC,+BAK7B,GACT4D,EANsC,+BAMzB,GANyB,kBASbV,EAAOK,gBAC5BC,EACAC,EACAC,EACAC,EACA3D,EACA4D,GAfkC,gBAS5BzD,EAT4B,EAS5BA,MAQFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAAS+Q,GAAgBje,EAAK+N,SAAS/N,OAC7CmN,GAAMD,SAASgR,GAAqBG,IAtBA,kDAwBpCve,QAAQC,IAAR,MAxBoC,0DAAH,wDA4BxBwe,GAAgB,uCAAG,8BAAA/M,EAAA,+EAELzO,EAAOK,gBAAgB,EAAG,GAAI,GAAI,GAAI,GAAI,IAFrC,gBAEpBpD,EAFoB,EAEpBA,KACRmN,GAAMD,UA3D8BlG,EA2DGhH,EAAK+N,SAAS/N,KA1DhD,CACLwD,KAAMwa,GACNhX,aAqD4B,gDAK5BlH,QAAQC,IAAR,MAL4B,kCAxDO,IAACiH,IAwDR,oBAAH,qDAShBwX,GAAY,uCAAG,WAAOnb,EAAMC,EAAOC,EAASkb,GAA7B,qBAAAjN,EAAA,yDACrBiN,EADqB,uBAExBL,GAAyB/a,EAAMC,EAAOC,GAFd,iCAMpBmb,EAAmBD,EAAaE,YAClCF,EAAaE,YAAY3K,MAAM,KAC/B,GACE4K,EAAqBH,EAAaI,cACpCJ,EAAaI,cAAc7K,MAAM,KACjC,GAEE2K,EAAcF,EAAaE,YAAcD,EAAiB,GAAK,GAC/DG,EAAgBJ,EAAaI,cAAgBD,EAAmB,GAAK,GAdjD,mBAiBlBR,GACJ/a,EACAC,EACAC,EACAob,EACAE,GAtBsB,0DAyBxB/e,QAAQC,IAAR,MAzBwB,0DAAH,4DAkDZ+e,GAAe,uCAAG,WAAOnN,GAAP,mBAAAH,EAAA,+EAEJzO,EAAOc,eAAe8N,EAAOvR,IAFzB,uBAEnBJ,EAFmB,EAEnBA,KACF+Z,EAHqB,2BAItB/Z,EAAK+N,UAJiB,IAKzB2L,MAAO/H,EAAOgI,YAAchI,EAAOgI,YAAchI,EAAO+H,QAL/B,SAOrBvM,GAAMD,SAASuM,GAAsBM,IAPhB,yDAS3Bja,QAAQC,IAAR,MAT2B,0DAAH,sDAatBgf,GAAyB,uCAAG,WAAOnb,GAAP,qBAAA4N,EAAA,6DACxB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAW4G,SAASqE,OAC3Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHkB,kBAMxBP,EAAOY,qBAAqBC,GANJ,OAO9BoP,GAAU,wBAAyB,WACnCoL,GAAyB/a,EAAMC,GARD,kDAU9B0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAX8B,0DAAH,sDAelBif,GAAyB,uCAAG,WAAOpb,GAAP,eAAA4N,EAAA,sDACjCtS,EAAuB,CAC3BC,KAAM,WACJ4f,GAA0Bnb,IAE5BrE,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXqC,2CAAH,sDAezB+f,GAA2B,uCAAG,WAAOrb,EAAOJ,GAAd,mBAAAgO,EAAA,sDACjCtE,EAAaC,GAAbD,SACR1J,EAAOA,EAAK6M,cAF6B,KAKjC7M,EALiC,OAMlC,aANkC,OAUlC,aAVkC,OAclC,aAdkC,8BAOrCjB,EAAU,iDAP2B,mCAWrCA,EAAU,kDAX2B,mCAerCA,EAAU,iDAf2B,UAgB/B2K,EAAS4J,IAAmB,IAhBG,4CAoBd,aAAvBtT,EAAK6M,gBACDnR,EAAuB,CAC3BC,KAAM,WACJ+f,GAAoBtb,EAAOJ,IAE7BjE,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QAAQ6C,EAASrD,IA7Be,4CAAH,wDAiC3BggB,GAAmB,uCAAG,WAAOtb,EAAOJ,GAAd,uBAAAgO,EAAA,yDACzB4B,EAAuBjG,GAAvBiG,SAAUlG,EAAaC,GAAbD,SACZmR,EAASjL,IAAW4G,SAASqE,OAC3Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MACd4J,EAASJ,GAAiB,IAJO,SAMlB,aAATtJ,EAN2B,gCAOvBT,EAAO+D,mBAAmBlD,GAPH,UASlB,aAATJ,EAT2B,kCAUvBT,EAAO8D,mBAAmBjD,GAVH,yBAYzBwa,GAAyB/a,EAAMC,GAZN,QAa/B0P,GAAU,4BAA6B,WACvCjB,YAAW,WACT3E,EAAS,iBACTF,EAASJ,GAAiB,MACzB,KAjB4B,kDAmB/BkG,GAAU,yBAA0B,SACpC7F,GAAMD,SAASJ,GAAiB,IAChChN,QAAQC,IAAI,WAAZ,MArB+B,0DAAH,wDC7MnBoS,GAAe,CAC1BgN,aAAc,GACdC,sBAAuB,GACvBnF,mBAAoB,GACpBoF,qBAAsB,GACtBhB,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICTR,IAAMnM,GAAe,CAC1BmN,iBAAiB,EACjBC,qBAAqB,EACrBC,gBAAgB,GCFX,IAAMC,GAAyB,yBACzBC,GAAsB,sBACtBC,GAA6B,6BAC7BlN,GAAkB,kBAClBmN,GAA2B,2BAC3BC,GACX,kCAEWC,GAAsB,SAAC9Y,GAClC,MAAO,CACLxD,KAAMic,GACNzY,YAIS+Y,GAA8B,SAAC/Y,GAC1C,MAAO,CACLxD,KAAMqc,GACN7Y,YAISgZ,GAAoB,SAAChZ,GAChC,MAAO,CACLxD,KAAMkc,GACN1Y,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAISiZ,GAA0B,SAACjZ,GACtC,MAAO,CACLxD,KAAMmc,GACN3Y,YAISkZ,GAAwB,SAAClZ,GACpC,MAAO,CACLxD,KAAMoc,GACN5Y,YAIS4M,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,mBAAD,KAA2B,KAC1CrG,EAASqG,aAAO,mBAAD,OAA6B,KAC5CrG,EAASqG,aAAO,mBAAD,WAAiC,KAChDrG,EAASqG,aAAO,mBAAD,WAAiC,KAChDrG,EAASqG,aAAO,mBAAD,MAA4B,KAC3CrG,EAASqG,aAAO,mBAAD,QAA8B,KAC7CrG,EAASqG,aAAO,mBAAD,UAAgC,KAC/CrG,EAASqG,aAAO,mBAAD,WAAiC,KAChDrG,EAASqG,aAAO,mBAAD,WAAiC,KAChDrG,EAASqG,aAAO,mBAAD,OAA6B,KAC5CrG,EAASqG,aAAO,mBAAD,SAA+B,KAZvB,4CAAH,qDA0BT4M,GAA2B,uCAAG,WACzC9c,EACAC,GAFyC,qCAAAkO,EAAA,6DAGzCjO,EAHyC,+BAG/B,GACVyB,EAJyC,+BAI9B,GACXob,EALyC,kDAQhBrd,EAAOgC,gBAC5B1B,EACAC,EACAC,EACAyB,GAZqC,gBAQ/BhF,EAR+B,EAQ/BA,MAMFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UAC7B8B,EACFjT,GAAMD,SAAS6S,GAA4B/f,EAAK+N,SAAS/N,OAEzDmN,GAAMD,SAAS4S,GAAoB9f,EAAK+N,SAAS/N,OAEnDmN,GAAMD,SAAS8S,GAAkB3B,IAvBM,kDAyBvCve,QAAQC,IAAR,MAzBuC,0DAAH,wDA6BlCsgB,GAAuB,uCAAG,WAAO9b,GAAP,qBAAAiN,EAAA,6DACtB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWkN,OAAOjC,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHgB,kBAMtBP,EAAOqC,mBAAmBb,GANJ,OAO5ByO,GAAU,wBAAyB,WACnCmN,GAA4B9c,EAAMC,GARN,kDAU5B0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAX4B,0DAAH,sDAevBwgB,GAAoB,uCAAG,WAAO5O,GAAP,yCAAAH,EAAA,6DACnBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWoN,UAAUnC,OAC5Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MACRmD,EAAakL,EAAO8O,SAASzM,MAAM,KACnC0M,EAAS/O,EAAOgP,KAAK3M,MAAM,KAC3BhP,EAAW2M,EAAO2O,OAAOtM,MAAM,KANV,UASnBhN,EAAU,IACR4K,SAAWD,EAAOC,SAC1B5K,EAAQ6K,SAAWF,EAAOE,SAC1B7K,EAAQ0I,KAAOiC,EAAOjC,KACtB1I,EAAQ4Z,UAAR,UAAoB5b,EAAS,UAA7B,QAAmC,GACnCgC,EAAQ6Z,YAAR,UAAsBpa,EAAW,UAAjC,QAAuC,GACvCO,EAAQ8Z,QAAR,UAAkBJ,EAAO,UAAzB,QAA+B,GAC/B1Z,EAAQ+Z,MAAR,UAAgBpP,EAAOoP,aAAvB,QAAgC,GAChC/Z,EAAQga,UAAR,UAAoBrP,EAAOsP,gBAA3B,QAAuC,GACvCja,EAAQka,IAAMvP,EAAOuP,IACrBla,EAAQma,UAAYxP,EAAOyP,SAC3Bpa,EAAQqa,QAAU1P,EAAO0P,QApBA,UAsBnBte,EAAOmC,YAAY8B,GAtBA,QAuBzBgM,GAAU,yBAA0B,WACpCmN,GAA4B9c,EAAMC,GAClC4J,EAASiH,GAAgC,IAzBhB,kDA2BzBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MA7ByB,0DAAH,sDAiCpBuhB,GAAmB,uCAAG,WAAO3P,GAAP,yCAAAH,EAAA,6DAClBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWoN,UAAUnC,OAC5Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MACRmD,EAAakL,EAAO8O,SAASzM,MAAM,KACnC0M,EAAS/O,EAAOgP,KAAK3M,MAAM,KAC3BhP,EAAW2M,EAAO2O,OAAOtM,MAAM,KANX,UASlBhN,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ4K,SAAWD,EAAOC,SAC1B5K,EAAQ6K,SAAWF,EAAOE,SAC1B7K,EAAQ0I,KAAOiC,EAAOjC,KACtB1I,EAAQ4Z,UAAR,UAAoB5b,EAAS,UAA7B,QAAmC,GACnCgC,EAAQ6Z,YAAR,UAAsBpa,EAAW,UAAjC,QAAuC,GACvCO,EAAQ8Z,QAAR,UAAkBJ,EAAO,UAAzB,QAA+B,GAC/B1Z,EAAQ+Z,MAAR,UAAgBpP,EAAOoP,aAAvB,QAAgC,GAChC/Z,EAAQga,UAAR,UAAoBrP,EAAOsP,gBAA3B,QAAuC,GACvCja,EAAQka,IAAMvP,EAAOuP,IACrBla,EAAQma,UAAYxP,EAAOyP,SAC3Bpa,EAAQqa,QAAU1P,EAAO0P,QArBD,UAsBlBte,EAAOoC,eAAe6B,GAtBJ,QAuBxBgM,GAAU,yBAA0B,WACpCmN,GAA4B9c,EAAMC,GAClC4J,EAASiH,GAAgC,IAzBjB,kDA2BxBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MA7BwB,0DAAH,sDAiCZwhB,GAAqB,uCAAG,WAAO/d,EAAMmO,GAAb,eAAAH,EAAA,sDAC7BtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACF+c,GAAqB5O,GAErB2P,GAAoB3P,IAGxBpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAfiC,2CAAH,wDAmBrBsiB,GAAuB,uCAAG,sDAAAhQ,EAAA,sDAC7BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWoN,UAAUiB,qBAC5Bhb,EAAazG,EAAK6gB,YAAc,IAAM7gB,EAAK0hB,cAC3ChB,EAAS1gB,EAAK8gB,QAAU,IAAM9gB,EAAK2hB,UACnC3c,EAAWhF,EAAK4gB,UAAY,IAAM5gB,EAAK4hB,YAE7C1U,EAASqG,aAAO,mBAAD,eAA2BvT,EAAKI,UAAhC,QAAsC,KACrD8M,EAASqG,aAAO,mBAAD,iBAA6BvT,EAAK0P,YAAlC,QAA0C,KACzDxC,EAASqG,aAAO,mBAAD,qBAAiCvT,EAAK4R,gBAAtC,QAAkD,KACjE1E,EAASqG,aAAO,mBAAD,qBAAiCvT,EAAKmhB,iBAAtC,QAAmD,KAClEjU,EAASqG,aAAO,mBAAD,gBAA4BvT,EAAKkhB,WAAjC,QAAwC,KACvDhU,EAASqG,aAAO,mBAAD,kBAA8BvT,EAAK+gB,aAAnC,QAA4C,KAC3D7T,EAASqG,aAAO,mBAAD,oBAAgCvT,EAAKqhB,eAArC,QAAgD,KAC/DnU,EAASqG,aAAO,mBAAD,qBAAiCvT,EAAKghB,iBAAtC,QAAmD,KAClE9T,EAASqG,aAAO,mBAAD,kBAAiC9M,QAAjC,IAAiCA,IAAc,KAC9DyG,EAASqG,aAAO,mBAAD,cAA6BmN,QAA7B,IAA6BA,IAAU,KACtDxT,EAASqG,aAAO,mBAAD,gBAA+BvO,QAA/B,IAA+BA,IAAY,KAjBrB,4CAAH,qDAoBvB6c,GAAuB,uCAAG,WAAOtd,GAAP,eAAAiN,EAAA,sDAC/BtS,EAAuB,CAC3BC,KAAM,WACJkhB,GAAwB9b,IAE1BhF,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXmC,2CAAH,sDChOvBiT,GAAe,CAC1B2P,cAAe,GACfC,sBAAuB,GACvBC,WAAY,MACZP,qBAAsB,GACtBQ,mBAAoB,GACpB5D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,GAEb/a,QAAS,ICbJ,IAAM2e,GAAiB,iBACjBC,GAAmB,mBACnB1P,GAAkB,kBAClB2P,GAAwB,wBACxBC,GAA0B,0BAE1BC,GAAe,SAACtb,GAC3B,MAAO,CACLxD,KAAM0e,GACNlb,YAISub,GAAiB,SAACvb,GAC7B,MAAO,CACLxD,KAAM2e,GACNnb,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAISwb,GAAqB,SAACxb,GACjC,MAAO,CACLxD,KAAM4e,GACNpb,YAISyb,GAAuB,SAACzb,GACnC,MAAO,CACLxD,KAAM6e,GACNrb,YAIS0b,GAAqB,uCAAG,WAAOrf,EAAMC,GAAb,iCAAAkO,EAAA,6DAAoBjO,EAApB,+BAA8B,GAA9B,kBAEVR,EAAOe,aAAaT,EAAMC,EAAOC,GAFvB,gBAEzBvD,EAFyB,EAEzBA,MACFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAASoV,GAAatiB,EAAK+N,SAAS/N,OAC1CmN,GAAMD,SAASqV,GAAelE,IARG,kDAUjCve,QAAQC,IAAR,MAViC,0DAAH,wDAcrB6T,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,gBAAD,KAAwB,KACvCrG,EAASqG,aAAO,gBAAD,WAA8B,KAC7CrG,EAASqG,aAAO,gBAAD,WAA8B,KAC7CrG,EAASqG,aAAO,gBAAD,WAA8B,KALtB,2CAAH,qDAQhBoP,GAAiB,uCAAG,WAAOhR,GAAP,yBAAAH,EAAA,6DAChBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWwP,OAAOvE,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHU,UAKhB0D,EAAU,IACR4K,SAAWD,EAAOC,SAC1B5K,EAAQ6b,SAAWlR,EAAOkR,SAC1B7b,EAAQ6K,SAAWF,EAAOE,SARJ,UAShB9O,EAAOkB,SAAS+C,GATA,QAUtBgM,GAAU,yBAA0B,WACpC0P,GAAsBrf,EAAMC,GAC5B4J,EAASiH,GAAgC,IAZnB,kDActBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAhBsB,0DAAH,sDAoBjB+iB,GAAkB,uCAAG,WAAOnR,GAAP,yBAAAH,EAAA,6DACjBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWwP,OAAOvE,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHW,UAMjB0D,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ4K,SAAWD,EAAOC,SAC1B5K,EAAQ6b,SAAWlR,EAAOkR,SAC1B7b,EAAQ6K,SAAWF,EAAOE,SAVH,UAWjB9O,EAAOmB,YAAY8C,GAXF,QAYvBgM,GAAU,yBAA0B,WACpC0P,GAAsBrf,EAAMC,GAC5B4J,EAASiH,GAAgC,IAdlB,kDAgBvBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAlBuB,0DAAH,sDAsBlBgjB,GAAoB,uCAAG,WAAO/e,GAAP,qBAAAwN,EAAA,6DACnB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWwP,OAAOvE,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHa,kBAMnBP,EAAOqB,gBAAgBJ,GANJ,OAOzBgP,GAAU,wBAAyB,WACnC0P,GAAsBrf,EAAMC,GARH,kDAUzB0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAXyB,0DAAH,sDAebijB,GAAkB,uCAAG,WAAOxf,EAAMmO,GAAb,eAAAH,EAAA,sDAC1BtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACFmf,GAAkBhR,GAElBmR,GAAmBnR,IAGvBpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAf8B,2CAAH,wDAmBlB+jB,GAAoB,uCAAG,sCAAAzR,EAAA,sDAC1BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWwP,OAAOM,kBAC/BhW,EAASqG,aAAO,gBAAD,eAAwBvT,EAAKI,UAA7B,QAAmC,KAClD8M,EAASqG,aAAO,gBAAD,qBAA8BvT,EAAK4R,gBAAnC,QAA+C,KAC9D1E,EAASqG,aAAO,gBAAD,qBAA8BvT,EAAK6iB,gBAAnC,QAA+C,KAL5B,2CAAH,qDAQpBM,GAAoB,uCAAG,WAAOnf,GAAP,eAAAwN,EAAA,sDAC5BtS,EAAuB,CAC3BC,KAAM,WACJ4jB,GAAqB/e,IAEvBzE,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXgC,2CAAH,sDClJpBiT,GAAe,CAC1BiR,UAAW,GACXC,gBAAiB,GACjBH,kBAAmB,GACnBlB,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,GAEb/a,QAAS,ICTJ,IAAM4O,GAAe,CAC1BmR,UAAW,GACXnO,eAAgB,GAChB7B,mBAAoB,GACpB4B,iBAAkB,GAClB8M,WAAY,OCXP,IAAMuB,GAAyB,yBACzBC,GAAqB,qBACrBC,GAAqB,qBAgBrBC,GAAkB,SAAC1c,GAC9B,MAAO,CACLxD,KAAMggB,GACNxc,YAIS2c,GAAoB,uCAAG,8BAAAnS,EAAA,+EAETzO,EAAOwD,gBAAgB,EAAG,KAFjB,gBAExBvG,EAFwB,EAExBA,KACRmN,GAAMD,UAxB0BlG,EAwBGhH,EAAK+N,SAAS/N,KAvB5C,CACLwD,KAAM+f,GACNvc,aAkBgC,gDAKhClH,QAAQC,IAAR,MALgC,kCArBD,IAACiH,IAqBA,oBAAH,qDASpB4c,GAAgB,uCAAG,WAAOnd,GAAP,iBAAA+K,EAAA,+EAELzO,EAAOyD,YAAY,EAAG,IAAKC,GAFtB,gBAEpBzG,EAFoB,EAEpBA,KACRmN,GAAMD,SAASwW,GAAgB1jB,EAAK+N,SAAS/N,OAHjB,gDAK5BF,QAAQC,IAAR,MAL4B,yDAAH,sDAShB8jB,GAAgB,uCAAG,8BAAArS,EAAA,+EAELzO,EAAOiH,YAAY,EAAG,KAFjB,gBAEpBhK,EAFoB,EAEpBA,KACRmN,GAAMD,UAnCsBlG,EAmCGhH,EAAK+N,SAAS/N,KAlCxC,CACLwD,KAAMigB,GACNzc,aA6B4B,gDAK5BlH,QAAQC,IAAR,MAL4B,kCAhCD,IAACiH,IAgCA,oBAAH,qDCpChB8c,GAAyB,yBACzBC,GAA2B,2BAC3BC,GAA6B,6BAC7BvR,GAAkB,kBAClBwR,GAA6B,6BAC7BC,GAAuB,uBACvBC,GAA6B,6BAC7BC,GAA8B,8BAE9BC,GAAsB,SAACrd,GAClC,MAAO,CACLxD,KAAMsgB,GACN9c,YAISsd,GAA0B,SAACtd,GACtC,MAAO,CACLxD,KAAM4gB,GACNpd,YAWSud,GAAwB,SAACvd,GACpC,MAAO,CACLxD,KAAMugB,GACN/c,YAISwd,GAA0B,SAACxd,GACtC,MAAO,CACLxD,KAAMwgB,GACNhd,YAISyd,GAA0B,SAACzd,GACtC,MAAO,CACLxD,KAAMygB,GACNjd,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAIS0d,GAAqB,SAAC1d,GACjC,MAAO,CACLxD,KAAM0gB,GACNld,YAIS2d,GAAoB,uCAAG,WAClCthB,EACAC,GAFkC,uCAAAkO,EAAA,6DAGlCjO,EAHkC,+BAGxB,GACV+B,EAJkC,+BAIzB,GACTN,EALkC,+BAKvB,GACXO,EANkC,+BAMrB,GANqB,kBASTxC,EAAOsC,gBAC5BhC,EACAC,EACAC,EACA+B,EACAN,EACAO,GAf8B,gBASxBvF,EATwB,EASxBA,MAQFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAASmX,GAAoBrkB,EAAK+N,SAAS/N,OACjDmN,GAAMD,SAASwX,GAAmBrG,IAClClR,GAAMD,SAASJ,GAAiB,IAvBA,kDAyBhCK,GAAMD,SAASJ,GAAiB,IAChChN,QAAQC,IAAR,MA1BgC,0DAAH,wDA8BpB6kB,GAAwB,uCAAG,8BAAApT,EAAA,+EAEbzO,EAAOsC,gBAAgB,EAAG,SAAU,GAAI,GAAI,GAAI,IAFnC,gBAE5BrF,EAF4B,EAE5BA,KAERmN,GAAMD,UA5E8BlG,EA4EGhH,EAAK+N,SAAS/N,KA3EhD,CACLwD,KAAM2gB,GACNnd,aA0EAmG,GAAMD,SAASJ,GAAiB,IALI,gDAOpCK,GAAMD,SAASJ,GAAiB,IAChChN,QAAQC,IAAR,MARoC,kCAxED,IAACiH,IAwEA,oBAAH,qDAyBxB6d,GAA4B,uCAAG,WAAOphB,GAAP,iBAAA+N,EAAA,+EAEjBzO,EAAOyC,gBAAgB/B,GAFN,gBAEhCzD,EAFgC,EAEhCA,KACRmN,GAAMD,SAASsX,GAAwBxkB,EAAK+N,WAHJ,gDAKxCjO,QAAQC,IAAR,MALwC,yDAAH,sDAS5B+kB,GAAoB,uCAAG,WAAOrhB,GAAP,mBAAA+N,EAAA,sEACXzO,EAAO4B,iBAAiBlB,EAAY,EAAG,KAD5B,gBAC1BzD,EAD0B,EAC1BA,KACJ0T,EAAU,GACd1T,EAAK+N,SAAS/N,KAAKuP,KAAI,SAACC,EAAMC,GAC5BiE,EAAQpG,KAAKkC,EAAKmF,YAEpBxH,GAAMD,SAASuX,GAAwB/Q,IANL,2CAAH,sDASpBqR,GAAuB,uCAAG,sDAAAvT,EAAA,6DAC7B4B,EAAuBjG,GAAvBiG,SAAUlG,EAAaC,GAAbD,SACZ8X,EAAuB5R,IAAW6R,UAAUD,qBAC5CE,EAAa9R,IAAWkN,OAAO4E,WAHA,EAIbA,EAAW3Q,QACjC,SAACC,GAAD,OAAOA,EAAEpU,KAAO4kB,EAAqBpE,aALF,oBAI9BuE,EAJ8B,cAO/BC,GAAmCJ,EAAqBnE,aAPzB,OASrC3T,EAASqG,aAAO,mBAAoB,KAArB,UAA2ByR,EAAqB5kB,UAAhD,QAAsD,KACrE8M,EAASqG,aAAO,mBAAoB,OAArB,UAA6ByR,EAAqBtV,YAAlD,QAA0D,KACzExC,EACEqG,aAAO,mBAAoB,UAArB,UAAgCyR,EAAqB3D,eAArD,QAAgE,KAExEnU,EACEqG,aAAO,mBAAoB,QAArB,UAA8ByR,EAAqBjE,aAAnD,QAA4D,KAEpE7T,EACEqG,aACE,mBACA,SAFI,oBAGDyR,EAAqBpE,UAHpB,YAGiCuE,EAAczV,aAH/C,QAGyD,KAGjExC,EACEqG,aACE,mBACA,WAFI,UAGJyR,EAAoB,qBAHhB,QAGqC,KAG7C9X,EACEqG,aACE,mBACA,OAFI,oBAGDyR,EAAqBlE,QAHpB,YAG+BkE,EAAqBrD,kBAHpD,QAGmE,KAnCtC,4CAAH,qDAwC9B0D,GAAoB,uCAAG,WAAO1T,EAAQ2T,GAAf,yCAAA9T,EAAA,6DACnBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SAClBlG,EAASiH,GAAgC,IAFd,EAGHf,IAAW6R,UAAU5G,OAArChb,EAHmB,EAGnBA,KAAMC,EAHa,EAGbA,MACR0B,EAAW2M,EAAO2O,OAAOtM,MAAM,KAC/BvN,EAAakL,EAAO8O,SAASzM,MAAM,KACnC0M,EAAS/O,EAAOgP,KAAK3M,MAAM,KANN,UASnBhN,EAAU,IACRue,IAAM5T,EAAO4T,IACrBve,EAAQ6K,SAAR,UAAmBF,EAAOE,gBAA1B,QAAsC,GACtC7K,EAAQ0I,KAAOiC,EAAOjC,KACtB1I,EAAQ4Z,UAAR,UAAoB5b,EAAS,UAA7B,QAAmC,GACnCgC,EAAQ6Z,YAAR,UAAsBpa,EAAW,UAAjC,QAAuC,GACvCO,EAAQ8Z,QAAR,UAAkBJ,EAAO,UAAzB,QAA+B,GAC/B1Z,EAAQ+Z,MAAQpP,EAAOoP,MACvB/Z,EAAQqa,QAAU1P,EAAO0P,QACzBra,EAAQwe,MAAR,UAAgB7T,EAAOmK,gBAAvB,QAAmC,GAlBV,UAoBnB/Y,EAAO0C,YAAYuB,GApBA,QAuBzBgM,GAAU,yBAA0B,WACpC2R,GAAqBthB,EAAMC,GAC3B4J,EAASiH,GAAgC,IACzCpC,YAAW,WACT3E,EAAS,gBACR,KA5BsB,kDA8BzB4F,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IA/BhB,0DAAH,wDAmCpBsR,GAAqB,uCAAG,WAAO9T,EAAQ+T,GAAf,iCAAAlU,EAAA,0DACpBtE,EAAaC,GAAbD,UACCiH,GAAkC,IACrCnP,EAAW2M,EAAO2O,OAAOtM,MAAM,KAC/BvN,EAAakL,EAAO8O,SAASzM,MAAM,KACnC0M,EAAS/O,EAAOgP,KAAK3M,MAAM,KALL,UAQpBhN,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQue,IAAM5T,EAAO4T,IACrBve,EAAQ6K,SAAR,UAAmBF,EAAOE,gBAA1B,QAAsC,GACtC7K,EAAQ0I,KAAOiC,EAAOjC,KACtB1I,EAAQ4Z,UAAR,UAAoB5b,EAAS,UAA7B,QAAmC,GACnCgC,EAAQ6Z,YAAR,UAAsBpa,EAAW,UAAjC,QAAuC,GACvCO,EAAQ8Z,QAAR,UAAkBJ,EAAO,UAAzB,QAA+B,GAC/B1Z,EAAQ+Z,MAAQpP,EAAOoP,MACvB/Z,EAAQqa,QAAU1P,EAAO0P,QACzBra,EAAQwe,MAAR,UAAgB7T,EAAOmK,gBAAvB,QAAmC,KAE/BnK,EAAO2T,cAAcrR,OAAS,GApBR,kCAqBlB0R,GAAmBhU,EAAO2T,cAAe,kBArBvB,iDAuBlBK,GAAmBhU,EAAO2T,cAAe,cAvBvB,yBA0BpBviB,EAAO2C,eAAesB,GA1BF,QA2B1BgM,GAAU,yBAA0B,WACpCjB,YAAW,WACT3E,EAAS,gBACR,KA9BuB,kDAgC1BF,EAASiH,GAAkC,IAhCjB,0DAAH,wDAoCrByR,GAAwB,uCAAG,WAAOC,EAAWpiB,GAAlB,eAAA+N,EAAA,6DACzBxK,EAAU,CACdkR,YAAazU,EACbkR,QAASkR,GAHoB,SAKzB9iB,EAAO8B,gBAAgBmC,GALE,2CAAH,wDAQxB8e,GAA8B,uCAAG,WAAOC,GAAP,SAAAvU,EAAA,sDACrCuU,EAAY/lB,KAAKuP,IAAjB,uCAAqB,WAAOC,EAAMC,GAAb,SAAA+B,EAAA,sEACbzO,EAAO+B,mBAAmB0K,EAAKpP,IADlB,2CAArB,yDADqC,2CAAH,sDAM9B4lB,GAAuB,uCAAG,WAAOviB,GAAP,qBAAA+N,EAAA,6DACtB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAW6R,UAAU5G,OAC5Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHgB,kBAMtBP,EAAO4C,mBAAmBlC,GANJ,OAO5BuP,GAAU,wBAAyB,WACnC2R,GAAqBthB,EAAMC,GARC,kDAU5B0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAX4B,0DAAH,sDAevB4lB,GAAkB,uCAAG,WAAOM,EAAiBziB,GAAxB,yBAAAgO,EAAA,6DACjB4B,EAAajG,GAAbiG,SADiB,SAGjB8S,EAAsB9S,IAAW6R,UAAUkB,qBAC3CC,EAAqBhT,IAAW6R,UAAUmB,mBAJzB,SAKArjB,EAAO4B,iBAAiByhB,EAAoB,EAAG,KAL/C,mBAKfpmB,EALe,EAKfA,KACF+lB,EAAc/lB,EAAK+N,SAEZ,eAATvK,EARmB,kCASf0iB,EAAoB3W,IAApB,uCAAwB,WAAOC,EAAMC,GAAb,SAAA+B,EAAA,sEACtBsU,GAA+BC,GADT,2CAAxB,yDATe,mCAYH,QAATviB,EAZY,kCAafyiB,EAAgB1W,IAAhB,uCAAoB,WAAOC,EAAMC,GAAb,SAAA+B,EAAA,sEAClBoU,GAAyBpW,EAAM4W,GADb,2CAApB,yDAbe,qCAkBjBF,EAAoBjS,OAAS,GAlBZ,kCAmBb6R,GAA+BC,GAnBlB,yBAoBbE,EAAgB1W,IAAhB,uCAAoB,WAAOC,EAAMC,GAAb,SAAA+B,EAAA,sEAClBoU,GAAyBpW,EAAM4W,GADb,2CAApB,yDApBa,iDAwBbH,EAAgB1W,IAAhB,uCAAoB,WAAOC,EAAMC,GAAb,SAAA+B,EAAA,sEAClBoU,GAAyBpW,EAAM4W,GADb,2CAApB,yDAxBa,0DA8BvBtmB,QAAQC,IAAR,MA9BuB,0DAAH,wDAkCXsmB,GAAqB,uCAAG,WACnCrE,EACArQ,EACA+T,GAHmC,eAAAlU,EAAA,sDAK7BtS,EAAuB,CAC3BC,KAAM,WACe,QAAf6iB,EACFqD,GAAqB1T,EAAQ+T,GAE7BD,GAAsB9T,EAAQ+T,IAGlCnmB,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAnBiC,2CAAH,0DAuBrBonB,GAAuB,uCAAG,gDAAA9U,EAAA,sDAC7BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAW6R,UAAUD,qBAC5B1E,EAH+B,UAGnBtgB,EAAK4gB,UAHc,YAGD5gB,EAAK4hB,aACnCnB,EAJ+B,UAIjBzgB,EAAK6gB,YAJY,YAIG7gB,EAAK0hB,eACvCf,EAL+B,UAKrB3gB,EAAK8gB,QALgB,YAKL9gB,EAAK2hB,WAErCzU,EAASqG,aAAO,mBAAD,eAA2BvT,EAAKI,UAAhC,QAAsC,KACrD8M,EAASqG,aAAO,mBAAD,gBAA4BvT,EAAKulB,WAAjC,QAAwC,KACvDrY,EAASqG,aAAO,mBAAD,iBAA6BvT,EAAK0P,YAAlC,QAA0C,KACzDxC,EAASqG,aAAO,mBAAD,kBAA8BvT,EAAK+gB,aAAnC,QAA4C,KAC3D7T,EAASqG,aAAO,mBAAD,oBAAgCvT,EAAKqhB,eAArC,QAAgD,KAC/DnU,EAASqG,aAAO,mBAAD,gBAA+B+M,QAA/B,IAA+BA,IAAU,KACxDpT,EAASqG,aAAO,mBAAD,kBAAiCkN,QAAjC,IAAiCA,IAAY,KAC5DvT,EAASqG,aAAO,mBAAD,cAA6BoN,QAA7B,IAA6BA,IAAQ,KAdf,4CAAH,qDAiBvB/M,GAAY,WACvB,IAAQ1G,EAAaC,GAAbD,SACRA,EAASkY,GAAkC,KAC3ClY,EAASqG,aAAO,mBAAD,KAA2B,KAC1CrG,EAASqG,aAAO,mBAAD,OAA6B,KAC5CrG,EAASqG,aAAO,mBAAD,QAA8B,KAC7CrG,EAASqG,aAAO,mBAAD,UAAgC,KAC/CrG,EAASqG,aAAO,mBAAD,SAA+B,KAC9CrG,EAASqG,aAAO,mBAAD,WAAiC,KAChDrG,EAASqG,aAAO,mBAAD,OAA6B,MAGjCgT,GAAuB,uCAAG,WAAO9iB,GAAP,eAAA+N,EAAA,sDAC/BtS,EAAuB,CAC3BC,KAAM,WACJ6mB,GAAwBviB,IAE1BlE,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXmC,2CAAH,sDAevBsf,GAAY,uCAAG,WAAOjb,EAASoO,GAAhB,iCAAAH,EAAA,yDAClB4B,EAAajG,GAAbiG,SADkB,EAEFA,IAAW6R,UAAU5G,OAArChb,EAFkB,EAElBA,KAAMC,EAFY,EAEZA,MAETqO,EAJqB,gCAKlBgT,GAAqBthB,EAAMC,EAAOC,GALhB,+CASpBijB,EAAY7U,EAAOZ,KAAOY,EAAOZ,KAAKiD,MAAM,KAAO,GACnDyS,EAAc9U,EAAO2O,OAAS3O,EAAO2O,OAAOtM,MAAM,KAAO,GACzD0S,EAAgB/U,EAAOgV,SAAWhV,EAAOgV,SAAS3S,MAAM,KAAO,GAE/D1O,EAASqM,EAAOZ,KAAOyV,EAAU,GAAK,GACtCxhB,EAAW2M,EAAO2O,OAASmG,EAAY,GAAK,GAC5ClhB,EAAaoM,EAAOgV,SAAWD,EAAc,GAAK,GAf9B,oBAkBlB/B,GACJthB,EACAC,EACAC,EACA+B,EACAN,EACAO,GAxBsB,2DA2BxBzF,QAAQC,IAAR,MA3BwB,2DAAH,wDC1XZoS,GAAe,CAC1ByU,cAAe,GACfC,sBAAsB,EACtBC,qBAAsB,GACtBV,mBAAoB,GACpBpB,qBAAsB,GACtBmB,qBAAsB,GACtBnE,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICZR,IAAMyI,GAA8B,8BAC9BC,GAAiC,iCACjCC,GACX,mCACWxU,GAAkB,kBAElByU,GAA4B,4BAE5BC,GAA2B,SAACngB,GACvC,MAAO,CACLxD,KAAMujB,GACN/f,YAISogB,GAA6B,SAACpgB,GACzC,MAAO,CACLxD,KAAMwjB,GACNhgB,YAISqgB,GAA+B,SAACrgB,GAC3C,MAAO,CACLxD,KAAMyjB,GACNjgB,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAISsgB,GAAyB,SAACtgB,GACrC,MAAO,CACLxD,KAAM0jB,GACNlgB,YAISugB,GAAyB,uCAAG,WACvC9jB,EACAJ,EACAC,GAHuC,+BAAAkO,EAAA,4FAI7B,GAJ6B,kBAOdzO,EAAO6B,iBAAiBnB,EAAYJ,EAAMC,GAP5B,gBAO7BtD,EAP6B,EAO7BA,MACFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAASoa,GAAuBjJ,IACtClR,GAAMD,SAASia,GAAyBnnB,EAAK+N,SAAS/N,OAbjB,kDAerCF,QAAQC,IAAI,WAAZ,MAfqC,0DAAH,0DAoEhCynB,GAAyB,uCAAG,WAAO7V,GAAP,6BAAAH,EAAA,6DACxBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SAClBlG,EAASiH,GAAgC,IAFT,EAGRf,IAAW6R,UAAU5G,OAArChb,EAHwB,EAGxBA,KAAMC,EAHkB,EAGlBA,MACRG,EAAa2P,IAAW6R,UAAUmB,mBAClCqB,EAAe9V,EAAO+V,MAAM1T,MAAM,KALR,UAQxBhN,EAAU,IACRkR,YAAczU,EACtBuD,EAAQ2gB,QAAUF,EAAa,GAVD,UAYxB1kB,EAAO+C,iBAAiBkB,GAZA,QAc9BgM,GAAU,yBAA0B,WACpCuU,GAA0B9jB,EAAYJ,EAAMC,GAC5C4J,EAASiH,GAAgC,IACzCpC,YAAW,WACT3E,EAAS,qBACR,KAnB2B,kDAqB9B4F,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IAtBX,0DAAH,sDA0BzByT,GAA0B,uCAAG,WAAOjW,GAAP,uBAAAH,EAAA,6DACzBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZ3P,EAAa2P,IAAW6R,UAAUmB,mBACxClZ,EAASiH,GAAkC,IACrC0T,EAAalW,EAAO+V,MAAM1T,MAAM,KAJL,UAOzBhN,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQkR,YAAczU,EACtBuD,EAAQ2gB,QAAUE,EAAW,GAVE,UAazB9kB,EAAOgD,oBAAoBiB,GAbF,QAc/BgM,GAAU,yBAA0B,WACpCjB,YAAW,WACT3E,EAAS,qBACR,KAjB4B,kDAmB/BF,EAASiH,GAAkC,IAnBZ,0DAAH,sDAuB1B2T,GAA4B,uCAAG,WAAO7hB,GAAP,uBAAAuL,EAAA,6DAC3B4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAW2U,cAAc1J,OAClC5a,EAAa2P,IAAW6R,UAAUmB,mBAChC/iB,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAJqB,kBAO3BP,EAAOiD,wBAAwBC,GAPJ,OAQjC+M,GAAU,wBAAyB,WACnCuU,GAA0B9jB,EAAYJ,EAAMC,GATX,kDAWjC0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAZiC,0DAAH,sDAgBrBioB,GAA0B,uCAAG,WAAOhG,EAAYrQ,GAAnB,eAAAH,EAAA,sDAClCtS,EAAuB,CAC3BC,KAAM,WACe,QAAf6iB,EACFwF,GAA0B7V,GAE1BiW,GAA2BjW,IAG/BpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAfsC,2CAAH,wDAmB1B+oB,GAA4B,uCAAG,kCAAAzW,EAAA,sDAClCtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAW2U,cAAcG,0BAEhCR,EAJoC,UAIzB1nB,EAAK2nB,QAJoB,YAIT3nB,EAAK0P,MAEtCxC,EAASqG,aAAO,wBAAD,KAAgCvT,EAAKI,KACpD8M,EAASqG,aAAO,wBAAD,QAAmCmU,IAPR,2CAAH,qDAU5B9T,GAAY,WACvB,IAAQ1G,EAAaC,GAAbD,SACRA,EAASqG,aAAO,wBAAD,KAAgC,KAC/CrG,EAASqG,aAAO,wBAAD,QAAmC,MAGvC4U,GAA4B,uCAAG,WAAO1kB,GAAP,eAAA+N,EAAA,sDACpCtS,EAAuB,CAC3BC,KAAM,WACJ2oB,GAA6BrkB,IAE/BlE,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXwC,2CAAH,sDCrN5BiT,GAAe,CAC1BiW,kBAAmB,GACnBC,wBAAyB,GACzBH,0BAA2B,GAC3BlG,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICVR,IAAMnM,GAAe,CAC1BmW,aAAc,GACdC,SAAU,GACVC,SAAU,ICFL,IAAMC,GAAqB,qBACrBhW,GAAkB,kBAClBiW,GAAuB,uBACvBC,GAAyB,yBACzBC,GAAkB,kBAElBC,GAAkB,SAAC7hB,GAC9B,MAAO,CACLxD,KAAMilB,GACNzhB,YAIS8hB,GAAgB,SAAC9hB,GAC5B,MAAO,CACLxD,KAAMolB,GACN5hB,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAIS+hB,GAAoB,SAAC/hB,GAChC,MAAO,CACLxD,KAAMklB,GACN1hB,YAISgiB,GAAsB,SAAChiB,GAClC,MAAO,CACLxD,KAAMmlB,GACN3hB,YAKEiiB,GAAmB,uCAAG,WAAO5hB,GAAP,qBAAAmK,EAAA,6DAClB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWsG,MAAM2E,OACxBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHY,kBAKlBP,EAAOsF,eAAehB,GALJ,OAMxB2L,GAAU,wBAAyB,WACnCkW,GAAyB7lB,EAAMC,GAPP,kDASxB0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAVwB,0DAAH,sDAcnBopB,GAAgB,uCAAG,WAAOxX,GAAP,2BAAAH,EAAA,6DACftE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWsG,MAAM2E,OACxBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHS,UAKf0D,EAAU,IACR0I,KAAOiC,EAAOjC,KACtB1I,EAAQwM,YAAc7B,EAAO6B,YAC7BxM,EAAQwe,MAAR,UAAgB7T,EAAOmK,gBAAvB,QAAmC,GARd,UASf/Y,EAAOoF,QAAQnB,GATA,QAUrBgM,GAAU,yBAA0B,WACpCkW,GAAyB7lB,EAAMC,GAC/B4J,EAASiH,GAAgC,IAZpB,kDAcrBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAhBqB,0DAAH,sDAoBhBqpB,GAAiB,uCAAG,WAAOzX,GAAP,2BAAAH,EAAA,6DACxBrE,GAAMD,SAASiH,GAAkC,IACzCjH,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWsG,MAAM2E,OACxBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAJU,UAMhB0D,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ0I,KAAOiC,EAAOjC,KACtB1I,EAAQwe,MAAR,UAAgB7T,EAAOmK,gBAAvB,QAAmC,GACnC9U,EAAQwM,YAAc7B,EAAO6B,YAVP,UAWhBzQ,EAAOqF,WAAWpB,GAXF,QAYtBgM,GAAU,yBAA0B,WACpCkW,GAAyB7lB,EAAMC,GAC/B6J,GAAMD,SAASiH,GAAkC,IACjDjH,EAASiH,GAAgC,IAfnB,kDAiBtBnB,GAAU,yBAA0B,SACpC7F,GAAMD,SAASiH,GAAkC,IACjDjH,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MApBsB,0DAAH,sDAyBV6T,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,eAAD,KAAuB,KACtCrG,EAASqG,aAAO,eAAD,OAAyB,KACxCrG,EAASqG,aAAO,eAAD,cAAgC,KAC/CrG,EAASqG,aAAO,eAAD,WAA6B,KALrB,2CAAH,qDAQT8V,GAAmB,uCAAG,wCAAA7X,EAAA,sDACzBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWsG,MAAM4P,kBAE9Bpc,EAASqG,aAAO,eAAD,eAAuBvT,EAAKI,UAA5B,QAAkC,KACjD8M,EAASqG,aAAO,eAAD,iBAAyBvT,EAAK0P,YAA9B,QAAsC,KACrDxC,EAASqG,aAAO,eAAD,wBAAgCvT,EAAKwT,mBAArC,QAAoD,KACnEtG,EAASqG,aAAO,eAAD,qBAA6BvT,EAAKwlB,aAAlC,QAA2C,KAPzB,2CAAH,qDAUnB0D,GAAwB,uCAAG,WAAO7lB,EAAMC,GAAb,iCAAAkO,EAAA,6DAAoBjO,EAApB,+BAA8B,GAA9B,kBAEbR,EAAOmF,YAAY7E,EAAMC,EAAOC,GAFnB,gBAE5BvD,EAF4B,EAE5BA,MACFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAAS2b,GAAgB7oB,EAAK+N,SAAS/N,OAC7CmN,GAAMD,SAAS4b,GAAczK,IARO,kDAUpCve,QAAQC,IAAR,MAVoC,0DAAH,wDAcxBwpB,GAAiB,uCAAG,WAAO/lB,EAAMmO,GAAb,eAAAH,EAAA,sDACzBtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACF2lB,GAAiBxX,GAEjByX,GAAkBzX,IAGtBpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAf6B,2CAAH,wDAmBjBsqB,GAAmB,uCAAG,WAAOniB,GAAP,eAAAmK,EAAA,sDAC3BtS,EAAuB,CAC3BC,KAAM,WACJ8pB,GAAoB5hB,IAEtB9H,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAX+B,2CAAH,sDCvJnBiT,GAAe,CAC1BsX,UAAW,GACXC,gBAAiB,GACjBJ,kBAAmB,GACnBtH,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICTR,IAAMqL,GAA0B,0BAC1BlX,GAAkB,kBAClBmX,GAA4B,yBAC5BC,GAA8B,8BAC9BC,GAAsB,sBAEtBC,GAAsB,SAAC/iB,GAClC,MAAO,CACLxD,KAAMmmB,GACN3iB,YAISgjB,GAAmB,SAAChjB,GAC/B,MAAO,CACLxD,KAAMsmB,GACN9iB,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAISijB,GAAwB,SAACjjB,GACpC,MAAO,CACLxD,KAAMomB,GACN5iB,YAISkjB,GAA0B,SAACljB,GACtC,MAAO,CACLxD,KAAMqmB,GACN7iB,YAKEmjB,GAAqB,uCAAG,WAAOxgB,GAAP,mBAAA6H,EAAA,6DACpB4B,EAAajG,GAAbiG,SACFpT,EAAOoT,IAAWgX,SAChB/L,EAAWre,EAAXqe,OAHoB,kBAMpBtb,EAAO2G,eAAeC,GANF,OAO1BqJ,GAAU,wBAAyB,WACnCqX,GAA6BhM,EAAOhb,KAAMgb,EAAO/a,OARvB,kDAU1B0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAX0B,0DAAH,sDAerBuqB,GAAoB,uCAAG,WAAO3Y,GAAP,iBAAAH,EAAA,6DACnBtE,EAAaC,GAAbD,SADmB,UAGnBlG,EAAU,IACR0I,KAAOiC,EAAOjC,KACtB1I,EAAQwM,YAAc7B,EAAO6B,YALJ,SAMnBzQ,EAAOyG,YAAYxC,GANA,OAOzBgM,GAAU,yBAA0B,WACpCqX,GAA6B,EAAG,IAChCnd,EAASiH,GAAgC,IAThB,kDAWzBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAbyB,0DAAH,sDAiBpBwqB,GAAqB,uCAAG,WAAO5Y,GAAP,iBAAAH,EAAA,6DACpBtE,EAAaC,GAAbD,SADoB,UAGpBlG,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ0I,KAAOiC,EAAOjC,KACtB1I,EAAQwM,YAAc7B,EAAO6B,YANH,SAOpBzQ,EAAO0G,eAAezC,GAPF,OAQ1BgM,GAAU,yBAA0B,WACpCqX,GAA6B,EAAG,IAChCnd,EAASiH,GAAgC,IAVf,kDAY1BnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAd0B,0DAAH,sDAmBd6T,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,eAAD,KAAuB,KACtCrG,EAASqG,aAAO,eAAD,OAAyB,KACxCrG,EAASqG,aAAO,eAAD,cAAgC,KAJxB,2CAAH,qDAOTiX,GAAuB,uCAAG,sCAAAhZ,EAAA,sDAC7BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWgX,SAASK,qBACjCvd,EAASqG,aAAO,eAAD,eAAuBvT,EAAKI,UAA5B,QAAkC,KACjD8M,EAASqG,aAAO,eAAD,iBAAyBvT,EAAK0P,YAA9B,QAAsC,KACrDxC,EAASqG,aAAO,eAAD,wBAAgCvT,EAAKwT,mBAArC,QAAoD,KAL9B,2CAAH,qDAQvB6W,GAA4B,uCAAG,WAC1ChnB,EACAC,GAF0C,uCAAAkO,EAAA,6DAG1CjO,EAH0C,+BAGhC,GAHgC,kBAMjBR,EAAOuG,eAAejG,EAAMC,EAAOC,GANlB,gBAMhCvD,EANgC,EAMhCA,MACFqe,EAAS,IACRhb,KAAP,UAAcrD,EAAK+N,SAAS1K,YAA5B,QAAoC,EACpCgb,EAAO/a,MAAP,UAAetD,EAAK+N,SAASzK,aAA7B,QAAsC,GACtC+a,EAAOC,UAAP,UAAmBte,EAAK+N,SAASuQ,iBAAjC,QAA8C,EAC9CnR,GAAMD,SAAS6c,GAAoB/pB,EAAK+N,SAAS/N,OACjDmN,GAAMD,SAAS8c,GAAiB3L,IAZQ,kDAcxCve,QAAQC,IAAR,MAdwC,0DAAH,wDAkB5B2qB,GAAqB,uCAAG,WAAOlnB,EAAMmO,GAAb,eAAAH,EAAA,sDAC7BtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACF8mB,GAAqB3Y,GAErB4Y,GAAsB5Y,IAG1BpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAfiC,2CAAH,wDAmBrByrB,GAAuB,uCAAG,WAAO3lB,GAAP,eAAAwM,EAAA,sDAC/BtS,EAAuB,CAC3BC,KAAM,WACJgrB,GAAsBnlB,IAExBzF,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXmC,2CAAH,sDChJvBiT,GAAe,CAC1ByY,aAAc,GACdC,mBAAoB,GACpBJ,qBAAsB,GACtBzI,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICTR,IAAMwM,GAAuB,uBACvBrY,GAAkB,kBAClBsY,GAAyB,yBACzBC,GAA2B,2BAC3BC,GAAoB,oBACpBC,GAAgC,gCAEhCC,GAAoB,SAACnkB,GAChC,MAAO,CACLxD,KAAMsnB,GACN9jB,YAISokB,GAA4B,SAACpkB,GACxC,MAAO,CACLxD,KAAM0nB,GACNlkB,YAISqkB,GAAkB,SAACrkB,GAC9B,MAAO,CACLxD,KAAMynB,GACNjkB,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAISskB,GAAsB,SAACtkB,GAClC,MAAO,CACLxD,KAAMunB,GACN/jB,YAISukB,GAAwB,SAACvkB,GACpC,MAAO,CACLxD,KAAMwnB,GACNhkB,YAKEmjB,GAAqB,uCAAG,WAAOnlB,GAAP,qBAAAwM,EAAA,6DACpB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWkN,OAAOjC,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHc,kBAMpBP,EAAO8G,iBAAiB7E,GANJ,OAO1BgO,GAAU,wBAAyB,WACnCwY,GAA2BnoB,EAAMC,GARP,kDAU1B0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAX0B,0DAAH,sDAerB0rB,GAAkB,uCAAG,WAAO9Z,GAAP,yBAAAH,EAAA,6DACjBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWkN,OAAOjC,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHW,UAKjB0D,EAAU,IACR0I,KAAOiC,EAAO6B,YACtBxM,EAAQwM,YAAc7B,EAAO6B,YAPN,SAQjBzQ,EAAO+G,UAAU9C,GARA,OASvBgM,GAAU,yBAA0B,WACpCwY,GAA2BnoB,EAAMC,GACjC4J,EAASiH,GAAgC,IAXlB,kDAavBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAfuB,0DAAH,sDAmBlBuhB,GAAmB,uCAAG,WAAO3P,GAAP,yBAAAH,EAAA,6DAClBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWkN,OAAOjC,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHY,UAMlB0D,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ0I,KAAOiC,EAAO6B,YACtBxM,EAAQwM,YAAc7B,EAAO6B,YATL,UAUlBzQ,EAAOgH,aAAa/C,GAVF,QAWxBgM,GAAU,yBAA0B,WACpCwY,GAA2BnoB,EAAMC,GACjC4J,EAASiH,GAAgC,IAbjB,kDAexBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAjBwB,0DAAH,sDAsBZ6T,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,iBAAD,KAAyB,KACxCrG,EAASqG,aAAO,iBAAD,cAAkC,KAH1B,2CAAH,qDAMTmY,GAAqB,uCAAG,oCAAAla,EAAA,sDAC3BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWkN,OAAOqL,mBAC/Bze,EAASqG,aAAO,iBAAD,eAAyBvT,EAAKI,UAA9B,QAAoC,KACnD8M,EAASqG,aAAO,iBAAD,wBAAkCvT,EAAK0P,YAAvC,QAA+C,KAJ3B,2CAAH,qDAOrB8b,GAA0B,uCAAG,WACxCnoB,EACAC,GAFwC,mCAAAkO,EAAA,6DAGxCjO,EAHwC,+BAG9B,GACVqoB,EAJwC,kDAOf7oB,EAAO6G,cAAcvG,EAAMC,EAAOC,GAPnB,gBAO9BvD,EAP8B,EAO9BA,MACFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UAC7BsN,EACFze,GAAMD,SAASke,GAA0BprB,EAAK+N,SAAS/N,OAEvDmN,GAAMD,SAASie,GAAkBnrB,EAAK+N,SAAS/N,OAEjDmN,GAAMD,SAASme,GAAgBhN,IAjBO,kDAmBtCve,QAAQC,IAAR,MAnBsC,0DAAH,wDAuB1B8rB,GAAmB,uCAAG,WAAOroB,EAAMmO,GAAb,eAAAH,EAAA,sDAC3BtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACFioB,GAAmB9Z,GAEnB2P,GAAoB3P,IAGxBpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAf+B,2CAAH,wDAmBnB4sB,GAAqB,uCAAG,WAAO9mB,GAAP,eAAAwM,EAAA,sDAC7BtS,EAAuB,CAC3BC,KAAM,WACJgrB,GAAsBnlB,IAExBzF,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXiC,2CAAH,sDC/JrBiT,GAAe,CAC1B+S,WAAY,GACZ6G,mBAAoB,GACpBC,iBAAkB,GAClBL,mBAAoB,GACpB3J,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,GAEb/a,QAAS,ICGJ,IAAM4O,GAAe,CAC1B8Z,4BAA6B,GAC7BC,uBAAwB,GACxBC,qBAAsB,GACtBC,6BAA8B,GAC9BC,+BAAgC,GAChCC,6BAA8B,GAC9BC,iCAAkC,GAClCC,uBAAwB,GACxBC,yBAA0B,GAC1BC,yBAA0B,GAC1BC,wBAAyB,GACzBC,iBAAiB,EACjBC,sBAAsB,EACtBC,kBAAkB,EAClBC,kBAAkB,EAClBC,kBAAkB,EAClB5S,gBAAiB,MACjBiC,oBAAqB,GACrB4Q,aAAc,gBCnCT,IAAMC,GAA2B,qBAC3Bza,GAAkB,kBAClB0a,GAA6B,6BAC7BC,GAA+B,+BAC/BC,GAAwB,wBAExBC,GAAuB,SAACtmB,GACnC,MAAO,CACLxD,KAAM0pB,GACNlmB,YAISumB,GAAqB,SAACvmB,GACjC,MAAO,CACLxD,KAAM6pB,GACNrmB,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAISwmB,GAAyB,SAACxmB,GACrC,MAAO,CACLxD,KAAM2pB,GACNnmB,YAISymB,GAA2B,SAACzmB,GACvC,MAAO,CACLxD,KAAM4pB,GACNpmB,YAIS0mB,GAA6B,uCAAG,WAC3CrqB,EACAC,GAF2C,qCAAAkO,EAAA,6DAG3CjO,EAH2C,+BAGjC,GAEF6P,EAAajG,GAAbiG,SACF/L,EAAS+L,IAAWsG,MAAMgQ,gBANW,kBAQlB3mB,EAAOuF,iBAC5BjF,EACAC,EACA+D,EACA9D,GAZuC,uBAQjCvD,EARiC,EAQjCA,MAMFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAASogB,GAAqBttB,EAAK+N,SAAS/N,OAClDmN,GAAMD,SAASqgB,GAAmBlP,IAnBO,UAoBnClR,GAAMD,SAASiH,GAAkC,IApBd,2EAsBnChH,GAAMD,SAASiH,GAAkC,IAtBd,QAuBzCrU,QAAQC,IAAR,MAvByC,0DAAH,wDA2BpC4tB,GAAsB,uCAAG,WAAOhc,GAAP,yCAAAH,EAAA,6DACrBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SAClBlG,EAASiH,GAAkC,IACrCkK,EAASjL,IAAWwa,WAAWvP,OAC/BhX,EAAS+L,IAAWsG,MAAMgQ,gBACxBrmB,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MALe,UAOrB0D,EAAU,IACR6mB,QAAUxmB,EAClBL,EAAQ0I,KAAOiC,EAAOjC,KACtB1I,EAAQ8mB,aAAR,UAAuBnc,EAAO6B,mBAA9B,QAA6C,OAC7CxM,EAAQ+mB,cAAR,UAAwBpc,EAAOqc,oBAA/B,QAA+C,GAC/ChnB,EAAQinB,WAAR,UAAqBtc,EAAOuc,iBAA5B,QAAyC,GACzClnB,EAAQmnB,aAAR,UAAuBxc,EAAOyc,mBAA9B,QAA6C,GAC7CpnB,EAAQqnB,UAAR,UAAoB1c,EAAO2c,gBAA3B,QAAuC,GACvCtnB,EAAQunB,UAAR,UAAoB5c,EAAO6c,gBAA3B,QAAuC,GACvCxnB,EAAQynB,gBAAR,UAA0B9c,EAAO+c,sBAAjC,QAAmD,GAhBxB,UAkBrB3rB,EAAO6F,aAAa5B,GAlBC,QAmB3BgM,GAAU,yBAA0B,WACpC0a,GAA8BrqB,EAAMC,GACpC4J,EAASiH,GAAgC,IACzCjH,EAASiH,GAAkC,IAtBhB,kDAwB3BnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCjH,EAASiH,GAAkC,IAE3CrU,QAAQC,IAAI,WAAZ,MA5B2B,0DAAH,sDAgCtB4uB,GAAuB,uCAAG,WAAOhd,GAAP,uCAAAH,EAAA,6DAC9BrE,GAAMD,SAASiH,GAAkC,IACzCjH,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWwa,WAAWvP,OAC7Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAJgB,UAMtB0D,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ6mB,QAAUlc,EAAOtK,OACzBL,EAAQ0I,KAAOiC,EAAOjC,KACtB1I,EAAQ8mB,aAAR,UAAuBnc,EAAO6B,mBAA9B,QAA6C,OAC7CxM,EAAQ+mB,cAAR,UAAwBpc,EAAOqc,oBAA/B,QAA+C,GAC/ChnB,EAAQinB,WAAR,UAAqBtc,EAAOuc,iBAA5B,QAAyC,GACzClnB,EAAQmnB,aAAR,UAAuBxc,EAAOyc,mBAA9B,QAA6C,GAC7CpnB,EAAQqnB,UAAR,UAAoB1c,EAAO2c,gBAA3B,QAAuC,GACvCtnB,EAAQunB,UAAR,UAAoB5c,EAAO6c,gBAA3B,QAAuC,GACvCxnB,EAAQynB,gBAAR,UAA0B9c,EAAO+c,sBAAjC,QAAmD,GAhBvB,UAkBtB3rB,EAAO8F,gBAAgB7B,GAlBD,QAmB5BgM,GAAU,yBAA0B,WACpC0a,GAA8BrqB,EAAMC,GACpC6J,GAAMD,SAASiH,GAAkC,IACjDjH,EAASiH,GAAgC,IAtBb,kDAwB5BnB,GAAU,yBAA0B,SACpC7F,GAAMD,SAASiH,GAAkC,IACjDjH,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MA3B4B,0DAAH,sDA+BvB6uB,GAAyB,uCAAG,WAAOlnB,GAAP,qBAAA8J,EAAA,6DACxB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWwa,WAAWvP,OAC7Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHkB,kBAKxBP,EAAO+F,oBAAoBpB,GALH,OAM9BsL,GAAU,wBAAyB,WACnC0a,GAA8BrqB,EAAMC,GAPN,kDAS9B0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAV8B,0DAAH,sDAclB8uB,GAAuB,uCAAG,WAAOrrB,EAAMmO,GAAb,eAAAH,EAAA,sDAC/BtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACFmqB,GAAuBhc,GAEvBgd,GAAwBhd,IAG5BpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAfmC,2CAAH,wDAmBvB4vB,GAAwB,uCAAG,WAAOpnB,GAAP,eAAA8J,EAAA,sDAChCtS,EAAuB,CAC3BC,KAAM,WACJyvB,GAA0BlnB,IAE5BnI,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXoC,2CAAH,sDAexB6vB,GAAwB,uCAAG,oDAAAvd,EAAA,sDAC9BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWwa,WAAWoB,uBAEnC9hB,EAASqG,aAAO,oBAAD,eAA4BvT,EAAKI,UAAjC,QAAuC,KACtD8M,EAASqG,aAAO,oBAAD,mBAAgCvT,EAAK6tB,eAArC,QAAgD,KAC/D3gB,EAASqG,aAAO,oBAAD,iBAA8BvT,EAAK0P,YAAnC,QAA2C,KAC1DxC,EAASqG,aAAO,oBAAD,wBAAqCvT,EAAK8tB,oBAA1C,QAA0D,KACzE5gB,EACEqG,aAAO,oBAAD,yBAAsCvT,EAAK+tB,qBAA3C,QAA4D,KAEpE7gB,EAASqG,aAAO,oBAAD,sBAAmCvT,EAAKiuB,kBAAxC,QAAsD,KACrE/gB,EAASqG,aAAO,oBAAD,wBAAqCvT,EAAKmuB,oBAA1C,QAA0D,KACzEjhB,EAASqG,aAAO,oBAAD,qBAAkCvT,EAAKquB,iBAAvC,QAAoD,KACnEnhB,EAASqG,aAAO,oBAAD,qBAAkCvT,EAAKuuB,iBAAvC,QAAoD,KACnErhB,EACEqG,aAAO,oBAAD,2BAAwCvT,EAAKyuB,uBAA7C,QAAgE,KAhBlC,4CAAH,qDAoBxB7a,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,oBAAD,KAA4B,KAC3CrG,EAASqG,aAAO,oBAAD,SAAgC,KAC/CrG,EAASqG,aAAO,oBAAD,OAA8B,KAC7CrG,EAASqG,aAAO,oBAAD,cAAqC,KACpDrG,EAASqG,aAAO,oBAAD,eAAsC,KACrDrG,EAASqG,aAAO,oBAAD,YAAmC,KAClDrG,EAASqG,aAAO,oBAAD,cAAqC,KACpDrG,EAASqG,aAAO,oBAAD,WAAkC,KACjDrG,EAASqG,aAAO,oBAAD,WAAkC,KACjDrG,EAASqG,aAAO,oBAAD,iBAAwC,KAXhC,4CAAH,qDCtMTpB,GAAe,CAC1B8c,eAAgB,GAChBC,qBAAsB,GACtBF,uBAAwB,GACxBhN,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,I,eCPF6Q,GAAsB,sBAS7BC,GAA0B,uCAAG,WAAO3rB,EAAYD,GAAnB,uBAAAgO,EAAA,6DACzB4B,EAAajG,GAAbiG,SAEK,aAAT5P,GACMojB,EAAkBxT,IAAW6R,UAA7B2B,cACRyI,EAAWzI,EAAcrS,QAAO,SAACC,GAAD,OAAOA,EAAEpU,KAAOqD,OAExCse,EAA0B3O,IAAWoN,UAArCuB,sBACRsN,EAAWtN,EAAsBxN,QAAO,SAACC,GAAD,OAAOA,EAAEpU,KAAOqD,MARzB,4BAU1B4rB,EAAS,UAViB,QAUX,IAVW,2CAAH,wDAa1BC,GAA0B,uCAAG,WAAO7oB,GAAP,qBAAA+K,EAAA,6DACzB4B,EAAajG,GAAbiG,SACAkV,EAAiBlV,IAAWmc,QAA5BjH,aACFna,EAASma,EAAa/T,QAAO,SAACC,GAAD,OAAOA,EAAEpU,KAAOqG,KAHlB,4BAI1B0H,EAAO,UAJmB,QAIb,IAJa,2CAAH,sDAOnBqhB,GAAwB,uCAAG,WAAOnoB,EAAQooB,GAAf,qBAAAje,EAAA,6DAC9BtE,EAAaC,GAAbD,SAD8B,SAEfnK,EAAOuF,iBAAiB,EAAG,IAAKjB,EAAQ,IAFzB,gBAE9BrH,EAF8B,EAE9BA,KAERkN,EACEqG,aACE,sBADI,gBAEKkc,EAFL,6BAGJzvB,EAAK+N,SAAS/N,YAHV,QAGkB,KARY,2CAAH,wDAaxB+kB,GAAuB,uCAAG,WACrCthB,EACAisB,GAFqC,2CAAAle,EAAA,+FASnCrE,GAAMD,SACJqG,aAAO,sBAAD,oBAAqCmc,EAArC,SAA2D,KAEnEviB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,yBAGJ,KAGJviB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,0BAGJ,KAGJviB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,4BAGJ,KAGJviB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,sBAGJ,KAGJviB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,wBAGJ,MA5C+B,kBAkDRN,GACzB3rB,EACA,YApDiC,cAkD7BksB,EAlD6B,gBAsDRL,GACzBK,EAAa9O,aAvDoB,cAsD7B+O,EAtD6B,iBA0DZ7sB,EAAOyD,YAAY,EAAG,IAAKmpB,EAAa9O,aA1D5B,SA0D7BgP,EA1D6B,QA4DtB7vB,KAAK+N,SAAS/N,KAAKiU,OAAS,IAAI,EACpB4b,EAAS7vB,KAAK+N,SAAS/N,KAAKuU,QACjD,SAACC,GAAD,OAAOA,EAAEpU,KAAOuvB,EAAa7O,WAFW,oBACnCgP,EADmC,KAI1CC,EAAeD,GAIjB3iB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,mBAGJC,EAAapK,WAHT,QAGgB,KAGxBpY,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,mCAGJC,EAAa5O,aAHT,QAGkB,KAG1B5T,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,0BAGJE,EAAalgB,OAGjBvC,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,4BAGJE,IAGJziB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,sBAGJK,EAAargB,OAGjBvC,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,wBAGJK,IA3G+B,kDAkHnCjwB,QAAQC,IAAI,iBACZD,QAAQC,IAAR,MAnHmC,0DAAH,wDAuHvBiwB,GAAuB,uCAAG,WAAOzrB,GAAP,yCAAAiN,EAAA,oHAKnCrE,GAAMD,SAASqG,aAAO,sBAAuB,sBAAuB,KACpEpG,GAAMD,SAASqG,aAAO,sBAAuB,cAAe,KAC5DpG,GAAMD,SAASqG,aAAO,sBAAuB,kBAAmB,KAChEpG,GAAMD,SAASqG,aAAO,sBAAuB,iBAAkB,KAC/DpG,GAAMD,SAASqG,aAAO,sBAAuB,uBAAwB,KACrEpG,GAAMD,SAASqG,aAAO,sBAAuB,yBAA0B,KACvEpG,GAAMD,SAASqG,aAAO,sBAAuB,mBAAoB,KACjEpG,GAAMD,SAASqG,aAAO,sBAAuB,qBAAsB,KAZhC,sDAiBP6b,GAC1B7qB,EACA,aAnBiC,eAiB7B0rB,EAjB6B,iBAqBRX,GACzBW,EAAcpP,aAtBmB,eAqB7B+O,EArB6B,iBAyBZ7sB,EAAOyD,YAC5B,EACA,IACAypB,EAAcpP,aA5BmB,SAyB7BgP,EAzB6B,QA+BtB7vB,KAAK+N,SAAS/N,KAAKiU,OAAS,IAAI,EACpB4b,EAAS7vB,KAAK+N,SAAS/N,KAAKuU,QACjD,SAACC,GAAD,OAAOA,EAAEpU,KAAO6vB,EAAcnP,WAFU,oBACnCgP,EADmC,KAI1CC,EAAeD,GAIjB3iB,GAAMD,SACJqG,aACE,sBACA,sBAFI,UAGJ0c,EAAclP,aAHV,QAGmB,KAG3B5T,GAAMD,SACJqG,aAAO,sBAAuB,cAAe0c,EAAc/O,MAE7D/T,GAAMD,SACJqG,aAAO,sBAAuB,kBAAmB0c,EAAc5O,UAEjElU,GAAMD,SACJqG,aAAO,sBAAuB,iBAAkB0c,EAAc9O,YAEhEhU,GAAMD,SACJqG,aAAO,sBAAuB,uBAAwBqc,EAAalgB,OAErEvC,GAAMD,SACJqG,aAAO,sBAAuB,yBAA0Bqc,IAE1DziB,GAAMD,SACJqG,aAAO,sBAAuB,mBAAoBwc,EAAargB,OAEjEvC,GAAMD,SACJqG,aAAO,sBAAuB,qBAAsBwc,IAjEnB,mDAoEnCjwB,QAAQC,IAAI,iBACZD,QAAQC,IAAR,MArEmC,2DAAH,sDA2FvBmwB,GAAgB,uCAAG,WAAOve,GAAP,+BAAAH,EAAA,uDACtBtE,EAAaC,GAAbD,UACCF,GAAqB,IACxBmjB,EAAkBxe,EAAOye,SAASpc,MAAM,KACxCqc,EAAc1e,EAAOgN,YAAY3K,MAAM,KACvCsc,EAAgB3e,EAAOkH,SAAS7E,MAAM,KACxCiR,EAAY,GAEhBtT,EAAOsT,UAAU1V,KAAI,SAACC,EAAMC,GAC1B,IAAM8gB,EAAkB/gB,EAAK2I,SAASnE,MAAM,KAC5CiR,EAAU3X,KAAK,CACb4K,YAAaqY,EAAgB,GAC7BvY,OAAQ,YAINwY,EAAW,GACjB7e,EAAO+H,MAAMnK,KAAI,SAACC,EAAMC,GACtB,IAAMghB,EAAiBjhB,EAAK9H,YAAYsM,MAAM,KAC9Cwc,EAASljB,KAAK,CACZojB,cAAeD,EAAe,QAI5BzpB,EAAU,CACd2pB,YAAaR,EAAgB,GAC7BS,YAAaC,eACbC,kBAAmB,KACnBttB,KAAM6sB,EAAY,GAClBxwB,OAAQ6O,EAAa,GAAGJ,MACxB6M,YAAa,OACb9b,SAAQ,UAAEsS,EAAOof,wBAAT,QAA6B,GACrChY,MAAOC,KAAOrH,EAAOsH,WAAWC,OAAO,cACvCC,IAAKH,KAAOrH,EAAOkJ,SAAS3B,OAAO,cACnCG,YAAa1H,EAAO2H,WACpBT,SAAUyX,EAAc,GACxB/W,eAAgB,GAChBC,cAAe,GACfE,MAAK,OAAE8W,QAAF,IAAEA,IAAY,GACnBvL,UAAWA,GAGb,IACQ+L,EAA4B,kBAChC,IAAIlvB,SAAQ,SAACC,EAASI,GACpBY,EAAO4D,mBAAmBK,GACvB8K,MAAK,WACJC,YAAW,WACT7E,EAASF,GAAqB,IAC9BE,EAAS+jB,aAAM,wBACflvB,MACC,KACHgQ,YAAW,WACT3E,EAAS,kBACR,SAEJ4E,OAAM,WACLD,WAAW5P,EAAQ,KACnB+K,EAASF,GAAqB,WAGtCrM,IAAMuwB,QAAQF,EAA2B,CACvCG,QAAS,2BACTle,QAAS,sCACTtT,MAAO,sDAET,MAAOA,GACPG,QAAQC,IAAIJ,GACZuN,EAASF,GAAqB,IApEF,4CAAH,sDCnQhBmF,GAAe,CAC1Bif,cAAe,ICMV,IAAMC,GAAgC,gCAChC5e,GAAkB,kBAClB6e,GAAiC,iCACjCC,GAA4B,4BAC5BC,GACX,mCAEWC,GAA4B,SAACzqB,GACxC,MAAO,CACLxD,KAAM6tB,GACNrqB,YAWS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAIS0qB,GAA8B,SAAC1qB,GAC1C,MAAO,CACLxD,KAAM8tB,GACNtqB,YAIS2qB,GAAgC,SAAC3qB,GAC5C,MAAO,CACLxD,KAAMguB,GACNxqB,YAIS4qB,GAA8B,uCAAG,WAC5CvuB,EACAC,GAF4C,yCAAAkO,EAAA,6DAG5CjO,EAH4C,+BAGlC,GAEF6P,EAAuBjG,GAAvBiG,SAAUlG,EAAaC,GAAbD,SAL0B,SAOpC2kB,EAAWze,IAAWkN,OAAO4E,WAPO,SAQnBniB,EAAOqI,sBAAsB/H,EAAMC,EAAOC,GARvB,gBAQlCvD,EARkC,EAQlCA,KACF8xB,EAAqB9xB,EAAK+N,SAAS/N,KAEnC+xB,EAAwB,GAC1BD,EAAmB7d,OAAS,GAC9B6d,EAAmBviB,KAAI,SAACC,EAAMC,GAC5B,MAAwBoiB,EAAStd,QAAO,SAACC,GAAD,OAAOA,EAAEpU,KAAOoP,EAAKoR,aAAtDuE,EAAP,qBACA3V,EAAKoS,YAAcuD,EAAgBA,EAAczV,KAAO,IAExDqiB,EAAsBzkB,KAAKkC,MAI/BtC,EAASukB,GAA0BM,IArBO,kDAuB1CjyB,QAAQC,IAAR,MAvB0C,0DAAH,wDA4BrCiyB,GAA6B,uCAAG,WAAOhtB,GAAP,qBAAAwM,EAAA,6DAC5B4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAW6e,eAAe5T,OACjChb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHsB,kBAK5BP,EAAOyI,yBAAyBxG,GALJ,OAMlCgO,GAAU,wBAAyB,WACnC4e,GAA+BvuB,EAAMC,GAPH,kDASlC0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAVkC,0DAAH,sDAc7BmyB,GAA0B,uCAAG,WAAOvgB,GAAP,mCAAAH,EAAA,6DACzBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAW6e,eAAe5T,OACjChb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHmB,SAKzB6uB,EAAgBxgB,EAAOye,SAASpc,MAAM,KACtCyS,EAAc9U,EAAO2O,OAAOtM,MAAM,KAClCoe,EAAgBzgB,EAAOtS,SAAS2U,MAAM,KACtCqe,EAAe1gB,EAAO2gB,QAAQte,MAAM,KACpCue,EAAY5gB,EAAOnO,KAAKwQ,MAAM,MAE9BhN,EAAU,IACR2pB,YAAcwB,EAAc,GACpCnrB,EAAQ4Z,UAAY6F,EAAY,GAChCzf,EAAQ3H,SAAW+yB,EAAc,GACjCprB,EAAQxD,KAAO+uB,EAAU,GACzBvrB,EAAQnH,OAAS6O,EAAa,GAAGJ,MACjCtH,EAAQsrB,QAAUD,EAAa,GAjBA,UAmBzBtvB,EAAOsI,kBAAkBrE,GAnBA,QAoB/BgM,GAAU,yBAA0B,WACpC4e,GAA+BvuB,EAAMC,GACrC4J,EAASiH,GAAgC,IAtBV,kDAwB/BnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MA1B+B,0DAAH,sDA8B1ByyB,GAA6B,uCAAG,WAAO7gB,EAAQ8gB,GAAf,uEAAAjhB,EAAA,6DACLrE,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAW6e,eAAe5T,OACjChb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHsB,SAK5BmI,EAAmB2H,IAAW6e,eAAeS,yBAC7CC,EAAqBhhB,EAAOihB,aAE9BjhB,EAAOihB,aAAa5e,MAAM,KAD1B,GAEE6e,EAAsBlhB,EAAOmhB,cAE/BnhB,EAAOmhB,cAAc9e,MAAM,KAD3B,GAEE+e,EAAaphB,EAAOgP,KAAR,UAAoBhP,EAAOgP,KAAK3M,MAAM,YAAtC,QAA8C,GAA/B,GAC3Bgf,EAAiBrhB,EAAO8O,SAAR,UAElB9O,EAAO8O,SAASzM,MAAM,YAFJ,QAEY,GAD9B,GAGEif,EAAc,GAChBthB,EAAOuhB,cAAgBvhB,EAAOuhB,aAAajf,OAAS,GACtDtC,EAAOuhB,aAAa3jB,KAAI,SAACC,EAAMC,GAC7B,IAAMiE,EAAUlE,EAAK2jB,KACrBzf,EAAQ0f,eAAiB5jB,EAAKpP,GAC9B6yB,EAAY3lB,KAAKoG,MAIf1M,EAAU,CACd8pB,kBAAmBrlB,EACnB4nB,cAAeV,EAAkB,GACjCW,cAAa,UAAE3hB,EAAO4hB,oBAAT,QAAyB,GACtC7jB,KAAI,UAAEiC,EAAO6hB,oBAAT,QAAyB,GAC7BC,SAAQ,UAAE9hB,EAAO8hB,gBAAT,QAAqB,GAC7B5zB,OAAM,UAAEgzB,EAAmB,UAArB,QAA2B,GACjClS,KAAI,UAAEoS,EAAU,UAAZ,QAAkB,GACtBtS,SAAQ,UAAEuS,EAAc,UAAhB,QAAsB,GAC9BjS,MAAK,UAAEpP,EAAOoP,aAAT,QAAkB,GACvB2S,iBAAgB,UAAE/hB,EAAOgiB,uBAAT,QAA4B,GAC5CC,6BAA4B,UAAEjiB,EAAOkiB,iCAAT,QAAsC,GAClEC,eAAc,UAAEniB,EAAOoiB,qBAAT,QAA0B,GACxCC,sBAAqB,UAAEriB,EAAOqiB,6BAAT,QAAkC,GACvDC,qBAAoB,UAAEtiB,EAAOsiB,4BAAT,QAAiC,GACrDC,MAAK,UAAEviB,EAAOwiB,YAAT,QAAiB,GACtBjB,aAAcD,EACdmB,iBAAgB,UAAEziB,EAAOyiB,wBAAT,QAA6B,GAC7CC,8BAA6B,UAAE1iB,EAAO0iB,qCAAT,QAA0C,GACvEC,6BAA4B,UAAE3iB,EAAO2iB,oCAAT,QAAyC,IAGnE7B,IACFzf,GAAU,sBAAuB,WACjCjB,YAAW,WACT3E,EAAS,oBACR,MApD6B,UAuD5BrK,EAAOuI,4BAA4BtE,GAvDP,QAyDlC4qB,GAA+BvuB,EAAMC,GAzDH,kDA2DlC0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MA5DkC,0DAAH,wDAgE7Bw0B,GAA6B,uCAAG,WAAO5iB,EAAQ6iB,GAAf,6DAAAhjB,EAAA,yDACLrE,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAW6e,eAAe5T,OACjChb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHsB,SAK7BqO,QAAqB1S,IAAX0S,EALmB,wDAU5BlG,EAAmB2H,IAAW6e,eAAeS,yBAC7CC,EAX4B,OAWRhhB,QAXQ,IAWRA,OAXQ,EAWRA,EAAQihB,aAAa5e,MAAM,KAC/C6e,EAAqBlhB,EAAOmhB,cAAP,OACvBnhB,QADuB,IACvBA,OADuB,EACvBA,EAAQmhB,cAAc9e,MAAM,KAC5B,CAAC,IACC+e,EAf4B,OAehBphB,QAfgB,IAehBA,OAfgB,EAehBA,EAAQgP,KAAK3M,MAAM,KAC/Bgf,EAhB4B,OAgBZrhB,QAhBY,IAgBZA,OAhBY,EAgBZA,EAAQ8O,SAASzM,MAAM,KAEvCif,EAAc,GAChBthB,EAAOuhB,cAAgBvhB,EAAOuhB,aAAajf,OAAS,GACtDtC,EAAOuhB,aAAa3jB,KAAI,SAACC,EAAMC,GAC7B,IAAMiE,EAAUlE,EAAK2jB,KACrBzf,EAAQ0f,eAAiB5jB,EAAKpP,GAC9B6yB,EAAY3lB,KAAKoG,MAIf1M,EAAU,CACd8pB,kBAAmBrlB,EACnB4nB,cAAa,UAAEV,EAAkB,UAApB,QAA0B,GACvCW,cAAa,UAAE3hB,EAAO4hB,oBAAT,QAAyB,GACtCkB,iBAAgB,UAAE9iB,EAAO+iB,uBAAT,QAA4B,GAC5ChlB,KAAI,UAAEiC,EAAO6hB,oBAAT,QAAyB,GAC7BC,SAAQ,UAAE9hB,EAAO8hB,gBAAT,QAAqB,GAC7B5zB,OAAQgzB,EAAmB,GAC3B8B,iBAAkB,GAClBC,aAAY,UAAE7B,EAAU,UAAZ,QAAkB,GAC9B8B,iBAAgB,UAAE7B,EAAc,UAAhB,QAAsB,GACtC8B,oBAAmB,UAAEnjB,EAAOojB,iBAAT,QAAsB,GACzCC,oBAAmB,UAAErjB,EAAOsjB,kBAAT,QAAuB,GAC1ClU,MAAK,UAAEpP,EAAOujB,2BAAT,QAAgC,GACrCC,aAAcxjB,EAAOyjB,YACrBC,SAAU,aACVC,gBAAiB,aACjBvH,cAAe,SACfwH,eAAgB,UAChBC,eAAgB,SAChBC,qBAAsB,OACtBC,kBAAmB,UACnBC,WAAY,KACZ3B,sBAAuB,WACvBC,qBAAsB,WACtBC,MAAO,8BACPE,iBAAgB,UAAEziB,EAAOyiB,wBAAT,QAA6B,GAC7CC,8BAA6B,UAAE1iB,EAAO0iB,qCAAT,QAA0C,GACvEC,6BAA4B,UAAE3iB,EAAO2iB,oCAAT,QAAyC,IAvDrC,UA2D5BvxB,EAAOwI,4BAA4BvE,GA3DP,QA4D9BwtB,IACFxhB,GAAU,yBAA0B,WACpC4e,GAA+BvuB,EAAMC,GACrC8J,EAAS,oBA/DuB,kDAkElC4F,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAnEkC,0DAAH,wDAwEtB6T,GAAS,uCAAG,sBAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACC+jB,aAAM,4BAFQ,2CAAH,qDAYT2E,GAA2B,uCAAG,WACzCpyB,EACAmO,GAFyC,+BAAAH,EAAA,sDAGzCihB,EAHyC,gCAKjCrf,EAAajG,GAAbiG,SACFyiB,EACJziB,IAAW6e,eAAe6D,2BAA2BxD,QAE1C,QAAT9uB,EACF0uB,GAA2BvgB,GAEvBkkB,EACFrD,GAA8B7gB,EAAQ8gB,GAEtC8B,GAA8B5iB,EAAQ8gB,GAfD,2CAAH,wDAoB3BsD,GAA6B,uCAAG,WAAOtqB,GAAP,eAAA+F,EAAA,sDACrCtS,EAAuB,CAC3BC,KAAM,WACJ6yB,GAA8BvmB,IAEhClM,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXyC,2CAAH,sDC3R7BiT,GAAe,CAC1B6jB,mBAAoB,GACpBtD,yBAA0B,GAC1BoD,2BAA4B,GAC5B9T,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICTR,IAAM2X,GAAwB,wBACxBxjB,GAAkB,kBAClByjB,GAA0B,0BAC1BC,GAA4B,4BAC5BC,GAA0B,0BAE1BC,GAAqB,SAACrvB,GACjC,MAAO,CACLxD,KAAMyyB,GACNjvB,YAISsvB,GAAuB,SAACtvB,GACnC,MAAO,CACLxD,KAAM4yB,GACNpvB,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAISuvB,GAAuB,SAACvvB,GACnC,MAAO,CACLxD,KAAM0yB,GACNlvB,YAISwvB,GAAyB,SAACxvB,GACrC,MAAO,CACLxD,KAAM2yB,GACNnvB,YAKEyvB,GAAsB,uCAAG,WAAOhsB,GAAP,qBAAA+G,EAAA,6DACrB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWkN,OAAOjC,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHe,kBAKrBP,EAAOyH,aAAaC,GALC,OAM3BuI,GAAU,wBAAyB,WACnC0jB,GAA4BrzB,EAAMC,GAPP,kDAS3B0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAV2B,0DAAH,sDActB42B,GAAmB,uCAAG,WAAOhlB,GAAP,yBAAAH,EAAA,6DAClB4B,EAAuBjG,GAAvBiG,SAAUlG,EAAaC,GAAbD,SACZmR,EAASjL,IAAWkN,OAAOjC,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHY,UAKlB0D,EAAU,IACR0I,KAAOiC,EAAOjC,KACtB1I,EAAQwM,YAAc7B,EAAO6B,YAPL,SAQlBzQ,EAAOuH,UAAUtD,GARC,OASxBgM,GAAU,yBAA0B,WACpC0jB,GAA4BrzB,EAAMC,GAClC4J,EAASiH,GAAgC,IAXjB,kDAaxBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAfwB,0DAAH,sDAmBnB62B,GAAoB,uCAAG,WAAOjlB,GAAP,yBAAAH,EAAA,6DACnB4B,EAAuBjG,GAAvBiG,SAAUlG,EAAaC,GAAbD,SACZmR,EAASjL,IAAWkN,OAAOjC,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHa,UAKnB0D,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ0I,KAAOiC,EAAOjC,KACtB1I,EAAQwM,YAAc7B,EAAO6B,YARJ,UASnBzQ,EAAOwH,aAAavD,GATD,QAUzBgM,GAAU,yBAA0B,WACpC0jB,GAA4BrzB,EAAMC,GAClC4J,EAASiH,GAAgC,IAZhB,kDAczBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAhByB,0DAAH,sDAqBb6T,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,+BAAD,OAAyC,KACxDrG,EAASqG,aAAO,+BAAD,cAAgD,KAHxC,2CAAH,qDAMTsjB,GAAsB,uCAAG,sCAAArlB,EAAA,sDAC5BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAW0jB,qBAAqBC,oBAC7C7pB,EAASqG,aAAO,+BAAD,eAAuCvT,EAAKI,UAA5C,QAAkD,KACjE8M,EAASqG,aAAO,+BAAD,iBAAyCvT,EAAK0P,YAA9C,QAAsD,KACrExC,EACEqG,aACE,+BADI,wBAGJvT,EAAKwT,mBAHD,QAGgB,KATY,2CAAH,qDActBkjB,GAA2B,uCAAG,WACzCrzB,EACAC,GAFyC,iCAAAkO,EAAA,6DAGzCjO,EAHyC,+BAG/B,GAH+B,kBAMhBR,EAAOsH,cAAchH,EAAMC,EAAOC,GANlB,gBAM/BvD,EAN+B,EAM/BA,MACFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAASmpB,GAAmBr2B,EAAK+N,SAAS/N,OAChDmN,GAAMD,SAASopB,GAAqBjY,IAZG,kDAcvCve,QAAQC,IAAR,MAduC,0DAAH,wDAkB3Bi3B,GAAoB,uCAAG,WAAOxzB,EAAMmO,GAAb,eAAAH,EAAA,sDAC5BtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACFmzB,GAAoBhlB,GAEpBilB,GAAqBjlB,IAGzBpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAfgC,2CAAH,wDAmBpB+3B,GAAsB,uCAAG,WAAOxsB,GAAP,eAAA+G,EAAA,sDAC9BtS,EAAuB,CAC3BC,KAAM,WACJs3B,GAAuBhsB,IAEzBlL,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXkC,2CAAH,sDCxJtBiT,GAAe,CAC1B+kB,YAAa,GACbC,kBAAmB,GACnBJ,oBAAqB,GACrB/U,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICTR,IAAM8Y,GAAsB,sBACtB3kB,GAAkB,kBAClB4kB,GAAwB,wBACxBC,GAA0B,0BAC1BC,GAAmB,mBAEnBC,GAAmB,SAACxwB,GAC/B,MAAO,CACLxD,KAAM4zB,GACNpwB,YAISywB,GAAiB,SAACzwB,GAC7B,MAAO,CACLxD,KAAM+zB,GACNvwB,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAIS0wB,GAAqB,SAAC1wB,GACjC,MAAO,CACLxD,KAAM6zB,GACNrwB,YAIS2wB,GAAuB,SAAC3wB,GACnC,MAAO,CACLxD,KAAM8zB,GACNtwB,YAKE4wB,GAAoB,uCAAG,WAAOC,GAAP,qBAAArmB,EAAA,6DACnB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWsU,MAAMrJ,OACxBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHa,kBAKnBP,EAAO8H,WAAWgtB,GALC,OAMzB7kB,GAAU,wBAAyB,WACnC8kB,GAA0Bz0B,EAAMC,GAPP,kDASzB0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAVyB,0DAAH,sDAcpBg4B,GAAiB,uCAAG,WAAOpmB,GAAP,2BAAAH,EAAA,6DAChBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWsU,MAAMrJ,OACxBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHU,UAKhB0D,EAAU,IACR0I,KAAOiC,EAAOjC,KACtB1I,EAAQwM,YAAR,UAAsB7B,EAAO6B,mBAA7B,QAA4C,OAPtB,SAQhBzQ,EAAO4H,QAAQ3D,GARC,OAStBgM,GAAU,yBAA0B,WACpC8kB,GAA0Bz0B,EAAMC,GAChC4J,EAASiH,GAAgC,IAXnB,kDAatBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAfsB,0DAAH,sDAmBjBi4B,GAAkB,uCAAG,WAAOrmB,GAAP,2BAAAH,EAAA,6DACjBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWsU,MAAMrJ,OACxBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHW,UAKjB0D,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ0I,KAAOiC,EAAOjC,KACtB1I,EAAQwM,YAAR,UAAsB7B,EAAO6B,mBAA7B,QAA4C,OARrB,UASjBzQ,EAAO6H,WAAW5D,GATD,QAUvBgM,GAAU,yBAA0B,WACpC8kB,GAA0Bz0B,EAAMC,GAChC4J,EAASiH,GAAgC,IAZlB,kDAcvBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAhBuB,0DAAH,sDAqBX6T,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,gBAAD,KAAwB,KACvCrG,EAASqG,aAAO,gBAAD,OAA0B,KACzCrG,EAASqG,aAAO,gBAAD,cAAiC,KAJzB,2CAAH,qDAOT0kB,GAAoB,uCAAG,sCAAAzmB,EAAA,sDAC1BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWsU,MAAMwQ,kBAC9BhrB,EAASqG,aAAO,gBAAD,eAAwBvT,EAAKI,UAA7B,QAAmC,KAClD8M,EAASqG,aAAO,gBAAD,iBAA0BvT,EAAK0P,YAA/B,QAAuC,KACtDxC,EAASqG,aAAO,gBAAD,wBAAiCvT,EAAKwT,mBAAtC,QAAqD,KALlC,2CAAH,qDAQpBskB,GAAyB,uCAAG,WAAOz0B,EAAMC,GAAb,iCAAAkO,EAAA,6DAAoBjO,EAApB,+BAA8B,GAA9B,kBAEdR,EAAO2H,aAAarH,EAAMC,EAAOC,GAFnB,gBAE7BvD,EAF6B,EAE7BA,MACFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAASsqB,GAAiBx3B,EAAK+N,SAAS/N,OAC9CmN,GAAMD,SAASuqB,GAAepZ,IARO,kDAUrCve,QAAQC,IAAR,MAVqC,0DAAH,wDAczBo4B,GAAkB,uCAAG,WAAO30B,EAAMmO,GAAb,eAAAH,EAAA,sDAC1BtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACFu0B,GAAkBpmB,GAElBqmB,GAAmBrmB,IAGvBpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAf8B,2CAAH,wDAmBlBk5B,GAAoB,uCAAG,WAAOpzB,GAAP,eAAAwM,EAAA,sDAC5BtS,EAAuB,CAC3BC,KAAM,WACJy4B,GAAqB5yB,IAEvBzF,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXgC,2CAAH,sDC/IpBiT,GAAe,CAC1BkmB,UAAW,GACXC,gBAAiB,GACjBJ,kBAAmB,GACnBlW,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICTR,IAAMia,GAA8B,8BAC9B9lB,GAAkB,kBAClB+lB,GAAgC,yBAChCC,GAAkC,2BAClCC,GAA2B,2BAE3BC,GAA0B,SAAC3xB,GACtC,MAAO,CACLxD,KAAM+0B,GACNvxB,YAIS4xB,GAAwB,SAAC5xB,GACpC,MAAO,CACLxD,KAAMk1B,GACN1xB,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAIS6xB,GAA4B,SAAC7xB,GACxC,MAAO,CACLxD,KAAMg1B,GACNxxB,YAIS8xB,GAA8B,SAAC9xB,GAC1C,MAAO,CACLxD,KAAMi1B,GACNzxB,YAKE+xB,GAA2B,uCAAG,WAAO5tB,GAAP,qBAAAqG,EAAA,6DAC1B4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWkN,OAAOjC,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHoB,kBAK1BP,EAAOmI,mBAAmBC,GALA,OAMhC6H,GAAU,wBAAyB,WACnCgmB,GAAiC31B,EAAMC,GAPP,kDAShC0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAVgC,0DAAH,sDAc3Bk5B,GAAwB,uCAAG,WAAOtnB,GAAP,2BAAAH,EAAA,6DACvBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWkN,OAAOjC,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHiB,UAKvB0D,EAAU,IACR0I,KAAOiC,EAAOjC,KACtB1I,EAAQwM,YAAR,UAAsB7B,EAAO6B,mBAA7B,QAA4C,OAPf,SAQvBzQ,EAAOiI,gBAAgBhE,GARA,OAS7BgM,GAAU,yBAA0B,WACpCgmB,GAAiC31B,EAAMC,GACvC4J,EAASiH,GAAgC,IAXZ,kDAa7BnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAf6B,0DAAH,sDAmBxBm5B,GAAyB,uCAAG,WAAOvnB,GAAP,2BAAAH,EAAA,6DACxBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWkN,OAAOjC,OACzBhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHkB,UAKxB0D,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ0I,KAAOiC,EAAOjC,KACtB1I,EAAQwM,YAAR,UAAsB7B,EAAO6B,mBAA7B,QAA4C,QARd,UASxBzQ,EAAOkI,mBAAmBjE,GATF,QAU9BgM,GAAU,yBAA0B,WACpCgmB,GAAiC31B,EAAMC,GACvC4J,EAASiH,GAAgC,IAZX,kDAc9BnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAhB8B,0DAAH,sDAqBlB6T,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,mBAAD,KAA2B,KAC1CrG,EAASqG,aAAO,mBAAD,OAA6B,KAC5CrG,EAASqG,aAAO,mBAAD,cAAoC,KAJ5B,2CAAH,qDAOT4lB,GAAuB,uCAAG,sCAAA3nB,EAAA,sDAC7BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWgmB,aAAaC,yBACrCnsB,EAASqG,aAAO,mBAAD,eAA2BvT,EAAKI,UAAhC,QAAsC,KACrD8M,EAASqG,aAAO,mBAAD,iBAA6BvT,EAAK0P,YAAlC,QAA0C,KACzDxC,EAASqG,aAAO,mBAAD,wBAAoCvT,EAAKwT,mBAAzC,QAAwD,KALlC,2CAAH,qDAQvBwlB,GAAgC,uCAAG,WAC9C31B,EACAC,GAF8C,iCAAAkO,EAAA,6DAG9CjO,EAH8C,+BAGpC,GAHoC,kBAMrBR,EAAOgI,gBAAgB1H,EAAMC,EAAOC,GANf,gBAMpCvD,EANoC,EAMpCA,MACFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAASyrB,GAAwB34B,EAAK+N,SAAS/N,OACrDmN,GAAMD,SAAS0rB,GAAsBva,IAZO,kDAc5Cve,QAAQC,IAAR,MAd4C,0DAAH,wDAkBhCu5B,GAAyB,uCAAG,WAAO91B,EAAMmO,GAAb,eAAAH,EAAA,sDACjCtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACFy1B,GAAyBtnB,GAEzBunB,GAA0BvnB,IAG9BpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAfqC,2CAAH,wDAmBzBq6B,GAA2B,uCAAG,WAAOC,GAAP,eAAAhoB,EAAA,sDACnCtS,EAAuB,CAC3BC,KAAM,WACJ45B,GAA4BS,IAE9Bj6B,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXuC,2CAAH,sDCnJ3BiT,GAAe,CAC1BsnB,iBAAkB,GAClBC,uBAAwB,GACxBL,yBAA0B,GAC1BrX,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICTR,IAAMqb,GAA4B,4BAC5BlnB,GAAkB,kBAClBmnB,GAA8B,8BAC9BC,GAAgC,gCAChCC,GAAyB,yBAEzBC,GAAwB,SAAC/yB,GACpC,MAAO,CACLxD,KAAMm2B,GACN3yB,YAISgzB,GAAsB,SAAChzB,GAClC,MAAO,CACLxD,KAAMs2B,GACN9yB,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAISizB,GAA0B,SAACjzB,GACtC,MAAO,CACLxD,KAAMo2B,GACN5yB,YAISkzB,GAA4B,SAAClzB,GACxC,MAAO,CACLxD,KAAMq2B,GACN7yB,YAISmzB,GAA8B,uCAAG,WAC5C92B,EACAC,GAF4C,qCAAAkO,EAAA,6DAG5CjO,EAH4C,+BAGlC,GAEF6P,EAAajG,GAAbiG,SACF/L,EAAS+L,IAAWsG,MAAMgQ,gBANY,kBAQnB3mB,EAAOgG,kBAC5B1F,EACAC,EACA+D,EACA9D,GAZwC,gBAQlCvD,EARkC,EAQlCA,MAMFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAAS6sB,GAAsB/5B,EAAK+N,SAAS/N,OACnDmN,GAAMD,SAAS8sB,GAAoB3b,IAnBO,kDAqB1Cve,QAAQC,IAAR,MArB0C,0DAAH,wDAyBrCq6B,GAAsB,uCAAG,WAAOzoB,GAAP,qCAAAH,EAAA,6DACrBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWinB,WAAWhc,OAC/BhX,EAAS+L,IAAWsG,MAAMgQ,gBACxBrmB,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MACRg3B,EAAsB3oB,EAAOynB,aAAaplB,MAAM,KAChDumB,EAAiB5oB,EAAO6oB,QAAQxmB,MAAM,KANf,UASrBhN,EAAU,IACR6mB,QAAUxmB,EAClBL,EAAQ0I,KAAOiC,EAAO8oB,UACtBzzB,EAAQ8mB,aAAR,UAAuBnc,EAAO6B,mBAA9B,QAA6C,OAC7CxM,EAAQ0zB,iBAAR,UAA2BJ,EAAoB,UAA/C,QAAqD,GACrDtzB,EAAQ4pB,YAAR,UAAsB2J,EAAe,UAArC,QAA2C,GAdhB,UAgBrBx3B,EAAOmG,cAAclC,GAhBA,QAiB3BgM,GAAU,yBAA0B,WACpCmnB,GAA+B92B,EAAMC,GACrC4J,EAASiH,GAAgC,IAnBd,kDAqB3BnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAvB2B,0DAAH,sDA2BtB46B,GAAuB,uCAAG,WAAOhpB,GAAP,qCAAAH,EAAA,6DAC9BrE,GAAMD,SAASiH,GAAkC,IACzCjH,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWinB,WAAWhc,OAC/BhX,EAAS+L,IAAWsG,MAAMgQ,gBACxBrmB,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MACRg3B,EAAsB3oB,EAAOynB,aAAaplB,MAAM,KAChDumB,EAAiB5oB,EAAO6oB,QAAQxmB,MAAM,KAPd,UAStBhN,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ6mB,QAAUxmB,EAClBL,EAAQ0I,KAAOiC,EAAO8oB,UACtBzzB,EAAQ8mB,aAAR,UAAuBnc,EAAO6B,mBAA9B,QAA6C,OAC7CxM,EAAQ0zB,iBAAR,UAA2BJ,EAAoB,UAA/C,QAAqD,GACrDtzB,EAAQ4pB,YAAR,UAAsB2J,EAAe,UAArC,QAA2C,GAff,UAiBtBx3B,EAAOoG,iBAAiBnC,GAjBF,QAkB5BgM,GAAU,yBAA0B,WACpCmnB,GAA+B92B,EAAMC,GACrC6J,GAAMD,SAASiH,GAAkC,IACjDjH,EAASiH,GAAgC,IArBb,kDAuB5BnB,GAAU,yBAA0B,SACpC7F,GAAMD,SAASiH,GAAkC,IACjDjH,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MA1B4B,0DAAH,sDA8BvB66B,GAAyB,uCAAG,WAAOC,GAAP,qBAAArpB,EAAA,6DACxB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWinB,WAAWhc,OAC7Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHkB,kBAKxBP,EAAOqG,qBAAqByxB,GALJ,OAM9B7nB,GAAU,wBAAyB,WACnCmnB,GAA+B92B,EAAMC,GAPP,kDAS9B0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAV8B,0DAAH,sDAclB+6B,GAAuB,uCAAG,WAAOt3B,EAAMmO,GAAb,eAAAH,EAAA,sDAC/BtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACF42B,GAAuBzoB,GAEvBgpB,GAAwBhpB,IAG5BpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAfmC,2CAAH,wDAmBvB67B,GAAwB,uCAAG,WAAOF,GAAP,eAAArpB,EAAA,sDAChCtS,EAAuB,CAC3BC,KAAM,WACJy7B,GAA0BC,IAE5Bt7B,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXoC,2CAAH,sDAexB87B,GAAwB,uCAAG,4CAAAxpB,EAAA,sDAC9BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWinB,WAAWY,uBAEnC/tB,EAASqG,aAAO,qBAAD,eAA6BvT,EAAKI,UAAlC,QAAwC,KACvD8M,EAASqG,aAAO,qBAAD,mBAAiCvT,EAAK6tB,eAAtC,QAAiD,KAChE3gB,EAASqG,aAAO,qBAAD,sBAAoCvT,EAAK0P,YAAzC,QAAiD,KAChExC,EACEqG,aAAO,qBAAD,wBAAsCvT,EAAK8tB,oBAA3C,QAA2D,KAEnE5gB,EACEqG,aACE,qBADI,8BAGDvT,EAAK4wB,YAHJ,YAGmB5wB,EAAKk7B,sBAHxB,QAG2C,KAGnDhuB,EACEqG,aACE,qBADI,mCAGDvT,EAAK06B,iBAHJ,YAGwB16B,EAAKm7B,2BAH7B,QAGqD,KArBvB,2CAAH,qDA0BxBvnB,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,qBAAD,KAA6B,KAC5CrG,EAASqG,aAAO,qBAAD,SAAiC,KAChDrG,EAASqG,aAAO,qBAAD,YAAoC,KACnDrG,EAASqG,aAAO,qBAAD,cAAsC,KACrDrG,EAASqG,aAAO,qBAAD,UAAkC,KACjDrG,EAASqG,aAAO,qBAAD,eAAuC,KAP/B,2CAAH,qDCpMTpB,GAAe,CAC1BipB,eAAgB,GAChBC,qBAAsB,GACtBJ,uBAAwB,GACxBjZ,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICZR,IAAMgd,GACX,oCACWC,GAAiC,iCACjC9oB,GAAkB,kBAElB+oB,GAAgC,SAACx0B,GAC5C,MAAO,CACLxD,KAAM83B,GACNt0B,YAISy0B,GAA8B,SAACz0B,GAC1C,MAAO,CACLxD,KAAM+3B,GACNv0B,YAWS00B,GAAsC,uCAAG,kEAAAlqB,EAAA,6DACpDnO,EADoD,+BAC7C,EACPC,EAFoD,+BAE5C,OACRC,EAHoD,+BAG1C,GACVC,EAJoD,+BAI7C,MACPwB,EALoD,+BAKzC,GACXiH,EANoD,+BAM7C+M,OAASE,OAAO,cAAc9J,WACrClD,EAPoD,+BAO5C8M,OAASE,OAAO,cAAc9J,WAE9BgE,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWuoB,mBAAmBtd,OACrCC,EAAcD,EAAdC,UAX4C,oBAa3Bvb,EAAOiJ,4BAC5B3I,EACAC,EACA2I,EACAC,EACA1I,EACAD,EACAyB,GApBgD,iBAa1ChF,EAb0C,EAa1CA,MASFqe,EAAS,IACRhb,KAAOA,EACdgb,EAAO/a,MAAQA,EACf+a,EAAOC,UAAYA,EAEbsd,EAA4B,GAE9B57B,EAAKuC,QAAQ0R,OAAS,GACxBjU,EAAKuC,QAAQgN,KAAI,SAACC,EAAMC,GACtBD,EAAKxP,KAAKuP,KAAI,SAACssB,EAAUC,GACvBF,EAA0BtuB,KAA1B,aACEyuB,aAAcvsB,EAAKwsB,MAChBH,UAMX1uB,GAAMD,SACJsuB,GAA6B,OAACI,QAAD,IAACA,IAA6B,KAE7DzuB,GAAMD,SAASuuB,GAA4Bpd,IA3CO,mDA6ClDve,QAAQC,IAAR,MA7CkD,2DAAH,qDAiDtCye,GAAY,uCAAG,WAAO7M,EAAQsqB,GAAf,6CAAAzqB,EAAA,yDAClB4B,EAAajG,GAAbiG,SADkB,EAEFA,IAAWuoB,mBAAmBtd,OAA9Chb,EAFkB,EAElBA,KAAMC,EAFY,EAEZA,MACR6hB,EAAgB/R,IAAW8oB,KAAK9pB,WAAWpN,SAE5C2M,EALqB,qBAMpBsqB,EANoB,iCAOhBP,GACJr4B,EACAC,EACA,GACA,MACA6hB,GAZoB,0DAgBhBuW,GAAuCr4B,EAAMC,GAhB7B,iDAqBpBivB,EAAY5gB,EAAOnO,KAAOmO,EAAOnO,KAAKwQ,MAAM,KAAO,GACnDzQ,EAtBoB,UAsBVoO,EAAOpO,eAtBG,QAsBQ,GAC5BkjB,EAAc9U,EAAO2O,OAAS3O,EAAO2O,OAAOtM,MAAM,KAAO,GACzDiF,EAxBoB,UAwBRD,KAAOrH,EAAOsH,WAAWC,OAAO,qBAxBxB,QAwByC,GAC7D2B,EAzBoB,UAyBV7B,KAAOrH,EAAOkJ,SAAS3B,OAAO,qBAzBpB,QAyBqC,GAEzD1V,EAAOmO,EAAOnO,KAAO+uB,EAAU,GAAK,MACpC4J,EAAiBxqB,EAAO2O,OAASmG,EAAY,GAAK,GAClDnG,EAAS2b,EAAU9W,EAAgBgX,EA7Bf,oBAgClBT,GACJr4B,EACAC,EACAC,EACAC,EACA8c,EACArH,EACA4B,GAvCsB,2DA0CxB/a,QAAQC,IAAR,MA1CwB,2DAAH,wDCzEZoS,GAAe,CAC1BiqB,uBAAwB,GACxBpa,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,UACPgb,UAAW,ICRR,IAAM+d,GAA+B,oCAC/BC,GAA4B,iCAC5B7pB,GAAkB,kBAElB8pB,GAA2B,SAACv1B,GACvC,MAAO,CACLxD,KAAM64B,GACNr1B,YAISw1B,GAAyB,SAACx1B,GACrC,MAAO,CACLxD,KAAM84B,GACNt1B,YAWSy1B,GAAiC,uCAAG,gEAAAjrB,EAAA,6DAC/CnO,EAD+C,+BACxC,EACPC,EAF+C,+BAEvC,OACRC,EAH+C,+BAGrC,GACVyB,EAJ+C,+BAIpC,GACXiH,EAL+C,+BAKxC+M,OAASE,OAAO,cAAc9J,WACrClD,EAN+C,+BAMvC8M,OAASE,OAAO,cAAc9J,WAE9BgE,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWspB,cAAcre,OAChCC,EAAcD,EAAdC,UAVuC,mBAYtBvb,EAAOoJ,uBAC5B9I,EACAC,EACA2I,EACAC,EACA3I,EACAyB,GAlB2C,iBAYrChF,EAZqC,EAYrCA,MAQFqe,EAAS,IACRhb,KAAOA,EACdgb,EAAO/a,MAAQA,EACf+a,EAAOC,UAAYA,EAEbqe,EAAuB,GAEzB38B,EAAK+N,SAASkG,OAAS,GACzBjU,EAAK+N,SAASwB,KAAI,SAACC,EAAMC,GACvBktB,EAAqBrvB,KAArB,eACKkC,OAKTrC,GAAMD,SAASqvB,GAAwB,OAACI,QAAD,IAACA,IAAwB,KAChExvB,GAAMD,SAASsvB,GAAuBne,IApCO,kDAsC7Cve,QAAQC,IAAR,MAtC6C,0DAAH,qDA0CjCye,GAAY,uCAAG,WAAO7M,EAAQsqB,GAAf,yCAAAzqB,EAAA,yDAClB4B,EAAajG,GAAbiG,SADkB,EAEFA,IAAWspB,cAAcre,OAAzChb,EAFkB,EAElBA,KAAMC,EAFY,EAEZA,MACR6hB,EAAgB/R,IAAW8oB,KAAK9pB,WAAWpN,SAK5C2M,EARqB,qBASpBsqB,EAToB,iCAUhBQ,GACJp5B,EACAC,EACA,GACA,MACA6hB,GAfoB,0DAmBhBsX,GAAkCp5B,EAAMC,GAnBxB,iDAwBpBC,EAxBoB,UAwBVoO,EAAOpO,eAxBG,QAwBQ,GAC5BkjB,EAAc9U,EAAO2O,OAAS3O,EAAO2O,OAAOtM,MAAM,KAAO,GACzDiF,EA1BoB,UA0BRD,KAAOrH,EAAOsH,WAAWC,OAAO,qBA1BxB,QA0ByC,GAC7D2B,EA3BoB,UA2BV7B,KAAOrH,EAAOkJ,SAAS3B,OAAO,qBA3BpB,QA2BqC,GAEzDijB,EAAiBxqB,EAAO2O,OAASmG,EAAY,GAAK,GAClDnG,EAAS2b,EAAU9W,EAAgBgX,EA9Bf,oBAiClBM,GACJp5B,EACAC,EACAC,EACA+c,EACArH,EACA4B,GAvCsB,2DA0CxB/a,QAAQC,IAAR,MA1CwB,2DAAH,wDCjEZoS,GAAe,CAC1ByqB,kBAAmB,GACnB5a,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,UACPgb,UAAW,ICRR,IAAMue,GAAgC,gCAChCC,GAA6B,6BAC7BrqB,GAAkB,kBAElBsqB,GAA4B,SAAC/1B,GACxC,MAAO,CACLxD,KAAMq5B,GACN71B,YAISg2B,GAA0B,SAACh2B,GACtC,MAAO,CACLxD,KAAMs5B,GACN91B,YAWSi2B,GAA8B,uCAAG,gEAAAzrB,EAAA,6DAC5CnO,EAD4C,+BACrC,EACPC,EAF4C,+BAEpC,OACRC,EAH4C,+BAGlC,GACVyB,EAJ4C,+BAIjC,GACXiH,EAL4C,+BAKrC+M,OAASE,OAAO,cAAc9J,WACrClD,EAN4C,+BAMpC8M,OAASE,OAAO,cAAc9J,WAE9BgE,EAAajG,GAAbiG,SACFiL,EAASjL,IAAW8pB,eAAe7e,OACjCC,EAAcD,EAAdC,UAVoC,mBAYnBvb,EAAOqJ,kBAC5B/I,EACAC,EACA2I,EACAC,EACA3I,EACAyB,GAlBwC,iBAYlChF,EAZkC,EAYlCA,MAQFqe,EAAS,IACRhb,KAAOA,EACdgb,EAAO/a,MAAQA,EACf+a,EAAOC,UAAYA,EAEb6e,EAAoB,GAEtBn9B,EAAK+N,SAASkG,OAAS,GACzBjU,EAAK+N,SAASwB,KAAI,SAACC,EAAMC,GACvBD,EAAKxP,KAAKuP,KAAI,SAACssB,EAAUC,GACvBqB,EAAkB7vB,KAAlB,eACKuuB,UAMX1uB,GAAMD,SAAS6vB,GAAyB,OAACI,QAAD,IAACA,IAAqB,KAC9DhwB,GAAMD,SAAS8vB,GAAwB3e,IAtCG,kDAwC1Cve,QAAQC,IAAR,MAxC0C,0DAAH,qDA4C9Bye,GAAY,uCAAG,WAAO7M,EAAQsqB,GAAf,yCAAAzqB,EAAA,yDAClB4B,EAAajG,GAAbiG,SADkB,EAEFA,IAAW8pB,eAAe7e,OAA1Chb,EAFkB,EAElBA,KAAMC,EAFY,EAEZA,MACR6hB,EAAgB/R,IAAW8oB,KAAK9pB,WAAWpN,SAE5C2M,EALqB,qBAMpBsqB,EANoB,iCAOhBgB,GAA+B55B,EAAMC,EAAO,GAAI6hB,GAPhC,0DAUhB8X,GAA+B55B,EAAMC,GAVrB,iDAepBC,EAfoB,UAeVoO,EAAOpO,eAfG,QAeQ,GAC5BkjB,EAAc9U,EAAO2O,OAAS3O,EAAO2O,OAAOtM,MAAM,KAAO,GACzDiF,EAjBoB,UAiBRD,KAAOrH,EAAOsH,WAAWC,OAAO,qBAjBxB,QAiByC,GAC7D2B,EAlBoB,UAkBV7B,KAAOrH,EAAOkJ,SAAS3B,OAAO,qBAlBpB,QAkBqC,GAEzDijB,EAAiBxqB,EAAO2O,OAASmG,EAAY,GAAK,GAClDnG,EAAS2b,EAAU9W,EAAgBgX,EArBf,oBAwBlBc,GACJ55B,EACAC,EACAC,EACA+c,EACArH,EACA4B,GA9BsB,2DAiCxB/a,QAAQC,IAAR,MAjCwB,2DAAH,wDClEZoS,GAAe,CAC1BirB,mBAAoB,GACpBpb,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,UACPgb,UAAW,ICNR,IAAM+e,GAAyB,yBACzB5qB,GAAkB,kBAClB6qB,GAA2B,2BAC3BC,GAA6B,6BAC7BC,GAAsB,sBAEtBC,GAAsB,SAACz2B,GAClC,MAAO,CACLxD,KAAM65B,GACNr2B,YAIS02B,GAAoB,SAAC12B,GAChC,MAAO,CACLxD,KAAMg6B,GACNx2B,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAIS22B,GAAwB,SAAC32B,GACpC,MAAO,CACLxD,KAAM85B,GACNt2B,YAIS42B,GAA0B,SAAC52B,GACtC,MAAO,CACLxD,KAAM+5B,GACNv2B,YAKE62B,GAAuB,uCAAG,WAAOt4B,GAAP,qBAAAiM,EAAA,6DACtB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWuT,SAAStI,OAC3Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHgB,kBAKtBP,EAAO8I,eAAetG,GALA,OAM5ByN,GAAU,wBAAyB,WACnC8qB,GAA6Bz6B,EAAMC,GAPP,kDAS5B0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAV4B,0DAAH,sDAcvBg+B,GAAoB,uCAAG,WAAOpsB,GAAP,6BAAAH,EAAA,6DACnBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWuT,SAAStI,OAC3Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MACR06B,EAAersB,EAAOqsB,aAAahqB,MAAM,KAJpB,UAOnBhN,EAAU,IACRkR,YAAc8lB,EAAa,GACnCh3B,EAAQ8T,MAAQnJ,EAAOmJ,MACvB9T,EAAQwM,YAAR,UAAsB7B,EAAO6B,mBAA7B,QAA4C,OAVnB,UAWnBzQ,EAAO4I,YAAY3E,GAXA,QAYzBgM,GAAU,yBAA0B,WACpC8qB,GAA6Bz6B,EAAMC,GACnC4J,EAASiH,GAAgC,IAdhB,kDAgBzBnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAlByB,0DAAH,sDAsBpBk+B,GAAqB,uCAAG,WAAOtsB,GAAP,6BAAAH,EAAA,6DAC5BrE,GAAMD,SAASiH,GAAkC,IACzCjH,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWuT,SAAStI,OAC3Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MACR06B,EAAersB,EAAOqsB,aAAahqB,MAAM,KALnB,UAQpBhN,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ8T,MAAQnJ,EAAOmJ,MACvB9T,EAAQkR,YAAc8lB,EAAa,GACnCh3B,EAAQwM,YAAR,UAAsB7B,EAAO6B,mBAA7B,QAA4C,OAZlB,UAapBzQ,EAAO6I,eAAe5E,GAbF,QAc1BgM,GAAU,yBAA0B,WACpC8qB,GAA6Bz6B,EAAMC,GACnC6J,GAAMD,SAASiH,GAAkC,IACjDjH,EAASiH,GAAgC,IAjBf,kDAmB1BnB,GAAU,yBAA0B,SACpC7F,GAAMD,SAASiH,GAAkC,IACjDjH,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAtB0B,0DAAH,sDA2Bd6T,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,mBAAD,KAA2B,KAC1CrG,EAASqG,aAAO,mBAAD,QAA8B,KAC7CrG,EAASqG,aAAO,mBAAD,cAAoC,KACnDrG,EAASqG,aAAO,mBAAD,eAAqC,KAL7B,2CAAH,qDAQT2qB,GAAuB,uCAAG,sCAAA1sB,EAAA,sDAC7BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWuT,SAASwX,qBAEjCjxB,EAASqG,aAAO,mBAAD,eAA2BvT,EAAKI,UAAhC,QAAsC,KACrD8M,EAASqG,aAAO,mBAAD,kBAA8BvT,EAAK8a,aAAnC,QAA4C,KAC3D5N,EAASqG,aAAO,mBAAD,wBAAoCvT,EAAKwT,mBAAzC,QAAwD,KACvEtG,EACEqG,aACE,mBADI,yBAGDvT,EAAKkY,YAHJ,YAGmBlY,EAAKo+B,iBAXK,2CAAH,qDAgBvBN,GAA4B,uCAAG,WAC1Cz6B,EACAC,GAF0C,iCAAAkO,EAAA,6DAG1CjO,EAH0C,+BAGhC,GAHgC,kBAMjBR,EAAO2I,gBAAgBrI,EAAMC,EAAOC,GANnB,gBAMhCvD,EANgC,EAMhCA,MACFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAASuwB,GAAoBz9B,EAAK+N,SAAS/N,OACjDmN,GAAMD,SAASwwB,GAAkBrf,IAZO,kDAcxCve,QAAQC,IAAR,MAdwC,0DAAH,wDAkB5Bs+B,GAAqB,uCAAG,WAAO76B,EAAMmO,GAAb,eAAAH,EAAA,sDAC7BtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACFu6B,GAAqBpsB,GAErBssB,GAAsBtsB,IAG1BpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAfiC,2CAAH,wDAmBrBo/B,GAAuB,uCAAG,WAAO/4B,GAAP,eAAAiM,EAAA,sDAC/BtS,EAAuB,CAC3BC,KAAM,WACJ0+B,GAAwBt4B,IAE1BhG,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXmC,2CAAH,sDCrKvBiT,GAAe,CAC1BosB,aAAc,GACdC,mBAAoB,GACpBL,qBAAsB,GACtBnc,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICTR,IAAMmgB,GAA8B,8BAC9BhsB,GAAkB,kBAClBisB,GAAgC,gCAChCC,GACX,kCACWC,GAA2B,2BAE3BC,GAA0B,SAAC73B,GACtC,MAAO,CACLxD,KAAMi7B,GACNz3B,YAIS83B,GAAwB,SAAC93B,GACpC,MAAO,CACLxD,KAAMo7B,GACN53B,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAIS+3B,GAA2B,SAAC/3B,GACvC,MAAO,CACLxD,KAAMk7B,GACN13B,YAISg4B,GAA8B,SAACh4B,GAC1C,MAAO,CACLxD,KAAMm7B,GACN33B,YAISi4B,GAA4B,uCAAG,WAC1C57B,EACAC,GAF0C,qCAAAkO,EAAA,6DAG1CjO,EAH0C,+BAGhC,GAEF6P,EAAajG,GAAbiG,SACF7N,EAAa6N,IAAWuT,SAAS6X,mBANG,kBAQjBz7B,EAAO+I,oBAC5BvG,EACAlC,EACAC,EACAC,GAZsC,gBAQhCvD,EARgC,EAQhCA,MAMFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAAS2xB,GAAwB7+B,EAAK+N,SAAS/N,OACrDmN,GAAMD,SAAS4xB,GAAsBzgB,IAnBG,kDAqBxCve,QAAQC,IAAR,MArBwC,0DAAH,wDAyBnCm/B,GAAwB,uCAAG,WAAOvtB,GAAP,6BAAAH,EAAA,6DACvBtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAW+rB,aAAa9gB,OACjC9Y,EAAa6N,IAAWuT,SAAS6X,mBAC/Bn7B,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MACR87B,EAAcztB,EAAOiK,KAAK5H,MAAM,KALP,UAQvBhN,EAAU,IACR6mB,QAAUuR,EAAY,GAC9Bp4B,EAAQq4B,YAAc95B,EAVO,UAYvBxC,EAAOgJ,gBAAgB/E,GAZA,QAa7BgM,GAAU,yBAA0B,WACpCisB,GAA6B57B,EAAMC,GACnC4J,EAASiH,GAAgC,IAfZ,kDAiB7BnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MAnB6B,0DAAH,sDAuBxBu/B,GAAyB,uCAAG,WAAO3tB,GAAP,qCAAAH,EAAA,6DAChCrE,GAAMD,SAASiH,GAAkC,IACzCjH,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAW+rB,aAAa9gB,OACjChX,EAAS+L,IAAWuT,SAAS+C,gBAC3BrmB,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MACRg3B,EAAsB3oB,EAAOynB,aAAaplB,MAAM,KAChDumB,EAAiB5oB,EAAO6oB,QAAQxmB,MAAM,KAPZ,UASxBhN,EAAU,IACR5G,GAAKuR,EAAOvR,GACpB4G,EAAQ6mB,QAAUxmB,EAClBL,EAAQ0I,KAAOiC,EAAO8oB,UACtBzzB,EAAQ8mB,aAAR,UAAuBnc,EAAO6B,mBAA9B,QAA6C,OAC7CxM,EAAQ0zB,iBAAR,UAA2BJ,EAAoB,UAA/C,QAAqD,GACrDtzB,EAAQ4pB,YAAR,UAAsB2J,EAAe,UAArC,QAA2C,GAfb,UAiBxBx3B,EAAOoG,iBAAiBnC,GAjBA,QAkB9BgM,GAAU,yBAA0B,WACpCisB,GAA6B57B,EAAMC,GACnC6J,GAAMD,SAASiH,GAAkC,IACjDjH,EAASiH,GAAgC,IArBX,kDAuB9BnB,GAAU,yBAA0B,SACpC7F,GAAMD,SAASiH,GAAkC,IACjDjH,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MA1B8B,0DAAH,sDA8BzB66B,GAAyB,uCAAG,WAAOC,GAAP,qBAAArpB,EAAA,6DACxB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWinB,WAAWhc,OAC7Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAHkB,kBAKxBP,EAAOqG,qBAAqByxB,GALJ,OAM9B7nB,GAAU,wBAAyB,WACnCisB,GAA6B57B,EAAMC,GAPL,kDAS9B0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAV8B,0DAAH,sDAclBw/B,GAAyB,uCAAG,WAAO/7B,EAAMmO,GAAb,eAAAH,EAAA,sDACjCtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACF07B,GAAyBvtB,GAEzB2tB,GAA0B3tB,IAG9BpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAfqC,2CAAH,wDAmBzB67B,GAAwB,uCAAG,WAAOF,GAAP,eAAArpB,EAAA,sDAChCtS,EAAuB,CAC3BC,KAAM,WACJy7B,GAA0BC,IAE5Bt7B,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXoC,2CAAH,sDAexB87B,GAAwB,uCAAG,4CAAAxpB,EAAA,sDAC9BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWinB,WAAWY,uBAEnC/tB,EAASqG,aAAO,qBAAD,eAA6BvT,EAAKI,UAAlC,QAAwC,KACvD8M,EAASqG,aAAO,qBAAD,mBAAiCvT,EAAK6tB,eAAtC,QAAiD,KAChE3gB,EAASqG,aAAO,qBAAD,sBAAoCvT,EAAK0P,YAAzC,QAAiD,KAChExC,EACEqG,aAAO,qBAAD,wBAAsCvT,EAAK8tB,oBAA3C,QAA2D,KAEnE5gB,EACEqG,aACE,qBADI,8BAGDvT,EAAK4wB,YAHJ,YAGmB5wB,EAAKk7B,sBAHxB,QAG2C,KAGnDhuB,EACEqG,aACE,qBADI,mCAGDvT,EAAK06B,iBAHJ,YAGwB16B,EAAKm7B,2BAH7B,QAGqD,KArBvB,2CAAH,qDA0BxBvnB,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,qBAAD,KAA6B,KAC5CrG,EAASqG,aAAO,qBAAD,SAAiC,KAChDrG,EAASqG,aAAO,qBAAD,YAAoC,KACnDrG,EAASqG,aAAO,qBAAD,cAAsC,KACrDrG,EAASqG,aAAO,qBAAD,UAAkC,KACjDrG,EAASqG,aAAO,qBAAD,eAAuC,KAP/B,2CAAH,qDCjMTpB,GAAe,CAC1BqtB,iBAAkB,GAClBC,uBAAwB,GACxBC,yBAA0B,GAC1B1d,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICbR,IAAMqhB,GAAqB,qBASrBj5B,GAAwB,uCAAG,gCAAA8K,EAAA,sEAE5BtE,EAAaC,GAAbD,SAF4B,SAGbnK,EAAO2D,2BAHM,gBAG5B1G,EAH4B,EAG5BA,KACRkN,GAX6BlG,EAWHhH,EAAK+N,SAV1B,CACLvK,KAAMm8B,GACN34B,aAIoC,gDAMpClH,QAAQC,IAAI,WAAZ,MANoC,kCAPR,IAACiH,IAOO,oBAAH,qDCVxBmL,GAAe,CAC1BytB,cAAe,ICKV,IAAMntB,GAAkB,kBAClBotB,GAA8B,8BAC9BC,GACX,qCACWzS,GAAwB,wBACxB0S,GACX,uCAEWC,GAA0B,SAACh5B,GACtC,MAAO,CACLxD,KAAMq8B,GACN74B,YAISumB,GAAqB,SAACvmB,GACjC,MAAO,CACLxD,KAAM6pB,GACNrmB,YAIS6L,GAAgB,SAAC7L,GAC5B,MAAO,CACLxD,KAAMiP,GACNzL,YAISi5B,GAAgC,SAACj5B,GAC5C,MAAO,CACLxD,KAAMs8B,GACN94B,YAISk5B,GAAkC,SAACl5B,GAC9C,MAAO,CACLxD,KAAMu8B,GACN/4B,YA+BS2B,GAAmB,uCAAG,WACjCtF,EACAC,GAFiC,uCAAAkO,EAAA,yDAGjCjO,EAHiC,+BAGvB,GACVgB,EAJiC,8CAQ/B4I,GAAMD,SAAS8yB,GAAwB,KARR,iCAYzB5sB,EAAajG,GAAbiG,SACF1L,EAAc0L,IAAWwa,WAAWsB,qBAbT,mBAeRnsB,EAAO4F,oBAC5BtF,EACAC,EACAC,EACAmE,EACAnD,GApB6B,wBAevBvE,EAfuB,EAevBA,MAOFqe,EAAS,IACRhb,KAAOrD,EAAK+N,SAAS1K,KAC5Bgb,EAAO/a,MAAQtD,EAAK+N,SAASzK,MAC7B+a,EAAOC,UAAYte,EAAK+N,SAASuQ,UACjCnR,GAAMD,SAAS8yB,GAAwBhgC,EAAK+N,SAAS/N,OACrDmN,GAAMD,SAASqgB,GAAmBlP,IA3BH,UA4BzBlR,GAAMD,SAASiH,GAAkC,IA5BxB,2EA8BzBhH,GAAMD,SAASiH,GAAkC,IA9BxB,QA+B/BrU,QAAQC,IAAR,MA/B+B,0DAAH,wDAmC1BogC,GAA4B,uCAAG,WAAOxuB,GAAP,+BAAAH,EAAA,6DAC3BtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SAClBlG,EAASiH,GAAkC,IACrCkK,EAASjL,IAAWwa,WAAWvP,OAC/B3W,EAAc0L,IAAWwa,WAAWsB,qBACpC3qB,EAAaoN,EAAOye,SAASpc,MAAM,KACjC3Q,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MANqB,UAQ3B0D,EAAU,IACR2pB,YAAcpsB,EAAW,GACjCyC,EAAQ+mB,cAAgBpc,EAAOqc,aAC/BhnB,EAAQ8mB,aAAR,UAAuBnc,EAAO6B,mBAA9B,QAA6C,OAXZ,UAa3BzQ,EAAOwF,oBAAoBvB,EAASU,GAbT,QAcjCsL,GAAU,yBAA0B,WACpCrK,GAAoBtF,EAAMC,GAC1B4J,EAASiH,GAAgC,IACzCjH,EAASiH,GAAkC,IAjBV,kDAmBjCnB,GAAU,yBAA0B,SACpC9F,EAASiH,GAAgC,IACzCjH,EAASiH,GAAkC,IAE3CrU,QAAQC,IAAI,WAAZ,MAvBiC,0DAAH,sDA2B5BqgC,GAA6B,uCAAG,WAAOzuB,GAAP,+BAAAH,EAAA,6DACpCrE,GAAMD,SAASiH,GAAkC,IACzCjH,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZiL,EAASjL,IAAWwa,WAAWvP,OAC7Bhb,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MACRoE,EAAc0L,IAAWwa,WAAWsB,qBACpCzmB,EACJ2K,IAAWitB,iBAAiBC,2BAPM,UAU5Bt5B,EAAU,IACR+mB,cAAgBpc,EAAOqc,aAC/BhnB,EAAQ8mB,aAAR,UAAuBnc,EAAOmc,oBAA9B,QAA8C,OAZZ,UAc5B/qB,EAAOyF,uBACXxB,EACAU,EACAe,GAjBgC,QAmBlCuK,GAAU,yBAA0B,WACpCrK,GAAoBtF,EAAMC,GAC1B6J,GAAMD,SAASiH,GAAkC,IACjDjH,EAASiH,GAAgC,IAtBP,kDAwBlCnB,GAAU,yBAA0B,SACpC7F,GAAMD,SAASiH,GAAkC,IACjDjH,EAASiH,GAAgC,IACzCrU,QAAQC,IAAI,WAAZ,MA3BkC,0DAAH,sDA+B7B6uB,GAAyB,uCAAG,WAAO2R,GAAP,uBAAA/uB,EAAA,6DACxB4B,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWwa,WAAWvP,OAC/B3W,EAAc0L,IAAWwa,WAAWsB,qBAClC7rB,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAJkB,kBAMxBP,EAAO2F,uBAAuBhB,EAAa64B,GANnB,OAO9BvtB,GAAU,wBAAyB,WACnCrK,GAAoBtF,EAAMC,GARI,kDAU9B0P,GAAU,yBAA0B,SACpClT,QAAQC,IAAI,WAAZ,MAX8B,0DAAH,sDAelBygC,GAA6B,uCAAG,WAAOh9B,EAAMmO,GAAb,eAAAH,EAAA,sDACrCtS,EAAuB,CAC3BC,KAAM,WACS,QAATqE,EACF28B,GAA6BxuB,GAE7ByuB,GAA8BzuB,IAGlCpS,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAfyC,2CAAH,wDAmB7B4vB,GAAwB,uCAAG,WAAOpnB,GAAP,eAAA8J,EAAA,sDAChCtS,EAAuB,CAC3BC,KAAM,WACJyvB,GAA0BlnB,IAE5BnI,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QACL,8CACAR,GAXoC,2CAAH,sDAexBuhC,GAA+B,uCAAG,sCAAAjvB,EAAA,sDACrCtE,EAAuBC,GAAvBD,SAAUkG,EAAajG,GAAbiG,SACZpT,EAAOoT,IAAWitB,iBAAiBK,6BAEzCxzB,EACEqG,aACE,2BADI,+BAGDvT,EAAK2wB,YAHJ,YAGmB3wB,EAAK2gC,sBAHxB,QAG2C,KAGnDzzB,EACEqG,aAAO,2BAAD,yBAA6CvT,EAAK+tB,qBAAlD,QAAmE,KAE3E7gB,EACEqG,aAAO,2BAAD,wBAA4CvT,EAAK8tB,oBAAjD,QAAiE,KAf5B,2CAAH,qDAmB/Bla,GAAS,uCAAG,4BAAApC,EAAA,uDACftE,EAAaC,GAAbD,UACCqG,aAAO,2BAAD,WAAyC,KACxDrG,EAASqG,aAAO,2BAAD,eAA6C,KAC5DrG,EAASqG,aAAO,2BAAD,cAA4C,KAJpC,2CAAH,qDCvOTpB,GAAe,CAC1ByuB,qBAAsB,GACtBN,2BAA4B,GAC5BI,6BAA8B,GAC9B1e,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICTR,IAAMuiB,GAA+B,+BAC/BC,GAA4B,4BAE5BC,GAA0B,SAAC/5B,GACtC,MAAO,CACLxD,KAAMq9B,GACN75B,YAWSg6B,GAAgC,uCAAG,gDAAAxvB,EAAA,6DAAOvI,EAAP,+BAAmB,GACzDmK,EAAajG,GAAbiG,SACF/L,EAAS+L,IAAWsG,MAAMgQ,gBAFc,kBAKrB3mB,EAAOiG,oBAAoB3B,EAAQ4B,GALd,gBAKpCjJ,EALoC,EAKpCA,KAGRmN,GAAMD,SAAS6zB,GAAwB/gC,EAAK+N,WARA,kDAU5CjO,QAAQC,IAAR,MAV4C,0DAAH,qDCnBhCoS,GAAe,CAC1B8uB,iBAAkB,GAClB5iB,OAAQ,CACNhb,KAAM,EACNC,MAAO,GACPgb,UAAW,ICNR,IAAM4iB,GAA8B,8BAC9B3F,GAAiC,iCACjC9oB,GAAkB,kBAElB0uB,GAA0B,SAACn6B,GACtC,MAAO,CACLxD,KAAM09B,GACNl6B,YAISy0B,GAA8B,SAACz0B,GAC1C,MAAO,CACLxD,KAAM+3B,GACNv0B,YAWSo6B,GAAgC,uCAAG,8DAAA5vB,EAAA,6DAC9CnO,EAD8C,+BACvC,EACPC,EAF8C,+BAEtC,OACRC,EAH8C,+BAGpC,GACV0I,EAJ8C,+BAIvC+M,OAASE,OAAO,cAAc9J,WACrClD,EAL8C,+BAKtC8M,OAASE,OAAO,cAAc9J,WAE9BgE,EAAajG,GAAbiG,SACFiL,EAASjL,IAAWiuB,aAAahjB,OAC/BC,EAAcD,EAAdC,UATsC,mBAWrBvb,EAAOsJ,gBAC5BhJ,EACAC,EACA2I,EACAC,EACA3I,GAhB0C,iBAWpCvD,EAXoC,EAWpCA,MAOFqe,EAAS,IACRhb,KAAOA,EACdgb,EAAO/a,MAAQA,EACf+a,EAAOC,UAAYA,EAEbgjB,EAAsB,GAExBthC,EAAK+N,SAAS/N,KAAKiU,OAAS,GAC9BjU,EAAK+N,SAAS/N,KAAKuP,KAAI,SAACC,EAAMC,GAC5B6xB,EAAoBh0B,KAApB,aACEi0B,QAASvoB,KAAOxJ,EAAKusB,cAAc7iB,OAAO,cAC1CsoB,KAAMxoB,KAAOxJ,EAAKiyB,WAAWvoB,OAAO,eACjC1J,OAKTrC,GAAMD,SAASi0B,GAAuB,OAACG,QAAD,IAACA,IAAuB,KAC9Dn0B,GAAMD,SAASuuB,GAA4Bpd,IApCC,kDAsC5Cve,QAAQC,IAAR,MAtC4C,0DAAH,qDA0ChCye,GAAY,uCAAG,WAAO7M,GAAP,iCAAAH,EAAA,yDAClB4B,EAAajG,GAAbiG,SADkB,EAEFA,IAAWuoB,mBAAmBtd,OAA9Chb,EAFkB,EAElBA,KAAMC,EAFY,EAEZA,MAETqO,EAJqB,gCAKlByvB,GAAiC/9B,EAAMC,GALrB,+CAQpBC,EARoB,UAQVoO,EAAOpO,eARG,QAQQ,GAC5B0V,EAToB,UASRD,KAAOrH,EAAOsH,WAAWC,OAAO,qBATxB,QASyC,GAC7D2B,EAVoB,UAUV7B,KAAOrH,EAAOkJ,SAAS3B,OAAO,qBAVpB,QAUqC,GAVrC,mBAalBkoB,GACJ/9B,EACAC,EACAC,EACA0V,EACA4B,GAlBsB,0DAqBxB/a,QAAQC,IAAR,MArBwB,0DAAH,sDCjEZoS,GAAe,CAC1BuvB,iBAAkB,GAClB1f,WAAY,MACZ3D,OAAQ,CACNhb,KAAM,EACNC,MAAO,UACPgb,UAAW,ICuBf,IClBuBqjB,GDkBjBC,GAAeC,0BAAgB,CACnCC,OAAQC,YAActjC,GACtBy9B,KxDrBa,WAAoD,IAA/B8F,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAC1DmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAK0N,GAEH,OADA+wB,EAASxwB,YAAc3S,EAAOkI,QACvB,eAAKi7B,GAEd,KAAK9wB,GAEH,OADA8wB,EAAS7vB,WAAatT,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK7wB,GAEH,OADA6wB,EAAStiC,MAAQb,EAAOkI,QACjB,eAAKi7B,GAGhB,OAAOD,GwDKPhoB,SpDlBa,WAA2D,IAA/BgoB,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCACjEmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAKoa,GAEH,OADAqkB,EAAS9iB,aAAergB,EAAOkI,QACxB,eAAKi7B,GAEd,KAAKjkB,GAEH,OADAikB,EAAS7iB,sBAAwBtgB,EAAOkI,QACjC,eAAKi7B,GAEd,KAAKpkB,GAEH,OADAokB,EAAShoB,mBAAqBnb,EAAOkI,QAC9B,eAAKi7B,GAEd,KAAKlkB,GAEH,OADAkkB,EAAS5iB,qBAAuBvgB,EAAOkI,QAChC,eAAKi7B,GAEd,KAAKnkB,GAEH,OADAmkB,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GoDNPI,gB7BjCa,WAA+D,IAA/BJ,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCACrEmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,OACR2rB,IACH8S,EAAS7Q,cAAgBtyB,EAAOkI,QACzB,eAAKi7B,IAGTD,G6ByBPpf,O/CnBa,WAAsD,IAA/Bof,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAC5DmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAK0e,GAEH,OADA+f,EAAS7e,UAAYtkB,EAAOkI,QACrB,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK7f,GAEH,OADA6f,EAAS5e,gBAAkBvkB,EAAOkI,QAC3B,eAAKi7B,GAEd,KAAK5f,GAEH,OADA4f,EAAS/e,kBAAoBpkB,EAAOkI,QAC7B,eAAKi7B,GACd,KAAK9f,GAEH,OADA8f,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,G+CJP3uB,M9CxBa,WAAqD,IAA/B2uB,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAC3DmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAK8O,GAEH,OADA2vB,EAAS3e,UAAYxkB,EAAOkI,QACrB,eAAKi7B,GAEd,KAAK1vB,GAEH,OADA0vB,EAAS9sB,eAAiBrW,EAAOkI,QAC1B,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAKzvB,GAEH,OADAyvB,EAAS3uB,mBAAqBxU,EAAOkI,QAC9B,eAAKi7B,GAEd,KAAKtvB,GAEH,OADAsvB,EAAS/sB,iBAAmBpW,EAAOkI,QAC5B,eAAKi7B,GAEd,KAAKvvB,GAKH,OAJAuvB,EAAS3e,UAAY,GACrB2e,EAAS9sB,eAAiB,GAC1B8sB,EAAS3uB,mBAAqB,GAC9B2uB,EAASjgB,WAAa,MACf,eAAKigB,GAGhB,OAAOD,G8CPPtoB,MtCtBa,WAAqD,IAA/BsoB,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAC3DmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAKilB,GAEH,OADAwZ,EAASxY,UAAY3qB,EAAOkI,QACrB,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAKvZ,GAEH,OADAuZ,EAASvY,gBAAkB5qB,EAAOkI,QAC3B,eAAKi7B,GAEd,KAAKtZ,GAEH,OADAsZ,EAAS3Y,kBAAoBxqB,EAAOkI,QAC7B,eAAKi7B,GACd,KAAKrZ,GAEH,OADAqZ,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GsCDPpU,W/BvBa,WAAyD,IAA/BoU,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAC/DmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAK0pB,GAEH,OADA+U,EAAShT,eAAiBnwB,EAAOkI,QAC1B,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK9U,GAEH,OADA8U,EAAS/S,qBAAuBpwB,EAAOkI,QAChC,eAAKi7B,GAEd,KAAK7U,GAEH,OADA6U,EAASjT,uBAAyBlwB,EAAOkI,QAClC,eAAKi7B,GACd,KAAK5U,GAEH,OADA4U,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,G+BAP3H,WnBxBa,WAA0D,IAA/B2H,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAChEmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAKm2B,GAEH,OADAsI,EAAS7G,eAAiBt8B,EAAOkI,QAC1B,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAKrI,GAEH,OADAqI,EAAS5G,qBAAuBv8B,EAAOkI,QAChC,eAAKi7B,GAEd,KAAKpI,GAEH,OADAoI,EAAShH,uBAAyBn8B,EAAOkI,QAClC,eAAKi7B,GACd,KAAKnI,GAEH,OADAmI,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GmBCP3B,iBLzBa,WAAgE,IAA/B2B,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCACtEmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAKq8B,GAEH,OADAoC,EAASrB,qBAAuB9hC,EAAOkI,QAChC,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAKnC,GAEH,OADAmC,EAAS3B,2BAA6BxhC,EAAOkI,QACtC,eAAKi7B,GAEd,KAAKlC,GAEH,OADAkC,EAASvB,6BAA+B5hC,EAAOkI,QACxC,eAAKi7B,GACd,KAAK5U,GAEH,OADA4U,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GKEPK,aHhCa,WAA4D,IAA/BL,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAClEmjC,EAAWC,OAAOC,OAAO,GAAIH,GAGnC,OAAQljC,EAAO0E,MACb,KAAKq9B,GAEH,OADAoB,EAAShB,iBAAmBniC,EAAOkI,QAC5B,eAAKi7B,GAEd,KAAKnB,GAEH,OADAmB,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GGmBP5X,SpC3Ba,WAAwD,IAA/B4X,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAC9DmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAKmmB,GAEH,OADAsY,EAASrX,aAAe9rB,EAAOkI,QACxB,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAKrY,GAEH,OADAqY,EAASpX,mBAAqB/rB,EAAOkI,QAC9B,eAAKi7B,GAEd,KAAKpY,GAEH,OADAoY,EAASxX,qBAAuB3rB,EAAOkI,QAChC,eAAKi7B,GAEd,KAAKnY,GAEH,OADAmY,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GoCGPxhB,UjDzBa,WAAoD,IAA/BwhB,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAC1DmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAKic,GAEH,OADAwiB,EAASngB,cAAgBhjB,EAAOkI,QACzB,eAAKi7B,GAEd,KAAKpiB,GAEH,OADAoiB,EAASlgB,sBAAwBjjB,EAAOkI,QACjC,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAKviB,GAEH,OADAuiB,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAEd,KAAKtiB,GAEH,OADAsiB,EAASxgB,qBAAuB3iB,EAAOkI,QAChC,eAAKi7B,GAEd,KAAKriB,GAEH,OADAqiB,EAAShgB,mBAAqBnjB,EAAOkI,QAC9B,eAAKi7B,GAGhB,OAAOD,GiDHP/c,U3CvBa,WAAyD,IAA/B+c,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAC/DmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAKsgB,GAEH,OADAme,EAASrb,cAAgB9nB,EAAOkI,QACzB,eAAKi7B,GAEd,KAAK9d,GAEH,OADA8d,EAASnb,qBAAuBhoB,EAAOkI,QAChC,eAAKi7B,GAEd,KAAK7d,GAEH,OADA6d,EAASpb,qBAAuB/nB,EAAOkI,QAChC,eAAKi7B,GAEd,KAAKle,GAEH,OADAke,EAAS7b,mBAAqBtnB,EAAOkI,QAC9B,eAAKi7B,GAEd,KAAKje,GAEH,OADAie,EAASjd,qBAAuBlmB,EAAOkI,QAChC,eAAKi7B,GAEd,KAAKhe,GAEH,OADAge,EAAS9b,qBAAuBrnB,EAAOkI,QAChC,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK/d,GAEH,OADA+d,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,G2CbPja,czC9Ba,WAA6D,IAA/Bia,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCACnEmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAKujB,GAEH,OADAkb,EAAS7Z,kBAAoBtpB,EAAOkI,QAC7B,eAAKi7B,GAEd,KAAKjb,GAEH,OADAib,EAAS5Z,wBAA0BvpB,EAAOkI,QACnC,eAAKi7B,GAEd,KAAKhb,GAEH,OADAgb,EAAS/Z,0BAA4BppB,EAAOkI,QACrC,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK/a,GAEH,OADA+a,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GyCMPM,UnDtCa,WAAyD,IAA/BN,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCACrE,IAAKA,EACH,OAAOkjC,EAET,IAAMC,EAAWC,OAAOC,OAAO,GAAIH,GAGnC,OAAQljC,EAAO0E,MACb,KAAKkJ,EAEH,OADAu1B,EAAS3iB,gBAAkBxgB,EAAOkI,QAC3B,eAAKi7B,GACd,KAAKt1B,EAEH,OADAs1B,EAAS1iB,oBAAsBzgB,EAAOkI,QAC/B,eAAKi7B,GACd,KAAKr1B,EAEH,OADAq1B,EAASziB,eAAiB1gB,EAAOkI,QAC1B,eAAKi7B,GACd,KAAKp1B,EAGH,OAFAo1B,EAAS3iB,iBAAkB,EAC3B2iB,EAAS1iB,qBAAsB,EACxB,eAAK0iB,GAEhB,OAAOD,GmDiBP/P,e3BhCa,WAA8D,IAA/B+P,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCACpEmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAK6tB,GAEH,OADA4Q,EAASjM,mBAAqBl3B,EAAOkI,QAC9B,eAAKi7B,GAEd,KAAK3Q,GAEH,OADA2Q,EAASvP,yBAA2B5zB,EAAOkI,QACpC,eAAKi7B,GAEd,KAAKzQ,GAEH,OADAyQ,EAASnM,2BAA6Bh3B,EAAOkI,QACtC,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK1Q,GAEH,OADA0Q,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,G2BQPX,aDrCa,WAGZ,IAFDW,EAEA,uDAFQ7vB,GACRrT,EACA,uCACMmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAK09B,GAEH,OADAe,EAASP,iBAAmB5iC,EAAOkI,QAC5B,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK1G,GAEH,OADA0G,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GCkBPzS,QxC1Ca,WAA0D,IAA/ByS,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAChEmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAK+f,GAEH,OADA0e,EAAS3Z,aAAexpB,EAAOkI,QACxB,eAAKi7B,GACd,KAAKze,GAEH,OADAye,EAAS1Z,SAAWzpB,EAAOkI,QACpB,eAAKi7B,GACd,KAAKxe,GAEH,OADAwe,EAASzZ,SAAW1pB,EAAOkI,QACpB,eAAKi7B,GAGhB,OAAOD,GwC4BP1hB,OlChCa,WAAsD,IAA/B0hB,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAC5DmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAKsnB,GAEH,OADAmX,EAAS/c,WAAapmB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK/W,GAEH,OADA+W,EAASlW,mBAAqBjtB,EAAOkI,QAC9B,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAKlX,GAEH,OADAkX,EAASjW,iBAAmBltB,EAAOkI,QAC5B,eAAKi7B,GAEd,KAAKjX,GAEH,OADAiX,EAAStW,mBAAqB7sB,EAAOkI,QAC9B,eAAKi7B,GACd,KAAKhX,GAEH,OADAgX,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GkCKP5I,arBpCa,WAA4D,IAA/B4I,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAClEmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAK+0B,GAEH,OADA0J,EAASxI,iBAAmB36B,EAAOkI,QAC5B,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAKzJ,GAEH,OADAyJ,EAASvI,uBAAyB56B,EAAOkI,QAClC,eAAKi7B,GAEd,KAAKxJ,GAEH,OADAwJ,EAAS5I,yBAA2Bv6B,EAAOkI,QACpC,eAAKi7B,GAEd,KAAKvJ,GAEH,OADAuJ,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GqBYPta,MvBrCa,WAAqD,IAA/Bsa,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAC3DmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAK4zB,GAEH,OADA6K,EAAS5J,UAAYv5B,EAAOkI,QACrB,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK5K,GAEH,OADA4K,EAAS3J,gBAAkBx5B,EAAOkI,QAC3B,eAAKi7B,GAEd,KAAK3K,GAEH,OADA2K,EAAS/J,kBAAoBp5B,EAAOkI,QAC7B,eAAKi7B,GAEd,KAAK1K,GAEH,OADA0K,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GuBaPlL,qBzBtCa,WAGZ,IAFDkL,EAEA,uDAFQ7vB,GACRrT,EACA,uCACMmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAKyyB,GAEH,OADAgM,EAAS/K,YAAcp4B,EAAOkI,QACvB,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK/L,GAEH,OADA+L,EAAS9K,kBAAoBr4B,EAAOkI,QAC7B,eAAKi7B,GAEd,KAAK9L,GAEH,OADA8L,EAASlL,oBAAsBj4B,EAAOkI,QAC/B,eAAKi7B,GAEd,KAAK7L,GAEH,OADA6L,EAAS5jB,OAASvf,EAAOkI,QAClB,eAAKi7B,GAGhB,OAAOD,GyBWP7nB,cjCda,WAGZ,IAFD6nB,EAEA,uDAFQ7vB,GACRrT,EACA,uCACMmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAKkS,GAEH,OADAusB,EAAShW,4BAA8BntB,EAAOkI,QACvC,eAAKi7B,GACd,KAAKlsB,GAEH,OADAksB,EAAS/V,uBAAyBptB,EAAOkI,QAClC,eAAKi7B,GACd,KAAKjsB,GAEH,OADAisB,EAAS9V,qBAAuBrtB,EAAOkI,QAChC,eAAKi7B,GACd,KAAKtsB,GAEH,OADAssB,EAAS7V,6BAA+BttB,EAAOkI,QACxC,eAAKi7B,GACd,KAAKrsB,GACHqsB,EAAS5V,+BAAiCvtB,EAAOkI,QACnD,KAAK6O,GAEH,OADAosB,EAAS3V,6BAA+BxtB,EAAOkI,QACxC,eAAKi7B,GACd,KAAKnsB,GAEH,OADAmsB,EAAS1V,iCAAmCztB,EAAOkI,QAC5C,eAAKi7B,GACd,KAAKhsB,GAEH,OADAgsB,EAASzV,uBAAyB1tB,EAAOkI,QAClC,eAAKi7B,GACd,KAAK/rB,GAEH,OADA+rB,EAASxV,yBAA2B3tB,EAAOkI,QACpC,eAAKi7B,GACd,KAAK9rB,GAEH,OADA8rB,EAASvV,yBAA2B5tB,EAAOkI,QACpC,eAAKi7B,GACd,KAAK7rB,GAEH,OADA6rB,EAAStV,wBAA0B7tB,EAAOkI,QACnC,eAAKi7B,GACd,KAAK3rB,GAEH,OADA2rB,EAASrV,gBAAkB9tB,EAAOkI,QAC3B,eAAKi7B,GACd,KAAK5rB,GAEH,OADA4rB,EAASpV,qBAAuB/tB,EAAOkI,QAChC,eAAKi7B,GACd,KAAK1rB,GAEH,OADA0rB,EAASnV,iBAAmBhuB,EAAOkI,QAC5B,eAAKi7B,GACd,KAAKzrB,GAEH,OADAyrB,EAAS5lB,oBAAsBvd,EAAOkI,QAC/B,eAAKi7B,GACd,KAAKxrB,GAEH,OADAwrB,EAAShV,aAAenuB,EAAOkI,QACxB,eAAKi7B,GACd,KAAKtrB,GAEH,OADAsrB,EAASjV,iBAAmBluB,EAAOkI,QAC5B,eAAKi7B,GACd,KAAKrrB,GAEH,OADAqrB,EAAS7nB,gBAAkBtb,EAAOkI,QAC3B,eAAKi7B,GACd,KAAKprB,GAEH,OADAorB,EAASlV,iBAAmBjuB,EAAOkI,QAC5B,eAAKi7B,GACd,KAAKvrB,GACH,OAAOvE,GAGX,OAAO6vB,GiCpDPrG,mBjB5Ca,WAGZ,IAFDqG,EAEA,uDAFQ7vB,GACRrT,EACA,uCACMmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAK83B,GAEH,OADA2G,EAAS7F,uBAAyBt9B,EAAOkI,QAClC,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK1G,GAEH,OADA0G,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GiByBPtF,cf7Ca,WAGZ,IAFDsF,EAEA,uDAFQ7vB,GACRrT,EACA,uCACMmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAK64B,GAEH,OADA4F,EAASrF,kBAAoB99B,EAAOkI,QAC7B,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK3F,GAEH,OADA2F,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,Ge0BP9E,eb7Ca,WAA8D,IAA/B8E,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCACpEmjC,EAAWC,OAAOC,OAAO,GAAIH,GACnC,OAAQljC,EAAO0E,MACb,KAAKq5B,GAEH,OADAoF,EAAS7E,mBAAqBt+B,EAAOkI,QAC9B,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAKnF,GAEH,OADAmF,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,Ga8BPrb,SX3Ca,WAAwD,IAA/Bqb,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAC9DmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAK65B,GAEH,OADA4E,EAAS1D,aAAez/B,EAAOkI,QACxB,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAK3E,GAEH,OADA2E,EAASzD,mBAAqB1/B,EAAOkI,QAC9B,eAAKi7B,GAEd,KAAK1E,GAEH,OADA0E,EAAS9D,qBAAuBr/B,EAAOkI,QAChC,eAAKi7B,GACd,KAAKzE,GAEH,OADAyE,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GWoBP7C,aT5Ca,WAA4D,IAA/B6C,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAClEmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,MACb,KAAKi7B,GAEH,OADAwD,EAASzC,iBAAmB1gC,EAAOkI,QAC5B,eAAKi7B,GAEd,KAAKxvB,GAEH,OADAwvB,EAASjgB,WAAaljB,EAAOkI,QACtB,eAAKi7B,GAEd,KAAKvD,GAEH,OADAuD,EAASxC,uBAAyB3gC,EAAOkI,QAClC,eAAKi7B,GAEd,KAAKtD,GAEH,OADAsD,EAASvC,yBAA2B5gC,EAAOkI,QACpC,eAAKi7B,GACd,KAAKrD,GAEH,OADAqD,EAAS5jB,OAAT,2BAAuB2jB,EAAM3jB,QAAWvf,EAAOkI,SACxC,eAAKi7B,GAGhB,OAAOD,GSqBPO,UP3Da,WAAyD,IAA/BP,EAA8B,uDAAtB7vB,GAAcrT,EAAQ,uCAC/DmjC,EAAWC,OAAOC,OAAO,GAAIH,GAEnC,OAAQljC,EAAO0E,OACRm8B,IACHsC,EAASrC,cAAgB9gC,EAAOkI,QACzB,eAAKi7B,IAGTD,GOmDPQ,KAAMC,IACNhjC,OAAQijC,YAGKd,M,oBC3DTe,GAAgB,CACpBC,IAAK,OACLC,Q,QAAAA,EACAC,UAAW,CAAC,OAAQ,cAchBC,GAAmBC,YACvBL,IAZqBhB,GAaPC,GAbuB,SAACI,EAAOljC,GAC7C,GAAoB,WAAhBA,EAAO0E,KACT,OAAOm+B,GAAYK,EAAOljC,GAE1BgB,QAAQC,IAAI,gBACZ,IAAMkiC,EAAWN,QAAY1iC,EAAW,IAExC,OADAgjC,EAASH,OAASE,EAAMF,OACjBG,KASLgB,GAAiBC,cAEjBC,GAKAC,UAEOj2B,GAAQk2B,sBACnBN,GACAI,GAAiBG,0BAAgBL,GAAgBM,aAAiB9kC,MAEvD+kC,GAAYC,YAAat2B,IACtC81B,GAAeS,IAAIC,G,OC3ChBC,GAAWC,G,+FCGRC,GAAUC,KAAOC,IAAV,wSAoCEC,GAnB0B,SAACJ,GAExC,OADoBA,EAAZK,QAGJ,cAACJ,GAAD,UACE,cAAC,KAAD,CACEK,OAAQ,IACRC,MAAO,GACPC,OAAQ,GACRC,OAAQ,EACR7zB,MAAO,UACPyzB,SAAS,MAKV,MC8DMK,I,OAlGC,SAAC,GAOX,EANJxzB,KAMK,IALLyzB,EAKI,EALJA,SACAC,EAII,EAJJA,eACAC,EAGI,EAHJA,WACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,eAEA,OACE,sBAAKzkC,MAAM,UAAX,UACE,sBAAKA,MAAM,iBAAX,UACE,oBAAG0kC,KAAK,IAAI1kC,MAAM,gBAAlB,kBACO,4CAEP,sBAAKA,MAAM,6BAAX,UACE,yBACA,yBACA,+BAIJ,qBAAKA,MAAM,oBAAX,SACE,qBAAKA,MAAM,mBAAX,SACE,qBAAKA,MAAM,eAAX,SACE,qBAAIA,MAAM,MAAV,WACW,OAARqkC,QAAQ,IAARA,OAAA,EAAAA,EAAUvwB,QAAS,GAClB,oBAAI9T,MAAM,wBAAV,mBAEO,OAARqkC,QAAQ,IAARA,OAAA,EAAAA,EAAUvwB,QAAS,GAClBuwB,EAASj1B,KAAI,SAACC,EAAMC,GAAP,OACX,oBAAuCtP,MAAM,WAA7C,SACE,eAAC,KAAD,CAAMA,MAAM,WAAW2kC,GAAIt1B,EAAKnC,KAAhC,UACGmC,EAAKu1B,KACN,sBAAM5kC,MAAM,aAAZ,SAA0BqP,EAAKE,WAHnC,4BAA8BD,QAOnB,OAAdg1B,QAAc,IAAdA,OAAA,EAAAA,EAAgBxwB,QAAS,GACxB,oBAAI9T,MAAM,wBAAV,0BAEa,OAAdskC,QAAc,IAAdA,OAAA,EAAAA,EAAgBxwB,QAAS,GACxBwwB,EAAel1B,KAAI,SAACC,EAAMC,GAAP,OACjB,oBAAyCtP,MAAM,WAA/C,SACE,eAAC,KAAD,CAAMA,MAAM,WAAW2kC,GAAIt1B,EAAKnC,KAAhC,UACGmC,EAAKu1B,KACN,sBAAM5kC,MAAM,aAAZ,SAA0BqP,EAAKE,WAHnC,8BAAgCD,QAOlB,OAAjBk1B,QAAiB,IAAjBA,OAAA,EAAAA,EAAmB1wB,QAAS,GAC3B,oBAAI9T,MAAM,wBAAV,6BAEgB,OAAjBwkC,QAAiB,IAAjBA,OAAA,EAAAA,EAAmB1wB,QAAS,GAC3B0wB,EAAkBp1B,KAAI,SAACC,EAAMC,GAAP,OACpB,oBAAyCtP,MAAM,WAA/C,SACE,eAAC,KAAD,CAAMA,MAAM,WAAW2kC,GAAIt1B,EAAKnC,KAAhC,UACGmC,EAAKu1B,KACN,sBAAM5kC,MAAM,aAAZ,SAA0BqP,EAAKE,WAHnC,8BAAgCD,QAOzB,OAAVi1B,QAAU,IAAVA,OAAA,EAAAA,EAAYzwB,QAAS,GACpB,oBAAI9T,MAAM,wBAAV,yBAES,OAAVukC,QAAU,IAAVA,OAAA,EAAAA,EAAYzwB,QAAS,GACpBywB,EAAWn1B,KAAI,SAACC,EAAMC,GAAP,OACb,oBAAyCtP,MAAM,WAA/C,SACE,eAAC,KAAD,CAAMA,MAAM,WAAW2kC,GAAIt1B,EAAKnC,KAAhC,UACGmC,EAAKu1B,KACN,sBAAM5kC,MAAM,aAAZ,SAA0BqP,EAAKE,WAHnC,8BAAgCD,QAOrB,OAAdm1B,QAAc,IAAdA,OAAA,EAAAA,EAAgB3wB,QAAS,GACxB,oBAAI9T,MAAM,wBAAV,sBAEa,OAAdykC,QAAc,IAAdA,OAAA,EAAAA,EAAgB3wB,QAAS,GACxB2wB,EAAer1B,KAAI,SAACC,EAAMC,GAAP,OACjB,oBAAyCtP,MAAM,WAA/C,SACE,eAAC,KAAD,CAAMA,MAAM,WAAW2kC,GAAIt1B,EAAKnC,KAAhC,UACGmC,EAAKu1B,KACN,sBAAM5kC,MAAM,aAAZ,SAA0BqP,EAAKE,WAHnC,8BAAgCD,OAOpC,oBAAsCtP,MAAM,WAA5C,SACE,qBAAKA,MAAM,WAAX,SACE,sBAAMA,MAAM,kBAFhB,2CCxEC6kC,GAfA,WACb,OACE,yBAAQ7kC,MAAM,mFAAd,UACE,oBAAGA,MAAM,sCAAT,6BACe,IAAI8kC,MAAOC,cAAgB,IACxC,mBAAGL,KAAK,IAAR,wBAFF,2BAIA,oBAAG1kC,MAAM,6DAAT,6BACmB,IACjB,mBAAGA,MAAM,oCAAoC,eAAa,iB,sBC0OnDglC,GAlPA,SAACtB,GACd,IAAQuB,EAAyBvB,EAAzBuB,SAAUhzB,EAAeyxB,EAAfzxB,WAClB,OACE,sBAAKjS,MAAM,SAAX,UACE,mBAAG0kC,KAAK,IAAI1kC,MAAM,kBAAlB,SACE,mBAAG,eAAa,WAElB,sBAAKA,MAAM,iBAAX,UACE,sBAAMA,MAAM,cAAZ,SACE,sBAAKA,MAAM,cAAX,UACE,qBAAKA,MAAM,sBAAX,SACE,qBAAKA,MAAM,mBAAX,SACE,mBAAG,eAAa,eAGpB,uBACEqD,KAAK,OACLrD,MAAM,eACNC,GAAG,aACHilC,YAAY,wBAIlB,qBAAIllC,MAAM,aAAV,UACE,qBAAIA,MAAM,iCAAV,UACE,mBACEA,MAAM,2BACN0kC,KAAK,IACLzkC,GAAG,kBACH2Q,KAAK,SACL,cAAY,WACZ,gBAAc,OACd,gBAAc,QAPhB,SASE,cAAC,KAAD,CAAMu0B,KAAM,OAEd,sBAAKnlC,MAAM,gBAAgB,kBAAgB,kBAA3C,UACE,sBAAKA,MAAM,oEAAX,UACE,mBAAGA,MAAM,0BAAT,4BACA,mBAAG0kC,KAAK,eAAe1kC,MAAM,aAA7B,0BAIF,sBAAKA,MAAM,gBAAX,UACE,oBAAG0kC,KAAK,eAAe1kC,MAAM,gBAA7B,UACE,qBAAKA,MAAM,SAAX,SACE,qBAAKolC,IAAI,oCAAoCC,IAAI,YAEnD,sBAAKrlC,MAAM,UAAX,UACE,sBAAKA,MAAM,oDAAX,UACE,+CACA,mBAAGA,MAAM,sBAAT,0BAEF,mBAAGA,MAAM,sBAAT,kCAGJ,oBAAG0kC,KAAK,eAAe1kC,MAAM,gBAA7B,UACE,qBAAKA,MAAM,SAAX,SACE,qBAAKolC,IAAI,oCAAoCC,IAAI,YAEnD,sBAAKrlC,MAAM,UAAX,UACE,sBAAKA,MAAM,oDAAX,UACE,4CACA,mBAAGA,MAAM,sBAAT,2BAEF,mBAAGA,MAAM,sBAAT,kCAGJ,oBAAG0kC,KAAK,eAAe1kC,MAAM,gBAA7B,UACE,qBAAKA,MAAM,SAAX,SACE,qBAAKolC,IAAI,oCAAoCC,IAAI,YAEnD,sBAAKrlC,MAAM,UAAX,UACE,sBAAKA,MAAM,oDAAX,UACE,6CACA,mBAAGA,MAAM,sBAAT,0BAEF,mBAAGA,MAAM,sBAAT,mCAGJ,oBAAG0kC,KAAK,eAAe1kC,MAAM,gBAA7B,UACE,qBAAKA,MAAM,SAAX,SACE,qBAAKolC,IAAI,oCAAoCC,IAAI,YAEnD,sBAAKrlC,MAAM,UAAX,UACE,sBAAKA,MAAM,oDAAX,UACE,4BAAIiS,EAAWyQ,WACf,mBAAG1iB,MAAM,sBAAT,0BAEF,mBAAGA,MAAM,sBAAT,oCAGJ,oBAAG0kC,KAAK,eAAe1kC,MAAM,gBAA7B,UACE,qBAAKA,MAAM,SAAX,SACE,qBAAKolC,IAAI,oCAAoCC,IAAI,YAEnD,sBAAKrlC,MAAM,UAAX,UACE,sBAAKA,MAAM,oDAAX,UACE,6CACA,mBAAGA,MAAM,sBAAT,yBAEF,mBAAGA,MAAM,sBAAT,iCAIN,qBAAKA,MAAM,mEAAX,SACE,mBAAG0kC,KAAK,eAAR,8BAIN,qBAAI1kC,MAAM,sCAAV,UACE,oBACEA,MAAM,2BACN0kC,KAAK,IACLzkC,GAAG,uBACH2Q,KAAK,SACL,cAAY,WACZ,gBAAc,OACd,gBAAc,QAPhB,UASE,cAAC,KAAD,CAAMu0B,KAAM,KAEZ,qBAAKnlC,MAAM,YAAX,SACE,qBAAKA,MAAM,gBAGf,sBAAKA,MAAM,gBAAgB,kBAAgB,uBAA3C,UACE,sBAAKA,MAAM,oEAAX,UACE,mBAAGA,MAAM,0BAAT,iCACA,mBAAG0kC,KAAK,eAAe1kC,MAAM,aAA7B,0BAIF,sBAAKA,MAAM,gBAAX,UACE,oBAAG0kC,KAAK,eAAe1kC,MAAM,gBAA7B,UACE,qBAAKA,MAAM,OAAX,SACE,mBAAG,eAAa,gBAElB,sBAAKA,MAAM,UAAX,UACE,wDACA,mBAAGA,MAAM,sBAAT,6BAGJ,oBAAG0kC,KAAK,eAAe1kC,MAAM,gBAA7B,UACE,qBAAKA,MAAM,OAAX,SACE,mBAAG,eAAa,WAElB,sBAAKA,MAAM,UAAX,UACE,mDACA,mBAAGA,MAAM,sBAAT,8BAGJ,oBAAG0kC,KAAK,eAAe1kC,MAAM,gBAA7B,UACE,qBAAKA,MAAM,OAAX,SACE,mBAAG,eAAa,mBAElB,sBAAKA,MAAM,UAAX,UACE,sDACA,mBAAGA,MAAM,sBAAT,6BAGJ,oBAAG0kC,KAAK,eAAe1kC,MAAM,gBAA7B,UACE,qBAAKA,MAAM,OAAX,SACE,mBAAG,eAAa,aAElB,sBAAKA,MAAM,UAAX,UACE,0DACA,mBAAGA,MAAM,sBAAT,6BAGJ,oBAAG0kC,KAAK,eAAe1kC,MAAM,gBAA7B,UACE,qBAAKA,MAAM,OAAX,SACE,mBAAG,eAAa,eAElB,sBAAKA,MAAM,UAAX,UACE,mDACA,mBAAGA,MAAM,sBAAT,gCAIN,qBAAKA,MAAM,mEAAX,SACE,mBAAG0kC,KAAK,eAAR,8BAIN,qBAAI1kC,MAAM,gCAAV,UACE,mBACEA,MAAM,2BACN0kC,KAAK,IACLzkC,GAAG,kBACH2Q,KAAK,SACL,cAAY,WACZ,gBAAc,OACd,gBAAc,QAPhB,SASE,qBAAKw0B,IAAI,oCAAoCC,IAAI,cAEnD,sBAAKrlC,MAAM,gBAAgB,kBAAgB,kBAA3C,UACE,qBAAKA,MAAM,wDAAX,SAIE,sBAAKA,MAAM,mBAAX,UACE,mBAAGA,MAAM,6BAAT,SACGiS,EAAWyQ,SACRzQ,EAAWyQ,SAASrS,cACpB,WAEN,mBAAGrQ,MAAM,wBAAT,SACGiS,EAAWiB,MAAM9D,KAAI,SAACC,GACrB,OAAI4C,EAAWiB,MAAMY,OAAS,EACtB,GAAN,OAAUzE,EAAKE,KAAf,KAEKF,EAAKE,eAKpB,qBAAKvP,MAAM,gBAAX,SACE,qBAAIA,MAAM,uBAAV,UACE,oBAAIA,MAAM,WAAV,SACE,oBAAG0kC,KAAK,6BAA6B1kC,MAAM,WAA3C,UACE,mBAAG,eAAa,SAChB,gDAGJ,oBAAIA,MAAM,WAAV,SACE,oBAAGslC,QAASL,EAAUjlC,MAAM,0BAA5B,UACE,mBAAG,eAAa,YAChB,qECvLPulC,iBAzCW,SAAC7B,GACzB,IACE8B,EAWE9B,EAXF8B,SACAC,EAUE/B,EAVF+B,gBACAC,EASEhC,EATFgC,cACAC,EAQEjC,EARFiC,OACA1zB,EAOEyxB,EAPFzxB,WACArB,EAME8yB,EANF9yB,KACAyzB,EAKEX,EALFW,SACAC,EAIEZ,EAJFY,eACAC,EAGEb,EAHFa,WACAC,EAEEd,EAFFc,kBACAC,EACEf,EADFe,eAGF,OACE,eAAC,IAAMmB,SAAP,WACE,cAAC,GAAD,CAAgB7B,QAAS0B,IACxBC,GACC,cAAC,GAAD,CACE90B,KAAMA,EACN0zB,eAAgBA,EAChBD,SAAUA,EACVE,WAAYA,EACZC,kBAAmBA,EACnBC,eAAgBA,IAGpB,sBAAKoB,UAAS,uBAAmBH,EAA8B,GAAd,aAAjD,UACGA,GAAiB,cAAC,GAAD,CAAQT,SAAUU,EAAQ1zB,WAAYA,IACxD,qBAAK4zB,UAAU,YAAf,SACE,sBAAKA,UAAU,mBAAf,UACGL,EACAE,GAAiB,cAAC,GAAD,kB,SCvCxBI,GAAe,SAACjE,GAAD,OAAWA,EAAM9F,MCAhCgK,GAAoB,SAAClE,GAAD,OAAWA,EAAMM,W,0JCqKrC6D,GAAkBC,aAAyB,CAC/CR,gBDnKAS,aAAeH,IAAmB,SAAClE,GAAD,OAAWA,EAAM1iB,mBCoKnDlN,WFhKAi0B,aAAeJ,IAAc,SAACjE,GAAD,OAAWA,EAAM5vB,gBEyK1Ck0B,GAAcC,kBAAQJ,IAND,SAACj5B,GAAD,MAAe,CACxC44B,OAAQ,YnE1Ic,SAAC54B,GACvB,IAAMhO,EAAuB,CAC3BC,KAAM,WACJ+N,EAASJ,GAAiB,IAC1BI,EATG,CACL1J,KAAM,YAUNjE,OAAQ,KACRiW,WAAY,SAGd/V,SAAOC,QAAQ,kCAAmCR,GmEiIhDsnC,CAAqBt5B,QAMVk2B,qBAAQkD,GAARlD,EA1JW,SAACS,GACzB,MAAwB4C,IAAMC,SAAS,IAAvC,oBAAO31B,EAAP,KAAa41B,EAAb,KACQv0B,EAAeyxB,EAAfzxB,WAERq0B,IAAMG,WAAU,WACVx0B,GAAcA,EAAWrB,MAC3B41B,EAAQv0B,EAAWrB,KAAK,GAAGrB,QAE5B,CAAC0C,IAEJ,IAsEMoyB,EAAW,GACXC,EAAiB,GACjBC,EAAa,GACbC,EAAoB,GACpBC,EAAiB,GA6CvB,OA3CIxyB,GACFA,EAAWy0B,MAAMt3B,KAAI,SAACC,EAAMC,GAC1B,IAAIgF,EAAO,GACXA,EAAKswB,KA/EW,SAACtwB,GACnB,OAAQA,GACN,IAAK,aACH,OAAO,cAAC,KAAD,CAAS6wB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAEnD,IAAK,SACH,OAAO,cAAC,KAAD,CAAMzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAEhD,IAAK,UACH,OAAO,cAAC,KAAD,CAAMzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAEhD,IAAK,aAGL,IAAK,YACH,OAAO,cAAC,KAAD,CAAOzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAEjD,IAAK,YACH,OAAO,cAAC,KAAD,CAAWzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAErD,IAAK,QACH,OAAO,cAAC,KAAD,CAAKzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAE/C,IAAK,SACH,OAAO,cAAC,KAAD,CAAMzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAEhD,IAAK,WACH,OAAO,cAAC,KAAD,CAAUzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAEpD,IAAK,YAGL,IAAK,YACH,OAAO,cAAC,KAAD,CAAUzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAEpD,IAAK,QACH,OAAO,cAAC,KAAD,CAAKzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAE/C,IAAK,oBAGL,IAAK,oBACH,OAAO,cAAC,KAAD,CAAUzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAEpD,IAAK,gBAML,IAAK,kBAGL,IAAK,gBAGL,IAAK,yBAGL,IAAK,mBACH,OAAO,cAAC,KAAD,CAAMzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAbhD,IAAK,uBACH,OAAO,cAAC,KAAD,CAASzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAcnD,IAAK,iBACH,OAAO,cAAC,KAAD,CAAOzB,KAAM,GAAIwB,MAAO,CAAEC,aAAc,MAEjD,QACE,MAAO,WAaGC,CAAYx3B,EAAKnC,MAC7BoH,EAAK/E,KAAOF,EAAKiF,KACjBA,EAAKpH,KAAOmC,EAAKnC,KAGD,WAAdmC,EAAKnC,MACS,YAAdmC,EAAKnC,MACS,eAAdmC,EAAKnC,MACS,cAAdmC,EAAKnC,MACS,cAAdmC,EAAKnC,MACS,UAAdmC,EAAKnC,MACS,WAAdmC,EAAKnC,MACS,aAAdmC,EAAKnC,MACS,cAAdmC,EAAKnC,MACS,cAAdmC,EAAKnC,MACS,UAAdmC,EAAKnC,MACS,oBAAdmC,EAAKnC,KAELo3B,EAAen3B,KAAKmH,GAEN,sBAAdjF,EAAKnC,MACS,sBAAdmC,EAAKnC,MACS,kBAAdmC,EAAKnC,KAELs3B,EAAkBr3B,KAAKmH,GACA,yBAAdjF,EAAKnC,KACdq3B,EAAWp3B,KAAKmH,GAEF,kBAAdjF,EAAKnC,MACS,qBAAdmC,EAAKnC,MACS,2BAAdmC,EAAKnC,MACS,mBAAdmC,EAAKnC,KAELu3B,EAAet3B,KAAKmH,GAEpB+vB,EAASl3B,KAAKmH,MAMlB,cAAC,GAAD,aACE1D,KAAMA,EACNyzB,SAAUA,EACVC,eAAgBA,EAChBC,WAAYA,EACZC,kBAAmBA,EACnBC,eAAgBA,GACZf,O,oBCpJKoD,GAZM,SAACC,EAAUC,EAAkBtB,GAShD,OAAOuB,MARe,SAACvD,GACrB,OACE,cAACqD,EAAD,2BAAcrD,GAAd,IAAqBgC,cAAeA,EAApC,SACE,cAACsB,EAAD,eAAsBtD,SAKesD,I,8BCuC9BE,GAnCuB,SAACxD,GAAW,IAAD,EAE7C4B,EAUE5B,EAVF4B,QACAE,EASE9B,EATF8B,SACA2B,EAQEzD,EARFyD,UACAC,EAOE1D,EAPF0D,SACAxC,EAMElB,EANFkB,KACAyC,EAKE3D,EALF2D,MACAhkC,EAIEqgC,EAJFrgC,KACA8hC,EAGEzB,EAHFyB,KACAmC,EAEE5D,EAFF4D,OACAC,EACE7D,EADF6D,gBAEF,OACE,cAAC,KAAD,CACEZ,MAAO,CACLa,UAAW,SACXD,gBAAiBA,EACjBE,YAAaF,GAEfG,MAAK,UAAEhE,EAAMgE,aAAR,SACL9C,KAAI,OAAEA,QAAF,IAAEA,IAAQ,KACdvhC,KAAI,OAAEA,QAAF,IAAEA,IAAQ,UACdgkC,MAAK,OAAEA,QAAF,IAAEA,IAAS,UAChB/B,QAASA,EACT8B,SAAUA,EACVrD,QAASoD,EACThC,KAAI,OAAEA,QAAF,IAAEA,IAAQ,SACdmC,OAAQA,EAdV,SAgBGH,EAAY,UAAY3B,K,WC6EhBmC,I,OAvHY,SAACjE,GAAW,IAAD,EAC5BzxB,EAA4DyxB,EAA5DzxB,WAAYhR,EAAgDyiC,EAAhDziC,QAAS+d,EAAuC0kB,EAAvC1kB,aAAcojB,EAAyBsB,EAAzBtB,UAAWvxB,EAAc6yB,EAAd7yB,UACtD,OACE,8BACE,sBAAK7Q,MAAM,eAAX,UACE,qBAAKA,MAAM,0EAAX,SACE,oBAAIA,MAAM,YAAV,oCACEiS,EAAWyQ,gBADb,QACyB,eAGzB7R,GACA,qBAAK7Q,MAAM,MAAX,SACE,qBAAKA,MAAM,gCAAX,SACE,sBAAKA,MAAM,gBAAX,UACE,qBAAKA,MAAM,oCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,sDAAX,SACE,oBAAIA,MAAM,kBAAV,8BAEF,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,4BAAX,SACE,oBAAIA,MAAM,OAAV,SAAkBoiC,EAAUwF,2BAMtC,qBAAK5nC,MAAM,oCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,sDAAX,SACE,oBAAIA,MAAM,kBAAV,sCAEF,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,2BAAX,SACE,oBAAIA,MAAM,OAAV,SAAkBoiC,EAAUyF,kCAMtC,qBAAK7nC,MAAM,oCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,sDAAX,SACE,oBAAIA,MAAM,kBAAV,sCAEF,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,2BAAX,SACE,oBAAIA,MAAM,OAAV,SAAkBoiC,EAAU0F,kCAMtC,qBAAK9nC,MAAM,oCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,sDAAX,SACE,oBAAIA,MAAM,kBAAV,kCAEF,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,2BAAX,SACE,oBAAIA,MAAM,OAAV,SAAkBoiC,EAAU2F,wCAW9C,qBAAK/nC,MAAM,MAAX,SACE,qBAAKA,MAAM,gDAGb,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,+CAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,2DAAX,SACE,oBAAIA,MAAM,kBAAV,kCAEF,mBAAGA,MAAM,kBAAT,gEAKA,qBAAKA,MAAM,mBAAX,SACE,cAAC,KAAD,CACEgoC,UAAQ,EACRC,QAAShnC,EACTinC,WAAYlpB,EACZmmB,KAAM,SACNgD,WAAY,CACVhD,KAAM,EACNiD,gBAAiB,CAAC,KAAM,KAAM,MAC9BC,iBAAiB,GAGnBC,OAAQ,CACNj0B,EAAG,oBACHk0B,EAAG,yB,8BCtGZC,GAAa,uCAAG,sBAAAn3B,EAAA,sEACrBo3B,GAAmC,EAAG,IADjB,uBAErBC,KAFqB,uBAGrBzjB,KAHqB,uBAIrBA,KAJqB,wBAKrB0jB,GAAyC,EAAG,IALvB,yBAMrBC,GAAsC,EAAG,IANpB,yBAOrBC,GAAwD,EAAG,IAPtC,4CAAH,qDCsPXzC,sBAbS,SAACvE,GAAD,MAAY,CAClC9F,KAAM8F,EAAM9F,KACZliB,SAAUgoB,EAAMhoB,SAChBuoB,UAAWP,EAAMO,cAEQ,SAACr1B,GAAD,MAAe,CACxC4R,gBAAgB,WAAD,4BAAE,WAAOxQ,GAAP,SAAAkD,EAAA,+EAAiBy3B,GAAmC36B,IAApD,2CAAF,mDAAC,GAChB46B,kBAAkB,WAAD,4BAAE,WAAOC,GAAP,SAAA33B,EAAA,sEACXtE,EAAS+7B,GAA2CE,IADzC,OAEjBF,GAA6CE,GAF5B,2CAAF,mDAAC,MAML5C,EA7OY,SAAC1C,GAC1B,IACE/kB,EAIE+kB,EAJF/kB,gBACQ1M,EAGNyxB,EAHF3H,KAAQ9pB,WACIgN,EAEVykB,EAFF7pB,SAAYoF,sBACCwgB,EACXiE,EADFtB,UAAa3C,cAEf,EAAkC6G,IAAMC,UAAS,GAAjD,oBAAO11B,EAAP,KAAkBo4B,EAAlB,KAEIhqB,EAAsBnL,OAAS,GACjCmL,EAAsB7P,KAAI,SAACC,EAAMC,GAC/B2P,EAAsB3P,GAAtB,2BAAoCD,GAApC,IAA0C65B,GAAI55B,EAAQ,OAc1Dg3B,IAAMG,WAAU,YAVS,WACvB,IAAMthC,EAAS8M,EAAWiB,MAAM,GAAGsB,QAC7B20B,EAAgBx4B,GAA2BxL,GAE/C8jC,EADEE,IAGW,GAKfC,GACAZ,KACAx7B,GAAMD,SAASJ,GAAiB,IAChCm8B,KACAviC,OACC,IAECw7B,OAAOsH,KAAK5J,GAAe3rB,OAAS,IACtC2rB,EAAcmI,cAAgBnI,EAAcmI,cACxCnI,EAAcmI,cAAc0B,eAAe,SAC3C,EACJ7J,EAAcoI,qBAAuBpI,EAAcmI,cAC/CnI,EAAcoI,qBAAqByB,eAAe,SAClD,EACJ7J,EAAcqI,qBAAuBrI,EAAcqI,qBAC/CrI,EAAcqI,qBAAqBwB,eAAe,SAClD,EACJ7J,EAAcsI,oBAAsBtI,EAAcsI,oBAC9CtI,EAAcsI,oBAAoBuB,eAAe,SACjD,GAGN,IA4BMroC,EAAU,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACL+G,MAAO,SACPvF,MAAO,GACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,cACP4uB,UAAW,aACX9G,IAAK,aACL+G,MAAO,SACPvF,MAAO,IACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEs4B,WAAaD,EAAEC,aAErC,CACEhvB,MAAO,OACP4uB,UAAW,OACX9G,IAAK,OACL+G,MAAO,SACPvF,MAAO,IACP2F,OAAQ,SAACvmC,EAAMwmC,GACb,IAvCmBC,EAuCfx5B,GAvCew5B,EAuCSD,EAAM7uB,YAAa6uB,EAAMnxB,SArChD,WAGF,IADCoxB,EAEG,UAIA,WA8BP,OACE,cAAC,KAAD,CACEnD,MAAO,CAAEoD,aAAc,GAAI9F,MAAO,IAAK+F,UAAW,UAClD15B,MAAOA,EAFT,SAKGjN,EAAKgN,eAFDhN,IAMXomC,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEhO,KAAKyQ,OAAS41B,EAAErmC,KAAKyQ,SAE3C,CACE6G,MAAO,WACP4uB,UAAW,gBACX9G,IAAK,gBACL+G,MAAO,OACPvF,MAAO,IACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,UACP4uB,UAAW,YACXK,OAAQ,SAAC9kB,GAAD,OACNA,EAAU1V,KAAI,SAAC4I,GAAD,OACZ,eAAC,KAAD,WACGA,EAASimB,cACTnZ,EAAUhR,QAAU,EAAI,GAAK,YAGpC2uB,IAAK,YACL+G,MAAO,OACPvF,MAAO,KAET,CACEtpB,MAAO,OACP4uB,UAAW,cACXK,OAAQ,SAACrwB,GAAD,OACNA,EAAMnK,KAAI,SAACqM,GAAD,OACR,eAAC,KAAD,WACGA,EAAK2B,UACL7D,EAAMzF,QAAU,EAAI,GAAK,YAGhC2uB,IAAK,cACL+G,MAAO,OACPvF,MAAO,KAET,CACEtpB,MAAO,QACP4uB,UAAW,cACXK,OAAQ,SAACrwB,GAAD,OACNA,EAAMnK,KAAI,SAACqM,GAAD,OACR,eAAC,KAAD,WACGA,EAAKwuB,gBACL1wB,EAAMzF,QAAU,EAAI,GAAK,YAGhC2uB,IAAK,cACL+G,MAAO,OACPvF,MAAO,IACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,WACP4uB,UAAW,MACX9G,IAAK,MACL+G,MAAO,SACPvF,MAAO,IACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE2H,IAAM0wB,EAAE1wB,KAC5B4wB,OAAQ,SAAC5wB,GACP,OAAO,cAAC,KAAD,UAAOH,KAAOG,GAAKD,OAAO,kBAGrC,CACE4B,MAAO,SACP4uB,UAAW,SACXC,MAAO,SACP/G,IAAK,SACLmH,OAAQ,SAAClqC,GACP,IAAI4Q,EAAmB,aAAX5Q,EAAwB,UAAY,UAChD,OACE,cAAC,KAAD,CACEinC,MAAO,CAAE1C,MAAO,GAAI+F,UAAW,UAC/B15B,MAAOA,EAFT,SAKG5Q,EAAO2Q,eAFH3Q,IAMXukC,MAAO,IACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE3R,OAAOoU,OAAS41B,EAAEhqC,OAAOoU,SAE/C,CACE6G,MAAO,SACP4uB,UAAW,eACX9G,IAAK,eACL+G,MAAO,OACPvF,MAAO,IACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEuqB,aAAa9nB,OAAS41B,EAAE9N,aAAa9nB,SAE3D,CACE01B,MAAO,SACP7uB,MAAO,OACP8nB,IAAK,SACLwB,MAAO,GACP2F,OAhKsB,SAACM,EAAMC,GAAP,OACxB,cAAC,KAAD,CAAOhF,KAAK,SAAZ,SACE,cAAC,KAAD,CACER,GAAI,mBACJW,QAAS,WACP3mB,EAAgBwrB,IAHpB,SAME,cAAC,GAAD,CAAa9mC,KAAK,UAAUuhC,KAAM,cAACwF,GAAA,EAAD,IAAkBjF,KAAK,gBAyJ3DkF,MAAO,UAIX,OACE,cAAC,GAAD,CACEp4B,WAAYA,EACZhR,QAASA,EACT+d,aAAcC,EACdmjB,UAAW3C,EACX5uB,UAAWA,O,UC1JFy5B,GA1DkB,SAAC5G,GAAW,IAAD,oBAC1C,MACO,aADCA,EAAM6G,cAGR,sBAAK1E,UAAU,aAAf,UACE,uBAAO2E,QAAS9G,EAAMn0B,KAAtB,SAA6Bm0B,EAAMt1B,QACnC,sCACEu4B,MAAO,CAAE8D,WAAY/G,EAAMgH,UAAY,WAAa,UAEpDzqC,GAAIyjC,EAAMn0B,KACVs2B,UAAS,uBAAkBnC,EAAMlkC,OAAS,cAC1CmrC,UAAS,UAAEjH,EAAMiH,iBAAR,QAAqB,IAC9BC,KAAI,UAAElH,EAAMkH,YAAR,QAAgB,EACpBr7B,KAAMm0B,EAAMn0B,KACZs7B,SAAUnH,EAAMmH,SAChBC,UAAWpH,EAAMoH,UACjB5F,YAAW,UAAExB,EAAMwB,mBAAR,QAAuB,GAClC/2B,MAAOu1B,EAAMv1B,OACTu1B,EAAMqH,OAZZ,UAEOrH,EAAMjB,WAFb,QAEoB,IAYnBiB,EAAMsH,KAAKC,SAAWvH,EAAMsH,KAAKxrC,OAChC,sBAAMqmC,UAAU,mBAAhB,mBACGnC,EAAMsH,KAAKxrC,aADd,QACuB,2BAO3B,sBAAKqmC,UAAU,aAAf,UACE,uBACE2E,QAAS9G,EAAMn0B,KACfo3B,MAAO,CAAEuE,SAAQ,UAAExH,EAAMyH,iBAAR,QAAqB,IAFxC,SAIGzH,EAAMt1B,QAET,mCACEnO,GAAIyjC,EAAMn0B,KACVo7B,UAAS,UAAEjH,EAAMiH,iBAAR,QAAqB,IAC9Bx8B,MAAOu1B,EAAMv1B,MACb03B,UAAS,uBAAkBnC,EAAMlkC,OAAS,cAC1C+P,KAAMm0B,EAAMn0B,KACZlM,KAAMqgC,EAAMrgC,KACZwnC,SAAUnH,EAAMmH,SAChB3F,YAAW,UAAExB,EAAMwB,mBAAR,QAAuB,GAClCkC,SAAQ,UAAE1D,EAAM0D,gBAAR,UACJ1D,EAAMqH,QAEXrH,EAAMsH,KAAKC,SAAWvH,EAAMsH,KAAKxrC,OAChC,sBAAMqmC,UAAU,mBAAhB,mBACGnC,EAAMsH,KAAKxrC,aADd,QACuB,4BCApB4rC,GArEQ,SAAC1H,GACtB,IAAQ2H,EAAoC3H,EAApC2H,aAAcC,EAAsB5H,EAAtB4H,WAAY9rC,EAAUkkC,EAAVlkC,MAElC,OACE,qBAAKQ,MAAM,gEAAX,SACE,qBAAKA,MAAM,2BAAX,SACE,qBAAKA,MAAM,4BAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,MAAX,UACE,qBAAKA,MAAM,mBAAX,SACE,qBAAKA,MAAM,wBAEb,qBAAKA,MAAM,mBAAX,SACE,sBAAKA,MAAM,8BAAX,UACE,oBAAG0kC,KAAK,IAAI1kC,MAAM,6BAAlB,kBACO,4CAEP,oBAAIA,MAAM,qCAAV,8DAGA,uBACEA,MAAM,eACNurC,SAAUF,EAAaC,GAFzB,UAIE,qBAAKtrC,MAAM,aAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,WACLnB,MAAM,WACN82B,YAAY,WACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,aAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,WACLnB,MAAM,WACN82B,YAAY,WACZ/C,UAAWmI,GACXjnC,KAAK,eAIR7D,EAAME,QACL,sBAAMmmC,UAAU,mBAAhB,SAAoCrmC,EAAM4C,UAG5C,qBAAKpC,MAAM,OAAX,SACE,wBACEqD,KAAK,SACLrD,MAAM,+CAFR,qBAOF,mBAAG0kC,KAAK,gBAAgB1kC,MAAM,0BAA9B,0D,UCoBPyrC,GAAoB,SAACj6B,GAChC,IAAMk6B,EAAS,GAIf,OAHKl6B,EAAO6B,cACVq4B,EAAOr4B,YAAc,0BAEhBq4B,GAmBIC,GAAwB,SAACn6B,GACpC,IAAMk6B,EAAS,GAIf,OAHKl6B,EAAOjC,OACVm8B,EAAOn8B,KAAO,2BAETm8B,GA6EIE,GAA0B,SAACp6B,GACtC,IAAMk6B,EAAS,GAIf,OAHKl6B,EAAO2H,aACVuyB,EAAOvyB,WAAa,0BAEfuyB,GCxKH1F,GAAkBC,aAAyB,CAC/ClK,KXlB+BmK,aAAeJ,IAAc,SAACjE,GAAD,OAAWA,KWmBvEriC,MXbA0mC,aAAeJ,IAAc,SAACjE,GAAD,OAAWA,EAAMriC,WWsB1CqsC,GAAmBzF,kBACvBJ,IAPyB,SAACj5B,GAAD,MAAe,KAMjBq5B,EAxBF,SAAC1C,GACtB,IAAQoI,EAAUpI,EAAVoI,MASR,OAAO,cAAC,GAAD,aAAgBR,WAPJ,SAAC95B,GAEds6B,GACFC,GAA8Bv6B,KAIiBkyB,OAmBtCsI,gBAAU,CACvB3J,KAAM,YACN4J,SDrC+B,SAACz6B,GAChC,IAAMk6B,EAAS,GAWf,OAVKl6B,EAAOC,SAEDD,EAAOC,SAASqC,OAAS,IAClC43B,EAAOj6B,SAAW,iCAFlBi6B,EAAOj6B,SAAW,wBAIfD,EAAOE,SAEDF,EAAOE,SAASoC,OAAS,IAClC43B,EAAOh6B,SAAW,iCAFlBg6B,EAAOh6B,SAAW,wBAIbg6B,ICuBMM,CAGZH,I,+GjBxCGK,GAAWC,KAAKC,KkBIdC,GAAWC,KAAXD,OACFE,IlBFH9I,GkBEuB6I,KlBDxB,YAAmE,EAAhE3F,MAAiE,IAA1DoE,EAAyD,EAAzDA,MAAOC,EAAkD,EAAlDA,KAAMxF,EAA4C,EAA5CA,SAAUgH,EAAkC,EAAlCA,YAAuBC,GAAW,EAArBr+B,MAAqB,oBAC3Ds+B,EAAW1B,EAAKC,SAAWD,EAAK2B,QACtC,OACE,cAACT,GAAD,CACEU,eAAgBF,EAAW,QAAU,UACrCF,YAAaA,GAAeE,EAC5BG,KAAMH,GAAY1B,EAAKxrC,MAHzB,SAKE,cAACikC,GAAD,mDAAeC,IAAWqH,GAAW0B,GAArC,IAA2CjH,SAAUA,SkBiC9CsH,GAtCC,SAACpJ,GAAW,IAAD,MACzB,OACE,gCACE,uBAAO8G,QAAS9G,EAAMn0B,KAAtB,SAA6Bm0B,EAAMt1B,QACnC,uBACA,eAACo9B,GAAA,EAAD,yBACE7E,MAAO,CAAE1C,MAAO,QAChB8I,WAAU,UAAErJ,EAAMqJ,kBAAR,SACVx9B,KAAMm0B,EAAMn0B,KACZ4yB,UAAWoK,GACX1B,SAAUnH,EAAMmH,SAChBmC,OAAQ,SAACC,GACHvJ,EAAMsJ,QACRtJ,EAAMsJ,SAERC,EAAEC,mBAEAxJ,GAZN,cAcE,cAAC2I,GAAD,CAAQjF,SAAQ,UAAE1D,EAAM0D,gBAAR,SAA2Bj5B,MAAM,GAAjD,mBACGu1B,EAAMwB,mBADT,QACwB,cAEvBxB,EAAM7jC,KAAKiU,OAAS,GACnB4vB,EAAM7jC,KAAKuP,KAAI,SAACC,EAAMC,GACpB,OACE,cAAC+8B,GAAD,CACEl+B,MAAK,UAAKkB,EAAKlB,MAAV,YAAmBkB,EAAKjB,OAD/B,SAIGiB,EAAKjB,OAJR,iBAEiBkB,e,UC9BzB69B,GAAmB,SAACzJ,GAAW,IAAD,EAC1Bn0B,EAA6Bm0B,EAA7Bn0B,KAAMw7B,EAAuBrH,EAAvBqH,MAAO38B,EAAgBs1B,EAAhBt1B,MAAO48B,EAAStH,EAATsH,KAE5B,OACE,gCACE,uBAAOR,QAASj7B,EAAhB,SAAuBnB,IACvB,uBACA,cAAC,KAAD,aACE82B,YAAY,gBACZyB,MAAO,CAAE1C,MAAO,QAChB10B,KAAMA,EACNy9B,OAAQ,SAACC,GACPA,EAAEC,kBAEJE,aAAcv0B,QACVkyB,IAELC,EAAKC,SAAWD,EAAKxrC,OACpB,sBAAMqmC,UAAU,mBAAhB,mBACGmF,EAAKxrC,aADR,QACiB,4BAmBV6tC,GAZK,SAAC3J,GACnB,OACE,cAAC8H,GAAA,EAAD,aACErJ,UAAWgL,GACXH,OAAQ,SAACC,GACPA,EAAEC,mBAEAxJ,KCTK4J,GArBmB,SAAC5J,GACjC,IAAQrgC,EAAuCqgC,EAAvCrgC,KAAM8jC,EAAiCzD,EAAjCyD,UAAW7B,EAAsB5B,EAAtB4B,QAASE,EAAa9B,EAAb8B,SAClC,OACE,yBACEF,QAASA,EACTO,UAAU,kBACVxiC,KAAMA,EACN+jC,SAAUD,EAJZ,UAMGA,GACC,sBACEtB,UAAU,+BACVj1B,KAAK,SACL,cAAY,SAGfu2B,EAAY,aAAe3B,M,+BCmQnB+H,GA9QkB,SAAC7J,GAChC,IACE2H,EAQE3H,EARF2H,aACAC,EAOE5H,EAPF4H,WACA3pB,EAME+hB,EANF/hB,cACA6rB,EAKE9J,EALF8J,aACAC,EAIE/J,EAJF+J,SACAC,EAGEhK,EAHFgK,2BACAC,EAEEjK,EAFFiK,2BACAvuB,EACEskB,EADFtkB,oBAqGF,OACE,qBAAKpf,MAAM,eAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,wBAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,aAAV,qCACA,mBAAGA,MAAM,mBAAT,0GAIA,eAACmsC,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,sBAAKtrC,MAAM,MAAX,UACE,qBAAKA,MAAM,gBAAX,SACE,cAAC,GAAD,CACEH,KAAM4tC,EACNl+B,KAAK,cACLnB,MAAM,WAGV,qBAAKpO,MAAM,gBAAX,SACE,cAAC,GAAD,CAAauP,KAAK,YAAYnB,MAAM,oBAEtC,qBAAKpO,MAAM,gBAAX,SACE,cAAC,GAAD,CAAauP,KAAK,UAAUnB,MAAM,uBAGtC,sBAAKpO,MAAM,MAAX,UACE,qBAAKA,MAAM,aACX,qBAAKA,MAAM,iBAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,aACLnB,MAAM,cACN+zB,UAAWmI,GACXC,cAAc,WACdrF,YAAY,qCAIlB,uBAEA,sBAAKW,UAAU,MAAf,UACE,cAAC+H,GAAA,EAAD,IACA,mBAAG/H,UAAU,kBAAb,kEAIF,cAACgI,GAAA,EAAD,CAAYt+B,KAAK,YAAY4yB,UAlJtB,SAAC,GAAgB,IAAd2L,EAAa,EAAbA,OAIxB,OACE,qCACE,sBAAK9tC,MAAM,0BAAX,UACE,qBAAKA,MAAM,SACX,cAAC,GAAD,CAEEqD,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACNzI,QAAS,kBAAMwI,EAAO3gC,KAAK,CAAE6K,SAAU,MAJzC,2CASF,uBACC81B,EAAO1+B,KAAI,SAAC4+B,EAAcze,GACzB,OACE,gCACE,sBAAKvvB,MAAM,MAAX,UACE,qBAAKA,MAAM,MAAX,SACE,oBAAIA,MAAM,aAAV,4BAAoCuvB,EAAgB,OAGtD,cAAC,GAAD,CAEElsB,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN3I,QAAS,kBA7BIh2B,EA6BoBigB,OA5B7Cue,EAAOI,OAAO5+B,GADU,IAACA,GA8Bbg4B,QAAM,EACNnC,KAAK,SANP,yBACyB5V,OAQ3B,sBAAKvvB,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAM2tC,EACNj+B,KAAI,UAAKy+B,EAAL,aACJ5/B,MAAM,iBACNy8B,SAAU,SAAC7yB,GACT01B,EAA2B11B,EAAUuX,QAI3C,qBAAKvvB,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAKy+B,EAAL,QACJ5/B,MAAM,MACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAKy+B,EAAL,wBACJ5/B,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,SAId,sBAAKpnC,MAAM,MAAX,UACE,qBAAKA,MAAM,aACX,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAKy+B,EAAL,yBACJ5/B,MAAM,gBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAKy+B,EAAL,qBACJ5/B,MAAM,sBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,qBA4DV,uBACA,uBACA,sBAAKpnC,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAM8hB,EACNpS,KAAK,WACLnB,MAAM,iBACNy8B,SAAU,SAAC7yB,GACT21B,EAA2B31B,QAIjC,qBAAKhY,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,sBACLnB,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,MACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,kBACLnB,MAAM,SACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,SAId,sBAAKpnC,MAAM,MAAX,UACE,qBAAKA,MAAM,aACX,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,iBACLnB,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,uBACLnB,MAAM,gBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,mBACLnB,MAAM,sBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,SAId,qBAAKpnC,MAAM,MAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,mBACLnB,MAAM,SACN+zB,UAAWmI,GACXC,cAAc,WACdrF,YAAY,gCAIlB,qBAAKllC,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SAME,cAAC,GAAD,CAASqD,KAAK,SAAS8jC,UAAW/nB,EAAlC,yCClQhB6P,GAA0B,uCAAG,WAAO3rB,EAAYD,GAAnB,uBAAAgO,EAAA,6DACzB4B,EAAajG,GAAbiG,SAEK,aAAT5P,GACMojB,EAAkBxT,IAAW6R,UAA7B2B,cACRyI,EAAWzI,EAAcrS,QAAO,SAACC,GAAD,OAAOA,EAAEpU,KAAOqD,OAExCse,EAA0B3O,IAAWoN,UAArCuB,sBACRsN,EAAWtN,EAAsBxN,QAAO,SAACC,GAAD,OAAOA,EAAEpU,KAAOqD,MARzB,4BAU1B4rB,EAAS,UAViB,QAUX,IAVW,2CAAH,wDAa1BC,GAA0B,uCAAG,WAAO7oB,GAAP,qBAAA+K,EAAA,6DACzB4B,EAAajG,GAAbiG,SACAkV,EAAiBlV,IAAWmc,QAA5BjH,aACFna,EAASma,EAAa/T,QAAO,SAACC,GAAD,OAAOA,EAAEpU,KAAOqG,KAHlB,4BAI1B0H,EAAO,UAJmB,QAIb,IAJa,2CAAH,sDAO1BmgC,GAAsB,uCAAG,WAAO5tB,GAAP,qBAAAlP,EAAA,6DACrB4B,EAAajG,GAAbiG,SACAmV,EAAanV,IAAWmc,QAAxBhH,SACFpa,EAASoa,EAAShU,QAAO,SAACC,GAAD,OAAOA,EAAEpU,KAAOsgB,KAHlB,4BAItBvS,EAAO,UAJe,QAIT,IAJS,2CAAH,sDAOf4W,GAAuB,uCAAG,WACrCthB,EACAisB,GAFqC,mCAAAle,EAAA,mHAOnCrE,GAAMD,SACJqG,aAAO,sBAAD,oBAAqCmc,EAArC,SAA2D,KAEnEviB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,yBAGJ,KAGJviB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,0BAGJ,KAGJviB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,4BAGJ,KAGJviB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,sBAGJ,KAGJviB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,wBAGJ,KA1C+B,oDAiDRN,GACzB3rB,EACA,YAnDiC,eAiD7BksB,EAjD6B,iBAqDRL,GACzBK,EAAa9O,aAtDoB,eAqD7B+O,EArD6B,iBAyD7BxK,GAAmCuK,EAAa9O,aAzDnB,yBA2DZytB,GAAuB3e,EAAa7O,SA3DxB,QA2D7B+O,EA3D6B,OA6DnC1iB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,mBAGJC,EAAapK,WAHT,QAGgB,KAGxBpY,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,mCAGJC,EAAa5O,aAHT,QAGkB,KAG1B5T,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,0BAGJE,EAAalgB,OAGjBvC,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,4BAGJE,IAGJziB,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,sBAGJG,EAASngB,OAGbvC,GAAMD,SACJqG,aACE,sBADI,oBAESmc,EAFT,wBAGJG,IApG+B,kDAwGnC/vB,QAAQC,IAAI,iBACZD,QAAQC,IAAR,MAzGmC,0DAAH,wDA6GvBiwB,GAAuB,uCAAG,WAAOzrB,GAAP,yCAAAiN,EAAA,oHAInCrE,GAAMD,SAASqG,aAAO,sBAAuB,sBAAuB,KACpEpG,GAAMD,SAASqG,aAAO,sBAAuB,cAAe,KAC5DpG,GAAMD,SAASqG,aAAO,sBAAuB,kBAAmB,KAChEpG,GAAMD,SAASqG,aAAO,sBAAuB,iBAAkB,KAC/DpG,GAAMD,SAASqG,aAAO,sBAAuB,uBAAwB,KACrEpG,GAAMD,SAASqG,aAAO,sBAAuB,yBAA0B,KACvEpG,GAAMD,SAASqG,aAAO,sBAAuB,mBAAoB,KACjEpG,GAAMD,SAASqG,aAAO,sBAAuB,qBAAsB,KAXhC,sDAgBP6b,GAC1B7qB,EACA,aAlBiC,eAgB7B0rB,EAhB6B,iBAqBRX,GACzBW,EAAcpP,aAtBmB,eAqB7B+O,EArB6B,iBAyBZ7sB,EAAOyD,YAC5B,EACA,IACAypB,EAAcpP,aA5BmB,SAyB7BgP,EAzB6B,QA+BtB7vB,KAAK+N,SAAS/N,KAAKiU,OAAS,IAAI,EACpB4b,EAAS7vB,KAAK+N,SAAS/N,KAAKuU,QACjD,SAACC,GAAD,OAAOA,EAAEpU,KAAO6vB,EAAcnP,WAFU,oBACnCgP,EADmC,KAI1CC,EAAeD,GAIjB3iB,GAAMD,SACJqG,aACE,sBACA,sBAFI,UAGJ0c,EAAclP,aAHV,QAGmB,KAG3B5T,GAAMD,SACJqG,aAAO,sBAAuB,cAAe0c,EAAc/O,MAE7D/T,GAAMD,SACJqG,aAAO,sBAAuB,kBAAmB0c,EAAc5O,UAEjElU,GAAMD,SACJqG,aAAO,sBAAuB,iBAAkB0c,EAAc9O,YAEhEhU,GAAMD,SACJqG,aAAO,sBAAuB,uBAAwBqc,EAAalgB,OAErEvC,GAAMD,SACJqG,aAAO,sBAAuB,yBAA0Bqc,IAE1DziB,GAAMD,SACJqG,aAAO,sBAAuB,mBAAoBwc,EAAargB,OAEjEvC,GAAMD,SACJqG,aAAO,sBAAuB,qBAAsBwc,IAjEnB,mDAoEnCjwB,QAAQC,IAAR,MApEmC,2DAAH,sDAwEvBmwB,GAAgB,uCAAG,WAAOve,GAAP,2BAAAH,EAAA,uDACtBtE,EAAaC,GAAbD,UACCF,GAAqB,IACxBmjB,EAAkBxe,EAAOye,SAASpc,MAAM,KACxCqc,EAAc1e,EAAOgN,YAAY3K,MAAM,KACzCiR,EAAY,GAEhBtT,EAAOsT,UAAU1V,KAAI,SAACC,EAAMC,GAC1B,IAAM8gB,EAAkB/gB,EAAK2I,SAASnE,MAAM,KAC5CiR,EAAU3X,KAAK,CACb4K,YAAaqY,EAAgB,GAC7BvY,OAAQ,YAINhR,EAAU,CACd2pB,YAAaR,EAAgB,GAC7BS,YAAaC,eACbC,kBAAmB,KACnBttB,KAAM6sB,EAAY,GAClBxwB,OAAQ6O,EAAa,GAAGJ,MACxB6M,YAAa,QACb9b,SAAQ,UAAEsS,EAAOof,wBAAT,QAA6B,GACrChY,MAAOC,KAAOrH,EAAOsH,WAAWC,OAAO,cACvCC,IAAKH,KAAOrH,EAAOkJ,SAAS3B,OAAO,cACnCG,YAAa1H,EAAO2H,WACpBT,SAAU,QACVU,eAAgB,GAChBC,cAAe,GACfE,MAAO,GACPuL,UAAWA,GAGb,IACQ+L,EAA4B,kBAChC,IAAIlvB,SAAQ,SAACC,EAASI,GACpBY,EAAO4D,mBAAmBK,GACvB8K,MAAK,WACJC,YAAW,WACT7E,EAASF,GAAqB,IAC9BE,EAAS+jB,aAAM,wBACf7jB,EAAS,gBACTrL,MACC,QAEJiQ,OAAM,WACLD,WAAW5P,EAAQ,KACnB+K,EAASF,GAAqB,WAGtCrM,IAAMuwB,QAAQF,EAA2B,CACvCG,QAAS,2BACTle,QAAS,sCACTtT,MAAO,sDAET,MAAOA,GACPG,QAAQC,IAAIJ,GACZuN,EAASF,GAAqB,IAzDF,2CAAH,sDCrGvBg/B,GAAmBzF,mBAjCD,SAACvE,GAAD,MAAY,CAClC9F,KAAM8F,EAAM9F,KACZ1b,UAAWwhB,EAAMxhB,UACjByE,UAAW+c,EAAM/c,UACjBqd,UAAWN,EAAMM,UACjBiM,KAAMvM,EAAM9F,KAAK9pB,eAEQ,SAAClF,GAAD,MAAe,CACxC0G,UAAW,WACT1G,EAAS+jB,aAAM,yBAEjB4c,2BAA4B,SAACpqC,EAAYisB,GACvC,IAAM8e,EAAS/qC,EAAWuQ,MAAM,KAC3BvQ,EAQLgrC,GAA+CD,EAAO,GAAI9e,GAPxD+e,GACED,EAAO,GACP9e,GACA,IAMNoe,2BAA4B,SAACvpC,GAC3B,IAAMiqC,EAASjqC,EAAWyP,MAAM,KAC3BzP,EAILkqC,GAA+CD,EAAO,IAHpDC,GAA+CD,EAAO,IAAI,OAOvCjI,EAtGQ,SAAC1C,GAChC,IACEoI,EAKEpI,EALFoI,MADF,EAMIpI,EAJF0K,KAAQl7B,EAFV,EAEUA,MAAOrO,EAFjB,EAEiBA,SACF+c,EAGX8hB,EAHFrjB,UAAauB,sBACA6E,EAEXid,EAFF5e,UAAa2B,cACArH,EACXskB,EADFvB,UAAa/iB,oBAUfknB,IAAMG,WAAU,WAGd,IAAMthC,EAAS+N,EAAM,GAAGsB,QAClB20B,EAAgBr4B,GAA0B3L,GAEhDopC,IAEEC,GACE,EACA,OACA,GAJArF,GACF,OAIEtkC,QAJF,IAIEA,IAIyD,IAHzD,GAKJ4pC,GAAqC,EAAG,QACxCxpB,OAEC,IAEH,IAAMypB,EAAqB,GAC3B9sB,EAAsBxS,KAAI,SAACC,EAAMC,GAC/Bo/B,EAAmBvhC,KAAK,CACtBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB,IAAMo/B,EAAqB,GAS3B,OARAloB,EAAcrX,KAAI,SAACC,EAAMC,GACvBq/B,EAAmBxhC,KAAK,CACtBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAKd,cAAC,GAAD,aACEoS,cAAe+sB,EACflB,aAAcmB,EACdlB,SAAU7+B,GACV08B,WArDe,SAAC95B,GACds6B,GACFwC,GAAwC98B,IAoDxC4N,oBAAqBA,GACjBskB,OA2CKsI,gBAAU,CACvB3J,KAAM,sBACN4J,SP1GyC,SAACz6B,GAC1C,IAAMk6B,EAAS,GAuBf,OAtBKl6B,EAAOgN,cACVktB,EAAOltB,YAAc,6BAElBhN,EAAOsH,YACV4yB,EAAO5yB,UAAY,8BAEhBtH,EAAOkJ,UACVgxB,EAAOhxB,QAAU,8BAEdlJ,EAAO2H,aACVuyB,EAAOvyB,WAAa,4BAEjB3H,EAAOye,WACVyb,EAAOzb,SAAW,wBAEfze,EAAOof,mBACV8a,EAAO9a,iBAAmB,uBAGvBpf,EAAOsT,YACV4mB,EAAO5mB,UAAY,yBAEd4mB,GOmFPkD,cAAe,CACb9pB,UAAW,KAJAknB,CAMZH,I,oBC6QYgD,GA/XkB,SAACnL,GAChC,IACE2H,EAeE3H,EAfF2H,aACAC,EAcE5H,EAdF4H,WACA3pB,EAaE+hB,EAbF/hB,cACA6rB,EAYE9J,EAZF8J,aACAC,EAWE/J,EAXF+J,SACA3+B,EAUE40B,EAVF50B,aACA4+B,EASEhK,EATFgK,2BACAC,EAQEjK,EARFiK,2BACAmB,EAOEpL,EAPFoL,SACAC,EAMErL,EANFqL,aACAC,EAKEtL,EALFsL,4BACAC,EAIEvL,EAJFuL,eACAC,EAGExL,EAHFwL,kBACAC,EAEEzL,EAFFyL,iBACAC,EACE1L,EADF0L,eA6LF,OACE,qBAAKpvC,MAAM,eAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,wBAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,aAAV,qCACA,mBAAGA,MAAM,mBAAT,0GAIA,eAACmsC,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,sBAAKtrC,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAM4tC,EACNl+B,KAAK,cACLnB,MAAM,OACNy8B,SAAUsE,MAGd,qBAAKnvC,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,YAAYnB,MAAM,oBAEtC,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,UAAUnB,MAAM,oBAEpC,qBAAKpO,MAAM,WAAX,UACIovC,GACA,cAAC,GAAD,CACEvvC,KAAMkvC,EACNx/B,KAAK,UACLnB,MAAM,eAIZ,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAMiP,EACNS,KAAK,WACLnB,MAAM,kBAIZ,sBAAKpO,MAAM,MAAX,UACE,qBAAKA,MAAM,aACX,qBAAKA,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,aACLnB,MAAM,cACN+zB,UAAWmI,GACXC,cAAc,WACdrF,YAAY,qCAIlB,uBAEA,sBAAKW,UAAU,MAAf,UACE,cAAC+H,GAAA,EAAD,IACA,mBAAG/H,UAAU,kBAAb,kEAIF,cAACgI,GAAA,EAAD,CAAYt+B,KAAK,YAAY4yB,UAnKtB,SAAC,GAAgB,IAAd2L,EAAa,EAAbA,OAIxB,OACE,qCACE,sBAAK9tC,MAAM,0BAAX,UACE,qBAAKA,MAAM,SACX,cAAC,GAAD,CAEEqD,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACNzI,QAAS,kBAAMwI,EAAO3gC,KAAK,KAJ7B,2CASF,uBACC2gC,EAAO1+B,KAAI,SAAC4+B,EAAcze,GACzB,OACE,gCACE,sBAAKvvB,MAAM,MAAX,UACE,qBAAKA,MAAM,MAAX,SACE,oBAAIA,MAAM,aAAV,4BAAoCuvB,EAAgB,OAGtD,cAAC,GAAD,CAEElsB,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN3I,QAAS,kBA7BIh2B,EA6BoBigB,OA5B7Cue,EAAOI,OAAO5+B,GADU,IAACA,GA8Bbg4B,QAAM,EACNnC,KAAK,SANP,yBACyB5V,OAQ3B,sBAAKvvB,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAM2tC,EACNj+B,KAAI,UAAKy+B,EAAL,aACJ5/B,MAAM,iBACNy8B,SAAU,SAAC7yB,GACT01B,EAA2B11B,EAAUuX,QAI3C,qBAAKvvB,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAKy+B,EAAL,QACJ5/B,MAAM,MACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAKy+B,EAAL,wBACJ5/B,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,SAId,sBAAKpnC,MAAM,MAAX,UACE,qBAAKA,MAAM,aACX,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAKy+B,EAAL,yBACJ5/B,MAAM,gBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAKy+B,EAAL,qBACJ5/B,MAAM,sBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,qBA6EV,uBACA,sBAAKpnC,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAM8hB,EACNpS,KAAK,WACLnB,MAAM,iBACNy8B,SAAU,SAAC7yB,GACT21B,EAA2B31B,QAIjC,qBAAKhY,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,sBACLnB,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,MACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,kBACLnB,MAAM,SACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,SAId,sBAAKpnC,MAAM,MAAX,UACE,qBAAKA,MAAM,aACX,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,iBACLnB,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,uBACLnB,MAAM,gBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,mBACLnB,MAAM,sBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,SAId,uBACA,sBAAKvB,UAAU,MAAf,UACE,cAAC+H,GAAA,EAAD,IACA,mBAAG/H,UAAU,kBAAb,8DAIF,cAACgI,GAAA,EAAD,CAAYt+B,KAAK,QAAQ4yB,UAhVrB,SAAC,GAAgB,IAAd2L,EAAa,EAAbA,OAIrB,OACE,eAAC,WAAD,WACE,sBAAK9tC,MAAM,0BAAX,UACE,qBAAKA,MAAM,SACX,cAAC,GAAD,CAEEqD,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACNzI,QAAS,kBAAMwI,EAAO3gC,KAAK,KAJ7B,uCASF,uBACC2gC,EAAO1+B,KAAI,SAACigC,EAAUC,GACrB,OACE,gCACE,sBAAKtvC,MAAM,MAAX,UACE,qBAAKA,MAAM,MAAX,SACE,oBAAIA,MAAM,aAAV,wBAAgCsvC,EAAY,OAE9C,cAAC,GAAD,CAEEjsC,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN3I,QAAS,kBA5BIh2B,EA4BoBggC,OA3B7CxB,EAAOI,OAAO5+B,GADU,IAACA,GA6Bbg4B,QAAM,EACNnC,KAAK,SANP,0BAC0BmK,OAQ5B,sBAAKtvC,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAEE6qC,SAAU,SAAC0E,GAAD,OACRP,EAA4BO,EAAKD,IAEnCzvC,KAAMivC,EACNv/B,KAAI,UAAK8/B,EAAL,OACJjhC,MAAM,cAPR,qBACqBkhC,MASvB,qBAAKtvC,MAAM,WAAX,SACE,cAAC,GAAD,CAEEH,KACEovC,EAAeK,GAAWre,cACtBphB,GACEo/B,EAAeK,GAAWre,eAE5B,GAEN1hB,KAAI,UAAK8/B,EAAL,gBACJxE,SAAU,SAAC0E,GACLN,EAAeK,GAAWre,cAAcnd,OAAS,GACnDo7B,EACEK,EACAD,EACAL,EAAeK,GAAWre,gBAIhC7iB,MAAM,SAnBR,qBACqBkhC,MAqBvB,qBAAKtvC,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CAEEj8B,KAAI,UAAK8/B,EAAL,0BACJjhC,MAAM,gBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,GAPV,wBACwBkI,WAnD9B,oBAAuBA,aA6TjB,uBACA,qBAAKtvC,MAAM,MAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,mBACLnB,MAAM,SACN+zB,UAAWmI,GACXC,cAAc,WACdrF,YAAY,gCAIlB,qBAAKllC,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAAC,GAAD,CAASqD,KAAK,SAAd,yCCzWhBmsC,GAAWC,aAAkB,uBAoM7B5D,GAAmBzF,mBAtDD,SAACvE,GAAD,MAAY,CAClC9F,KAAM8F,EAAM9F,KACZ1b,UAAWwhB,EAAMxhB,UACjByE,UAAW+c,EAAM/c,UACjBvL,MAAOsoB,EAAMtoB,MACb0Q,SAAU4X,EAAM5X,SAChBylB,WAAYC,aAAc,sBAAdA,CAAqC9N,GACjDoN,eAAgBO,GAAS3N,EAAO,SAChCuM,KAAMvM,EAAM9F,KAAK9pB,eAEQ,SAAClF,GAAD,MAAe,CACxC0G,UAAW,WACT1G,EAAS+jB,aAAM,yBAEjB4c,2BAA4B,SAACpqC,EAAYisB,GACvC,IAAM8e,EAAS/qC,EAAWuQ,MAAM,KAC3BvQ,EAQLssC,GAA+CvB,EAAO,GAAI9e,GAPxDqgB,GACEvB,EAAO,GACP9e,GACA,IAMNoe,2BAA4B,SAACvpC,GAC3B,IAAMiqC,EAASjqC,EAAWyP,MAAM,KAE3BzP,EAILwrC,GAA+CvB,EAAO,IAHpDuB,GAA+CvB,EAAO,IAAI,IAK9DW,4BAA6B,SAAC9nC,EAAQooB,GAOpC,GANAviB,EACEqG,aAAO,sBAAD,gBAAiCkc,EAAjC,mBAA8D,KAEtEviB,EACEqG,aAAO,sBAAD,gBAAiCkc,EAAjC,iBAA4D,KAEhEpoB,EAAQ,CACV,IAAMmnC,EAASnnC,EAAO2M,MAAM,KAC5B+7B,GAAgDvB,EAAO,GAAI/e,KAG/D4f,kBAAmB,SAACK,EAAKjgC,EAAOugC,GAC1BN,GzD8ByB,SAACA,EAAKjgC,EAAOwgC,GAAc,IAAD,EACjD/iC,EAAaC,GAAbD,SAEFujB,EAAiBif,EAAI17B,MAAM,KAEjC,EAA4Bi8B,EAAS17B,QACnC,SAACC,GAAD,OAAOA,EAAEpU,KAAOqwB,EAAe,MAD1Byf,EAAP,qBAIAhjC,EACEqG,aACE,sBADI,gBAEK9D,EAFL,qCAGJygC,EAAkBniB,qBAHd,QAG+B,KyD1CnCgiB,CAAyCL,EAAKjgC,EAAOugC,OAKlCzJ,EAlMQ,SAAC1C,GAChC,MAA8B4C,IAAMC,SAAS,GAA7C,oBAAOyJ,EAAP,KAAgBC,EAAhB,KACA,EAAgC3J,IAAMC,SAAS,IAA/C,oBAAO2J,EAAP,KAAiBC,EAAjB,KACA,EAA4C7J,IAAMC,UAAS,GAA3D,oBAAO6I,EAAP,KAAuBgB,EAAvB,KAGEtE,EAQEpI,EARFoI,MADF,EASIpI,EAPF0K,KAAQl7B,EAFV,EAEUA,MAAOrO,EAFjB,EAEiBA,SACF+c,EAMX8hB,EANFrjB,UAAauB,sBACA6E,EAKXid,EALF5e,UAAa2B,cACJ6C,EAIPoa,EAJFnqB,MAAS+P,UACGmB,EAGViZ,EAHFzZ,SAAYQ,aACZhX,EAEEiwB,EAFFjwB,UAyBI48B,EAAa,GACnB/mB,EAAUla,KAAI,SAACC,EAAMC,GACnB+gC,EAAWljC,KAAK,CACdlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB+2B,IAAMG,WAAU,WACd,IAAMthC,EAAS+N,EAAM,GAAGsB,QAClB20B,EAAgBr4B,GAA0B3L,GAgBhD,OAbEqpC,GACE,EACA,OACA,GAJArF,GACF,OAIEtkC,QAJF,IAIEA,IAIyD,IAHzD,GAMJ4pC,GAAqC,EAAG,OACxCxpB,KACO,WACLxR,OAED,IAEH,IAAMi7B,EAAqB,GAC3B9sB,EAAsBxS,KAAI,SAACC,EAAMC,GAC/Bo/B,EAAmBvhC,KAAK,CACtBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB,IAAMo/B,EAAqB,GAC3BloB,EAAcrX,KAAI,SAACC,EAAMC,GACvBq/B,EAAmBxhC,KAAK,CACtBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB,IAAM+gC,EAAqB,GAC3B7lB,EAAarb,KAAI,SAACC,EAAMC,GACtBghC,EAAmBnjC,KAAK,CACtBlN,GAAG,aAAD,OAAeqP,GACjBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UA4BhB,OAVA+2B,IAAMG,WAAU,WACdmC,GAAsC,EAAG,KACzC2H,GAA6C,EAAG,KAEhD,IADA,IAAIC,EAAY,GACP/iC,EAAI,EAAGA,EAAIuiC,EAASviC,IAC3B+iC,EAAUrjC,KAAKM,GAEjB0iC,EAAYK,KACX,CAACR,IAGF,cAAC,GAAD,aACEruB,cAAe+sB,EACflB,aAAcmB,EACdG,SAAUuB,EACVtB,aAAcuB,EACd7C,SAAU5+B,GACVC,aAAcA,GACdw8B,WAhHe,SAAC95B,GAClBo+B,GAAwCp+B,GACpCs6B,GACFnsC,QAAQC,IAAI,YA8GZ6wC,iBA1GqB,WACP,IAAZT,GAGJC,EAAWD,EAAU,IAuGnBU,mBApGuB,WACT,IAAZV,GAGJC,EAAWD,EAAU,IAiGnBE,SAAUA,EACVf,iBApCqB,SAACI,GACxB,IAAMlsC,EAAOksC,EAAI17B,MAAM,KAET,OAAZxQ,EAAK,IACO,OAAZA,EAAK,IACO,OAAZA,EAAK,IACO,OAAZA,EAAK,GAEL+sC,GAAkB,GAElBA,GAAkB,IA2BlBhB,eAAgBA,GAEZ1L,OAgEKsI,gBAAU,CACvB3J,KAAM,sBACN4J,STrLyC,SAACz6B,GAC1C,IAAMk6B,EAAS,GA6Bf,OA5BKl6B,EAAOgN,cACVktB,EAAOltB,YAAc,6BAElBhN,EAAOsH,YACV4yB,EAAO5yB,UAAY,8BAEhBtH,EAAOkJ,UACVgxB,EAAOhxB,QAAU,8BAEdlJ,EAAO2H,aACVuyB,EAAOvyB,WAAa,4BAEjB3H,EAAO6oB,UACVqR,EAAOrR,QAAU,yBAEd7oB,EAAOkH,WACVgzB,EAAOhzB,SAAW,yBAEflH,EAAOye,WACVyb,EAAOzb,SAAW,wBAEfze,EAAOof,mBACV8a,EAAO9a,iBAAmB,uBAGvBpf,EAAOsT,YACV4mB,EAAO5mB,UAAY,yBAEd4mB,ISqJMM,CAGZH,I,qDC/FY8E,GAxHqB,SAACjN,GACnC,IACEziC,EAQEyiC,EARFziC,QACA2vC,EAOElN,EAPFkN,SACAzJ,EAMEzD,EANFyD,UACA0J,EAKEnN,EALFmN,WACA1H,EAIEzF,EAJFyF,cACA2H,EAGEpN,EAHFoN,eACA7U,EAEEyH,EAFFzH,uBACA8U,EACErN,EADFqN,uBAGF,OACE,qBAAK/wC,MAAM,eAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,mCAEF,sBAAKA,MAAM,aAAX,UACE,qBAAKA,MAAM,oBAAX,SACE,sBAAKA,MAAM,SAAX,UACE,cAAC,KAAD,CAASgxC,YAAY,OAArB,wBACA,qBAAKhxC,MAAM,MAAX,SACGyQ,GAA2BrB,KAAI,SAACC,EAAMC,GAAP,OAC9B,qBAAKtP,MAAM,OAAX,SACE,cAAC,KAAD,CAAON,OAAQ2P,EAAK3P,OAAQwqC,KAAM76B,EAAKE,QADND,aAO3C,sBAAKtP,MAAM,yBAAX,UACE,cAAC,KAAD,CAASgxC,YAAY,OAArB,qBACA,cAAC,GAAD,CACE1L,QAASyL,EACT1tC,KAAK,UACLuhC,KAAM,cAACqM,GAAA,EAAD,IACN9L,KAAK,SAJP,iCAUJ,cAAC,KAAD,CAAS6L,YAAY,OAArB,yBACA,qBAAKhxC,MAAM,yBAAX,SACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAEEH,KAAI,OAAEixC,QAAF,IAAEA,IAAkB,GACxBvhC,KAAK,OACLnB,MAAM,aAIZ,sBAAKpO,MAAM,8BAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,YAAYnB,MAAM,WAEtC,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,UAAUnB,MAAM,cAElC+6B,GACA,qBAAKnpC,MAAM,gBAAX,SACE,cAAC,GAAD,CAEEH,KAAI,OAAEgxC,QAAF,IAAEA,IAAc,GACpBthC,KAAK,SACLnB,MAAM,SACN82B,YAAY,oBAIlB,qBAAKllC,MAAM,gBAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,UACLnB,MAAM,WACN+zB,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,gBAAX,SACE,qBAAKA,MAAM,aAAX,SACE,cAAC,GAAD,CACEslC,QAASsL,EACTvtC,KAAK,UACLuhC,KAAM,cAACsM,GAAA,EAAD,IACN/L,KAAK,SAJP,yBAWLgC,EACC,qBAAKnnC,MAAM,mDAAX,SACE,cAAC,KAAD,MAGF,qBAAKA,MAAM,mBAAX,SACE,cAAC,KAAD,CACEgoC,UAAQ,EACRC,QAAShnC,EACTinC,WAAYjM,EACZkJ,KAAM,0B,UCqJtB0G,I,OAAmBzF,mBA3BD,SAACvE,GAAD,MAAY,CAClC1hB,OAAQ0hB,EAAM1hB,OACdiuB,KAAMvM,EAAM9F,KAAK9pB,WACjBupB,mBAAoBqG,EAAMrG,mBAC1B2V,6BAA8BxB,aAAc,yBAAdA,CAAwC9N,OAE7C,SAAC90B,GAAD,MAAe,CACxCqkC,0BAA0B,WAAD,4BAAE,WACzBluC,EACAC,EACAC,EACAC,EACAwB,EACAiH,EACAC,GAPyB,SAAAsF,EAAA,+EASzBggC,GACEnuC,EACAC,EACAC,EACAC,EACAwB,EACAiH,EACAC,IAhBuB,2CAAF,+DAAC,MAoBHq6B,EA5PW,SAAC1C,GACnC,IACE0N,EAME1N,EANF0N,0BACAE,EAKE5N,EALF4N,kBAFF,EAOI5N,EAJF0K,KAAQl7B,EAHV,EAGUA,MAAOrO,EAHjB,EAGiBA,SAHjB,EAOI6+B,EAHFlI,mBAAsBS,EAJxB,EAIwBA,uBAAwB/d,EAJhD,EAIgDA,OACpC0N,EAER8X,EAFFvjB,OAAUyL,mBACVulB,EACEzN,EADFyN,6BAEF,EAAkC7K,IAAMC,UAAS,GAAjD,oBAAOY,EAAP,KAAkBoK,EAAlB,KACA,EAA0CjL,IAAMC,UAAS,GAAzD,oBAAO4C,EAAP,KAAsBqI,EAAtB,KACA,EAAwClL,IAAMC,SAAS,IAAvD,oBAAOkL,EAAP,KAAqBC,EAArB,KAEQxuC,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjB8d,EAAuBnoB,OAAS,GAClCmoB,EAAuB7sB,KAAI,SAACC,EAAMC,GAChC2sB,EAAuB3sB,GAAvB,2BACKD,GADL,IAEE65B,GAAI55B,EAAQ,OAKlB,IAAMqiC,EAAc,CAClB1V,yBACAnwB,KAAM+M,OACN9M,MAAO8M,QAGH5X,EAAU,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,UACP4uB,UAAW,UACX9G,IAAK,UACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEugC,QAAQ99B,OAAS41B,EAAEkI,QAAQ99B,SAEjD,CACE6G,MAAO,MACP4uB,UAAW,eACX9G,IAAK,eACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEwgC,aAAa/9B,OAAS41B,EAAEmI,aAAa/9B,SAE3D,CACE6G,MAAO,gBACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE4sB,cAAcnqB,OAAS41B,EAAEzL,cAAcnqB,SAE7D,CACE6G,MAAO,SACP4uB,UAAW,cACX9G,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEoQ,YAAY3N,OAAS41B,EAAEjoB,YAAY3N,SAEzD,CACE6G,MAAO,OACP4uB,UAAW,WACX9G,IAAK,WACLmH,OAAQ,SAACkI,GAEP,OACE,cAAC,KAAD,CAAKnL,MAAO,CAAE1C,MAAO,IAAK+F,UAAW,UAAY15B,MAFlB,OAE/B,SACGwhC,EAAUA,EAAQzhC,cAAgB,OAIzC4zB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE0gC,SAASj+B,OAAS41B,EAAEqI,SAASj+B,SAEnD,CACE6G,MAAO,WACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,OACP4uB,UAAW,QACXK,OAAQ,SAACrwB,GAAD,OACNA,EAAMnK,KAAI,SAACqM,GAAD,OACR,eAAC,KAAD,WACGA,EAAK2B,UACL7D,EAAMzF,QAAU,EAAI,GAAK,YAGhC2uB,IAAK,cACLwB,MAAO,OAET,CACEtpB,MAAO,QACP4uB,UAAW,QACXK,OAAQ,SAACrwB,GAAD,OACNA,EAAMnK,KAAI,SAACqM,GAAD,OACR,eAAC,KAAD,WACGA,EAAKwuB,gBACL1wB,EAAMzF,QAAU,EAAI,GAAK,YAGhC2uB,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE2gC,OAAOl+B,OAAS41B,EAAEsI,OAAOl+B,SAE/C,CACE6G,MAAO,SACP4uB,UAAW,SACX9G,IAAK,SACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE3R,OAAOoU,OAAS41B,EAAEhqC,OAAOoU,UAqDjDwyB,IAAMG,WAAU,WACd8K,GAAa,GACb5I,GAAyC,EAAG,MAAO,IAAI,GAAMh3B,MAC3D,SAACmB,IApDoB,WACvB,IAAMm/B,EAAe,GACf9sC,EAAS+N,EAAM,GAAGsB,QAClB09B,EAAUphC,GAA0B3L,GAE1C,GAAI+sC,EAGF,GAFAV,EAAiBU,GAEbA,EAAS,CAEXd,EAA0BluC,EAAMC,EAAO,GAAI,GAAI0B,GAAU8M,MACvD,SAACmB,GACCy+B,GAAa,MAKjB,IAAMY,EAAiBvmB,EAAmBxX,QAAO,SAACC,GAAD,OAC/CA,EAAEpU,GAAGmyC,SAASvtC,MAIhBotC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYkyC,EAAe,GAAGlyC,IAChCkO,MAAOgkC,EAAe,GAAGlyC,GACzBmO,MAAO+jC,EAAe,GAAG5iC,OAE3BmiC,EAAgBO,QAGhBb,EAA0BluC,EAAMC,GAAOwO,MAAK,SAACmB,GAC3Cy+B,GAAa,MAIf3lB,EAAmBxc,KAAI,SAACC,EAAMC,GAC5B2iC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYqP,GACdnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAGhBmiC,EAAgBO,QAGlBT,GAAiB,GAQfpI,QAGH,IAEH,IAAMiJ,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SACVskC,GAAsDnzB,IAN/B,OAQzBkzB,EAA0BkB,EAAUC,GARX,2CAAH,wDAyBxB,OACE,cAAC,GAAD,aACEtxC,QAASA,EACTg7B,uBAAwBA,EACxBqV,kBAAmBA,EACnBe,mBAAoBA,EACpBn0B,OAAQA,EACR4yB,eAAgBpgC,GAChBmgC,WAAYY,EACZb,SAvBa,WACfW,GAAa,GACbF,GACEF,EACAhI,GACAx3B,MAAK,SAACmB,GACNy+B,GAAa,OAkBbpK,UAAWA,EACXgC,cAAeA,EACf4H,uBAhB2B,YCvNU,SAAClxC,GAAuB,IAAjB2R,EAAgB,uDAAP,GACjDyqB,EAAwCp8B,EAAxCo8B,uBAAwBnwB,EAAgBjM,EAAhBiM,KAAMC,EAAUlM,EAAVkM,MAChC+M,EAAYtH,EAAOghC,eAAe,aACpC35B,KAAOrH,EAAOsH,WAAWC,OAAO,cAChCF,KAAO/M,GAAMiN,OAAO,cAClBE,EAAUzH,EAAOghC,eAAe,WAClC35B,KAAOrH,EAAOkJ,SAAS3B,OAAO,cAC9BF,KAAO9M,GAAOgN,OAAO,cACnB05B,EAAyB,GAE/BxW,EAAuB7sB,KAAI,SAACC,EAAMC,GAChCmjC,EAAuBtlC,KAAK,CAC1B+7B,GAAI55B,EAAQ,EACZ8V,IAAK/V,EAAKwiC,aACVtiC,KAAMF,EAAK4uB,cACXrd,MAAOvR,EAAKuR,MACZM,QAAS7R,EAAK6R,QACd7d,KAAMgM,EAAK0iC,SACXryC,OAAQ2P,EAAKqjC,WACbvyB,OAAQ9Q,EAAKoS,YACbwO,SAAU5gB,EAAKmxB,cACfmS,YAAatjC,EAAKusB,kBAItB,IAAMgX,EAAM,IAAIC,WAiBhB,GAfAD,EAAIE,YAAY,IAChBF,EAAIG,QAAQ,WACZH,EAAI1I,KAAK,sBAAuB,IAAK,GAAI,UACzC0I,EAAIE,YAAY,IAChBF,EAAI1I,KAAK,WAAY,IAAK,GAAI,UAE9B0I,EAAIE,YAAY,IAGhBF,EAAI1I,KAAK,GAAI,GAAb,gBACA0I,EAAI1I,KAAJ,mBAAcpxB,QAAd,IAAcA,IAAa,KAAO,GAAI,IACtC85B,EAAI1I,KAAK,GAAI,GAAb,kBACA0I,EAAI1I,KAAJ,mBAAcjxB,QAAd,IAAcA,IAAW,KAAO,GAAI,IAGhCzH,GACEA,EAAO2O,OAAQ,CAAC,IAAD,EACXmG,EAAc9U,EAAO2O,OAAOtM,MAAM,KACxC++B,EAAI1I,KAAK,GAAI,GAAb,UACA0I,EAAI1I,KAAJ,sBAAc5jB,EAAY,UAA1B,QAAgC,KAAO,GAAI,IAK/C,IAAM0sB,EAAW,SAACC,KASZC,EAAe,SAACD,GACpB,IAAIE,EAAIF,EAASG,KAAKC,OACtBF,EAAEG,UAAY,CAAC,EAAG,EAAG,GACrBH,EAAEI,UAAY,GACdJ,EAAEK,KAAO,WASLC,EAAY,CAChB,CACE,CAAEC,QAAS,UAAWC,QAAS,EAAGC,OAAQ,UAC1C,CACEF,QAAS,WACTG,QAAS,EACTR,OAAQ,CAAEO,OAAQ,SAAUE,UAAW,CAAC,IAAK,IAAK,OAEpD,CACEJ,QAAS,UACTG,QAAS,EACTR,OAAQ,CAAEO,OAAQ,SAAUE,UAAW,CAAC,IAAK,IAAK,QAGtD,CACE,MACA,gBACA,SACA,OACA,WACA,OACA,QACA,WAIJlB,EAAImB,UAAU,CACZC,OAAQxiC,EAAS,GAAK,GACtByiC,KAAMxB,EACNyB,MAAO,QACPC,KAAMV,EACNW,WAAY,CAAER,OAAQ,SAAUS,OAAQ,UACxChB,OAAQ,CAAEiB,SAAU,YAAapJ,SAAU,EAAGqJ,YAAa,QAC3DtM,QAAS,CACP,CAAEuM,OAAQ,UAAWC,QAAS,eAC9B,CAAED,OAAQ,MAAOC,QAAS,OAC1B,CAAED,OAAQ,gBAAiBC,QAAS,QACpC,CAAED,OAAQ,SAAUC,QAAS,UAC7B,CAAED,OAAQ,OAAQC,QAAS,QAC3B,CAAED,OAAQ,WAAYC,QAAS,YAC/B,CAAED,OAAQ,OAAQC,QAAS,SAC3B,CAAED,OAAQ,QAASC,QAAS,eAC5B,CAAED,OAAQ,SAAUC,QAAS,WAE/BC,aAAc1B,EACdE,aAAcA,EACdyB,aAAc,CACZ,EAAG,CAAEJ,YAAa,IAClB,EAAG,CAAEA,YAAa,KAOpBK,eAAgB,CAAC,EAAG,EAAG,GACvBC,eAAgB,KAIlBjC,EAAIkC,KAAK,2BDmFPC,CAA4BpD,EAAaR,KAgBnCzN,QAqCKsI,gBAAU,CACvB3J,KAAM,0BADO2J,CAEZH,I,WE3LYmJ,GAhFsB,SAACtR,GACpC,IACEziC,EAMEyiC,EANFziC,QACAw7B,EAKEiH,EALFjH,kBACAmU,EAIElN,EAJFkN,SACAC,EAGEnN,EAHFmN,WACA1J,EAEEzD,EAFFyD,UACArL,EACE4H,EADF5H,QAGF,OACE,qBAAK97B,MAAM,eAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,sCAEF,cAAC,KAAD,CAASgxC,YAAY,OAArB,wBACA,qBAAKhxC,MAAM,MAAX,SACGwQ,GAAiBpB,KAAI,SAACC,EAAMC,GAAP,OACpB,qBAAKtP,MAAM,OAAX,SACE,cAAC,KAAD,CAAON,OAAQ2P,EAAK3P,OAAQwqC,KAAM76B,EAAKE,QADND,QAKvC,cAAC,KAAD,CAAS0hC,YAAY,OAArB,yBACA,sBAAKhxC,MAAM,8BAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,YAAYnB,MAAM,WAEtC,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,UAAUnB,MAAM,cAElC0tB,GACA,qBAAK97B,MAAM,gBAAX,SACE,cAAC,GAAD,CACEH,KAAI,OAAEgxC,QAAF,IAAEA,IAAc,GACpBthC,KAAK,SACLnB,MAAM,aAIZ,qBAAKpO,MAAM,gBAAX,SACE,qBAAKA,MAAM,aAAX,SACE,cAAC,GAAD,CACEslC,QAASsL,EACTvtC,KAAK,UACLuhC,KAAM,cAACsM,GAAA,EAAD,IACN/L,KAAK,SAJP,yBAWLgC,EACC,qBAAKnnC,MAAM,mDAAX,SACE,cAAC,KAAD,MAGF,qBAAKA,MAAM,mBAAX,SACE,cAAC,KAAD,CACEgoC,UAAQ,EACRC,QAAShnC,EACTinC,WAAYzL,EACZ0I,KAAM,QACNmD,QAAM,kBCwNpBuD,GAAmBzF,mBAnBD,SAACvE,GAAD,MAAY,CAClC1hB,OAAQ0hB,EAAM1hB,OACdiuB,KAAMvM,EAAM9F,KAAK9pB,WACjBsqB,cAAesF,EAAMtF,cACrB0Y,wBAAyBtF,aAAc,oBAAdA,CAAmC9N,OAEnC,SAAC90B,GAAD,MAAe,CACxCmoC,qBAAqB,WAAD,4BAAE,WAAOhyC,EAAMC,EAAOC,EAAS+c,EAAQrU,EAAMC,GAA3C,SAAAsF,EAAA,+EACpB8jC,GACEjyC,EACAC,EACAC,EACA+c,EACArU,EACAC,IAPkB,2CAAF,6DAAC,GASrB4S,gBAAgB,WAAD,4BAAE,WAAOxQ,GAAP,SAAAkD,EAAA,+EAAiBy3B,GAAmC36B,IAApD,2CAAF,mDAAC,MAGOi4B,EAjRY,SAAC1C,GACpC,IACE/kB,EAOE+kB,EAPF/kB,gBACA2yB,EAME5N,EANF4N,kBACA4D,EAKExR,EALFwR,qBACUtpB,EAIR8X,EAJFvjB,OAAUyL,mBACVqpB,EAGEvR,EAHFuR,wBALF,EAQIvR,EAFF0K,KAAQl7B,EANV,EAMUA,MAAOrO,EANjB,EAMiBA,SANjB,EAQI6+B,EADFnH,cAAiBE,EAPnB,EAOmBA,kBAAmBve,EAPtC,EAOsCA,OAEtC,EAA0CooB,IAAMC,UAAS,GAAzD,oBAAO4C,EAAP,KAAsBqI,EAAtB,KACA,EAA0ClL,IAAMC,UAAS,GAAzD,oBAAsB6O,GAAtB,WACA,EAAwC9O,IAAMC,SAAS,IAAvD,oBAAOkL,EAAP,KAAqBC,EAArB,KACA,EAAkCpL,IAAMC,UAAS,GAAjD,oBAAOY,EAAP,KAAkBoK,EAAlB,KAEQruC,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAEVs5B,EAAkB3oB,OAAS,GAC7B2oB,EAAkBrtB,KAAI,SAACC,EAAMC,GAC3BmtB,EAAkBntB,GAAlB,2BAAgCD,GAAhC,IAAsC65B,GAAI55B,EAAQ,OAItD,IA4BMrO,EAAU,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,OACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACP2F,OAAQ,SAACvmC,EAAMwmC,GACb,IA7BmBC,EA6Bfx5B,GA7Bew5B,EA6BSD,EAAM7uB,YAAa6uB,EAAMnxB,SA3BhD,WAGF,IADCoxB,EAEG,UAIA,WAoBP,OACE,cAAC,KAAD,CACEnD,MAAO,CAAEoD,aAAc,GAAI9F,MAAO,IAAK+F,UAAW,UAClD15B,MAAOA,EAFT,SAKGjN,EAAOA,EAAKgN,cAAgB,KAFxBhN,IAMXomC,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEhO,KAAKyQ,OAAS41B,EAAErmC,KAAKyQ,SAE3C,CACE6G,MAAO,WACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,OACP4uB,UAAW,cACXK,OAAQ,SAACrwB,GACP,OAAIA,EACKA,EAAMnK,KAAI,SAACqM,GAAD,OACf,eAAC,KAAD,WACGA,EAAK2B,UACL7D,EAAMzF,QAAU,EAAI,GAAK,WAIzB,cAAC,KAAD,UAAO,OAEhB2uB,IAAK,cACLwB,MAAO,OAET,CACEtpB,MAAO,QACP4uB,UAAW,cACXK,OAAQ,SAACrwB,GACP,OAAIA,EACKA,EAAMnK,KAAI,SAACqM,GAAD,OACf,eAAC,KAAD,WACGA,EAAKwuB,gBACL1wB,EAAMzF,QAAU,EAAI,GAAK,WAIzB,cAAC,KAAD,UAAO,OAEhB2uB,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,WACP4uB,UAAW,MACX9G,IAAK,MACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE2H,IAAIlF,OAAS41B,EAAE1wB,IAAIlF,QACvC81B,OAAQ,SAAC5wB,GAAD,OACN,cAAC,KAAD,UAAOA,EAAMH,KAAOG,GAAKD,OAAO,cAAgB,iBAGpD,CACE4B,MAAO,SACP4uB,UAAW,SACX9G,IAAK,SACLmH,OAAQ,SAAClqC,GACP,IAAI4Q,EAAQH,GAAUzQ,GAAQ4Q,MAC9B,OACE,cAAC,KAAD,CACEq2B,MAAO,CAAE1C,MAAO,GAAI+F,UAAW,UAC/B15B,MAAOA,EAFT,SAKG5Q,EAASyQ,GAAUzQ,GAAQyO,MAAQ,KAF/BzO,KAOb,CACEib,MAAO,SACP4uB,UAAW,QACX9G,IAAK,QACLwB,MAAO,IACP2F,OAAQ,SAAChxB,GAAD,OACN,cAAC,KAAD,UAAOA,EAAQC,KAAOD,GAAOG,OAAO,cAAgB,gBAEtD0wB,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEuqB,aAAa9nB,OAAS41B,EAAE9N,aAAa9nB,SAE3D,CACE01B,MAAO,SACP7uB,MAAO,OACP8nB,IAAK,SACLwB,MAAO,IACP2F,OA3IsB,SAACM,EAAMC,GAAP,OACxB,cAAC,KAAD,CAAOhF,KAAK,SAAZ,SACE,cAAC,KAAD,CACER,GAAI,mBACJW,QAAS,WACP3mB,EAAgBwrB,IAHpB,SAME,cAAC,GAAD,CAAa9mC,KAAK,UAAUuhC,KAAM,cAACyQ,GAAA,EAAD,IAAkBlQ,KAAK,gBAoI3DkF,MAAO,UAILjB,EAAmB,WACvB,IAAM6I,EAAe,GACf9sC,EAAS+N,EAAM,GAAGsB,QAClB09B,EAAUphC,GAA0B3L,GAE1C,GAAI+sC,EAGF,GAFAV,EAAiBU,GAEbA,EAAS,CAEXgD,EAAqBhyC,EAAMC,EAAO,GAAI0B,GAAU8M,MAAK,SAACmB,GACpDy+B,GAAa,MAIf,IAAMY,EAAiBvmB,EAAmBxX,QACxC,SAACC,GAAD,OAAOA,EAAEpU,KAAO4E,KAIlBotC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYkyC,EAAe,GAAGlyC,IAChCkO,MAAOgkC,EAAe,GAAGlyC,GACzBmO,MAAO+jC,EAAe,GAAG5iC,OAE3BmiC,EAAgBO,QAGhBiD,EAAqBhyC,EAAMC,GAAOwO,MAAK,SAACmB,GACtCy+B,GAAa,MAIf3lB,EAAmBxc,KAAI,SAACC,EAAMC,GAC5B2iC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYqP,GACdnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAGhBmiC,EAAgBO,QAGlBT,GAAiB,IAIrBlL,IAAMG,WAAU,WACd8K,GAAa,GACbnI,MACC,IAEH9C,IAAMG,WAAU,WACdkC,GAAyC,EAAG,MAAO,IAAI,GAAMh3B,MAC3D,SAAC2jC,GACCF,GAAiB,GACjBhM,SAGH,IAYH,OACE,cAAC,GAAD,aACEnoC,QAASA,EACTw7B,kBAAmBA,EACnB6U,kBAAmBA,EACnBpzB,OAAQA,EACR4yB,eAAgBpgC,GAChBmgC,WAAYY,EACZb,SAlBa,WACfW,GAAa,GACb4D,GACEF,EACA9L,GACAx3B,MAAK,WACL4/B,GAAa,OAabpK,UAAWA,EACXrL,QAASqN,GACLzF,OA6BKsI,gBAAU,CACvB3J,KAAM,qBADO2J,CAEZH,ICpMY0J,GA3FiB,SAAC7R,GAC/B,IACEziC,EAMEyiC,EANFziC,QACAg8B,EAKEyG,EALFzG,mBACA2T,EAIElN,EAJFkN,SACAC,EAGEnN,EAHFmN,WACA1J,EAEEzD,EAFFyD,UACArL,EACE4H,EADF5H,QAGF,OACE,qBAAK97B,MAAM,eAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,gCAEF,cAAC,KAAD,CAASgxC,YAAY,OAArB,wBACA,qBAAKhxC,MAAM,MAAX,SACGwQ,GAAiBpB,KAAI,SAACC,EAAMC,GAAP,OACpB,qBAAKtP,MAAM,OAAX,SACE,cAAC,KAAD,CAAON,OAAQ2P,EAAK3P,OAAQwqC,KAAM76B,EAAKE,QADND,QAKvC,cAAC,KAAD,CAAS0hC,YAAY,OAArB,yBACA,sBAAKhxC,MAAM,8BAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,YAAYnB,MAAM,WAEtC,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,UAAUnB,MAAM,cAElC0tB,GACA,qBAAK97B,MAAM,gBAAX,SACG6wC,EAAW/8B,OAAS,GACnB,cAAC,GAAD,CACEjU,KAAI,OAAEgxC,QAAF,IAAEA,IAAc,GACpBthC,KAAK,SACLnB,MAAM,aAKd,qBAAKpO,MAAM,gBAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,UACLnB,MAAM,WACN+zB,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,gBAAX,SACE,qBAAKA,MAAM,aAAX,SACE,cAAC,GAAD,CACEslC,QAASsL,EACTvtC,KAAK,UACLuhC,KAAM,cAACsM,GAAA,EAAD,IACN/L,KAAK,SAJP,yBAWLgC,EACC,qBAAKnnC,MAAM,mDAAX,SACE,cAAC,KAAD,MAGF,qBAAKA,MAAM,mBAAX,SACE,cAAC,KAAD,CACEgoC,UAAQ,EACRC,QAAShnC,EACTinC,WAAYjL,EACZkI,KAAM,0BCiKtB0G,GAAmBzF,mBAlBD,SAACvE,GAAD,MAAY,CAClC1hB,OAAQ0hB,EAAM1hB,OACdiuB,KAAMvM,EAAM9F,KAAK9pB,WACjB8qB,eAAgB8E,EAAM9E,eACtByY,yBAA0B7F,aAAc,qBAAdA,CAAoC9N,OAErC,SAAC90B,GAAD,MAAe,CACxCd,kBAAkB,WAAD,4BAAE,WAAO/I,EAAMC,EAAOC,EAASyB,EAAUiH,EAAMC,GAA7C,SAAAsF,EAAA,sEACXokC,GACJvyC,EACAC,EACAC,EACAyB,EACAiH,EACAC,GAPe,mFAAF,6DAAC,MAWKq6B,EA/OO,SAAC1C,GAC/B,IACEz3B,EAKEy3B,EALFz3B,kBACAupC,EAIE9R,EAJF8R,yBAFF,EAMI9R,EAHF0K,KAAQl7B,EAHV,EAGUA,MAAOrO,EAHjB,EAGiBA,SAHjB,EAMI6+B,EAFF3G,eAAkBE,EAJpB,EAIoBA,mBAAoB/e,EAJxC,EAIwCA,OAJxC,EAMIwlB,EADFvjB,OAAU4E,EALZ,EAKYA,WAAY6G,EALxB,EAKwBA,mBAExB,EAAkC0a,IAAMC,UAAS,GAAjD,oBAAOY,EAAP,KAAkBoK,EAAlB,KACA,EAA0CjL,IAAMC,UAAS,GAAzD,oBAAO4C,EAAP,KAAsBqI,EAAtB,KACA,EAAwClL,IAAMC,SAAS,IAAvD,oBAAOkL,EAAP,KAAqBC,EAArB,KACQxuC,EAAgBgb,EAAhBhb,KAAMC,EAAU+a,EAAV/a,MAEV85B,EAAmBnpB,OAAS,GAC9BmpB,EAAmB7tB,KAAI,SAACC,EAAMC,GAC5B2tB,EAAmB3tB,GAAnB,2BAAiCD,GAAjC,IAAuC65B,GAAI55B,EAAQ,OAIvD,IA+DMrO,EAAU,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,UACP4uB,UAAW,UACX9G,IAAK,UACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEugC,QAAQ99B,OAAS41B,EAAEkI,QAAQ99B,SAEjD,CACE6G,MAAO,SACP4uB,UAAW,cACX9G,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEoQ,YAAY3N,OAAS41B,EAAEjoB,YAAY3N,SAEzD,CACE6G,MAAO,UACP4uB,UAAW,aACX9G,IAAK,aACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEqkC,WAAW5hC,OAAS41B,EAAEgM,WAAW5hC,SAEvD,CACE6G,MAAO,OACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACP2F,OAAQ,SAACvmC,EAAMwmC,GACb,IAlDmBC,EAkDfx5B,GAlDew5B,EAkDSD,EAAM7uB,YAAa6uB,EAAMnxB,SAhDhD,WAGF,IADCoxB,EAEG,UAIA,WAyCP,OACE,cAAC,KAAD,CACEnD,MAAO,CAAEoD,aAAc,GAAI9F,MAAO,IAAK+F,UAAW,UAClD15B,MAAOA,EAFT,SAKGjN,EAAKgN,eAFDhN,IAMXomC,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEhO,KAAKyQ,OAAS41B,EAAErmC,KAAKyQ,SAE3C,CACE6G,MAAO,WACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,OACP4uB,UAAW,cACXK,OAAQ,SAACrwB,GAAD,OACNA,EAAMnK,KAAI,SAACqM,GAAD,OACR,eAAC,KAAD,WACGA,EAAK2B,UACL7D,EAAMzF,QAAU,EAAI,GAAK,YAGhC2uB,IAAK,cACLwB,MAAO,OAET,CACEtpB,MAAO,QACP4uB,UAAW,cACXK,OAAQ,SAACrwB,GAAD,OACNA,EAAMnK,KAAI,SAACqM,GAAD,OACR,eAAC,KAAD,WACGA,EAAKwuB,gBACL1wB,EAAMzF,QAAU,EAAI,GAAK,YAGhC2uB,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,WACP4uB,UAAW,SACX9G,IAAK,SACLmH,OAAQ,SAAClqC,GACP,IAAI4Q,EAAmB,aAAX5Q,EAAwB,UAAY,OAChD,OACE,cAAC,KAAD,CACEinC,MAAO,CAAE1C,MAAO,GAAI+F,UAAW,UAC/B15B,MAAOA,EAFT,SAKG5Q,EAAO2Q,eAFH3Q,MASTuyC,EAAe,GACrBltB,EAAW3V,KAAI,SAACC,EAAMC,GACpB2iC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYqP,GACdnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB+2B,IAAMG,WAAU,WACd8K,GAAa,GA9KU,WACvB,IAAMU,EAAe,GACf9sC,EAAS+N,EAAM,GAAGsB,QAClB09B,EAAUphC,GAA0B3L,GAG1C,GAFAxF,QAAQC,IAAI,iBAAkBsyC,GAE1BA,EAGF,GAFAV,EAAiBU,GAEbA,EAAS,CAEXjmC,EAAkB/I,EAAMC,EAAO,GAAI0B,GAAU8M,MAAK,SAACmB,GACjDy+B,GAAa,MAIf,IAAMY,EAAiBvmB,EAAmBxX,QAAO,SAACC,GAAD,OAC/CA,EAAEpU,GAAGmyC,SAASvtC,MAIhBotC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYkyC,EAAe,GAAGlyC,IAChCkO,MAAOgkC,EAAe,GAAGlyC,GACzBmO,MAAO+jC,EAAe,GAAG5iC,OAE3BmiC,EAAgBO,QAGhBhmC,EAAkB/I,EAAMC,GAAOwO,MAAK,SAACmB,GACnCy+B,GAAa,MAIf3lB,EAAmBxc,KAAI,SAACC,EAAMC,GAC5B2iC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYqP,GACdnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAGhBmiC,EAAgBO,QAGlBT,GAAiB,GAmInBpI,KACC,IAWH,OACE,cAAC,GAAD,aACEnoC,QAASA,EACTg8B,mBAAoBA,EACpB/e,OAAQA,EACR4yB,eAAgBpgC,GAChBmgC,WAAYY,EACZb,SAhBa,WACfW,GAAa,GACbkE,GAAmCD,EAA0BrM,GAAex3B,MAC1E,SAACmB,GACCy+B,GAAa,OAafpK,UAAWA,EACXrL,QAASqN,GACLzF,OA4BKsI,gBAAU,CACvB3J,KAAM,sBADO2J,CAEZH,I,UC7PK8J,GAAWC,KAAXD,OAiGOE,GA/Fc,SAACnS,GAC5B,IACEziC,EAQEyiC,EARFziC,QACA+d,EAOE0kB,EAPF1kB,aACAyuB,EAME/J,EANF+J,SACAqI,EAKEpS,EALFoS,WACAzD,EAIE3O,EAJF2O,mBACAn0B,EAGEwlB,EAHFxlB,OACA0yB,EAEElN,EAFFkN,SAIIzI,GAFFzE,EADF8J,aAGiB,CACjBuI,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,IAGZ,OACE,qBAAKryC,MAAM,eAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,4BAEF,cAAC,KAAD,CAASgxC,YAAY,OAArB,wBACA,qBAAKhxC,MAAM,MAAX,SACGwQ,GAAiBpB,KAAI,SAACC,EAAMC,GAAP,OACpB,qBAAKtP,MAAM,OAAX,SACE,cAAC,KAAD,CAAON,OAAQ2P,EAAK3P,OAAQwqC,KAAM76B,EAAKE,QADND,QAKvC,cAAC,KAAD,CAAS0hC,YAAY,OAArB,yBACA,sBAAKhxC,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,kBAAX,UAEE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAI,OAAE4tC,QAAF,IAAEA,IAAY,GAClBl+B,KAAK,cACLnB,MAAM,cACN82B,YAAY,0BAGhB,qBAAKllC,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAI,OAAEi2C,QAAF,IAAEA,IAAc,GACpBvmC,KAAK,gBACLnB,MAAM,gBACN82B,YAAY,+BAKpB,qBAAKllC,MAAM,gBAAX,SACE,cAAC21C,GAAD,CACEzQ,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,KAAD,CACEgoC,UAAQ,EACRC,QAAShnC,EACTinC,WAAYlpB,EACZmmB,KAAM,SACNgD,WAAU,aACRhD,KAAM,EACNiD,gBAAiB,CAAC,KAAM,KAAM,MAC9BC,iBAAiB,GACdF,GAELG,OAAQ,CACNj0B,EAAG,oBACHk0B,EAAG,uBC2MnBsD,GAAmBzF,mBAzBD,SAACvE,GAAD,MAAY,CAClChoB,SAAUgoB,EAAMhoB,SAChBq8B,sBAAuBvG,aAAc,eAAdA,CAA8B9N,GACrDuM,KAAMvM,EAAM9F,KAAK9pB,WACjBu7B,aAAc3L,EAAM/c,UAAU6B,yBAEL,SAAC5Z,GAAD,MAAe,CACxC9J,gBAAiB,SAACC,EAAMC,EAAOC,EAASkb,GACtCwqB,GACE5lC,EACAC,EACAC,EACAkb,IAGJK,gBAAgB,WAAD,4BAAE,WAAOxQ,GAAP,SAAAkD,EAAA,+EAAiBy3B,GAAmC36B,IAApD,2CAAF,mDAAC,GAChB46B,kBAAkB,WAAD,4BAAE,WAAOC,GAAP,SAAA33B,EAAA,sEACXtE,EAAS+7B,GAA2CE,IADzC,OAEjBF,GAA6CE,GAF5B,2CAAF,mDAAC,GAIlBmN,yBAA0B,WACxB1H,SAIqBrI,EAhRK,SAAC1C,GAC7B,IACUxwB,EAQNwwB,EARF0K,KAAQl7B,MACRjQ,EAOEygC,EAPFzgC,gBACA0b,EAME+kB,EANF/kB,gBACAoqB,EAKErF,EALFqF,kBAJF,EASIrF,EAJF7pB,SAAYmF,EALd,EAKcA,aAAcd,EAL5B,EAK4BA,OAC1Bg4B,EAGExS,EAHFwS,sBACAC,EAEEzS,EAFFyS,yBACA3I,EACE9J,EADF8J,aAEF,EAAkClH,IAAMC,UAAS,GAAjD,oBAAkB0C,GAAlB,WAEQ/lC,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjBa,EAAalL,OAAS,GACxBkL,EAAa5P,KAAI,SAACC,EAAMC,GACtB0P,EAAa1P,GAAb,2BAA2BD,GAA3B,IAAiC65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAI/D,IAAM8mC,EAAoB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,KAAD,CACER,GAAI,mBACJW,QAAS,WACP3mB,EAAgBwrB,IAHpB,SAME,cAAC,GAAD,CAAa9mC,KAAK,UAAUuhC,KAAM,cAACwF,GAAA,EAAD,IAAkBjF,KAAK,aAExC,kBAAlBjyB,EAAM,GAAG3D,MACR,cAAC,GAAD,CACE+1B,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QAqBRrmC,EAAU,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,GACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,cACP4uB,UAAW,aACX9G,IAAK,aACL+G,MAAO,SACPvF,MAAO,IACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEs4B,WAAaD,EAAEC,aAErC,CACEhvB,MAAO,OACP4uB,UAAW,OACX9G,IAAK,OACL+G,MAAO,SACPvF,MAAO,IACP2F,OAAQ,SAACvmC,EAAMwmC,GACb,IAtCmBC,EAsCfx5B,GAtCew5B,EAsCSD,EAAM7uB,YAAa6uB,EAAMnxB,SApChD,WAGF,IADCoxB,EAEG,UAIA,WA6BP,OACE,cAAC,KAAD,CACEnD,MAAO,CAAEoD,aAAc,GAAI9F,MAAO,IAAK+F,UAAW,UAClD15B,MAAOA,EAFT,SAKGjN,EAAI,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAMgN,cAAgB,KAFzBhN,IAMXomC,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEhO,KAAKyQ,OAAS41B,EAAErmC,KAAKyQ,SAE3C,CACE6G,MAAO,WACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,IACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,UACP4uB,UAAW,YACXK,OAAQ,SAAC9kB,GAAD,OACNA,EAAUhR,OAAS,GACnBgR,EAAU1V,KAAI,SAAC4I,GAAD,OACZ,eAAC,KAAD,WACGA,EAASimB,cACTnZ,EAAUhR,QAAU,EAAI,GAAK,YAGpC2uB,IAAK,YACLwB,MAAO,KAET,CACEtpB,MAAO,OACP4uB,UAAW,cACXK,OAAQ,SAACrwB,GAAD,OACNA,EAAMzF,OAAS,GACfyF,EAAMnK,KAAI,SAACqM,GAAD,OACR,eAAC,KAAD,WACGA,EAAK2B,UACL7D,EAAMzF,QAAU,EAAI,GAAK,YAGhC2uB,IAAK,cACLwB,MAAO,KAET,CACEtpB,MAAO,QACP4uB,UAAW,cACXK,OAAQ,SAACrwB,GAAD,OACNA,EAAMzF,OAAS,GACfyF,EAAMnK,KAAI,SAACqM,GAAD,OACR,eAAC,KAAD,WACGA,EAAKwuB,gBACL1wB,EAAMzF,QAAU,EAAI,GAAK,YAGhC2uB,IAAK,cACLwB,MAAO,IACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,WACP4uB,UAAW,MACX9G,IAAK,MACLwB,MAAO,IACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE2H,IAAM0wB,EAAE1wB,KAC5B4wB,OAAQ,SAAC5wB,GACP,OAAO,cAAC,KAAD,UAAOH,KAAOG,GAAKD,OAAO,kBAGrC,CACE4B,MAAO,SACP4uB,UAAW,SACX9G,IAAK,SACL+G,MAAO,SACPI,OAAQ,SAAClqC,GACP,IAAI4Q,EAAmB,aAAX5Q,EAAwB,UAAY,UAChD,OACE,cAAC,KAAD,CACEinC,MAAO,CAAE1C,MAAO,GAAI+F,UAAW,UAC/B15B,MAAOA,EAFT,SAKG5Q,EAAM,OAAGA,QAAH,IAAGA,OAAH,EAAGA,EAAQ2Q,cAAgB,KAF7B3Q,IAMXukC,MAAO,IACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE3R,OAAOoU,OAAS41B,EAAEhqC,OAAOoU,SAE/C,CACE6G,MAAO,SACP4uB,UAAW,eACX9G,IAAK,eACLwB,MAAO,IACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEuqB,aAAa9nB,OAAS41B,EAAE9N,aAAa9nB,SAE3D,CACE01B,MAAO,SACP7uB,MAAO,OACP8nB,IAAK,SACLwB,MAAO,IACP2F,OAAQwM,EACR/L,MAAO,UAgBX/D,IAAMG,WAAU,WACd0P,IAbuB,WACvBlzC,EAAgBC,EAAMC,GAEtB,IACMgmC,E9Foa8B,SAACv4B,GACvC,IAAIC,EACJ,OAAQD,GACN,IAAK,uCAIL,IAAK,uCAIL,IAAK,uCAIL,IAAK,uCACHC,GAAY,EACZ,MAEF,QACEA,GAAY,EAIhB,OAAOA,E8F5biBwlC,CADPnjC,EAAM,GAAGsB,SAGtBy0B,EADEE,IAGW,GAMfC,KACC,IAEH,IAAMiJ,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAAS+7B,GAAwC5qB,IALpC,OAMzBjb,EAAgBqvC,EAAUC,GAND,2CAAH,wDAalB5D,EAAqB,GAS3B,OARAnB,EAAap+B,KAAI,SAACC,EAAMC,GACtBq/B,EAAmBxhC,KAAK,CACtBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAKd,cAAC+mC,GAAD,CACEr1C,QAASA,EACT+d,aAAcA,EACdo3B,kBAAmBA,EACnBz3B,gBAAiBA,EACjB0zB,mBAAoBA,EACpBzB,SApBa,SAACrB,GAChBzG,GAAgC,EAAG,GAAIyG,EAAK2G,IAoB1Ch4B,OAAQA,EACRuvB,SAAU5+B,GACVinC,WAAYtnC,GACZg/B,aAAcmB,OAoCL3C,gBAAU,CACvB3J,KAAM,gBADO2J,CAEZH,I,qBCtMY0K,GA/FI,SAAC7S,GAClB,IAAQ7jC,EAAuD6jC,EAAvD7jC,KAAMoB,EAAiDyiC,EAAjDziC,QAASu1C,EAAwC9S,EAAxC8S,cAAerR,EAAyBzB,EAAzByB,KAAMgD,EAAmBzE,EAAnByE,WAAYloC,EAAOyjC,EAAPzjC,GAExD,EAAoCqmC,IAAMC,SAAS,IAAnD,oBAAOkQ,EAAP,KACA,GADA,KAC4CnQ,IAAMC,SAAS,KAA3D,oBAAOmQ,EAAP,KACMC,GADN,KACoBrQ,IAAMsQ,UA0CpB3O,EAAU,GAwBhB,OAvBAhnC,EAAQmO,KAAI,SAACC,EAAMC,GAAW,IAAD,EAzCCi6B,EA0C5BtB,EAAQ96B,KAAR,aACEwN,MAAOtL,EAAKsL,MACZ4uB,UAAWl6B,EAAKk6B,UAChB9G,IAAKpzB,EAAKk6B,UACVtF,MAAK,UAAE50B,EAAK40B,aAAP,QAAgB,MACrBwF,OAAQp6B,EAAKo6B,OACbG,OAAQv6B,EAAKu6B,OACbiN,eAAgB,CAAC,UAAW,YAjDFtN,EAkDFl6B,EAAKk6B,UAlDY,CAC3CuN,WAAY,SAACC,GAAD,OACV,cAAC7F,GAAA,EAAD,CAAgBvK,MAAO,CAAEr2B,MAAOymC,EAAW,eAAYj4C,MAEzDk4C,SAAU,SAAC7oC,EAAOg8B,GAAR,OACRA,EAAOZ,GACHY,EAAOZ,GACJt6B,WACAiB,cACAkiC,SAASjkC,EAAM+B,eAClB,IACN+mC,8BAA+B,SAACC,GAC1BA,GACFtlC,YAAW,kBAAM+kC,EAAYX,QAAQmB,WAAU,MAGnDvN,OAAQ,SAACM,GAAD,OACNwM,IAAmBnN,EACjB,cAAC,KAAD,CACE6N,eAAgB,CAAE7P,gBAAiB,UAAW8P,QAAS,GACvDC,YAAa,CAACb,GACdc,YAAU,EACVC,gBAAiBtN,EAAOA,EAAKj7B,WAAa,KAG5Ci7B,UA6BFsM,GACFvO,EAAQ96B,KAAK,CACXq8B,MAAO,SACP7uB,MAAO,OACP8nB,IAAK,SACLwB,MAAO,MACP2F,OAAQ4M,IAKV,cAAC,KAAD,CACExO,UAAQ,EACR/nC,GAAE,OAAEA,QAAF,IAAEA,IAAM,qBACVgoC,QAASA,EACTC,WAAYroC,EACZslC,KAAI,OAAEA,QAAF,IAAEA,IAAQ,SACdgD,WAAU,aACRhD,KAAM,EACNiD,gBAAiB,CAAC,KAAM,KAAM,MAC9BC,iBAAiB,GACdF,M,WCnDIsP,GA1BkB,SAAC/T,GAahC,OACE,cAAC,KAAD,CACEwT,QAASxT,EAAMwT,QACfQ,OAAQhU,EAAMgU,OACdC,gBAAc,EACdC,SAAUlU,EAAMkU,SAChB3T,MAAOP,EAAMO,MAAQP,EAAMO,MAAQ,IALrC,SAOGP,EAAMgQ,WC1BPmE,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAA4C,IAA1C1M,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAY0M,EAAe,EAAfA,SACjD,OACE,sBAAKh4C,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,eAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,qBAAKtrC,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,WACLnB,MAAM,WACN82B,YAAY,GACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,WACLnB,MAAM,eACN+zB,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,WACLnB,MAAM,WACN+zB,UAAWmI,GACXjnC,KAAK,sBAqCF40C,GA7Ba,SAACvU,GAC3B,IACErkB,EAOEqkB,EAPFrkB,eACAgsB,EAME3H,EANF2H,aACAC,EAKE5H,EALF4H,WACAlsB,EAIEskB,EAJFtkB,oBACA84B,EAGExU,EAHFwU,aACAF,EAEEtU,EAFFsU,SACAG,EACEzU,EADFyU,SAGF,OACE,cAAC,GAAD,CACEjB,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,OC5BdtM,GAAmBzF,mBAXD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACd0f,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,YAEU,SAACriB,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7D+b,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChBi3B,GAAgCplC,EAAMmO,OAGjB40B,EAxCG,SAAC1C,GAC3B,IACEoI,EAMEpI,EANFoI,MACAoM,EAKExU,EALFwU,aACa74B,EAIXqkB,EAJFvB,UAAa9iB,eACHwC,EAGR6hB,EAHFjhB,OAAUZ,WAEVkO,GACE2T,EAFFtU,QAAW/G,SAETqb,EADF3T,kBAUF,OACE,cAAC,GAAD,aACE1Q,eAAgBA,EAChB64B,aAAcA,EACd5M,WAXe,SAAC95B,GACds6B,GACF/b,EAAiBlO,EAAYrQ,IAU7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,aAC7C6hB,OAqBKsI,gBAAU,CACvB3J,KAAM,gBACN4J,SAAUR,IAFGO,CAGZH,ICjDK8J,GAAWC,KAAXD,OAmEOyC,GAjEQ,SAAC1U,GACtB,IACEziC,EAOEyiC,EAPFziC,QACAgiB,EAMEygB,EANFzgB,UACAmzB,EAKE1S,EALF0S,kBACA9E,EAIE5N,EAJF4N,kBACAe,EAGE3O,EAHF2O,mBACAn0B,EAEEwlB,EAFFxlB,OACA0yB,EACElN,EADFkN,SAGIzI,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAGZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,0BAEF,sBAAKA,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,4BASF,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAMojB,EACNhiB,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAQ1B,cAAC,GAAD,QCoEA0D,GAAmBzF,mBA1BD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,WAEW,SAAC1V,GAAD,MAAe,CACxCpJ,aAAc,SAACT,EAAMC,EAAOC,GAAd,OACZqlC,GAAmCvlC,EAAMC,EAAOC,IAClDkuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAAS07B,GAAkC,KADhC,uBAEX17B,EAAS07B,GAAgC,KAF9B,OAGjB17B,EAAS07B,GAA2B,QACpC17B,EAASiH,GAAgC,IACzCy0B,KALiB,2CAAF,kDAAC,GAOlB9pB,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAAS07B,GAA2B,SAD3B,uBAET17B,EAAS07B,GAAgC0B,EAAOlqC,KAFvC,uBAGT8M,EAAS07B,GAAkC0B,IAHlC,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKTy0B,KALS,4CAAF,mDAAC,GAOhBM,kBAAkB,WAAD,4BAAE,WAAOllC,GAAP,SAAAwN,EAAA,sEACXtE,EAAS07B,GAAgC5kC,IAD9B,OAEjB4kC,GAAkC5kC,GAFjB,2CAAF,mDAAC,MAMKuiC,EA7HD,SAAC1C,GACvB,IACE//B,EAKE+/B,EALF//B,aACAgb,EAIE+kB,EAJF/kB,gBACAoqB,EAGErF,EAHFqF,kBACAuI,EAEE5N,EAFF4N,kBAJF,EAMI5N,EADFjhB,OAAUQ,EALZ,EAKYA,UAAW/E,EALvB,EAKuBA,OAGfhb,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjB8E,EAAUnP,OAAS,GACrBmP,EAAU7T,KAAI,SAACC,EAAMC,GACnB2T,EAAU3T,GAAV,2BAAwBD,GAAxB,IAA8B65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAuD5Dg3B,IAAMG,WAAU,WACd9iC,EAAaT,EAAMC,KAClB,IAEH,IAAMkvC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAAS07B,GAA4BvqB,IALxB,OAMzBva,EAAa2uC,EAAUC,GANE,2CAAH,wDAaxB,OACE,cAAC,GAAD,aACEtxC,QAtEY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,WACP4uB,UAAW,WACX9G,IAAK,WACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEI,SAASqC,OAAS41B,EAAEj4B,SAASqC,SAEnD,CACE6G,MAAO,eACP4uB,UAAW,WACX9G,IAAK,WACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEqR,SAAS5O,OAAS41B,EAAEhnB,SAAS5O,SAEnD,CACE6G,MAAO,SACP4uB,UAAW,eACX9G,IAAK,eACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEuqB,aAAa9nB,OAAS41B,EAAE9N,aAAa9nB,UA4CzDmP,UAAWA,EACXmzB,kBAzCsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA2BRgK,kBAAmBA,EACnBe,mBAAoBA,EACpBn0B,OAAQA,EACR0yB,SAZa,SAACrB,GAChB5rC,EAAaT,EAAMC,EAAOosC,KAYpB7L,OAoCKsI,gBAAU,CACvB3J,KAAM,aADO2J,CAEZH,IClHYwM,GA5BE,SAAC3U,GAChB,OAGE,aAFA,CAEA,OAAK1jC,MAAM,gEAAX,SACE,qBAAKA,MAAM,2BAAX,SACE,sBAAKA,MAAM,kEAAX,UACE,qBACEolC,IAAI,iCACJplC,MAAM,iBACNqlC,IAAI,QAEN,oBAAIrlC,MAAM,+CAAV,iBACA,oBAAIA,MAAM,OAAV,4BACA,oBAAIA,MAAM,8BAAV,kEAGA,mBAAG0kC,KAAK,aAAa1kC,MAAM,kBAA3B,kCC+BKs4C,GAzCQ,SAACC,EAAmBC,EAAUC,GACnD,IAuBMzS,EAAkBC,aAAyB,CAC/CyS,gBpC3BFxS,aAAeJ,IAAc,SAACjE,GAAD,OAAWA,EAAMvwB,eoC4B5CqnC,SpCtBFzS,aAAeJ,IAAc,SAACjE,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAO5vB,kBAAlB,aAAW,EAAmBiB,SoCuBzD0lC,UpCrBF1S,aAAeJ,IAAc,SAACjE,GAAD,oBAAWA,QAAX,IAAWA,GAAX,UAAWA,EAAO5vB,kBAAlB,aAAW,EAAmBy0B,WoCgC3D,OAAON,kBAAQJ,GATY,SAACj5B,GAAD,MAAe,CACxC8rC,SAAU,WACRjnC,YAAW,WACT3E,EAAS,SACTF,EAASJ,GAAiB,MACzB,MAELmsC,mBAAoB,kBAAM7rC,EAAS,qBAE9Bm5B,EArCY,SAAC1C,GAClB,IAAQgV,EAA6DhV,EAA7DgV,gBAAiBG,EAA4CnV,EAA5CmV,SAAUD,EAAkClV,EAAlCkV,UAAWE,EAAuBpV,EAAvBoV,mBAE9C,GAAKJ,EAEE,CACL,GAAID,EACsBG,EAAUxkC,QAAO,SAACC,GAAD,OAAOA,EAAEnH,OAASsrC,KAEvC1kC,QAAU,GAC5BglC,IAGJl4C,EAAYQ,SAASH,QAArB,+BAEcy3C,QAXdG,IAcF,OACE,8BAAMH,EAAkB,cAACH,EAAD,eAAuB7U,IAAY,W,qBCXlDqV,GAJsB,SAACrV,GACpC,OAAO,sBAAMmC,UAAS,sBAAiBnC,EAAMrgC,MAAtC,SAA+CqgC,EAAM8B,YCRxDqS,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAAgD,IAA9C1M,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,WAAY0N,EAAmB,EAAnBA,aACjD,OACE,sBAAKh5C,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,4BACA,cAACmsC,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,SACE,qBAAKtrC,MAAM,YAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAMm5C,EACNzpC,KAAK,WACLnB,MAAM,0BAiCH6qC,GAzBmB,SAACvV,GACjC,IACErkB,EAKEqkB,EALFrkB,eACAgsB,EAIE3H,EAJF2H,aACAC,EAGE5H,EAHF4H,WACA4M,EAEExU,EAFFwU,aACAc,EACEtV,EADFsV,aAGF,OACE,cAAC,GAAD,CACE9B,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACEsF,aAAcA,EACd3N,aAAcA,EACdC,WAAYA,OCGhBO,GAAmBzF,mBAVD,SAACvE,GAAD,MAAY,CAClC/c,UAAW+c,EAAM/c,UACjBqd,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,QACfvV,SAAUgoB,EAAMhoB,aAES,SAAC9M,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,QAGtCoyB,EAnDS,SAAC1C,GACjC,IACEwU,EAKExU,EALFwU,aACYp+B,EAIV4pB,EAJF7pB,SAAYC,mBACCuF,EAGXqkB,EAHFvB,UAAa9iB,eACAoH,EAEXid,EAFF5e,UAAa2B,cACbqlB,EACEpI,EADFoI,MAGIoN,EAAiB,GACvBzyB,EAAcrX,KAAI,SAACC,EAAMC,GACvB4pC,EAAe/rC,KAAK,CAClBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAgBhB,OACE,cAAC,GAAD,aACE8P,eAAgBA,EAChB64B,aAAcA,EACdc,aAAcE,EACd5N,WAjBe,SAAC95B,GAClB,GAAIs6B,EAAO,CACTnsC,QAAQC,IAAI,SACZ,IAAMoY,EAAWxG,EAAOwG,SAASnE,MAAM,KACvCslC,GACEr/B,EAAmB7Z,GACnB+X,EAAS,OAYP0rB,OAoBKsI,gBAAU,CACvB3J,KAAM,sBACN4J,S7B4EyC,SAACz6B,GAC1C,IAAMk6B,EAAS,GAIf,OAHKl6B,EAAOwG,WACV0zB,EAAO1zB,SAAW,yBAEb0zB,I6BnFMM,CAGZH,I,0CCnEUuN,GACF,UADEA,GAGF,UAHEA,GAIA,UCEPvB,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAA4C,IAA1C1M,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAY0M,EAAe,EAAfA,SACjD,OACE,sBAAKh4C,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,cAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,SACE,qBAAKtrC,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,SACLnB,MAAM,gBACN+zB,UAAWmI,GACXC,cAAc,WACdrF,YAAY,kCAqCTmU,GA7BgB,SAAC3V,GAC9B,IACErkB,EAOEqkB,EAPFrkB,eACAgsB,EAME3H,EANF2H,aACAC,EAKE5H,EALF4H,WACAlsB,EAIEskB,EAJFtkB,oBACA84B,EAGExU,EAHFwU,aACAF,EAEEtU,EAFFsU,SACAG,EACEzU,EADFyU,SAGF,OACE,cAAC,GAAD,CACEjB,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,OCTdtM,GAAmBzF,mBAhBD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdtC,OAAQ0hB,EAAM1hB,OACdnG,cAAe6nB,EAAM7nB,cACrBoV,QAASyS,EAAMzS,QACfvV,SAAUgoB,EAAMhoB,aAES,SAAC9M,GAAD,MAAe,CACxCmrC,aAAc,kBACZnrC,EAASusC,IAAmD,KAE9DvpB,iBAAkB,SAACtsB,EAAO+N,GACxB8nC,GAA6D71C,EAAO+N,OAI/C40B,EA5CM,SAAC1C,GAC9B,IACEoI,EAKEpI,EALFoI,MACAoM,EAIExU,EAJFwU,aACiBzrB,EAGfiX,EAHF1pB,cAAiByS,gBACL3S,EAEV4pB,EAFF7pB,SAAYC,mBACZiW,EACE2T,EADF3T,iBAWF,OACE,cAAC,GAAD,aACE1Q,eAAgBoN,EAChByrB,aAAcA,EACd5M,WAZe,SAAC95B,GACds6B,IACFnsC,QAAQC,IAAI,SACZmwB,EAAiBjW,EAAmB7Z,GAAIuR,KAUxCwmC,SAAU,iBACNtU,OA0BKsI,gBAAU,CACvB3J,KAAM,mBACN4J,ShCuHkC,SAACz6B,GACnC,IAAMk6B,EAAS,GAIf,OAHKl6B,EAAO+nC,QACV7N,EAAO6N,MAAQ,0BAEV7N,IgC9HMM,CAGZH,I,iDChDGgM,GAAe,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,eAAgB0B,EAAkB,EAAlBA,YACtC,MAAO,CACL,cAAC,GAAD,CACE5U,KAAM,cAAC6U,GAAA,EAAD,IAENp2C,KAAK,UACL0gC,SAAS,EACTuB,QAASkU,EACTlS,QAAM,EANR,kBAEM,UAQN,cAAC,GAAD,CAEE1C,KAAM,cAAC8U,GAAA,EAAD,IACNr2C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EALX,mBACM,YAWJ6B,GAAa,SAACjW,GAClB,IAAQ7jC,EAA8C6jC,EAA9C7jC,KAAM+5C,EAAwClW,EAAxCkW,kBAAmBC,EAAqBnW,EAArBmW,iBAE3BzN,EAAO,SAAC,GAAc,IAAZ/8B,EAAW,EAAXA,KACd,OACE,cAAC,KAAD,CAAUE,KAAI,eAAUF,EAAKlB,OAASA,MAAOkB,EAAKlB,MAAlD,SACGkB,EAAKjB,SAKZ,OACE,mCACE,cAAC,KAAS0rC,MAAV,2BACMpW,EAAMqH,OADZ,IAEEpE,MAAO,CAAE1C,MAAO,QAChBmJ,aAAcwM,EACd/O,SAAUgP,EAJZ,SAME,cAAC,KAAD,UACGh6C,EAAKuP,KAAI,SAACC,EAAMC,GACf,OACE,cAAC,KAAD,CAAKyqC,KAAM,EAAX,SACE,cAACvO,GAAA,EAAD,CACEn8B,KAAMA,EACNE,KAAI,eAAUF,EAAKlB,OACnBg0B,UAAWiK,iBAWvB2L,GAAgB,SAAC,GAShB,IARL1M,EAQI,EARJA,aACAC,EAOI,EAPJA,WAEA6M,GAKI,EANJH,SAMI,EALJG,UACAyB,EAII,EAJJA,kBACA/3B,EAGI,EAHJA,WACAg4B,EAEI,EAFJA,iBAEI,EADJ3B,aAEA,OACE,sBAAKl4C,MAAM,eAAX,UACE,cAAC,KAAD,CAASgxC,YAAY,OAArB,0BACA,eAAC7E,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,sBAAKtrC,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,YAAYnB,MAAM,oBAEtC,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,UAAUnB,MAAM,oBAEpC,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CAEEH,KAAMiP,GACNS,KAAK,WACLnB,MAAM,kBAIZ,sBAAKpO,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAEEH,KAAMmP,KACNO,KAAK,iBACLnB,MAAM,sBAGV,qBAAKpO,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,gBACLnB,MAAM,gBACN+zB,UAAWmI,GACX0P,eAAe,cAIrB,qBAAKh6C,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,aACLnB,MAAM,cAEN+zB,UAAWmI,GACX0P,eAAe,gBAKP,SAAfn4B,GACC,qCACE,uBACA,oBAAI7hB,MAAM,yBAAV,wBACA,cAAC,GAAD,CACEH,KAAMs4C,EACNyB,kBAAmBA,EACnBC,iBAAkBA,WAgDfI,GAxCuB,SAACvW,GACrC,IACErkB,EAUEqkB,EAVFrkB,eACAgsB,EASE3H,EATF2H,aACAC,EAQE5H,EARF4H,WACAlsB,EAOEskB,EAPFtkB,oBACA84B,EAMExU,EANFwU,aACAF,EAKEtU,EALFsU,SACAG,EAIEzU,EAJFyU,SACA+B,EAGExW,EAHFwW,YACAr4B,EAEE6hB,EAFF7hB,WACAg4B,EACEnW,EADFmW,iBAGF,OACE,cAAC,GAAD,CACE3C,QAAS73B,EACTu4B,SAAUM,EACVR,OACE,cAAC,GAAD,CACEI,eAAgBzM,EAChBmO,YAAatB,IAGjBxE,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,EACVyB,kBAAmBM,EACnBr4B,WAAYA,EACZg4B,iBAAkBA,OCnHtBhO,GAAmBzF,mBAtBD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdvP,MAAO2uB,EAAM3uB,MACbivB,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,QACfpV,cAAe6nB,EAAM7nB,cACrBH,SAAUgoB,EAAMhoB,aAES,SAAC9M,GAAD,MAAe,CACxCmrC,aAAc,kBACZnrC,EAASosC,IAAuD,KAClEgB,wBAAyB,aAGzBpqB,iBAAkB,SAAC1sB,EAAMmO,EAAQmC,QAQVyyB,EA1DO,SAAC1C,GAC/B,IACEoI,EAIEpI,EAJFoI,MACAoM,EAGExU,EAHFwU,aACiBxrB,EAEfgX,EAFF1pB,cAAiB0S,qBACNrE,EACTqb,EADFtU,QAAW/G,SAWP+xB,EAAa,GASnB,OARA/xB,EAASjZ,KAAI,SAACC,EAAMC,GAClB8qC,EAAWjtC,KAAK,CACdlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKiF,UAKd,cAAC,GAAD,aACE+K,eAAgBqN,EAChBwrB,aAAcA,EACd5M,WArBe,SAAC95B,GACds6B,GAEFqN,GAAwD3nC,IAmBxD2mC,SAAUiC,GACN1W,OAgCKsI,gBAAU,CACvB3J,KAAM,sBACN4J,SAAUL,IAFGI,CAGZH,I,WC7DGgM,GAAe,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,eAAgB0B,EAAkB,EAAlBA,YACtC,MAAO,CACL,cAAC,GAAD,CACE5U,KAAM,cAAC6U,GAAA,EAAD,IAENp2C,KAAK,UACL0gC,SAAS,EACTuB,QAASkU,EACTlS,QAAM,EANR,kBAEM,UAQN,cAAC,GAAD,CAEE1C,KAAM,cAAC8U,GAAA,EAAD,IACNr2C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EALX,mBACM,YAWJ6B,GAAa,SAACjW,GAClB,IAAQ7jC,EAA8C6jC,EAA9C7jC,KAAM+5C,EAAwClW,EAAxCkW,kBAAmBC,EAAqBnW,EAArBmW,iBAE3BzN,EAAO,SAAC,GAAc,IAAZ/8B,EAAW,EAAXA,KACd,OACE,cAAC,KAAD,CAAUE,KAAI,eAAUF,EAAKlB,OAASA,MAAOkB,EAAKlB,MAAlD,SACGkB,EAAKjB,SAKZ,OACE,mCACE,cAAC,KAAS0rC,MAAV,2BACMpW,EAAMqH,OADZ,IAEEpE,MAAO,CAAE1C,MAAO,QAChBmJ,aAAcwM,EACd/O,SAAUgP,EAJZ,SAME,cAAC,KAAD,UACGh6C,EAAKuP,KAAI,SAACC,EAAMC,GACf,OACE,cAAC,KAAD,CAAKyqC,KAAM,EAAX,SACE,cAACvO,GAAA,EAAD,CACEn8B,KAAMA,EACNE,KAAI,eAAUF,EAAKlB,OACnBg0B,UAAWiK,iBAWvB2L,GAAgB,SAAC,GAYhB,IAAD,IAXJ1M,EAWI,EAXJA,aACAC,EAUI,EAVJA,WAEA6M,GAQI,EATJH,SASI,EARJG,UACAyB,EAOI,EAPJA,kBACA/3B,EAMI,EANJA,WACAg4B,EAKI,EALJA,iBAEA5/B,GAGI,EAJJi+B,aAII,EAHJj+B,iBACAogC,EAEI,EAFJA,uBACA//B,EACI,EADJA,aAEA,OACE,sBAAKta,MAAM,eAAX,UACE,cAAC,KAAD,CAASgxC,YAAY,OAArB,mBACsB,QAApB/2B,EAA4B,SAAW,OADzC,sBAGA,eAACkyB,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,qBAAKtrC,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,QACLnB,MAAM,QAEN+zB,UAAWmI,GACX0P,eAAe,aAIrB,qBAAKh6C,MAAM,WAAX,SACE,sBAAKA,MAAM,WAAX,UACE,cAAC,KAAD,CACE2mC,MAAO,CAAE2T,aAAc,GADzB,kCAGA,cAAC,KAAWC,YAAZ,CACEhrC,KAAK,eACLpB,MAAO,WAACmM,EAAa,UAAd,QAAoB,GAApB,UAAwBA,EAAa,UAArC,QAA2C,IAClDuwB,SAAUwP,SAIhB,sBAAKr6C,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,YAAYnB,MAAM,oBAEtC,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,UAAUnB,MAAM,uBAItC,qBAAKpO,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,YACN+zB,UAAWmI,GACX0P,eAAe,aAIrB,qBAAKh6C,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAMkP,GACNQ,KAAK,eACLnB,MAAM,0BAKE,SAAfyT,GACC,qCACE,uBACA,oBAAI7hB,MAAM,yBAAV,wBACA,cAAC,GAAD,CACEH,KAAMs4C,EACNyB,kBAAmBA,EACnBC,iBAAkBA,WAsDfW,GA9CmB,SAAC9W,GACjC,IACErkB,EAaEqkB,EAbFrkB,eACAgsB,EAYE3H,EAZF2H,aACAC,EAWE5H,EAXF4H,WACAlsB,EAUEskB,EAVFtkB,oBACA84B,EASExU,EATFwU,aACAF,EAQEtU,EARFsU,SACAG,EAOEzU,EAPFyU,SACA+B,EAMExW,EANFwW,YACAr4B,EAKE6hB,EALF7hB,WACAg4B,EAIEnW,EAJFmW,iBACA5/B,EAGEypB,EAHFzpB,gBACAogC,EAEE3W,EAFF2W,uBACA//B,EACEopB,EADFppB,aAGF,OACE,cAAC,GAAD,CACE48B,QAAS73B,EACTu4B,SAAUM,EACVR,OACE,cAAC,GAAD,CACEI,eAAgBzM,EAChBmO,YAAatB,IAGjBxE,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,EACVyB,kBAAmBM,EACnBr4B,WAAYA,EACZg4B,iBAAkBA,EAClB5/B,gBAAiBA,EACjBogC,uBAAwBA,EACxB//B,aAAcA,OC5HlBuxB,GAAmBzF,mBApBD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdvP,MAAO2uB,EAAM3uB,MACbivB,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,QACfpV,cAAe6nB,EAAM7nB,cACrBH,SAAUgoB,EAAMhoB,SAChB4gC,sBAAuB9K,aAAc,kBAAdA,CAAiC9N,OAE/B,SAAC90B,GAAD,MAAe,CACxCmrC,aAAc,kBACZnrC,EAASosC,IAAmD,KAC9DgB,wBAAyB,aAGzBO,mBAAoB,SAACC,GACnB5tC,EAASqG,aAAO,kBAAmB,eAApB,OAAoCunC,QAApC,IAAoCA,IAAQ,SAItCvU,EAnES,SAAC1C,GACjC,IACEoI,EAMEpI,EANFoI,MACAoM,EAKExU,EALFwU,aAFF,EAOIxU,EAJF1pB,cAAiB2S,EAHnB,EAGmBA,iBAAkB1S,EAHrC,EAGqCA,gBACxBoO,EAGTqb,EAHFtU,QAAW/G,SACXqyB,EAEEhX,EAFFgX,mBACAD,EACE/W,EADF+W,sBASIL,EAAa,GACnB/xB,EAASjZ,KAAI,SAACC,EAAMC,GAClB8qC,EAAWjtC,KAAK,CACdlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKiF,UAQhB,OACE,cAAC,GAAD,aACE+K,eAAgBsN,EAChBurB,aAAcA,EACd5M,WAvBe,SAAC95B,GACds6B,GACFqN,GAA+D3nC,IAsB/D2mC,SAAUiC,EACVngC,gBAAiBA,EACjBogC,uBAX2B,SAACM,GAC9BD,EAAmBC,IAWjBrgC,aACEmgC,GAAyBA,EAAsBngC,aAC3CmgC,EAAsBngC,aACtB,CAAC,GAAI,KAEPopB,OA8BKsI,gBAAU,CACvB3J,KAAM,kBACN4J,SpC+IiC,SAACz6B,GAClC,IAAMk6B,EAAS,GAaf,OAZKl6B,EAAO4I,eACVsxB,EAAOtxB,aAAe,0BAEnB5I,EAAOmJ,QACV+wB,EAAO/wB,MAAQ,0BAEZnJ,EAAOoJ,cACV8wB,EAAO9wB,YAAc,0BAElBpJ,EAAOqJ,YACV6wB,EAAO7wB,UAAY,0BAEd6wB,IoC/JMM,CAGZH,I,8BClEGgM,GAAe,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,eAAgB0B,EAAkB,EAAlBA,YACtC,MAAO,CACL,cAAC,GAAD,CACE5U,KAAM,cAAC6U,GAAA,EAAD,IAENp2C,KAAK,UACL0gC,SAAS,EACTuB,QAASkU,EACTlS,QAAM,EANR,kBAEM,UAQN,cAAC,GAAD,CAEE1C,KAAM,cAAC8U,GAAA,EAAD,IACNr2C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EALX,mBACM,YAWJC,GAAgB,SAAC,GAUhB,IATL1M,EASI,EATJA,aACAC,EAQI,EARJA,WACAsP,EAOI,EAPJA,aACAC,EAMI,EANJA,aACAl/B,EAKI,EALJA,SACAm/B,EAII,EAJJA,aACAhL,EAGI,EAHJA,SACAiL,EAEI,EAFJA,cACAjR,EACI,EADJA,WAEA,OACE,sBAAK9pC,MAAM,eAAX,UACE,cAAC,KAAD,CAASgxC,YAAY,OAArB,0BACA,eAAC7E,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,cAAC,KAAD,UACE,sBACEtrC,MAAM,YACN2mC,MAAO,CACLqU,YAAa,GACbC,WAAY,GACZzT,UAAW,UALf,UAQE,cAAC,KAAD,CACEj4B,KAAK,SACL2rC,SAAS,eACTrV,UAAU,kCACVsV,gBAAgB,EAChBP,aAAcA,EACd/P,SAAUgQ,EANZ,SAQgB,KAAbl/B,EACC,qCAEI,qBACEypB,IAAKzpB,EACL0pB,IAAI,SACJsB,MAAO,CACL1C,MAAO,OACPD,OAAQ,OACRoX,WAAY,UACZrR,aAAc,KAIpB,sBACE/pC,MAAM,MACN2mC,MAAO,CACLY,gBAAiB,UACjBllC,SAAU,WACV4hC,MAAO,GACPoX,MAAO,GACPtR,aAAc,GACduR,WAAY,SACZC,eAAgB,SAChBC,QAAS,IAVb,UAaE,cAAC,KAAD,CAAY7U,MAAO,CAAEuE,SAAU,IAA/B,kBACA,cAACd,GAAA,EAAD,CACEzD,MAAO,CACLr2B,MAAO,UACP46B,SAAU,GACV8P,WAAY,WAMpBF,KAGe,IAAlBC,GACC,cAAC,KAAD,CAAYpU,MAAO,CAAEuE,SAAU,GAAI56B,MAAO,OAA1C,0CAMN,qBAAKtQ,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,QACLnB,MAAM,QACN+zB,UAAWmI,GACX0P,eAAe,aAIrB,qBAAKh6C,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,YACN+zB,UAAWmI,GACX0P,eAAe,aAIpBlQ,GACC,qBAAK9pC,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAMiwC,EACNvgC,KAAK,OACLnB,MAAM,0BA0GPqtC,GAhGmB,SAAC/X,GACjC,IACErkB,EAcEqkB,EAdFrkB,eACAgsB,EAaE3H,EAbF2H,aACAC,EAYE5H,EAZF4H,WACAlsB,EAWEskB,EAXFtkB,oBACA84B,EAUExU,EAVFwU,aACAF,EASEtU,EATFsU,SACAlI,EAQEpM,EARFoM,SACAoK,EAOExW,EAPFwW,YACAr4B,EAME6hB,EANF7hB,WACAg4B,EAKEnW,EALFmW,iBACA6B,EAIEhY,EAJFgY,aACAC,EAGEjY,EAHFiY,kBACAZ,EAEErX,EAFFqX,cACAjR,EACEpG,EADFoG,WAEF,EAA8BxD,IAAMC,UAAS,GAA7C,oBAAOxC,EAAP,KAAgB6X,EAAhB,KACA,EAAgCtV,IAAMC,SAAS,IAA/C,oBAAO5qB,EAAP,KAAiBkgC,EAAjB,KAEAvV,IAAMG,WAAU,WAEZoV,EADEH,GAGU,MAEb,CAACA,EAAc//B,IAElB,IA2BMm/B,EACJ,gCACG/W,EAAU,cAAC+X,GAAA,EAAD,IAAsB,cAAC/N,GAAA,EAAD,IACjC,qBAAKpH,MAAO,CAAEsU,UAAW,GAAzB,uBAIJ,OACE,cAAC,GAAD,CACE/D,QAAS73B,EACTu4B,SAAUM,EACVR,OACE,cAAC,GAAD,CACEI,eAAgBzM,EAChBmO,YAAatB,IAGjBxE,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVlI,SAAUA,EACV8J,kBAAmBM,EACnBr4B,WAAYA,EACZg4B,iBAAkBA,EAClBgC,YAAaA,EACbD,WAAYA,EACZhB,aAxDa,SAACmB,GACpB,IAAMC,EAA2B,eAAdD,EAAK14C,MAAuC,cAAd04C,EAAK14C,KACjD24C,GACH55C,KAAQ5C,MAAM,qCAEhB,IAAMy8C,EAASF,EAAK5W,KAAO,KAAO,KAAO,EAIzC,OAHK8W,GACH75C,KAAQ5C,MAAM,gCAETw8C,GAAcC,GAgDfpB,aA7Ca,SAACqB,GACK,cAArBA,EAAKH,KAAKr8C,SACZk8C,GAAW,GACXM,EAAKH,KAAKr8C,OAAS,QAEI,SAArBw8C,EAAKH,KAAKr8C,QAEZgO,EAAUwuC,EAAKH,KAAKI,eAAe,SAACxgC,GAClCkgC,EAAYlgC,GACZigC,GAAW,GACXD,EAAkBhgC,OAoChBm/B,aAAcA,EACdn/B,SAAUA,EACVo/B,cAAeA,EACfjR,WAAYA,OCpKhB+B,GAAmBzF,mBAdD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdvP,MAAO2uB,EAAM3uB,MACbivB,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,QACfpV,cAAe6nB,EAAM7nB,cACrBH,SAAUgoB,EAAMhoB,SAChB61B,WAAYC,aAAc,gBAAdA,CAA+B9N,OAElB,SAAC90B,GAAD,MAAe,CACxCmrC,aAAc,kBACZnrC,EAASosC,IAAmD,QAGvC/S,EAxES,SAAC1C,GACjC,IACEoI,EAKEpI,EALFoI,MACAoM,EAIExU,EAJFwU,aACiBrrB,EAGf6W,EAHF1pB,cAAiB6S,iBACjB6iB,EAEEhM,EAFFgM,WACY51B,EACV4pB,EADF7pB,SAAYC,mBAEd,EAA0CwsB,IAAMC,SAAS,MAAzD,oBAAOwU,EAAP,KAAsBqB,EAAtB,KAkBM/L,EAAa,GACfv2B,EAAmBP,OAASO,EAAmBP,MAAMzF,OAAS,GAChEgG,EAAmBP,MAAMnK,KAAI,SAACC,EAAMC,GAClC+gC,EAAWljC,KAAK,CACdlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAK+N,eASlB,OACE,cAAC,GAAD,aACEiC,eAAgBwN,EAChBqrB,aAAcA,EACd5M,WA9Be,SAAC95B,GACds6B,IACE4D,EAAW/zB,UACbygC,GAAiB,GACjBjD,GAA+D3nC,KARnE4qC,GAAiB,GACjBvpC,GAAU,uBAAwB,YAkChCi9B,SAAUO,EACVsL,kBAVsB,SAACjgC,GACzB1O,GAAMD,SAASqG,aAAO,gBAAD,kBAA8BsI,QAA9B,IAA8BA,IAAU,MAU3Dq/B,cAAeA,EACfW,aACEhM,GAAcA,EAAW/zB,SAAW+zB,EAAW/zB,SAAW,GAE5DmuB,WAAYhwB,EAAmBkB,aAC3B0oB,OAwBKsI,gBAAU,CACvB3J,KAAM,gBACN4J,StCuGmC,SAACz6B,GACpC,IACMoI,GAAc3G,EADCjG,GAAbiG,YACuB4G,SAASC,mBAElC4xB,EAAS,GAWf,OAVKl6B,EAAOmK,WACV+vB,EAAO/vB,SAAW,0BAEfnK,EAAOmJ,QACV+wB,EAAO/wB,MAAQ,0BAEZnJ,EAAOiK,OAAoC,IAA5B7B,EAAYoB,cAC9B0wB,EAAOjwB,KAAO,qBAGTiwB,IsCxHMM,CAGZH,IClFGgM,GAAe,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,eAAgB0B,EAAkB,EAAlBA,YACtC,MAAO,CACL,cAAC,GAAD,CACE5U,KAAM,cAAC6U,GAAA,EAAD,IAENp2C,KAAK,UACL0gC,SAAS,EACTuB,QAASkU,EACTlS,QAAM,EANR,kBAEM,UAQN,cAAC,GAAD,CAEE1C,KAAM,cAAC8U,GAAA,EAAD,IACNr2C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EALX,mBACM,YAgDJC,GAAgB,SAAC,GAAiD,IAA/C1M,EAA8C,EAA9CA,aAAcC,EAAgC,EAAhCA,WAAY+Q,EAAoB,EAApBA,cACjD,OACE,sBAAKr8C,MAAM,eAAX,UACE,cAAC,KAAD,CAASgxC,YAAY,OAArB,0BACA,cAAC7E,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,SACE,qBAAKtrC,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,UACLnB,MAAM,iBACN+zB,UAAWmI,GACXC,cAAc,WACdG,WAAS,EACTI,UAAWuR,cAmDVC,GA1CmB,SAAC5Y,GACjC,IACErkB,EAWEqkB,EAXFrkB,eACAgsB,EAUE3H,EAVF2H,aACAC,EASE5H,EATF4H,WACAlsB,EAQEskB,EARFtkB,oBACA84B,EAOExU,EAPFwU,aACAF,EAMEtU,EANFsU,SACAG,EAKEzU,EALFyU,SACA+B,EAIExW,EAJFwW,YACAr4B,EAGE6hB,EAHF7hB,WACAg4B,EAEEnW,EAFFmW,iBACA5/B,EACEypB,EADFzpB,gBAGF,OACE,cAAC,GAAD,CACEi9B,QAAS73B,EACTu4B,SAAUM,EACVR,OACE,cAAC,GAAD,CACEI,eAAgBzM,EAChBmO,YAAatB,IAGjBxE,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,EACVyB,kBAAmBM,EACnBr4B,WAAYA,EACZg4B,iBAAkBA,EAClB5/B,gBAAiBA,OC5DrB4xB,GAAmBzF,mBAlBD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdvP,MAAO2uB,EAAM3uB,MACbivB,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,QACfpV,cAAe6nB,EAAM7nB,cACrBH,SAAUgoB,EAAMhoB,aAES,SAAC9M,GAAD,MAAe,CACxCmrC,aAAc,kBACZnrC,EAASosC,IAAmD,KAC9DgB,wBAAyB,WACvBptC,EAASqG,aAAO,kBAAD,OAA4B,KAC3CrG,EAASqG,aAAO,kBAAD,SAA8B,KAC7CrG,EAASqG,aAAO,kBAAD,UAA+B,SAIzBgzB,EA5DS,SAAC1C,GACjC,IACEoI,EAIEpI,EAJFoI,MACAoM,EAGExU,EAHFwU,aAFF,EAKIxU,EAFF1pB,cAAiB4S,EAHnB,EAGmBA,iBAAkB3S,EAHrC,EAGqCA,gBACxBoO,EACTqb,EADFtU,QAAW/G,SAUP+xB,EAAa,GACnB/xB,EAASjZ,KAAI,SAACC,EAAMC,GAClB8qC,EAAWjtC,KAAK,CACdlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKiF,UAShB,OACE,cAAC,GAAD,aACE+K,eAAgBuN,EAChBsrB,aAAcA,EACd5M,WAzBe,SAAC95B,GACds6B,GACFqN,GAA+D3nC,IAwB/D2mC,SAAUiC,EACVngC,gBAAiBA,EACjBoiC,cAZkB,SAACpP,GACjBA,EAAExK,MAYAiB,OA4BKsI,gBAAU,CACvB3J,KAAM,kBACN4J,SAAUL,IAFGI,CAGZH,ICpDK0Q,GAASC,KAATD,KACAE,GAAYC,KAAZD,QA2OOE,GAzO2B,SAACjZ,GAAW,IAAD,sBAEjD7jC,EAUE6jC,EAVF7jC,KACA+8C,EASElZ,EATFkZ,iBACAC,EAQEnZ,EARFmZ,0BACAC,EAOEpZ,EAPFoZ,SACAC,EAMErZ,EANFqZ,YACAhM,EAKErN,EALFqN,uBACAiM,EAIEtZ,EAJFsZ,OACAC,EAGEvZ,EAHFuZ,mBACAt+B,EAEE+kB,EAFF/kB,gBACAu+B,EACExZ,EADFwZ,oBAGIC,EAAqB,SAAC,GAAsB,IAC5CC,EADwB19C,EAAmB,EAAnBA,OAAmB,EAAXkR,KAEpC,cAAQlR,QAAR,IAAQA,OAAR,EAAQA,EAAQwQ,eACd,IAAK,YACHktC,EACE,qCACE,qBAAKp9C,MAAM,SACX,cAAC,GAAD,CACEslC,QAAS,kBAAM2X,EAAmBp9C,EAAKI,GAAI,aAC3CoD,KAAK,UACLuhC,KAAM,cAACyY,GAAA,EAAD,IACNlY,KAAK,SACLoC,gBAAiB6R,GALnB,qBASA,qBAAKp5C,MAAM,SACX,cAAC,GAAD,CACEslC,QAAS,kBAAM2X,EAAmBp9C,EAAKI,GAAI,aAC3CoD,KAAK,UACLuhC,KAAM,cAAC0Y,GAAA,EAAD,IACNnY,KAAK,SACLoC,gBAAiB6R,GALnB,uBAWJ,MACF,IAAK,WACHgE,EACE,qCACE,qBAAKp9C,MAAM,SACX,cAAC,GAAD,CACEslC,QAAS,kBAAM2X,EAAmBp9C,EAAKI,GAAI,aAC3CoD,KAAK,UACLuhC,KAAM,cAACyY,GAAA,EAAD,IACNlY,KAAK,SACLoC,gBAAiB6R,GALnB,yBAWJ,MACF,IAAK,WACHgE,EACE,qCACE,qBAAKp9C,MAAM,SACX,cAAC,GAAD,CAEEqD,KAAK,UACLuhC,KAAM,cAAC0Y,GAAA,EAAD,IACNnY,KAAK,SACLoC,gBAAiB6R,GALnB,uBAWJ,MAEF,QACE,OAAO,wBAEX,OAAOgE,GAGT,OACE,sBAAKp9C,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,sBAAKA,MAAM,iDAAX,UACE,8BACE,oBAAIA,MAAM,aAAV,gCAEF,sBAAKA,MAAM,qBAAX,UACE,cAAC,KAAD,CAAM2kC,GAAI,gBAAiBW,QAAS0X,EAApC,SACE,cAAC,GAAD,CACE35C,KAAK,UACLuhC,KAAM,cAAC2Y,GAAA,EAAD,IACNpY,KAAK,SACLmC,QAAM,EAJR,uBASF,qBAAKtnC,MAAM,SACsB,cAA5B,OAAJH,QAAI,IAAJA,GAAA,UAAAA,EAAMH,cAAN,eAAcwQ,iBACZ2sC,GAC+B,cAA5B,OAAJh9C,QAAI,IAAJA,GAAA,UAAAA,EAAMH,cAAN,eAAcwQ,gBACZ,cAAC,GAAD,CACEo1B,QAAS3mB,EACTtb,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,SAJP,kBAS6B,cAA5B,OAAJtlC,QAAI,IAAJA,GAAA,UAAAA,EAAMH,cAAN,eAAcwQ,iBACZ2sC,GACC,cAAC,GAAD,CACEvX,QAAS4X,EACT75C,KAAK,UACLuhC,KAAM,cAAC4Y,GAAA,EAAD,IACNrY,KAAK,SAJP,gCASJ,cAACgY,EAAD,CAAoBz9C,OAAQG,EAAKH,SACjC,qBAAKM,MAAM,SAEV48C,GACC,cAAC,GAAD,CACEtX,QAASyL,EACT1tC,KAAK,UACLuhC,KAAM,cAACqM,GAAA,EAAD,IACN9L,KAAK,SAJP,kCAWN,sBACEllC,GAAG,4BACHD,MAAM,sDAFR,UAIE,sBAAKA,MAAM,WAAX,UACE,cAAC,GAAD,sBACA,cAAC,GAAD,CAAYqD,KAAMxD,EAAKmb,YAAc,UAAY,OAAjD,mBACGnb,EAAKwD,YADR,QACgB,MAEhB,uBACA,cAAC,GAAD,sBACA,cAAC,GAAD,oBAAOxD,EAAK4b,YAAZ,QAAoB,MACpB,uBACA,cAAC,GAAD,4BACA,cAAC,GAAD,oBAAO5b,EAAK49C,aAAZ,QAAqB,MACrB,uBACA,cAAC,GAAD,2BACA,cAAC,GAAD,oBAAO59C,EAAKk7B,qBAAZ,QAA6B,MAC7B,uBACA,cAAC,GAAD,0BACA,cAAC,GAAD,CAAM2iB,QAAM,EAAZ,SAAc79C,EAAK2gC,gBACnB,uBACA,cAAC,GAAD,0BACA,cAAC,GAAD,CAAMkd,QAAM,EAAZ,SACG79C,EAAK6Y,SAAW,WAAa,gBAEhC,uBACA,cAAC,GAAD,qBACA,cAAC,GAAD,CAAMglC,QAAM,EAAZ,mBAAc79C,EAAK89C,yBAAnB,QAAwC,UAE1C,sBAAK39C,MAAM,WAAX,UACE,cAAC,GAAD,kCACA,cAAC,GAAD,CACEqD,KACkC,WAA5B,OAAJxD,QAAI,IAAJA,GAAA,UAAAA,EAAMH,cAAN,eAAcwQ,eACV,UACA,UAJR,mBAOGrQ,EAAKH,cAPR,QAOkB,MAElB,uBACA,cAAC,GAAD,6BACA,cAAC,GAAD,CAAMg+C,QAAM,EAAZ,SAAc79C,EAAKqZ,cACnB,uBACA,cAAC,GAAD,6BACA,cAAC,GAAD,CAAMwkC,QAAM,EAAZ,mBAAiB7kC,KAAOhZ,EAAK+Y,OAAOG,OAClC,eADF,cAEOF,KAAOhZ,EAAKmZ,KAAKD,OAAO,kBAE/B,uBACA,cAAC,GAAD,wBACA,cAAC,GAAD,CAAM2kC,QAAM,EAAZ,SAAc79C,EAAK+7B,eACnB,uBACA,cAAC,GAAD,wBACA,cAAC,GAAD,CAAM8hB,QAAM,EAAZ,mBAAc79C,EAAKX,gBAAnB,QAA+B,SAEjC,qBAAKc,MAAM,gBAGb,qBAAKA,MAAM,YAAX,SACE,cAAC,KAAD,CAAM49C,iBAAiB,IAAI/S,SAAUkS,EAArC,SACGD,EAAS1tC,KAAI,SAACC,EAAMC,GAAP,OACZ,cAACmtC,GAAD,CACEoB,IACE,iCACGxuC,EAAKu1B,KACLv1B,EAAKsL,SAJZ,SASGtL,EAAK8yB,WAFD9yB,EAAKozB,qBAW1B,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAACqb,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,Q,6ECpPEC,GAASC,KAATD,KACAxB,GAASC,KAATD,KAEF0B,GAAoB,SAAC,GAIpB,IAHLp+C,EAGI,EAHJA,KACAq+C,EAEI,EAFJA,qBACAC,EACI,EADJA,kBAEA,OACE,gCACE,uBACA,eAAC,KAAD,CAAKxX,MAAO,CAAEY,gBAAiB,UAAW8P,QAAS,GAAnD,UACE,qBAAKr3C,MAAM,WAAX,SACE,cAAC,GAAD,oBAEF,qBAAKA,MAAM,WAAX,eACA,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAM09C,QAAM,EAAZ,SAAc79C,EAAKulB,WAGvB,eAAC,KAAD,CAAKuhB,MAAO,CAAEY,gBAAiB,UAAW8P,QAAS,GAAnD,UACE,qBAAKr3C,MAAM,WAAX,SACE,cAAC,GAAD,wBAEF,qBAAKA,MAAM,WAAX,eACA,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAM09C,QAAM,EAAZ,SAAc79C,EAAK+gB,aAGvB,eAAC,KAAD,CAAK+lB,MAAO,CAAEY,gBAAiB,UAAW8P,QAAS,GAAnD,UACE,qBAAKr3C,MAAM,WAAX,SACE,cAAC,GAAD,uBAEF,qBAAKA,MAAM,WAAX,eACA,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAM09C,QAAM,EAAC/W,MAAO,CAAEuE,SAAU,IAAhC,SACGrrC,EAAKqhB,eAIZ,eAAC,KAAD,CAAKylB,MAAO,CAAEY,gBAAiB,UAAW8P,QAAS,GAAnD,UACE,qBAAKr3C,MAAM,WAAX,SACE,cAAC,GAAD,8BAEF,qBAAKA,MAAM,WAAX,eACA,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAM09C,QAAM,EAAZ,SAAc79C,EAAK+7B,oBAGvB,eAAC,KAAD,CAAK+K,MAAO,CAAEY,gBAAiB,UAAW8P,QAAS,GAAnD,UACE,qBAAKr3C,MAAM,WAAX,SACE,cAAC,GAAD,uBAEF,qBAAKA,MAAM,WAAX,eACA,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAYqD,KAAMxD,EAAKgY,OAAS,UAAY,SAA5C,SACGhY,EAAKgY,OAAS,QAAU,qBAI/B,qBAAK7X,MAAM,OAAX,SACGH,EAAKgY,OACJ,cAAC,GAAD,CACEytB,QAAS4Y,EACT76C,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,EALR,kCAUA,cAAC,GAAD,CACEhC,QAAS6Y,EACT96C,KAAK,UACLuhC,KAAM,cAACyY,GAAA,EAAD,IACNlY,KAAK,SAJP,oCAqFKiZ,GAvEmB,SAAC1a,GACjC,IACE5e,EAME4e,EANF5e,UACAwsB,EAKE5N,EALF4N,kBACA4M,EAIExa,EAJFwa,qBACAz6C,EAGEigC,EAHFjgC,MACA06C,EAEEza,EAFFya,kBACAhV,EACEzF,EADFyF,cAEF,OACE,sBAAKnpC,MAAM,eAAX,UACE,cAAC,KAAD,CAAK2mC,MAAO,CAAEqU,WAAY,IAA1B,UACI7R,GAAiB,cAAC,GAAD,CACjB7D,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJY,8BASrB,cAAC,KAAD,UACGrgB,EAAU1V,KAAI,SAACC,EAAMC,GAAW,IAAD,EAC9B,OACE,eAAC,KAAD,CAAKq3B,MAAO,CAAExC,OAAQ,IAAtB,UACE,cAAC,GAAD,CAAMuZ,QAAM,EAAZ,2BAAyBpuC,EAAQ,KACjC,cAAC,KAAD,CACEq3B,MAAO,CAAE1C,MAAO,IAAKgX,UAAW,GAChCoD,MACE,cAAC,KAAD,CACEhZ,IAAI,UACJD,IAAG,UACD/1B,EAAKgW,aADJ,QAED,sEAEF4e,MAAM,OACND,OAAQ,MAVd,SAcE,cAAC+Z,GAAD,CACEpjC,MAAOtL,EAAKE,KACZ8D,YACE,cAAC,GAAD,CACExT,KAAMwP,EACN6uC,qBAAsB,kBACpBA,EACEz6C,EACA4L,EAAKyI,oBACLzI,EAAKpP,KAGTk+C,kBAAmB,kBACjBA,EACE16C,EACA4L,EAAKyI,oBACLzI,EAAKpP,aAhCnB,mBAA6CqP,aClE1C82B,sBA3BS,SAACvE,GAAD,MAAY,CAClCM,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,QACfvV,SAAUgoB,EAAMhoB,SAChBG,cAAe6nB,EAAM7nB,cACrB2+B,SAAU9W,EAAM9F,KAAK9pB,WAAWiB,UAEP,SAACnG,GAAD,MAAe,CACxCukC,kBAAmB,WACjBvkC,EAASiH,GAAgC,KAE3CkqC,qBAAsB,SAACz6C,EAAO4U,EAAmB/U,GAA3B,OACpBg2C,GACE71C,EACA4U,EACA/U,GACA,IAEJ66C,kBAAmB,SAAC16C,EAAO4U,EAAmB/U,GAA3B,OACjBg2C,GACE71C,EACA4U,EACA/U,GACA,OAIS8iC,EA/CmB,SAAC1C,GACjC,IACEiV,EAEEjV,EAFFiV,SACY7+B,EACV4pB,EADF7pB,SAAYC,mBAGd,EAA0CwsB,IAAMC,UAAS,GAAzD,oBAAO4C,EAAP,KAAsBqI,EAAtB,KAWA,OAJAlL,IAAMG,WAAU,YALS,WACvB,IAAM3K,EAAUnrB,GAA2BgoC,EAAS,GAAGnkC,SACvDg9B,EAAiB1V,GAIjBsN,KACC,IAEI,cAAC,GAAD,aAA2B3lC,MAAOqW,EAAmB7Z,GAAIkpC,cAAeA,GAAmBzF,O,+BCf9F4a,GAAoB,SAAC,GAAwB,IAAtBvjC,EAAqB,EAArBA,QAASzL,EAAY,EAAZA,MACpC,OAAOyL,EAAQjH,OAAS,EACtBiH,EAAQ3L,KAAI,SAACC,EAAMkvC,GAAP,OACV,cAAC,KAAD,UACGlvC,GADH,sBAAgCC,EAAhC,iBAA8CivC,OAKhD,cAAC,KAAD,iCAqFWC,GAjFkB,SAAC9a,GAChC,IAAQ+a,EACN/a,EADM+a,WAAYC,EAClBhb,EADkBgb,SAAU//B,EAC5B+kB,EAD4B/kB,gBAAiBwqB,EAC7CzF,EAD6CyF,cAAeW,EAC5DpG,EAD4DoG,WAG9D,OACE,qBAAK9pC,MAAM,eAAX,SACI0+C,EAKA,eAAC,WAAD,WACE,eAAC,KAAD,CACE/X,MAAO,CACL2U,WAAY,SACZC,eAAgB,iBAHpB,UAME,eAAC,KAAD,CACE5U,MAAO,CACL2U,WAAY,UAFhB,UAKE,cAACqD,GAAA,EAAD,IACA,cAAC,KAAD,CAAYhY,MAAO,CAAEqU,WAAY,GAAjC,8BAEF,+BACkB,IAAflR,GAAwB2U,EAAW3qC,OAAS,GAC3C,cAAC,GAAD,CACEwxB,QAAS,kBAAM3mB,EAAgB,gBAC/Btb,KAAK,UACLuhC,KAAM,cAACga,GAAA,EAAD,IACNzZ,KAAK,SAJP,iCAWN,uBACA,cAAC,KAAD,CAAK0Z,OAAQ,CAAC,GAAI,IAAlB,SACGJ,EAAW3qC,OAAS,EACnB2qC,EAAWrvC,KAAI,SAACC,EAAMC,GAAP,OACb,cAAC,KAAD,CAA+ByqC,KAAM,GAArC,SACE,sBAAK/5C,MAAM,WAAX,UACGmpC,GACC,cAAC,GAAD,CACE7D,QAAS,kBAAM3mB,EAAgBtP,EAAKpP,KACpCoD,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,SAJP,0BASF,cAAC,KAAD,CACEwB,MAAO,CACLuE,SAAU,GACV4T,WAAY,OACZC,cAAe,aAEjBC,OAAK,EANP,SAQGlV,EAAU,eAAWz6B,EAAK8N,UAAa,gBAEzC,cAAC,GAAD,CAAmB7N,MAAOA,EAAOyL,QAAS1L,EAAK0L,cAtBpD,mBAAsBzL,OA2BxB,qBAAKtP,MAAM,oBAAX,SACE,cAAC,KAAD,WAhER,qBAAKA,MAAM,mDAAX,SACE,cAAC,KAAD,SCgEJ6rC,GAAmBzF,mBAjBD,SAACvE,GAAD,MAAY,CAClC8W,SAAU9W,EAAM9F,KAAK9pB,WAAWiB,MAChC+rC,gBAAiBpd,EAAMhoB,SAASC,uBAEP,SAAC/M,GAAD,MAAe,CACxC4R,gBAAgB,WAAD,4BAAE,WAAOzX,GAAP,SAAAmK,EAAA,4DACA,gBAAXnK,EACF6F,EAASqG,aAAO,kBAAD,OAA4B,SAE3CrG,EAASqG,aAAO,kBAAD,OAA4B,SAC3CrG,EAASqG,aAAO,kBAAD,SAA8BlM,KALhC,SAQT6F,EAASmK,IAAoB,IARpB,2CAAF,mDAAC,MAYOkvB,EAtFQ,SAAC1C,GAChC,IAAQ3oB,EAAuC2oB,EAAvC3oB,QAAS49B,EAA8BjV,EAA9BiV,SAAUsG,EAAoBvb,EAApBub,gBAC3B,EAAoC3Y,IAAMC,SAAS,IAAnD,oBAAOkY,EAAP,KAAmBS,EAAnB,KACA,EAA0C5Y,IAAMC,UAAS,GAAzD,oBAAO4C,EAAP,KAAsBqI,EAAtB,KAwDA,OAjDAlL,IAAMG,WAAU,YALS,WACvB,IAAM3K,EAAUnrB,GAA2BgoC,EAAS,GAAGnkC,SACvDg9B,EAAiB1V,GAIjBsN,KACC,IAEH9C,IAAMG,WAAU,WACd,IAAM0Y,EAAiB,GAEvB,GAAIF,EAAgBjkC,YAClBD,EAAQ3L,KAAI,SAACC,EAAMC,GAAW,IAAD,EACrB8vC,EAAW,UAAG/vC,EAAK0L,eAAR,QAAmB,GAGpC,GAFuBqkC,EAAYhN,SAAS,MAExB,CAClB,IAAMiN,EAAeD,EAAYvrC,MAAM,MACvCsrC,EAAehyC,KAAK,CAClBlN,GAAIoP,EAAKpP,GACTkd,SAAU9N,EAAK8N,SACfpC,QAASskC,SAGXF,EAAehyC,KAAK,CAClBlN,GAAIoP,EAAKpP,GACTkd,SAAU9N,EAAK8N,SACfpC,QAAS,CAACqkC,QAKhBF,EAAcC,OACT,CAAC,IAAD,EACCt/C,EAAO,GACPu/C,EAAW,UAAGrkC,EAAQA,eAAX,QAAsB,GAGvC,GAFuBqkC,EAAYhN,SAAS,OAExB,CAClB,IAAMiN,EAAeD,EAAYvrC,MAAM,OACvChU,EAAKI,GAAKg/C,EAAgBh/C,GAC1BJ,EAAKsd,SAAW,GAChBtd,EAAKkb,QAAUskC,OAEfx/C,EAAKI,GAAKg/C,EAAgBh/C,GAC1BJ,EAAKsd,SAAW,GAChBtd,EAAKkb,QAAU,CAACqkC,GAGlBF,EAAc,CAACr/C,OAEhB,CAACo/C,EAAgBh/C,GAAIg/C,EAAgBjkC,YAAaD,IAGnD,cAAC,GAAD,aACE0jC,WAAYA,EACZ3U,WAAYmV,EAAgBjkC,YAC5BmuB,cAAeA,GACXzF,OA2BKmI,M,WC5FPkS,GAASC,KAATD,KAEFuB,GAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,OAAmB,EAAX9jC,KAC7B,OAAO8jC,EAAOnwC,KAAI,SAACC,EAAMC,GACvB,OACE,cAAC,KAAD,CACEq3B,MAAO,CACLqU,WAAY,GACZpU,YAAa,IAHjB,SAME,cAAC,KAAD,CACE4Y,WAAS,EACT7Y,MAAO,CAAE1C,MAAO,IAAKD,OAAQ,KAC7Bqa,MAAO,cAAC,KAAD,CAAOpa,MAAO,OAAQD,OAAQ,IAAKoB,IAAK/1B,EAAKnC,OAHtD,SAKE,cAAC,GAAD,CACEy5B,MAAO,CAAEsU,WAAY,IACrBtgC,MAAK,yBAAoBrL,EAAQ,aAwE9BmwC,GAhEiB,SAAC/b,GAC/B,IAAQ6b,EAAoD7b,EAApD6b,OAAQG,EAA4Chc,EAA5Cgc,eAAgBhB,EAA4Bhb,EAA5Bgb,SAAUvV,EAAkBzF,EAAlByF,cAE1C,OACE,qBAAKnpC,MAAM,eAAX,SACI0+C,EAKA,eAAC,WAAD,WACE,eAAC,KAAD,CACE/X,MAAO,CACL2U,WAAY,SACZC,eAAgB,iBAHpB,UAME,eAAC,KAAD,CACE5U,MAAO,CACL2U,WAAY,UAFhB,UAKE,cAACqE,GAAA,EAAD,IACA,cAAC,KAAD,CAAYhZ,MAAO,CAAEqU,WAAY,GAAjC,sBAED7R,GACC,cAAC,GAAD,CACE7D,QAASoa,EACTr8C,KAAK,UACLuhC,KAAM,cAACga,GAAA,EAAD,IACNzZ,KAAK,SAJP,8BAUJ,uBACCoa,GAAUA,EAAOzrC,OAAS,EACzByrC,EAAOnwC,KAAI,SAACC,EAAMC,GAAP,OACT,gCACE,cAAC,KAAD,CACEq3B,MAAO,CACLoY,cAAe,YACf7T,SAAU,GACV4T,WAAY,QAEdE,OAAK,EANP,wBAOU3vC,EAAK8N,YACf,cAAC,KAAD,UACE,cAAC,GAAD,CAAaoiC,OAAQlwC,EAAKmO,MAAO/B,KAAMpM,EAAK8N,mBAKlD,8BACE,cAAC,KAAD,SAjDN,qBAAKnd,MAAM,mDAAX,SACE,cAAC,KAAD,SCHJ6rC,GAAmBzF,mBAVD,SAACvE,GAAD,MAAY,CAClC8W,SAAU9W,EAAM9F,KAAK9pB,WAAWiB,UAEP,SAACnG,GAAD,MAAe,CACxC2yC,eAAe,WAAD,4BAAE,WAAOluC,GAAP,SAAAH,EAAA,sEACRuL,KADQ,uBAER7P,EAASoK,IAAoB,IAFrB,2CAAF,mDAAC,MAMQivB,EA3BO,SAAC1C,GAC/B,IAAQiV,EAAajV,EAAbiV,SACR,EAA0CrS,IAAMC,UAAS,GAAzD,oBAAO4C,EAAP,KAAsBqI,EAAtB,KAYA,OAJAlL,IAAMG,WAAU,YANS,WACvB,IAAM3K,EAAUnrB,GAA2BgoC,EAAS,GAAGnkC,SAEvDg9B,EAAiB1V,GAIjBsN,KACC,IAEI,cAAC,GAAD,aAAyBD,cAAeA,GAAmBzF,OAkBrDmI,MCnCT+T,GAAgB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASlhC,EAAsB,EAAtBA,gBAc1BspB,EAAU,CACd,CACEttB,MAAO,WACP4uB,UAAW,YAEb,CACE5uB,MAAO,QACP4uB,UAAW,SAEb,CACE5uB,MAAO,YACP4uB,UAAW,aAEb,CACE5uB,MAAO,QACP4uB,UAAW,SAEb,CACE5uB,MAAO,UACP4uB,UAAW,WAEb,CACE5uB,MAAO,MACP4uB,UAAW,QAGftB,EAAQ96B,KAAK,CACXq8B,MAAO,SACP7uB,MAAO,OACP8nB,IAAK,SACLwB,MAAO,MACP2F,OA5CwB,SAACM,EAAMC,GAAP,OACxB,cAAC,KAAD,CAAOhF,KAAK,SAAZ,SACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,gBAsCX,IAAMtlC,EAAO,GAcb,OAbAggD,EAAQzwC,KAAI,SAACC,EAAMC,GACjBzP,EAAKsN,KAAK,CACRs1B,IAAKnzB,EACLrP,GAAIoP,EAAKpP,GACT6/C,SAAUzwC,EAAK4uB,cACftjB,MAAOtL,EAAKsL,MACZ0B,UAAWhN,EAAKgE,YAChB8I,MAAOtD,KAAOxJ,EAAKuL,aAAa7B,OAAO,wBACvCqD,QAASvD,KAAOxJ,EAAKwL,WAAW9B,OAAO,wBACvCgnC,IAAK1wC,EAAK2wC,MACV38C,KAAMgM,EAAKhM,UAGR,cAAC,KAAD,CAAO2kC,UAAQ,EAACC,QAASA,EAASC,WAAYroC,EAAMslC,KAAK,YAwCnD8a,GArCkB,SAACvc,GAChC,IAAQmc,EAA4Dnc,EAA5Dmc,QAASlhC,EAAmD+kB,EAAnD/kB,gBAAiB+gC,EAAkChc,EAAlCgc,eAAgBvW,EAAkBzF,EAAlByF,cAClD,OACE,sBAAKnpC,MAAM,eAAX,UACE,eAAC,KAAD,CACE2mC,MAAO,CACL2U,WAAY,SACZC,eAAgB,iBAHpB,UAME,eAAC,KAAD,WACE,cAACnR,GAAA,EAAD,IACA,cAAC,KAAD,CAAYzD,MAAO,CAAEqU,WAAY,GAAjC,wBAED7R,GACC,cAAC,GAAD,CACE7D,QAASoa,EACTr8C,KAAK,UACLuhC,KAAM,cAACga,GAAA,EAAD,IACNzZ,KAAK,SAJP,+BAUJ,uBACC0a,GAAWA,EAAQ/rC,OAAS,EAC3B,cAAC,GAAD,CAAe+rC,QAASA,EAASlhC,gBAAiBA,IAElD,8BACE,cAAC,KAAD,UClCJktB,GAAmBzF,mBA5BD,SAACvE,GAAD,MAAY,CAClC7nB,cAAe6nB,EAAM7nB,cACrB2+B,SAAU9W,EAAM9F,KAAK9pB,WAAWiB,UAEP,SAACnG,GAAD,MAAe,CACxC4R,gBAAgB,WAAD,4BAAE,WAAOnN,GAAP,SAAAH,EAAA,sEACTtE,EAASyK,GAAmB,SADnB,uBAETzK,EAASwK,GAA2B/F,IAF3B,OAGfxE,GAAMD,SAASkK,IAAoB,IACnCgF,KAJe,2CAAF,mDAAC,GAMhByjC,eAAe,WAAD,4BAAE,sBAAAruC,EAAA,6DACdtE,EAASqG,aAAO,kBAAD,KAA0B,KACzCrG,EAASqG,aAAO,kBAAD,YAAiC,KAChDrG,EAASqG,aAAO,kBAAD,UAA+B,KAC9CrG,EAASqG,aAAO,kBAAD,QAA6B,KAC5CrG,EAASqG,aAAO,kBAAD,cAAmC,KAClDrG,EAASqG,aAAO,kBAAD,OAA4B,KAC3CrG,EAASqG,aAAO,kBAAD,eAAoC,OAPrC,SAQRrG,EAASwK,GAA2B,KAR5B,wBASRxK,EAASyK,GAAmB,QATpB,QAUdxK,GAAMD,SAASkK,IAAoB,IAVrB,4CAAF,kDAAC,GAYfipC,kBAAmB,WACjBlzC,GAAMD,SAASkK,IAAoB,QAIdmvB,EArDQ,SAAC1C,GAChC,IACEiV,EAEEjV,EAFFiV,SACiB1+B,EACfypB,EADF1pB,cAAiBC,gBAEnB,EAA0CqsB,IAAMC,UAAS,GAAzD,oBAAO4C,EAAP,KAAsBqI,EAAtB,KAWA,OAJAlL,IAAMG,WAAU,YALS,WACvB,IAAM3K,EAAUnrB,GAA2BgoC,EAAS,GAAGnkC,SACvDg9B,EAAiB1V,GAIjBsN,KACC,IAGD,cAAC,GAAD,aACED,cAAeA,EACflvB,gBAAiBA,GACbypB,OAsCKmI,MClETsU,GAAkB,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAmBnBvgD,EAAO,GAUb,OATAugD,EAAUhxC,KAAI,SAACC,EAAMC,GACnBzP,EAAKsN,KAAK,CACRs1B,IAAKnzB,EACL+wC,UAAWhxC,EAAKgxC,UAChB1lC,MAAOtL,EAAKsL,MACZtH,YAAahE,EAAKgE,YAClBuoB,aAAc/iB,KAAOxJ,EAAKusB,cAAc7iB,OAAO,oBAG5C,cAAC,KAAD,CAAOivB,UAAQ,EAACC,QA5BP,CACd,CACEttB,MAAO,WACP4uB,UAAW,aAEb,CACE5uB,MAAO,QACP4uB,UAAW,SAEb,CACE5uB,MAAO,YACP4uB,UAAW,eAEb,CACE5uB,MAAO,SACP4uB,UAAW,iBAa0BrB,WAAYroC,EAAMslC,KAAK,YA2BnDmb,GAxBoB,SAAC5c,GAClC,IAAQ0c,EAAc1c,EAAd0c,UACR,OACE,sBAAKpgD,MAAM,eAAX,UACE,eAAC,KAAD,CACE2mC,MAAO,CACL2U,WAAY,UAFhB,UAKE,cAAClR,GAAA,EAAD,IACA,cAAC,KAAD,CAAYzD,MAAO,CAAEqU,WAAY,GAAjC,wBAEF,uBACCoF,EAAUtsC,OAAS,EAClB,cAAC,GAAD,CAAiBssC,UAAWA,IAE5B,8BACE,cAAC,KAAD,UC/CKG,GAJoB,SAAC7c,GAClC,OAAO,cAAC,GAAD,eAAgCA,KCCnCkc,GAAgB,SAAC,GAAoB,IAAlBY,EAAiB,EAAjBA,WAejB3gD,EAAO,GAUb,OATA2gD,EAAWpxC,KAAI,SAACC,EAAMC,GACpBzP,EAAKsN,KAAK,CACR+7B,GAAI55B,EAAQ,EACZ8V,IAAK/V,EAAK+V,IACV6Y,cAAe5uB,EAAK4uB,cACpBzlB,OAAQnJ,EAAKmJ,OACbojB,aAAcvsB,EAAKusB,kBAGhB,cAAC,KAAD,CAAOoM,UAAQ,EAACC,QAxBP,CACd,CACEttB,MAAO,KACP4uB,UAAW,MAEb,CACE5uB,MAAO,gBACP4uB,UAAW,UAEb,CACE5uB,MAAO,oBACP4uB,UAAW,iBAa0BrB,WAAYroC,EAAMslC,KAAK,YA2BnDsb,GAxBqB,SAAC/c,GACnC,IAAQ8c,EAAe9c,EAAf8c,WACR,OACE,sBAAKxgD,MAAM,eAAX,UACE,eAAC,KAAD,CACE2mC,MAAO,CACL2U,WAAY,UAFhB,UAKE,cAAClR,GAAA,EAAD,IACA,cAAC,KAAD,CAAYzD,MAAO,CAAEqU,WAAY,GAAjC,8BAEF,uBACCwF,EAAW1sC,OAAS,EACnB,cAAC,GAAD,CAAe0sC,WAAYA,IAE3B,8BACE,cAAC,KAAD,UC3CKE,GAJqB,SAAChd,GACnC,OAAO,cAAC,GAAD,eAAiCA,K,UCiQpCiD,GAAQ,CACZ1C,MAAO,QACP0c,aAAc,SACdrF,WAAY,SACZC,eAAgB,UAGHqF,GApQoB,SAACld,GAClC,IACEgb,EAMEhb,EANFgb,SACA7tC,EAKE6yB,EALF7yB,UACAgwC,EAIEnd,EAJFmd,aACAC,EAGEpd,EAHFod,kBACAC,EAEErd,EAFFqd,wBACAC,EACEtd,EADFsd,4BAEF,OACE,sBAAKhhD,MAAM,eAAX,UACE,eAAC,KAAD,CACE2mC,MAAO,CACL2U,WAAY,SACZC,eAAgB,iBAHpB,UAME,eAAC,KAAD,CAAK5U,MAAO,CAAE2U,WAAY,UAA1B,UACE,cAAClR,GAAA,EAAD,IACA,cAAC,KAAD,CAAYzD,MAAO,CAAEqU,WAAY,GAAjC,0BAEDnqC,GACC,cAAC,GAAD,CACEy0B,QAAS0b,EACT39C,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,SAJP,uBAUJ,uBACEuZ,EAKA,qBAAK1+C,MAAM,iCAAX,SACG6gD,EAAa/sC,OAAS,EACrB+sC,EAAazxC,KAAI,SAACigC,EAAUC,GAAX,OACf,gCACE,cAAC,KAAD,CACE3I,MAAO,CACLoY,cAAe,YACf7T,SAAU,GACV4T,WAAY,QAEdE,OAAK,EANP,wBAOU3P,EAASlyB,YACnB,cAAC,KAAD,CAAK0hC,OAAQ,CAAC,GAAI,IAAlB,SACGxP,EAAS4R,UAAU7xC,KAAI,SAAC8xC,EAAeC,GAAhB,OACtB,cAAC,KAAD,CAEEpH,KAAM,GAFR,SAIE,sBAAKpT,MAAO,CAAE1C,MAAO,QAArB,UACE,gCACE,qBAAKjkC,MAAM,iBAAX,SACE,eAAC,KAAD,CACE6+C,OAAQ,GACRlY,MAAO,CACL2U,WAAY,SAEZ8F,aAAc,oBACdxa,YAAa,OACbqU,UAAW,QAPf,UAUE,cAAC,KAAD,CACEtU,MAAOA,GACPd,UAAU,aACVkU,KAAM,EAHR,SAKE,cAAC,KAAD,CACE2D,QAAM,EACN/W,MAAO,CAAEuE,SAAU,GAAIlB,UAAW,QAFpC,SAIGkX,EAAclmB,uBAGnB,cAAC,KAAD,CACE2L,MAAOA,GACPd,UAAU,aACVkU,KAAM,EAHR,SAKE,cAAC,KAAD,CAAM2D,QAAM,EAAC/W,MAAO,CAAEuE,SAAU,IAAhC,sBAIF,cAAC,KAAD,CACEvE,MAAOA,GACPd,UAAU,aACVkU,KAAM,EAHR,SAKE,cAAC,KAAD,CAAM2D,QAAM,EAAC/W,MAAO,CAAEuE,SAAU,IAAhC,qBAIF,cAAC,KAAD,CACEvE,MAAOA,GACPd,UAAU,aACVkU,KAAM,EAHR,SAKE,cAAC,KAAD,CAAM2D,QAAM,EAAC/W,MAAO,CAAEuE,SAAU,IAAhC,sBAIF,cAAC,KAAD,CACEvE,MAAOA,GACPd,UAAU,aACVkU,KAAM,EAHR,SAKE,cAAC,KAAD,CAAM2D,QAAM,EAAC/W,MAAO,CAAEuE,SAAU,IAAhC,4BAOLgW,EAAcpT,QACboT,EAAcpT,OAAO1+B,KACnB,SAACiyC,EAAYC,GACX,OACE,eAAC,KAAD,CAEEzC,OAAQ,GACRlY,MAAO,CACL2U,WAAY,SACZjE,QAAS,MACT+J,aAAc,oBACdxa,YAAa,QAPjB,UAUE,cAAC,KAAD,CACED,MAAOA,GACPd,UAAU,aACVkU,KAAM,EAHR,SAKE,8BACE,cAAC,KAAD,CACEpT,MAAO,CACLuE,SAAU,GACV56B,MAAO8oC,GACPpP,UAAW,QAJf,SAOGqX,EAAWE,iBAIlB,cAAC,KAAD,CACE5a,MAAOA,GACPd,UAAU,aACVkU,KAAM,EAHR,SAKE,cAAC,KAAMD,MAAP,CACE1S,UAAUv2B,EACVg6B,SAAU,SAAC0E,GAAD,OACRuR,EACEvR,EACA4R,EACAG,EACAhS,EACA+R,IAGJlzC,MAAO4yC,EACLM,GAEFjU,aAAc2T,EACZM,GAfJ,SAkBE,eAAC,KAAD,CAEExC,OAAQ,GACRlY,MAAO,CACL2U,WAAY,SACZjE,QAAS,MACTzQ,YAAa,QANjB,UASE,cAAC,KAAD,CACED,MAAOA,GACPd,UAAU,aACVkU,KAAM,EAHR,SAKE,cAAC,KAAD,CACE5rC,MAAK,UACHkzC,EAAWG,cADR,YAEDzf,OAAOsH,KAAKgY,GAAY,QAGhC,cAAC,KAAD,CACE1a,MAAOA,GACPd,UAAU,aACVkU,KAAM,EAHR,SAKE,cAAC,KAAD,CACE5rC,MAAK,UACHkzC,EAAWG,cADR,YAEDzf,OAAOsH,KAAKgY,GAAY,QAGhC,cAAC,KAAD,CACE1a,MAAOA,GACPd,UAAU,aACVkU,KAAM,EAHR,SAKE,cAAC,KAAD,CACE5rC,MAAK,UACHkzC,EAAWG,cADR,YAEDzf,OAAOsH,KAAKgY,GAAY,QAGhC,cAAC,KAAD,CACE1a,MAAOA,GACPd,UAAU,aACVkU,KAAM,EAHR,SAKE,cAAC,KAAD,CACE5rC,MAAK,UACHkzC,EAAWG,cADR,YAEDzf,OAAOsH,KAAKgY,GAAY,UAlDlC,sBACsBC,UAnD5B,sBACsBA,UA8GhC,qBAAKthD,MAAM,aAvLf,8BAC8BmhD,WAZpC,yBAA4B7R,OA0M9B,qBAAKtvC,MAAM,eAAX,SACE,cAAC,KAAD,QAlNN,qBAAKA,MAAM,mDAAX,SACE,cAAC,KAAD,UCoHKyhD,GAtJoB,SAAC/d,GAClC,IAAQxwB,EAA+BwwB,EAA/BxwB,MAAO+tC,EAAwBvd,EAAxBud,UAAWvC,EAAahb,EAAbgb,SAC1B,EAAkCnY,oBAAS,GAA3C,oBAAO11B,EAAP,KAAkB6wC,EAAlB,KAEApb,IAAMG,WAAU,WACd2C,MACC,IAEH,IAAMA,EAAmB,WACvB,IAAMjkC,EAAS+N,EAAM,GAAGsB,QAClB20B,EAAgBx4B,GAA2BxL,GAE/Cu8C,EADEvY,IAGW,IAIX6X,EAA2B,uCAAG,gCAAA3vC,EAAA,uDAC1BtE,EAAaC,GAAbD,UACCJ,GAAiB,IAEtBg1C,EAAc,GADZ96C,EAAU,IAERo6C,UAAY,GACpBp6C,EAAQmtB,KAAO,GAGfitB,EAAU7xC,IAAV,uCAAc,WAAOwyC,EAAYtyC,GAAnB,SAAA+B,EAAA,6DAEZuwC,EAAWX,UAAU7xC,KAAI,SAAC8xC,EAAeC,GACvCD,EAAcpT,OAAO1+B,KAAI,SAACiyC,EAAYC,GACpC,IAAMjyC,EAAO,GACbA,EAAKmyC,cAAgBH,EAAWG,cAChCnyC,EAAKkrB,iBAAmB2mB,EAAc3mB,iBACtClrB,EAAKwyC,SAAWR,EAAWQ,SAC3BxyC,EAAKyyC,UAAYT,EAAWS,UAC5BzyC,EAAK0yC,UAAYV,EAAWU,UAC5B1yC,EAAK2yC,WAAaX,EAAWW,WAC7Bn7C,EAAQo6C,UAAU9zC,KAAKkC,SAXf,kBAgBJzM,EAAOkF,gBAAgBjB,EAAS+6C,EAAW16C,QAhBvC,OAiBNy6C,IAAgBV,EAAUntC,OAAS,GACrCjB,GAAU,+BAAgC,WAC1C9F,EAASJ,GAAiB,KAE1Bg1C,GAAe,EArBP,gDAwBV9uC,GAAU,4BAA6B,SACvC9F,EAASJ,GAAiB,IAzBhB,yDAAd,yDATkC,2CAAH,qDAuHjC,OACE,cAAC,GAAD,aACE+xC,SAAUA,EACV7tC,UAAWA,EACXgwC,aAAcI,EACdH,kBArFsB,SACxBvR,EACA4R,EACAG,EACAhS,EACA+R,GAEA,IAAQt0C,EAAaC,GAAbD,SACJk1C,EAAgBhB,EACdiB,EAAa3S,EAAI4S,OAAOh0C,MAE1B+zC,IAAU,UAAQb,EAAWG,cAAnB,cACZS,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAO,UAAW,EACbI,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAQ,WAAY,EACdG,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAU,YAAa,EACfC,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAS,WAAY,GACLG,IAAU,UAAQb,EAAWG,cAAnB,eACnBS,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAO,UAAW,EACbI,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAQ,WAAY,EACdG,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAU,YAAa,EACfC,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAS,WAAY,GACLG,IAAU,UAAQb,EAAWG,cAAnB,gBACnBS,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAO,UAAW,EACbI,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAQ,WAAY,EACdG,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAU,YAAa,EACfC,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAS,WAAY,GACLG,IAAU,UAAQb,EAAWG,cAAnB,gBACnBS,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAO,UAAW,EACbI,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAQ,WAAY,EACdG,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAU,YAAa,EACfC,EAAc3S,GAAW2R,UAAUE,GAAgBrT,OACjDwT,GACAS,WAAY,GAGhBh1C,EAASiK,GAAyBirC,KAqBhClB,wBAlB4B,SAACqB,GAC/B,OAAIA,EAAMN,UACF,GAAN,OAAUM,EAAMZ,cAAhB,YAAiCzf,OAAOsH,KAAK+Y,GAAO,IAC3CA,EAAMP,SACT,GAAN,OAAUO,EAAMZ,cAAhB,YAAiCzf,OAAOsH,KAAK+Y,GAAO,IAC3CA,EAAML,UACT,GAAN,OAAUK,EAAMZ,cAAhB,YAAiCzf,OAAOsH,KAAK+Y,GAAO,IAC3CA,EAAMJ,WACT,GAAN,OAAUI,EAAMZ,cAAhB,YAAiCzf,OAAOsH,KAAK+Y,GAAO,SAD/C,GAYLpB,4BAA6BA,GACzBtd,KCuKJmI,GAAmBzF,mBA7BD,SAACvE,GAAD,MAAY,CAClChoB,SAAUgoB,EAAMhoB,SAChBG,cAAe6nB,EAAM7nB,cACrBT,MAAOsoB,EAAMtoB,MACbo/B,SAAU9W,EAAM9F,KAAK9pB,WAAWiB,UAEP,SAACnG,GAAD,MAAe,CACxCg8B,kBAAmB,SAACtlC,GAClBqlC,GAA6CrlC,IAE/Cw5C,mBAAoB,SAACx5C,EAAOJ,GAC1BylC,GAA+CrlC,EAAOJ,IAExDsb,gBAAgB,WAAD,4BAAE,sBAAAtN,EAAA,sEACTtE,EAASs1C,IAA6C,IAD7C,uBAETA,KAFS,OAGft1C,EAASs1C,IAA6C,IAHvC,2CAAF,kDAAC,GAKhBC,aAAc,SAACtvB,GACbjmB,EAASs1C,GAA0DrvB,KAErEuvB,eAAgB,SAACvvB,GACfjmB,EAASs1C,GAA4CrvB,KAEvDwvB,aAAc,SAACxvB,GACbjmB,EAASs1C,GAA8CrvB,QAIlCoT,EAjSiB,SAAC1C,GACzC,IACEiV,EAaEjV,EAbFiV,SACA6J,EAYE9e,EAZF8e,aACY1oC,EAWV4pB,EAXF7pB,SAAYC,mBAHd,EAcI4pB,EAVF1pB,cACE8R,EALJ,EAKIA,4BACAG,EANJ,EAMIA,6BACAC,EAPJ,EAOIA,+BACAE,EARJ,EAQIA,iCACAC,EATJ,EASIA,uBACAC,EAVJ,EAUIA,yBACAE,EAXJ,EAWIA,wBACAL,EAZJ,EAYIA,6BAIJ,EAAkDma,IAAMC,UAAS,GAAjE,oBAAOkc,EAAP,KAA0BC,EAA1B,KACA,EAAgDpc,IAAMC,UAAS,GAA/D,oBAAOqW,EAAP,KAAyB+F,EAAzB,KACA,EACErc,IAAMC,UAAS,GADjB,oBAAOsW,EAAP,KAAkC+F,EAAlC,KAEA,EACEtc,IAAMC,UAAS,GADjB,oBAAOsc,EAAP,KAA8BC,EAA9B,KAEA,EACExc,IAAMC,UAAS,GADjB,oBAAOwc,EAAP,KAAgCC,EAAhC,KAGMlG,EAAW,CACf,CACEra,IAAK,eACL9nB,MAAO,SACPiqB,KAAM,cAACqe,GAAA,EAAD,IACN9gB,UACE,cAAC,GAAD,CACEod,OAAQtzB,EACRyyB,SAAUmE,KAIhB,CACEpgB,IAAK,gBACL9nB,MAAO,UACPiqB,KAAM,cAACse,GAAA,EAAD,IACN/gB,UACE,cAAC,GAAD,CACEpnB,QACEjB,EAAmBkB,YACfkR,EACAC,EAENuyB,SAAUqE,KAIhB,CACEtgB,IAAK,gBACL9nB,MAAO,UACPiqB,KAAM,cAACue,GAAA,EAAD,IACNhhB,UACE,cAAC,GAAD,CAA2Brd,UAAWgH,KAG1C,CACE2W,IAAK,iBACL9nB,MAAO,gBACPiqB,KAAM,cAACwe,GAAA,EAAD,IACNjhB,UACE,cAAC,GAAD,CAA6Bqe,WAAYh0B,KAG7C,CACEiW,IAAK,gBACL9nB,MAAO,kBACPiqB,KAAM,cAACwF,GAAA,EAAD,IACNjI,UAAW,cAAC,GAAD,CAA0B0d,QAASxzB,KAEhD,CACEoW,IAAK,kBACL9nB,MAAO,UACPiqB,KAAM,cAACye,GAAA,EAAD,IACNlhB,UACE,cAAC,GAAD,CACExnB,MAAM,UACNylC,UAAW9zB,MAMnB,GAAIxS,EAAmBkB,YAAa,CAClC8hC,EAAS3vC,KAAK,CACZs1B,IAAK,kBACL9nB,MAAO,YACPiqB,KAAM,cAACyY,GAAA,EAAD,IACNlb,UACE,cAAC,GAAD,CACEjvB,MAAOylC,EACP+F,SAAU+D,EACVxB,UAAW70B,EACXo2B,aAAcA,MAMpB,IAAMc,EAAYxG,EAASyG,QAAQ,mBAG7BC,EAAU1G,EAAS2G,OAAOH,EAAW,GAAG,GAC9C3jD,QAAQC,IAAI4jD,GAEZ1G,EAAS2G,OALO,EAKS,EAAGD,GAG9B,IAqCME,EAAc,uCAAG,sBAAAryC,EAAA,2DACjB0wB,OAAOsH,KAAKvvB,GAAoBhG,OAAS,GADxB,iCAEb6vC,GAAsC,EAAG,OAF5B,uBAGbtB,GACJvoC,EAAmB7Z,IAJF,uBAMboiD,GAA0CvoC,EAAmB7Z,IANhD,uBAOboiD,GAA4CvoC,EAAmB7Z,IAPlD,wBAQboiD,GAA6CvoC,EAAmB7Z,IARnD,yBASb2jD,IATa,yBAUbC,IAVa,yBAWbC,IAXa,4CAAH,qDAedF,EAAiB,uCAAG,sBAAAvyC,EAAA,6DACxByxC,GAAyB,GADD,SAElBT,IAAkC,SAAC0B,GACvCjB,EAAyBiB,MAHH,2CAAH,qDAOjBF,EAAmB,uCAAG,sBAAAxyC,EAAA,6DAC1B2xC,GAA2B,GADD,SAEpBX,IAAoC,SAAC0B,GACzCf,EAA2Be,MAHH,2CAAH,qDAOnBD,EAAqB,uCAAG,4BAAAzyC,EAAA,yDACtB2yC,EAAoB,IAEtBlqC,EAAmBP,MAHK,gCAIpBO,EAAmBP,MAAMnK,IAAzB,uCAA6B,WAAOC,EAAMC,GAAb,SAAA+B,EAAA,sDACjCzO,EAAO0E,iBAAiB+H,EAAKpP,IAC1B0R,MAAK,SAACsyC,GACLD,EAAkB72C,KAAK,CACrBgQ,SAAU9N,EAAK+N,UACflW,OAAQmI,EAAKpP,GACbghD,UAAWgD,EAAcpkD,KAAK+N,WAE5B0B,EAAQ,IAAMwK,EAAmBP,MAAMzF,QACzC4uC,GAAqB,MAGxB7wC,OAAM,kBAAM6wC,GAAqB,MAZH,2CAA7B,yDAJoB,OAmB1B9wC,YAAW,WACT4wC,EAAawB,KACZ,KArBuB,2CAAH,qDAkC3B1d,IAAMG,WAAU,WACdid,IAVuB,WACvB,IAAMQ,EpI4T+B,SAACtzC,GACxC,IAAIC,EACJ,OAAQD,GAEN,IAAK,uCAKL,IAAK,uCAKL,IAAK,uCAKL,IAAK,uCACHC,GAAY,EACZ,MAEF,QACEA,GAAY,EAIhB,OAAOA,EoIxVgBszC,CAA0BxL,EAAS,GAAGnkC,SAC3DmuC,EAAoBuB,GACpB,IAAME,EAA4BzzC,GAChCgoC,EAAS,GAAGnkC,SAEdouC,EAA6BwB,GAK7Bhb,KACC,CAACtvB,IAwBJ,OACE,cAAC,GAAD,aACEja,KAAMia,EACN8iC,iBAAkBA,EAClBC,0BAA2BA,EAC3BC,SAAUA,EACVC,YArIgB,SAACsH,GAEnB,QADS,OAAGA,QAAH,IAAGA,IAAa,iBACbn0C,eACV,IAAK,gBACHmyC,GAA+CvoC,EAAmB7Z,IAClE,MAEF,IAAK,gBACH4jD,IACA,MAEF,IAAK,eACHD,IACA,MAEF,IAAK,gBACHvB,GAA0CvoC,EAAmB7Z,IAC7D,MAEF,IAAK,kBACHoiD,GAA4CvoC,EAAmB7Z,IAC/D,MAEF,IAAK,kBACH6jD,IACA,MAEF,IAAK,iBACHzB,GAA6CvoC,EAAmB7Z,IAChE,MAEF,QACEN,QAAQC,IAAI,0BAsGdmxC,uBA7B2B,WAE7BsR,MA4BErF,OAzB4B,WAC9BhwC,GAAMD,ShI7LD,CACL1J,KAAMkT,MgIqNJgpC,OAAQtzB,EACRg1B,UAAW70B,EACXtH,UAAWgH,EACX+zB,QAASxzB,EACTtR,QAASmR,EACTgxB,oBA3BwB,WAC1Bt6C,EAAOiF,iBAAiBiS,EAAmB7Z,IACxC0R,MAAK,WACJkB,GAAU,kDAAmD,WAC7DjB,YAAW,WACT3E,EAAS,kBACR,SAEJ4E,OAAM,WACLgB,GAAU,+CAAgD,cAmBxD6wB,OAuCKsI,gBAAU,CACvB3J,KAAM,qBADO2J,CAEZH,ICjUGgM,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJ6B,GAAa,SAACjW,GAClB,IACE7jC,EAME6jC,EANF7jC,KACA+5C,EAKElW,EALFkW,kBACAC,EAIEnW,EAJFmW,iBAMIzN,EAAO,SAAC,GAAc,IAAZ/8B,EAAW,EAAXA,KACd,OACE,cAAC,KAAD,CAAUE,KAAI,eAAUF,EAAKlB,OAASA,MAAOkB,EAAKlB,MAAlD,SACGkB,EAAKjB,SAKZ,OACE,mCACE,cAAC,KAAS0rC,MAAV,2BACMpW,EAAMqH,OADZ,IAEEpE,MAAO,CAAE1C,MAAO,QAChBmJ,aAAcwM,EACd/O,SAAUgP,EAJZ,SAME,cAAC,KAAD,UACGh6C,EAAKuP,KAAI,SAACC,EAAMC,GACf,OACE,cAAC,KAAD,CAAKyqC,KAAM,EAAX,SACE,cAACvO,GAAA,EAAD,CACEn8B,KAAMA,EACNE,KAAI,eAAUF,EAAKlB,OACnBg0B,UAAWiK,iBAWvB2L,GAAgB,SAAC,GAQhB,IAPL1M,EAOI,EAPJA,aACAC,EAMI,EANJA,WACA0M,EAKI,EALJA,SACAG,EAII,EAJJA,SACAyB,EAGI,EAHJA,kBACA/3B,EAEI,EAFJA,WACAg4B,EACI,EADJA,iBAEA,OACE,sBAAK75C,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,eAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,qBAAKtrC,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,KACLnB,MAAM,UACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,YACN+zB,UAAWmI,GACXjnC,KAAK,cAIK,SAAfwe,GACC,qCACE,uBACA,oBAAI7hB,MAAM,yBAAV,wBACA,cAAC,GAAD,CACEH,KAAMs4C,EACNyB,kBAAmBA,EACnBC,iBAAkBA,WA2CfyK,GAnCiB,SAAC5gB,GAC/B,IACErkB,EAUEqkB,EAVFrkB,eACAgsB,EASE3H,EATF2H,aACAC,EAQE5H,EARF4H,WACAlsB,EAOEskB,EAPFtkB,oBACA84B,EAMExU,EANFwU,aACAF,EAKEtU,EALFsU,SACAG,EAIEzU,EAJFyU,SACA+B,EAGExW,EAHFwW,YACAr4B,EAEE6hB,EAFF7hB,WACAg4B,EACEnW,EADFmW,iBAGF,OACE,cAAC,GAAD,CACE3C,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,EACVyB,kBAAmBM,EACnBr4B,WAAYA,EACZg4B,iBAAkBA,OC9DtBhO,GAAmBzF,mBAfD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdvP,MAAO2uB,EAAM3uB,MACbivB,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,YAEU,SAACriB,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7DmmC,wBAAyB,WACvBptC,EAASw3C,GAAiC,MAE5Cx0B,iBAAkB,SAAC1sB,EAAMmO,EAAQmC,GAAf,OAChB4wC,GAA+BlhD,EAAMmO,EAAQmC,OAGxByyB,EArEO,SAAC1C,GAC/B,IACEoI,EAOEpI,EAPFoI,MACAoM,EAMExU,EANFwU,aACa74B,EAKXqkB,EALFvB,UAAa9iB,eAHf,EAQIqkB,EAJFxwB,MAAS2O,EAJX,EAIWA,WAAY9M,EAJvB,EAIuBA,iBACVsT,EAGTqb,EAHFtU,QAAW/G,SACX0H,EAEE2T,EAFF3T,iBACAoqB,EACEzW,EADFyW,wBAEF,EAAwC7T,IAAMC,SAAS,IAAvD,oBAAO5yB,EAAP,KAAqB6wC,EAArB,KAUMpK,EAAa,GACnB/xB,EAASjZ,KAAI,SAACC,EAAMC,GAClB8qC,EAAWjtC,KAAK,CACdlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKiF,UAIhBgyB,IAAMG,WAAU,YACS,IAAnBpnB,GACF86B,MAED,CAAC96B,IAMJ,OACE,cAAC,GAAD,aACEA,eAAgBA,EAChB64B,aAAcA,EACd5M,WA/Be,SAAC95B,GACds6B,IACFnsC,QAAQC,IAAI,SACZmwB,EAAiBlO,EAAYrQ,EAAQmC,KA6BrCkO,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,YACjDs2B,SAAUiC,EACVF,YAAanlC,EACb8kC,iBAbqB,SAACnT,GACxB8d,EAAgB9d,KAaVhD,OAyBKsI,gBAAU,CACvB3J,KAAM,gBACN4J,SAAUR,IAFGO,CAGZH,IC3CY4Y,GArCQ,SAAC/gB,GACtB,IAAQziC,EAA6DyiC,EAA7DziC,QAASkiB,EAAoDugB,EAApDvgB,UAAWizB,EAAyC1S,EAAzC0S,kBAAmB9E,EAAsB5N,EAAtB4N,kBAC/C,OACE,sBAAKtxC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,sBAAKA,MAAM,0CAAX,UACE,oBAAIA,MAAM,kBAAV,wBACA,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,6BASF,qBAAKnlC,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAMsjB,EACNliB,QAASA,EACTu1C,cAAeJ,iBAQ7B,cAAC,GAAD,QCkEAvK,GAAmBzF,mBA1BD,SAACvE,GAAD,MAAY,CAClC3uB,MAAO2uB,EAAM3uB,UAEY,SAACnG,GAAD,MAAe,CACxC23C,aAAc,kBAAMH,MACpBjT,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAASw3C,GAAmC,KADjC,uBAEXx3C,EAASw3C,GAA+B,KAF7B,OAGjBx3C,EAASw3C,GAA2B,QACpCx3C,EAASiH,GAAgC,IACzCuwC,KALiB,2CAAF,kDAAC,GAOlB5lC,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAASw3C,GAA2B,SAD3B,uBAETx3C,EAASw3C,GAA+Bpa,EAAOlqC,KAFtC,uBAGT8M,EAASw3C,GAAmCpa,IAHnC,uBAIToa,GAA8Bpa,EAAOlqC,IAJ5B,wBAKT8M,EAASiH,GAAgC,IALhC,yBAMTuwC,KANS,4CAAF,mDAAC,GAQhBxb,kBAAkB,WAAD,4BAAE,WAAO5jC,GAAP,SAAAkM,EAAA,sEACXtE,EAASw3C,GAA+Bp/C,IAD7B,OAEjBo/C,GAAiCp/C,GAFhB,2CAAF,mDAAC,MAMKihC,EA7FF,SAAC1C,GACtB,IACEghB,EAKEhhB,EALFghB,aACA/lC,EAIE+kB,EAJF/kB,gBACAoqB,EAGErF,EAHFqF,kBACAuI,EAEE5N,EAFF4N,kBACSnuB,EACPugB,EADFxwB,MAASiQ,UAGPA,EAAUrP,OAAS,GACrBqP,EAAU/T,KAAI,SAACC,EAAMC,GACnB6T,EAAU7T,GAAV,2BAAwBD,GAAxB,IAA8B65B,GAAI55B,EAAQ,OA6C9C,OAJAg3B,IAAMG,WAAU,WACdie,MACC,IAGD,cAAC,GAAD,CACEzjD,QA3CY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,aACP4uB,UAAW,cACX9G,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEgC,YAAYS,OAAS41B,EAAEr2B,YAAYS,UA+BvDqP,UAAWA,EACXizB,kBA5BsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QAcRgK,kBAAmBA,OAqCVtF,gBAAU,CACvB3J,KAAM,aADO2J,CAEZH,I,WCvGK8J,GAAWC,KAAXD,OA+FOgP,GA7Fe,SAACjhB,GAC7B,IACEziC,EAWEyiC,EAXFziC,QACAwlB,EAUEid,EAVFjd,cACA2vB,EASE1S,EATF0S,kBACA9E,EAQE5N,EARF4N,kBACAe,EAOE3O,EAPF2O,mBACAn0B,EAMEwlB,EANFxlB,OACA0yB,EAKElN,EALFkN,SACAC,EAIEnN,EAJFmN,WACA+T,EAGElhB,EAHFkhB,UACAC,EAEEnhB,EAFFmhB,aAII1c,GAFFzE,EADFohB,mBAGiB,CACjB/O,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,IAGZ,OACE,qBAAKryC,MAAM,eAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,6BAEF,qBAAKA,MAAM,8BAAX,SACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,iCAUJ,cAAC,KAAD,CAAS6L,YAAY,OAArB,yBACA,sBAAKhxC,MAAM,kBAAX,UAEE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAI,OAAE+kD,QAAF,IAAEA,IAAa,GACnBr1C,KAAK,OACLnB,MAAM,kBAGV,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAI,OAAEgxC,QAAF,IAAEA,IAAc,GACpBthC,KAAK,SACLnB,MAAM,oBAGV,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAI,OAAEglD,QAAF,IAAEA,IAAgB,GACtBt1C,KAAK,WACLnB,MAAM,oBAGV,qBAAKpO,MAAM,gBAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAM4mB,EACNxlB,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,oBCmH1B0D,GAAmBzF,mBAzDD,SAACvE,GAAD,MAAY,CAClC/c,UAAW+c,EAAM/c,UACjB5R,MAAO2uB,EAAM3uB,MACbiN,OAAQ0hB,EAAM1hB,OACdqG,SAAUqb,EAAMrb,SAChBu+B,oBAAqBpV,aAAc,gBAAdA,CAA+B9N,OAE3B,SAAC90B,GAAD,MAAe,CACxCi4C,iBAAkB,SAAC9hD,EAAMC,EAAOC,GAAd,OAChBqrC,GAAqCvrC,EAAMC,EAAOC,IACpDmH,aAAc,SAACrH,EAAMC,GACnB8hD,GAAuC/hD,EAAMC,IAE/Cwb,gBAAgB,WAAD,4BAAE,WAAO3G,GAAP,mBAAA3G,EAAA,6DACftE,EAAS42C,IAAyC,IAClD52C,EAAS0hC,GAA8B,SAFxB,SAGT1hC,EAAS0hC,GAAsCz2B,EAAS/X,KAH/C,OAKTilD,EAAK,IAAIvjD,SAAQ,SAACC,EAASI,GAC/B2hD,GAAsC3rC,EAAS/X,IAAI0R,MAAK,SAACuJ,GACvDtZ,UAGEujD,EAAK,IAAIxjD,SAAQ,SAACC,EAASI,GAC/BijB,GAAmCjN,EAAS0I,aAAa/O,MAAK,SAACuJ,GAC7DtZ,UAGEwjD,EAAK,IAAIzjD,SAAQ,SAACC,EAASI,GAC/B2hD,GAA8C3rC,EAAS/X,IAAI0R,MAAK,SAACuJ,GAC/DtZ,UAIJD,QAAQjB,IAAI,CAACwkD,EAAIC,EAAIC,IAAKzzC,MAAK,WAC7B5E,EAAS42C,IAAyC,OAtBrC,2CAAF,mDAAC,GAyBhBrS,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,6DACjBtE,EAAS42C,GAA+B,QADvB,SAEX52C,EAAS42C,GAAuC,KAFrC,uBAGX52C,EAAS42C,GAAyC,KAHvC,OAIjBA,KACA/xC,YAAW,WACT3E,EAAS,oBACR,KAPc,2CAAF,kDAAC,GASlB87B,kBAAkB,WAAD,4BAAE,WAAOzlC,GAAP,SAAA+N,EAAA,sEACXtE,EAAS42C,GAAuCrgD,IADrC,OAEjBqgD,GAAyCrgD,GAFxB,2CAAF,mDAAC,GAIlB+hD,yBAAyB,WAAD,4BAAE,WAAOlb,GAAP,SAAA94B,EAAA,sEAClBtE,EAAS0hC,GAAsCtE,EAAOlqC,KADpC,uBAElB8M,EAAS0hC,GAAwCtE,IAF/B,2CAAF,mDAAC,MAMF/D,EAnLM,SAAC1C,GAC9B,IACEshB,EAUEthB,EAVFshB,iBACArmC,EASE+kB,EATF/kB,gBACAoqB,EAQErF,EARFqF,kBACAsc,EAOE3hB,EAPF2hB,yBAJF,EAWI3hB,EANF5e,UAAa2B,EALf,EAKeA,cAAevI,EAL9B,EAK8BA,OACnBiF,EAKPugB,EALFxwB,MAASiQ,UACC4B,EAIR2e,EAJFvjB,OAAU4E,WACEqZ,EAGVsF,EAHFld,SAAY4X,aACZ2mB,EAEErhB,EAFFqhB,oBACAx6C,EACEm5B,EADFn5B,aAEMrH,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjBsI,EAAc3S,OAAS,GACzB2S,EAAcrX,KAAI,SAACC,EAAMC,GACvBmX,EAAcnX,GAAd,2BAA4BD,GAA5B,IAAkC65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAI5D8uB,EAAatqB,OAAS,GACxBsqB,EAAahvB,KAAI,SAACC,EAAMC,GACtB8uB,EAAa9uB,GAAb,2BAA2BD,GAA3B,IAAiCE,KAAMF,EAAKsL,WAwDhD2rB,IAAMG,WAAU,WACdue,EAAiB,EAAG,IACpBrnB,GAA6B,EAAG,KAChCpzB,EAAa,EAAG,SACf,IAEH,IAAM8nC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAP,OAAcovC,QAAd,IAAcA,IAAY,EAC1Bp0B,EAAO/a,MAAP,OAAeovC,QAAf,IAAeA,IAAY,GAC3Br0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAAS0hC,GAAmCvwB,IAL/B,OAMzB8mC,EAAiB1S,EAAUC,GANF,2CAAH,wDAalB+S,EAAcniC,EAAUrP,OAAS,E1IiIb,SAACjU,GAC3B,IAAMylD,EAAc,GAQpB,OAPAzlD,EAAKuP,KAAI,SAACC,EAAMC,GACdg2C,EAAYn4C,KAAK,CACflN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAGT+1C,E0I1IoCC,CAAapiC,GAAa,GAC/D8uB,EACJltB,EAAWjR,OAAS,EAAIpE,GAAoBqV,EAAY,UAAY,GAChEygC,EACJpnB,EAAatqB,OAAS,EAClBpE,GAAoB0uB,EAAc,YAClC,GAEN,OACE,cAACqnB,GAAD,aACExkD,QAjFY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,MACP4uB,UAAW,MACX9G,IAAK,MACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE+T,IAAMskB,EAAEtkB,MAE9B,CACEzK,MAAO,gBACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE9B,KAAOm6B,EAAEn6B,OAE/B,CACEoL,MAAO,gBACP4uB,UAAW,QACX9G,IAAK,QACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,MAuD3BziB,cAAeA,EACf2vB,kBApDsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,KAAD,CAAMR,GAAI,iBAAkBW,QAAS,kBAAM3mB,EAAgBwrB,IAA3D,SACE,cAAC,GAAD,CAAa9mC,KAAK,UAAUuhC,KAAM,cAACwF,GAAA,EAAD,IAAkBjF,KAAK,aAE3D,cAAC,KAAD,CACER,GAAI,kBACJW,QAAS,kBAAM+f,EAAyBlb,IAF1C,SAIE,cAAC,GAAD,CAAa9mC,KAAK,UAAUuhC,KAAM,cAAC8gB,GAAA,EAAD,IAAqBvgB,KAAK,aAE9D,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QAqCRppB,OAAQA,EACRm0B,mBAAoBA,EACpBzB,SAnBa,SAACxtC,GAChBqrC,GAA6BrrC,EAAS2hD,IAmBpCH,UAAWU,EACXT,aAAcW,EACd3U,WAAYoB,GACRvO,OAmEKsI,gBAAU,CACvB3J,KAAM,iBADO2J,CAEZH,ICrMG8N,GAAa,SAACjW,GAClB,IAAQ7jC,EAA8C6jC,EAA9C7jC,KAAM8lD,EAAwCjiB,EAAxCiiB,cAAeC,EAAyBliB,EAAzBkiB,qBAEvBxZ,EAAO,SAAC,GAAc,IAAZ/8B,EAAW,EAAXA,KACd,OACE,cAAC,KAAD,CAAUE,KAAI,eAAUF,EAAKlB,OAASA,MAAOkB,EAAKlB,MAAlD,SACGkB,EAAKjB,SAKZ,OACE,mCACE,cAAC,KAAS0rC,MAAV,2BACMpW,EAAMqH,OADZ,IAEEpE,MAAO,CAAE1C,MAAO,QAChB4G,SAAU+a,EACVxY,aAAcuY,EAJhB,SAME,cAAC,KAAD,UACG9lD,EAAKuP,KAAI,SAACC,EAAMC,GACf,OACE,cAAC,KAAD,CAAKyqC,KAAM,EAAX,SACE,cAACvO,GAAA,EAAD,CACEn8B,KAAMA,EACNE,KAAI,eAAUF,EAAKlB,OACnBg0B,UAAWiK,iBA0RdyZ,GA/Qe,SAACniB,GAC7B,IACE2H,EAcE3H,EAdF2H,aACAC,EAaE5H,EAbF4H,WACAuF,EAYEnN,EAZFmN,WACAiV,EAWEpiB,EAXFoiB,SACAC,EAUEriB,EAVFqiB,aACAC,EASEtiB,EATFsiB,SACAhgC,EAQE0d,EARF1d,qBACA4/B,EAOEliB,EAPFkiB,qBACAjK,EAMEjY,EANFiY,kBACAD,EAKEhY,EALFgY,aACAuK,EAIEviB,EAJFuiB,iBACAC,EAGExiB,EAHFwiB,aACArkC,EAEE6hB,EAFF7hB,WACA68B,EACEhb,EADFgb,SAGF,EAA8BpY,IAAMC,UAAS,GAA7C,oBAAOxC,EAAP,KAAgB6X,EAAhB,KACA,EAAgCtV,IAAMC,SAAS,IAA/C,oBAAO5qB,EAAP,KAAiBkgC,EAAjB,KAEAvV,IAAMG,WAAU,WACViV,GACFG,EAAYH,KAEb,CAACA,IAEJ,IA2BMZ,EACJ,gCACG/W,EAAU,cAAC+X,GAAA,EAAD,IAAsB,cAAC/N,GAAA,EAAD,IACjC,qBAAKpH,MAAO,CAAEsU,UAAW,GAAzB,uBAIJ,OACE,qBAAKj7C,MAAM,eAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,wBAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,aAAV,6BACA,mBAAGA,MAAM,mBAAT,wFAIC0+C,EACC,eAACvS,GAAA,EAAD,WACE,sBAAKnsC,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,MACLnB,MAAM,MACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAMkmD,EACNx2C,KAAK,WACLnB,MAAM,gBACNy8B,SAAU,SAAC0E,GAAD,OAAS0W,EAAiB1W,WAI1C,sBAAKvvC,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,WACLnB,MAAM,WACN82B,YACiB,SAAfrjB,EACI,sCACA,4BAENsgB,UAAWmI,GACXjnC,KAAK,eAGT,qBAAKrD,MAAM,WAAX,SACE,cAAC,GAAD,CACEuP,KAAK,OACL1P,KAAMmmD,EACN53C,MAAM,iBACNg5B,SAAU4e,EAASlyC,QAAU,SAInC,sBAAK9T,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAM,OACNnB,MAAM,gBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,sBAAKrD,MAAM,WAAX,UACE,cAAC,KAAD,CAAY2mC,MAAO,CAAEqD,UAAW,QAAhC,yBAGA,qBACEhqC,MAAM,YACN2mC,MAAO,CACLqU,YAAa,GACbC,WAAY,IAJhB,SAOE,cAAC,KAAD,CACE1rC,KAAK,SACL2rC,SAAS,eACTrV,UAAU,kCACVsV,gBAAgB,EAChBP,aApHL,SAACmB,GACpB,IAAMC,EAA2B,eAAdD,EAAK14C,MAAuC,cAAd04C,EAAK14C,KACjD24C,GACH55C,KAAQ5C,MAAM,qCAEhB,IAAMy8C,EAASF,EAAK5W,KAAO,KAAO,KAAO,EAIzC,OAHK8W,GACH75C,KAAQ5C,MAAM,gCAETw8C,GAAcC,GA4GGpR,SAzGL,SAACqR,GACK,cAArBA,EAAKH,KAAKr8C,SACZk8C,GAAW,GACXM,EAAKH,KAAKr8C,OAAS,QAEI,SAArBw8C,EAAKH,KAAKr8C,QAEZgO,EAAUwuC,EAAKH,KAAKI,eAAe,SAACxgC,GAClCkgC,EAAYlgC,GACZigC,GAAW,GACXD,EAAkBhgC,OAyFA,SAQGA,GAAY+/B,EACX,qCACE,qBACEtW,IAAKzpB,EACL0pB,IAAI,SACJsB,MAAO,CACL1C,MAAO,OACPD,OAAQ,OACRoX,WAAY,UACZrR,aAAc,KAGlB,sBACE/pC,MAAM,MACN2mC,MAAO,CACLY,gBAAiB,UACjBllC,SAAU,WACV4hC,MAAO,GACPoX,MAAO,GACPtR,aAAc,GACduR,WAAY,SACZC,eAAgB,SAChBC,QAAS,IAVb,UAaE,cAAC,KAAD,CAAY7U,MAAO,CAAEuE,SAAU,IAA/B,kBAGA,cAACd,GAAA,EAAD,CACEzD,MAAO,CACLr2B,MAAO,UACP46B,SAAU,GACV8P,WAAY,WAMpBF,YAMV,qBAAK96C,MAAM,MAAX,SACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,QACJnB,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,aAIX,qBAAKrD,MAAM,MAAX,SACE,sBAAKA,MAAM,WAAX,UACE,cAAC,GAAD,CACEH,KAAMgxC,EACNthC,KAAK,SACLnB,MAAM,WAER,cAACo9B,GAAA,EAAD,CACEj8B,KAAK,UACLnB,MAAM,SACN+zB,UAAWmI,GACXC,cAAc,aAEhB,4BAGJ,qBAAKvqC,MAAM,MAAX,SACE,sBAAKA,MAAM,YAAX,UACE,uBACgB,SAAf6hB,GACC,qBAAK7hB,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,yBAAV,wBACA,cAAC,GAAD,CACEH,KAAMimD,EACNH,cAAe3/B,EACf4/B,qBAAsBA,cAOlC,sBAAK5lD,MAAM,WAAX,UACE,cAAC,KAAD,CAAM2kC,GAAI,aAAcW,QAAS4gB,EAAjC,SACE,cAAC,GAAD,CAEE7iD,KAAK,UACL0gC,SAAS,EACTuD,QAAM,EACN1C,KAAM,cAAC2Y,GAAA,EAAD,IALR,oBACM,YASR,qBAAKv9C,MAAM,SACX,cAAC,GAAD,CAEEqD,KAAK,UACL0gC,SAAS,EACTuB,QAAS+F,EAAaC,GAJxB,mBACM,gBAUV,qBAAKtrC,MAAM,mDAAX,SACE,cAAC,KAAD,oBC3Hd6rC,GAAmBzF,mBAnBD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdvP,MAAO2uB,EAAM3uB,MACbivB,UAAWN,EAAMM,UACjBrd,UAAW+c,EAAM/c,UACjB3E,OAAQ0hB,EAAM1hB,OACdiP,QAASyS,EAAMzS,YAEU,SAACriB,GAAD,MAAe,CACxC23C,aAAc,kBAAMH,MACpBrM,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7DmyC,kBAAkB,WAAD,4BAAE,WAAO7iD,GAAP,SAAA+N,EAAA,sEACXsyC,GAA8CrgD,GADnC,mFAAF,mDAAC,GAElBshB,wBAAyB,kBAAM++B,MAC/ByC,gCAAiC,WAC/Br5C,EAAS42C,GAAyC,SAI7Bvd,EA/KK,SAAC1C,GAC7B,IACEoI,EAcEpI,EAdFoI,MACA4Y,EAaEhhB,EAbFghB,aACAxM,EAYExU,EAZFwU,aACa74B,EAWXqkB,EAXFvB,UAAa9iB,eACJ8D,EAUPugB,EAVFxwB,MAASiQ,UALX,EAeIugB,EATFvjB,OAAU4E,EANZ,EAMYA,WAAY7G,EANxB,EAMwBA,OANxB,KAMgC9a,QAS5BsgC,EARF5e,WACEjD,EARJ,EAQIA,WACAgD,EATJ,EASIA,qBACAmB,EAVJ,EAUIA,qBACAU,EAXJ,EAWIA,qBAXJ,EAeIgd,EAFFtU,QAAWjH,EAbb,EAaaA,aAAcC,EAb3B,EAa2BA,SACzBg+B,EACE1iB,EADF0iB,gCAEF,EAA0C9f,IAAMC,SAAS,IAAzD,oBAAO8f,EAAP,KAAsBC,EAAtB,KACA,EAAwChgB,IAAMC,SAAS,IAAvD,oBAAOhhB,EAAP,KAAqBghC,EAArB,KACA,EAAwCjgB,IAAMC,SAAS,IAAvD,oBAAOmV,EAAP,KAAqB8K,EAArB,KAgBMC,GAdkBvoC,EAAhBhb,KAAgBgb,EAAV/a,MAca,IAC3BggB,EAAU/T,KAAI,SAACC,EAAMC,GACnBm3C,EAAmBt5C,KAAK,CACtBlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB,IAAM0iC,EAAe,GACrBltB,EAAW3V,KAAI,SAACC,EAAMC,GACpB2iC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYqP,GACdnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB,IAAMJ,EAAiB,GACvBgZ,EAAa/Y,KAAI,SAACC,EAAMC,GACtBH,EAAehC,KAAK,CAClBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB+2B,IAAMG,WAAU,WACd,GAAI/f,EAAsB,CACxB,IAAInT,EAAU,GACd6U,EAAShZ,KAAI,SAACC,EAAMC,GAClBiE,EAAQpG,KAAK,CACXlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAGhB+2C,EAAiB/yC,GAEE,SAAfsO,IACFoD,GAAmCJ,EAAqBnE,aACxDijC,KAEA6C,EAAgB3hC,EAAqBQ,OAErCrY,GAAMD,SACJqG,aAAO,mBAAoB,gBAAiB4S,QAIjD,CAACU,IAEJ4f,IAAMG,WAAU,WAGd,OAFAie,IAEO,WACL0B,OAED,IAEH9f,IAAMG,WAAU,WAEd,GADA6f,EAAiB,IACE,SAAfzkC,GAAyBgD,EAAqBnE,YAAa,CAC7D,IAAMpa,EACJue,EAAqBnE,YACrB,IACAmE,EAAqBtD,cACvB0kC,EAAiB3/C,MAElB,CAACub,EAAYgD,EAAqBnE,cAErC,IAKMulC,EAAgB,uCAAG,WAAO3/C,GAAP,qBAAA+K,EAAA,yDACvBi1C,EAAiB,IADM,UAGjBhgD,EAHiB,wBAIbusB,EAAgBvsB,EAAWuN,MAAM,KAJpB,SAKIjR,EAAOyD,YAAY,EAAG,IAAKwsB,EAAc,IAL7C,gBAKXhzB,EALW,EAKXA,KACF6mD,EAAkBl3C,GAAc3P,EAAK+N,SAAS/N,MACpDymD,EAAiBI,GAPE,wBASnB15C,GAAMD,SAASqG,aAAO,mBAAD,OAA6B,KAClDkzC,EAAiB,IAVE,0DAarBA,EAAiB,IACjB3mD,QAAQC,IAAI,WAAZ,MAdqB,0DAAH,sDAkBhBsmD,EAAY,uCAAG,sBAAA70C,EAAA,sEACb+0C,IADa,2CAAH,qDAIlB,OACE,cAAC,GAAD,aACE/mC,eAAgBA,EAChB64B,aAAcA,EACd5M,WAlHe,SAAC95B,GACds6B,IACFnsC,QAAQC,IAAI,SACZ+jD,GAAuC9hC,EAAYrQ,EAAQ+T,KAgH3DsrB,WAAYoB,EACZ6T,SAAUW,EACVV,aAAc52C,EACd62C,SAAUK,EACVM,eAAgB9hC,EAChB82B,kBAhHsB,SAACjgC,GACzB1O,GAAMD,SAASqG,aAAO,mBAAD,kBAAiCsI,QAAjC,IAAiCA,IAAU,MAgH9DmG,WAAYA,EACZmE,qBAAsBA,EACtB4/B,qBAxCyB,SAAC1yC,GAC5BqzC,EAAgBrzC,GAChBlG,GAAMD,SAASqG,aAAO,mBAAoB,gBAAiBF,KAuCzDwoC,aAAcA,EACduK,iBAAkBA,EAClBC,aAAcA,EACdxH,SAAUh4B,GACNgd,OA6BKsI,gBAAU,CACvB3J,KAAM,mBACN4J,ShE5EkC,SAACz6B,GACnC,IAAMk6B,EAAS,GAmBf,OAlBKl6B,EAAOjC,OACVm8B,EAAOn8B,KAAO,qBAEXiC,EAAOoP,QACV8qB,EAAO9qB,MAAQ,2BAEZpP,EAAO8O,WACVorB,EAAOprB,SAAW,yBAEf9O,EAAOgP,OACVkrB,EAAOlrB,KAAO,qBAEXhP,EAAO2O,SACVurB,EAAOvrB,OAAS,uBAEb3O,EAAO0P,UACVwqB,EAAOxqB,QAAU,qBAEZwqB,IgEsDMM,CAGZH,IC9LGgM,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAA4C,IAA1C1M,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAY0M,EAAe,EAAfA,SACjD,OACE,sBAAKh4C,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,eAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,qBAAKtrC,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,KACLnB,MAAM,YACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAGZ,qBAAKpnC,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,cACN+zB,UAAWmI,GACXjnC,KAAK,kBAqCFujD,GA7Bc,SAACljB,GAC5B,IACErkB,EAOEqkB,EAPFrkB,eACAgsB,EAME3H,EANF2H,aACAC,EAKE5H,EALF4H,WACAlsB,EAIEskB,EAJFtkB,oBACA84B,EAGExU,EAHFwU,aACAF,EAEEtU,EAFFsU,SACAG,EACEzU,EADFyU,SAGF,OACE,cAAC,GAAD,CACEjB,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,OCAdtM,GAAmBzF,mBAfD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdtC,OAAQ0hB,EAAM1hB,OACdgiB,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,YAEU,SAACriB,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7DmmC,wBAAyB,WACvBptC,EAASw3C,GAAiC,MAE5Cx0B,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChBm3B,GAAkCtlC,EAAMmO,OAGnB40B,EA5DI,SAAC1C,GAC5B,IACEoI,EAOEpI,EAPFoI,MACAoM,EAMExU,EANFwU,aACa74B,EAKXqkB,EALFvB,UAAa9iB,eACHwC,EAIR6hB,EAJFvjB,OAAU0B,WACCwG,EAGTqb,EAHFtU,QAAW/G,SACX0H,EAEE2T,EAFF3T,iBACAoqB,EACEzW,EADFyW,wBAUIC,EAAa,GAenB,OAdA/xB,EAASjZ,KAAI,SAACC,EAAMC,GAClB8qC,EAAWjtC,KAAK,CACdlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKiF,UAIhBgyB,IAAMG,WAAU,YACS,IAAnBpnB,GACF86B,MAED,CAAC96B,IAGF,cAAC,GAAD,aACEA,eAAgBA,EAChB64B,aAAcA,EACd5M,WA1Be,SAAC95B,GACds6B,GACF/b,EAAiBlO,EAAYrQ,IAyB7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,aAC7C6hB,OAyBKsI,gBAAU,CACvB3J,KAAM,iBACN4J,SAAUR,IAFGO,CAGZH,ICtEK8J,GAAWC,KAAXD,OAmEOkR,GAjES,SAACnjB,GACvB,IACEziC,EAOEyiC,EAPFziC,QACAkiB,EAMEugB,EANFvgB,UACAizB,EAKE1S,EALF0S,kBACA9E,EAIE5N,EAJF4N,kBACAe,EAGE3O,EAHF2O,mBACAn0B,EAEEwlB,EAFFxlB,OACA0yB,EACElN,EADFkN,SAGIzI,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAGZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,2BAEF,sBAAKA,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,6BASF,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAMsjB,EACNliB,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAQ1B,cAAC,GAAD,QCuDA0D,GAAmBzF,mBA1BD,SAACvE,GAAD,MAAY,CAClC1hB,OAAQ0hB,EAAM1hB,WAEW,SAACpT,GAAD,MAAe,CACxCtD,cAAe,SAACvG,EAAMC,EAAOC,GAAd,OACbulC,GAAyCzlC,EAAMC,EAAOC,IACxDkuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAAS47B,GAAoC,KADlC,uBAEX57B,EAAS47B,GAAkC,KAFhC,OAGjB57B,EAAS47B,GAA4B,QACrC57B,EAASiH,GAAgC,IACzC20B,KALiB,2CAAF,kDAAC,GAOlBhqB,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAAS47B,GAA4B,SAD5B,uBAET57B,EAAS47B,GAAkCwB,EAAOlqC,KAFzC,uBAGT8M,EAAS47B,GAAoCwB,IAHpC,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKT20B,KALS,4CAAF,mDAAC,GAOhBI,kBAAkB,WAAD,4BAAE,WAAOlkC,GAAP,SAAAwM,EAAA,sEACXtE,EAAS47B,GAAkC9jC,IADhC,OAEjB8jC,GAAoC9jC,GAFnB,2CAAF,mDAAC,MAMKuhC,EAhHD,SAAC1C,GACvB,IACEj6B,EAKEi6B,EALFj6B,cACAkV,EAIE+kB,EAJF/kB,gBACAoqB,EAGErF,EAHFqF,kBACAuI,EAEE5N,EAFF4N,kBAJF,EAMI5N,EADFvjB,OAAU4E,EALZ,EAKYA,WAAY7G,EALxB,EAKwBA,OAGhBhb,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjB4G,EAAWjR,OAAS,GACtBiR,EAAW3V,KAAI,SAACC,EAAMC,GACpByV,EAAWzV,GAAX,2BAAyBD,GAAzB,IAA+B65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAyC7Dg3B,IAAMG,WAAU,WACdh9B,EAAcvG,EAAMC,KACnB,IAEH,IAAMkvC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAAS47B,GAA8BzqB,IAL1B,OAMzBzU,EAAc6oC,EAAUC,GANC,2CAAH,wDAaxB,OACE,cAAC,GAAD,aACEtxC,QAxDY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,cACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE9B,KAAKuE,OAAS41B,EAAEn6B,KAAKuE,UA4CzCqP,UAAW4B,EACXqxB,kBAzCsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA2BRgK,kBAAmBA,EACnBe,mBAAoBA,EACpBn0B,OAAQA,EACR0yB,SAZa,SAACrB,GAChB9lC,EAAcvG,EAAMC,EAAOosC,KAarB7L,OAoCKsI,gBAAU,CACvB3J,KAAM,cADO2J,CAEZH,IC7HGgM,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAA4C,IAA1C1M,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAY0M,EAAe,EAAfA,SACjD,OACE,sBAAKh4C,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,eAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,qBAAKtrC,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CAAOj8B,KAAK,OAAOnB,MAAM,QAAQ+zB,UAAWmI,GAAQjnC,KAAK,WAE3D,qBAAKrD,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,YACN+zB,UAAWmI,GACXjnC,KAAK,kBAqCFyjD,GA7BgB,SAACpjB,GAC9B,IACErkB,EAOEqkB,EAPFrkB,eACAgsB,EAME3H,EANF2H,aACAC,EAKE5H,EALF4H,WACAlsB,EAIEskB,EAJFtkB,oBACA84B,EAGExU,EAHFwU,aACAF,EAEEtU,EAFFsU,SACAG,EACEzU,EADFyU,SAGF,OACE,cAAC,GAAD,CACEjB,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,OCJdtM,GAAmBzF,mBAZD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdwH,SAAU4X,EAAM5X,SAChBkY,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,YAEU,SAACriB,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7D+b,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChB++B,GAAsCltC,EAAMmO,OAGvB40B,EAlDM,SAAC1C,GAC9B,IACEoI,EAMEpI,EANFoI,MACAoM,EAKExU,EALFwU,aACa74B,EAIXqkB,EAJFvB,UAAa9iB,eACDwC,EAGV6hB,EAHFzZ,SAAYpI,WACDwG,EAETqb,EAFFtU,QAAW/G,SACX0H,EACE2T,EADF3T,iBAUIqqB,EAAa,GASnB,OARA/xB,EAASjZ,KAAI,SAACC,EAAMC,GAClB8qC,EAAWjtC,KAAK,CACdlN,GAAG,aAAD,OAAeqP,GACjBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKiF,UAKd,cAAC,GAAD,aACE+K,eAAgBA,EAChB64B,aAAcA,EACd5M,WApBe,SAAC95B,GACds6B,GACF/b,EAAiBlO,EAAYrQ,IAmB7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,aAC7C6hB,OAsBKsI,gBAAU,CACvB3J,KAAM,eACN4J,SAAUR,IAFGO,CAGZH,IC3DK8J,GAAWC,KAAXD,OAkEOoR,GAhEW,SAACrjB,GACzB,IACEziC,EAOEyiC,EAPFziC,QACAwpB,EAMEiZ,EANFjZ,aACA2rB,EAKE1S,EALF0S,kBACA9E,EAIE5N,EAJF4N,kBACAe,EAGE3O,EAHF2O,mBACAn0B,EAEEwlB,EAFFxlB,OACA0yB,EACElN,EADFkN,SAGIzI,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAEZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,8BAEF,sBAAKA,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,gCASF,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAM4qB,EACNxpB,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAQ1B,cAAC,GAAD,QC8DA0D,GAAmBzF,mBA1BD,SAACvE,GAAD,MAAY,CAClC5X,SAAU4X,EAAM5X,aAES,SAACld,GAAD,MAAe,CACxCi6C,gBAAiB,SAAC9jD,EAAMC,EAAOosC,GAAd,OACfgB,GAA6CrtC,EAAMC,EAAOosC,IAC5D+B,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAASwjC,GAAwC,KADtC,uBAEXxjC,EAASwjC,GAAsC,KAFpC,OAGjBxjC,EAASwjC,GAA8B,QACvCxjC,EAASiH,GAAgC,IACzCu8B,KALiB,2CAAF,kDAAC,GAOlB5xB,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAASwjC,GAA8B,SAD9B,uBAETxjC,EAASwjC,GAAsCpG,EAAOlqC,KAF7C,uBAGT8M,EAASwjC,GAAwCpG,IAHxC,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKTu8B,KALS,4CAAF,mDAAC,GAOhBxH,kBAAkB,WAAD,4BAAE,WAAOv/B,GAAP,SAAA6H,EAAA,sEACXtE,EAASwjC,GAAsC/mC,IADpC,OAEjB+mC,GAAwC/mC,GAFvB,2CAAF,mDAAC,MAMK48B,EAtHC,SAAC1C,GACzB,IACEsjB,EAKEtjB,EALFsjB,gBACAroC,EAIE+kB,EAJF/kB,gBACAoqB,EAGErF,EAHFqF,kBACAuI,EAEE5N,EAFF4N,kBAJF,EAMI5N,EADFzZ,SAAYQ,EALd,EAKcA,aAAcvM,EAL5B,EAK4BA,OAGpBhb,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjBsM,EAAa3W,OAAS,GACxB2W,EAAarb,KAAI,SAACC,EAAMC,GACtBmb,EAAanb,GAAb,2BAA2BD,GAA3B,IAAiC65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAgD/Dg3B,IAAMG,WAAU,WACdugB,EAAgB9jD,EAAMC,KACrB,IAEH,IAIMkvC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAASwjC,GAAiCryB,IAL7B,OAMzB8oC,EAAgB1U,EAAUC,GAND,2CAAH,wDASxB,OACE,cAAC,GAAD,CACEtxC,QA/DY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,QACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE9B,KAAKuE,OAAS41B,EAAEn6B,KAAKuE,SAE3C,CACE6G,MAAO,YACP4uB,UAAW,cACX9G,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEgC,YAAYS,OAAS41B,EAAEr2B,YAAYS,UA4CvD2W,aAAcA,EACd2rB,kBAzCsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA2BRgK,kBAAmBA,EACnBV,SAnBa,SAACrB,GAChByX,EAAgB9jD,EAAMC,EAAOosC,IAmB3B8C,mBAAoBA,EACpBn0B,OAAQA,OAqCC8tB,gBAAU,CACvB3J,KAAM,cADO2J,CAEZH,ICXYob,GAxHiB,SAAC,GAM1B,IALLC,EAKI,EALJA,UACAC,EAII,EAJJA,OACAlB,EAGI,EAHJA,iBACAmB,EAEI,EAFJA,iBACAC,EACI,EADJA,kBAEA,OACE,qCACE,sBAAKrnD,MAAM,oBAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAASH,KAAMunD,EAAkB73C,KAAK,eAAenB,MAAM,WAE7D,qBAAKpO,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,eACLnB,MAAM,gBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,WACLnB,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,cAIX,sBAAKrD,MAAM,oBAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,eACLnB,MAAM,gBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAMwnD,EACN93C,KAAK,gBACLnB,MAAM,aAGV,qBAAKpO,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,gBACLnB,MAAM,qBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,cAIX,sBAAKrD,MAAM,oBAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,kBACLnB,MAAM,SACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAAC,GAAD,CACE6qC,SAAU,SAAC0E,GAAD,OAAS0W,EAAiB1W,IACpC1vC,KAAMqnD,EACN33C,KAAK,WACLnB,MAAM,oBAGV,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAMsnD,EACN53C,KAAK,OACLnB,MAAM,iBACNg5B,SAAU+f,EAAOrzC,QAAU,SAIjC,sBAAK9T,MAAM,oBAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,QACLnB,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,kBACLnB,MAAM,yBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,4BACLnB,MAAM,0CACN82B,YAAY,IACZ/C,UAAWmI,GACXa,UAAW,GACX9nC,KAAK,kBC1BFikD,GAtFc,WAC3B,OACE,qCACE,sBAAKtnD,MAAM,oBAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,eACLnB,MAAM,aACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,eACLnB,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,cAIX,sBAAKrD,MAAM,oBAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,gBACLnB,MAAM,gBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,uBACLnB,MAAM,sBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,cAIX,uBACA,sBAAKwiC,UAAU,WAAf,UACE,oBAAIA,UAAU,aAAd,uBACA,cAAC,KAAD,CAAMc,MAAO,CAAEuE,SAAU,GAAI8P,WAAY,GAAzC,yCAIF,sBAAKh7C,MAAM,oBAAX,UACE,sBAAKA,MAAM,WAAX,UACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,UACLnB,MAAM,WACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,SAEP,cAACmoC,GAAA,EAAD,CACEj8B,KAAK,YACLnB,MAAM,aACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,YAGT,qBAAKrD,MAAM,gBAEb,uBACA,sBAAK6lC,UAAU,WAAf,UACE,oBAAIA,UAAU,aAAd,sCACA,cAAC,KAAD,CAAMc,MAAO,CAAEuE,SAAU,GAAI8P,WAAY,GAAzC,gCAEF,sBAAKh7C,MAAM,oBAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,YAAYnB,MAAM,wBAEtC,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,YAAYnB,MAAM,oCCkQ/Bm5C,GA3UmB,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,iBAAkBC,EAAiB,EAAjBA,WACrD,EAAuBnhB,IAAMC,SAAS,CACpC,CACEtmC,GAAG,aACHkO,MAAO,OACPC,MAAO,UAET,CACEnO,GAAG,aACHkO,MAAO,QACPC,MAAO,WATJ4Q,EAAP,qBA+EM0oC,EAAyB,SAAC,GAAgB,IAAd5Z,EAAa,EAAbA,OAIhC,OACE,eAAC,WAAD,WACE,sBAAK9tC,MAAM,0BAAX,UACE,qBAAKA,MAAM,SACX,cAAC,GAAD,CAEEqD,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACNzI,QAAS,WACHwI,EAAOh6B,QAAU,GAGrBg6B,EAAO3gC,KAAK,KARhB,kCAcF,uBACC2gC,EAAO1+B,KAAI,SAACigC,EAAUC,GACrB,OACE,gCACE,sBAAKtvC,MAAM,WAAX,UACE,qBAAKA,MAAM,MAAX,SACE,oBAAIA,MAAM,aAAV,8BAAsCsvC,EAAY,OAEpD,cAAC,GAAD,CAEEjsC,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN3I,QAAS,kBAjCIh2B,EAiCoBggC,OAhC7CxB,EAAOI,OAAO5+B,GADU,IAACA,GAkCbg4B,QAAM,EACNnC,KAAK,SANP,0BAC0BmK,OAQ5B,sBAAKtvC,MAAM,WAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,oBACJjhC,MAAM,kBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,mBACJjhC,MAAM,MACN82B,YAAY,8BACZ/C,UAAWmI,GACXjnC,KAAK,gBA9Bb,oBAAuBisC,WAyC3BqY,EAAwB,SAAC,GAAgB,IAAd7Z,EAAa,EAAbA,OAI/B,OACE,eAAC,WAAD,WACE,sBAAK9tC,MAAM,0BAAX,UACE,qBAAKA,MAAM,SACX,cAAC,GAAD,CAEEqD,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACNzI,QAAS,WACHwI,EAAOh6B,QAAU,GAGrBg6B,EAAO3gC,KAAK,KARhB,kCAcF,uBACC2gC,EAAO1+B,KAAI,SAACigC,EAAUC,GACrB,OACE,gCACE,sBAAKtvC,MAAM,WAAX,UACE,qBAAKA,MAAM,MAAX,SACE,oBAAIA,MAAM,aAAV,8BAAsCsvC,EAAY,OAEpD,cAAC,GAAD,CAEEjsC,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN3I,QAAS,kBAjCIh2B,EAiCoBggC,OAhC7CxB,EAAOI,OAAO5+B,GADU,IAACA,GAkCbg4B,QAAM,EACNnC,KAAK,SANP,0BAC0BmK,OAQ5B,sBAAKtvC,MAAM,WAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,iBACJjhC,MAAM,yBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,iBACJjhC,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,cAIX,sBAAKrD,MAAM,WAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,gBACJjhC,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,QACJjhC,MAAM,MACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,gBAlDb,oBAAuBisC,WA6DjC,OACE,qCACE,qBAAKtvC,MAAM,oBAAX,SACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACE6qC,SAAU,SAAC0E,GAAD,OAASiY,EAAiBjY,IACpC1vC,KAAMmf,EACN5Q,MAAM,kBACNmB,KAAK,iBAIVk4C,GACC,sBAAKznD,MAAM,oBAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,wBACLnB,MAAM,yBACN82B,YAAY,cACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,uBACLnB,MAAM,kBACN82B,YAAY,uBACZ/C,UAAWmI,GACXjnC,KAAK,cAKb,sBAAKwiC,UAAU,oBAAf,UACE,oBAAIA,UAAU,aAAd,4CACA,sBAAKA,UAAU,qBAAf,UACE,cAAC+H,GAAA,EAAD,IACA,mBAAG/H,UAAU,kBAAb,2EAIF,cAACgI,GAAA,EAAD,CACEt+B,KAAK,gCACL4yB,UAtQqB,SAAC,GAAgB,IAAd2L,EAAa,EAAbA,OAI9B,OACE,eAAC,WAAD,WACE,sBAAK9tC,MAAM,0BAAX,UACE,qBAAKA,MAAM,SACX,cAAC,GAAD,CAEEqD,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACNzI,QAAS,WACHwI,EAAOh6B,QAAU,GAGrBg6B,EAAO3gC,KAAK,KARhB,kCAcF,uBACC2gC,EAAO1+B,KAAI,SAACigC,EAAUC,GACrB,OACE,gCACE,sBAAKtvC,MAAM,WAAX,UACE,qBAAKA,MAAM,MAAX,SACE,oBAAIA,MAAM,aAAV,8BAAsCsvC,EAAY,OAEpD,cAAC,GAAD,CAEEjsC,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN3I,QAAS,kBAjCIh2B,EAiCoBggC,OAhC7CxB,EAAOI,OAAO5+B,GADU,IAACA,GAkCbg4B,QAAM,EACNnC,KAAK,SANP,0BAC0BmK,OAQ5B,sBAAKtvC,MAAM,WAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,oBACJjhC,MAAM,kBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,yBACJjhC,MAAM,8BACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,gBA9Bb,oBAAuBisC,aA+O3B,0BAEF,sBAAKzJ,UAAU,oBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,KAAD,CAAMc,MAAO,CAAEuE,SAAU,GAAI8P,WAAY,GAAzC,uCAIF,sBAAKnV,UAAU,qBAAf,UACE,cAAC+H,GAAA,EAAD,IACA,mBAAG/H,UAAU,kBAAb,4EAIF,cAACgI,GAAA,EAAD,CACEt+B,KAAK,+BACL4yB,UAAW,SAACylB,GAAD,OAAY,cAACF,EAAD,eAA4BE,OAErD,0BAEF,sBAAK/hB,UAAU,oBAAf,UACE,sBAAKA,UAAU,WAAf,UACE,oBAAIA,UAAU,aAAd,yCACA,cAAC,KAAD,CAAMc,MAAO,CAAEuE,SAAU,GAAI8P,WAAY,GAAzC,8BAEF,sBAAKnV,UAAU,qBAAf,UACE,cAAC+H,GAAA,EAAD,IACA,mBAAG/H,UAAU,kBAAb,kFAIF,cAACgI,GAAA,EAAD,CACEt+B,KAAK,mBACL4yB,UAAW,SAACylB,GAAD,OAAY,cAACD,EAAD,eAA2BC,OAEpD,0BAEF,qBAAK5nD,MAAM,oBAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,OACLnB,MAAM,aACN82B,YAAY,oDACZ/C,UAAWmI,GACXC,cAAc,qB,WCxUlBgS,GAASC,KAATD,KAEFsL,GAAejkB,KAAOC,IAAV,2MAUZikB,GAAclkB,KAAOC,IAAV,oDAITkkB,GAASC,KAATD,KAkFOE,GAhF2B,SAACvkB,GAAW,IAAD,UAC3C7jC,EAAiC6jC,EAAjC7jC,KAAMqoD,EAA2BxkB,EAA3BwkB,MAAOC,EAAoBzkB,EAApBykB,gBACrB,EAA8B7hB,IAAMC,SAAS,GAA7C,oBAAOyP,EAAP,KAAgBoS,EAAhB,KAgBA,OACE,qBAAKpoD,MAAM,eAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,oBAAIA,MAAM,aAAV,iCACA,oBAAIA,MAAM,aAAV,SACGH,EAAKsyB,QAAU,iBAAmB,uBAErC,uBACA,qBAAKnyB,MAAM,sDAAX,SACE,sBAAKA,MAAM,gBAAX,UACE,cAAC,GAAD,+BACA,cAAC,GAAD,CAAM09C,QAAM,EAAZ,mBAAc79C,EAAK2gC,qBAAnB,QAAoC,MACpC,uBACA,cAAC,GAAD,sBACA,cAAC,GAAD,CAAMkd,QAAM,EAAZ,mBAAc79C,EAAKwD,YAAnB,QAA2B,MAC3B,uBACA,cAAC,GAAD,wBACA,cAAC,GAAD,CAAMq6C,QAAM,EAAZ,mBAAc79C,EAAK4hB,mBAAnB,QAAkC,MAClC,uBACA,cAAC,GAAD,wBACA,cAAC,GAAD,CAAYpe,KAAK,OAAjB,mBAAyBxD,EAAKH,cAA9B,QAAwC,MACxC,uBACA,cAAC,GAAD,wBACA,cAAC,GAAD,CAAMg+C,QAAM,EAAZ,mBAAc79C,EAAK+7B,oBAAnB,QAAmC,WAGvC,cAAC,KAAD,CAAOoa,QAASA,EAAhB,SACGkS,EAAM94C,KAAI,SAACC,GAAD,OACT,cAAC04C,GAAD,CACE10C,YAAahE,EAAKgE,YAElBsH,MAAOtL,EAAKsL,OADPtL,EAAKsL,YAKhB,cAACktC,GAAD,UAAeK,EAAMlS,GAAStC,UAC9B,eAACoU,GAAD,WACG9R,EAAUkS,EAAMp0C,OAAS,GACxB,cAAC,KAAD,CAAQzQ,KAAK,UAAUiiC,QAtDjB,WAClB8iB,EAAWpS,EAAU,GACrBmS,GAAgB,IAoDJ,kBAIDnS,IAAYkS,EAAMp0C,OAAS,GAC1B,cAAC,KAAD,CAAQzQ,KAAK,UAAUiiC,QAlDlB,WACjBljC,KAAQ0Q,QAAQ,wBAChBq1C,GAAgB,IAgDJ,kBAIDnS,EAAU,GACT,cAAC,KAAD,CAAQrP,MAAO,CAAExC,OAAQ,SAAWmB,QA3D1B,WACtB8iB,EAAWpS,EAAU,IA0DT,mCCuCDqS,GA1H8B,SAAC,GAGvC,IAFLC,EAEI,EAFJA,YACAC,EACI,EADJA,iBAEMC,EAAmB,SAAC,GAAsB,IAApB1a,EAAmB,EAAnBA,OAAQz+B,EAAW,EAAXA,KAIlC,OACE,eAAC,WAAD,WACE,sBAAKrP,MAAM,0BAAX,UACE,qBAAKA,MAAM,SACX,cAAC,GAAD,CAEEqD,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACNzI,QAAS,WACHwI,EAAOh6B,QAAU,IAGrBg6B,EAAO3gC,KAAK,IACZyE,YAAW,WACT22C,EAAiBl5C,KAChB,OAXP,kCAiBF,uBACCy+B,EAAO1+B,KAAI,SAACigC,EAAUC,GACrB,OACE,gCACE,sBAAKtvC,MAAM,WAAX,UACE,qBAAKA,MAAM,MAAX,SACE,oBAAIA,MAAM,aAAV,mBAA2BqP,EAAKhM,KAAhC,YAAwCisC,EAAY,OAEtD,cAAC,GAAD,CAEEjsC,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN3I,QAAS,kBApCIh2B,EAoCoBggC,OAnC7CxB,EAAOI,OAAO5+B,GADU,IAACA,GAqCbg4B,QAAM,EACNnC,KAAK,SANP,0BAC0BmK,OAQ5B,sBAAKtvC,MAAM,WAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,UACJjhC,MAAM,QACN82B,YAAY,6BACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,SACJjhC,MAAM,OACN82B,YAAY,2BACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,QACJjhC,MAAM,MACN82B,YAAY,kBACZ/C,UAAWmI,GACXjnC,KAAK,cAIX,sBAAKrD,MAAM,WAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,qBACJjhC,MAAM,8BACN82B,YAAY,uBACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAI,UAAK8/B,EAAL,kBACJjhC,MAAM,aACN82B,YAAY,yBACZ/C,UAAWmI,GACXjnC,KAAK,gBA3Db,oBAAuBisC,WAsEjC,OAAOgZ,EAAYl5C,KAAI,SAACC,EAAMC,GAC5B,OACE,sBAAmCu2B,UAAU,oBAA7C,UACE,oBAAIA,UAAU,aAAd,SAA4Bx2B,EAAKhM,OACjC,sBAAKwiC,UAAU,qBAAf,UACE,cAAC+H,GAAA,EAAD,IACA,mBAAG/H,UAAU,kBAAb,qDAIF,cAACgI,GAAA,EAAD,CACEt+B,KAAI,uBAAkBF,EAAKE,KAAvB,SACJ4yB,UAAW,SAACylB,GAAD,OAAY,cAACY,EAAD,aAAkBn5C,KAAMA,GAAUu4C,OAE3D,yBAZF,uBAA0Bt4C,QCWjBm5C,GAvHwB,SAAC,GAMjC,IALLvB,EAKI,EALJA,UACAC,EAII,EAJJA,OACAlB,EAGI,EAHJA,iBACAmB,EAEI,EAFJA,iBACAC,EACI,EADJA,kBAEA,OACE,qCACE,sBAAKrnD,MAAM,oBAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAMunD,EACN73C,KAAK,eACLnB,MAAM,oBAGV,qBAAKpO,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,eACLnB,MAAM,gBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,WACLnB,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,cAIX,sBAAKrD,MAAM,oBAAX,UACE,sBAAKA,MAAM,WAAX,UACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,eACLnB,MAAM,gBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,SAEP,cAACmoC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,YAGT,qBAAKrD,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAMwnD,EACN93C,KAAK,gBACLnB,MAAM,aAGV,qBAAKpO,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,sBACLnB,MAAM,cACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,cAIX,uBACA,qBAAKwiC,UAAU,WAAf,SACE,oBAAIA,UAAU,aAAd,+BAEF,sBAAK7lC,MAAM,0BAAX,UACE,sBAAKA,MAAM,WAAX,UACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,YACLnB,MAAM,YACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,SAEP,cAACmoC,GAAA,EAAD,CACEj8B,KAAK,YACLnB,MAAM,YACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,YAGT,sBAAKrD,MAAM,WAAX,UACE,cAAC,GAAD,CACE6qC,SAAU,SAAC0E,GAAD,OAAS0W,EAAiB1W,IACpC1vC,KAAMqnD,EACN33C,KAAK,WACLnB,MAAM,kBAER,cAACo9B,GAAA,EAAD,CACEj8B,KAAK,aACLnB,MAAM,WACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,YAGT,qBAAKrD,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAMsnD,EACN53C,KAAK,OACLnB,MAAM,iBACNg5B,SAAU+f,EAAOrzC,QAAU,aC+BjC+3B,GAAmBzF,mBAVD,SAACvE,GAAD,MAAY,CAClChoB,SAAUgoB,EAAMhoB,SAChBG,cAAe6nB,EAAM7nB,cACrB8X,eAAgB+P,EAAM/P,eACtB1C,QAASyS,EAAMzS,QACfuH,qBAAsBkL,EAAMlL,qBAC5B+xB,yBAA0B/Y,aAAc,2BAAdA,CAA0C9N,OAE3C,SAAC90B,GAAD,MAAe,KAEjBq5B,EA/HiB,SAAC1C,GACzC,MAA4B4C,IAAMC,SAAS,IAA3C,oBAAO4gB,EAAP,KAAewB,EAAf,KACA,EAAgCriB,IAAMC,UAAS,GAA/C,oBAAOqiB,EAAP,KAAiBC,EAAjB,KACA,EAKInlB,EAJF5R,eAAkB6D,EADpB,EACoBA,2BAA4B9T,EADhD,EACgDA,WACnCsG,EAGTub,EAHFtU,QAAWjH,aACa4O,EAEtB2M,EAFF/M,qBAAwBI,YACxB2xB,EACEhlB,EADFglB,yBAGIzC,EAAgB,uCAAG,WAAO3/C,GAAP,qBAAA+K,EAAA,yDACvBs3C,EAAU,IADa,UAGjBriD,EAHiB,wBAIbusB,EAAgBvsB,EAAWuN,MAAM,KAJpB,SAKIjR,EAAOyD,YAAY,EAAG,IAAKwsB,EAAc,IAL7C,gBAKXhzB,EALW,EAKXA,KACF6mD,EAAkBl3C,GAAc3P,EAAK+N,SAAS/N,MACpD8oD,EAAUjC,GAPS,wBASnB15C,GAAMD,SAASqG,aAAO,2BAAD,OAAqC,KAC1Du1C,EAAU,IAVS,0DAarBA,EAAU,IACVhpD,QAAQC,IAAI,WAAZ,MAdqB,0DAAH,sDA6ChBsoD,EAAQ,GAqDd,OAnDIvyB,EAA2BxD,SAC7B+1B,EAAM/6C,KAAK,CACTwN,MAAO,WACP+4B,QACE,cAAC,GAAD,CACEwT,UAAWh4C,GAAgBiZ,GAC3Bg/B,OAAQA,EACRlB,iBAAkBA,EAClBmB,iBAAkB94C,EAClB+4C,kBAAmB54C,OAIzBy5C,EAAM/6C,KAAK,CACTwN,MAAO,oBACP+4B,QACE,cAAC,GAAD,CACE4U,YAAav4C,GAAegnB,GAC5BwxB,iBAtCiB,SAACl5C,GACxBrC,GAAMD,SACJqG,aACE,2BADI,uBAEY/D,EAAKE,KAFjB,OAGJF,EAAKpP,YAsCTioD,EAAM/6C,KAAK,CACTwN,MAAO,WACP+4B,QACE,cAAC,GAAD,CACEwT,UAAWh4C,GAAgBiZ,GAC3Bg/B,OAAQA,EACRlB,iBAAkBA,EAClBmB,iBAAkB14C,GAClB24C,kBAAmB54C,OAIzBy5C,EAAM/6C,KAAK,CACTwN,MAAO,OACP+4B,QAAS,cAAC,GAAD,OAIbwU,EAAM/6C,KAAK,CACTwN,MAAO,aACP+4B,QACE,cAAC,GAAD,CACE8T,iBA1EmB,SAACjY,GAEF,SADHA,EAAI17B,MAAM,KACd,GACbg1C,GAAY,GAEZA,GAAY,IAsEVpB,WAAYmB,MAMhB,cAAC,GAAD,CACE/oD,KAAM81B,EACNuyB,MAAOA,EACPC,gBAjEoB,SAAC71B,GACvBw2B,GACEjnC,EACA6mC,EACAp2B,SAiFS0Z,gBAAU,CACvB3J,KAAM,4BADO2J,CAEZH,ICpJGgM,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAUhB,IATL1M,EASI,EATJA,aACAC,EAQI,EARJA,WACA0M,EAOI,EAPJA,SACAn2B,EAMI,EANJA,WACAknC,EAKI,EALJA,aACA7N,EAII,EAJJA,SACAn2B,EAGI,EAHJA,WACAikC,EAEI,EAFJA,aACAC,EACI,EADJA,YAEA,OACE,sBAAKjpD,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,eAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,qBAAKtrC,MAAM,YAAX,SACkB,SAAf6hB,GACC,cAAC2pB,GAAA,EAAD,CACEj8B,KAAK,KACLnB,MAAM,YACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAId,sBAAKpnC,MAAM,YAAX,UACE,cAAC,GAAD,CAEE+sC,YAAU,EACVltC,KAAMkpD,EACN36C,MAAM,gBACNmB,KAAK,aAEP,sBAAKvP,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAASH,KAAMklB,EAAY3W,MAAM,SAASmB,KAAK,aAEjD,qBAAKvP,MAAM,WAAX,SACE,cAAC,GAAD,CAASH,KAAMmpD,EAAc56C,MAAM,SAASmB,KAAK,kBAGrD,cAAC,GAAD,CAAS1P,KAAMq7C,EAAU9sC,MAAM,oBAAoBmB,KAAK,SACxD,cAAC,GAAD,CAAS1P,KAAMopD,EAAa76C,MAAM,UAAUmB,KAAK,sBAgD5C25C,GAzCsB,SAACxlB,GACpC,IACErkB,EAaEqkB,EAbFrkB,eACAgsB,EAYE3H,EAZF2H,aACAC,EAWE5H,EAXF4H,WACAlsB,EAUEskB,EAVFtkB,oBACA84B,EASExU,EATFwU,aACAF,EAQEtU,EARFsU,SACAG,EAOEzU,EAPFyU,SACAt2B,EAME6hB,EANF7hB,WACAsnC,EAKEzlB,EALFylB,cACA1b,EAIE/J,EAJF+J,SACAoD,EAGEnN,EAHFmN,WACAuY,EAEE1lB,EAFF0lB,aACAC,EACE3lB,EADF2lB,YAGF,OACE,cAAC,GAAD,CACEnS,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,EACVt2B,WAAYA,EACZknC,aAAcI,EACdjO,SAAUzN,EACV1oB,WAAY8rB,EACZmY,aAAcI,EACdH,YAAaI,OCnBjBxd,GAAmBzF,mBAdD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdqP,eAAgB+P,EAAM/P,eACtBqQ,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,QACf/O,UAAWwhB,EAAMxhB,UACjBF,OAAQ0hB,EAAM1hB,WAEW,SAACpT,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7D+b,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChBs3C,GAAkDzlD,EAAMmO,OAGnC40B,EAxEY,SAAC1C,GACpC,IACEoI,EAOEpI,EAPFoI,MACAoM,EAMExU,EANFwU,aACa74B,EAKXqkB,EALFvB,UAAa9iB,eACKwC,EAIhB6hB,EAJF5R,eAAkBjQ,WAClBkO,EAGE2T,EAHF3T,iBACapO,EAEX+hB,EAFFrjB,UAAasB,cACHoD,EACR2e,EADFvjB,OAAU4E,WAWNukC,EAAiB,GACvB3nC,EAAcvS,KAAI,SAACC,EAAMC,GACvBg6C,EAAen8C,KAAK,CAClBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB,IAAM0iC,EAAe,GAarB,OAZAltB,EAAW3V,KAAI,SAACC,EAAMC,GACpB2iC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYqP,GACdnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB+2B,IAAMG,WAAU,WACd8iB,GAA6C,EAAG,OAC/C,IAGD,cAAC,GAAD,aACElqC,eAAgBA,EAChB64B,aAAcA,EACd5M,WAlCe,SAAC95B,GACds6B,IACFnsC,QAAQC,IAAI,SACZmwB,EAAiBlO,EAAYrQ,KAgC7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,YACjDsnC,cAAeG,EACf7b,SAAUp/B,EACVwiC,WAAYoB,EACZmX,aAAcl7C,EACdm7C,YAAa16C,IACT+0B,OAwBKsI,gBAAU,CACvB3J,KAAM,0BACN4J,SAAUR,IAFGO,CAGZH,ICvFK8J,GAAWC,KAAXD,OAoEO6T,GAlEqB,SAAC9lB,GACnC,IACEziC,EAOEyiC,EAPFziC,QACA40B,EAME6N,EANF7N,mBACAugB,EAKE1S,EALF0S,kBACA9E,EAIE5N,EAJF4N,kBACAe,EAGE3O,EAHF2O,mBACAn0B,EAEEwlB,EAFFxlB,OACA0yB,EACElN,EADFkN,SAGIzI,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAGZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,iCAEF,sBAAKA,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,mCASF,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAMg2B,EACN50B,QAASA,EACTu1C,cAAeJ,EACfjR,KAAK,QACLgD,WAAYA,iBAQ1B,cAAC,GAAD,QCkFA0D,GAAmBzF,mBA1BD,SAACvE,GAAD,MAAY,CAClC/P,eAAgB+P,EAAM/P,mBAEG,SAAC/kB,GAAD,MAAe,CACxC08C,sBAAuB,SAACvmD,EAAMC,EAAOC,GAAd,OACrB0lD,GAAqD5lD,EAAMC,EAAOC,IACpEkuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAAS+7C,GAAoD,KADlD,uBAEX/7C,EAAS+7C,GAAkD,KAFhD,OAGjB/7C,EAAS+7C,GAAoC,QAC7C/7C,EAASiH,GAAgC,IACzC80C,KALiB,2CAAF,kDAAC,GAOlBnqC,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAAS+7C,GAAoC,SADpC,uBAET/7C,EACJ+7C,GAAkD3e,EAAOlqC,KAH5C,uBAKT8M,EAAS+7C,GAAoD3e,IALpD,2CAAF,mDAAC,GAOhBpB,kBAAkB,WAAD,4BAAE,WAAOlkC,GAAP,SAAAwM,EAAA,sEACXtE,EAAS+7C,GAAkDjkD,IADhD,OAEjBikD,GAAoDjkD,GAFnC,2CAAF,mDAAC,MAMKuhC,EA3IW,SAAC1C,GACnC,IACE+lB,EAKE/lB,EALF+lB,sBACA9qC,EAIE+kB,EAJF/kB,gBACAoqB,EAGErF,EAHFqF,kBACAuI,EAEE5N,EAFF4N,kBAJF,EAMI5N,EADF5R,eAAkB+D,EALpB,EAKoBA,mBAAoB3X,EALxC,EAKwCA,OAGhChb,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjB0X,EAAmB/hB,OAAS,GAC9B+hB,EAAmBzmB,KAAI,SAACC,EAAMC,GAC5BumB,EAAmBvmB,GAAnB,2BAAiCD,GAAjC,IAAuC65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAqErEg3B,IAAMG,WAAU,WACdgjB,EAAsBvmD,EAAMC,KAC3B,IAEH,IAAMkvC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SjIhFP,CACL1J,KAAM+tB,GACNvqB,QiI8EmEqX,IAL1C,OAMzBurC,EAAsBnX,EAAUC,GANP,2CAAH,wDAaxB,OACE,cAAC,GAAD,aACEtxC,QApFY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,gBACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,SACP4uB,UAAW,cACX9G,IAAK,YACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEoP,UAAU3M,OAAS41B,EAAEjpB,UAAU3M,SAErD,CACE6G,MAAO,oBACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEhO,KAAKyQ,OAAS41B,EAAErmC,KAAKyQ,SAE3C,CACE6G,MAAO,SACP4uB,UAAW,SACX9G,IAAK,SACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE3R,OAAOoU,OAAS41B,EAAEhqC,OAAOoU,SAE/C,CACE6G,MAAO,SACP4uB,UAAW,eACX9G,IAAK,eACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEq4C,WAAW51C,OAAS41B,EAAEggB,WAAW51C,UA4CrD+hB,mBAAoBA,EACpBugB,kBAzCsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,KAAD,CACER,GAAI,uBACJW,QAAS,WACP3mB,EAAgBwrB,IAHpB,SAME,cAAC,GAAD,CAAa9mC,KAAK,UAAUuhC,KAAM,cAACwF,GAAA,EAAD,IAAkBjF,KAAK,aAE3D,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA2BRgK,kBAAmBA,EACnBe,mBAAoBA,EACpBzB,SAXa,SAACrB,GAChBka,EAAsBvmD,EAAMC,EAAOosC,IAWjCrxB,OAAQA,GACJwlB,OAoCKsI,gBAAU,CACvB3J,KAAM,sBADO2J,CAEZH,ICzJGgM,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAAwD,IAAtD1M,EAAqD,EAArDA,aAAcC,EAAuC,EAAvCA,WAAY0M,EAA2B,EAA3BA,SAAUn2B,EAAiB,EAAjBA,WAC3D,OACE,sBAAK7hB,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,eAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACkB,SAAfzpB,GACC,qBAAK7hB,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,KACLnB,MAAM,uBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,OACL+jC,UAAQ,MAId,qBAAKpnC,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,OACLnB,MAAM,yBACN+zB,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,YACN+zB,UAAWmI,GACXjnC,KAAK,kBAuCFsmD,GA/B4B,SAACjmB,GAC1C,IACErkB,EAQEqkB,EARFrkB,eACAgsB,EAOE3H,EAPF2H,aACAC,EAME5H,EANF4H,WACAlsB,EAKEskB,EALFtkB,oBACA84B,EAIExU,EAJFwU,aACAF,EAGEtU,EAHFsU,SACAG,EAEEzU,EAFFyU,SACAt2B,EACE6hB,EADF7hB,WAGF,OACE,cAAC,GAAD,CACEq1B,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,EACVt2B,WAAYA,OCtBhBgqB,GAAmBzF,mBAZD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdtC,OAAQ0hB,EAAM1hB,OACdgiB,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,YAEU,SAACriB,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7D+b,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChBq3B,GAAiDxlC,EAAMmO,OAGlC40B,EAnDkB,SAAC1C,GAC1C,IACEoI,EAMEpI,EANFoI,MACAoM,EAKExU,EALFwU,aACa74B,EAIXqkB,EAJFvB,UAAa9iB,eACHwC,EAGR6hB,EAHFvjB,OAAU0B,WACCwG,EAETqb,EAFFtU,QAAW/G,SACX0H,EACE2T,EADF3T,iBAWIqqB,EAAa,GASnB,OARA/xB,EAASjZ,KAAI,SAACC,EAAMC,GAClB8qC,EAAWjtC,KAAK,CACdlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKiF,UAKd,cAAC,GAAD,aACE+K,eAAgBA,EAChB64B,aAAcA,EACd5M,WArBe,SAAC95B,GACds6B,IACFnsC,QAAQC,IAAI,SACZmwB,EAAiBlO,EAAYrQ,KAmB7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,aAC7C6hB,OAsBKsI,gBAAU,CACvB3J,KAAM,+BACN4J,SAAUR,IAFGO,CAGZH,IC5DK8J,GAAWC,KAAXD,OAmEOiU,GAjEuB,SAAClmB,GACrC,IACEziC,EAOEyiC,EAPFziC,QACA81B,EAME2M,EANF3M,YACAqf,EAKE1S,EALF0S,kBACA9E,EAIE5N,EAJF4N,kBACAe,EAGE3O,EAHF2O,mBACAn0B,EAEEwlB,EAFFxlB,OACA0yB,EACElN,EADFkN,SAGIzI,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAGZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,sCAEF,sBAAKA,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,wCASF,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAMk3B,EACN91B,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAQ1B,cAAC,GAAD,QC8DA0D,GAAmBzF,mBA3BD,SAACvE,GAAD,MAAY,CAClC1hB,OAAQ0hB,EAAM1hB,OACdwW,qBAAsBkL,EAAMlL,yBAEH,SAAC5pB,GAAD,MAAe,CACxC88C,eAAgB,SAAC3mD,EAAMC,EAAOC,GAAd,OACd0mD,GAA2C5mD,EAAMC,EAAOC,IAC1DkuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAAS+8C,GAAsC,KADpC,uBAEX/8C,EAAS+8C,GAAoC,KAFlC,OAGjB/8C,EAAS+8C,GAA6B,QACtC/8C,EAASiH,GAAgC,IACzC81C,KALiB,2CAAF,kDAAC,GAOlBnrC,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAAS+8C,GAA6B,SAD7B,uBAET/8C,EAAS+8C,GAAoC3f,EAAOlqC,KAF3C,uBAGT8M,EAAS+8C,GAAsC3f,IAHtC,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKT81C,KALS,4CAAF,mDAAC,GAOhB/gB,kBAAkB,WAAD,4BAAE,WAAOz+B,GAAP,SAAA+G,EAAA,sEACXtE,EAAS+8C,GAAoCx/C,IADlC,OAEjBw/C,GAAsCx/C,GAFrB,2CAAF,mDAAC,MAMK87B,EAvHa,SAAC1C,GACrC,IACEmmB,EAKEnmB,EALFmmB,eACAlrC,EAIE+kB,EAJF/kB,gBACAoqB,EAGErF,EAHFqF,kBACAuI,EAEE5N,EAFF4N,kBAJF,EAMI5N,EADF/M,qBAAwBI,EAL1B,EAK0BA,YAAa7Y,EALvC,EAKuCA,OAG/Bhb,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjB4Y,EAAYjjB,OAAS,GACvBijB,EAAY3nB,KAAI,SAACC,EAAMC,GACrBynB,EAAYznB,GAAZ,2BAA0BD,GAA1B,IAAgC65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAgD9Dg3B,IAAMG,WAAU,WACdojB,EAAe3mD,EAAMC,KACpB,IAEH,IAAMkvC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAAS+8C,GAAoC5rC,IALhC,OAMzB2rC,EAAevX,EAAUC,GANA,2CAAH,wDAaxB,OACE,cAAC,GAAD,CACEtxC,QA/DY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,yBACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE9B,KAAKuE,OAAS41B,EAAEn6B,KAAKuE,SAE3C,CACE6G,MAAO,YACP4uB,UAAW,cACX9G,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEgC,YAAYS,OAAS41B,EAAEr2B,YAAYS,UA4CvDijB,YAAaA,EACbqf,kBAzCsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA2BRgK,kBAAmBA,EACnBe,mBAAoBA,EACpBzB,SAXa,SAACrB,GAChBsa,EAAe3mD,EAAMC,EAAOosC,IAW1BrxB,OAAQA,OAsCC8tB,gBAAU,CACvB3J,KAAM,4BADO2J,CAEZH,I,gCC/HGgM,IAFW2E,KAATD,KAEa,SAAC,GAAwB,IAAtBzE,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,aAuBJC,GAAgB,SAAC,GAMhB,IALL1M,EAKI,EALJA,aACAC,EAII,EAJJA,WACA0M,EAGI,EAHJA,SAIA,GADI,EAFJ2D,kBAEI,EADJxyB,kBAEgCod,mBAAS,KAAzC,oBACA,GADA,UAC8BA,mBAAS,KAAvC,oBAAOxC,EAAP,UAmBKA,EAAW+X,GAAA,EAAsB/N,GAAA,EAKtC,OACE,sBAAK/tC,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,eAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UAuBE,qBAAKtrC,MAAM,iBAAX,SACE,cAACwrC,GAAA,EAAD,CAAOj8B,KAAK,OAAOnB,MAAM,YAAY+zB,UAAWmI,GAAQjnC,KAAK,WAE/D,qBAAKrD,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,YACN+zB,UAAWmI,GACXjnC,KAAK,kBA2CF0mD,GAnCa,SAACrmB,GAC3B,IACErkB,EAUEqkB,EAVFrkB,eACAgsB,EASE3H,EATF2H,aACAC,EAQE5H,EARF4H,WACAlsB,EAOEskB,EAPFtkB,oBACA84B,EAMExU,EANFwU,aACAF,EAKEtU,EALFsU,SACAG,EAIEzU,EAJFyU,SACAwD,EAGEjY,EAHFiY,kBACA95B,EAEE6hB,EAFF7hB,WACAsH,EACEua,EADFva,kBAGF,OACE,cAAC,GAAD,CACE+tB,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVn2B,WAAYA,EACZs2B,SAAUA,EACVwD,kBAAmBA,EACnBxyB,kBAAmBA,OCtEvB0iB,GAAmBzF,mBAfD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdlJ,MAAOsoB,EAAMtoB,MACb4oB,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,YAEU,SAACriB,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7DmmC,wBAAyB,WACvBvR,MAEF7Y,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChBo3B,GAA+BvlC,EAAMmO,OAGhB40B,EA5DG,SAAC1C,GAC3B,IACEoI,EAMEpI,EANFoI,MACAoM,EAKExU,EALFwU,aACa74B,EAIXqkB,EAJFvB,UAAa9iB,eAHf,EAOIqkB,EAHFnqB,MAASsI,EAJX,EAIWA,WAAYsH,EAJvB,EAIuBA,kBACVd,EAETqb,EAFFtU,QAAW/G,SACX0H,EACE2T,EADF3T,iBAWIqqB,EAAa,GACnB/xB,EAASjZ,KAAI,SAACC,EAAMC,GAClB8qC,EAAWjtC,KAAK,CACdlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKiF,UAQhB,OACE,cAAC,GAAD,aACE+K,eAAgBA,EAChB64B,aAAcA,EACd5M,WAzBe,SAAC95B,GACds6B,IACFnsC,QAAQC,IAAI,SACZmwB,EAAiBlO,EAAYrQ,KAuB7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,YACjD85B,kBAXsB,SAACjgC,GACzB1O,GAAMD,SAASqG,aAAO,eAAD,kBAA6BsI,QAA7B,IAA6BA,IAAU,MAW1DyN,kBAAmBA,GACfua,OAyBKsI,gBAAU,CACvB3J,KAAM,eACN4J,SzFmB8B,SAACz6B,GAC/B,IAAMk6B,EAAS,GAIf,OAHKl6B,EAAOjC,OACVm8B,EAAOn8B,KAAO,0BAETm8B,IyF1BMM,CAGZH,ICvEK8J,GAAWC,KAAXD,OAqEOqU,GAnEQ,SAACtmB,GACtB,IACEziC,EAMEyiC,EANFziC,QACAqoB,EAKEoa,EALFpa,UACAgoB,EAIE5N,EAJF4N,kBACAe,EAGE3O,EAHF2O,mBACAn0B,EAEEwlB,EAFFxlB,OACA0yB,EACElN,EADFkN,SAGIzI,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAEZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,0CAAX,SACE,oBAAIA,MAAM,kBAAV,yBAEF,sBAAKA,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,KAAD,CAASiqD,UAAU,MAAMtvC,MAAM,YAA/B,SACE,cAAC,GAAD,CACE2qB,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,6BAUJ,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,KAAD,CACEgoC,UAAQ,EACR7C,KAAK,QACL8C,QAAShnC,EACTinC,WAAY5e,EAEZ6e,WAAYA,iBAQ1B,cAAC,GAAD,QCsHA0D,GAAmBzF,mBArCD,SAACvE,GAAD,MAAY,CAClCtoB,MAAOsoB,EAAMtoB,UAEY,SAACxM,GAAD,MAAe,CACxCm9C,YAAa,SAAChnD,EAAMC,EAAOC,GAAd,OACXwlC,GAAsC1lC,EAAMC,EAAOC,IACrDkuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAAS67B,GAAiC,KAD/B,uBAEX77B,EAAS67B,GAA+B,KAF7B,OAGjB77B,EAAS67B,GAA2B,QACpC77B,EAASiH,GAAgC,IACzC40B,KALiB,2CAAF,kDAAC,GAOlBjqB,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAAS67B,GAA2B,SAD3B,uBAET77B,EAAS67B,GAA+BuB,EAAOlqC,KAFtC,uBAGT8M,EAAS67B,GAAiCuB,IAHjC,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKT40B,KALS,4CAAF,mDAAC,GAOhBG,kBAAkB,WAAD,4BAAE,WAAO7hC,GAAP,SAAAmK,EAAA,sEACXtE,EAAS67B,GAA+B1hC,IAD7B,OAEjB0hC,GAAiC1hC,GAFhB,2CAAF,mDAAC,GAIlBijD,qBAAqB,WAAD,4BAAE,WAAOjjD,GAAP,SAAAmK,EAAA,sEACdtE,EAAS67B,GAA+B1hC,IAD1B,2CAAF,mDAAC,GAGrBkjD,sBAAsB,WAAD,4BAAE,WAAOjgB,GAAP,SAAA94B,EAAA,sEACftE,EAAS67B,GAA+BuB,EAAOlqC,KADhC,uBAEf8M,EAAS67B,GAAiCuB,IAF3B,2CAAF,mDAAC,GAItBkgB,gBAAgB,WAAD,4BAAE,WAAOlgB,GAAP,SAAA94B,EAAA,sEACTtE,EAAS67B,GAA+BuB,EAAOlqC,KADtC,uBAET8M,EAAS67B,GAAiCuB,IAFjC,2CAAF,mDAAC,MAMO/D,EA1KF,SAAC1C,GACtB,IACEwmB,EAQExmB,EARFwmB,YACAvrC,EAOE+kB,EAPF/kB,gBACAoqB,EAMErF,EANFqF,kBACAuI,EAKE5N,EALF4N,kBACA6Y,EAIEzmB,EAJFymB,qBACAC,EAGE1mB,EAHF0mB,sBACAC,EAEE3mB,EAFF2mB,gBAPF,EASI3mB,EADFnqB,MAAS+P,EARX,EAQWA,UAAWpL,EARtB,EAQsBA,OAGdhb,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAIjBmL,EAAUxV,OAAS,GACrBwV,EAAUla,KAAI,SAACC,EAAMC,GACnBga,EAAUha,GAAV,2BAAwBD,GAAxB,IAA8B65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAI5D,IAAM8mC,EAAoB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,KAAD,CAAS8kB,UAAU,UAAUtvC,MAAM,YAAnC,SACE,cAAC,GAAD,CACE2qB,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,aAIT,cAAC,KAAD,CAAMR,GAAI,eAAgBW,QAAS,kBAAM6kB,EAAqBhgB,EAAOlqC,KAArE,SACE,cAAC,GAAD,CAAaoD,KAAK,UAAUuhC,KAAM,cAAC0lB,GAAA,EAAD,IAAqBnlB,KAAK,aAE9D,cAAC,KAAD,CAAMR,GAAI,eAAgBW,QAAS,kBAAM8kB,EAAsBjgB,IAA/D,SACE,cAAC,GAAD,CAAa9mC,KAAK,UAAUuhC,KAAM,cAAC2lB,GAAA,EAAD,IAAqBplB,KAAK,aAE9D,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QAKNrmC,EAAU,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,YACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE9B,KAAKuE,OAAS41B,EAAEn6B,KAAKuE,QACzC81B,OAAQ,SAACnuB,EAAM0uB,GAAP,OACN,cAAC,KAAD,CACEnqC,MAAM,WACN2kC,GAAI,kBACJW,QAAS,kBAAM+kB,EAAgBlgB,IAHjC,SAKE,cAAC,KAAD,CACExD,MAAO,CAAEr2B,MAAO,UAAWwuC,WAAY,OAAQ5T,SAAU,IAD3D,SAGGzvB,QAKT,CACEd,MAAO,SACP4uB,UAAW,WACX9G,IAAK,WACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmV,SAAS1S,OAAS41B,EAAEljB,SAAS1S,SAEnD,CACE6G,MAAO,YACP4uB,UAAW,cACX9G,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEgC,YAAYS,OAAS41B,EAAEr2B,YAAYS,SAEzD,CACE01B,MAAO,SACP7uB,MAAO,OACP8nB,IAAK,SACLwB,MAAO,MACP2F,OAAQwM,IAIZ9P,IAAMG,WAAU,WACdyjB,EAAYhnD,EAAMC,KACjB,IAEH,IAAMkvC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAAS67B,GAA2B1qB,IALvB,OAMzBgsC,EAAY5X,EAAUC,GANG,2CAAH,wDAaxB,OACE,cAAC,GAAD,CACEtxC,QAASA,EACTqoB,UAAWA,EACX8sB,kBAAmBA,EACnB9E,kBAAmBA,EACnBe,mBAAoBA,EACpBzB,SAXa,SAACrB,GAChB2a,EAAYhnD,EAAMC,EAAOosC,IAWvBrxB,OAAQA,OAgDC8tB,gBAAU,CACvB3J,KAAM,aADO2J,CAEZH,IC5LGgM,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAQhB,IAPL1M,EAOI,EAPJA,aACAC,EAMI,EANJA,WACA0M,EAKI,EALJA,SACA+N,EAII,EAJJA,aACAE,EAGI,EAHJA,iBACAkB,EAEI,EAFJA,OACAtW,EACI,EADJA,WAEA,OACE,sBAAK7wC,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,eAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,sBAAKtrC,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,OACLnB,MAAM,gBACN82B,YAAY,SACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,WACLnB,MAAM,cACN+zB,UAAWmI,GACXjnC,KAAK,cAIX,sBAAKrD,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,WACLnB,MAAM,WACN82B,YAAY,aACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAAC,GAAD,CACE6qC,SAAU,SAAC0E,GAAD,OAAS0W,EAAiB1W,IACpC1vC,KAAMkmD,EACNx2C,KAAK,WACLnB,MAAM,uBAIZ,sBAAKpO,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,WACLnB,MAAM,WACN82B,YAAY,aACZ/C,UAAWmI,GACXjnC,KAAK,eAGT,qBAAKrD,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAMsnD,EACN53C,KAAK,OACLnB,MAAM,iBACNg5B,SAAU+f,EAAOrzC,QAAU,SAIjC,sBAAK9T,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,QACLnB,MAAM,UACN82B,YAAY,eACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAAC,GAAD,CAASH,KAAMgxC,EAAYthC,KAAK,SAASnB,MAAM,gBAGnD,sBAAKpO,MAAM,MAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,WACLnB,MAAM,YACN82B,YAAY,sBACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,MACLnB,MAAM,MACN82B,YAAY,MACZ/C,UAAWmI,GACXjnC,KAAK,cAIX,qBAAKrD,MAAM,MAAX,SACE,qBAAKA,MAAM,WAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,UACLnB,MAAM,SACN+zB,UAAWmI,GACXjnC,KAAK,wBA+CJmnD,GAtCgB,SAAC9mB,GAC9B,IACErkB,EAWEqkB,EAXFrkB,eACAgsB,EAUE3H,EAVF2H,aACAC,EASE5H,EATF4H,WACAlsB,EAQEskB,EARFtkB,oBACA84B,EAOExU,EAPFwU,aACAF,EAMEtU,EANFsU,SACAG,EAKEzU,EALFyU,SACA4N,EAIEriB,EAJFqiB,aACAE,EAGEviB,EAHFuiB,iBACAkB,EAEEzjB,EAFFyjB,OACAtW,EACEnN,EADFmN,WAGF,OACE,cAAC,GAAD,CACEqG,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCpH,MAAO,IACPyP,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,EACV4N,aAAcA,EACdE,iBAAkBA,EAClBkB,OAAQA,EACRtW,WAAYA,OChDhBhF,GAAmBzF,mBAbD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdtC,OAAQ0hB,EAAM1hB,OACdE,UAAWwhB,EAAMxhB,UACjB8hB,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,YAEU,SAACriB,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7D+b,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChB+3C,GAAuClmD,EAAMmO,OAGxB40B,EA/GM,SAAC1C,GAC9B,IACEoI,EAOEpI,EAPFoI,MACAoM,EAMExU,EANFwU,aACa74B,EAKXqkB,EALFvB,UAAa9iB,eACH0F,EAIR2e,EAJFvjB,OAAU4E,WAJZ,EAQI2e,EAHFtU,QAAW/G,EALb,EAKaA,SAAUF,EALvB,EAKuBA,aALvB,EAQIub,EAFFrjB,UAAaiB,EANf,EAMeA,qBAAsBO,EANrC,EAMqCA,WACnCkO,EACE2T,EADF3T,iBAEF,EAA4BuW,IAAMC,SAAS,IAA3C,oBAAO4gB,EAAP,KAAewB,EAAf,KAUMvO,EAAa,GACnB/xB,EAASjZ,KAAI,SAACC,EAAMC,GAClB8qC,EAAWjtC,KAAK,CACdlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKiF,UAIhB,IAAMnF,EAAiB,GACvBgZ,EAAa/Y,KAAI,SAACC,EAAMC,GACtBH,EAAehC,KAAK,CAClBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB,IAAM0iC,EAAe,GACrBltB,EAAW3V,KAAI,SAACC,EAAMC,GACpB2iC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYqP,GACdnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB+2B,IAAMG,WAAU,WAEd,GADAkiB,EAAU,IACS,SAAf9mC,GAAyBP,EAAqBZ,YAAa,CAC7D,IAAMpa,EACJgb,EAAqBZ,YACrB,IACAY,EAAqBC,cACvB0kC,EAAiB3/C,MAElB,CAACub,EAAYP,EAAqBZ,cAErC4lB,IAAMG,WAAU,WACd,OAAO,WACL8iB,GAA+B,WAInC,IAAMtD,EAAgB,uCAAG,WAAO3/C,GAAP,qBAAA+K,EAAA,yDACvBs3C,EAAU,IADa,UAGjBriD,EAHiB,wBAIbusB,EAAgBvsB,EAAWuN,MAAM,KAJpB,SAKIjR,EAAOyD,YAAY,EAAG,IAAKwsB,EAAc,IAL7C,gBAKXhzB,EALW,EAKXA,KACF6mD,EAAkBl3C,GAAc3P,EAAK+N,SAAS/N,MACpD8oD,EAAUjC,GAPS,wBASnB15C,GAAMD,SAASqG,aAAO,mBAAD,OAA6B,KAClDu1C,EAAU,IAVS,0DAarBA,EAAU,IACVhpD,QAAQC,IAAI,WAAZ,MAdqB,0DAAH,sDAkBtB,OACE,cAAC,GAAD,aACEyf,eAAgBA,EAChB64B,aAAcA,EACd5M,WA1Ee,SAAC95B,GACds6B,IACFnsC,QAAQC,IAAI,SACZmwB,EAAiBlO,EAAYrQ,KAwE7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,YACjDkkC,aAAc52C,EACd82C,iBAAkBA,EAClBkB,OAAQA,EACRtW,WAAYoB,GACRvO,OAuBKsI,gBAAU,CACvB3J,KAAM,mBACN4J,SAAUR,IAFGO,CAGZH,IC1HK8J,GAAWC,KAAXD,OAuFO8U,GArFW,SAAC/mB,GACzB,IACEziC,EAUEyiC,EAVFziC,QACA0gB,EASE+hB,EATF/hB,cACAy0B,EAQE1S,EARF0S,kBACA9E,EAOE5N,EAPF4N,kBACAe,EAME3O,EANF2O,mBACAn0B,EAKEwlB,EALFxlB,OACA0yB,EAIElN,EAJFkN,SACAC,EAGEnN,EAHFmN,WACAhgC,EAEE6yB,EAFF7yB,UACAs2B,EACEzD,EADFyD,UAGIgB,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAGZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,6BAEF,qBAAKA,MAAM,yBAAX,SACE,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,gCASF,cAAC,KAAD,CAAS6L,YAAY,OAArB,yBACA,sBAAKhxC,MAAM,uBAAX,WACI6Q,GACA,qBAAK7Q,MAAM,WAAX,SACE,cAAC,GAAD,CACEH,KAAI,OAAEgxC,QAAF,IAAEA,IAAc,GACpBthC,KAAK,SACLnB,MAAM,aAIZ,sBAAKpO,MAAM,gBAAX,UACE,qBAAKA,MAAM,SACX,cAAC,GAAD,CACEklC,YAAY,gBACZ0L,SAAUA,EACVqF,aAAW,UAIhB9O,EACC,qBAAKnnC,MAAM,mDAAX,SACE,cAAC,KAAD,MAGF,qBAAKA,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAM8hB,EACN1gB,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAS5B,cAAC,GAAD,QC5EAqH,GAAWC,aAAkB,gBAsN7B5D,GAAmBzF,mBAtCD,SAACvE,GAAD,MAAY,CAClCxhB,UAAWwhB,EAAMxhB,UACjBF,OAAQ0hB,EAAM1hB,OACduqC,oBAAqBlb,GAAS3N,EAAO,UACrCuM,KAAMvM,EAAM9F,KAAK9pB,eAEQ,SAAClF,GAAD,MAAe,CACxC49C,gBAAgB,WAAD,4BAAE,WAAOznD,EAAMC,EAAOC,EAASyB,GAA7B,eAAAwM,EAAA,6DACTiV,EAAczhB,EAAWA,EAASgP,MAAM,KAAO,CAAC,IADvC,SAET26B,GACJtrC,EACAC,EACAC,EACAkjB,EAAY,IANC,2CAAF,yDAAC,GAShB7c,cAAe,kBAAMk/B,GAAyC,EAAG,MACjEiiB,gBAAiB,kBAAM3lC,MACvBqsB,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAASyhC,GAAwC,KADtC,uBAEXzhC,EAASyhC,GAAsC,KAFpC,OAGjBzhC,EAASyhC,GAA8B,QACvCzhC,EAASiH,GAAgC,IACzCw6B,KALiB,2CAAF,kDAAC,GAOlB7vB,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAASyhC,GAA8B,SAD9B,uBAETzhC,EAASyhC,GAAsCrE,EAAOlqC,KAF7C,uBAGT8M,EAASyhC,GAAwCrE,IAHxC,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKTw6B,KALS,4CAAF,mDAAC,GAOhBzF,kBAAkB,WAAD,4BAAE,WAAO3kC,GAAP,SAAAiN,EAAA,sEACXtE,EAASyhC,GAAsCpqC,IADpC,OAEjBoqC,GAAwCpqC,GAFvB,2CAAF,mDAAC,MAMKgiC,EApNC,SAAC1C,GACzB,MAWIA,EAVF0K,KAAQl7B,EADV,EACUA,MAAOrO,EADjB,EACiBA,SACf8lD,EASEjnB,EATFinB,gBACAlhD,EAQEi6B,EARFj6B,cACAmhD,EAOElnB,EAPFknB,gBACAjsC,EAME+kB,EANF/kB,gBACAoqB,EAKErF,EALFqF,kBACAuI,EAIE5N,EAJF4N,kBACAoZ,EAGEhnB,EAHFgnB,oBARF,EAWIhnB,EAFFrjB,UAAasB,EATf,EASeA,cAAezD,EAT9B,EAS8BA,OAClB6G,GAVZ,EASsC3hB,QAElCsgC,EADFvjB,OAAU4E,YAEZ,EAAkCuhB,IAAMC,UAAS,GAAjD,oBAAO11B,EAAP,KAAkBo4B,EAAlB,KACA,EAAkC3C,IAAMC,UAAS,GAAjD,oBAAOY,EAAP,KAAkBoK,EAAlB,KAEQruC,EAA2Bgb,EAA3Bhb,KAAMib,EAAqBD,EAArBC,UAAWhb,EAAU+a,EAAV/a,MAEnB8uC,EAAe,GACrBltB,EAAW3V,KAAI,SAACC,EAAMC,GACpB2iC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYqP,GACdnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIZoS,EAAc7N,OAAS,GACzB6N,EAAcvS,KAAI,SAACC,EAAMC,GACvBqS,EAAcrS,GAAd,2BAA4BD,GAA5B,IAAkC65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAyFhEg3B,IAAMG,WAAU,WACd8K,GAAa,GACb9nC,IACAmhD,IA9BuB,WACvB,IAAMzlD,EAAS+N,EAAM,GAAGsB,QAClB20B,EAAgBr4B,GAA0B3L,GAE5CN,GACEskC,EACFwhB,EAAgB,EAAG,GAAI,GAAI9lD,GAAU8M,MAAK,WACxC4/B,GAAa,MAQjBoZ,EAAgB,EAAG,GAAI,GAAI,IAAIh5C,MAAK,WAClC4/B,GAAa,MAKftI,EADEE,IAGW,GAQfC,KACC,IAEH,IAAMiJ,EAAkB,uCAAG,WAAOC,GAAP,mBAAAjhC,EAAA,6DACnBlM,EAAS+N,EAAM,GAAGsB,QAClB20B,EAAgBr4B,GAA0B3L,IAE1C+Y,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQA,EACf+a,EAAOC,UAAYA,EAPM,SAQnBnR,GAAMD,SAASyhC,GAAkCtwB,IAR9B,OAUrBirB,EACFwhB,EAAgBrY,EAAUnvC,EAAO,GAAI0B,GAErC8lD,EAAgBrY,EAAUnvC,EAAO,IAbV,2CAAH,sDAgCxB,OACE,cAAC,GAAD,aACElC,QA9HY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,gBACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE9B,KAAKuE,OAAS41B,EAAEn6B,KAAKuE,SAE3C,CACE6G,MAAO,SACP4uB,UAAW,cACX9G,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEoQ,YAAY3N,OAAS41B,EAAEjoB,YAAY3N,SAEzD,CACE6G,MAAO,UACP4uB,UAAW,QACX9G,IAAK,QACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEuP,MAAM9M,OAAS41B,EAAE9oB,MAAM9M,SAE7C,CACE6G,MAAO,cACP4uB,UAAU,QACV9G,IAAK,QACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEuP,MAAM9M,OAAS41B,EAAE9oB,MAAM9M,UA6F3CoK,OAAQA,EACRrN,UAAWA,EACX8Q,cAAeA,EACfy0B,kBA5FsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA8ERgK,kBAAmBA,EACnBe,mBAAoBA,EACpBxB,WAAYoB,EACZrB,SAzBa,SAACrB,GAChB,IAAMpqC,EAAS+N,EAAM,GAAGsB,QAClB20B,EAAgBr4B,GAA0B3L,GAI5CwlD,EAAgBznD,EAAMC,EAAOosC,EAF7B1qC,GACEskC,EACgCtkC,EAKF6lD,IAelCvjB,UAAWA,GACPzD,OAgDKsI,gBAAU,CACvB3J,KAAM,gBADO2J,CAEZH,ICrOGgM,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAA4C,IAA1C1M,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAY0M,EAAe,EAAfA,SACjD,OACE,sBAAKh4C,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,eAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,qBAAKtrC,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,OACLnB,MAAM,iBACN82B,YAAY,IACZ/C,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,YACN+zB,UAAWmI,GACXjnC,KAAK,kBAqCFwnD,GA7Ba,SAACnnB,GAC3B,IACErkB,EAOEqkB,EAPFrkB,eACAgsB,EAME3H,EANF2H,aACAC,EAKE5H,EALF4H,WACAlsB,EAIEskB,EAJFtkB,oBACA84B,EAGExU,EAHFwU,aACAF,EAEEtU,EAFFsU,SACAG,EACEzU,EADFyU,SAGF,OACE,cAAC,GAAD,CACEjB,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,OCXdtM,GAAmBzF,mBAXD,SAACvE,GAAD,MAAY,CAClCta,MAAOsa,EAAMta,MACb4a,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,YAEU,SAACriB,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7D+b,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChByzC,GAAgC5hD,EAAMmO,OAGjB40B,EAjDG,SAAC1C,GAC3B,IACEoI,EAMEpI,EANFoI,MACAoM,EAKExU,EALFwU,aACa74B,EAIXqkB,EAJFvB,UAAa9iB,eACJwC,EAGP6hB,EAHFnc,MAAS1F,WACEwG,EAETqb,EAFFtU,QAAW/G,SACX0H,EACE2T,EADF3T,iBAUIqqB,EAAa,GASnB,OARA/xB,EAASjZ,KAAI,SAACC,EAAMC,GAClB8qC,EAAWjtC,KAAK,CACdlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKiF,UAKd,cAAC,GAAD,aACE+K,eAAgBA,EAChB64B,aAAcA,EACd5M,WApBe,SAAC95B,GACds6B,GACF/b,EAAiBlO,EAAYrQ,IAmB7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,aAC7C6hB,OAqBKsI,gBAAU,CACvB3J,KAAM,gBACN4J,SjG+C+B,SAACz6B,GAChC,IAAMk6B,EAAS,GAIf,OAHKl6B,EAAOjC,OACVm8B,EAAOn8B,KAAO,+BAETm8B,IiGtDMM,CAGZH,IC1DK8J,GAAWC,KAAXD,OAmEOmV,GAjEQ,SAACpnB,GACtB,IACEziC,EAOEyiC,EAPFziC,QACAi3B,EAMEwL,EANFxL,UACAke,EAKE1S,EALF0S,kBACA9E,EAIE5N,EAJF4N,kBACAe,EAGE3O,EAHF2O,mBACAn0B,EAEEwlB,EAFFxlB,OACA0yB,EACElN,EADFkN,SAGIzI,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAGZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,8BAEF,sBAAKA,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,gCASF,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAMq4B,EACNj3B,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAQ1B,cAAC,GAAD,QCoEA0D,GAAmBzF,mBA1BD,SAACvE,GAAD,MAAY,CAClCta,MAAOsa,EAAMta,UAEY,SAACxa,GAAD,MAAe,CACxCxC,aAAc,SAACrH,EAAMC,EAAOC,GAAd,OACZ6hD,GAAuC/hD,EAAMC,EAAOC,IACtDkuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAASk4C,GAAkC,KADhC,uBAEXl4C,EAASk4C,GAAgC,KAF9B,OAGjBl4C,EAASk4C,GAA2B,QACpCl4C,EAASiH,GAAgC,IACzCixC,KALiB,2CAAF,kDAAC,GAOlBtmC,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAASk4C,GAA2B,SAD3B,uBAETl4C,EAASk4C,GAAgC9a,EAAOlqC,KAFvC,uBAGT8M,EAASk4C,GAAkC9a,IAHlC,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKTixC,KALS,4CAAF,mDAAC,GAOhBlc,kBAAkB,WAAD,4BAAE,WAAOrR,GAAP,SAAArmB,EAAA,sEACXtE,EAASk4C,GAAgCvtB,IAD9B,OAEjButB,GAAkCvtB,GAFjB,2CAAF,mDAAC,MAMK0O,EA7HF,SAAC1C,GACtB,IACEn5B,EAKEm5B,EALFn5B,aACAoU,EAIE+kB,EAJF/kB,gBACAoqB,EAGErF,EAHFqF,kBACAuI,EAEE5N,EAFF4N,kBAJF,EAMI5N,EADFnc,MAAS2Q,EALX,EAKWA,UAAWha,EALtB,EAKsBA,OAGdhb,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjB+Z,EAAUpkB,OAAS,GACrBokB,EAAU9oB,KAAI,SAACC,EAAMC,GACnB4oB,EAAU5oB,GAAV,2BAAwBD,GAAxB,IAA8B65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAuD5Dg3B,IAAMG,WAAU,WACdl8B,EAAa,EAAG,MACf,IAEH,IAAM8nC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAASk4C,GAA4B/mC,IALxB,OAMzB3T,EAAa+nC,EAAUC,GANE,2CAAH,wDAaxB,OACE,cAAC,GAAD,CACEtxC,QAtEY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,iBACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE9B,KAAKuE,OAAS41B,EAAEn6B,KAAKuE,SAE3C,CACE6G,MAAO,YACP4uB,UAAW,cACX9G,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEgC,YAAYS,OAAS41B,EAAEr2B,YAAYS,SAEzD,CACE6G,MAAO,SACP4uB,UAAW,eACX9G,IAAK,eACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEuqB,aAAa9nB,OAAS41B,EAAE9N,aAAa9nB,UA4CzDokB,UAAWA,EACXke,kBAzCsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA2BRgK,kBAAmBA,EACnBe,mBAAoBA,EACpBn0B,OAAQA,EACR0yB,SAZa,SAACrB,GAChBhlC,EAAarH,EAAMC,EAAOosC,SAgDfvD,gBAAU,CACvB3J,KAAM,aADO2J,CAEZH,IC1IGgM,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAA4C,IAA1C1M,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAY0M,EAAe,EAAfA,SACjD,OACE,sBAAKh4C,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,cAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,SACE,sBAAKtrC,MAAM,YAAX,UACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,OACLnB,MAAM,QACN+zB,UAAWmI,GACXjnC,KAAK,OACL6hC,YAAY,mBAEd,cAACsG,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,YACN+zB,UAAWmI,GACXjnC,KAAK,OACL6hC,YAAY,4BAqCT6lB,GA7BoB,SAACrnB,GAClC,IACErkB,EAOEqkB,EAPFrkB,eACAgsB,EAME3H,EANF2H,aACAC,EAKE5H,EALF4H,WACAlsB,EAIEskB,EAJFtkB,oBACA84B,EAGExU,EAHFwU,aACAF,EAEEtU,EAFFsU,SACAG,EACEzU,EADFyU,SAGF,OACE,cAAC,GAAD,CACEjB,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVG,SAAUA,OCVdtM,GAAmBzF,mBAZD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdtC,OAAQ0hB,EAAM1hB,OACdgiB,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,YAEU,SAACriB,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7D+b,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChBw5C,GAA8C3nD,EAAMmO,OAG/B40B,EAjDU,SAAC1C,GAClC,IACEoI,EAMEpI,EANFoI,MACAoM,EAKExU,EALFwU,aACa74B,EAIXqkB,EAJFvB,UAAa9iB,eACHwC,EAGR6hB,EAHFvjB,OAAU0B,WACCwG,EAETqb,EAFFtU,QAAW/G,SACX0H,EACE2T,EADF3T,iBASIqqB,EAAa,GASnB,OARA/xB,EAASjZ,KAAI,SAACC,EAAMC,GAClB8qC,EAAWjtC,KAAK,CACdlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKiF,UAKd,cAAC,GAAD,aACE+K,eAAgBA,EAChB64B,aAAcA,EACd5M,WAnBe,SAAC95B,GACds6B,GACF/b,EAAiBlO,EAAYrQ,IAkB7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,aAC7C6hB,OAsBKsI,gBAAU,CACvB3J,KAAM,mBACN4J,SrGuBkC,SAACz6B,GACnC,IAAMk6B,EAAS,GAIf,OAHKl6B,EAAOjC,OACVm8B,EAAOn8B,KAAO,sBAETm8B,IqG9BMM,CAGZH,IC1DK8J,GAAWC,KAAXD,OAmEOsV,GAjEe,SAACvnB,GAC7B,IACEziC,EAOEyiC,EAPFziC,QACAq4B,EAMEoK,EANFpK,iBACA8c,EAKE1S,EALF0S,kBACA9E,EAIE5N,EAJF4N,kBACAe,EAGE3O,EAHF2O,mBACAn0B,EAEEwlB,EAFFxlB,OACA0yB,EACElN,EADFkN,SAGIzI,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAGZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,kCAEF,sBAAKA,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,oCASF,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAMy5B,EACNr4B,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAQ1B,cAAC,GAAD,QCwDA0D,GAAmBzF,mBA5BD,SAACvE,GAAD,MAAY,CAClC5I,aAAc4I,EAAM5I,iBAEK,SAAClsB,GAAD,MAAe,CACxCm+C,oBAAqB,SAAChoD,EAAMC,EAAOC,GAAd,OACnB4nD,GAAqD9nD,EAAMC,EAAOC,IACpEkuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAASi+C,GAAgD,KAD9C,uBAEXj+C,EAASi+C,GAA8C,KAF5C,OAGjBj+C,EAASi+C,GAAkC,QAC3Cj+C,EAASiH,GAAgC,IACzCg3C,KALiB,2CAAF,kDAAC,GAOlBrsC,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAASi+C,GAAkC,SADlC,uBAETj+C,EAASi+C,GAA8C7gB,EAAOlqC,KAFrD,uBAGT8M,EAASi+C,GAAgD7gB,IAHhD,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKTg3C,KALS,4CAAF,mDAAC,GAOhBjiB,kBAAkB,WAAD,4BAAE,WAAO1P,GAAP,SAAAhoB,EAAA,sEACXtE,EACJi+C,GAA8C3xB,IAF/B,OAIjB2xB,GAAgD3xB,GAJ/B,2CAAF,mDAAC,MAQK+M,EAjHK,SAAC1C,GAC7B,IACEwnB,EAKExnB,EALFwnB,oBACAvsC,EAIE+kB,EAJF/kB,gBACAoqB,EAGErF,EAHFqF,kBACAuI,EAEE5N,EAFF4N,kBAJF,EAMI5N,EADFzK,aAAgBK,EALlB,EAKkBA,iBAAkBpb,EALpC,EAKoCA,OAAQ9a,EAL5C,EAK4CA,QAGpCF,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjBmb,EAAiBxlB,OAAS,GAC5BwlB,EAAiBlqB,KAAI,SAACC,EAAMC,GAC1BgqB,EAAiBhqB,GAAjB,2BAA+BD,GAA/B,IAAqC65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAyCnEg3B,IAAMG,WAAU,WACdykB,EAAoBhoD,EAAMC,EAAOC,KAChC,IAEH,IAAMivC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAASi+C,GAA0C9sC,IALtC,OAMzBgtC,EAAoB5Y,EAAUC,GANL,2CAAH,wDAaxB,OACE,cAAC,GAAD,aACEtxC,QAxDY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,aACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEgC,YAAYS,OAAS41B,EAAEr2B,YAAYS,UA4CvDwlB,iBAAkBA,EAClB8c,kBAzCsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA2BRgK,kBAAmBA,EACnBe,mBAAoBA,EACpBzB,SAXa,SAACrB,GAChB2b,EAAoBhoD,EAAMC,EAAOosC,IAW/BrxB,OAAQA,GACJwlB,OAsCKsI,gBAAU,CACvB3J,KAAM,gBADO2J,CAEZH,I,WC9HGgM,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAA4C,IAA1C1M,EAAyC,EAAzCA,aAAcC,EAA2B,EAA3BA,WAAY0M,EAAe,EAAfA,SACjD,OACE,sBAAKh4C,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,cAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,SACE,qBAAKtrC,MAAM,MAAX,SACE,qBAAKA,MAAM,iBAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,OACLnB,MAAM,aACN+zB,UAAWmI,GACXjnC,KAAK,mBA4CJ8nD,GAnCmB,SAACznB,GACjC,IACErkB,EAUEqkB,EAVFrkB,eACAgsB,EASE3H,EATF2H,aACAC,EAQE5H,EARF4H,WACAlsB,EAOEskB,EAPFtkB,oBACA84B,EAMExU,EANFwU,aACAF,EAKEtU,EALFsU,SACAG,EAIEzU,EAJFyU,SACAwD,EAGEjY,EAHFiY,kBACA95B,EAEE6hB,EAFF7hB,WACAsH,EACEua,EADFva,kBAGF,OACE,cAAC,GAAD,CACE+tB,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVn2B,WAAYA,EACZs2B,SAAUA,EACVwD,kBAAmBA,EACnBxyB,kBAAmBA,OCDvB0iB,GAAmBzF,mBAZD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdlJ,MAAOsoB,EAAMtoB,MACb4oB,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,YAEU,SAACriB,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7D+b,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChB45C,GAAyC/nD,EAAMmO,OAG1B40B,EAzDQ,SAAC1C,GAChC,IACEoI,EAMEpI,EANFoI,MACAoM,EAKExU,EALFwU,aACa74B,EAIXqkB,EAJFvB,UAAa9iB,eAHf,EAOIqkB,EAHFnqB,MAASsI,EAJX,EAIWA,WAAYsH,EAJvB,EAIuBA,kBACVd,EAETqb,EAFFtU,QAAW/G,SACX0H,EACE2T,EADF3T,iBAWIqqB,EAAa,GACnB/xB,EAASjZ,KAAI,SAACC,EAAMC,GAClB8qC,EAAWjtC,KAAK,CACdlN,GAAG,QAAD,OAAUqP,GACZnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKiF,UAQhB,OACE,cAAC,GAAD,aACE+K,eAAgBA,EAChB64B,aAAcA,EACd5M,WAzBe,SAAC95B,GACds6B,IACFnsC,QAAQC,IAAI,SACZmwB,EAAiBlO,EAAYrQ,KAuB7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,YACjD85B,kBAXsB,SAACjgC,GACzB1O,GAAMD,SAASqG,aAAO,eAAD,kBAA6BsI,QAA7B,IAA6BA,IAAU,MAW1DyN,kBAAmBA,GACfua,OAsBKsI,gBAAU,CACvB3J,KAAM,oBACN4J,SAAUN,IAFGK,CAGZH,ICjEK8J,GAAWC,KAAXD,OA+EO0V,GA7Ea,SAAC3nB,GAC3B,IACEziC,EAOEyiC,EAPFziC,QACAqoB,EAMEoa,EANFpa,UACA8sB,EAKE1S,EALF0S,kBACA9E,EAIE5N,EAJF4N,kBACAe,EAGE3O,EAHF2O,mBACAn0B,EAEEwlB,EAFFxlB,OACA0yB,EACElN,EADFkN,SAGIzI,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAEZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,0CAAX,SACE,oBAAIA,MAAM,kBAAV,+BAEF,sBAAKA,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,WAAX,UACE,cAAC,KAAD,CAAM2kC,GAAI,QAAV,SACE,cAAC,GAAD,CACEthC,KAAK,UACLuhC,KAAM,cAAC2Y,GAAA,EAAD,IACNpY,KAAK,SACLmC,QAAM,EAJR,uBASF,qBAAKtnC,MAAM,SACX,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,+BAUJ,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAMypB,EACNroB,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAQ1B,cAAC,GAAD,QCkEA0D,GAAmBzF,mBA/BD,SAACvE,GAAD,MAAY,CAClCtoB,MAAOsoB,EAAMtoB,MACbkU,WAAYoU,EAAMpU,eAEO,SAAC1gB,GAAD,MAAe,CACxCu+C,kBAAmB,SAACpoD,EAAMC,EAAOC,GAAd,OACjBgoD,GAA+CloD,EAAMC,EAAOC,IAC9DkuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAASq+C,GAA0C,KADxC,uBAEXr+C,EAASq+C,GAAwC,KAFtC,OAGjBr+C,EAASq+C,GAA+B,QACxCr+C,EAASiH,GAAgC,IACzCo3C,KALiB,2CAAF,kDAAC,GAOlBzsC,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAASq+C,GAA+B,SAD/B,uBAETr+C,EAASq+C,GAAwCjhB,EAAOlqC,KAF/C,uBAGT8M,EAASq+C,GAA0CjhB,IAH1C,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKTo3C,KALS,4CAAF,mDAAC,GAOhBriB,kBAAkB,WAAD,4BAAE,WAAOxhC,GAAP,SAAA8J,EAAA,sEACXtE,EAASq+C,GAAwC7jD,IADtC,OAEjB6jD,GAA0C7jD,GAFzB,2CAAF,mDAAC,GAIlBgkD,wBAAwB,WAAD,4BAAE,WAAOphB,GAAP,SAAA94B,EAAA,sEACjBtE,EAASq+C,GAAwCjhB,EAAOlqC,KADvC,uBAEjB8M,EAASq+C,GAA0CjhB,IAFlC,2CAAF,mDAAC,MAMD/D,EApIG,SAAC1C,GAC3B,IACE4nB,EAME5nB,EANF4nB,kBACA3sC,EAKE+kB,EALF/kB,gBACAoqB,EAIErF,EAJFqF,kBACAuI,EAGE5N,EAHF4N,kBACAia,EAEE7nB,EAFF6nB,wBALF,EAOI7nB,EADFjW,WAAcqB,EANhB,EAMgBA,eAAgB5Q,EANhC,EAMgCA,OAGxBhb,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjB2Q,EAAehb,OAAS,GAC1Bgb,EAAe1f,KAAI,SAACC,EAAMC,GACxBwf,EAAexf,GAAf,2BAA6BD,GAA7B,IAAmC65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAwDjEg3B,IAAMG,WAAU,WACd6kB,EAAkBpoD,EAAMC,KACvB,IAEH,IAAMkvC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAASq+C,GAAoCltC,IALhC,OAMzBotC,EAAkBhZ,EAAUC,GANH,2CAAH,wDAaxB,OACE,cAAC,GAAD,CACEtxC,QAvEY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,aACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE9B,KAAKuE,OAAS41B,EAAEn6B,KAAKuE,SAE3C,CACE6G,MAAO,SACP4uB,UAAW,aACX9G,IAAK,aACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEq4C,WAAW51C,OAAS41B,EAAEggB,WAAW51C,UAoDrDwV,UAAWwF,EACXsnB,kBAjDsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,KAAD,CAAMR,GAAI,sBAAV,SACE,cAAC,GAAD,CACEW,QAAS,kBAAMimB,EAAwBphB,IACvC9mC,KAAK,QACLuhC,KAAM,cAAC4mB,GAAA,EAAD,IACNrmB,KAAK,aAGT,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA2BRgK,kBAAmBA,EACnBe,mBAAoBA,EACpBzB,SAXa,SAACrB,GAChB+b,EAAkBpoD,EAAMC,EAAOosC,IAW7BrxB,OAAQA,OA0CC8tB,gBAAU,CACvB3J,KAAM,mBADO2J,CAEZH,ICrJGgM,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAMhB,IALL1M,EAKI,EALJA,aACAC,EAII,EAJJA,WACA0M,EAGI,EAHJA,SACAyT,EAEI,EAFJA,iBACAC,EACI,EADJA,YAEA,OACE,sBAAK1rD,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,cAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,SACE,sBAAKtrC,MAAM,WAAX,UACE,qBAAKA,MAAM,YAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAI,OAAE4rD,QAAF,IAAEA,IAAoB,GAC1Bl8C,KAAK,eACLnB,MAAM,eAGV,qBAAKpO,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,YACLnB,MAAM,aACN+zB,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,YAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAI,OAAE6rD,QAAF,IAAEA,IAAe,GACrBn8C,KAAK,UACLnB,MAAM,iBAGV,qBAAKpO,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,YACN+zB,UAAWmI,GACXjnC,KAAK,oBAgDJsoD,GAvCkB,SAACjoB,GAChC,IACErkB,EAYEqkB,EAZFrkB,eACAgsB,EAWE3H,EAXF2H,aACAC,EAUE5H,EAVF4H,WACAlsB,EASEskB,EATFtkB,oBACA84B,EAQExU,EARFwU,aACAF,EAOEtU,EAPFsU,SACAG,EAMEzU,EANFyU,SACAwD,EAKEjY,EALFiY,kBACA95B,EAIE6hB,EAJF7hB,WACAsH,EAGEua,EAHFva,kBACAsiC,EAEE/nB,EAFF+nB,iBACAC,EACEhoB,EADFgoB,YAGF,OACE,cAAC,GAAD,CACExU,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVn2B,WAAYA,EACZs2B,SAAUA,EACVwD,kBAAmBA,EACnBxyB,kBAAmBA,EACnBsiC,iBAAkBA,EAClBC,YAAaA,OCZjB7f,GAAmBzF,mBAXD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdlJ,MAAOsoB,EAAMtoB,MACb4oB,UAAWN,EAAMM,cAEQ,SAACp1B,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7D+b,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChBo6C,GAA0CvoD,EAAMmO,OAG3B40B,EAhFQ,SAAC1C,GAChC,IACEoI,EAKEpI,EALFoI,MACAoM,EAIExU,EAJFwU,aACa74B,EAGXqkB,EAHFvB,UAAa9iB,eAHf,EAMIqkB,EAFFnqB,MAASsI,EAJX,EAIWA,WAAYsH,EAJvB,EAIuBA,kBACrB4G,EACE2T,EADF3T,iBAEF,EAAwCuW,IAAMC,SAAS,IAAvD,oBAAOtN,EAAP,KAAqB4yB,EAArB,KACA,EAA8BvlB,IAAMC,SAAS,IAA7C,oBAAOlM,EAAP,KAAgByxB,EAAhB,KAUMC,EAAU,uCAAG,wCAAA16C,EAAA,sEACMzO,EAAOgI,gBAAgB,EAAG,IAAK,IADrC,uBACT/K,EADS,EACTA,KADS,SAES+C,EAAOuG,eAAe,EAAG,IAAK,IAFvC,OAEX6iD,EAFW,OAGX1yB,EAAmBz5B,EAAK+N,SAAS/N,KACjCosD,EAAcD,EAAYnsD,KAAK+N,SAAS/N,KAExCqsD,EAAqB,GAC3B5yB,EAAiBlqB,KAAI,SAACC,EAAMC,GAC1B48C,EAAmB/+C,KAAK,CACtBlN,GAAG,iBAAD,OAAmBqP,GACrBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAGV48C,EAAgB,GACtBF,EAAY78C,KAAI,SAACC,EAAMC,GACrB68C,EAAch/C,KAAK,CACjBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAGhBs8C,EAAgBK,GAChBJ,EAAWK,GAvBM,4CAAH,qDA0BhB7lB,IAAMG,WAAU,WACdslB,MACC,IAMH,OACE,cAAC,GAAD,aACE1sC,eAAgBA,EAChB64B,aAAcA,EACd5M,WA9Ce,SAAC95B,GACds6B,IACFnsC,QAAQC,IAAI,SACZmwB,EAAiBlO,EAAYrQ,KA4C7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,YACjD85B,kBAXsB,SAACjgC,GACzB1O,GAAMD,SAASqG,aAAO,eAAD,kBAA6BsI,QAA7B,IAA6BA,IAAU,MAW1DyN,kBAAmBA,EACnBsiC,iBAAkBxyB,EAClByyB,YAAarxB,GACTqJ,OAqBKsI,gBAAU,CACvB3J,KAAM,qBACN4J,SAAUN,IAFGK,CAGZH,ICzFK8J,GAAWC,KAAXD,OAgFOyW,GA9Ea,SAAC1oB,GAC3B,IACEziC,EAQEyiC,EARFziC,QACAg6B,EAOEyI,EAPFzI,eACAmb,EAME1S,EANF0S,kBACA9E,EAKE5N,EALF4N,kBACAe,EAIE3O,EAJF2O,mBACAn0B,EAGEwlB,EAHFxlB,OACA0yB,EAEElN,EAFFkN,SACAznB,EACEua,EADFva,kBAGIgf,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAEZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,0CAAX,SACE,oBAAIA,MAAM,kBAAV,gCAA6CmpB,EAAkB5Z,UAEjE,sBAAKvP,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,MAAX,UACE,cAAC,KAAD,CAAM2kC,GAAI,OAAV,SACE,cAAC,GAAD,CACEthC,KAAK,UACLuhC,KAAM,cAAC2Y,GAAA,EAAD,IACNpY,KAAK,SACLmC,QAAM,EAJR,uBASF,qBAAKtnC,MAAM,SACX,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,+BAUJ,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAMo7B,EACNh6B,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAQ1B,cAAC,GAAD,QCsEA0D,GAAmBzF,mBA3BD,SAACvE,GAAD,MAAY,CAClCtoB,MAAOsoB,EAAMtoB,MACb2gB,WAAY2H,EAAM3H,eAEO,SAACntB,GAAD,MAAe,CACxCnE,kBAAmB,SAAC1F,EAAMC,EAAOC,GAAd,OACjBwoD,GAAiD1oD,EAAMC,EAAOC,IAChEkuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAAS6+C,GAA4C,KAD1C,uBAEX7+C,EAAS6+C,GAA0C,KAFxC,OAGjB7+C,EAAS6+C,GAAgC,QACzC7+C,EAASiH,GAAgC,IACzC43C,KALiB,2CAAF,kDAAC,GAOlBjtC,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAAS6+C,GAAgC,SADhC,uBAET7+C,EAAS6+C,GAA0CzhB,EAAOlqC,KAFjD,uBAGT8M,EAAS6+C,GAA4CzhB,IAH5C,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKT43C,KALS,4CAAF,mDAAC,GAOhB7iB,kBAAkB,WAAD,4BAAE,WAAOsjB,GAAP,SAAAh7C,EAAA,sEACXtE,EAAS6+C,GAA0CS,IADxC,OAEjBT,GAA2CS,GAF1B,2CAAF,mDAAC,MAMKjmB,EA9IG,SAAC1C,GAC3B,IACE96B,EAME86B,EANF96B,kBACA+V,EAKE+kB,EALF/kB,gBACAoqB,EAIErF,EAJFqF,kBACAuI,EAGE5N,EAHF4N,kBAJF,EAOI5N,EAFFxJ,WAAce,EALhB,EAKgBA,eAAgB/c,EALhC,EAKgCA,OACrBiL,EACPua,EADFnqB,MAAS4P,kBAGHjmB,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjB8c,EAAennB,OAAS,GAC1BmnB,EAAe7rB,KAAI,SAACC,EAAMC,GACxB2rB,EAAe3rB,GAAf,2BAA6BD,GAA7B,IAAmC65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAqEjEg3B,IAAMG,WAAU,WACd79B,EAAkB1F,EAAMC,KACvB,IAEH,IAAMkvC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAAS6+C,GAAsC1tC,IALlC,OAMzBtV,EAAkB0pC,EAAUC,GANH,2CAAH,wDAaxB,OACE,cAAC,GAAD,CACEtxC,QApFY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,WACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE0pB,cAAcjnB,OAAS41B,EAAE3O,cAAcjnB,SAE7D,CACE6G,MAAO,aACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE9B,KAAKuE,OAAS41B,EAAEn6B,KAAKuE,SAE3C,CACE6G,MAAO,WACP4uB,UAAW,qBACX9G,IAAK,qBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE2pB,mBAAmBlnB,OAAS41B,EAAE1O,mBAAmBlnB,SAEvE,CACE6G,MAAO,YACP4uB,UAAW,eACX9G,IAAK,eACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEsc,aAAa7Z,OAAS41B,EAAE/b,aAAa7Z,SAE3D,CACE6G,MAAO,SACP4uB,UAAW,eACX9G,IAAK,eACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEuqB,aAAa9nB,OAAS41B,EAAE9N,aAAa9nB,UA4CzDmnB,eAAgBA,EAChBmb,kBAzCsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA2BRgK,kBAAmBA,EACnBe,mBAAoBA,EACpBzB,SAXa,SAACrB,GAChB3mC,EAAkB1F,EAAMC,EAAOosC,IAW7BrxB,OAAQA,EACRiL,kBAAmBA,OAsCV6iB,gBAAU,CACvB3J,KAAM,kBADO2J,CAEZH,ICvJUygB,GAAkC,SAACzlD,GAC9C,MAAO,CACLxD,KAPF,sCAQEwD,YAIS0lD,GAAgC,SAAC1lD,GAC5C,MAAO,CACLxD,KAZF,mCAaEwD,YAWSi2B,GAA8B,uCAAG,gEAAAzrB,EAAA,6DAC5CnO,EAD4C,+BACrC,EACPC,EAF4C,+BAEpC,OACRC,EAH4C,+BAGlC,GAHkC,+BAIrC,MACPyB,EAL4C,+BAKjC,GACXiH,EAN4C,+BAMrC+M,OAASE,OAAO,cAAc9J,WACrClD,EAP4C,+BAOpC8M,OAASE,OAAO,cAAc9J,WAE9BgE,EAAajG,GAAbiG,SACFiL,EAASjL,IAAW8pB,eAAe7e,OACjCC,EAAcD,EAAdC,UAXoC,oBAanBvb,EAAOqJ,kBAC5B/I,EACAC,EACA2I,EACAC,EACA3I,EACAyB,GAnBwC,iBAalChF,EAbkC,EAalCA,MAQFqe,EAAS,IACRhb,KAAOA,EACdgb,EAAO/a,MAAQA,EACf+a,EAAOC,UAAYA,EAEb6e,EAAoB,GAEtBn9B,EAAKuC,QAAQ0R,OAAS,GACxBjU,EAAKuC,QAAQgN,KAAI,SAACC,EAAMC,GACtBD,EAAKxP,KAAKuP,KAAI,SAACssB,EAAUC,GACvBqB,EAAkB7vB,KAAlB,eACKuuB,UAMX1uB,GAAMD,SAASu/C,GAA+B,OAACtvB,QAAD,IAACA,IAAqB,KACpEhwB,GAAMD,SAASw/C,GAA8BruC,IAvCH,mDAyC1Cve,QAAQC,IAAR,MAzC0C,2DAAH,qDA6C9Bye,GAAY,uCAAG,WAAO7M,GAAP,qCAAAH,EAAA,yDAClB4B,EAAajG,GAAbiG,SADkB,EAEFA,IAAW8pB,eAA3B75B,EAFkB,EAElBA,KAAMC,EAFY,EAEZA,MAETqO,EAJqB,gCAKlBsrB,GAA+B55B,EAAMC,GALnB,+CASpBC,EAToB,UASVoO,EAAOpO,eATG,QASQ,GAC5BkjB,EAAc9U,EAAO2O,OAAS3O,EAAO2O,OAAOtM,MAAM,KAAO,GACzDiF,EAXoB,UAWRD,KAAOrH,EAAOsH,WAAWC,OAAO,qBAXxB,QAWyC,GAC7D2B,EAZoB,UAYV7B,KAAOrH,EAAOkJ,SAAS3B,OAAO,qBAZpB,QAYqC,GAEzDoH,EAAS3O,EAAO2O,OAASmG,EAAY,GAAK,GAdtB,oBAiBlBwW,GACJ55B,EACAC,EACAC,EACA+c,EACArH,EACA4B,GAvBsB,2DA0BxB/a,QAAQC,IAAR,MA1BwB,2DAAH,sDCUV4sD,GA1EuB,SAAC9oB,GACrC,IAAQziC,EAAsDyiC,EAAtDziC,QAASg8B,EAA6CyG,EAA7CzG,mBAAoB2T,EAAyBlN,EAAzBkN,SAAUC,EAAenN,EAAfmN,WAE/C,OACE,qBAAK7wC,MAAM,eAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,oCAEF,cAAC,KAAD,CAASgxC,YAAY,OAArB,wBACA,qBAAKhxC,MAAM,MAAX,SACGwQ,GAAiBpB,KAAI,SAACC,EAAMC,GAAP,OACpB,qBAAKtP,MAAM,OAAX,SACE,cAAC,KAAD,CAAON,OAAQ2P,EAAK3P,OAAQwqC,KAAM76B,EAAKE,QADND,QAKvC,cAAC,KAAD,CAAS0hC,YAAY,OAArB,yBACA,sBAAKhxC,MAAM,8BAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,YAAYnB,MAAM,WAEtC,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,UAAUnB,MAAM,aAEpC,qBAAKpO,MAAM,gBAAX,SACE,cAAC,GAAD,CACEH,KAAI,OAAEgxC,QAAF,IAAEA,IAAc,GACpBthC,KAAK,SACLnB,MAAM,aAGV,qBAAKpO,MAAM,gBAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,UACLnB,MAAM,WACN+zB,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,gBAAX,SACE,qBAAKA,MAAM,aAAX,SACE,cAAC,GAAD,CACEslC,QAASsL,EACTvtC,KAAK,UACLuhC,KAAM,cAACsM,GAAA,EAAD,IACN/L,KAAK,SAJP,yBAWN,qBAAKnlC,MAAM,mBAAX,SACE,cAAC,KAAD,CACEgoC,UAAQ,EACRC,QAAShnC,EACTinC,WAAYjL,EACZkI,KAAM,0BCiIpB0G,GAAmBzF,mBAhBD,SAACvE,GAAD,MAAY,CAClC9E,eAAgB8E,EAAM9E,eACtB5c,OAAQ0hB,EAAM1hB,OACdq1B,yBAA0B7F,aAAc,qBAAdA,CAAoC9N,OAErC,SAAC90B,GAAD,MAAe,CACxCd,kBAAmB,SAAC/I,EAAMC,EAAOC,EAAS0I,EAAMC,GAA7B,OACjB0pC,GACEvyC,EACAC,EACAC,EACA0I,EACAC,OAImBq6B,EAhMa,SAAC1C,GACrC,MAMIA,EALF3G,eAAkBE,EADpB,EACoBA,mBAAoB/e,EADxC,EACwCA,OAC5B6G,EAIR2e,EAJFvjB,OAAU4E,WACVywB,EAGE9R,EAHF8R,yBACAvpC,EAEEy3B,EAFFz3B,kBAIM/I,GAFJwgC,EADF/kB,gBAGsBT,EAAhBhb,MAAMC,EAAU+a,EAAV/a,MAEV85B,EAAmBnpB,OAAS,GAC9BmpB,EAAmB7tB,KAAI,SAACC,EAAMC,GAC5B2tB,EAAmB3tB,GAAnB,2BAAiCD,GAAjC,IAAuC65B,GAAI55B,EAAQ,OAIvD,IA4BMrO,EAAU,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,UACP4uB,UAAW,UACX9G,IAAK,UACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEugC,QAAQ99B,OAAS41B,EAAEkI,QAAQ99B,SAEjD,CACE6G,MAAO,SACP4uB,UAAW,cACX9G,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEoQ,YAAY3N,OAAS41B,EAAEjoB,YAAY3N,SAEzD,CACE6G,MAAO,UACP4uB,UAAW,aACX9G,IAAK,aACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEqkC,WAAW5hC,OAAS41B,EAAEgM,WAAW5hC,SAEvD,CACE6G,MAAO,OACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACP2F,OAAQ,SAACvmC,EAAMwmC,GACb,IAlDmBC,EAkDfx5B,GAlDew5B,EAkDSD,EAAM7uB,YAAa6uB,EAAMnxB,SAhDhD,WAGF,IADCoxB,EAEG,UAIA,WAyCP,OACE,cAAC,KAAD,CACEnD,MAAO,CAAEoD,aAAc,GAAI9F,MAAO,IAAK+F,UAAW,UAClD15B,MAAOA,EAFT,SAKGjN,EAAKgN,eAFDhN,IAMXomC,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEhO,KAAKyQ,OAAS41B,EAAErmC,KAAKyQ,SAE3C,CACE6G,MAAO,WACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,OACP4uB,UAAW,cACXK,OAAQ,SAACrwB,GAAD,OACNA,EAAMnK,KAAI,SAACqM,GAAD,OACR,eAAC,KAAD,WACGA,EAAK2B,UACL7D,EAAMzF,QAAU,EAAI,GAAK,YAGhC2uB,IAAK,cACLwB,MAAO,OAET,CACEtpB,MAAO,QACP4uB,UAAW,cACXK,OAAQ,SAACrwB,GAAD,OACNA,EAAMnK,KAAI,SAACqM,GAAD,OACR,eAAC,KAAD,WACGA,EAAKwuB,gBACL1wB,EAAMzF,QAAU,EAAI,GAAK,YAGhC2uB,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,WACP4uB,UAAW,SACX9G,IAAK,SACLmH,OAAQ,SAAClqC,GACP,IAAI4Q,EAAmB,aAAX5Q,EAAwB,UAAY,OAChD,OACE,cAAC,KAAD,CACEinC,MAAO,CAAE1C,MAAO,GAAI+F,UAAW,UAC/B15B,MAAOA,EAFT,SAKG5Q,EAAO2Q,eAFH3Q,MASTuyC,EAAe,GACrBltB,EAAW3V,KAAI,SAACC,EAAMC,GACpB2iC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYqP,GACdnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB+2B,IAAMG,WAAU,WACdx6B,EAAkB/I,EAAMC,KACvB,IAMH,OACE,cAAC,GAAD,aACElC,QAASA,EACTg8B,mBAAoBA,EACpB/e,OAAQA,EACR4yB,eAAgBpgC,GAChBmgC,WAAYoB,EACZrB,SAXa,WACf6E,GAAmCD,KAW7B9R,OA0BKsI,gBAAU,CACvB3J,KAAM,4BADO2J,CAEZH,ICxMGgM,IAFW2E,KAATD,KAEa,SAAC,GAAwB,IAAtBzE,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,aAUJC,GAAgB,SAAC,GAKhB,IAJL1M,EAII,EAJJA,aACAC,EAGI,EAHJA,WACA0M,EAEI,EAFJA,SACAyU,EACI,EADJA,iBAEA,OACE,sBAAKzsD,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,eAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,UACE,qBAAKtrC,MAAM,iBAAX,SACE,cAACwrC,GAAA,EAAD,CAAOj8B,KAAK,QAAQnB,MAAM,QAAQ+zB,UAAWmI,GAAQjnC,KAAK,WAE5D,qBAAKrD,MAAM,iBAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAM4sD,EACNl9C,KAAK,eACLnB,MAAM,oBAGV,qBAAKpO,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,YACN+zB,UAAWmI,GACXjnC,KAAK,kBAuCFqpD,GA/BgB,SAAChpB,GAC9B,IACErkB,EAQEqkB,EARFrkB,eACAgsB,EAOE3H,EAPF2H,aACAC,EAME5H,EANF4H,WACAlsB,EAKEskB,EALFtkB,oBACA84B,EAIExU,EAJFwU,aACAF,EAGEtU,EAHFsU,SACAn2B,EAEE6hB,EAFF7hB,WACA4qC,EACE/oB,EADF+oB,iBAGF,OACE,cAAC,GAAD,CACEvV,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVn2B,WAAYA,EACZ4qC,iBAAkBA,OCxBtB5gB,GAAmBzF,mBAfD,SAACvE,GAAD,MAAY,CAClC/c,UAAW+c,EAAM/c,UACjB0B,SAAUqb,EAAMrb,SAChB2b,UAAWN,EAAMM,UACjB/S,QAASyS,EAAMzS,YAEU,SAACriB,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7DmmC,wBAAyB,WACvBwS,MAEF58B,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChBm7C,GAAsCtpD,EAAMmO,OAGvB40B,EAhDM,SAAC1C,GAC9B,IACEoI,EAOEpI,EAPFoI,MACAoM,EAMExU,EANFwU,aACa74B,EAKXqkB,EALFvB,UAAa9iB,eACDwC,EAIV6hB,EAJFld,SAAY3E,WAEC4E,GAEXid,EAHFtU,QAAW/G,SAGTqb,EAFF5e,UAAa2B,eACbsJ,EACE2T,EADF3T,iBAUI68B,EAAkBl9C,GAAoB+W,EAAe,YAE3D,OACE,cAAC,GAAD,aACEpH,eAAgBA,EAChB64B,aAAcA,EACd5M,WAbe,SAAC95B,GACds6B,GACF/b,EAAiBlO,EAAYrQ,IAY7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,YACjD4qC,iBAAkBG,GACdlpB,OAyBKsI,gBAAU,CACvB3J,KAAM,mBACN4J,SpHsFkC,SAACz6B,GACnC,IAAMk6B,EAAS,GAOf,OANKl6B,EAAOmJ,QACV+wB,EAAO/wB,MAAQ,sBAEZnJ,EAAOqsB,eACV6N,EAAO7N,aAAe,8BAEjB6N,IoHhGMM,CAGZH,IC1DK8J,GAAWC,KAAXD,OAkEOkX,GAhEW,SAACnpB,GACzB,IACEziC,EAOEyiC,EAPFziC,QACAqoB,EAMEoa,EANFpa,UACA8sB,EAKE1S,EALF0S,kBACA9E,EAIE5N,EAJF4N,kBACAe,EAGE3O,EAHF2O,mBACAn0B,EAEEwlB,EAFFxlB,OACA0yB,EACElN,EADFkN,SAGIzI,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAEZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,0CAAX,SACE,oBAAIA,MAAM,kBAAV,2BAEF,sBAAKA,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,6BASF,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAMypB,EACNroB,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAQ1B,cAAC,GAAD,QCmGA0D,GAAmBzF,mBAjCD,SAACvE,GAAD,MAAY,CAClCrb,SAAUqb,EAAMrb,aAES,SAACzZ,GAAD,MAAe,CACxC+/C,gBAAiB,SAAC5pD,EAAMC,EAAOC,GAAd,OACfupD,GAA6CzpD,EAAMC,EAAOC,IAC5D2pD,gBAAiB,SAAC7pD,EAAMC,GACtBsrC,GAAqCvrC,EAAMC,IAE7CmuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAAS4/C,GAAwC,KADtC,uBAEX5/C,EAAS4/C,GAAsC,KAFpC,OAGjB5/C,EAAS4/C,GAA8B,QACvC5/C,EAASiH,GAAgC,IACzC24C,KALiB,2CAAF,kDAAC,GAOlBhuC,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAAS4/C,GAA8B,SAD9B,uBAET5/C,EAAS4/C,GAAsCxiB,EAAOlqC,KAF7C,uBAGT8M,EAAS4/C,GAAwCxiB,IAHxC,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKT24C,KALS,4CAAF,mDAAC,GAOhB5jB,kBAAkB,WAAD,4BAAE,WAAO3jC,GAAP,SAAAiM,EAAA,sEACXtE,EAAS4/C,GAAsCvnD,IADpC,OAEjBunD,GAAwCvnD,GAFvB,2CAAF,mDAAC,GAIlB4nD,wBAAwB,WAAD,4BAAE,WAAO7iB,GAAP,SAAA94B,EAAA,sEACjBtE,EAAS4/C,GAAsCxiB,EAAOlqC,KADrC,uBAEjB8M,EAAS4/C,GAAwCxiB,IAFhC,2CAAF,mDAAC,MAMD/D,EApJF,SAAC1C,GACtB,IACEopB,EAOEppB,EAPFopB,gBACAnuC,EAME+kB,EANF/kB,gBACAoqB,EAKErF,EALFqF,kBACAuI,EAIE5N,EAJF4N,kBACA0b,EAGEtpB,EAHFspB,wBALF,EAQItpB,EAFFld,SAAY4X,EANd,EAMcA,aAAclgB,EAN5B,EAM4BA,OAC1B6uC,EACErpB,EADFqpB,gBAGM7pD,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjBigB,EAAatqB,OAAS,GACxBsqB,EAAahvB,KAAI,SAACC,EAAMC,GACtB8uB,EAAa9uB,GAAb,2BAA2BD,GAA3B,IAAiC65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAoE/Dg3B,IAAMG,WAAU,WACdqmB,EAAgB5pD,EAAMC,GACtB4pD,EAAgB,EAAG,SAClB,IAEH,IAAM1a,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAAS4/C,GAAkCzuC,IAL9B,OAMzB4uC,EAAgBxa,EAAUC,GAND,2CAAH,wDAaxB,OACE,cAAC,GAAD,CACEtxC,QApFY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,QACP4uB,UAAW,QACX9G,IAAK,QACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEsJ,MAAM7G,OAAS41B,EAAE/uB,MAAM7G,SAE7C,CACE6G,MAAO,gBACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE4sB,cAAcnqB,OAAS41B,EAAEzL,cAAcnqB,SAE7D,CACE6G,MAAO,YACP4uB,UAAW,cACX9G,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEgC,YAAYS,OAAS41B,EAAEr2B,YAAYS,SAEzD,CACE6G,MAAO,SACP4uB,UAAW,eACX9G,IAAK,eACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEuqB,aAAa9nB,OAAS41B,EAAE9N,aAAa9nB,UAmDzDwV,UAAW8U,EACXgY,kBAhDsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,KAAD,CACER,GAAI,gBACJW,QAAS,kBAAM0nB,EAAwB7iB,IAFzC,SAIE,cAAC,GAAD,CAAa9mC,KAAK,UAAUuhC,KAAM,cAAC2lB,GAAA,EAAD,IAAqBplB,KAAK,aAE9D,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA4BRgK,kBAAmBA,EACnBe,mBAAoBA,EACpBzB,SAXa,SAACrB,GAChBud,EAAgB5pD,EAAMC,EAAOosC,IAW3BrxB,OAAQA,OA4CC8tB,gBAAU,CACvB3J,KAAM,gBADO2J,CAEZH,ICvKGgM,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAA6C,IAA3C1M,EAA0C,EAA1CA,aAAcC,EAA4B,EAA5BA,WAAY2hB,EAAgB,EAAhBA,UACjD,OACE,sBAAKjtD,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,uCACA,cAACmsC,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,SACE,qBAAKtrC,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAMotD,EACN19C,KAAK,QACLnB,MAAM,wBAsCL8+C,GA7BqB,SAACxpB,GACnC,IACErkB,EAOEqkB,EAPFrkB,eACAgsB,EAME3H,EANF2H,aACAC,EAKE5H,EALF4H,WACAlsB,EAIEskB,EAJFtkB,oBACA84B,EAGExU,EAHFwU,aACA+U,EAEEvpB,EAFFupB,UACAprC,EACE6hB,EADF7hB,WAGF,OACE,cAAC,GAAD,CACEq1B,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrByC,WAAYA,EACZorC,UAAWA,OCXfphB,GAAmBzF,mBAXD,SAACvE,GAAD,MAAY,CAClCta,MAAOsa,EAAMta,MACbK,cAAeia,EAAMja,cACrBua,UAAWN,EAAMM,cAEQ,SAACp1B,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7D+b,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChB27C,GAAgD9pD,EAAMmO,OAGjC40B,EA1CW,SAAC1C,GACnC,IACEoI,EAMEpI,EANFoI,MACAoM,EAKExU,EALFwU,aACa74B,EAIXqkB,EAJFvB,UAAa9iB,eACIwC,EAGf6hB,EAHF9b,cAAiB/F,WACRqW,EAEPwL,EAFFnc,MAAS2Q,UACTnI,EACE2T,EADF3T,iBAUIq9B,EAAc19C,GAAoBwoB,GAExC,OACE,cAAC,GAAD,aACE7Y,eAAgBA,EAChB64B,aAAcA,EACd5M,WAbe,SAAC95B,GACds6B,GACF/b,EAAiBlO,EAAYrQ,IAY7BqQ,WAAYA,EACZorC,UAAWG,GACP1pB,OAqBKsI,gBAAU,CACvB3J,KAAM,wBACN4J,SxH+GuC,SAACz6B,GACxC,IAAMk6B,EAAS,GAIf,OAHKl6B,EAAO+V,QACVmkB,EAAOnkB,MAAQ,4BAEVmkB,IwHtHMM,CAGZH,IC9CK8J,GAAWC,KAAXD,OA0FO0X,GAxFgB,SAAC3pB,GAC9B,IACEziC,EASEyiC,EATFziC,QACAgnB,EAQEyb,EARFzb,kBACAmuB,EAOE1S,EAPF0S,kBACA9E,EAME5N,EANF4N,kBACAe,EAKE3O,EALF2O,mBACAn0B,EAIEwlB,EAJFxlB,OACA0yB,EAGElN,EAHFkN,SACA/rB,EAEE6e,EAFF7e,qBACAksB,EACErN,EADFqN,uBAGI5I,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAEZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,0CAAX,SACE,oBAAIA,MAAM,kBAAV,8BAA2C6kB,EAAqBtV,UAElE,sBAAKvP,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,gBAAX,UACE,cAAC,KAAD,CAAM2kC,GAAI,aAAV,SACE,cAAC,GAAD,CACEthC,KAAK,UACLuhC,KAAM,cAAC2Y,GAAA,EAAD,IACNpY,KAAK,SACLmC,QAAM,EAJR,uBASF,qBAAKtnC,MAAM,SACX,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,8BAQA,qBAAKnlC,MAAM,SACX,cAAC,GAAD,CACEslC,QAASyL,EACT1tC,KAAK,UACLuhC,KAAM,cAACqM,GAAA,EAAD,IACN9L,KAAK,SAJP,4BAUJ,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAMooB,EACNhnB,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAQ1B,cAAC,GAAD,QC/FOmlB,GAA2B,uCAAG,WAAOztD,GAAP,2BAAAwR,EAAA,6DACjCwT,EAA4ChlB,EAA5CglB,qBAAsBoD,EAAsBpoB,EAAtBooB,kBACxBslC,EAAc,GAFqB,SAKnCtlC,EAAkB7Y,KAAI,SAACC,EAAMC,GACjCi+C,EAAYpgD,KAAK,CAAE+7B,GAAI55B,EAAQ,EAAGC,KAAMF,EAAKE,KAAMi+C,MAAO,SANnB,QASnC5a,EAAM,IAAIC,YAEZC,YAAY,IAChBF,EAAIG,QAAQ,WACZH,EAAI1I,KAAK,qBAAsB,IAAK,GAAI,UAExC0I,EAAIE,YAAY,IAChBF,EAAIG,QAAQ,WAEZH,EAAI1I,KAAK,GAAI,GAAb,YACA0I,EAAI1I,KAAJ,YAAcrlB,EAAqBtV,KAAKc,eAAiB,GAAI,IAE7DuiC,EAAI1I,KAAK,GAAI,GAAb,UACA0I,EAAI1I,KAAJ,sBAAcrlB,EAAqBpD,mBAAnC,QAAkD,KAAO,GAAI,IAGvDuxB,EAAW,SAACC,GAChB,IAAIwa,EAAUxa,EAASL,IAGO,SAA1BK,EAASG,KAAKsa,SAAgD,IAA1Bza,EAAS0a,OAAOr+C,OAEtDm+C,EAAQG,aAAa,IAErBhb,EAAIib,aAAa,IAAK,IAAK,KAG3Bjb,EAAIkb,OAAO7a,EAASG,KAAK/+B,EAAI,GAAI4+B,EAASG,KAAK7K,EAAI,EAAG,EAAG,OAE/B,SAA1B0K,EAASG,KAAKsa,SACY,IAA1Bza,EAAS0a,OAAOr+C,QAGhBm+C,EAAQG,aAAa,IAErBhb,EAAIib,aAAa,IAAK,IAAK,KAG3Bjb,EAAIkb,OAAO7a,EAASG,KAAK/+B,EAAI,GAAI4+B,EAASG,KAAK7K,EAAI,EAAG,EAAG,QAUvD2K,EAAe,SAACD,GACpB,IAAIE,EAAIF,EAASG,KAAKC,OACtBF,EAAEG,UAAY,CAAC,EAAG,EAAG,GACrBH,EAAEI,UAAY,GACdJ,EAAEK,KAAO,WASXZ,EAAImB,UAAU,CACZC,OAAQ,GACRC,KAAMsZ,EACNrZ,MAAO,QACPE,WAAY,CAAER,OAAQ,UACtBP,OAAQ,CAAEiB,SAAU,aACpBrM,QAAS,CACP,CAAEuM,OAAQ,IAAKC,QAAS,MACxB,CAAED,OAAQ,iBAAkBC,QAAS,QACrC,CAAED,OAAQ,QAASC,QAAS,SAC5B,CAAED,OAAQ,KAAMC,QAAS,UAE3BC,aAAc1B,EACdE,aAAcA,EACdyB,aAAc,CACZ,EAAG,CAAEf,OAAQ,WAEfgB,eAAgB,CAAC,EAAG,EAAG,GACvBC,eAAgB,KAIlBjC,EAAImb,UACJnb,EAAIE,YAAY,IAChBF,EAAIG,QAAQ,cAAe,WAE3BH,EAAIE,YAAY,IAEhBF,EAAIE,YAAY,IAChBF,EAAI1I,KAAK,GAAI,GAAb,cAGA0I,EAAI1I,KAAK,GAAI,IAAb,YACA0I,EAAI1I,KAAK,IAAK,IAAd,iBACA0I,EAAI1I,KAAK,IAAK,IAAd,cAEA0I,EAAI1I,KAAK,GAAI,IAAb,iCACA0I,EAAI1I,KAAK,IAAK,IAAd,iCAGA0I,EAAIkC,KAAJ,6BACwBjwB,EAAqBtV,KAAKU,QAAQ,IAAK,KAD/D,SA9GyC,4CAAH,sDC6IlC47B,GAAmBzF,mBAlCD,SAACvE,GAAD,MAAY,CAClC/c,UAAW+c,EAAM/c,UACjB8C,cAAeia,EAAMja,kBAEI,SAAC7a,GAAD,MAAe,CACxCtH,qBAAsB,SAACnC,EAAYJ,EAAMC,EAAOC,GAA1B,OACpB+pD,GACE7pD,EACAJ,EACAC,EACAC,IAEJkuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAASogD,GAAkD,KADhD,uBAEXpgD,EAASogD,GAAgD,KAF9C,OAGjBpgD,EAASogD,GAAmC,QAC5CpgD,EAASiH,GAAgC,IACzCm5C,KALiB,2CAAF,kDAAC,GAOlBxuC,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAASogD,GAAmC,SADnC,uBAETpgD,EAASogD,GAAgDhjB,EAAOlqC,KAFvD,uBAGT8M,EAASogD,GAAkDhjB,IAHlD,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKTm5C,KALS,4CAAF,mDAAC,GAOhBpkB,kBAAkB,WAAD,4BAAE,WAAOsjB,GAAP,SAAAh7C,EAAA,sEACXtE,EACJogD,GAAgDd,IAFjC,OAIjBc,GAAkDd,GAJjC,2CAAF,mDAAC,MAQKjmB,EAnIM,SAAC1C,GAC9B,IACEj+B,EAOEi+B,EAPFj+B,qBACAkZ,EAME+kB,EANF/kB,gBACAoqB,EAKErF,EALFqF,kBACAuI,EAIE5N,EAJF4N,kBAJF,EAQI5N,EAHF9b,cAAiBK,EALnB,EAKmBA,kBAAmB/J,EALtC,EAKsCA,OALtC,EAQIwlB,EAFF5e,UAAaD,EANf,EAMeA,qBAAsBoB,EANrC,EAMqCA,mBACnC+nC,EACEtqB,EADFsqB,wBAGM9qD,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjB8J,EAAkBnU,OAAS,GAC7BmU,EAAkB7Y,KAAI,SAACC,EAAMC,GAC3B2Y,EAAkB3Y,GAAlB,2BAAgCD,GAAhC,IAAsC65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAyCpEg3B,IAAMG,WAAU,WACdhhC,EAAqBwgB,EAAoB/iB,EAAMC,KAC9C,IAEH,IAAMkvC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAASogD,GAA4CjvC,IALxC,OAMzBzY,EAAqBwgB,EAAoBqsB,EAAUC,GAN1B,2CAAH,wDAqBxB,OACE,cAAC,GAAD,CACEtxC,QAhEY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,iBACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE9B,KAAKuE,OAAS41B,EAAEn6B,KAAKuE,UAoDzCmU,kBAAmBA,EACnBmuB,kBAjDsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QAmCRgK,kBAAmBA,EACnBe,mBAAoBA,EACpBzB,SAnBa,SAACrB,GAChB9pC,EAAqBwgB,EAAoB/iB,EAAMC,EAAOosC,IAmBpDrxB,OAAQA,EACR2G,qBAAsBA,EACtBksB,uBAlB2B,WAK7Buc,GAJoB,CAClBzoC,uBACAoD,qBAEuC+lC,SA0D9BhiB,gBAAU,CACvB3J,KAAM,qBADO2J,CAEZH,IChJGgM,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAAuD,IAArD1M,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,WAAY0M,EAA0B,EAA1BA,SAAUiW,EAAgB,EAAhBA,UAC3D,OACE,sBAAKjuD,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,cAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,SACE,qBAAKtrC,MAAM,WAAX,SACE,qBAAKA,MAAM,YAAX,SACE,cAAC,GAAD,CAAS+sC,YAAU,EAACltC,KAAMouD,EAAW1+C,KAAK,OAAOnB,MAAM,mBAuCpD8/C,GA/BoB,SAACxqB,GAClC,IACErkB,EAQEqkB,EARFrkB,eACAgsB,EAOE3H,EAPF2H,aACAC,EAME5H,EANF4H,WACAlsB,EAKEskB,EALFtkB,oBACA84B,EAIExU,EAJFwU,aACAF,EAGEtU,EAHFsU,SACAn2B,EAEE6hB,EAFF7hB,WACAosC,EACEvqB,EADFuqB,UAGF,OACE,cAAC,GAAD,CACE/W,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVn2B,WAAYA,EACZosC,UAAWA,OCLfpiB,GAAmBzF,mBAZD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdlJ,MAAOsoB,EAAMtoB,MACb4oB,UAAWN,EAAMM,UACjBnD,aAAc6C,EAAM7C,iBAEK,SAACjyB,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7D+b,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChB28C,GAA8C9qD,EAAMmO,OAG/B40B,EA7CU,SAAC1C,GAClC,IACEoI,EAMEpI,EANFoI,MACAoM,EAKExU,EALFwU,aACa74B,EAIXqkB,EAJFvB,UAAa9iB,eAHf,EAOIqkB,EAHF1E,aAAgBnd,EAJlB,EAIkBA,WAAY0d,EAJ9B,EAI8BA,yBACnBjW,EAEPoa,EAFFnqB,MAAS+P,UACTyG,EACE2T,EADF3T,iBAUIq+B,EAAc1+C,GAAoB4Z,EAAW,QAEnD,OACE,cAAC,GAAD,aACEjK,eAAgBA,EAChB64B,aAAcA,EACd5M,WAbe,SAAC95B,GACds6B,GACF/b,EAAiBlO,EAAYrQ,IAY7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,YACjD0d,yBAA0BA,EAC1B0uB,UAAWG,GACP1qB,OAsBKsI,gBAAU,CACvB3J,KAAM,uBACN4J,S7HoGsC,SAACz6B,GACvC,IAAMk6B,EAAS,GAIf,OAHKl6B,EAAOiK,OACViwB,EAAOjwB,KAAO,uBAETiwB,I6H3GMM,CAGZH,ICrDK8J,GAAWC,KAAXD,OAgFO0Y,GA9Ee,SAAC3qB,GAC7B,IACEziC,EAQEyiC,EARFziC,QACAo+B,EAOEqE,EAPFrE,iBACA+W,EAME1S,EANF0S,kBACA9E,EAKE5N,EALF4N,kBACAe,EAIE3O,EAJF2O,mBACAn0B,EAGEwlB,EAHFxlB,OACA0yB,EAEElN,EAFFkN,SACA5S,EACE0F,EADF1F,qBAGImK,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAEZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,0CAAX,SACE,oBAAIA,MAAM,kBAAV,4BAAyCg+B,EAAqBrjB,WAEhE,sBAAK3a,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,MAAX,UACE,cAAC,KAAD,CAAM2kC,GAAI,YAAV,SACE,cAAC,GAAD,CACEthC,KAAK,UACLuhC,KAAM,cAAC2Y,GAAA,EAAD,IACNpY,KAAK,SACLmC,QAAM,EAJR,uBASF,qBAAKtnC,MAAM,SACX,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,8BAUJ,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACEklC,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAMw/B,EACNp+B,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAQ1B,cAAC,GAAD,QCwDA0D,GAAmBzF,mBA3BD,SAACvE,GAAD,MAAY,CAClCrb,SAAUqb,EAAMrb,SAChBwY,aAAc6C,EAAM7C,iBAEK,SAACjyB,GAAD,MAAe,CACxCuhD,oBAAqB,SAACprD,EAAMC,EAAOC,GAAd,OACnB+qD,GAAiDjrD,EAAMC,EAAOC,IAChEkuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAASohD,GAAgD,KAD9C,uBAEXphD,EAASohD,GAA6C,KAF3C,OAGjBphD,EAASohD,GAAkC,QAC3CphD,EAASiH,GAAgC,IACzCm6C,KALiB,2CAAF,kDAAC,GAOlBxvC,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAASohD,GAAkC,SADlC,uBAETphD,EAASohD,GAA6ChkB,EAAOlqC,KAFpD,uBAGT8M,EAASohD,GAAgDhkB,IAHhD,uBAITp9B,EAASiH,GAAgC,IAJhC,wBAKTm6C,KALS,4CAAF,mDAAC,GAOhBplB,kBAAkB,WAAD,4BAAE,WAAOwlB,GAAP,SAAAl9C,EAAA,sEACXtE,EAASohD,GAA6CI,IAD3C,OAEjBJ,GAA6CI,GAF5B,2CAAF,mDAAC,MAMKnoB,EAhIK,SAAC1C,GAC7B,IACE4qB,EAME5qB,EANF4qB,oBACA3vC,EAKE+kB,EALF/kB,gBACAoqB,EAIErF,EAJFqF,kBACAuI,EAGE5N,EAHF4N,kBAJF,EAOI5N,EAFF1E,aAAgBK,EALlB,EAKkBA,iBAAkBnhB,EALpC,EAKoCA,OACtB8f,EACV0F,EADFld,SAAYwX,qBAGN96B,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjBkhB,EAAiBvrB,OAAS,GAC5BurB,EAAiBjwB,KAAI,SAACC,EAAMC,GAC1B+vB,EAAiB/vB,GAAjB,2BAA+BD,GAA/B,IAAqC65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAuDnEg3B,IAAMG,WAAU,WACd6nB,EAAoBprD,EAAMC,KACzB,IAEH,IAAMkvC,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAASohD,GAA0CjwC,IALtC,OAMzBowC,EAAoBhc,EAAUC,GANL,2CAAH,wDAaxB,OACE,cAAC,GAAD,CACEtxC,QAtEY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,YACP4uB,UAAW,YACX9G,IAAK,YACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE+L,UAAUtJ,OAAS41B,EAAEtsB,UAAUtJ,SAErD,CACE6G,MAAO,YACP4uB,UAAW,cACX9G,IAAK,cACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEgC,YAAYS,OAAS41B,EAAEr2B,YAAYS,SAEzD,CACE6G,MAAO,SACP4uB,UAAW,eACX9G,IAAK,eACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEuqB,aAAa9nB,OAAS41B,EAAE9N,aAAa9nB,UA4CzDurB,iBAAkBA,EAClB+W,kBAzCsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA2BRgK,kBAAmBA,EACnBe,mBAAoBA,EACpBzB,SAXa,SAACrB,GAChB+e,EAAoBprD,EAAMC,EAAOosC,IAW/BrxB,OAAQA,EACR8f,qBAAsBA,OAsCbgO,gBAAU,CACvB3J,KAAM,oBADO2J,CAEZH,I,UCvIGwH,GAASmb,cAAW1tD,OAAO,CAC/BoC,KAAM,CACJurD,cAAe,MACflnB,gBAAiB,WAEnBmmB,QAAS,CACPvpB,OAAQ,GACRkT,QAAS,GACTqX,SAAU,KA8BCC,GA1BsB,WACnC,OACE,cAAC,aAAD,CAAWhoB,MAAO,CAAEioB,KAAM,GAA1B,SACE,cAAC,YAAD,UACE,eAAC,QAAD,CAAMzpB,KAAK,KAAKwB,MAAO0M,GAAOnwC,KAA9B,UACE,cAAC,QAAD,CAAMyjC,MAAO0M,GAAOqa,QAApB,SACE,cAAC,QAAD,2BAEF,cAAC,QAAD,CAAM/mB,MAAO0M,GAAOqa,QAApB,SACE,cAAC,QAAD,2BAEF,cAAC,QAAD,CAAM/mB,MAAO0M,GAAOqa,QAApB,SACE,cAAC,SAAD,CACE/mB,MAAO,CACL1C,MAAO,IACPD,OAAQ,KAEVoB,IAAI,yHClCHypB,GAJsB,WACnC,OAAO,cAAC,GAAD,KCGHhX,GAAe,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eACtB,MAAO,CACL,cAAC,GAAD,CAEEz0C,KAAK,UACL0gC,SAAS,EACTuB,QAASwS,EAJX,mBACM,YAUJC,GAAgB,SAAC,GAKhB,IAJL1M,EAII,EAJJA,aACAC,EAGI,EAHJA,WACA0M,EAEI,EAFJA,SACA8W,EACI,EADJA,aAEA,OACE,sBAAK9uD,MAAM,eAAX,UACE,oBAAIA,MAAM,yBAAV,SAAoCg4C,IACpC,cAAC7L,GAAA,EAAD,CAAMZ,SAAUF,EAAaC,GAA7B,SACE,sBAAKtrC,MAAM,WAAX,UACE,qBAAKA,MAAM,YAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAI,OAAEivD,QAAF,IAAEA,IAAgB,GACtBv/C,KAAK,WACLnB,MAAM,qBAGV,qBAAKpO,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,eACLnB,MAAM,gBACN+zB,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,YAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,cACLnB,MAAM,YACN+zB,UAAWmI,GACXC,cAAc,wBA8CbwkB,GArCwB,SAACrrB,GACtC,IACErkB,EAWEqkB,EAXFrkB,eACAgsB,EAUE3H,EAVF2H,aACAC,EASE5H,EATF4H,WACAlsB,EAQEskB,EARFtkB,oBACA84B,EAOExU,EAPFwU,aACAF,EAMEtU,EANFsU,SACAG,EAKEzU,EALFyU,SACAwD,EAIEjY,EAJFiY,kBACA95B,EAGE6hB,EAHF7hB,WACAsH,EAEEua,EAFFva,kBACA2lC,EACEprB,EADForB,aAGF,OACE,cAAC,GAAD,CACE5X,QAAS73B,EACTu4B,SAAUM,EACVR,OAAQ,cAAC,GAAD,CAAcI,eAAgBzM,IACtCqI,QACE,cAAC,GAAD,CACErI,aAAcA,EACdC,WAAYA,EACZlsB,oBAAqBA,EACrB44B,SAAUA,EACVn2B,WAAYA,EACZs2B,SAAUA,EACVwD,kBAAmBA,EACnBxyB,kBAAmBA,EACnB2lC,aAAcA,OC9BlBjjB,GAAmBzF,mBAZD,SAACvE,GAAD,MAAY,CAClCpf,OAAQof,EAAMpf,OACdlJ,MAAOsoB,EAAMtoB,MACb4oB,UAAWN,EAAMM,UACjB9hB,UAAWwhB,EAAMxhB,cAEQ,SAACtT,GAAD,MAAe,CACxCmrC,aAAc,kBAAMnrC,EAASiH,GAAgC,KAC7D+b,iBAAkB,SAAC1sB,EAAMmO,GAAP,OAChBw9C,GAAsD3rD,EAAMmO,OAGvC40B,EArDK,SAAC1C,GAC7B,IACEoI,EAMEpI,EANFoI,MACAoM,EAKExU,EALFwU,aACa74B,EAIXqkB,EAJFvB,UAAa9iB,eAHf,EAOIqkB,EAHFnqB,MAASsI,EAJX,EAIWA,WAAYsH,EAJvB,EAIuBA,kBACRvH,EAEX8hB,EAFFrjB,UAAauB,sBACbmO,EACE2T,EADF3T,iBAWI2e,EAAqB,GAS3B,OARA9sB,EAAsBxS,KAAI,SAACC,EAAMC,GAC/Bo/B,EAAmBvhC,KAAK,CACtBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAKd,cAAC,GAAD,aACE8P,eAAgBA,EAChB64B,aAAcA,EACd5M,WArBe,SAAC95B,GACds6B,IACFnsC,QAAQC,IAAI,SACZmwB,EAAiBlO,EAAYrQ,KAmB7BqQ,WAAYA,EACZm2B,SAAyB,QAAfn2B,EAAuB,cAAgB,YACjDsH,kBAAmBA,EACnB2lC,aAAcpgB,GACVhL,OAsBKsI,gBAAU,CACvB3J,KAAM,2BACN4J,SnI+I0C,SAACz6B,GAC3C,IAAMk6B,EAAS,GAUf,OATKl6B,EAAOye,WACVyb,EAAOzb,SAAW,2BAEfze,EAAOqc,eACV6d,EAAO7d,aAAe,8BAEnBrc,EAAOmc,eACV+d,EAAO/d,aAAe,0BAEjB+d,ImI5JMM,CAGZH,IC3DK8J,GAAWC,KAAXD,OAiGOsZ,GA/FmB,SAACvrB,GACjC,IACEziC,EAUEyiC,EAVFziC,QACAw/B,EASEiD,EATFjD,qBACAsoB,EAQErlB,EARFqlB,aACA3S,EAOE1S,EAPF0S,kBACA9E,EAME5N,EANF4N,kBACAe,EAKE3O,EALF2O,mBACAn0B,EAIEwlB,EAJFxlB,OACA0yB,EAGElN,EAHFkN,SACA/hB,EAEE6U,EAFF7U,uBACAqgC,EACExrB,EADFwrB,iBAGI/mB,EAAa,CACjB4N,MAAO73B,EAAOC,UAAYD,EAAO/a,MACjC6yC,QAAS93B,EAAOhb,KAChBqvC,SAAUr0B,EAAO/a,MACjB0nC,SAAUwH,GAEZ,OACE,sBAAKryC,MAAM,eAAX,UACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,sBAAKA,MAAM,OAAX,UACE,oBAAIA,MAAM,kBAAV,wCAAqD6uB,EAAuBtf,QAC5E,mBAAGvP,MAAM,wBAAT,6EAIF,sBAAKA,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,sBAAKA,MAAM,gBAAX,UACE,cAAC,KAAD,CAAM2kC,GAAI,cAAV,SACE,cAAC,GAAD,CACEthC,KAAK,UACLuhC,KAAM,cAAC2Y,GAAA,EAAD,IACNpY,KAAK,SACLmC,QAAM,EAJR,uBASF,qBAAKtnC,MAAM,SACX,cAAC,GAAD,CACEslC,QAASgM,EACTjuC,KAAK,UACLuhC,KAAM,cAACmJ,GAAA,EAAD,IACN5I,KAAK,SAJP,uCAUJ,qBAAKnlC,MAAM,WAAX,SACE,cAAC,GAAD,CACE+sC,YAAU,EACVltC,KAAMkpD,EACNx5C,KAAK,WACLnB,MAAM,iBACNy8B,SAAU,SAAC5a,GACTi/B,EAAiBj/B,QAIvB,qBAAKjwB,MAAM,gBAAX,SACE,cAAC,GAAD,CACEuP,KAAK,UACL21B,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CACEH,KAAM4gC,EACNx/B,QAASA,EACTu1C,cAAeJ,EACfjO,WAAYA,iBAQ1B,cAACgnB,GAAD,QC+EAtjB,GAAmBzF,mBApCD,SAACvE,GAAD,MAAY,CAClCtoB,MAAOsoB,EAAMtoB,MACb2mB,iBAAkB2B,EAAM3B,iBACxBzS,WAAYoU,EAAMpU,WAClBpN,UAAWwhB,EAAMxhB,UACjB+uC,2BAA4Bzf,aAAc,uBAAdA,CAAsC9N,OAEzC,SAAC90B,GAAD,MAAe,CACxCvE,oBAAqB,SAACtF,EAAMC,EAAOC,GAAd,OACnB4rD,GAA4C9rD,EAAMC,EAAOC,IAC3DkuC,kBAAkB,WAAD,4BAAE,sBAAAjgC,EAAA,sEACXtE,EAASiiD,GAAwD,KADtD,uBAEXjiD,EAASiiD,GAAsD,KAFpD,OAGjBjiD,EAASiiD,GAAsC,QAC/CjiD,EAASiH,GAAgC,IACzCg7C,KALiB,2CAAF,kDAAC,GAOlBrwC,gBAAgB,WAAD,4BAAE,WAAOwrB,GAAP,SAAA94B,EAAA,sEACTtE,EAASiiD,GAAsC,SADtC,uBAETjiD,EACJiiD,GAAsD7kB,EAAOlqC,KAHhD,uBAKT8M,EACJiiD,GAAwD7kB,IAN3C,uBAQTp9B,EAASiH,GAAgC,IARhC,wBASTg7C,KATS,4CAAF,mDAAC,GAWhBjmB,kBAAkB,WAAD,4BAAE,WAAOxhC,GAAP,SAAA8J,EAAA,sEACXtE,EACJiiD,GAAsDznD,IAFvC,OAIjBynD,GAAiDznD,GAJhC,2CAAF,mDAAC,MAQK6+B,EAxKS,SAAC1C,GACjC,IACEl7B,EAYEk7B,EAZFl7B,oBACAmW,EAWE+kB,EAXF/kB,gBACAoqB,EAUErF,EAVFqF,kBACAuI,EASE5N,EATF4N,kBAJF,EAaI5N,EARFxD,iBACEO,EANJ,EAMIA,qBACAviB,EAPJ,EAOIA,OACAmxC,EARJ,EAQIA,0BAEYxgC,EAGZ6U,EAHFjW,WAAcoB,uBACDjN,EAEX8hB,EAFFrjB,UAAauB,sBACbwtC,EACE1rB,EADF0rB,2BAGMriD,EAAaC,GAAbD,SACA7J,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEjBsiB,EAAqB3sB,OAAS,GAChC2sB,EAAqBrxB,KAAI,SAACC,EAAMC,GAC9BmxB,EAAqBnxB,GAArB,2BACKD,GADL,IAEE65B,GAAI97B,EAASlK,EAAMC,GAAOmM,QAKhC,IAAMo/B,EAAqB,GAC3B9sB,EAAsBxS,KAAI,SAACC,EAAMC,GAC/Bo/B,EAAmBvhC,KAAK,CACtBlN,GAAG,YAAD,OAAcqP,GAChBnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAgDhB+2B,IAAMG,WAAU,WACd+H,GAA4C,EAAG,OAAQ,GAAI,IAAI,KAE9D,IAEH,IAAM6D,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SAASiiD,GAA2C9wC,IALvC,OAMzB1V,EAAoB8pC,EAAUC,GANL,2CAAH,wDA4BxB,OACE,cAAC,GAAD,CACEtxC,QA/EY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,gBACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEuc,cAAc9Z,OAAS41B,EAAE9b,cAAc9Z,SAE7D,CACE6G,MAAO,YACP4uB,UAAW,eACX9G,IAAK,eACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEsc,aAAa7Z,OAAS41B,EAAE/b,aAAa7Z,UA4DzD2sB,qBAAsBA,EACtB2V,kBAzDsB,SAAClM,EAAMC,GAAP,OACxB,eAAC,KAAD,CAAOhF,KAAK,SAAZ,UACE,cAAC,GAAD,CACEG,QAAS,WACP3mB,EAAgBwrB,IAElB9mC,KAAK,UACLuhC,KAAM,cAACwF,GAAA,EAAD,IACNjF,KAAK,WAEP,cAAC,GAAD,CACEG,QAAS,kBAAMyD,EAAkBoB,EAAOlqC,KACxCoD,KAAK,UACLuhC,KAAM,cAACqJ,GAAA,EAAD,IACN9I,KAAK,SACLmC,QAAM,QA2CRgK,kBAAmBA,EACnBe,mBAAoBA,EACpBzB,SA1Ba,SAACxtC,I7JzDQ,SAACmsC,EAAKnsC,GAChC,IAAQ6P,EAAuBjG,GAAvBiG,SAAUlG,EAAaC,GAAbD,SAClB,EAAwBkG,IAAWitB,iBAAiBhiB,OAA5Chb,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MACd,IACE,IAAKosC,EAcH,OAbA/uC,IAAM2B,QACJ,8DACA,CACEE,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAU7D,SAGdiO,EAAS8yB,GAAwB,KAGnC,IAAM7P,EAAkBuf,EAAItf,SAASpc,MAAM,KAC3CrL,GAAoBtF,EAAMC,EAAOC,EAAS4sB,EAAgB,IAC1D,MAAOxwB,GACPG,QAAQC,IAAIJ,I6JmCZwvD,CAAqCI,EAA4BhsD,IA0B/D8a,OAAQA,EACR6qC,aAAcra,EACd7f,uBAAwBA,EACxBwgC,0BAA2BA,EAC3BH,iBA3B2B,SAACj/B,GAC9B,GAAKA,EAAL,CAKA,IAAMD,EAAkBC,EAASpc,MAAM,KACvCm7C,GACE9rD,EACAC,EACA,GACA6sB,EAAgB,SAThBjjB,EAASiiD,GAAgD,WAwEhDhjB,gBAAU,CACvB3J,KAAM,wBADO2J,CAEZH,ICpLK8J,GAAWC,KAAXD,OA4DO2Z,GA1De,SAAC5rB,GAC7B,IACEziC,EAKEyiC,EALFziC,QACA6/B,EAIE4C,EAJF5C,iBAEA8P,GAEElN,EAHF0S,kBAGE1S,EAFFkN,UACAznB,EACEua,EADFva,kBAGF,OACE,qBAAKnpB,MAAM,eAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,OAAX,SACE,oBAAIA,MAAM,kBAAV,0BAAuCmpB,EAAkB5Z,UAK3D,sBAAKvP,MAAM,0CAAX,UACE,qBAAKA,MAAM,WAAX,SACE,qBAAKA,MAAM,gBAAX,SACE,cAAC,KAAD,CAAM2kC,GAAI,QAAV,SACE,cAAC,GAAD,CACEthC,KAAK,UACLuhC,KAAM,cAAC2Y,GAAA,EAAD,IACNpY,KAAK,SACLmC,QAAM,EAJR,2BAWN,qBAAKtnC,MAAM,gBAAX,SACE,cAAC,GAAD,CACEuP,KAAK,UACL21B,YAAY,OACZ0L,SAAUA,EACVqF,aAAW,SAIjB,qBAAKj2C,MAAM,mBAAX,SACE,cAAC,GAAD,CAAYH,KAAMihC,EAAkB7/B,QAASA,oBCwBzD4qC,GAAmBzF,mBAPD,SAACvE,GAAD,MAAY,CAClCtoB,MAAOsoB,EAAMtoB,MACb2oB,aAAcL,EAAMK,aACpBktB,2BAA4Bzf,aAAc,uBAAdA,CAAsC9N,OAEzC,SAAC90B,GAAD,MAAe,KAEjBq5B,EAvEK,SAAC1C,GAC7B,IACWva,EAIPua,EAJFnqB,MAAS4P,kBACO2X,EAGd4C,EAHFxB,aAAgBpB,iBAGd4C,EAFF/kB,gBAEE+kB,EADFqF,kBAGmB/7B,GAAbD,SAGJ+zB,EAAiBhtB,OAAS,GAC5BgtB,EAAiB1xB,KAAI,SAACC,EAAMC,GAC1BwxB,EAAiBxxB,GAAjB,2BACKD,GADL,IAEE65B,GAAI55B,EAAQ,OA6BlBg3B,IAAMG,WAAU,WACd8oB,GAAqD,MAEpD,IAMH,OACE,cAAC,GAAD,CACEtuD,QAnCY,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,WACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE0pB,cAAcjnB,OAAS41B,EAAE3O,cAAcjnB,SAE7D,CACE6G,MAAO,YACP4uB,UAAW,eACX9G,IAAK,eACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEsc,aAAa7Z,OAAS41B,EAAE/b,aAAa7Z,UAgBzDqV,kBAAmBA,EACnB2X,iBAAkBA,EAClB8P,SATa,SAACxtC,UA2BL4oC,gBAAU,CACvB3J,KAAM,gBADO2J,CAEZH,ICKY2jB,GAlFe,SAAC9rB,GAC7B,IACEziC,EAMEyiC,EANFziC,QACAg7B,EAKEyH,EALFzH,uBAEA/d,GAGEwlB,EAJF2O,mBAIE3O,EAHFxlB,QACA0yB,EAEElN,EAFFkN,SACAG,EACErN,EADFqN,uBAIO7yB,EAAOC,UAAYD,EAAO/a,MACxB+a,EAAOhb,KACNgb,EAAO/a,MAInB,OACE,qBAAKnD,MAAM,eAAX,SACE,qBAAKA,MAAM,OAAX,SACE,qBAAKA,MAAM,MAAX,SACE,qBAAKA,MAAM,qCAAX,SACE,qBAAKA,MAAM,OAAX,SACE,sBAAKA,MAAM,YAAX,UACE,qBAAKA,MAAM,6DAAX,SACE,oBAAIA,MAAM,kBAAV,kCAGF,sBAAKA,MAAM,8BAAX,UACE,qBAAKA,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,YAAYnB,MAAM,WAEtC,qBAAKpO,MAAM,WAAX,SACE,cAAC,GAAD,CAAauP,KAAK,UAAUnB,MAAM,aAEpC,qBAAKpO,MAAM,gBAAX,SACE,cAACwrC,GAAA,EAAD,CACEj8B,KAAK,UACLnB,MAAM,cACN+zB,UAAWmI,GACXjnC,KAAK,WAGT,qBAAKrD,MAAM,gBAAX,SACE,sBAAKA,MAAM,aAAX,UACE,cAAC,GAAD,CACEslC,QAASsL,EACTvtC,KAAK,UACLuhC,KAAM,cAACsM,GAAA,EAAD,IACN/L,KAAK,SAJP,kBAQA,qBAAKnlC,MAAM,SACX,cAAC,GAAD,CACEslC,QAASyL,EACT1tC,KAAK,UACLuhC,KAAM,cAACqM,GAAA,EAAD,IACN9L,KAAK,SAJP,mCAWN,qBAAKnlC,MAAM,mBAAX,SACE,cAAC,KAAD,CACEgoC,UAAQ,EACRC,QAAShnC,EACTinC,WAAYjM,EACZkJ,KAAM,0BCoHpB0G,GAAmBzF,mBAhBD,SAACvE,GAAD,MAAY,CAClCX,aAAcW,EAAMX,aACpB/gB,OAAQ0hB,EAAM1hB,OACdsvC,uBAAwB9f,aAAc,mBAAdA,CAAkC9N,OAEjC,SAAC90B,GAAD,MAAe,CACxC2iD,oBAAqB,SAACxsD,EAAMC,EAAO2I,EAAMC,EAAO3I,GAA3B,OACnBusD,GACEzsD,EACAC,EACAC,EACA0I,EACAC,OAImBq6B,EAtLK,SAAC1C,GAC7B,IACEgsB,EAKEhsB,EALFgsB,oBACApe,EAIE5N,EAJF4N,kBAFF,EAMI5N,EAHFxC,aAAgBK,EAHlB,EAGkBA,iBAAkBrjB,EAHpC,EAGoCA,OACxB0N,EAER8X,EAFFvjB,OAAUyL,mBACV6jC,EACE/rB,EADF+rB,uBAGMvsD,EAA2Bgb,EAA3Bhb,KAAMC,EAAqB+a,EAArB/a,MAAOgb,EAAcD,EAAdC,UAEfwzB,EAAc,CAClBpQ,mBACAz1B,KAAM+M,OACN9M,MAAO8M,QAGL0oB,EAAiBztB,OAAS,GAC5BytB,EAAiBnyB,KAAI,SAACC,EAAMC,GAC1BiyB,EAAiBjyB,GAAjB,2BACKD,GADL,IAEE65B,GAAI55B,EAAQ,OAKlB,IAAMrO,EAAU,CACd,CACE0Z,MAAO,KACP4uB,UAAW,KACX9G,IAAK,KACLwB,MAAO,KACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE63B,GAAKQ,EAAER,KAE7B,CACEvuB,MAAO,gBACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE4sB,cAAcnqB,OAAS41B,EAAEzL,cAAcnqB,SAE7D,CACE6G,MAAO,cACP4uB,UAAW,aACX9G,IAAK,aACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEs4B,WAAW71B,OAAS41B,EAAEC,WAAW71B,QACrD81B,OAAQ,SAACD,GACP,OACE,cAAC,KAAD,CAAKhD,MAAO,CAAE1C,MAAO,IAAK+F,UAAW,UAAY15B,MAAO,UAAxD,SACE,cAAC,KAAD,CAAYq2B,MAAO,CAAEmY,WAAY,QAAjC,SACGnV,EAAU,UAAMA,GAAe,UAM1C,CACEhvB,MAAO,MACP4uB,UAAW,eACX9G,IAAK,eACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEwgC,aAAa/9B,OAAS41B,EAAEmI,aAAa/9B,SAE3D,CACE6G,MAAO,gBACP4uB,UAAW,gBACX9G,IAAK,gBACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEmvB,cAAc1sB,OAAS41B,EAAElJ,cAAc1sB,SAE7D,CACE6G,MAAO,SACP4uB,UAAW,UACX9G,IAAK,UACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE+vB,QAAQttB,OAAS41B,EAAEtI,QAAQttB,SAEjD,CACE6G,MAAO,YACP4uB,UAAW,cACX9G,IAAK,cACLmH,OAAQ,SAACgmB,GACP,OACE,cAAC,KAAD,CAAKjpB,MAAO,CAAE1C,MAAO,GAAI+F,UAAW,UAAY15B,MAAO,UAAvD,SACGs/C,EAAW,UAAMA,EAAN,QAA0B,OAI5C3rB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEu+C,YAAclmB,EAAEkmB,cAEtC,CACEj1C,MAAO,SACP4uB,UAAW,SACX9G,IAAK,SACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAE3R,OAAOoU,OAAS41B,EAAEhqC,OAAOoU,QAC7C81B,OAAQ,SAAClqC,GACP,IAAI4Q,EAAQC,GAAsB7Q,GAAQ4Q,MAC1C,OACE,cAAC,KAAD,CAAKq2B,MAAO,CAAE1C,MAAO,IAAK+F,UAAW,UAAY15B,MAAOA,EAAxD,SACG5Q,EAAS6Q,GAAsB7Q,GAAQyO,MAAQ,QAKxD,CACEwM,MAAO,kBACP4uB,UAAW,OACX9G,IAAK,OACLwB,MAAO,MACPwF,OAAQ,SAACp4B,EAAGq4B,GAAJ,OAAUr4B,EAAEgwB,KAAKvtB,OAAS41B,EAAErI,KAAKvtB,UAIvCm+B,EAAe,GACrBrmB,EAAmBxc,KAAI,SAACC,EAAMC,GAC5B2iC,EAAa9kC,KAAK,CAChBlN,GAAG,UAAD,OAAYqP,GACdnB,MAAOkB,EAAKpP,GACZmO,MAAOiB,EAAKE,UAIhB+2B,IAAMG,WAAU,WACdipB,EAAoBxsD,EAAMC,GAC1BwlC,GAAyC,EAAG,MAAO,IAAI,KACtD,IAEH,IAAM0J,EAAkB,uCAAG,WAAOC,EAAUC,GAAjB,eAAAlhC,EAAA,6DACnB6M,EAAS,IACRhb,KAAOovC,EACdp0B,EAAO/a,MAAQovC,EACfr0B,EAAOC,UAAYA,EAJM,SAKnBnR,GAAMD,SACV4iD,GAAgDzxC,IANzB,OAQzBwxC,EAAoBpd,EAAUC,GARL,2CAAH,wDAmBxB,OACE,cAAC,GAAD,aACEtxC,QAASA,EACTg7B,uBAAwBsF,EACxB+P,kBAAmBA,EACnBe,mBAAoBA,EACpBn0B,OAAQA,EACR4yB,eAAgBpgC,GAChBmgC,WAAYoB,EACZrB,SAjBa,WACf+e,GAAiCF,IAiB/B1e,uBAd2B,YC3JU,SAAClxC,EAAM2R,GAChD,IAAQ+vB,EAAkC1hC,EAAlC0hC,iBAAkBz1B,EAAgBjM,EAAhBiM,KAAMC,EAAUlM,EAAVkM,MAC1B+M,EAAYD,KAAO/M,GAAMiN,OAAO,cAChCE,EAAUJ,KAAO9M,GAAOgN,OAAO,cAC/B82C,EAAmB,GAEzBtuB,EAAiBnyB,KAAI,SAACC,EAAMC,GAC1BugD,EAAiB1iD,KAAK,CACpB+7B,GAAI55B,EAAQ,EACZwgD,YAAazgD,EAAKwiC,aAClBke,aAAc1gD,EAAK4uB,cACnB+xB,UAAW3gD,EAAKs6B,WAChBtW,aAAchkB,EAAKmxB,cACnBn9B,KAAMgM,EAAK0iC,SACXke,WAAY5gD,EAAKugD,YACjBlwD,OAAQ2P,EAAK3P,OAAS6Q,GAAsBlB,EAAK3P,QAAQyO,MAAQ,IACjEwkC,YAAatjC,EAAK+xB,QAClB8uB,SAAU7gD,EAAKgyB,UAInB,IAAMuR,EAAM,IAAIC,WAiBhB,GAfAD,EAAIE,YAAY,IAChBF,EAAIG,QAAQ,WACZH,EAAI1I,KAAK,qBAAsB,IAAK,GAAI,UACxC0I,EAAIE,YAAY,IAChBF,EAAI1I,KAAK,WAAY,IAAK,GAAI,UAE9B0I,EAAIE,YAAY,IAGhBF,EAAI1I,KAAK,GAAI,GAAb,gBACA0I,EAAI1I,KAAJ,mBAAcpxB,QAAd,IAAcA,IAAa,KAAO,GAAI,IACtC85B,EAAI1I,KAAK,GAAI,GAAb,kBACA0I,EAAI1I,KAAJ,mBAAcjxB,QAAd,IAAcA,IAAW,KAAO,GAAI,IAGhCzH,GACEA,EAAO2O,OAAQ,CAAC,IAAD,EACXmG,EAAc9U,EAAO2O,OAAOtM,MAAM,KACxC++B,EAAI1I,KAAK,GAAI,GAAb,UACA0I,EAAI1I,KAAJ,sBAAc5jB,EAAY,UAA1B,QAAgC,KAAO,GAAI,IAyC/CssB,EAAImB,UAAU,CACZC,OAAQxiC,EAAS,GAAK,GACtByiC,KAAM4b,EACN3b,MAAO,QACPC,KAlBgB,CAChB,CACE,KACA,MACA,gBACA,cACA,gBACA,SACA,YACA,SACA,oBASFC,WAAY,CAAER,OAAQ,SAAUS,OAAQ,UACxChB,OAAQ,CAAEiB,SAAU,YAAapJ,SAAU,EAAGqJ,YAAa,QAC3DtM,QAAS,CACP,CAAEuM,OAAQ,KAAMC,QAAS,MACzB,CAAED,OAAQ,MAAOC,QAAS,eAC1B,CAAED,OAAQ,gBAAiBC,QAAS,gBACpC,CAAED,OAAQ,cAAeC,QAAS,aAClC,CAAED,OAAQ,gBAAiBC,QAAS,gBACpC,CAAED,OAAQ,SAAUC,QAAS,eAC7B,CAAED,OAAQ,YAAaC,QAAS,cAChC,CAAED,OAAQ,SAAUC,QAAS,UAC7B,CAAED,OAAQ,kBAAmBC,QAAS,aAExCC,aAtDe,SAACzB,KAuDhBC,aA9CmB,SAACD,GACpB,IAAIE,EAAIF,EAASG,KAAKC,OACtBF,EAAEG,UAAY,CAAC,EAAG,EAAG,GACrBH,EAAEI,UAAY,GACdJ,EAAEK,KAAO,WA2CTmB,aAAc,CACZ,EAAG,CAAEJ,YAAa,IAClB,EAAG,CAAEA,YAAa,KAOpBK,eAAgB,CAAC,EAAG,EAAG,GACvBC,eAAgB,KAIlBjC,EAAIkC,KAAK,qBDuCPqb,CAA4Bxe,EAAa8d,KAenC/rB,OA0BKsI,gBAAU,CACvB3J,KAAM,oBADO2J,CAEZH,IEkFYtG,iBA/OI,WACjB,IAAM6qB,EAAoB,SACxBjuB,EACAkuB,GAII,IAHJ7X,EAGG,uDAHQ,GACXC,EAEG,wDADHf,EACG,uCACH,OAAOY,GACLxR,GAAawpB,GAAmBnuB,EAAWkuB,EAAW3Y,GACtDc,EACAC,IAIE8X,EAAa,SAACpuB,EAAWuD,GAC7B,OAAOoB,GAAawpB,GAAmBnuB,EAAWuD,IAG9C8qB,EAAQD,EAAWE,IAAgB,GACnCpY,EAAWkY,EAAWG,IAAc,GACpCC,EAAQP,EAAkBQ,IAAgB,EAAM,UAAU,GAC1DC,EAAQT,EAAkBU,IAAgB,EAAM,SAAS,GACzDC,EAAWX,EACfY,IACA,EACA,aACA,GAEIC,EAAWb,EAAkBc,IAAiB,EAAM,WAAW,GAC/DC,EAAef,EACnBgB,IACA,EACA,cACA,GAEIC,EAAgBjB,EACpBkB,IACA,EACA,kBAEIC,EAAWnB,EACfoB,IACA,EACA,aACA,GAEIC,EAAerB,EACnBsB,IACA,EACA,kBAEIC,EAAevB,EACnBwB,IACA,EACA,kBAEIC,EAAYzB,EAChB0B,IACA,EACA,cACA,GAEIC,EAAQ3B,EAAkB4B,IAAgB,EAAM,SAAS,GACzDC,EAAa7B,EACjB8B,IACA,EACA,gBAEIC,EAAa/B,EACjBgC,IACA,EACA,gBAEIC,EAAejC,EACnBkC,IACA,EACA,mBAEIC,EAAmBnC,EACvBoC,IACA,EACA,uBAEIC,EAAQrC,EAAkBsC,IAAgB,EAAM,UAChDC,EAAYvC,EAAkBwC,IAAmB,EAAM,aACvDC,EAAezC,EACnB0C,IACA,EACA,aACA,GAEIC,EAAuB3C,EAC3B4C,IACA,EACA,YACA,GAEIC,EAAkB7C,EACtB8C,IACA,EACA,qBACA,GAEIC,EAAkB/C,EACtBgD,IACA,EACA,qBACA,GAEIC,EAAqBjD,EACzBkD,IACA,EACA,wBACA,GAEIC,EAAsBnD,EAC1BoD,IACA,EACA,iBACA,GAEIC,EAAiBrD,EACrBsD,IACA,EACA,oBACA,GAEIC,EAAevD,EACnBwD,IACA,EACA,kBACA,GAEIC,EAAezD,EACnB0D,IACA,EACA,iBACA,GAEIC,EAAuB3D,EAC3B4D,IACA,EACA,0BACA,GAEIC,EAAgB7D,EACpB8D,IACA,EACA,oBAEIC,EAA2B/D,EAC/BgE,IACA,EACA,wBAEIC,EAAqBjE,EACzBkE,IACA,EACA,mBACA,GAGF,OACE,qCACE,cAACC,GAAA,EAAD,CAAQC,cAAc,eAAeC,aAAa,cAClD,cAAC,IAAD,CACEC,QAAS,IACTC,aAAa,EACbC,mBAAmB,EACnBvyD,SAAS,YACTwyD,aAAa,SACbC,cAAc,UACdC,aAAa,EACbC,oBAAoB,IAEtB,cAAC,IAAD,CAAgB1yD,UAAW,MAC3B,cAAC,KAAD,UACE,eAAC,KAAD,WACE,cAAC,KAAD,CAAO2yD,OAAK,EAAC/nD,KAAK,IAAIi1B,UAAW0vB,IACjC,cAAC,KAAD,CAAOoD,OAAK,EAAC/nD,KAAK,aAAai1B,UAAW0vB,IAC1C,cAAC,KAAD,CAAOoD,OAAK,EAAC/nD,KAAK,QAAQi1B,UAAWquB,IACrC,cAAC,KAAD,CAAOyE,OAAK,EAAC/nD,KAAK,SAASi1B,UAAWwuB,IACtC,cAAC,KAAD,CAAOsE,OAAK,EAAC/nD,KAAK,QAAQi1B,UAAW0uB,IACrC,cAAC,KAAD,CAAOoE,OAAK,EAAC/nD,KAAK,UAAUi1B,UAAW8uB,IACvC,cAAC,KAAD,CAAOgE,OAAK,EAAC/nD,KAAK,WAAWi1B,UAAW4wB,IACxC,cAAC,KAAD,CAAOkC,OAAK,EAAC/nD,KAAK,YAAYi1B,UAAW4uB,IACzC,cAAC,KAAD,CAAOkE,OAAK,EAAC/nD,KAAK,QAAQi1B,UAAW4vB,IACrC,cAAC,KAAD,CAAOkD,OAAK,EAAC/nD,KAAK,eAAei1B,UAAW8vB,IAC5C,cAAC,KAAD,CAAOgD,OAAK,EAAC/nD,KAAK,eAAei1B,UAAWgwB,IAC5C,cAAC,KAAD,CAAO8C,OAAK,EAAC/nD,KAAK,kBAAkBi1B,UAAWkwB,IAC/C,cAAC,KAAD,CACE4C,OAAK,EACL/nD,KAAK,sBACLi1B,UAAWowB,IAEb,cAAC,KAAD,CAAO0C,OAAK,EAAC/nD,KAAK,SAASi1B,UAAWswB,IACtC,cAAC,KAAD,CAAOwC,OAAK,EAAC/nD,KAAK,YAAYi1B,UAAWwwB,IACzC,cAAC,KAAD,CAAOsC,OAAK,EAAC/nD,KAAK,YAAYi1B,UAAW0wB,IACzC,cAAC,KAAD,CAAOoC,OAAK,EAAC/nD,KAAK,aAAai1B,UAAWgvB,IAC1C,cAAC,KAAD,CAAO8D,OAAK,EAAC/nD,KAAK,YAAYi1B,UAAWovB,IACzC,cAAC,KAAD,CAAO0D,OAAK,EAAC/nD,KAAK,iBAAiBi1B,UAAWsvB,IAC9C,cAAC,KAAD,CAAOwD,OAAK,EAAC/nD,KAAK,iBAAiBi1B,UAAWwvB,IAC9C,cAAC,KAAD,CAAOsD,OAAK,EAAC/nD,KAAK,oBAAoBi1B,UAAW8wB,IACjD,cAAC,KAAD,CAAOgC,OAAK,EAAC/nD,KAAK,oBAAoBi1B,UAAWgxB,IACjD,cAAC,KAAD,CAAO8B,OAAK,EAAC/nD,KAAK,kBAAkBi1B,UAAWkvB,IAC/C,cAAC,KAAD,CACE4D,OAAK,EACL/nD,KAAK,sBACLi1B,UAAW0sB,KAEb,cAAC,KAAD,CACEoG,OAAK,EACL/nD,KAAK,uBACLi1B,UAAWkxB,IAEb,cAAC,KAAD,CAAO4B,OAAK,EAAC/nD,KAAK,gBAAgBi1B,UAAWoxB,IAC7C,cAAC,KAAD,CAAO0B,OAAK,EAAC/nD,KAAK,gBAAgBi1B,UAAW0xB,IAC7C,cAAC,KAAD,CAAOoB,OAAK,EAAC/nD,KAAK,mBAAmBi1B,UAAW8xB,IAChD,cAAC,KAAD,CAAOgB,OAAK,EAAC/nD,KAAK,mBAAmBi1B,UAAWsxB,IAChD,cAAC,KAAD,CAAOwB,OAAK,EAAC/nD,KAAK,iBAAiBi1B,UAAWwxB,IAC9C,cAAC,KAAD,CACEsB,OAAK,EACL/nD,KAAK,yBACLi1B,UAAW4xB,IAEb,cAAC,KAAD,CACEkB,OAAK,EACL/nD,KAAK,uBACLi1B,UAAWgyB,IAEb,cAAC,KAAD,CAAOc,OAAK,EAAC/nD,KAAK,kBAAkBi1B,UAAWkyB,IAC/C,cAAC,KAAD,CAAOnnD,KAAM,IAAKi1B,UAAWkW,eC/PxB6c,OAdf,YACE,OADwB,EAAXC,QAEX,cAAC,WAAD,CAAUnoD,MAAOA,GAAjB,SACE,cAAC,KAAD,CAAa+2B,QAAS,KAAMV,UAAWA,GAAvC,SACE,cAAC,IAAD,CAAiB/kC,QAASA,EAA1B,SACE,cAAC,KAAD,UACE,cAAC,GAAD,aCJG82D,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,+BAAqB3jD,MAAK,YAAkD,IAA/C4jD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAAShsB,OACP,cAAC,IAAMisB,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.6c5ab50f.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL || \"\",\n  // forceRefresh: true,\n});\nexport default history;\n","// import * as ActionAuth from \"../../Auth/Store/AuthAction\";\n// import * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\n\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { toastr } from \"react-redux-toastr\";\n\n// function* getToken() {\n//   return yield select(AuthSelector.Token());\n// }\n\n// export function* getCommonConfigHeader() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n// }\n// export function* getCommonConfigHeaderFormData() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"multipart/form-data\",\n//     },\n//   };\n// }\n\nexport function* handleErrorProcess(action) {\n  let toastMessage;\n\n  if (!action.errorData.response || action.errorData.response === undefined) {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        window.location.reload();\n      },\n      okText: \"Ya\",\n      disableCancel: true,\n    };\n\n    toastr.confirm(\n      \"Koneksi terputus, cek koneksi anda dan dimuat ulang\",\n      toastrConfirmOptions\n    );\n  }\n\n  if (action.errorData.response) {\n    const error = action.errorData;\n    const responseStatus = error?.response.status;\n    if (responseStatus === 401) {\n      // yield put(ActionAuth.renewToken(action));\n      console.log(\"=== Token Expired!\");\n    } else if (responseStatus === 500) {\n      if (error.response.data.ErrorCode === \"4201\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      }\n      if (error.response.data.ErrorCode === \"5100\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      } else {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error.response.data.MessageKey} />\n          </span>\n        );\n      }\n    } else if (responseStatus === 403) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={\"forbiddenError\"} />\n        </span>\n      );\n    } else {\n      try {\n        const dataErr = error.response.data?.Data?.Failures[0]?.ErrorKey;\n        if (dataErr) {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id={dataErr} />\n            </span>\n          );\n        } else {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id=\"unknownError\" />\n            </span>\n          );\n        }\n      } catch (error) {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error} />\n          </span>\n        );\n      }\n    }\n  } else {\n    if (action.errorData.response.data.Message) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={action.errorData.response.data.Message} />\n        </span>\n      );\n    }\n  }\n  if (toastMessage) {\n    toast.error(toastMessage);\n  }\n}\n\nexport function* handleErrorAction() {\n  yield takeEvery(\"HANDLE_ERROR_SAGA\", handleErrorProcess);\n}\n","import { all, fork } from \"redux-saga/effects\";\n// import {\n//   getUserDetailAction,\n//   loginUserAction,\n//   registerUserAction,\n//   updateUserAction,\n// } from \"../../Auth/Saga/AuthSaga\";\nimport { handleErrorAction } from \"../../app/Saga/AppSaga\";\n\nexport default function* () {\n  yield all([\n    fork(handleErrorAction),\n    // fork(registerUserAction),\n    // fork(getUserDetailAction),\n    // fork(loginUserAction),\n    // fork(updateUserAction),\n  ]);\n}\n","// First we need to import axios.js\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\n\n// Next we make an 'instance' of it\nconst ConfigAxios = axios.create({\n  // .. where we make our configurations\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Authorization\",\n  },\n  timeout: 15000,\n});\nConfigAxios.defaults.headers.delete = {\n  \"Content-Type\": \"application/json\",\n};\n\n// Where you would set stuff like your 'Authorization' header, etc ...\n// ConfigAxios.defaults.headers.common[\"Authorization\"] =\n//   \"AUTH TOKEN FROM INSTANCE\";\n\n// Also add/ configure interceptors && all the other cool stuff\nConfigAxios.interceptors.request.use(\n  (requestFulfilled) => {\n    if (requestFulfilled.method === \"get\") {\n      requestFulfilled.data = true;\n    }\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(requestFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-request-fulfilled\",\n        JSON.parse(JSON.stringify(requestFulfilled))\n      );\n    }\n    return Promise.resolve(requestFulfilled);\n  },\n  (requestRejected) => {\n    if (!_.isEmpty(requestRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-request-rejected\",\n          JSON.parse(\n            JSON.stringify(requestRejected.response || requestRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(requestRejected);\n  }\n);\n\nConfigAxios.interceptors.response.use(\n  (responseFulfilled) => {\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(responseFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-response-fulfilled\",\n        JSON.parse(JSON.stringify(responseFulfilled))\n      );\n    }\n    return Promise.resolve(responseFulfilled);\n  },\n  (responseRejected) => {\n    if (responseRejected.response && responseRejected.response.data) {\n      if (responseRejected.response.data.status === 400) {\n        toast.warning(responseRejected.response.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      } else {\n        toast.error(\"Request Timeout!\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n    if (!_.isEmpty(responseRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-response-rejected\",\n          JSON.parse(\n            JSON.stringify(responseRejected.response || responseRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(responseRejected);\n  }\n);\n\nexport default ConfigAxios;\n","import ConfigAxios from \"./ConfigAxios\";\n\nconst Invoke = {};\nconst headersConfigDelete = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  data: {},\n};\n\nInvoke.submitLogin = (data) => {\n  return ConfigAxios.post(\"/login\", data);\n};\n\nInvoke.submitLoginEmployee = (data) => {\n  return ConfigAxios.post(\"/m_auth\", data);\n};\n\nInvoke.getListServices = (page, limit, keyword, type, status, employeeId) => {\n  return ConfigAxios.get(\n    `/services?page=${page}&limit=${limit}&q=${keyword}&type=${type}&status=${status}&employeeId=${employeeId}`\n  );\n};\n\nInvoke.deleteJobServiceById = (jobId) => {\n  return ConfigAxios.delete(`/services/${jobId}`, headersConfigDelete);\n};\n\nInvoke.getOneServices = (jobId) => {\n  return ConfigAxios.get(`/services/${jobId}`);\n};\n\n// === Admin API : ===\nInvoke.getListAdmin = (page, limit, keyword = \"\") => {\n  return ConfigAxios.get(`/admins?page=${page}&limit=${limit}&q=${keyword}`);\n};\n\nInvoke.getAdminById = (adminId) => {\n  return ConfigAxios.get(`/admins/${adminId}`);\n};\n\nInvoke.addAdmin = (data) => {\n  return ConfigAxios.post(\"/admins\", data);\n};\n\nInvoke.updateAdmin = (data) => {\n  return ConfigAxios.put(\"/admins\", data);\n};\n\nInvoke.deleteAdminById = (adminId) => {\n  return ConfigAxios.delete(`/admins/${adminId}`, headersConfigDelete);\n};\n// === End Admin API ===\n\n// === Admin - Roles API : ===\nInvoke.getListAdminRoles = (adminId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${adminId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getAdminRolesById = (customerId) => {\n  return ConfigAxios.get(`/admins/roles${customerId}`);\n};\n\nInvoke.addAdminRoles = (data) => {\n  return ConfigAxios.post(\"/admins/roles\", data);\n};\n\nInvoke.updateAdminRoles = (data) => {\n  return ConfigAxios.put(\"/admins/roles\", data);\n};\n\nInvoke.deleteAdminRolesById = (customerId) => {\n  return ConfigAxios.delete(`/admins/roles${customerId}`);\n};\n// === End Admin - Roles API ===\n\n// === Employee - Roles API : ===\nInvoke.getEmployeeRoles = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\n// === Employee - Tools API : ===\nInvoke.getEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/tools/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.addEmployeeRole = (data) => {\n  return ConfigAxios.post(`/employees/roles`, data);\n};\n\nInvoke.deleteEmployeeRole = (id) => {\n  return ConfigAxios.delete(`/employees/roles/${id}`, headersConfigDelete);\n};\n// === End Employee - Roles API ===\n\n// === Customers API ===\nInvoke.getCustomerList = (page, limit, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/customers?page=${page}&limit=${limit}&q=${keyword}&branchId=${branchId}`\n  );\n};\nInvoke.getCustomerById = (customerId) => {\n  return ConfigAxios.get(`/customers/${customerId}`);\n};\n\nInvoke.addCustomer = (data) => {\n  return ConfigAxios.post(\"/customers\", data);\n};\n\nInvoke.updateCustomer = (data) => {\n  return ConfigAxios.put(\"/customers\", data);\n};\n\nInvoke.deleteCustomerById = (customerId) => {\n  return ConfigAxios.delete(`/customers/${customerId}`, headersConfigDelete);\n};\n// === End Customers API ===\n\n// === Employee API === :\nInvoke.getEmployeeList = (\n  page,\n  limit,\n  keyword,\n  roleId,\n  branchId,\n  divisionId\n) => {\n  return ConfigAxios.get(\n    `/employees?page=${page}&limit=${limit}&q=${keyword}&role_id=${roleId}&branch_id=${branchId}&division_id=${divisionId}`\n  );\n};\n\nInvoke.getEmployeeById = (employeeId) => {\n  return ConfigAxios.get(`/employees/${employeeId}`);\n};\n\nInvoke.addEmployee = (data) => {\n  return ConfigAxios.post(\"/employees\", data);\n};\n\nInvoke.updateEmployee = (data) => {\n  return ConfigAxios.put(\"/employees\", data);\n};\n\nInvoke.deleteEmployeeById = (employeeId) => {\n  return ConfigAxios.delete(`/employees/${employeeId}`, headersConfigDelete);\n};\n// === End employee API ===\n\n// === Employee - Tools API : ===\nInvoke.getListEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getEmployeeToolsById = (employeeId) => {\n  return ConfigAxios.get(`/employees/tools${employeeId}`);\n};\n\nInvoke.addEmployeeTools = (data) => {\n  return ConfigAxios.post(\"/employees/tools\", data);\n};\n\nInvoke.updateEmployeeTools = (data) => {\n  return ConfigAxios.put(\"/employees/tools\", data);\n};\n\nInvoke.deleteEmployeeToolsById = (employeeToolsId) => {\n  return ConfigAxios.delete(\n    `/employees/tools/${employeeToolsId}`,\n    headersConfigDelete\n  );\n};\n// === End Employee - Tools API ===\n\n// === Roles API ===\nInvoke.getListRole = (page, limit) => {\n  return ConfigAxios.get(`/roles?page=${page}&limit=${limit}`);\n};\nInvoke.getRoleById = (customerId) => {\n  return ConfigAxios.get(`/roles/${customerId}`);\n};\n\nInvoke.addRole = (data) => {\n  return ConfigAxios.post(\"/roles\", data);\n};\n\nInvoke.updateRole = (data) => {\n  return ConfigAxios.put(\"/roles\", data);\n};\n\nInvoke.deleteRoleById = (roleId) => {\n  return ConfigAxios.delete(`/roles/${roleId}`, headersConfigDelete);\n};\n// === End Roles API ===\n\n// === Master Province API === :\nInvoke.getProvinceList = (page, limit) => {\n  return ConfigAxios.get(`/provinces?page=${page}&limit=${limit}`);\n};\n// === End Master Province API ===\n\n// === Master Cities API === :\nInvoke.getCityList = (page, limit, provinceId) => {\n  return ConfigAxios.get(\n    `/provinces/cities/${provinceId}?page=${page}&limit=${limit}`\n  );\n};\n// === End Master Cities API ===\n\n// === Dashboard API ===\nInvoke.getDashboardProgressData = (data) => {\n  return ConfigAxios.get(\"/dashboards\", data);\n};\n// === End Dashboard API ===\n\n// === Services API ===\nInvoke.addInternalService = (data) => {\n  return ConfigAxios.post(\"/services\", data);\n};\nInvoke.updateJobService = (data) => {\n  return ConfigAxios.put(\"/services\", data);\n};\nInvoke.setFinishedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/finish/${jobId}`);\n};\nInvoke.setApprovedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/approve/${jobId}`);\n};\nInvoke.setRejectedService = (jobId, payload) => {\n  return ConfigAxios.post(\n    `/m_services/reject/${jobId}?allowReject=true`,\n    payload\n  );\n};\n// === End Service API ===\n\n// Services - Employee API\nInvoke.getServicesEmployee = (jobId, page, limit) => {\n  return ConfigAxios.get(\n    `/services/employees/${jobId}?page=${page}&limit=${limit}`\n  );\n};\nInvoke.addNewEmployeeService = (jobId, payload) => {\n  return ConfigAxios.post(`/services/employees/${jobId}`, payload);\n};\nInvoke.setStatusEmployeeService = (jobId, payload) => {\n  return ConfigAxios.put(\n    `/services/employees/${jobId}`,\n    payload,\n    headersConfigDelete\n  );\n};\n// End Services - Employee API\n\n// === Service - Views API ===\nInvoke.getJobServiceSummary = (jobId, unitId) => {\n  return ConfigAxios.get(\n    `/m_services/summary/${jobId}${unitId ? \"/\" + unitId : \"\"}`\n  );\n};\nInvoke.getJobServiceMedia = (jobId, unitId) => {\n  return ConfigAxios.get(\n    `/services/medias/${jobId}${unitId ? \"/\" + unitId : \"\"}`\n  );\n};\nInvoke.getJobServiceDailies = (jobId, unitId) => {\n  return ConfigAxios.get(`/services/dailies/${jobId}/${unitId}`);\n};\nInvoke.updateJobServiceDailies = (payload) => {\n  return ConfigAxios.put(`/services/dailies`, payload);\n};\nInvoke.getChecklistData = (unitModelId) => {\n  return ConfigAxios.get(`/m_services/checklist/${unitModelId}`);\n};\nInvoke.getRejectedData = (jobId) => {\n  return ConfigAxios.get(`/m_services/reject/${jobId}`);\n};\nInvoke.getJobServiceHistories = (jobId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/services/logs/${jobId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addJobServiceMedia = (payload, jobId, unitId) => {\n  return ConfigAxios.post(\n    `/m_services/media/${jobId}${unitId ? \"/\" + unitId : \"\"}`,\n    payload\n  );\n};\nInvoke.addJobServiceDaily = (payload, jobId) => {\n  return ConfigAxios.post(`/m_services/daily/${jobId}`, payload);\n};\nInvoke.updateSummary = (payload, jobId, unitId) => {\n  return ConfigAxios.put(\n    `/m_services/summary/${jobId}${unitId ? \"/\" + unitId : \"\"}`,\n    payload\n  );\n};\nInvoke.setJobToProgress = (jobId) => {\n  return ConfigAxios.get(`/m_services/progress/${jobId}`);\n};\nInvoke.updateChecklist = (payload, unitId) => {\n  return ConfigAxios.put(`/m_services/checklist/${unitId}`, payload);\n};\n\n// === End Service Views ===\n\n// === Master Unit API === :\nInvoke.getUnitList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/units?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addUnit = (payload) => {\n  return ConfigAxios.post(`/units`, payload);\n};\nInvoke.updateUnit = (payload) => {\n  return ConfigAxios.put(`/units`, payload);\n};\nInvoke.deleteUnitById = (unitId) => {\n  return ConfigAxios.delete(`units/${unitId}`, headersConfigDelete);\n};\n// === End Master Unit API ===\n\n// === Master unit-model API === :\nInvoke.getListUnitModel = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/models/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addUnitSerialNumber = (payload, unitModelId) => {\n  return ConfigAxios.post(`/units/serial/${unitModelId}`, payload);\n};\nInvoke.updateUnitSerialNumber = (payload, unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.put(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    payload\n  );\n};\nInvoke.deleteUnitSerialNumber = (unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.delete(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    headersConfigDelete\n  );\n};\nInvoke.getUnitSerialNumber = (\n  page,\n  limit,\n  keyword,\n  unitModelId,\n  customerId\n) => {\n  return ConfigAxios.get(\n    `/units/serial/${unitModelId}?page=${page}&limit=${limit}&q=${keyword}&customerId=${customerId}`\n  );\n};\nInvoke.addUnitModel = (payload) => {\n  return ConfigAxios.post(`/units/models`, payload);\n};\nInvoke.updateUnitModel = (payload) => {\n  return ConfigAxios.put(`/units/models`, payload);\n};\nInvoke.deleteUnitModelById = (unitModelId) => {\n  return ConfigAxios.delete(`units/models/${unitModelId}`, headersConfigDelete);\n};\n// === End Master Unit-Model API ===\n\n// === Master unit-fields API === :\nInvoke.getListUnitFields = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/fields/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.getListUnitJobForms = (unitId, jobFormId) => {\n  return ConfigAxios.get(`/units/job_forms/${unitId}?job_form_id=${jobFormId}`);\n};\nInvoke.addUnitFields = (payload) => {\n  return ConfigAxios.post(`/units/fields`, payload);\n};\nInvoke.updateUnitFields = (payload) => {\n  return ConfigAxios.put(`/units/fields`, payload);\n};\nInvoke.deleteUnitFieldsById = (unitfieldsId) => {\n  return ConfigAxios.delete(\n    `units/fields/${unitfieldsId}`,\n    headersConfigDelete\n  );\n};\n// === End Master Unit-Model API ===\n\n// === Master Job-Form API === :\nInvoke.getListJobForm = (page, limit, keyowrd) => {\n  return ConfigAxios.get(`job_forms?page=${page}&limit=${limit}&q=${keyowrd}`);\n};\nInvoke.addJobForms = (payload) => {\n  return ConfigAxios.post(`job_forms`, payload);\n};\nInvoke.updateJobForms = (payload) => {\n  return ConfigAxios.put(`job_forms`, payload);\n};\nInvoke.deleteJobForms = (jobFormsId) => {\n  return ConfigAxios.delete(`job_forms/${jobFormsId}`, headersConfigDelete);\n};\n// === End Job-Form API ===\n\n// === Master Branch API === :\nInvoke.getListBranch = (page, limit, keyword) => {\n  return ConfigAxios.get(`/branches?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.deleteBranchById = (branchId) => {\n  return ConfigAxios.delete(`/branches/${branchId}`, headersConfigDelete);\n};\nInvoke.addBranch = (payload) => {\n  return ConfigAxios.post(`/branches`, payload);\n};\nInvoke.updateBranch = (payload) => {\n  return ConfigAxios.put(`/branches`, payload);\n};\n// === End Branch API ===\n\n// === Master Menu API === :\nInvoke.getListMenu = (page, limit) => {\n  return ConfigAxios.get(`/menus?page=${page}&limit=${limit}`);\n};\n// === End Menu API ===\n\n// === Master Menu - Roles API === :\nInvoke.addMenuRole = (payload) => {\n  return ConfigAxios.post(`/menus/roles`, payload);\n};\n\nInvoke.getMenuByRoleId = (roleId) => {\n  return ConfigAxios.get(`/menus/menu_by_role/${roleId}`);\n};\n\nInvoke.deleteMenuByMenuRoleId = (menuRoleId) => {\n  return ConfigAxios.delete(`menus/roles/${menuRoleId}`, headersConfigDelete);\n};\n// === End Menu - Roles API ===\n\n// === Master Engines API === :\nInvoke.getListEngine = (page, limit, keyword) => {\n  return ConfigAxios.get(`/engines?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addEngine = (payload) => {\n  return ConfigAxios.post(`/engines`, payload);\n};\nInvoke.updateEngine = (payload) => {\n  return ConfigAxios.put(`/engines`, payload);\n};\nInvoke.deleteEngine = (machineId) => {\n  return ConfigAxios.delete(`/engines/${machineId}`, headersConfigDelete);\n};\n// === End Engines API ===\n\n// === Master Tools API === :\nInvoke.getListTools = (page, limit, keyword) => {\n  return ConfigAxios.get(`/tools?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addTool = (payload) => {\n  return ConfigAxios.post(`/tools`, payload);\n};\nInvoke.updateTool = (payload) => {\n  return ConfigAxios.put(`/tools`, payload);\n};\nInvoke.deleteTool = (toolId) => {\n  return ConfigAxios.delete(`/tools/${toolId}`, headersConfigDelete);\n};\n// === End Tools API ===\n\n// === Master FormCategory API === :\nInvoke.getFormCategory = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/category_forms?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addFormCategory = (payload) => {\n  return ConfigAxios.post(`/category_forms`, payload);\n};\nInvoke.updateFormCategory = (payload) => {\n  return ConfigAxios.put(`/category_forms`, payload);\n};\nInvoke.deleteFormCategory = (categoryFormId) => {\n  return ConfigAxios.delete(\n    `/category_forms/${categoryFormId}`,\n    headersConfigDelete\n  );\n};\n// === End FormCategory API ===\n\n// === Master Identification API === :\nInvoke.getIdentificationList = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/identifications?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\nInvoke.addIdentification = (payload) => {\n  return ConfigAxios.post(`/identifications`, payload);\n};\n\nInvoke.updateIdentificationMilling = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/milling\", payload);\n};\n\nInvoke.updateIdentificationRegular = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/regular\", payload);\n};\n\nInvoke.deleteIdentificationById = (identificationId) => {\n  return ConfigAxios.delete(\n    `/identifications/${identificationId}`,\n    headersConfigDelete\n  );\n};\n\n// === Master Dvision API === :\nInvoke.getDivisionList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/divisions?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addDivision = (payload) => {\n  return ConfigAxios.post(`/divisions`, payload);\n};\nInvoke.updateDivision = (payload) => {\n  return ConfigAxios.put(`/divisions`, payload);\n};\nInvoke.deleteDivision = (divisionId) => {\n  return ConfigAxios.delete(`/divisions/${divisionId}`, headersConfigDelete);\n};\n\n// === Master Dvision - Unit API === :\nInvoke.getDivisionUnitList = (divisionId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/units/divisions/${divisionId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addDivisionUnit = (payload) => {\n  return ConfigAxios.post(`/units/divisions`, payload);\n};\n\n// Monitoring Employee\nInvoke.getReportMonitoringEmployee = (\n  page,\n  limit,\n  from,\n  until,\n  type = \"all\",\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/monitoring?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&type=${type}&q=${keyword}`\n  );\n};\n\n// Report Service Repair\nInvoke.getReportServiceRepair = (\n  page,\n  limit,\n  from,\n  until,\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/report_services?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Report Employee\nInvoke.getReportEmployee = (page, limit, from, until, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/report/report_employee?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Working Hours\nInvoke.getWorkingHours = (page, limit, from, until, keyword) => {\n  return ConfigAxios.get(\n    `/services/monitor/hour?startDate=${from}&endDate=${until}&page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\n// Download pdf from server\nInvoke.getTransactionPdfUrl = (jobId) => {\n  return ConfigAxios.get(`/services/print_job/${jobId}`);\n};\n// Download pdf to BLOB\nInvoke.downloadPdfFromUrl = (url) => {\n  return ConfigAxios.get(url, { responseType: \"blob\" });\n};\n\nexport default Invoke;\n","import { store } from \"../../../app/ConfigureStore\";\n\nexport const PROCESS_GLOBAL_LOADING = \"PROCESS_GLOBAL_LOADING\";\nexport const PROCESS_FORM_GLOBAL_LOADING = \"PROCESS_FORM_GLOBAL_LOADING\";\nexport const SHOW_GLOBAL_MODAL = \"SHOW_GLOBAL_MODAL\";\nexport const RESET_ALL_LOADING = \"RESET_ALL_LOADING\";\n\nexport const setGlobalLoading = (payload) => {\n  return {\n    type: PROCESS_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const setGlobalModal = (payload) => {\n  return {\n    type: SHOW_GLOBAL_MODAL,\n    payload,\n  };\n};\n\nexport const setGlobalFormLoading = (payload) => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const resetAllProcessLoading = () => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n  };\n};\n\nexport const resetAllGlobalLoadingProcess = () => {\n  const { dispatch } = store;\n  dispatch(resetAllProcessLoading());\n};\n","import React from \"react\";\nimport history from \"./History\";\n\nexport const navigate = (path) => {\n  history.push(path);\n  window.location.reload();\n};\n\nexport const getIndex = (currentpage, limit) => {\n  const pageNumbers = [];\n  const startIndex = currentpage * limit - limit + 1;\n  const endIndex = startIndex + limit;\n  for (let i = startIndex === 0 ? 1 : startIndex; i <= endIndex; i++) {\n    pageNumbers.push(i);\n  }\n  return pageNumbers;\n};\n\nexport const getBase64 = (img, callback) => {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\n\nexport const SelectLocation = [\n  {\n    id: `location-1`,\n    value: \"L1\",\n    label: \"Cabang\",\n  },\n  {\n    id: `location-2`,\n    value: \"L2\",\n    label: \"Depo PT Rutan\",\n  },\n];\n\nexport const SelectType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Project\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"PB\",\n  },\n  {\n    id: `type-3`,\n    value: \"T3\",\n    label: \"Komersil\",\n  },\n];\n\nexport const SelectInstanceType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"Kelompok Tani\",\n  },\n];\n\nexport const SelectStatus = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Finished\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusServices = [\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Completed\",\n  },\n  {\n    id: `status-2`,\n    value: \"S4\",\n    label: \"Approved\",\n  },\n  {\n    id: `status-3`,\n    value: \"S5\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusMilling = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n  {\n    id: `status-3`,\n    value: \"S4\",\n    label: \"Lain-lain\",\n  },\n];\n\nexport const SelectInstanceTypeRegular = [\n  {\n    id: `status-1`,\n    value: \"T1\",\n    label: \"Kepemilikan Pribadi\",\n  },\n  {\n    id: `status-2`,\n    value: \"T2\",\n    label: \"Perusahaan\",\n  },\n  {\n    id: `status-3`,\n    value: \"T3\",\n    label: \"Kelompok Tani\",\n  },\n  {\n    id: `status-3`,\n    value: \"T4\",\n    label: \"Dinas\",\n  },\n];\n\nexport const SelectStatusIdentification = [\n  {\n    id: `status-identification-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-identification-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-identification-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n];\n\nexport const SelectMilling = [\n  {\n    id: `milling-1`,\n    value: \"true\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `milling-2`,\n    value: \"false\",\n    label: \"non-Penggilingan\",\n  },\n];\n\nexport const enumTypeInternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T4\", label: \"Training\" },\n];\n\nexport const enumTypeExternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Training\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modification\" },\n];\n\nexport const enumWarranty = [\n  { id: `enum-warranty-1`, value: true, label: \"Warranty\" },\n  { id: `enum-warranty-2`, value: false, label: \"No Warranty\" },\n];\n\nexport const enumTypeActivities = [\n  { id: `enum-activity-1`, value: \"Perjalanan\", label: \"Perjalanan\" },\n  { id: `enum-activity-2`, value: \"Pekerjaan\", label: \"Pekerjaan\" },\n  { id: `enum-activity-3`, value: \"Istirahat\", label: \"Istirahat\" },\n  {\n    id: `enum-activity-4`,\n    value: \"Perjalanan Pulang\",\n    label: \"Perjalanan Pulang\",\n  },\n];\n\nexport const warrantyMonths = () => {\n  const warrantyMonths = [];\n  for (let i = 0; i <= 24; i++) {\n    warrantyMonths.push({\n      id: `enum-warranty-moths-${i}`,\n      value: i.toString(),\n      label: `${i} bulan`,\n    });\n  }\n  return warrantyMonths;\n};\n\nexport const getProvinceEnum = (data) => {\n  const SelectProvince = [];\n  data.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectProvince;\n};\n\nexport const getCitiesEnum = (data) => {\n  const SelectCities = [];\n  data.map((item, index) => {\n    SelectCities.push({\n      id: `city-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectCities;\n};\n\nexport const getRolesEnum = (data) => {\n  const SelectRoles = [];\n  data.map((item, index) => {\n    SelectRoles.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectRoles;\n};\n\nexport const enumSelectGenerator = (data, enumName) => {\n  const SelectEnum = [];\n  data.map((item, index) => {\n    SelectEnum.push({\n      id: `${enumName}-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectEnum;\n};\n\nexport const getUnitModelEnum = (data) => {\n  const SelectUnitModel = [];\n  data.map((item, index) => {\n    SelectUnitModel.push({\n      id: `unit-model-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectUnitModel;\n};\n\nexport const getMachineConf = (data) => {\n  const SelectMachines = [];\n  data.map((item, index) => {\n    SelectMachines.push({\n      id: item.id,\n      name: item.name.replace(/ /g, \"_\").toLowerCase(),\n      type: item.name,\n    });\n  });\n  return SelectMachines;\n};\n\nexport const getStatus = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S2\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Completed\", color: \"#87d068\" };\n      break;\n    case \"S4\":\n      statusItem = { value: \"Approved\", color: \"#87d068\" };\n      break;\n    case \"S5\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\nexport const getStatusWorkingHours = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S1\":\n      statusItem = { value: \"Draft\", color: \"#fff566\" };\n      break;\n    case \"S2\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Completed\", color: \"#95de64\" };\n      break;\n    case \"S4\":\n      statusItem = { value: \"Approved\", color: \"#95de64\" };\n      break;\n    case \"S5\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\n// This list not used\nexport const machineConf = [\n  {\n    name: \"dryer\",\n    type: \"dryer\",\n  },\n  {\n    name: \"cleaner\",\n    type: \"cleaner\",\n  },\n  {\n    name: \"head_husker\",\n    type: \"head husker\",\n  },\n  {\n    name: \"body_husker\",\n    type: \"body husker\",\n  },\n  {\n    name: \"separator\",\n    type: \"separator\",\n  },\n  {\n    name: \"destoner\",\n    type: \"destoner\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n\n  {\n    name: \"vertikal_abrasive\",\n    type: \"vertikal abrasive\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n  {\n    name: \"friction_abrasive\",\n    type: \"friction abrasive\",\n  },\n  {\n    name: \"rotary_rice_sifter\",\n    type: \"rotary rice sifter\",\n  },\n  {\n    name: \"non_rotary_rice_sifter\",\n    type: \"non rotary rice sifter\",\n  },\n\n  {\n    name: \"length_grader\",\n    type: \"length grader\",\n  },\n  {\n    name: \"milling_meter\",\n    type: \"milling meter\",\n  },\n  {\n    name: \"scale\",\n    type: \"scale\",\n  },\n];\n\nexport const monitoringType = {\n  all: \"all\",\n  external: \"T1\",\n  internal: \"T2\",\n  loss: \"T3\",\n};\n\nexport const categoryServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n];\n\nexport const categoryMonitoringServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n  {\n    name: \"Loss\",\n    status: \"error\",\n  },\n];\n\nexport const enumTypeMonitoringEmployee = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Pelatihan\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modifikasi\" },\n];\n\nexport const getBase64Image = (url) => {\n  const img = new Image();\n  img.setAttribute(\"crossOrigin\", \"anonymous\");\n  img.onload = () => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    const dataURL = canvas.toDataURL(\"image/png\");\n    console.log(dataURL);\n  };\n  img.src = url;\n};\n\n/**\n * This function calculate the width of a string based on its length\n * @param {String} text\n * @param {String} font\n */\nconst getTextWidth = (text, font = \"14px -apple-system\") => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n  return Math.round(metrics.width + 80);\n};\n\n/**\n * This function calculates the width of each column based in all CELL VALUES\n * @param {Array} columns\n * @param {Array} source\n * @param {Number} maxWidthPerCell\n */\nexport const calculateColumnsWidth = (\n  columns,\n  source,\n  maxWidthPerCell = 500\n) => {\n  const columnsParsed = JSON.parse(JSON.stringify(columns));\n\n  // First we calculate the width for each column\n  // The column width is based on its string length\n\n  const columnsWithWidth = columnsParsed.map((column) =>\n    Object.assign(column, {\n      width: getTextWidth(column.title),\n    })\n  );\n\n  // Since we have a minimum width (column's width already calculated),\n  // now we are going to verify if the cell value is bigger\n  // than the column width which is already set\n\n  source.map((entry) => {\n    columnsWithWidth.map((column, indexColumn) => {\n      const columnWidth = column.width;\n      const cellValue = Object.values(entry)[indexColumn];\n\n      // Get the string width based on chars length\n      let cellWidth = getTextWidth(cellValue);\n\n      // Verify if the cell value is smaller than column's width\n      if (cellWidth < columnWidth) cellWidth = columnWidth;\n\n      // Verify if the cell value width is bigger than our max width flag\n      if (cellWidth > maxWidthPerCell) cellWidth = maxWidthPerCell;\n\n      // Update the column width\n      columnsWithWidth[indexColumn].width = cellWidth;\n    });\n  });\n\n  // Sum of all columns width to determine the table max width\n  const tableWidth = columnsWithWidth\n    .map((column) => column.width)\n    .reduce((a, b) => {\n      return a + b;\n    });\n\n  return {\n    columns: columnsWithWidth,\n    source,\n    tableWidth,\n  };\n};\n\nexport const isNotBlockedRolePrintForm = (role) => {\n  let isBlocked;\n  switch (role) {\n    // AREA_SERVICE_COORDINATOR_(ASC)\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    // CUSTOMER_SUPPORT_MANAGER_(CSM)\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    // ADMINISTRATOR SERVICE\n    case \"f00a9d7b-fb33-466b-a8ed-ba6fb117690d\":\n      isBlocked = true;\n      break;\n\n    // ADMINISTRATOR\n    case \"a808a11a-5d29-4165-8b8f-adad5fd52706\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\nexport const isBlockedRoleDetailService = (role) => {\n  let isBlocked;\n  switch (role) {\n    // CUSTOMER_SUPPORT_ADVISOR_(CSA)\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    // AREA_SERVICE_COORDINATOR_(ASC)\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    // CUSTOMER_SUPPORT_MANAGER_(CSM)\n    // case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n    //   isBlocked = true;\n    //   break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\n// Check if roles is blocked on filter branch customer\nexport const isBlockedRoleCustomerView = (role) => {\n  let isBlocked;\n  switch (role) {\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\n// Check if roles is blocked on menu list service:\nexport const isBlockedRoleListService = (role) => {\n  let isBlocked;\n  switch (role) {\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    case \"7cf419b8-9275-479b-846a-cda27aa173eb\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\n// Check if roles is blocked on menu customer:\nexport const isBlockedRoleCustomer = (role) => {\n  let isBlocked = false;\n  switch (role) {\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"7cf419b8-9275-479b-846a-cda27aa173eb\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport history from \"../../../app/History\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../app/Helpers\";\n\nexport const SET_ACCESS_TOKEN_DATA = \"SET_ACCESS_TOKEN_DATA\";\nexport const SET_USER_DETAIL_DATA = \"SET_USER_DETAIL_DATA\";\nexport const SET_ERROR_LOGIN = \"SET_ERROR_LOGIN\";\n\nexport const setAccessToken = (payload) => {\n  return {\n    type: SET_ACCESS_TOKEN_DATA,\n    payload,\n  };\n};\nexport const setUserDetail = (payload) => {\n  return {\n    type: SET_USER_DETAIL_DATA,\n    payload,\n  };\n};\nexport const setErrorLogin = (payload) => {\n  return {\n    type: SET_ERROR_LOGIN,\n    payload,\n  };\n};\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\",\n  };\n};\n\nexport const doLogout = (dispatch) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      dispatch(setGlobalLoading(true));\n      dispatch(logout());\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah Anda Yakin Ingin Keluar?\", toastrConfirmOptions);\n};\n\nconst appendItem = async (data) =>\n  new Promise((resolve, reject) => {\n    store.dispatch(setAccessToken(data.data.callback.accessToken));\n    delete data.data.callback.accessToken;\n    store.dispatch(setUserDetail(data.data.callback));\n    resolve();\n  });\n\nexport const handleSubmitLogin = async (values) => {\n  const { username, password } = values;\n  const payload = { username, password };\n\n  store.dispatch(setGlobalLoading(true));\n\n  Invoke.submitLogin(payload)\n    .then((data) => {\n      appendItem(data).then(() => {\n        setTimeout(() => {\n          history.push(\"/dashboard\");\n          window.location.reload();\n          store.dispatch(setGlobalLoading(false));\n        }, 5000);\n      });\n    })\n    .catch((onRejected) => {\n      store.dispatch(setGlobalLoading(false));\n      if (onRejected) {\n        const status = onRejected?.response?.data?.status;\n        const dataResponseRejected = onRejected?.response?.data ?? null;\n        if (dataResponseRejected) {\n          if (status === 400) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          } else if (status === 401) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          }\n        }\n      }\n    });\n};\n","import {\n  SET_ACCESS_TOKEN_DATA,\n  SET_USER_DETAIL_DATA,\n  SET_ERROR_LOGIN,\n} from \"./AuthAction\";\n\nexport const initialState = {\n  accessToken: \"\",\n  userDetail: null,\n  avatar: null,\n  error: {\n    status: false,\n    message: \"\",\n  },\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ACCESS_TOKEN_DATA:\n      newState.accessToken = action.payload;\n      return { ...newState };\n\n    case SET_USER_DETAIL_DATA:\n      newState.userDetail = action.payload;\n      return { ...newState };\n\n    case SET_ERROR_LOGIN:\n      newState.error = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { toastr } from \"react-redux-toastr\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toast } from \"react-toastify\";\nimport { change } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ROLES = \"SET_LIST_ROLES\";\nexport const SET_SELECTED_ROLE_ID = \"SET_SELECTED_ROLE_ID\";\nexport const SET_SELECTED_ROLE_DETAIL = \"SET_SELECTED_ROLE_DETAIL\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const RESET_STATE = \"RESET_STATE\";\nexport const SET_SELECTED_ROLE_MENU = \"SET_SELECTED_ROLE_MENU\";\n\nexport const resetState = (payload) => {\n  return {\n    type: RESET_STATE,\n    payload,\n  };\n};\n\nexport const setListRoles = (payload) => {\n  return {\n    type: SET_LIST_ROLES,\n    payload,\n  };\n};\n\nexport const setSelectedRoleId = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_ID,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedRoleDetail = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_DETAIL,\n    payload,\n  };\n};\n\nexport const setSelectedRoleMenu = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_MENU,\n    payload,\n  };\n};\n\nexport const showToast = (message, type) => {\n  switch (type) {\n    case \"success\":\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n\n    case \"error\":\n      toast.error(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n    default:\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n  }\n};\n\nexport const getListRolesRequested = async () => {\n  const { data } = await Invoke.getListRole(1, 100);\n  store.dispatch(setListRoles(data.callback.data));\n};\n\nexport const mapDetailRoleToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().roles.selectedRoleDetail;\n  dispatch(change(\"editRolesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editRolesForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getMenuByRolesId = async (roleId) => {\n  const { data } = await Invoke.getMenuByRoleId(roleId);\n  let subItem = [];\n  data.callback.map((item, index) => {\n    subItem.push(item.menu_id);\n  });\n  store.dispatch(setSelectedRoleMenu(subItem));\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editRolesForm\", `id`, \"\"));\n  dispatch(change(\"editRolesForm\", `description`, \"\"));\n};\n\nconst doAddRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await Invoke.addRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteMenuRoleProcess = async (menuId, menuListApi) => {\n  const [menu] = menuListApi.filter((x) => x.menu_id === menuId);\n  await Invoke.deleteMenuByMenuRoleId(menu.id);\n};\n\nconst doAddMenuRoleProcess = async (menuId, roleId) => {\n  const payload = {\n    menu_id: menuId,\n    role_id: roleId,\n    view: true,\n    insert: true,\n    update: true,\n    delete: false,\n  };\n  await Invoke.addMenuRole(payload);\n};\n\nconst doSaveMenuRole = async (newMenuSelected) => {\n  const { getState } = store;\n  const currentMenuSelected = getState().roles.selectedRoleMenu;\n  const selectedRoleId = getState().roles.selectedRoleId;\n  const { data } = await Invoke.getMenuByRoleId(selectedRoleId);\n  const menuListApi = data.callback;\n\n  if (currentMenuSelected.length > 0) {\n    await currentMenuSelected.map((item, index) => {\n      doDeleteMenuRoleProcess(item, menuListApi);\n    });\n    setTimeout(() => {\n      newMenuSelected.map((newMenu, index) => {\n        doAddMenuRoleProcess(newMenu, selectedRoleId);\n      });\n    }, 1000);\n  } else {\n    newMenuSelected.map((item, index) => {\n      doAddMenuRoleProcess(item, selectedRoleId);\n    });\n  }\n};\n\nconst doEditRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.id = values.id;\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await doSaveMenuRole(menuSelected);\n    await Invoke.updateRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteRoleProcess = async (roleId) => {\n  try {\n    await Invoke.deleteRoleById(roleId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListRolesRequested();\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteRoleRequested = async (roleId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteRoleProcess(roleId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const saveRoleRequested = async (type, values, menuSelected) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddRoleProcess(values, menuSelected);\n      } else {\n        doEditRoleProcess(values, menuSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { change } from \"redux-form\";\nimport moment from \"moment\";\nimport { setSelectedJobService } from \"../../ListServices/Store/ListServicesActions\";\nimport fileDownload from \"js-file-download\";\n\nexport const SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA =\n  \"SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA\";\n\nexport const SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_GROUPING_SUMMARY_DATA = \"SET_GROUPING_SUMMARY_DATA\";\n\nexport const SET_SINGLE_SUMMARY_DATA = \"SET_SINGLE_SUMMARY_DATA\";\n\nexport const SET_GROUPING_CHECKLIST_DATA = \"SET_GROUPING_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_SUMMARY_DATA =\n  \"SET_SELECTED_SERVICES_SUMMARY_DATA\";\n\nexport const SET_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_SELECTED_SERVICES_DAILIES_DATA =\n  \"SET_SELECTED_SERVICES_DAILIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_HISTORIES_DATA =\n  \"SET_SELECTED_SERVICES_HISTORIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_CHECKLIST_DATA =\n  \"SET_SELECTED_SERVICES_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_REJECTED_DATA =\n  \"SET_SELECTED_SERVICES_REJECTED_DATA\";\n\nexport const SET_EDIT_TRANSACTION_MODAL = \"SET_EDIT_TRANSACTION_MODAL\";\n\nexport const SET_REJECTIONS_MODAL = \"SET_REJECTIONS_MODAL\";\n\nexport const SET_EDIT_DAILIES_MODAL = \"SET_EDIT_DAILIES_MODAL\";\n\nexport const SET_SELECTED_EDIT_DAILIES_DATA = \"SET_SELECTED_EDIT_DAILIES_DATA\";\n\nexport const SET_SELECTED_UNIT = \"SET_SELECTED_UNIT\";\n\nexport const RESET_DETAIL_SERVICE = \"RESET_DETAIL_SERVICE\";\n\nexport const SET_INSERT_MEDIA_MODAL = \"SET_INSERT_MEDIA_MODAL\";\n\nexport const SET_TYPE_FORM_DAILIES = \"SET_TYPE_FORM_DAILIES\";\n\nexport const SET_EDIT_SUMMARY_MODAL = \"SET_EDIT_SUMMARY_MODAL\";\n\nexport const setRejectionsModal = (payload) => {\n  return {\n    type: SET_REJECTIONS_MODAL,\n    payload,\n  };\n};\n\nexport const resetDetailService = () => {\n  return {\n    type: RESET_DETAIL_SERVICE,\n  };\n};\n\nexport const setSelectedUnit = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT,\n    payload,\n  };\n};\n\nexport const setEditTransactionModal = (payload) => {\n  return {\n    type: SET_EDIT_TRANSACTION_MODAL,\n    payload,\n  };\n};\n\nexport const setGroupingSelectedServicesMediaData = (payload) => {\n  return {\n    type: SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingSummaryData = (payload) => {\n  return {\n    type: SET_GROUPING_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setSingleSummaryData = (payload) => {\n  return {\n    type: SET_SINGLE_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingChecklistData = (payload) => {\n  return {\n    type: SET_GROUPING_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setEditDailiesModal = (payload) => {\n  return {\n    type: SET_EDIT_DAILIES_MODAL,\n    payload,\n  };\n};\n\nexport const setEditSummaryModal = (payload) => {\n  return {\n    type: SET_EDIT_SUMMARY_MODAL,\n    payload,\n  };\n};\n\nexport const setInsertMediaModal = (payload) => {\n  return {\n    type: SET_INSERT_MEDIA_MODAL,\n    payload,\n  };\n};\n\nexport const setSelectedServicesEmployeeListData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServicesChecklisttData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedSummaryData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceMediaData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceHistoriesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_HISTORIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceRejectedData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_REJECTED_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEditDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_EDIT_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const setTypeFormDailies = (payload) => {\n  return {\n    type: SET_TYPE_FORM_DAILIES,\n    payload,\n  };\n};\n\nexport const getJobServiceEmployeeList = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getServicesEmployee(jobId, 1, 100);\n  const serviceEmployeeList = data.callback.data;\n\n  const results = Promise.all(\n    serviceEmployeeList.map(async (item, index) => {\n      let subIitem = {};\n      subIitem.active = item.active;\n      subIitem.employee_service_id = item.id;\n      const employee = await Invoke.getEmployeeById(item.employee_id);\n      subIitem = { ...subIitem, ...employee.data.callback };\n      return subIitem;\n    })\n  );\n  dispatch(setSelectedServicesEmployeeListData(await results));\n};\n\nexport const getJobServiceSummary = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceSummary(jobId, unitId);\n    dispatch(setSelectedSummaryData(data.callback));\n  } catch (error) {\n    dispatch(setSelectedSummaryData({}));\n  }\n};\n\nexport const getJobServiceMedia = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceMedia(jobId, unitId);\n    dispatch(setSelectedServiceMediaData(data.callback.data));\n  } catch (error) {\n    dispatch(setSelectedServiceMediaData([]));\n  }\n};\n\nexport const getJobServiceDailies = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceDailies(jobId, unitId);\n    dispatch(\n      setSelectedServiceDailiesData(data.callback.data || data.callback)\n    );\n  } catch (error) {\n    dispatch(setSelectedServiceDailiesData([]));\n  }\n};\n\nexport const getJobServiceHistories = async (jobId, keyword = \"\") => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getJobServiceHistories(jobId, 1, 100, keyword);\n  dispatch(setSelectedServiceHistoriesData(data.callback.logs));\n};\n\nexport const getJobServiceRejections = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getRejectedData(jobId);\n  dispatch(setSelectedServiceRejectedData(data.callback));\n};\n\nexport const getChecklistData = async (unitModelId) => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getChecklistData(unitModelId);\n    dispatch(setSelectedServicesChecklisttData(data.callback));\n  } catch (e) {\n    console.log(e);\n    dispatch(setSelectedServicesChecklisttData([]));\n  }\n};\n\nexport const handleAddNewEmployeeService = async (jobId, employeeId) => {\n  const { dispatch } = store;\n  try {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.active = \"true\";\n    await Invoke.addNewEmployeeService(jobId, payload);\n    setTimeout(() => {\n      dispatch(ComponentActions.setGlobalModal(false));\n      dispatch(ComponentActions.setGlobalLoading(false));\n      getJobServiceEmployeeList(jobId);\n    }, 500);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nexport const setStatusEmployee = async (\n  jobId,\n  employeeServiceId,\n  employeeId,\n  isActive\n) => {\n  const payload = {};\n  payload.id = employeeServiceId;\n  payload.employee_id = employeeId;\n  payload.active = isActive;\n  await Invoke.setStatusEmployeeService(jobId, payload);\n  setTimeout(() => {\n    getJobServiceEmployeeList(jobId);\n  }, 500);\n};\n\nconst doRejectServiceProcess = async (jobId, values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.reason = values.reason;\n    await Invoke.setRejectedService(jobId, payload);\n    showToast(\"Berhasil melakukan reject\", \"success\");\n    navigate(\"/list_service\");\n    dispatch(setRejectionsModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setRejectionsModal(false));\n  }\n};\n\nconst doEditServiceProcess = async (values) => {\n  const { dispatch } = store;\n\n  const warranty = values.warranty.split(\"|\");\n  const warrantyYears = values.warrantyYears.split(\"|\");\n  const warrantyMonths = values.warrantyMonths.split(\"|\");\n\n  const payload = {};\n  payload.id = values.id;\n  payload.start = moment(values.startDate).format(\"YYYY-MM-DD\");\n  payload.due = moment(values.dueDate).format(\"YYYY-MM-DD\");\n  payload.job_perform = values.jobPerform;\n  payload.warranty = warranty[0];\n  payload.warranty_month = warrantyMonths[0] ?? 0;\n  payload.warranty_year = warrantyYears[0] ?? 0;\n\n  try {\n    await Invoke.updateJobService(payload);\n    showToast(\"Data berhasil disimpan\", \"success\");\n\n    const { data } = await Invoke.getOneServices(values.id);\n    await store.dispatch(\n      setSelectedJobService({ ...data.callback, units: values.unit_models })\n    );\n    dispatch(setEditTransactionModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nexport const handlePressEditRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditServiceProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah anda yakin menyimpan data ini?\", toastrConfirmOptions);\n};\n\nexport const handlePressRejectedRequested = async (jobId, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doRejectServiceProcess(jobId, values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin me me-reject data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nconst doEditDailiesProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n  const typeForm = getState().detailService.typeFormDailies;\n\n  const payload = {};\n  const insertPayload = {};\n  const splitActivity = values.activityType.split(\"|\") ?? \"\";\n  const timeStart = values.timeStartEnd[0]\n    ? moment(values.timeStartEnd[0]).format(\"HH:mm:ss\")\n    : moment().format(\"HH:mm:ss\");\n  const timeEnd = values.timeStartEnd[1]\n    ? moment(values.timeStartEnd[1]).format(\"HH:mm:ss\")\n    : moment().format(\"HH:mm:ss\");\n\n  const dailyStart = `${moment(values.startDate).format(\n    \"YYYY-MM-DD\"\n  )} ${timeStart}`;\n\n  const dailyEnd = `${moment(values.endDate).format(\"YYYY-MM-DD\")} ${timeEnd}`;\n\n  payload.id = values.id;\n  payload.title = values.title ?? \"\";\n  payload.daily_start = dailyStart;\n  payload.daily_end = dailyEnd;\n  payload.description = values.description ?? \"\";\n\n  insertPayload.title = values.title ?? \"\";\n  insertPayload.daily_start = dailyEnd;\n  insertPayload.daily_end = dailyStart;\n  insertPayload.description = values.description ?? \"\";\n  insertPayload.type = splitActivity[0] ?? \"none\";\n\n  try {\n    if (typeForm === \"add\") {\n      await Invoke.addJobServiceDaily(insertPayload, dataService.id);\n    } else {\n      await Invoke.updateJobServiceDailies(payload);\n    }\n\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    await getJobServiceDailies(dataService.id);\n    dispatch(setEditDailiesModal(false));\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nconst doEditSummaryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const payload = {};\n\n  payload.summary = values.summary ?? \"\";\n\n  if (dataService.is_external) {\n    try {\n      await Invoke.updateSummary(payload, dataService.id, values.unitId);\n      showToast(\"Berhasil menyimpan data\", \"success\");\n      dispatch(setEditSummaryModal(false));\n      // Call function to referesh summary unit group\n      getUnitSummary((res) => {\n        resetModalSummary();\n      });\n    } catch (error) {\n      showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n      dispatch(setEditSummaryModal(false));\n    }\n  } else {\n    try {\n      await Invoke.updateSummary(payload, dataService.id, null);\n      showToast(\"Berhasil menyimpan data\", \"success\");\n      dispatch(setEditSummaryModal(false));\n      // Call function to referesh summary unit single\n      getUnitSummary((res) => {\n        resetModalSummary();\n      });\n    } catch (error) {\n      showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n      dispatch(setEditSummaryModal(false));\n    }\n  }\n};\n\nconst doAddSummaryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const payload = {};\n\n  payload.summary = values.summary ?? \"\";\n\n  try {\n    await Invoke.updateSummary(payload, dataService.id, null);\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    dispatch(setEditSummaryModal(false));\n    // Call function to referesh summary unit group\n    getUnitSummary((res) => {\n      resetModalSummary();\n    });\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditSummaryModal(false));\n  }\n};\n\nexport const handlePressEditDailiesRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditDailiesProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handlePressEditSummaryRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (values.type === \"NEW\") {\n        doAddSummaryProcess(values);\n      } else {\n        doEditSummaryProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nconst doInsertMedia = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  dispatch(ComponentActions.setGlobalLoading(true));\n\n  const payload = {};\n\n  const splitUnit = values.unit ? values.unit.split(\"|\") : \"\";\n  const unitId = splitUnit[0] ?? \"\";\n\n  payload.title = values.title ?? \"\";\n  payload.description = values.description ?? \"\";\n  payload.type = \"image\";\n  payload.base64 = values.imageUrl ?? \"\";\n\n  const media = { media: [payload] };\n  try {\n    if (dataService.is_external) {\n      await Invoke.addJobServiceMedia(media, dataService.id, unitId);\n    } else {\n      await Invoke.addJobServiceMedia(media, dataService.id);\n    }\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    await getUnitMedia((callback) => {});\n    dispatch(setInsertMediaModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setInsertMediaModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nexport const handlePressInsertMediaRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doInsertMedia(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailTransactionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().services.selectedJobService;\n  dispatch(change(\"editTransactionForm\", `id`, data.id ?? \"\"));\n  dispatch(\n    change(\"editTransactionForm\", `startDate`, moment(data.start) ?? \"\")\n  );\n  dispatch(change(\"editTransactionForm\", `endDate`, moment(data.end) ?? \"\"));\n  dispatch(change(\"editTransactionForm\", `jobPerform`, data.job_perform ?? \"\"));\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warranty`,\n      `${data.warranty}|${data.warranty ? \"Warranty\" : \"No Warranty\"}`\n    )\n  );\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warrantyMonths`,\n      `${data.warranty_month}|${data.warranty_month} bulan` ?? \"0\"\n    )\n  );\n  dispatch(\n    change(\"editTransactionForm\", `warrantyYears`, data.warranty_year ?? \"\")\n  );\n};\n\nexport const mapDailiesToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().detailService.selectedEditDailies;\n  dispatch(change(\"editDailiesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `startDate`, moment(data.mulai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `endDate`, moment(data.selesai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `description`, data.deskripsi ?? \"\"));\n  dispatch(\n    change(\"editDailiesForm\", `activityType`, `${data.type}|${data.type}` ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editDailiesForm\",\n      `timeStartEnd`,\n      [moment(data.mulai), moment(data.selesai)] ?? \"\"\n    )\n  );\n};\n\nexport const resetModalSummary = () => {\n  const { dispatch } = store;\n  dispatch(change(\"editSummaryForm\", `type`, \"\"));\n  dispatch(change(\"editSummaryForm\", `unitId`, \"\"));\n  dispatch(change(\"editSummaryForm\", `summary`, \"\"));\n};\n\nexport const downloadTransactionPdf = async () => {\n  const { dispatch, getState } = store;\n  const jobId = getState().services.selectedJobService.id;\n  dispatch(ComponentActions.setGlobalLoading(true));\n\n  try {\n    const { data: dataTransactionPdf } = await Invoke.getTransactionPdfUrl(\n      jobId\n    );\n    const downloadUrl = dataTransactionPdf.callback.pdf.url.replace(\n      process.env.REACT_APP_API_URL.replace(\"http://\", \"\"),\n      \"\"\n    );\n    const { data } = await Invoke.downloadPdfFromUrl(downloadUrl);\n    dispatch(ComponentActions.setGlobalLoading(false));\n    fileDownload(data, `${dataTransactionPdf.callback.pdf.filename}.pdf`);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n    showToast(\"Data report tidak ditemukan!\", \"error\");\n  }\n};\n\nexport const resetFormModalImage = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editMediaForm\", `imageUrl`, null));\n  dispatch(change(\"editMediaForm\", `title`, \"\"));\n  dispatch(change(\"editMediaForm\", `description`, \"\"));\n  dispatch(change(\"editMediaForm\", `unit`, \"\"));\n};\n\nexport const getUnitSummary = async (callback) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  // setIsCompleteLoadedSummary(false);\n  const groupingSummaryList = [];\n  const singleSummary = {};\n  let sequence = 0;\n\n  const setDispatch = (responseStatus) => {\n    if (sequence === dataService.units.length) {\n      if (responseStatus === \"error\") {\n        setTimeout(() => {\n          if (dataService.is_external) {\n            dispatch(setGroupingSummaryData(groupingSummaryList));\n          } else {\n            dispatch(setSingleSummaryData(singleSummary));\n          }\n\n          callback(true);\n        }, 1000);\n      } else {\n        setTimeout(() => {\n          if (dataService.is_external) {\n            dispatch(setGroupingSummaryData(groupingSummaryList));\n          } else {\n            dispatch(setSingleSummaryData(singleSummary));\n          }\n\n          callback(true);\n        }, 1000);\n      }\n    }\n  };\n\n  if (!dataService.is_external) {\n    await Invoke.getJobServiceSummary(dataService.id, null)\n      .then((dataSummary) => {\n        singleSummary.id = dataService.id;\n        singleSummary.summary = dataSummary.data.callback.summary;\n\n        setDispatch(dataSummary.status);\n      })\n      .catch((err) => {\n        singleSummary.id = dataService.id;\n        singleSummary.summary = \"\";\n\n        setDispatch(\"error\");\n        callback(true);\n        console.log(err);\n      });\n  }\n\n  if (dataService.units.length > 0) {\n    await dataService.units.map(async (item, index) => {\n      await Invoke.getJobServiceSummary(dataService.id, item.id)\n        .then((dataSummary) => {\n          groupingSummaryList.push({\n            id: item.id,\n            unitName: item.unit_name,\n            summary: dataSummary.data.callback.summary,\n          });\n\n          sequence += 1;\n          setDispatch(dataSummary.status);\n        })\n        .catch((err) => {\n          groupingSummaryList.push({\n            id: item.id,\n            unitName: item.unit_name,\n            summary: [],\n          });\n          sequence += 1;\n          setDispatch(\"error\");\n          callback(true);\n          console.log(err);\n        });\n    });\n  } else {\n    callback(true);\n  }\n};\n\nexport const getUnitMedia = async (callback) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const groupingMediaList = [];\n  let sequence = 0;\n\n  const setDispatch = () => {\n    if (sequence === dataService.units.length) {\n      setTimeout(() => {\n        dispatch(setGroupingSelectedServicesMediaData(groupingMediaList));\n        callback(true);\n      }, 1000);\n    }\n  };\n\n  if (dataService.units.length > 0) {\n    await dataService.units.map(async (item, index) => {\n      await Invoke.getJobServiceMedia(dataService.id, item.id)\n        .then((dataMedia) => {\n          const imageList = dataMedia.data.callback.data ?? [];\n          // Push to tempporary array\n          groupingMediaList.push({\n            unitName: item.unit_name,\n            image: imageList ?? [],\n          });\n          sequence += 1;\n          setDispatch();\n        })\n        .catch((err) => {\n          groupingMediaList.push({\n            unitName: item.unit_name,\n            image: [],\n          });\n\n          sequence += 1;\n          setDispatch();\n        });\n    });\n  } else {\n    try {\n      // Get media without unitId\n      const { data: dataMedia } = await Invoke.getJobServiceMedia(\n        dataService.id\n      );\n      // Push to tempporary array\n      groupingMediaList.push({\n        unitName: \"All\",\n        image: dataMedia.callback.data ?? [],\n      });\n      callback(true);\n    } catch (error) {\n      dispatch(setGroupingSelectedServicesMediaData([]));\n      callback(true);\n    }\n\n    setTimeout(() => {\n      dispatch(setGroupingSelectedServicesMediaData(groupingMediaList));\n      callback(true);\n    }, 1000);\n  }\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { setRejectionsModal } from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\nimport * as DetailServiceActions from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\n\nexport const SET_LIST_SERVICES = \"SET_LIST_SERVICES\";\nexport const SET_SELECTED_JOB_SERVICE = \"SET_SELECTED_JOB_SERVICE\";\nexport const SET_PAGING_LIST_SERVICE = \"SET_PAGING_LIST_SERVICE\";\nexport const SET_SELECTED_JOB_SERVICE_ID = \"SET_SELECTED_JOB_SERVICE_ID\";\nexport const SET_DASHBOARD_LIST_SERVICES = \"SET_DASHBOARD_LIST_SERVICES\";\n\nexport const setListServices = (payload) => {\n  return {\n    type: SET_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setDashboardListService = (payload) => {\n  return {\n    type: SET_DASHBOARD_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setPagingListService = (payload) => {\n  return {\n    type: SET_PAGING_LIST_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobService = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobServiceId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE_ID,\n    payload,\n  };\n};\n\nexport const getListServicesRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  type = \"\",\n  status = \"\",\n  employeeId = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListServices(\n      page,\n      limit,\n      keyword,\n      type,\n      status,\n      employeeId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListServices(data.callback.data));\n    store.dispatch(setPagingListService(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTopTenService = async () => {\n  try {\n    const { data } = await Invoke.getListServices(1, 10, \"\", \"\", \"\", \"\");\n    store.dispatch(setDashboardListService(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (page, limit, keyword, filterValues) => {\n  if (!filterValues) {\n    getListServicesRequested(page, limit, keyword);\n    return;\n  }\n\n  const splitTypeService = filterValues.typeService\n    ? filterValues.typeService.split(\"|\")\n    : \"\";\n  const splitStatusService = filterValues.statusService\n    ? filterValues.statusService.split(\"|\")\n    : \"\";\n\n  const typeService = filterValues.typeService ? splitTypeService[0] : \"\";\n  const statusService = filterValues.statusService ? splitStatusService[0] : \"\";\n\n  try {\n    await getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      typeService,\n      statusService\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getDetailServicePerUnit = async (service) => {\n  const { dispatch } = store;\n  // Hit media api and grouping by units :\n  let groupingChecklist = [];\n  if (service.units) {\n    await service.units.map(async (item, index) => {\n      const { data: dataChecklist } = await Invoke.getChecklistData(item.id);\n      // Push to tempporary array\n      groupingChecklist.push({\n        unitName: item.unit_name,\n        checklist: dataChecklist.callback,\n      });\n    });\n\n    // Save to reducer\n    await dispatch(\n      DetailServiceActions.setGroupingChecklistData(groupingChecklist)\n    );\n  }\n};\n\nexport const handlePressEdit = async (values) => {\n  try {\n    const { data } = await Invoke.getOneServices(values.id);\n    const dataService = {\n      ...data.callback,\n      units: values.unit_models ? values.unit_models : values.units,\n    };\n    await store.dispatch(setSelectedJobService(dataService));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteJobServiceProcess = async (jobId) => {\n  const { getState } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteJobServiceById(jobId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListServicesRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteJobServiceRequested = async (jobId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteJobServiceProcess(jobId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handlePressActionsRequested = async (jobId, type) => {\n  const { dispatch } = store;\n  type = type.toLowerCase();\n  let message;\n\n  switch (type) {\n    case \"approved\":\n      message = \"Apakah anda yakin ingin meng-approve data ini?\";\n      break;\n\n    case \"finished\":\n      message = \"Apakah anda yakin ingin mem-finishing data ini?\";\n      break;\n\n    case \"rejected\":\n      message = \"Apakah anda yakin ingin me me-reject data ini?\";\n      await dispatch(setRejectionsModal(true));\n      break;\n  }\n\n  if (type.toLowerCase() !== \"rejected\") {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        doCallActionProcess(jobId, type);\n      },\n      okText: \"Ya\",\n      cancelText: \"Tidak\",\n    };\n\n    toastr.confirm(message, toastrConfirmOptions);\n  }\n};\n\nexport const doCallActionProcess = async (jobId, type) => {\n  const { getState, dispatch } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n  dispatch(setGlobalLoading(true));\n  try {\n    if (type === \"approved\") {\n      await Invoke.setApprovedService(jobId);\n    }\n    if (type === \"finished\") {\n      await Invoke.setFinishedService(jobId);\n    }\n    await getListServicesRequested(page, limit);\n    showToast(\"Data berhasil di approved\", \"success\");\n    setTimeout(() => {\n      navigate(\"/list_service\");\n      dispatch(setGlobalLoading(false));\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(setGlobalLoading(false));\n    console.log(\"error : \", error);\n  }\n};\n","import {\n  SET_LIST_SERVICES,\n  SET_SELECTED_JOB_SERVICE,\n  SET_PAGING_LIST_SERVICE,\n  SET_SELECTED_JOB_SERVICE_ID,\n  SET_DASHBOARD_LIST_SERVICES,\n} from \"./ListServicesActions\";\n\nexport const initialState = {\n  listServices: [],\n  dashboardListServices: [],\n  selectedJobService: {},\n  selectedJobServiceId: {},\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function listServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_SERVICES:\n      newState.listServices = action.payload;\n      return { ...newState };\n\n    case SET_DASHBOARD_LIST_SERVICES:\n      newState.dashboardListServices = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE:\n      newState.selectedJobService = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE_ID:\n      newState.selectedJobServiceId = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_LIST_SERVICE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  PROCESS_GLOBAL_LOADING,\n  PROCESS_FORM_GLOBAL_LOADING,\n  RESET_ALL_LOADING,\n  SHOW_GLOBAL_MODAL,\n} from \"./ComponentAction\";\n\nexport const initialState = {\n  isLoadingGlobal: false,\n  isLoadingFormGlobal: false,\n  isModalVisible: false,\n};\n\nexport default function ComponentReducer(state = initialState, action) {\n  if (!action) {\n    return state;\n  }\n  const newState = Object.assign({}, state);\n\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case PROCESS_GLOBAL_LOADING:\n      newState.isLoadingGlobal = action.payload;\n      return { ...newState };\n    case PROCESS_FORM_GLOBAL_LOADING:\n      newState.isLoadingFormGlobal = action.payload;\n      return { ...newState };\n    case SHOW_GLOBAL_MODAL:\n      newState.isModalVisible = action.payload;\n      return { ...newState };\n    case RESET_ALL_LOADING:\n      newState.isLoadingGlobal = false;\n      newState.isLoadingFormGlobal = false;\n      return { ...newState };\n  }\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_CUSTOMER_LIST_DATA = \"SET_CUSTOMER_LIST_DATA\";\nexport const SET_PAGING_CUSTOMER = \"SET_PAGING_CUSTOMER\";\nexport const SET_SELECTED_CUSTOMER_DATA = \"SET_SELECTED_CUSTOMER_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_CUSTOMER_ID = \"SET_SELECTED_CUSTOMER_ID\";\nexport const SET_CUSTOMER_LIST_DATA_DROPDOWN =\n  \"SET_CUSTOMER_LIST_DATA_DROPDOWN\";\n\nexport const setCustomerListData = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCustomerListDataDropdown = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingCustomer = (payload) => {\n  return {\n    type: SET_PAGING_CUSTOMER,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerData = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerId = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_ID,\n    payload,\n  };\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editCustomerForm\", `id`, \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, \"\"));\n};\n\nexport const loadCustomerListData = async () => {\n  try {\n    const { data } = await Invoke.getCustomerList(1, 100);\n    store.dispatch(setCustomerListData(data.callback.data));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getCustomerListDataByPaging = async (\n  page,\n  limit,\n  keyword = \"\",\n  branchId = \"\",\n  isDropdownData = false\n) => {\n  try {\n    const { data } = await Invoke.getCustomerList(\n      page,\n      limit,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdownData) {\n      store.dispatch(setCustomerListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setCustomerListData(data.callback.data));\n    }\n    store.dispatch(setPagingCustomer(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteCustomerProcess = async (customerId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteCustomerById(customerId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddCustomerProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n\n    await Invoke.addCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n    await Invoke.updateCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveCustomerRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddCustomerProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailCustomerToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().customers.selectedCustomerData;\n  const provinceId = data.province_id + \"|\" + data.province_name;\n  const cityId = data.city_id + \"|\" + data.city_name;\n  const branchId = data.branch_id + \"|\" + data.branch_name;\n\n  dispatch(change(\"editCustomerForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, data.pic_phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, data.pic ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, data.work_hour ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, provinceId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, cityId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, branchId ?? \"\"));\n};\n\nexport const deleteCustomerRequested = async (customerId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteCustomerProcess(customerId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_CUSTOMER_LIST_DATA,\n  SET_PAGING_CUSTOMER,\n  SET_FORM_STATUS,\n  SET_SELECTED_CUSTOMER_DATA,\n  SET_SELECTED_CUSTOMER_ID,\n  SET_CUSTOMER_LIST_DATA_DROPDOWN,\n} from \"./CustomersActions\";\n\nexport const initialState = {\n  listCustomers: [],\n  listCustomersDropdown: [],\n  formStatus: \"add\",\n  selectedCustomerData: {},\n  selectedCustomerId: \"\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_CUSTOMER_LIST_DATA:\n      newState.listCustomers = action.payload;\n      return { ...newState };\n\n    case SET_CUSTOMER_LIST_DATA_DROPDOWN:\n      newState.listCustomersDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_CUSTOMER:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_DATA:\n      newState.selectedCustomerData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_ID:\n      newState.selectedCustomerId = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ADMIN = \"SET_LIST_ADMIN\";\nexport const SET_PAGING_ADMIN = \"SET_PAGING_ADMIN\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ADMIN_ID = \"SET_SELECTED_ADMIN_ID\";\nexport const SET_SELECTED_ADMIN_DATA = \"SET_SELECTED_ADMIN_DATA\";\n\nexport const setListAdmin = (payload) => {\n  return {\n    type: SET_LIST_ADMIN,\n    payload,\n  };\n};\n\nexport const setPagingAdmin = (payload) => {\n  return {\n    type: SET_PAGING_ADMIN,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedAdminId = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_ID,\n    payload,\n  };\n};\n\nexport const setSelectedAdminData = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_DATA,\n    payload,\n  };\n};\n\nexport const getListAdminRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListAdmin(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListAdmin(data.callback.data));\n    store.dispatch(setPagingAdmin(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editAdminForm\", `id`, \"\"));\n  dispatch(change(\"editAdminForm\", `username`, \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, \"\"));\n  dispatch(change(\"editAdminForm\", `password`, \"\"));\n};\n\nconst doAddAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.addAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.updateAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteAdminProcess = async (adminId) => {\n  const { getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteAdminById(adminId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListAdminRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveAdminRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddAdminProcess(values);\n      } else {\n        doEditAdminProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailAdminToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().admins.selectedAdminData;\n  dispatch(change(\"editAdminForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editAdminForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, data.fullname ?? \"\"));\n};\n\nexport const deleteAdminRequested = async (adminId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteAdminProcess(adminId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_LIST_ADMIN,\n  SET_FORM_STATUS,\n  SET_PAGING_ADMIN,\n  SET_SELECTED_ADMIN_ID,\n  SET_SELECTED_ADMIN_DATA,\n} from \"./AdminActions\";\n\nexport const initialState = {\n  listAdmin: [],\n  selectedAdminId: \"\",\n  selectedAdminData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ADMIN:\n      newState.listAdmin = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_ID:\n      newState.selectedAdminId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_DATA:\n      newState.selectedAdminData = action.payload;\n      return { ...newState };\n    case SET_PAGING_ADMIN:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_LIST_ROLES,\n  SET_SELECTED_ROLE_ID,\n  SET_SELECTED_ROLE_DETAIL,\n  SET_FORM_STATUS,\n  RESET_STATE,\n  SET_SELECTED_ROLE_MENU\n} from \"./RolesActions\";\n\nexport const initialState = {\n  listRoles: [],\n  selectedRoleId: \"\",\n  selectedRoleDetail: {},\n  selectedRoleMenu: [],\n  formStatus: \"add\",\n};\n\nexport default function rolesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ROLES:\n      newState.listRoles = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_ID:\n      newState.selectedRoleId = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_DETAIL:\n      newState.selectedRoleDetail = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_MENU:\n      newState.selectedRoleMenu = action.payload;\n      return { ...newState };\n\n    case RESET_STATE:\n      newState.listRoles = [];\n      newState.selectedRoleId = \"\";\n      newState.selectedRoleDetail = {};\n      newState.formStatus = \"add\";\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_PROVINCE_LIST_DATA = \"SET_PROVINCE_LIST_DATA\";\nexport const SET_CITY_LIST_DATA = \"SET_CITY_LIST_DATA\";\nexport const SET_MENU_LIST_DATA = \"SET_MENU_LIST_DATA\";\n\nexport const setProvinceListData = (payload) => {\n  return {\n    type: SET_PROVINCE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setMenuListData = (payload) => {\n  return {\n    type: SET_MENU_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCityListData = (payload) => {\n  return {\n    type: SET_CITY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const loadProvinceListData = async () => {\n  try {\n    const { data } = await Invoke.getProvinceList(1, 100);\n    store.dispatch(setProvinceListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadCityListData = async (provinceId) => {\n  try {\n    const { data } = await Invoke.getCityList(1, 200, provinceId);\n    store.dispatch(setCityListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadMenuListData = async () => {\n  try {\n    const { data } = await Invoke.getListMenu(1, 100);\n    store.dispatch(setMenuListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_LIST_DATA = \"SET_EMPLOYEE_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_ID = \"SET_SELECTED_EMPLOYEE_ID\";\nexport const SET_SELECTED_EMPLOYEE_DATA = \"SET_SELECTED_EMPLOYEE_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEES = \"SET_PAGING_EMPLOYEES\";\nexport const SET_EMPLOYEE_LIST_DROPDOWN = \"SET_EMPLOYEE_LIST_DROPDOWN\";\nexport const SET_IS_EMPLOYEE_DATA_LOADED = \"SET_IS_EMPLOYEE_DATA_LOADED\";\n\nexport const setEmployeeListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setISEmployeeDataLoaded = (payload) => {\n  return {\n    type: SET_IS_EMPLOYEE_DATA_LOADED,\n    payload,\n  };\n};\n\nexport const setEmployeeListDropdown = (payload) => {\n  return {\n    type: SET_EMPLOYEE_LIST_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedRoleEmployee = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployees = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEES,\n    payload,\n  };\n};\n\nexport const loadEmployeeListData = async (\n  page,\n  limit,\n  keyword = \"\",\n  roleId = \"\",\n  branchId = \"\",\n  divisionId = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeList(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setEmployeeListData(data.callback.data));\n    store.dispatch(setPagingEmployees(paging));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const loadEmployeeDataDropdown = async () => {\n  try {\n    const { data } = await Invoke.getEmployeeList(1, 99999999, \"\", \"\", \"\", \"\");\n\n    store.dispatch(setEmployeeListDropdown(data.callback.data));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getEmployeeToolsRequested = (employeeId, page, limit) => {\n  try {\n    const { data } = Invoke.getEmployeeTools(employeeId, page, limit);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployees(paging));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getRolesByEmployeeId = async (employeeId) => {\n  const { data } = await Invoke.getEmployeeRoles(employeeId, 1, 100);\n  let subItem = [];\n  data.callback.data.map((item, index) => {\n    subItem.push(item.role_id);\n  });\n  store.dispatch(setSelectedRoleEmployee(subItem));\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeProcess = async (values, selectedRoles) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.nik = values.nik;\n    payload.password = values.password ?? \"\";\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n\n    await Invoke.addEmployee(payload);\n    // await doSaveEmployeeRole(selectedRoles, \"add\");\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    loadEmployeeListData(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employees\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeProcess = async (values, roleSelected) => {\n  const { dispatch } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.nik = values.nik;\n    payload.password = values.password ?? \"\";\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n    // Save Employee - roles actions\n    if (values.selectedRoles.length > 0) {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-and-add\");\n    } else {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-all\");\n    }\n    // Save Employee data actions\n    await Invoke.updateEmployee(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    setTimeout(() => {\n      navigate(\"/employees\");\n    }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doAddEmployeeRoleProcess = async (newRoleId, employeeId) => {\n  const payload = {\n    employee_id: employeeId,\n    role_id: newRoleId,\n  };\n  await Invoke.addEmployeeRole(payload);\n};\n\nconst doDeleteAllEmployeeRoleProcess = async (roleListApi) => {\n  roleListApi.data.map(async (item, index) => {\n    await Invoke.deleteEmployeeRole(item.id);\n  });\n};\n\nconst doDeleteEmployeeProcess = async (employeeId) => {\n  const { getState } = store;\n  const paging = getState().employees.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeById(employeeId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    loadEmployeeListData(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doSaveEmployeeRole = async (newRoleSelected, type) => {\n  const { getState } = store;\n  try {\n    const currentRoleSelected = getState().employees.selectedRoleEmployee;\n    const selectedEmployeeId = getState().employees.selectedEmployeeId;\n    const { data } = await Invoke.getEmployeeRoles(selectedEmployeeId, 1, 100);\n    const roleListApi = data.callback;\n\n    if (type === \"delete-all\") {\n      await currentRoleSelected.map(async (item, index) => {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n      });\n    } else if (type === \"add\") {\n      await newRoleSelected.map(async (item, index) => {\n        await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n      });\n    } else {\n      // Check if the user is has been have roles or not\n      if (currentRoleSelected.length > 0) {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      } else {\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveEmployeeRequested = async (\n  formStatus,\n  values,\n  roleSelected\n) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeProcess(values, roleSelected);\n      } else {\n        doEditEmployeeProcess(values, roleSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employees.selectedEmployeeData;\n  const branch = `${data.branch_id}|${data.branch_name}`;\n  const province = `${data.province_id}|${data.province_name}`;\n  const city = `${data.city_id}|${data.city_name}`;\n\n  dispatch(change(\"editEmployeeForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `nik`, data.nik ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, branch ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, province ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, city ?? \"\"));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(MasterDataActions.setCityListData([]));\n  dispatch(change(\"editEmployeeForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n};\n\nexport const deleteEmployeeRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n\n  if (!values) {\n    await loadEmployeeListData(page, limit, keyword);\n    return;\n  }\n\n  const splitRole = values.role ? values.role.split(\"|\") : \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const splitDivision = values.division ? values.division.split(\"|\") : \"\";\n\n  const roleId = values.role ? splitRole[0] : \"\";\n  const branchId = values.branch ? splitBranch[0] : \"\";\n  const divisionId = values.division ? splitDivision[0] : \"\";\n\n  try {\n    await loadEmployeeListData(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_ID,\n  SET_SELECTED_EMPLOYEE_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_ROLE_EMPLOYEE,\n  SET_PAGING_EMPLOYEES,\n  SET_EMPLOYEE_LIST_DROPDOWN,\n  SET_IS_EMPLOYEE_DATA_LOADED,\n} from \"./EmployeesActions\";\n\nexport const initialState = {\n  listEmployees: [],\n  isEmployeeDataLoaded: false,\n  listEmployeeDropdown: [],\n  selectedEmployeeId: \"\",\n  selectedEmployeeData: {},\n  selectedRoleEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_LIST_DATA:\n      newState.listEmployees = action.payload;\n      return { ...newState };\n\n    case SET_EMPLOYEE_LIST_DROPDOWN:\n      newState.listEmployeeDropdown = action.payload;\n      return { ...newState };\n\n    case SET_IS_EMPLOYEE_DATA_LOADED:\n      newState.isEmployeeDataLoaded = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_ID:\n      newState.selectedEmployeeId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_DATA:\n      newState.selectedEmployeeData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_EMPLOYEE:\n      newState.selectedRoleEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEES:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_TOOL_LIST_DATA = \"SET_EMPLOYEE_TOOL_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_ID = \"SET_SELECTED_EMPLOYEE_TOOLS_ID\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_DATA =\n  \"SET_SELECTED_EMPLOYEE_TOOLS_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEE_TOOLS = \"SET_PAGING_EMPLOYEE_TOOLS\";\n\nexport const setEmployeeToolsListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_TOOL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployeeTools = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEE_TOOLS,\n    payload,\n  };\n};\n\nexport const getEmployeeToolsRequested = async (\n  employeeId,\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeTools(employeeId, page, limit);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployeeTools(paging));\n    store.dispatch(setEmployeeToolsListData(data.callback.data));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeToolsData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const slpitToolsId = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.tool_id = slpitToolsId[0];\n\n    await Invoke.addEmployeeTools(payload);\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const employeeId = getState().employees.selectedEmployeeId;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const splitTools = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.employee_id = employeeId;\n    payload.tool_id = splitTools[0];\n\n    // Save Employee data actions\n    await Invoke.updateEmployeeTools(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doDeleteEmployeeToolsProcess = async (employeeToolsId) => {\n  const { getState } = store;\n  const paging = getState().employeeTools.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeToolsById(employeeToolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveEmployeeToolsRequested = async (formStatus, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeToolsProcess(values);\n      } else {\n        doEditEmployeeToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employeeTools.selectedEmployeeToolsData;\n  // const splitTools = data;\n  const tools = `${data.tool_id}|${data.name}`;\n\n  dispatch(change(\"editEmployeeToolsForm\", `id`, data.id));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, tools));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(change(\"editEmployeeToolsForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, \"\"));\n};\n\nexport const deleteEmployeeToolsRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeToolsProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n\n  if (!values) {\n    getEmployeeToolsRequested(employeeId, page, limit, keyword);\n    return;\n  }\n\n  try {\n    await getEmployeeToolsRequested(employeeId, page, limit, keyword);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_TOOL_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_TOOLS_ID,\n  SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_EMPLOYEE_TOOLS,\n} from \"./EmployeeToolsActions\";\n\nexport const initialState = {\n  listEmployeeTools: [],\n  selectedEmployeeToolsId: \"\",\n  selectedEmployeeToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeeToolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_TOOL_LIST_DATA:\n      newState.listEmployeeTools = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_ID:\n      newState.selectedEmployeeToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_DATA:\n      newState.selectedEmployeeToolsData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEE_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_PROVINCE_LIST_DATA,\n  SET_MENU_LIST_DATA,\n  SET_CITY_LIST_DATA\n} from \"./MasterDataActions\";\n\nexport const initialState = {\n  listProvince: [],\n  listCity: [],\n  listMenu: [],\n};\n\nexport default function masterDataReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_PROVINCE_LIST_DATA:\n      newState.listProvince = action.payload;\n      return { ...newState };\n    case SET_CITY_LIST_DATA:\n      newState.listCity = action.payload;\n      return { ...newState };\n    case SET_MENU_LIST_DATA:\n      newState.listMenu = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_ID = \"SET_SELECTED_UNIT_ID\";\nexport const SET_SELECTED_UNIT_DATA = \"SET_SELECTED_UNIT_DATA\";\nexport const SET_PAGING_UNIT = \"SET_PAGING_UNIT\";\n\nexport const setUnitListData = (payload) => {\n  return {\n    type: SET_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnit = (payload) => {\n  return {\n    type: SET_PAGING_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteUnitProcess = async (unitId) => {\n  const { getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitById(unitId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    payload.photo = values.imageUrl ?? \"\";\n    await Invoke.addUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.photo = values.imageUrl ?? \"\";\n    payload.description = values.description;\n    await Invoke.updateUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitForm\", `id`, \"\"));\n  dispatch(change(\"editUnitForm\", `name`, \"\"));\n  dispatch(change(\"editUnitForm\", `description`, \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, \"\"));\n};\n\nexport const mapDetailUnitToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().units.selectedUnitsData;\n\n  dispatch(change(\"editUnitForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitForm\", `description`, data.description ?? \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, data.photo ?? \"\"));\n};\n\nexport const getUnitListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getUnitList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitListData(data.callback.data));\n    store.dispatch(setPagingUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitProcess(values);\n      } else {\n        doEditUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitRequested = async (unitId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitProcess(unitId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_ID,\n  SET_SELECTED_UNIT_DATA,\n  SET_PAGING_UNIT\n} from \"./UnitsActions\";\n\nexport const initialState = {\n  listUnits: [],\n  selectedUnitsId: \"\",\n  selectedUnitsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_LIST_DATA:\n      newState.listUnits = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_ID:\n      newState.selectedUnitsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_DATA:\n      newState.selectedUnitsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_JOB_FORMS_LIST_DATA = \"SET_JOB_FORMS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_JOB_FORMS_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_JOB_FORMS_DATA = \"SET_SELECTED_JOB_FORMS_DATA\";\nexport const SET_PAGING_JOB_FORM = \"SET_PAGING_JOB_FORM\";\n\nexport const setJobFormsListData = (payload) => {\n  return {\n    type: SET_JOB_FORMS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingJobForm = (payload) => {\n  return {\n    type: SET_PAGING_JOB_FORM,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsData = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (jobFormsId) => {\n  const { getState } = store;\n  const data = getState().jobForms;\n  const { paging } = data;\n\n  try {\n    await Invoke.deleteJobForms(jobFormsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getJobFormsListDataRequested(paging.page, paging.limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editJobForms\", `id`, \"\"));\n  dispatch(change(\"editJobForms\", `name`, \"\"));\n  dispatch(change(\"editJobForms\", `description`, \"\"));\n};\n\nexport const mapDetailJobFormsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().jobForms.selectedJobFormsData;\n  dispatch(change(\"editJobForms\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editJobForms\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editJobForms\", `description`, data.description ?? \"\"));\n};\n\nexport const getJobFormsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListJobForm(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page ?? 1;\n    paging.limit = data.callback.limit ?? 10;\n    paging.totalPage = data.callback.totalPage ?? 1;\n    store.dispatch(setJobFormsListData(data.callback.data));\n    store.dispatch(setPagingJobForm(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveJobFormsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddJobFormsProcess(values);\n      } else {\n        doEditJobFormsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteJobFormsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_JOB_FORMS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_JOB_FORMS_ID,\n  SET_SELECTED_JOB_FORMS_DATA,\n  SET_PAGING_JOB_FORM,\n} from \"./JobFormsActions\";\n\nexport const initialState = {\n  listJobForms: [],\n  selectedJobFormsId: \"\",\n  selectedJobFormsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function jobFormsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_JOB_FORMS_LIST_DATA:\n      newState.listJobForms = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_ID:\n      newState.selectedJobFormsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_DATA:\n      newState.selectedJobFormsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_JOB_FORM:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_BRANCH_LIST_DATA = \"SET_BRANCH_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_BRANCH_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_BRANCH_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_BRANCH = \"SET_PAGING_BRANCH\";\nexport const SET_BRANCH_LIST_DATA_DROPDOWN = \"SET_BRANCH_LIST_DATA_DROPDOWN\";\n\nexport const setBranchListData = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setBranchListDataDropdown = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingBranch = (payload) => {\n  return {\n    type: SET_PAGING_BRANCH,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedBranchId = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_ID,\n    payload,\n  };\n};\n\nexport const setSelectedBranchData = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteBranchById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getBranchListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.addBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.updateBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editBranchForm\", `id`, \"\"));\n  dispatch(change(\"editBranchForm\", `description`, \"\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().branch.selectedBranchData;\n  dispatch(change(\"editBranchForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editBranchForm\", `description`, data.name ?? \"\"));\n};\n\nexport const getBranchListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  isDropdown = false\n) => {\n  try {\n    const { data } = await Invoke.getListBranch(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdown) {\n      store.dispatch(setBranchListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setBranchListData(data.callback.data));\n    }\n    store.dispatch(setPagingBranch(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveBranchRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddBranchProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteBranchRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_BRANCH_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_BRANCH,\n  SET_SELECTED_BRANCH_ID,\n  SET_SELECTED_BRANCH_DATA,\n  SET_BRANCH_LIST_DATA_DROPDOWN\n} from \"./BranchActions\";\n\nexport const initialState = {\n  listBranch: [],\n  listBranchDropdown: [],\n  selectedBranchId: \"\",\n  selectedBranchData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_BRANCH_LIST_DATA:\n      newState.listBranch = action.payload;\n      return { ...newState };\n\n    case SET_BRANCH_LIST_DATA_DROPDOWN:\n      newState.listBranchDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_ID:\n      newState.selectedBranchId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_DATA:\n      newState.selectedBranchData = action.payload;\n      return { ...newState };\n    case SET_PAGING_BRANCH:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_SERVICES_SUMMARY_DATA,\n  SET_SELECTED_SERVICES_MEDIA_DATA,\n  SET_SELECTED_SERVICES_DAILIES_DATA,\n  SET_SELECTED_SERVICES_HISTORIES_DATA,\n  SET_SELECTED_SERVICES_CHECKLIST_DATA,\n  SET_SELECTED_SERVICES_REJECTED_DATA,\n  SET_REJECTIONS_MODAL,\n  SET_EDIT_TRANSACTION_MODAL,\n  SET_EDIT_DAILIES_MODAL,\n  SET_SELECTED_EDIT_DAILIES_DATA,\n  SET_SELECTED_UNIT,\n  RESET_DETAIL_SERVICE,\n  SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n  SET_GROUPING_SUMMARY_DATA,\n  SET_SINGLE_SUMMARY_DATA,\n  SET_GROUPING_CHECKLIST_DATA,\n  SET_INSERT_MEDIA_MODAL,\n  SET_TYPE_FORM_DAILIES,\n  SET_EDIT_SUMMARY_MODAL,\n} from \"./DetailServiceTransactionAction\";\n\nexport const initialState = {\n  selectedServiceEmployeeList: [],\n  selectedServiceSummary: {},\n  selectedServiceMedia: [],\n  groupingSelectedServiceMedia: [],\n  groupingSelectedServiceSummary: [],\n  singleSelectedServiceSummary: {},\n  groupingSelectedServiceChecklist: [],\n  selectedServiceDailies: [],\n  selectedServiceHistories: [],\n  selectedServiceChecklist: [],\n  selectedServiceRejected: [],\n  rejectionsModal: false,\n  editTransactionModal: false,\n  editDailiesModal: false,\n  editSummaryModal: false,\n  insertMediaModal: false,\n  typeFormDailies: \"add\",\n  selectedEditDailies: {},\n  selectedUnit: \"Seluruh Unit\",\n};\n\nexport default function detailServiceTransactionReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA:\n      newState.selectedServiceEmployeeList = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_SUMMARY_DATA:\n      newState.selectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_MEDIA_DATA:\n      newState.selectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA:\n      newState.groupingSelectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SUMMARY_DATA:\n      newState.groupingSelectedServiceSummary = action.payload;\n    case SET_SINGLE_SUMMARY_DATA:\n      newState.singleSelectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_GROUPING_CHECKLIST_DATA:\n      newState.groupingSelectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_DAILIES_DATA:\n      newState.selectedServiceDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_HISTORIES_DATA:\n      newState.selectedServiceHistories = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_CHECKLIST_DATA:\n      newState.selectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_REJECTED_DATA:\n      newState.selectedServiceRejected = action.payload;\n      return { ...newState };\n    case SET_REJECTIONS_MODAL:\n      newState.rejectionsModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_TRANSACTION_MODAL:\n      newState.editTransactionModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_DAILIES_MODAL:\n      newState.editDailiesModal = action.payload;\n      return { ...newState };\n    case SET_SELECTED_EDIT_DAILIES_DATA:\n      newState.selectedEditDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      return { ...newState };\n    case SET_INSERT_MEDIA_MODAL:\n      newState.insertMediaModal = action.payload;\n      return { ...newState };\n    case SET_TYPE_FORM_DAILIES:\n      newState.typeFormDailies = action.payload;\n      return { ...newState };\n    case SET_EDIT_SUMMARY_MODAL:\n      newState.editSummaryModal = action.payload;\n      return { ...newState };\n    case RESET_DETAIL_SERVICE:\n      return initialState;\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_MODEL_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_MODEL_ID = \"SET_SELECTED_UNIT_MODEL_ID\";\nexport const SET_SELECTED_UNIT_MODEL_DATA = \"SET_SELECTED_UNIT_MODEL_DATA\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\n\nexport const setUnitModelListData = (payload) => {\n  return {\n    type: SET_UNIT_MODEL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_DATA,\n    payload,\n  };\n};\n\nexport const getUnitModelListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitModel(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitModelListData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitModelsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.addUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitModelsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = values.unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.updateUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (unitModelId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitModelById(unitModelId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitModelsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitModelsProcess(values);\n      } else {\n        doEditUnitModelsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitModelToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitModels.selectedUnitModelsData;\n\n  dispatch(change(\"editUnitModelForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, data.descriptions ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(change(\"editUnitModelForm\", `machineNo`, data.machine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, data.engine_model ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, data.engine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, data.chasis_no ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `transmissionNo`, data.transmission_no ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitModelForm\", `id`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `machineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `transmissionNo`, \"\"));\n};\n","import {\n  SET_UNIT_MODEL_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_MODEL_ID,\n  SET_SELECTED_UNIT_MODEL_DATA,\n  SET_PAGING_UNIT_MODEL\n} from \"./UnitModelActions\";\n\nexport const initialState = {\n  listUnitModels: [],\n  selectedUnitModelsId: \"\",\n  selectedUnitModelsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitModelReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_MODEL_LIST_DATA:\n      newState.listUnitModels = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_ID:\n      newState.selectedUnitModelsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_DATA:\n      newState.selectedUnitModelsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_ENUM_UNIT_MODEL = \"SET_ENUM_UNIT_MODEL\";\n\nexport const setEnumUnintModel = (payload) => {\n  return {\n    type: SET_ENUM_UNIT_MODEL,\n    payload,\n  };\n};\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateUnitModel = async (unitId, fieldIndex) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getListUnitModel(1, 100, unitId, \"\");\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${fieldIndex}].enumUnitModel`,\n      data.callback.data ?? []\n    )\n  );\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"externalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(1, 200, employeeData.province_id);\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === employeeData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        citySelected.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        citySelected\n      )\n    );\n    // store.dispatch(\n    //   change(\"externalServiceForm\", \"employeeCityName\", detailEmployee.nik)\n    // );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"externalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"externalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const onChangeUnitModel = (val, index, enumUnit) => {\n  const { dispatch } = store;\n\n  const splitUnitModel = val.split(\"|\");\n\n  const [selectedUnitModel] = enumUnit.filter(\n    (x) => x.id === splitUnitModel[0]\n  );\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${index}].unitModelSerialNumber`,\n      selectedUnitModel.serial_number ?? \"\"\n    )\n  );\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  const splitWarranty = values.warranty.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const unitList = [];\n  values.units.map((item, index) => {\n    const splitUnitModel = item.unitModelId.split(\"|\");\n    unitList.push({\n      unit_model_id: splitUnitModel[0],\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"true\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: splitWarranty[0],\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: unitList ?? [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              resolve();\n            }, 1000);\n            setTimeout(() => {\n              navigate(\"list_service\");\n            }, 1500);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import { SET_ENUM_UNIT_MODEL } from \"./ExternalServiceActions\";\n\nexport const initialState = {\n  enumUnitModel: [],\n};\n\nexport default function externalServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ENUM_UNIT_MODEL:\n      newState.enumUnitModel = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change, reset } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { message } from \"antd\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_IDENTIFICATIONN_LIST_DATA = \"SET_IDENTIFICATIONN_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_IDENTIFICATION_ID = \"SET_SELECTED_IDENTIFICATION_ID\";\nexport const SET_PAGING_IDENTIFICATION = \"SET_PAGING_IDENTIFICATION\";\nexport const SET_SELECTED_IDENTIFICATION_DATA =\n  \"SET_SELECTED_IDENTIFICATION_DATA\";\n\nexport const setIdentificationListData = (payload) => {\n  return {\n    type: SET_IDENTIFICATIONN_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingIdentification = (payload) => {\n  return {\n    type: SET_PAGING_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationId = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationData = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_DATA,\n    payload,\n  };\n};\n\nexport const getIdentificationListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState, dispatch } = store;\n  try {\n    const branches = getState().branch.listBranch;\n    const { data } = await Invoke.getIdentificationList(page, limit, keyword);\n    const identificationList = data.callback.data;\n\n    const newIdentificationList = [];\n    if (identificationList.length > 0) {\n      identificationList.map((item, index) => {\n        const [defaultBranch] = branches.filter((x) => x.id === item.branch_id);\n        item.branch_name = defaultBranch ? defaultBranch.name : \"-\";\n\n        newIdentificationList.push(item);\n      });\n    }\n\n    dispatch(setIdentificationListData(newIdentificationList));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteIdentificationProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteIdentificationById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddIdentificationProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const splitCustomer = values.customer.split(\"|\");\n    const splitBranch = values.branch.split(\"|\");\n    const splitLocation = values.location.split(\"|\");\n    const splitMilling = values.milling.split(\"|\");\n    const splitType = values.type.split(\"|\");\n\n    const payload = {};\n    payload.customer_id = splitCustomer[0];\n    payload.branch_id = splitBranch[0];\n    payload.location = splitLocation[0];\n    payload.type = splitType[0];\n    payload.status = SelectStatus[0].value;\n    payload.milling = splitMilling[0];\n\n    await Invoke.addIdentification(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationMilling = async (values, isLastStep) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = !values.instanceType\n      ? \"\"\n      : values.instanceType.split(\"|\");\n    const splitMillingStatus = !values.millingStatus\n      ? \"\"\n      : values.millingStatus.split(\"|\");\n    const splitCity = !values.city ? \"\" : values.city.split(\"|\") ?? [];\n    const splitProvince = !values.province\n      ? \"\"\n      : values.province.split(\"|\") ?? [];\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0],\n      instance_name: values.instanceName ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0] ?? \"\",\n      city: splitCity[1] ?? \"\",\n      province: splitProvince[1] ?? \"\",\n      phone: values.phone ?? \"\",\n      milling_capacity: values.millingCapacity ?? \"\",\n      milling_work_capacity_perday: values.millingWorkCapacityPerDay ?? \"\",\n      rice_trademark: values.riceTrademark ?? \"\",\n      history_service_place: values.history_service_place ?? \"\",\n      history_service_type: values.history_service_type ?? \"\",\n      notes: values.note ?? \"\",\n      engine_confs: engineConfs,\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    if (isLastStep) {\n      showToast(\"Menyimpan perubahan\", \"success\");\n      setTimeout(() => {\n        navigate(\"identification\");\n      }, 1000);\n    }\n    // return;\n    await Invoke.updateIdentificationMilling(payload);\n    // showToast(\"Pembaruan Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationRegular = async (values, isFinished) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    if (!values || values === undefined) {\n      // showToast(\"Harap lengkapi form untuk melanjutkan\", \"error\");\n      return;\n    }\n\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = values?.instanceType.split(\"|\");\n    const splitMillingStatus = values.millingStatus\n      ? values?.millingStatus.split(\"|\")\n      : [\"\"];\n    const splitCity = values?.city.split(\"|\");\n    const splitProvince = values?.province.split(\"|\");\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0] ?? \"\",\n      instance_name: values.instanceName ?? \"\",\n      instance_address: values.instanceAddress ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0],\n      address_district: \"\",\n      address_city: splitCity[1] ?? \"\",\n      address_province: splitProvince[1] ?? \"\",\n      address_subdistrict: values.kelurahan ?? \"\",\n      address_postal_code: values.postalCode ?? \"\",\n      phone: values.instancePhoneNumber ?? \"\",\n      product_name: values.productName,\n      buy_date: \"2021-09-22\",\n      assistance_date: \"2021-09-25\",\n      serial_number: \"SN1231\",\n      machine_number: \"MCN1231\",\n      gearbox_number: \"GB1231\",\n      production_unit_year: \"2021\",\n      work_hour_per_day: \"8 Hours\",\n      hour_meter: 1233,\n      history_service_place: \"Fee Text\",\n      history_service_type: \"Fee Text\",\n      notes: \"Test Regular Identification\",\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    // return;\n    await Invoke.updateIdentificationRegular(payload);\n    if (isFinished) {\n      showToast(\"Data berhasil disimpan\", \"success\");\n      getIdentificationListRequested(page, limit);\n      navigate(\"/identification\");\n    }\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n// === END INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(reset(\"editIdentificationhForm\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().identification.setSelectedIdentificationData;\n  dispatch(change(\"editIdentificationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editIdentificationForm\", `description`, data.name ?? \"\"));\n};\n\nexport const saveIdentificationRequested = async (\n  type,\n  values,\n  isLastStep = false\n) => {\n  const { getState } = store;\n  const isMilling =\n    getState().identification.selectedIdentificationData.milling;\n\n  if (type === \"add\") {\n    doAddIdentificationProcess(values);\n  } else {\n    if (isMilling) {\n      doUpdateIdentificationMilling(values, isLastStep);\n    } else {\n      doUpdateIdentificationRegular(values, isLastStep);\n    }\n  }\n};\n\nexport const deleteIdentificationRequested = async (identificationId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteIdentificationProcess(identificationId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_IDENTIFICATIONN_LIST_DATA,\n  SET_SELECTED_IDENTIFICATION_DATA,\n  SET_SELECTED_IDENTIFICATION_ID,\n  SET_FORM_STATUS,\n  SET_PAGING_IDENTIFICATION\n} from \"./IdentificationActions\";\n\nexport const initialState = {\n  listIdentification: [],\n  selectedIdentificationId: \"\",\n  selectedIdentificationData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function identificationReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_IDENTIFICATIONN_LIST_DATA:\n      newState.listIdentification = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_ID:\n      newState.selectedIdentificationId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_DATA:\n      newState.selectedIdentificationData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_IDENTIFICATION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_MACHINE_LIST_DATA = \"SET_MACHINE_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_MACHINE_ID = \"SET_SELECTED_MACHINE_ID\";\nexport const SET_SELECTED_MACHINE_DATA = \"SET_SELECTED_MACHINE_DATA\";\nexport const SET_PAGING_MACHINE_CONF = \"SET_PAGING_MACHINE_CONF\";\n\nexport const setMachineListData = (payload) => {\n  return {\n    type: SET_MACHINE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMachineConf = (payload) => {\n  return {\n    type: SET_PAGING_MACHINE_CONF,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedMachineId = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedMachineData = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteMachineProcess = async (machineId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteEngine(machineId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getMachineListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editMachineConfigurationForm\", `name`, \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `description`, \"\"));\n};\n\nexport const mapDetailMachineToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().machineConfiguration.selectedMachineData;\n  dispatch(change(\"editMachineConfigurationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `name`, data.name ?? \"\"));\n  dispatch(\n    change(\n      \"editMachineConfigurationForm\",\n      `description`,\n      data.description ?? \"\"\n    )\n  );\n};\n\nexport const getMachineListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListEngine(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setMachineListData(data.callback.data));\n    store.dispatch(setPagingMachineConf(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveMachineRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddMachineProcess(values);\n      } else {\n        doEditMachineProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteMachineRequested = async (machineId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteMachineProcess(machineId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_MACHINE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_MACHINE_ID,\n  SET_SELECTED_MACHINE_DATA,\n  SET_PAGING_MACHINE_CONF,\n} from \"./MachineConfigurationActions\";\n\nexport const initialState = {\n  listMachine: [],\n  selectedMachineId: \"\",\n  selectedMachineData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function machineConfigurationReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MACHINE_LIST_DATA:\n      newState.listMachine = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_ID:\n      newState.selectedMachineId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_DATA:\n      newState.selectedMachineData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MACHINE_CONF:\n      newState.paging = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_TOOLS_LIST_DATA = \"SET_TOOLS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_TOOLS_ID = \"SET_SELECTED_TOOLS_ID\";\nexport const SET_SELECTED_TOOLS_DATA = \"SET_SELECTED_TOOLS_DATA\";\nexport const SET_PAGING_TOOLS = \"SET_PAGING_TOOLS\";\n\nexport const setToolsListData = (payload) => {\n  return {\n    type: SET_TOOLS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingTools = (payload) => {\n  return {\n    type: SET_PAGING_TOOLS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteToolsProcess = async (toolsId) => {\n  const { getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteTool(toolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getToolsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.addTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.updateTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editToolsForm\", `id`, \"\"));\n  dispatch(change(\"editToolsForm\", `name`, \"\"));\n  dispatch(change(\"editToolsForm\", `description`, \"\"));\n};\n\nexport const mapDetailToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().tools.selectedToolsData;\n  dispatch(change(\"editToolsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editToolsForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editToolsForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getToolsListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListTools(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setToolsListData(data.callback.data));\n    store.dispatch(setPagingTools(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveToolsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddToolsProcess(values);\n      } else {\n        doEditToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteToolsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteToolsProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_TOOLS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_TOOLS_ID,\n  SET_SELECTED_TOOLS_DATA,\n  SET_PAGING_TOOLS,\n} from \"./ToolsActions\";\n\nexport const initialState = {\n  listTools: [],\n  selectedToolsId: \"\",\n  selectedToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function toolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_TOOLS_LIST_DATA:\n      newState.listTools = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_ID:\n      newState.selectedToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_DATA:\n      newState.selectedToolsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_FORM_CATEGORY_LIST_DATA = \"SET_FORM_CATEGORY_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_FORM_CATEGORY_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_FORM_CATEGORY_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_FORM_CATEGORY = \"SET_PAGING_FORM_CATEGORY\";\n\nexport const setFormCategoryListData = (payload) => {\n  return {\n    type: SET_FORM_CATEGORY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingFormCategory = (payload) => {\n  return {\n    type: SET_PAGING_FORM_CATEGORY,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryId = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_ID,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryData = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteFormCategoryProcess = async (categoryFormId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteFormCategory(categoryFormId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"Nones\";\n    await Invoke.updateFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editFormCategory\", `id`, \"\"));\n  dispatch(change(\"editFormCategory\", `name`, \"\"));\n  dispatch(change(\"editFormCategory\", `description`, \"\"));\n};\n\nexport const mapDetailCategoryToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().formCategory.selectedFormCategoryData;\n  dispatch(change(\"editFormCategory\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editFormCategory\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editFormCategory\", `description`, data.description ?? \"\"));\n};\n\nexport const getFormCatgeoryListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getFormCategory(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setFormCategoryListData(data.callback.data));\n    store.dispatch(setPagingFormCategory(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveFormCategoryRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddFormCategoryProcess(values);\n      } else {\n        doEditFormCategoryProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteFormCategoryRequested = async (formCategoryId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteFormCategoryProcess(formCategoryId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_FORM_CATEGORY_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_FORM_CATEGORY_ID,\n  SET_SELECTED_FORM_CATEGORY_DATA,\n  SET_PAGING_FORM_CATEGORY\n} from \"./FormCategoryActions\";\n\nexport const initialState = {\n  listFormCategory: [],\n  selectedFormCategoryId: \"\",\n  selectedFormCategoryData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function formCategoryReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_FORM_CATEGORY_LIST_DATA:\n      newState.listFormCategory = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_ID:\n      newState.selectedFormCategoryId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_DATA:\n      newState.selectedFormCategoryData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_FORM_CATEGORY:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_FIELDS_LIST_DATA = \"SET_UNIT_FIELDS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_FIELDS_ID = \"SET_SELECTED_UNIT_FIELDS_ID\";\nexport const SET_SELECTED_UNIT_FIELDS_DATA = \"SET_SELECTED_UNIT_FIELDS_DATA\";\nexport const SET_PAGING_UNIT_FIELDS = \"SET_PAGING_UNIT_FIELDS\";\n\nexport const setUnitFieldsListData = (payload) => {\n  return {\n    type: SET_UNIT_FIELDS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitFields = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_FIELDS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_DATA,\n    payload,\n  };\n};\n\nexport const getUnitFieldsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitFields(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitFieldsListData(data.callback.data));\n    store.dispatch(setPagingUnitFields(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddUnitFieldsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.addUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitFieldsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitFieldsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitFieldsProcess(values);\n      } else {\n        doEditUnitFieldsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_UNIT_FIELDS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_FIELDS_ID,\n  SET_SELECTED_UNIT_FIELDS_DATA,\n  SET_PAGING_UNIT_FIELDS,\n} from \"./UnitFieldsActions\";\n\nexport const initialState = {\n  listUnitFields: [],\n  selectedUnitFieldsId: \"\",\n  selectedUnitFieldsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitFieldsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_FIELDS_LIST_DATA:\n      newState.listUnitFields = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_ID:\n      newState.selectedUnitFieldsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_DATA:\n      newState.selectedUnitFieldsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_FIELDS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_MONITORING_EMPLOYEE_LIST_DATA =\n  \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setMonitoringEmployeeListData = (payload) => {\n  return {\n    type: SET_MONITORING_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getMonitoringEmployeeListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().monitoringEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportMonitoringEmployee(\n      page,\n      limit,\n      from,\n      until,\n      type,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListMonitoringEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newListMonitoringEmployee.push({\n            created_date: item.date,\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(\n      setMonitoringEmployeeListData(newListMonitoringEmployee ?? [])\n    );\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values, isBlock) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n  const defaultBranch = getState().auth.userDetail.branchId;\n\n  if (!values) {\n    if (isBlock) {\n      await getMonitoringEmployeeListDataRequested(\n        page,\n        limit,\n        \"\",\n        \"all\",\n        defaultBranch\n      );\n      return;\n    } else {\n      await getMonitoringEmployeeListDataRequested(page, limit);\n      return;\n    }\n  }\n\n  const splitType = values.type ? values.type.split(\"|\") : \"\";\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const type = values.type ? splitType[0] : \"all\";\n  const specificBranch = values.branch ? splitBranch[0] : \"\";\n  const branch = isBlock ? defaultBranch : specificBranch;\n\n  try {\n    await getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_MONITORING_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./MonitoringEmployeeActions\";\n\nexport const initialState = {\n  listMonitoringEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function monitoringEmployeeReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MONITORING_EMPLOYEE_LIST_DATA:\n      newState.listMonitoringEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_SERVICE_REPAIR_LIST_DATA = \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_SERVICE_REPAIR = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setServiceRepairListData = (payload) => {\n  return {\n    type: SET_SERVICE_REPAIR_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingServiceRepair = (payload) => {\n  return {\n    type: SET_PAGING_SERVICE_REPAIR,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getServiceRepairListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().serviceRepair.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportServiceRepair(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListServiceRepair = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        newListServiceRepair.push({\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setServiceRepairListData(newListServiceRepair ?? []));\n    store.dispatch(setPagingServiceRepair(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values, isBlock) => {\n  const { getState } = store;\n  const { page, limit } = getState().serviceRepair.paging;\n  const defaultBranch = getState().auth.userDetail.branchId;\n\n  if (!values) {\n  }\n\n  if (!values) {\n    if (isBlock) {\n      await getServiceRepairListDataRequested(\n        page,\n        limit,\n        \"\",\n        \"all\",\n        defaultBranch\n      );\n      return;\n    } else {\n      await getServiceRepairListDataRequested(page, limit);\n      return;\n    }\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const specificBranch = values.branch ? splitBranch[0] : \"\";\n  const branch = isBlock ? defaultBranch : specificBranch;\n\n  try {\n    await getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_SERVICE_REPAIR_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_SERVICE_REPAIR,\n} from \"./ReportServiceRepairActions\";\n\nexport const initialState = {\n  listServiceRepair: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportServiceRepairReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SERVICE_REPAIR_LIST_DATA:\n      newState.listServiceRepair = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_SERVICE_REPAIR:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_EMPLOYEE_LIST_DATA = \"SET_REPORT_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_REPORT_EMPLOYEE = \"SET_PAGING_REPORT_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportEmployeeListData = (payload) => {\n  return {\n    type: SET_REPORT_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportEmployee = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportEmployeeListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values, isBlock) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee.paging;\n  const defaultBranch = getState().auth.userDetail.branchId;\n\n  if (!values) {\n    if (isBlock) {\n      await getReportEmployeeDataRequested(page, limit, \"\", defaultBranch);\n      return;\n    } else {\n      await getReportEmployeeDataRequested(page, limit);\n      return;\n    }\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const specificBranch = values.branch ? splitBranch[0] : \"\";\n  const branch = isBlock ? defaultBranch : specificBranch;\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/* eslint-disable default-case */\nimport {\n  SET_REPORT_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_REPORT_EMPLOYEE,\n} from \"./ReportEmployeeActions\";\n\nexport const initialState = {\n  listReportEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportEmployeeReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  switch (action.type) {\n    case SET_REPORT_EMPLOYEE_LIST_DATA:\n      newState.listReportEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_REPORT_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_LIST_DATA = \"SET_DIVISION_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_ID = \"SET_SELECTED_DIVISION_ID\";\nexport const SET_SELECTED_DIVISION_DATA = \"SET_SELECTED_DIVISION_DATA\";\nexport const SET_PAGING_DIVISION = \"SET_PAGING_DIVISION\";\n\nexport const setDivisionListData = (payload) => {\n  return {\n    type: SET_DIVISION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivision = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteDivisionProcess = async (divisionId) => {\n  const { getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteDivision(divisionId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddDivisionProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = headDivision[0];\n    payload.title = values.title;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.title = values.title;\n    payload.employee_id = headDivision[0];\n    payload.description = values.description ?? \"none\";\n    await Invoke.updateDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editDivisionForm\", `id`, \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, \"\"));\n  dispatch(change(\"editDivisionForm\", `headDivision`, \"\"));\n};\n\nexport const mapDetailDivisionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().division.selectedDivisionData;\n\n  dispatch(change(\"editDivisionForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, data.description ?? \"\"));\n  dispatch(\n    change(\n      \"editDivisionForm\",\n      `headDivision`,\n      `${data.employee_id}|${data.employee_name}`\n    )\n  );\n};\n\nexport const getDivisionListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getDivisionList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionListData(data.callback.data));\n    store.dispatch(setPagingDivision(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveDivisionRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionProcess(values);\n      } else {\n        doEditDivisionProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteDivisionRequested = async (divisionId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteDivisionProcess(divisionId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_DIVISION_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_ID,\n  SET_SELECTED_DIVISION_DATA,\n  SET_PAGING_DIVISION\n} from \"./DivisionActions\";\n\nexport const initialState = {\n  listDivision: [],\n  selectedDivisionId: \"\",\n  selectedDivisionData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_LIST_DATA:\n      newState.listDivision = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_ID:\n      newState.selectedDivisionId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_DATA:\n      newState.selectedDivisionData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_UNIT_LIST_DATA = \"SET_DIVISION_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_UNIT_ID = \"SET_SELECTED_DIVISION_UNIT_ID\";\nexport const SET_SELECTED_DIVISION_UNIT_DATA =\n  \"SET_SELECTED_DIVISION_UNIT_DATA\";\nexport const SET_PAGING_DIVISION_UNIT = \"SET_PAGING_DIVISION_UNIT\";\n\nexport const setDivisionUnitListData = (payload) => {\n  return {\n    type: SET_DIVISION_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivisionUnit = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisonUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_DATA,\n    payload,\n  };\n};\n\nexport const getDivisionUnitListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const divisionId = getState().division.selectedDivisionId;\n  try {\n    const { data } = await Invoke.getDivisionUnitList(\n      divisionId,\n      page,\n      limit,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionUnitListData(data.callback.data));\n    store.dispatch(setPagingDivisionUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddDivisionUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const divisionId = getState().division.selectedDivisionId;\n  const { page, limit } = paging;\n  const splitUnitId = values.unit.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = splitUnitId[0];\n    payload.division_id = divisionId;\n\n    await Invoke.addDivisionUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const unitId = getState().division.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveDivisionUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionUnitProcess(values);\n      } else {\n        doEditDivisionUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_DIVISION_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_UNIT_ID,\n  SET_SELECTED_DIVISION_UNIT_DATA,\n  SET_PAGING_DIVISION_UNIT,\n} from \"./DivisionUnitActions\";\n\nexport const initialState = {\n  listDivisionUnit: [],\n  selectedDivisionUnitId: \"\",\n  selectedDivisionUnitData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionUnitReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_UNIT_LIST_DATA:\n      newState.listDivisionUnit = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_ID:\n      newState.selectedDivisionUnitId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_DATA:\n      newState.selectedDivisionUnitData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_DASHBOARD_DATA = \"SET_DASHBOARD_DATA\";\n\nexport const setDashboardData = (payload) => {\n  return {\n    type: SET_DASHBOARD_DATA,\n    payload,\n  };\n};\n\nexport const getDashboardProgressData = async () => {\n  try {\n    const { dispatch } = store;\n    const { data } = await Invoke.getDashboardProgressData();\n    dispatch(setDashboardData(data.callback));\n  } catch (e) {\n    console.log(\"error : \", e);\n  }\n};\n","import { SET_DASHBOARD_DATA } from \"./DashboardActions\";\n\nexport const initialState = {\n  dashboardData: {},\n};\n\nexport default function dashboardReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DASHBOARD_DATA:\n      newState.dashboardData = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\n\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_UNIT_SERIAL_NUMBER_DATA = \"SET_UNIT_SERIAL_NUMBER_DATA\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_ID =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_ID\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_DATA =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_DATA\";\n\nexport const setUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const handleSearch = (val, keyword) => {\n  const { getState, dispatch } = store;\n  const { page, limit } = getState().unitSerialNumber.paging;\n  try {\n    if (!val) {\n      toast.warning(\n        \"Wajib memilih customer untuk menampilkan data serial number\",\n        {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n      dispatch(setUnitSerialNumberData([]));\n      return;\n    }\n    const splitCustomerId = val.customer.split(\"|\");\n    getUnitSerialNumber(page, limit, keyword, splitCustomerId[0]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUnitSerialNumber = async (\n  page,\n  limit,\n  keyword = \"\",\n  customerId\n) => {\n  // If customerId is null or undefined return this\n  if (!customerId) {\n    store.dispatch(setUnitSerialNumberData([]));\n    return;\n  }\n\n  const { getState } = store;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  try {\n    const { data } = await Invoke.getUnitSerialNumber(\n      page,\n      limit,\n      keyword,\n      unitModelId,\n      customerId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitSerialNumberData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitSerialNumberProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const customerId = values.customer.split(\"|\");\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.customer_id = customerId[0];\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.description ?? \"None\";\n\n    await Invoke.addUnitSerialNumber(payload, unitModelId);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitSerialNumberProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const unitSerialNumberId =\n    getState().unitSerialNumber.selectedUnitSerialNumberId;\n\n  try {\n    const payload = {};\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.descriptions ?? \"None\";\n\n    await Invoke.updateUnitSerialNumber(\n      payload,\n      unitModelId,\n      unitSerialNumberId\n    );\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (serialNumberId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitSerialNumber(unitModelId, serialNumberId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitSerialNumber(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitSerialNumberRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitSerialNumberProcess(values);\n      } else {\n        doEditUnitSerialNumberProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitSerialNumberToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitSerialNumber.selectedUnitSerialNumberData;\n\n  dispatch(\n    change(\n      \"editUnitSerialNumberForm\",\n      `customer`,\n      `${data.customer_id}|${data.customer_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `description`, data.descriptions ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitSerialNumberForm\", `customer`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `description`, \"\"));\n};\n","import {\n  SET_UNIT_SERIAL_NUMBER_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n  SET_PAGING_UNIT_MODEL,\n} from \"./UnitSerialNumberActions\";\n\nexport const initialState = {\n  listUnitSerialNumber: [],\n  selectedUnitSerialNumberId: \"\",\n  selectedUnitSerialNumberData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitSerialNumberReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_SERIAL_NUMBER_DATA:\n      newState.listUnitSerialNumber = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_ID:\n      newState.selectedUnitSerialNumberId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_DATA:\n      newState.selectedUnitSerialNumberData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\r\nimport Invoke from \"../../../app/axios/Invoke\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport { showToast } from \"../../Roles/Store/RolesActions\";\r\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\r\n\r\nexport const SET_UNIT_JOB_FORMS_LIST_DATA = \"SET_UNIT_JOB_FORMS_LIST_DATA\";\r\nexport const SET_PAGING_UNIT_JOB_FORMS = \"SET_PAGING_UNIT_JOB_FORMS\";\r\n\r\nexport const setUnitJobFormsListData = (payload) => {\r\n  return {\r\n    type: SET_UNIT_JOB_FORMS_LIST_DATA,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setPagingUnitJobForms = (payload) => {\r\n  return {\r\n    type: SET_PAGING_UNIT_JOB_FORMS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getUnitJobFormsListDataRequested = async (jobFormId = \"\") => {\r\n  const { getState } = store;\r\n  const unitId = getState().units.selectedUnitsId;\r\n  try {\r\n    // Get data unit jobforms from API\r\n    const { data } = await Invoke.getListUnitJobForms(unitId, jobFormId);\r\n\r\n    // Store data to reducer\r\n    store.dispatch(setUnitJobFormsListData(data.callback));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import {\r\n  SET_UNIT_JOB_FORMS_LIST_DATA,\r\n  SET_PAGING_UNIT_JOB_FORMS,\r\n} from \"./UnitJobFormActions\";\r\n\r\nexport const initialState = {\r\n  listUnitJobForms: [],\r\n  paging: {\r\n    page: 1,\r\n    limit: 10,\r\n    totalPage: 0,\r\n  },\r\n};\r\n\r\nexport default function unitJobFormsReducer(state = initialState, action) {\r\n  const newState = Object.assign({}, state);\r\n\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case SET_UNIT_JOB_FORMS_LIST_DATA:\r\n      newState.listUnitJobForms = action.payload;\r\n      return { ...newState };\r\n\r\n    case SET_PAGING_UNIT_JOB_FORMS:\r\n      newState.paging = { ...state.paging, ...action.payload };\r\n      return { ...newState };\r\n  }\r\n\r\n  return state;\r\n}\r\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_WORKING_HOURS_LIST_DATA = \"SET_WORKING_HOURS_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setWorkingHoursListData = (payload) => {\n  return {\n    type: SET_WORKING_HOURS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getWorkingHoursListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().workingHours.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getWorkingHours(\n      page,\n      limit,\n      from,\n      until,\n      keyword\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListWorkingHours = [];\n\n    if (data.callback.data.length > 0) {\n      data.callback.data.map((item, index) => {\n        newListWorkingHours.push({\n          created: moment(item.created_date).format(\"YYYY-MM-DD\"),\n          done: moment(item.done_date).format(\"YYYY-MM-DD\"),\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setWorkingHoursListData(newListWorkingHours ?? []));\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n\n  if (!values) {\n    await getWorkingHoursListDataRequested(page, limit);\n    return;\n  }\n  const keyword = values.keyword ?? \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  try {\n    await getWorkingHoursListDataRequested(\n      page,\n      limit,\n      keyword,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_WORKING_HOURS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./WorkingHoursActions\";\n\nexport const initialState = {\n  listWorkingHours: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function workingHoursReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_WORKING_HOURS_LIST_DATA:\n      newState.listWorkingHours = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { combineReducers } from \"redux\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport { connectRouter } from \"connected-react-router\";\nimport { reducer as formReducer } from \"redux-form\";\nimport history from \"./History\";\nimport authReducer from \"../modules/Auth/Store/AuthReducer\";\nimport listServicesReducer from \"../modules/ListServices/Store/ListServicesReducer\";\nimport ComponentReducer from \"../modules/App/Store/ComponentReducer\";\nimport customersReducer from \"../modules/Customers/Store/CustomersReducer\";\nimport adminReducer from \"../modules/Admin/Store/AdminReducer\";\nimport rolesReducer from \"../modules/Roles/Store/RolesReducer\";\nimport employeesReducer from \"../modules/Employees/Store/EmployeesReducer\";\nimport employeeToolsReducer from \"../modules/Employees/Store/EmployeeTools/EmployeeToolsReducer\";\nimport masterDataReducer from \"../modules/MasterData/Store/MasterDataReducer\";\nimport unitReducer from \"../modules/Units/Store/UnitsReducer\";\nimport jobFormsReducer from \"../modules/JobForms/Store/JobFormsReducer\";\nimport branchReducer from \"../modules/Branch/Store/BranchReducer\";\nimport detailServiceTransactionReducer from \"../modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer\";\nimport unitModelReducer from \"../modules/Units/Store/UnitModelReducer\";\nimport externalServiceReducer from \"../modules/ExternalService/Store/ExternalServiceReducer\";\nimport identificationReducer from \"../modules/Identification/Store/IdentificationReducer\";\nimport machineConfigurationReducer from \"../modules/MachineConfiguration/Store/MachineConfigurationReducer\";\nimport toolsReducer from \"../modules/Tools/Store/ToolsReducer\";\nimport formCategoryReducer from \"../modules/FormCategory/Store/FormCategoryReducer\";\nimport unitFieldsReducer from \"../modules/Units/Store/UnitFieldsReducer\";\nimport monitoringEmployeeReducer from \"../modules/MonitoringEmployee/Store/MonitoringEmployeeReducer\";\nimport reportServiceRepairReducer from \"../modules/ReportServiceRepair/Store/ReportServiceRepairReducer\";\nimport reportEmployeeReducer from \"../modules/ReportEmployee/Store/ReportEmployeeReducer\";\nimport divisionReducer from \"../modules/Division/Store/DivisionReducer\";\nimport divisionUnitReducer from \"../modules/Division/Store/DivisionUnitReducer\";\nimport dashboardReducer from \"../modules/Dashboard/Store/DashboardReducer\";\nimport unitSerialNumberReducer from \"../modules/Units/Store/UnitSerialNumberReducer\";\nimport unitJobFormsReducer from \"../modules/Units/Store/UnitJobFormsReducer\";\nimport workingHoursReducer from \"../modules/WorkingHours/Store/WorkingHoursReducer\";\n\nconst rootReducers = combineReducers({\n  router: connectRouter(history),\n  auth: authReducer,\n  services: listServicesReducer,\n  externalService: externalServiceReducer,\n  admins: adminReducer,\n  roles: rolesReducer,\n  units: unitReducer,\n  unitModels: unitModelReducer,\n  unitFields: unitFieldsReducer,\n  unitSerialNumber: unitSerialNumberReducer,\n  unitJobForms: unitJobFormsReducer,\n  jobForms: jobFormsReducer,\n  customers: customersReducer,\n  employees: employeesReducer,\n  employeeTools: employeeToolsReducer,\n  component: ComponentReducer,\n  identification: identificationReducer,\n  workingHours: workingHoursReducer,\n  masters: masterDataReducer,\n  branch: branchReducer,\n  formCategory: formCategoryReducer,\n  tools: toolsReducer,\n  machineConfiguration: machineConfigurationReducer,\n  detailService: detailServiceTransactionReducer,\n  monitoringEmployee: monitoringEmployeeReducer,\n  serviceRepair: reportServiceRepairReducer,\n  reportEmployee: reportEmployeeReducer,\n  division: divisionReducer,\n  divisionUnit: divisionUnitReducer,\n  dashboard: dashboardReducer,\n  form: formReducer,\n  toastr: toastrReducer,\n});\n\nexport default rootReducers;\n","import * as _ from \"lodash\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport Saga from \"./Saga/SagaMiddleware\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport history from \"../app/History\";\nimport rootReducers from \"./RootReducers\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"form\", \"component\"],\n};\n\nconst resetEnhancer = (rootReducer) => (state, action) => {\n  if (action.type !== \"LOGOUT\") {\n    return rootReducer(state, action);\n  } else {\n    console.log(\"=== run this\");\n    const newState = rootReducer(undefined, {});\n    newState.router = state.router;\n    return newState;\n  }\n};\n\nconst persistedReducer = persistReducer(\n  persistConfig,\n  resetEnhancer(rootReducers)\n);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== \"production\" &&\n  typeof window === \"object\" &&\n  _.has(window, \"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\")\n    ? composeWithDevTools({ trace: true, traceLimit: 1000 })\n    : compose;\n\nexport const store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n);\nexport const persistor = persistStore(store);\nsagaMiddleware.run(Saga);\n","import { Form } from \"antd\";\nconst FormItem = Form.Item;\n\nexport const makeField =\n  (Component, props) =>\n  ({ style, input, meta, children, hasFeedback, label, ...rest }) => {\n    const hasError = meta.touched && meta.invalid;\n    return (\n      <FormItem\n        validateStatus={hasError ? \"error\" : \"success\"}\n        hasFeedback={hasFeedback && hasError}\n        help={hasError && meta.error}\n      >\n        <Component {...props} {...input} {...rest} children={children} />\n      </FormItem>\n    );\n  };\n","import React from \"react\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport styled from \"styled-components\";\ninterface IProps {\n  loading: boolean;\n}\n\nconst Overlay = styled.div`\n  position: fixed;\n  display: block;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 99999;\n  padding-top: 23vh;\n  text-align: center;\n  margin: auto;\n  display: block;\n`;\n\nconst CGlobalOverlay: React.FC<IProps> = (props) => {\n  const { loading } = props;\n  if (loading) {\n    return (\n      <Overlay>\n        <ScaleLoader\n          height={120}\n          width={18}\n          radius={12}\n          margin={5}\n          color={\"#faad14\"}\n          loading={true}\n        />\n      </Overlay>\n    );\n  }\n  return null;\n};\n\nexport default CGlobalOverlay;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"../../style/globalStyle.css\";\n\nconst Sidebar = ({\n  role,\n  mainMenu,\n  masterDataMenu,\n  reportMenu,\n  serviceRepairMenu,\n  reportDataMenu,\n}) => {\n  return (\n    <nav class=\"sidebar\">\n      <div class=\"sidebar-header\">\n        <a href=\"#\" class=\"sidebar-brand\">\n          Rutan<span>Admin</span>\n        </a>\n        <div class=\"sidebar-toggler not-active\">\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </div>\n\n      <div class=\"sidebar-container\">\n        <div class=\"scrolled-content\">\n          <div class=\"sidebar-body\">\n            <ul class=\"nav\">\n              {mainMenu?.length > 0 && (\n                <li class=\"nav-item nav-category\">Main</li>\n              )}\n              {mainMenu?.length > 0 &&\n                mainMenu.map((item, index) => (\n                  <li key={`sidebar-main-menu-${index}`} class=\"nav-item\">\n                    <Link class=\"nav-link\" to={item.path}>\n                      {item.icon}\n                      <span class=\"link-title\">{item.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              {masterDataMenu?.length > 0 && (\n                <li class=\"nav-item nav-category\">Master Data</li>\n              )}\n              {masterDataMenu?.length > 0 &&\n                masterDataMenu.map((item, index) => (\n                  <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                    <Link class=\"nav-link\" to={item.path}>\n                      {item.icon}\n                      <span class=\"link-title\">{item.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              {serviceRepairMenu?.length > 0 && (\n                <li class=\"nav-item nav-category\">Service Repair</li>\n              )}\n              {serviceRepairMenu?.length > 0 &&\n                serviceRepairMenu.map((item, index) => (\n                  <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                    <Link class=\"nav-link\" to={item.path}>\n                      {item.icon}\n                      <span class=\"link-title\">{item.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              {reportMenu?.length > 0 && (\n                <li class=\"nav-item nav-category\">Monitoring</li>\n              )}\n              {reportMenu?.length > 0 &&\n                reportMenu.map((item, index) => (\n                  <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                    <Link class=\"nav-link\" to={item.path}>\n                      {item.icon}\n                      <span class=\"link-title\">{item.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              {reportDataMenu?.length > 0 && (\n                <li class=\"nav-item nav-category\">Laporan</li>\n              )}\n              {reportDataMenu?.length > 0 &&\n                reportDataMenu.map((item, index) => (\n                  <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                    <Link class=\"nav-link\" to={item.path}>\n                      {item.icon}\n                      <span class=\"link-title\">{item.name}</span>\n                    </Link>\n                  </li>\n                ))}\n              <li key={`sidebar-master-data-null}`} class=\"nav-item\">\n                <div class=\"nav-link\">\n                  <span class=\"link-title\"></span>\n                </div>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer class=\"footer d-flex flex-column flex-md-row align-items-center justify-content-between\">\n      <p class=\"text-muted text-center text-md-left\">\n        Copyright © {new Date().getFullYear() + \" \"}\n        <a href=\"#\">Rutan Team</a>. All rights reserved\n      </p>\n      <p class=\"text-muted text-center text-md-left mb-0 d-none d-md-block\">\n        Handcrafted With{\" \"}\n        <i class=\"mb-1 text-primary ml-1 icon-small\" data-feather=\"heart\"></i>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport {Bell, Mail} from 'react-feather'\n\nconst Navbar = (props) => {\n  const { onLogout, userDetail } = props;\n  return (\n    <nav class=\"navbar\">\n      <a href=\"#\" class=\"sidebar-toggler\">\n        <i data-feather=\"menu\"></i>\n      </a>\n      <div class=\"navbar-content\">\n        <form class=\"search-form\">\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <div class=\"input-group-text\">\n                <i data-feather=\"search\"></i>\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"navbarForm\"\n              placeholder=\"Search here...\"\n            />\n          </div>\n        </form>\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item dropdown nav-messages\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"messageDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <Mail size={14} />\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"messageDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">9 New Messages</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Leonardo Payne</p>\n                      <p class=\"sub-text text-muted\">2 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project status</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Carl Henson</p>\n                      <p class=\"sub-text text-muted\">30 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Client meeting</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Jensen Combs</p>\n                      <p class=\"sub-text text-muted\">1 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project updates</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>{userDetail.fullname}</p>\n                      <p class=\"sub-text text-muted\">2 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project deadline</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Yaretzi Mayo</p>\n                      <p class=\"sub-text text-muted\">5 hr ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">New record</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-notifications\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"notificationDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <Bell size={14} />\n              \n              <div class=\"indicator\">\n                <div class=\"circle\"></div>\n              </div>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"notificationDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">6 New Notifications</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"user-plus\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New customer registered</p>\n                    <p class=\"sub-text text-muted\">2 sec ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"gift\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New Order Recieved</p>\n                    <p class=\"sub-text text-muted\">30 min ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"alert-circle\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Server Limit Reached!</p>\n                    <p class=\"sub-text text-muted\">1 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"layers\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Apps are ready for update</p>\n                    <p class=\"sub-text text-muted\">5 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"download\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Download completed</p>\n                    <p class=\"sub-text text-muted\">6 hrs ago</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-profile\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"profileDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"https://via.placeholder.com/30x30\" alt=\"profile\" />\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"profileDropdown\">\n              <div class=\"dropdown-header d-flex flex-column align-items-center\">\n                {/* <div class=\"figure mb-3\">\n                  <img src=\"https://via.placeholder.com/80x80\" alt=\"\" />\n                </div> */}\n                <div class=\"info text-center\">\n                  <p class=\"name font-weight-bold mb-0\">\n                    {userDetail.fullname\n                      ? userDetail.fullname.toUpperCase()\n                      : \"Anonym\"}\n                  </p>\n                  <p class=\"email text-muted mb-3\">\n                    {userDetail.roles.map((item) => {\n                      if (userDetail.roles.length > 1) {\n                        return `${item.name},`;\n                      }\n                      return item.name;\n                    })}\n                  </p>\n                </div>\n              </div>\n              <div class=\"dropdown-body\">\n                <ul class=\"profile-nav p-0 pt-3\">\n                  <li class=\"nav-item\">\n                    <a href=\"pages/general/profile.html\" class=\"nav-link\">\n                      <i data-feather=\"user\"></i>\n                      <span>Profile</span>\n                    </a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a onClick={onLogout} class=\"nav-link cursor-pointer\">\n                      <i data-feather=\"log-out\"></i>\n                      <span>Log Out</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport CGlobalOverlay from \"../../../components/CGlobalOverlay/CGlobalOverlay\";\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport Navbar from \"../../../components/Navbar/Navbar\";\nimport { withRouter } from \"react-router-dom\";\nimport \"../../../style/globalStyle.css\";\n\nconst TemplateComponent = (props) => {\n  const {\n    children,\n    isGlobalLoading,\n    isLandingPage,\n    logout,\n    userDetail,\n    role,\n    mainMenu,\n    masterDataMenu,\n    reportMenu,\n    serviceRepairMenu,\n    reportDataMenu,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <CGlobalOverlay loading={isGlobalLoading} />\n      {isLandingPage && (\n        <Sidebar\n          role={role}\n          masterDataMenu={masterDataMenu}\n          mainMenu={mainMenu}\n          reportMenu={reportMenu}\n          serviceRepairMenu={serviceRepairMenu}\n          reportDataMenu={reportDataMenu}\n        />\n      )}\n      <div className={`page-wrapper ${!isLandingPage ? \"full-page\" : \"\"}`}>\n        {isLandingPage && <Navbar onLogout={logout} userDetail={userDetail} />}\n        <div className=\"container\">\n          <div className=\"scrolled-content\">\n            {children}\n            {isLandingPage && <Footer />}\n          </div>\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(TemplateComponent);\n","import { createSelector } from \"reselect\";\n\nconst selectorAuth = (state) => state.auth;\n\n// SELECTOR FOR AUTH\nexport const AllAuthData = () => createSelector(selectorAuth, (state) => state);\nexport const Token = () =>\n  createSelector(selectorAuth, (state) => state.accessToken);\nexport const UserDetail = () =>\n  createSelector(selectorAuth, (state) => state.userDetail);\nexport const ErrorData = () =>\n  createSelector(selectorAuth, (state) => state.error);\nexport const UserRole = () =>\n  createSelector(selectorAuth, (state) => state?.userDetail?.roles);\n  export const UserMenus = () =>\n  createSelector(selectorAuth, (state) => state?.userDetail?.menus);\n","import { createSelector } from \"reselect\";\n\nconst selectorComponent = (state) => state.component;\n\nexport const IsGlobalLoading = () =>\n  createSelector(selectorComponent, (state) => state.isLoadingGlobal);\n","import React from \"react\";\nimport { compose } from \"redux\";\n\nimport TemplateComponent from \"../Component/TemplateComponent\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as authActions from \"../../Auth/Store/AuthAction\";\nimport * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\nimport * as AppSelector from \"../../App/Selector/AppSelector\";\nimport {\n  Box,\n  Briefcase,\n  Clock,\n  Command,\n  FilePlus,\n  FileText,\n  Key,\n  Link,\n  List,\n  Monitor,\n  Settings,\n  Tool,\n  User,\n  Users,\n} from \"react-feather\";\n\nconst TemplateContainer = (props) => {\n  const [role, setRole] = React.useState(\"\");\n  const { userDetail } = props;\n\n  React.useEffect(() => {\n    if (userDetail && userDetail.role) {\n      setRole(userDetail.role[0].name);\n    }\n  }, [userDetail]);\n\n  const getIconName = (menu) => {\n    switch (menu) {\n      case \"/dashboard\":\n        return <Command size={14} style={{ marginRight: -15 }} />;\n\n      case \"/admin\":\n        return <User size={14} style={{ marginRight: -15 }} />;\n\n      case \"/cabang\":\n        return <Link size={14} style={{ marginRight: -15 }} />;\n\n      case \"/employees\":\n        return <Users size={14} style={{ marginRight: -15 }} />;\n\n      case \"/customer\":\n        return <Users size={14} style={{ marginRight: -15 }} />;\n\n      case \"/division\":\n        return <Briefcase size={14} style={{ marginRight: -15 }} />;\n\n      case \"/role\":\n        return <Key size={14} style={{ marginRight: -15 }} />;\n\n      case \"/tools\":\n        return <Tool size={14} style={{ marginRight: -15 }} />;\n\n      case \"/machine\":\n        return <Settings size={14} style={{ marginRight: -15 }} />;\n\n      case \"/jobforms\":\n        return <FileText size={14} style={{ marginRight: -15 }} />;\n\n      case \"/category\":\n        return <FileText size={14} style={{ marginRight: -15 }} />;\n\n      case \"/unit\":\n        return <Box size={14} style={{ marginRight: -15 }} />;\n\n      case \"/internal-service\":\n        return <FilePlus size={14} style={{ marginRight: -15 }} />;\n\n      case \"/external-service\":\n        return <FilePlus size={14} style={{ marginRight: -15 }} />;\n\n      case \"/list_service\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/monitoring-employee\":\n        return <Monitor size={14} style={{ marginRight: -15 }} />;\n\n      case \"/identification\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/report_trans\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/report_identification\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/report_employee\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/working-hours\":\n        return <Clock size={14} style={{ marginRight: -15 }} />;\n\n      default:\n        return \"command\";\n    }\n  };\n\n  const mainMenu = [];\n  const masterDataMenu = [];\n  const reportMenu = [];\n  const serviceRepairMenu = [];\n  const reportDataMenu = [];\n\n  if (userDetail) {\n    userDetail.menus.map((item, index) => {\n      let menu = {};\n      menu.icon = getIconName(item.path);\n      menu.name = item.menu;\n      menu.path = item.path;\n\n      if (\n        item.path === \"/admin\" ||\n        item.path === \"/cabang\" ||\n        item.path === \"/employees\" ||\n        item.path === \"/customer\" ||\n        item.path === \"/division\" ||\n        item.path === \"/role\" ||\n        item.path === \"/tools\" ||\n        item.path === \"/machine\" ||\n        item.path === \"/jobforms\" ||\n        item.path === \"/category\" ||\n        item.path === \"/unit\" ||\n        item.path === \"/identification\"\n      ) {\n        masterDataMenu.push(menu);\n      } else if (\n        item.path === \"/internal-service\" ||\n        item.path === \"/external-service\" ||\n        item.path === \"/list_service\"\n      ) {\n        serviceRepairMenu.push(menu);\n      } else if (item.path === \"/monitoring-employee\") {\n        reportMenu.push(menu);\n      } else if (\n        item.path === \"/report_trans\" ||\n        item.path === \"/report_employee\" ||\n        item.path === \"/report_identification\" ||\n        item.path === \"/working-hours\"\n      ) {\n        reportDataMenu.push(menu);\n      } else {\n        mainMenu.push(menu);\n      }\n    });\n  }\n\n  return (\n    <TemplateComponent\n      role={role}\n      mainMenu={mainMenu}\n      masterDataMenu={masterDataMenu}\n      reportMenu={reportMenu}\n      serviceRepairMenu={serviceRepairMenu}\n      reportDataMenu={reportDataMenu}\n      {...props}\n    />\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  isGlobalLoading: AppSelector.IsGlobalLoading(),\n  userDetail: AuthSelector.UserDetail(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => {\n    authActions.doLogout(dispatch);\n  },\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(TemplateContainer);\n","import * as React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\n\nconst withTemplate = (Template, WrappedComponent, isLandingPage) => {\n  const AddedTemplate = (props) => {\n    return (\n      <Template {...props} isLandingPage={isLandingPage}>\n        <WrappedComponent {...props} />\n      </Template>\n    );\n  };\n\n  return hoistNonReactStatics(AddedTemplate, WrappedComponent);\n};\n\nexport default withTemplate;\n","import React from \"react\";\nimport { Button } from \"antd\";\n\ninterface IProps {\n  onClick: any;\n  disabled: boolean;\n  isLoading: boolean;\n  backgroundColor: string;\n  icon: any;\n  shape: \"default\" | \"circle\" | \"round\";\n  type: \"primary\" | \"dashed\" | \"default\" | \"ghost\" | \"link\" | \"text\";\n  size: \"middle\" | \"small\" | \"large\";\n  danger: boolean;\n  block: boolean;\n}\n\nconst CButtonAntd: React.FC<IProps> = (props) => {\n  const {\n    onClick,\n    children,\n    isLoading,\n    disabled,\n    icon,\n    shape,\n    type,\n    size,\n    danger,\n    backgroundColor,\n  } = props;\n  return (\n    <Button\n      style={{\n        alignSelf: \"center\",\n        backgroundColor: backgroundColor,\n        borderColor: backgroundColor,\n      }}\n      block={props.block ?? false}\n      icon={icon ?? null}\n      type={type ?? \"default\"}\n      shape={shape ?? \"default\"}\n      onClick={onClick}\n      disabled={disabled}\n      loading={isLoading}\n      size={size ?? \"middle\"}\n      danger={danger}\n    >\n      {isLoading ? \"Loading\" : children}\n    </Button>\n  );\n};\n\nexport default CButtonAntd;\n","import { Table } from \"antd\";\nimport React from \"react\";\nimport \"../../../app/style/tableStyle.css\";\n\nconst DashboardComponent = (props) => {\n  const { userDetail, headers, listServices, dashboard, isBlocked } = props;\n  return (\n    <div>\n      <div class=\"page-content\">\n        <div class=\"d-flex justify-content-between align-items-center flex-wrap grid-margin\">\n          <h4 class=\"mt-5 ml-2\">{`Hallo, ${\n            userDetail.fullname ?? \"Anonym\"\n          }`}</h4>\n        </div>\n        {!isBlocked && (\n          <div class=\"row\">\n            <div class=\"col-12 col-xl-12 stretch-card\">\n              <div class=\"row flex-grow\">\n                <div class=\"col-md-3 grid-margin stretch-card\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <div class=\"d-flex justify-content-between align-items-baseline\">\n                        <h6 class=\"card-title mb-0\">Total Customer</h6>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12 col-md-12 col-xl-8\">\n                          <h3 class=\"mb-2\">{dashboard.totalCustomer}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3 grid-margin stretch-card\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <div class=\"d-flex justify-content-between align-items-baseline\">\n                        <h6 class=\"card-title mb-0\">Total Service Internal</h6>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-6 col-md-12 col-xl-8\">\n                          <h3 class=\"mb-2\">{dashboard.totalInternalService}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3 grid-margin stretch-card\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <div class=\"d-flex justify-content-between align-items-baseline\">\n                        <h6 class=\"card-title mb-0\">Total Service External</h6>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-6 col-md-12 col-xl-8\">\n                          <h3 class=\"mb-2\">{dashboard.totalExternalService}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3 grid-margin stretch-card\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <div class=\"d-flex justify-content-between align-items-baseline\">\n                        <h6 class=\"card-title mb-0\">Total Identifikasi</h6>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-6 col-md-12 col-xl-8\">\n                          <h3 class=\"mb-2\">{dashboard.totalIdentification}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div class=\"row\">\n          <div class=\"col-12 col-xl-12 grid-margin stretch-card\"></div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-lg-12 col-xl-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between align-items-baseline mb-2\">\n                  <h6 class=\"card-title mb-0\">10 Service Terbaru</h6>\n                </div>\n                <p class=\"text-muted mb-4\">\n                  Menampilkan 10 service berdasarkan tanggal terbaru\n                </p>\n                {/* <div class=\"monthly-sales-chart-wrapper\"> */}\n                {/* <canvas id=\"monthly-sales-chart\"></canvas> */}\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      // ...pagination,\n                    }}\n                    scroll={{\n                      x: \"calc(700px + 50%)\",\n                      y: 400,\n                    }}\n                  />\n                </div>\n                {/* </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardComponent;\n","import * as AdminActions from \"../modules/Admin/Store/AdminActions\";\nimport * as RoleActions from \"../modules/Roles/Store/RolesActions\";\nimport * as MasterDataActions from \"../modules/MasterData/Store/MasterDataActions\";\nimport * as BranchActions from \"../modules/Branch/Store/BranchActions\";\nimport * as UnitsActions from \"../modules/Units/Store/UnitsActions\";\nimport * as MachineConfigurationActions from \"../modules/MachineConfiguration/Store/MachineConfigurationActions\";\n\nexport const initializeApp = async () => {\n  await AdminActions.getListAdminRequested(1, 10);\n  await RoleActions.getListRolesRequested();\n  await MasterDataActions.loadMenuListData();\n  await MasterDataActions.loadProvinceListData();\n  await BranchActions.getBranchListDataRequested(1, 10);\n  await UnitsActions.getUnitListDataRequested(1, 10);\n  await MachineConfigurationActions.getMachineListDataRequested(1, 10);\n};\n","import { Space, Tag } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport DashboardComponent from \"../Component/DashboardComponent\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\nimport { getDashboardProgressData } from \"../Store/DashboardActions\";\nimport { initializeApp } from \"../../../app/InitializeApp\";\nimport { isBlockedRoleDetailService } from \"../../../app/Helpers\";\nimport { Link } from \"react-router-dom\";\n\nconst DashboardContainer = (props) => {\n  const {\n    handlePressEdit,\n    auth: { userDetail },\n    services: { dashboardListServices },\n    dashboard: { dashboardData },\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n  if (dashboardListServices.length > 0) {\n    dashboardListServices.map((item, index) => {\n      dashboardListServices[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const checkBlockedRole = () => {\n    const roleId = userDetail.roles[0].role_id;\n    const isBlockedRole = isBlockedRoleDetailService(roleId);\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n    initializeApp();\n    store.dispatch(setGlobalLoading(false));\n    ListServiceActions.getTopTenService();\n    getDashboardProgressData();\n  }, []);\n\n  if (Object.keys(dashboardData).length > 0) {\n    dashboardData.totalCustomer = dashboardData.totalCustomer\n      ? dashboardData.totalCustomer.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalInternalService = dashboardData.totalCustomer\n      ? dashboardData.totalInternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalExternalService = dashboardData.totalExternalService\n      ? dashboardData.totalExternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalIdentification = dashboardData.totalIdentification\n      ? dashboardData.totalIdentification.toLocaleString(\"en-US\")\n      : 0;\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <Link\n        to={\"/detail-services\"}\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n      >\n        <CButtonAntd type=\"primary\" icon={<EditOutlined />} size=\"middle\" />\n      </Link>\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      align: \"center\",\n      width: 50,\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"No. Service\",\n      dataIndex: \"no_service\",\n      key: \"no_service\",\n      align: \"center\",\n      width: 150,\n      sorter: (a, b) => a.no_service - b.no_service,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      align: \"center\",\n      width: 160,\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      align: \"left\",\n      width: 200,\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      align: \"left\",\n      width: 250,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      align: \"left\",\n      width: 250,\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      align: \"left\",\n      width: 250,\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      align: \"center\",\n      width: 100,\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      align: \"center\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: 150,\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      align: \"left\",\n      width: 150,\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: 70,\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  return (\n    <DashboardComponent\n      userDetail={userDetail}\n      headers={headers}\n      listServices={dashboardListServices}\n      dashboard={dashboardData}\n      isBlocked={isBlocked}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  services: state.services,\n  dashboard: state.dashboard,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContainer);\n","import React from \"react\";\n\ninterface IProps {\n  onChange: any;\n  value: string;\n  label: string;\n  name: string;\n  placeholder: string;\n  type: string;\n  typeComponent: string;\n  input: any;\n  error: boolean;\n  message: string;\n  meta: { error: any; touched: any };\n  disabled: boolean;\n  maxLength: number;\n  rows: number;\n  key: string;\n  labelSize: number;\n  linebreak: boolean;\n  onKeyDown: any;\n}\n\nconst CInput: React.FC<IProps> = (props) => {\n  switch (props.typeComponent) {\n    case \"textarea\":\n      return (\n        <div className=\"form-group\">\n          <label htmlFor={props.name}>{props.label}</label>\n          <textarea\n            style={{ whiteSpace: props.linebreak ? \"pre-line\" : \"normal\" }}\n            key={props.key ?? \"\"}\n            id={props.name}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            maxLength={props.maxLength ?? 250}\n            rows={props.rows ?? 8}\n            name={props.name}\n            onChange={props.onChange}\n            onKeyDown={props.onKeyDown}\n            placeholder={props.placeholder ?? \"\"}\n            value={props.value}\n            {...props.input}\n          ></textarea>\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n    default:\n      return (\n        <div className=\"form-group\">\n          <label\n            htmlFor={props.name}\n            style={{ fontSize: props.labelSize ?? 14 }}\n          >\n            {props.label}\n          </label>\n          <input\n            id={props.name}\n            maxLength={props.maxLength ?? 250}\n            value={props.value}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            name={props.name}\n            type={props.type}\n            onChange={props.onChange}\n            placeholder={props.placeholder ?? \"\"}\n            disabled={props.disabled ?? false}\n            {...props.input}\n          />\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n  }\n};\n\nexport default CInput;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\n\nconst LoginComponent = (props) => {\n  const { handleSubmit, submitForm, error } = props;\n\n  return (\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto\">\n          <div class=\"card\">\n            <div class=\"row\">\n              <div class=\"col-md-4 pr-md-0\">\n                <div class=\"auth-left-wrapper\"></div>\n              </div>\n              <div class=\"col-md-8 pl-md-0\">\n                <div class=\"auth-form-wrapper px-4 py-5\">\n                  <a href=\"#\" class=\"noble-ui-logo d-block mb-2\">\n                    Rutan<span>Admin</span>\n                  </a>\n                  <h5 class=\"text-muted font-weight-normal mb-4\">\n                    Selamat datang! Silahkan login dengan akun anda.\n                  </h5>\n                  <form\n                    class=\"forms-sample\"\n                    onSubmit={handleSubmit(submitForm)}\n                  >\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"username\"\n                        label=\"Username\"\n                        placeholder=\"Username\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder=\"Password\"\n                        component={CInput}\n                        type=\"password\"\n                      />\n                    </div>\n\n                    {error.status && (\n                      <span className=\"mt-2 text-danger\">{error.message}</span>\n                    )}\n\n                    <div class=\"mt-3\">\n                      <button\n                        type=\"submit\"\n                        class=\"btn btn-primary mr-2 mb-2 mb-md-0 text-white\"\n                      >\n                        Login\n                      </button>\n                    </div>\n                    <a href=\"register.html\" class=\"d-block mt-3 text-muted\">\n                      Belum punya akun? Daftar\n                    </a>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginComponent;\n","import React from \"react\";\nimport { store } from \"./ConfigureStore\";\n\nexport const validateFormLogin = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Username wajib diisi!\";\n  } else if (values.username.length < 4) {\n    errors.username = \"Minimal 4 karakter atau lebih\";\n  }\n  if (!values.password) {\n    errors.password = \"Password wajib diisi!\";\n  } else if (values.password.length < 5) {\n    errors.password = \"Minimal 5 karakter atau lebih\";\n  }\n  return errors;\n};\n\nexport const validateFormInternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n};\n\nexport const validateFormExternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.jobForm) {\n    errors.jobForm = \"Job Form wajib diisi!\";\n  }\n  if (!values.warranty) {\n    errors.warranty = \"Job Form wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n  return errors;\n};\n\nexport const validateFormRoles = (values) => {\n  const errors = {};\n  if (!values.description) {\n    errors.description = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormCategory = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Judul wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnit = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Unit wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnitModel = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Model wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTools = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama peralatan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormEmployee = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama wajib diisi!\";\n  }\n  if (!values.phone) {\n    errors.phone = \"No. Telpon wajib diisi!\";\n  }\n  if (!values.province) {\n    errors.province = \"Wajib pilih provinsi!\";\n  }\n  if (!values.city) {\n    errors.city = \"Wajib pilih kota!\";\n  }\n  if (!values.branch) {\n    errors.branch = \"Wajib pilih cabang!\";\n  }\n  if (!values.address) {\n    errors.address = \"Wajib isi alamat!\";\n  }\n  return errors;\n};\n\nexport const validateServiceEmployeeForm = (values) => {\n  const errors = {};\n  if (!values.employee) {\n    errors.employee = \"Karyawan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionForm = (values) => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = \"Judul wajib diisi!\";\n  }\n  if (!values.headDivision) {\n    errors.headDivision = \"Kepala divisi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionUnitForm = (values) => {\n  const errors = {};\n  if (!values.unit) {\n    errors.unit = \"Unit wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateEmployeeToolsForm = (values) => {\n  const errors = {};\n  if (!values.tools) {\n    errors.tools = \"Peralatan wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateFormRejected = (values) => {\n  const errors = {};\n  if (!values.reson) {\n    errors.reson = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTransaction = (values) => {\n  const errors = {};\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormEditMedia = (values) => {\n  const { getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const errors = {};\n  if (!values.imageUrl) {\n    errors.imageUrl = \"Field ini wajib diisi!\";\n  }\n  if (!values.title) {\n    errors.title = \"Field ini wajib diisi!\";\n  }\n  if (!values.unit && dataService.is_external === true) {\n    errors.unit = \"Wajib pilih unit!\";\n  }\n\n  return errors;\n};\n\nexport const validateUnitSerialNumberForm = (values) => {\n  const errors = {};\n  if (!values.customer) {\n    errors.customer = \"Wajib memilih customer!\";\n  }\n  if (!values.serialNumber) {\n    errors.serialNumber = \"Serial number wajib diisi!\";\n  }\n  if (!values.descriptions) {\n    errors.descriptions = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDailiesForm = (values) => {\n  const errors = {};\n  if (!values.activityType) {\n    errors.activityType = \"Field ini wajib diisi!\";\n  }\n  if (!values.title) {\n    errors.title = \"Field ini wajib diisi!\";\n  }\n  if (!values.daily_start) {\n    errors.daily_start = \"Field ini wajib diisi!\";\n  }\n  if (!values.daily_end) {\n    errors.daily_end = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n","import React from \"react\";\nimport LoginComponent from \"../Component/LoginComponent\";\nimport { reduxForm, reset } from \"redux-form\"; // imported Field\nimport { connect } from \"react-redux\";\nimport * as AuthActions from \"../Store/AuthAction\";\nimport * as AuthSelector from \"../Selector/AuthSelector\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport { createStructuredSelector } from \"reselect\";\n\nconst LoginContainer = (props) => {\n  const { valid } = props;\n\n  const submitForm = (values) => {\n    // navigate(\"/preview-pdf\");\n    if (valid) {\n      AuthActions.handleSubmitLogin(values);\n    }\n  };\n\n  return <LoginComponent submitForm={submitForm} {...props} />;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  auth: AuthSelector.AllAuthData(),\n  error: AuthSelector.ErrorData(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  // resetForm: () => {\n  //   dispatch(reset(\"loginForm\"));\n  // },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginContainer);\n\nexport default reduxForm({\n  form: \"loginForm\",\n  validate: validateForm.validateFormLogin,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport { Field } from \"redux-form\";\nimport { makeField } from \"../../app/FormHelpers\";\n\nconst { Option } = Select;\nconst ASelect = makeField(Select);\n\nconst CSelect = (props) => {\n  return (\n    <div>\n      <label htmlFor={props.name}>{props.label}</label>\n      <br />\n      <Field\n        style={{ width: \"100%\" }}\n        showSearch={props.showSearch ?? false}\n        name={props.name}\n        component={ASelect}\n        onChange={props.onChange}\n        onBlur={(e) => {\n          if (props.onBlur) {\n            props.onBlur();\n          }\n          e.preventDefault();\n        }}\n        {...props}\n      >\n        <Option disabled={props.disabled ?? false} value=\"\">\n          {props.placeholder ?? \"- Pilih -\"}\n        </Option>\n        {props.data.length > 0 &&\n          props.data.map((item, index) => {\n            return (\n              <Option\n                value={`${item.value}|${item.label}`}\n                key={`option-${index}`}\n              >\n                {item.label}\n              </Option>\n            );\n          })}\n      </Field>\n    </div>\n  );\n};\n\nexport default CSelect;\n","import React from \"react\";\nimport { DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { Field } from \"redux-form\";\n\nconst RenderDatePicker = (props) => {\n  const { name, input, label, meta } = props;\n\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n      <br />\n      <DatePicker\n        placeholder=\"Pilih Tanggal\"\n        style={{ width: \"100%\" }}\n        name={name}\n        onBlur={(e) => {\n          e.preventDefault();\n        }}\n        defaultValue={moment()}\n        {...input}\n      />\n      {meta.touched && meta.error && (\n        <span className=\"mt-2 text-danger\">\n          {meta.error ?? \"This field required\"}\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst CDatePicker = (props) => {\n  return (\n    <Field\n      component={RenderDatePicker}\n      onBlur={(e) => {\n        e.preventDefault();\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default CDatePicker;\n","import React from \"react\";\n\ninterface IProps {\n  type: \"submit\" | \"button\" | \"reset\";\n  onClick: any;\n  isLoading: boolean;\n}\n\nconst CButton: React.FC<IProps> = (props) => {\n  const { type, isLoading, onClick, children } = props;\n  return (\n    <button\n      onClick={onClick}\n      className=\"btn btn-primary\"\n      type={type}\n      disabled={isLoading}\n    >\n      {isLoading && (\n        <span\n          className=\"spinner-grow spinner-grow-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        ></span>\n      )}\n      {isLoading ? \"Loading...\" : children}\n    </button>\n  );\n};\n\nexport default CButton;\n","import React from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\n\nconst InternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    isLoadingFormGlobal,\n  } = props;\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({ employee: \"\" })}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah Internal Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan internal service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-4 mt-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                      />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12 mt-2\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      {/* <input\n                        class=\"btn btn-primary\"\n                        type=\"submit\"\n                        value=\"Simpan\"\n                      /> */}\n                      <CButton type=\"submit\" isLoading={isLoadingFormGlobal}>\n                        Simpan\n                      </CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InternalServiceComponent;\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nconst getCityByIdFromReducer = async (cityId) => {\n  const { getState } = store;\n  const { listCity } = getState().masters;\n  const result = listCity.filter((x) => x.id === cityId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"internalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n    return;\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    await MasterDataActions.loadCityListData(employeeData.province_id);\n\n    const cityData = await getCityByIdFromReducer(employeeData.city_id);\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        cityData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        cityData\n      )\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"internalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"internalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"false\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: \"false\",\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              navigate(\"list_service\");\n              resolve();\n            }, 1000);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, reset } from \"redux-form\";\nimport InternalServiceComponent from \"../Component/InternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as InternalServiceActions from \"../Store/InternalServiceActions\";\nimport * as ComponentAction from \"../../App/Store/ComponentAction\";\nimport {\n  enumTypeInternalServices,\n  isBlockedRoleCustomerView,\n} from \"../../../app/Helpers\";\n\nconst InternalServiceContainer = (props) => {\n  const {\n    valid,\n    user: { roles, branchId },\n    customers: { listCustomersDropdown },\n    employees: { listEmployees },\n    component: { isLoadingFormGlobal },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      InternalServiceActions.handleSubmitForm(values);\n    } else {\n    }\n  };\n\n  React.useEffect(() => {\n    // Reset all form data and loading when first load data\n    // resetForm();\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomerView(roleId);\n\n    ComponentAction.resetAllGlobalLoadingProcess();\n    if (isBlockedRole) {\n      CustomerActions.getCustomerListDataByPaging(\n        1,\n        999999,\n        \"\",\n        branchId ?? \"\",\n        true\n      );\n    } else {\n      CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    }\n    EmployeeActions.loadEmployeeListData(1, 999999);\n    MasterDataActions.loadProvinceListData();\n    // MasterDataActions.loadCityListData();\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <InternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      enumType={enumTypeInternalServices}\n      submitForm={submitForm}\n      isLoadingFormGlobal={isLoadingFormGlobal}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  component: state.component,\n  user: state.auth.userDetail,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"internalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      InternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    InternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n    if (!customerId) {\n      InternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    InternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InternalServiceContainer);\n\nexport default reduxForm({\n  form: \"internalServiceForm\",\n  validate: validateForm.validateFormInternalService,\n  initialValues: {\n    employees: [],\n  },\n})(EnhanceContainer);\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport { getUnitModelEnum } from \"../../../app/Helpers\";\n\nconst ExternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    enumWarranty,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    listUnit,\n    enumJobForms,\n    handleAutoPopulateUnitModel,\n    externalValues,\n    onChangeUnitModel,\n    handleChangeType,\n    isTroubleShoot,\n  } = props;\n\n  const renderUnits = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Unit\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Unit ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-units-${indexUnit}`}\n                    onChange={(val) =>\n                      handleAutoPopulateUnitModel(val, indexUnit)\n                    }\n                    data={listUnit}\n                    name={`${itemUnit}.id`}\n                    label=\"Pilih Unit\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-model-${indexUnit}`}\n                    data={\n                      externalValues[indexUnit].enumUnitModel\n                        ? getUnitModelEnum(\n                            externalValues[indexUnit].enumUnitModel\n                          )\n                        : []\n                    }\n                    name={`${itemUnit}.unitModelId`}\n                    onChange={(val) => {\n                      if (externalValues[indexUnit].enumUnitModel.length > 0) {\n                        onChangeUnitModel(\n                          val,\n                          indexUnit,\n                          externalValues[indexUnit].enumUnitModel\n                        );\n                      }\n                    }}\n                    label=\"Model\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    key={`serial-number-${indexUnit}`}\n                    name={`${itemUnit}.unitModelSerialNumber`}\n                    label=\"Serial Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah External Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan external service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                        onChange={handleChangeType}\n                      />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                    <div class=\"col-md-2\">\n                      {!isTroubleShoot && (\n                        <CSelect\n                          data={enumJobForms}\n                          name=\"jobForm\"\n                          label=\"Job Form\"\n                        />\n                      )}\n                    </div>\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumWarranty}\n                        name=\"warranty\"\n                        label=\"Warranty\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu unit.\n                    </p>\n                  </div>\n                  <FieldArray name=\"units\" component={renderUnits} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      <CButton type=\"submit\">Simpan</CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExternalServiceComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  change,\n  formValueSelector,\n  getFormValues,\n  reduxForm,\n  reset,\n} from \"redux-form\";\nimport ExternalServiceComponent from \"../Component/ExternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ExternalServiceActions from \"../Store/ExternalServiceActions\";\nimport * as UnitsActions from \"../../Units/Store/UnitsActions\";\nimport * as JobFormsActions from \"../../JobForms/Store/JobFormsActions\";\nimport {\n  enumTypeExternalServices,\n  enumWarranty,\n  isBlockedRoleCustomerView,\n} from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"externalServiceForm\");\n\nconst ExternalServiceContainer = (props) => {\n  const [unitQty, setUnitQty] = React.useState(1);\n  const [unitData, setUnitData] = React.useState([]);\n  const [isTroubleShoot, setIsTroubleShoot] = React.useState(false);\n\n  const {\n    valid,\n    user: { roles, branchId },\n    customers: { listCustomersDropdown },\n    employees: { listEmployees },\n    units: { listUnits },\n    jobForms: { listJobForms },\n    resetForm,\n    // form: { externalServiceForm },\n  } = props;\n\n  const submitForm = (values) => {\n    ExternalServiceActions.handleSubmitForm(values);\n    if (valid) {\n      console.log(\"success\");\n    }\n  };\n\n  const handleAddNewUnit = () => {\n    if (unitQty === 5) {\n      return;\n    }\n    setUnitQty(unitQty + 1);\n  };\n\n  const handleSubtractUnit = () => {\n    if (unitQty === 0) {\n      return;\n    }\n    setUnitQty(unitQty - 1);\n  };\n\n  const SelectUnit = [];\n  listUnits.map((item, index) => {\n    SelectUnit.push({\n      id: `unit-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomerView(roleId);\n\n    if (isBlockedRole) {\n      CustomerActions.getCustomerListDataByPaging(\n        1,\n        999999,\n        \"\",\n        branchId ?? \"\",\n        true\n      );\n    } else {\n      CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    }\n\n    EmployeeActions.loadEmployeeListData(1, 99999);\n    MasterDataActions.loadProvinceListData();\n    return () => {\n      resetForm();\n    };\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectJobFormsData = [];\n  listJobForms.map((item, index) => {\n    SelectJobFormsData.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const handleChangeType = (val) => {\n    const type = val.split(\"|\");\n    if (\n      type[0] === \"T2\" ||\n      type[0] === \"T4\" ||\n      type[0] === \"T5\" ||\n      type[0] === \"T6\"\n    ) {\n      setIsTroubleShoot(true);\n    } else {\n      setIsTroubleShoot(false);\n    }\n  };\n\n  React.useEffect(() => {\n    UnitsActions.getUnitListDataRequested(1, 100);\n    JobFormsActions.getJobFormsListDataRequested(1, 100);\n    let totalUnit = [];\n    for (let i = 0; i < unitQty; i++) {\n      totalUnit.push(i);\n    }\n    setUnitData(totalUnit);\n  }, [unitQty]);\n\n  return (\n    <ExternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      listUnit={SelectUnit}\n      enumJobForms={SelectJobFormsData}\n      enumType={enumTypeExternalServices}\n      enumWarranty={enumWarranty}\n      submitForm={submitForm}\n      handleAddNewUnit={handleAddNewUnit}\n      handleSubtractUnit={handleSubtractUnit}\n      unitData={unitData}\n      handleChangeType={handleChangeType}\n      isTroubleShoot={isTroubleShoot}\n      // selectedUnitModelList={selectedUnitModelList}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  units: state.units,\n  jobForms: state.jobForms,\n  formValues: getFormValues(\"externalServiceForm\")(state),\n  externalValues: selector(state, \"units\"),\n  user: state.auth.userDetail,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"externalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      ExternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n\n    if (!customerId) {\n      ExternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n  handleAutoPopulateUnitModel: (unitId, fieldIndex) => {\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].enumUnitModel`, [])\n    );\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].unitModelId`, \"\")\n    );\n    if (unitId) {\n      const arrVal = unitId.split(\"|\");\n      ExternalServiceActions.setAutoPopulateUnitModel(arrVal[0], fieldIndex);\n    }\n  },\n  onChangeUnitModel: (val, index, enumModel) => {\n    if (val) {\n      ExternalServiceActions.onChangeUnitModel(val, index, enumModel);\n    }\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExternalServiceContainer);\n\nexport default reduxForm({\n  form: \"externalServiceForm\",\n  validate: validateForm.validateFormExternalService,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Spin, Table } from \"antd\";\nimport { categoryMonitoringServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst MonitoringEmployeeComponent = (props) => {\n  const {\n    headers,\n    onSearch,\n    isLoading,\n    enumBranch,\n    isBlockedRole,\n    enumTypeReport,\n    listMonitoringEmployee,\n    handlePressGeneratePdf,\n  } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Monitoring Karyawan</h6>\n                </div>\n                <div class=\"row m-auto\">\n                  <div class=\"col-md-5 card p-2\">\n                    <div class=\"column\">\n                      <Divider orientation=\"left\">Keterangan</Divider>\n                      <div class=\"row\">\n                        {categoryMonitoringServices.map((item, index) => (\n                          <div class=\"ml-3\" key={(\"service\", index)}>\n                            <Badge status={item.status} text={item.name} />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-5 card p-2 ml-3\">\n                    <Divider orientation=\"left\">Laporan</Divider>\n                    <CButtonAntd\n                      onClick={handlePressGeneratePdf}\n                      type=\"primary\"\n                      icon={<FilePdfOutlined />}\n                      size=\"middle\"\n                    >\n                      Cetak Laporan\n                    </CButtonAntd>\n                  </div>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumTypeReport ?? []}\n                      name=\"type\"\n                      label=\"Tipe\"\n                    />\n                  </div>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  {!isBlockedRole && (\n                    <div class=\"col-md-3 mt-4\">\n                      <CSelect\n                        // onChange={(val) => onChangeProvince(val)}\n                        data={enumBranch ?? []}\n                        name=\"branch\"\n                        label=\"Cabang\"\n                        placeholder=\"-Pilih Semua-\"\n                      />\n                    </div>\n                  )}\n                  <div class=\"col-md-2 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                {isLoading ? (\n                  <div class=\"d-flex justify-content-center align-items-center\">\n                    <Spin />\n                  </div>\n                ) : (\n                  <div class=\"table-responsive\">\n                    <Table\n                      bordered\n                      columns={headers}\n                      dataSource={listMonitoringEmployee}\n                      size={\"small\"}\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MonitoringEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as MonitoringEmployeeActions from \"../Store/MonitoringEmployeeActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeMonitoringEmployee,\n  isBlockedRoleCustomerView,\n} from \"../../../app/Helpers\";\nimport MonitoringEmployeeComponent from \"../Component/MonitoringEmployeeComponent\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Tag } from \"antd\";\nimport { exportMonitoringEmployeePdf } from \"../Store/MonitoringEmployeeReport\";\nimport moment from \"moment\";\n\nconst MonitoringEmployeeContainer = (props) => {\n  const {\n    getListMonitoringEmployee,\n    handlePressAddNew,\n    user: { roles, branchId },\n    monitoringEmployee: { listMonitoringEmployee, paging },\n    branch: { listBranchDropdown },\n    monitoringEmployeeFormValues,\n  } = props;\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n  const [selectBranch, setSelectBranch] = React.useState([]);\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMonitoringEmployee.length > 0) {\n    listMonitoringEmployee.map((item, index) => {\n      listMonitoringEmployee[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const printedData = {\n    listMonitoringEmployee,\n    from: moment(),\n    until: moment(),\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"job_type\",\n      key: \"job_type\",\n      render: (jobType) => {\n        let color = jobType === \"loss\" ? \"#f50\" : \"#f50\";\n        return (\n          <Tag style={{ width: 115, textAlign: \"center\" }} color={color}>\n            {jobType ? jobType.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.job_type.length - b.job_type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n      sorter: (a, b) => a.models.length - b.models.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n  ];\n\n  const checkBlockedRole = () => {\n    const SelectBranch = [];\n    const roleId = roles[0].role_id;\n    const blocked = isBlockedRoleCustomerView(roleId);\n\n    if (blocked) {\n      setIsBlockedRole(blocked);\n\n      if (blocked) {\n        // Call API report service only for his own branch\n        getListMonitoringEmployee(page, limit, \"\", \"\", branchId).then(\n          (success) => {\n            setIsLoading(false);\n          }\n        );\n\n        // Set branch only on his own branch if role access is blocked\n        const selectedBranch = listBranchDropdown.filter((x) =>\n          x.id.includes(branchId)\n        );\n\n        // Push to enum dropdown branch reducer\n        SelectBranch.push({\n          id: `branch-${selectedBranch[0].id}`,\n          value: selectedBranch[0].id,\n          label: selectedBranch[0].name,\n        });\n        setSelectBranch(SelectBranch);\n      } else {\n        // Call API service report for all data, without filtering branch\n        getListMonitoringEmployee(page, limit).then((success) => {\n          setIsLoading(false);\n        });\n\n        // Show all branch when not blocked role\n        listBranchDropdown.map((item, index) => {\n          SelectBranch.push({\n            id: `branch-${index}`,\n            value: item.id,\n            label: item.name,\n          });\n        });\n        setSelectBranch(SelectBranch);\n      }\n    } else {\n      setIsBlockedRole(false);\n    }\n  };\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true).then(\n      (success) => {\n        checkBlockedRole();\n      }\n    );\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      MonitoringEmployeeActions.setPagingMonitoringEmployee(paging)\n    );\n    getListMonitoringEmployee(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    setIsLoading(true);\n    MonitoringEmployeeActions.handleSearch(\n      monitoringEmployeeFormValues,\n      isBlockedRole\n    ).then((success) => {\n      setIsLoading(false);\n    });\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportMonitoringEmployeePdf(printedData, monitoringEmployeeFormValues);\n  };\n\n  return (\n    <MonitoringEmployeeComponent\n      headers={headers}\n      listMonitoringEmployee={listMonitoringEmployee}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={selectBranch}\n      onSearch={onSearch}\n      isLoading={isLoading}\n      isBlockedRole={isBlockedRole}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  user: state.auth.userDetail,\n  monitoringEmployee: state.monitoringEmployee,\n  monitoringEmployeeFormValues: getFormValues(\"monitoringEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMonitoringEmployee: async (\n    page,\n    limit,\n    keyword,\n    type,\n    branchId,\n    from,\n    until\n  ) =>\n    MonitoringEmployeeActions.getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      branchId,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MonitoringEmployeeContainer);\n\nexport default reduxForm({\n  form: \"monitoringEmployeeForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport moment from \"moment\";\n\nexport const exportMonitoringEmployeePdf = (data, values = {}) => {\n  const { listMonitoringEmployee, from, until } = data;\n  const startDate = values.hasOwnProperty(\"startDate\")\n    ? moment(values.startDate).format(\"YYYY-MM-DD\")\n    : moment(from).format(\"YYYY-MM-DD\");\n  const dueDate = values.hasOwnProperty(\"endDate\")\n    ? moment(values.endDate).format(\"YYYY-MM-DD\")\n    : moment(until).format(\"YYYY-MM-DD\");\n  const monitoringEmployeeList = [];\n\n  listMonitoringEmployee.map((item, index) => {\n    monitoringEmployeeList.push({\n      no: index + 1,\n      nik: item.employee_nik,\n      name: item.employee_name,\n      phone: item.phone,\n      address: item.address,\n      type: item.job_type,\n      status: item.job_status,\n      branch: item.branch_name,\n      customer: item.customer_name,\n      createdDate: item.created_date,\n    });\n  });\n\n  const doc = new jsPDF();\n  // doc.text({from_left}, {from_top})\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Monitoring Karyawan\", 100, 20, \"center\");\n  doc.setFontSize(16);\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\n\n  doc.setFontSize(12);\n\n  //   Line 1\n  doc.text(15, 42, `Dari Tanggal`);\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\n  doc.text(15, 49, `Sampai Tanggal`);\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\n\n  // Check if filtered by branch\n  if (values) {\n    if (values.branch) {\n      const splitBranch = values.branch.split(\"|\");\n      doc.text(15, 56, `Cabang`);\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\n    }\n  }\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  const headTable = [\n    [\n      { content: \"Tanggal\", rowSpan: 2, halign: \"center\" },\n      {\n        content: \"Karyawan\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n      {\n        content: \"Service\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n    ],\n    [\n      \"NIK\",\n      \"Nama Karyawan\",\n      \"Cabang\",\n      \"Tipe\",\n      \"Customer\",\n      \"Unit\",\n      \"Model\",\n      \"Status\",\n    ],\n  ];\n\n  doc.autoTable({\n    startY: values ? 65 : 60,\n    body: monitoringEmployeeList,\n    theme: \"plain\",\n    head: headTable,\n    headStyles: { halign: \"center\", valign: \"middle\" },\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\n    columns: [\n      { header: \"Tanggal\", dataKey: \"createdDate\" },\n      { header: \"NIK\", dataKey: \"nik\" },\n      { header: \"Nama Karyawan\", dataKey: \"name\" },\n      { header: \"Cabang\", dataKey: \"branch\" },\n      { header: \"Tipe\", dataKey: \"type\" },\n      { header: \"Customer\", dataKey: \"customer\" },\n      { header: \"Unit\", dataKey: \"units\" },\n      { header: \"Model\", dataKey: \"unit_models\" },\n      { header: \"Status\", dataKey: \"status\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { columnWidth: 28 },\n      1: { columnWidth: 20 },\n      // 2: { halign: \"center\" },\n      // 3: { halign: \"center\" },\n      // 4: { halign: \"center\" },\n      // 5: { halign: \"center\" },\n      // 6: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  //   Export\n  doc.save(\"monitoring-employee.pdf\");\n};\n","import React from \"react\";\nimport { Badge, Divider, Spin, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst ReportServiceRepairComponent = (props) => {\n  const {\n    headers,\n    listServiceRepair,\n    onSearch,\n    enumBranch,\n    isLoading,\n    isBlock,\n  } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"col-md-12 grid-margin stretch-card\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                <h6 class=\"ml-3 card-title\">Laporan Service Repair</h6>\n              </div>\n              <Divider orientation=\"left\">Keterangan</Divider>\n              <div class=\"row\">\n                {categoryServices.map((item, index) => (\n                  <div class=\"ml-3\" key={(\"service\", index)}>\n                    <Badge status={item.status} text={item.name} />\n                  </div>\n                ))}\n              </div>\n              <Divider orientation=\"left\">Filter Data</Divider>\n              <div class=\"row mb-4 align-items-center\">\n                <div class=\"col-md-2\">\n                  <CDatePicker name=\"startDate\" label=\"Dari\" />\n                </div>\n                <div class=\"col-md-2\">\n                  <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                </div>\n                {!isBlock && (\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                )}\n                <div class=\"col-md-2 mt-4\">\n                  <div class=\"row d-flex\">\n                    <CButtonAntd\n                      onClick={onSearch}\n                      type=\"primary\"\n                      icon={<SearchOutlined />}\n                      size=\"middle\"\n                    >\n                      Cari\n                    </CButtonAntd>\n                  </div>\n                </div>\n              </div>\n              {isLoading ? (\n                <div class=\"d-flex justify-content-center align-items-center\">\n                  <Spin />\n                </div>\n              ) : (\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServiceRepair}\n                    size={\"small\"}\n                    scroll\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportServiceRepairComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { BookOutlined } from \"@ant-design/icons\";\nimport {\n  enumTypeMonitoringEmployee,\n  getStatus,\n  isBlockedRoleCustomerView,\n} from \"../../../app/Helpers\";\nimport * as ReportServiceRepairActions from \"../Store/ReportServiceRepairActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport ReportServiceRepairComponent from \"../Component/ReportServiceRepairComponent\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport moment from \"moment\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport { Link } from \"react-router-dom\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\n\nconst ReportServiceRepairContainer = (props) => {\n  const {\n    handlePressEdit,\n    handlePressAddNew,\n    getListServiceRepair,\n    branch: { listBranchDropdown },\n    serviceRepairFormValues,\n    user: { roles, branchId },\n    serviceRepair: { listServiceRepair, paging },\n  } = props;\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n  const [successLoaded, setSuccessLoaded] = React.useState(false);\n  const [selectBranch, setSelectBranch] = React.useState([]);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { page, limit } = paging;\n\n  if (listServiceRepair.length > 0) {\n    listServiceRepair.map((item, index) => {\n      listServiceRepair[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <Link\n        to={\"/detail-services\"}\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n      >\n        <CButtonAntd type=\"primary\" icon={<BookOutlined />} size=\"middle\" />\n      </Link>\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type ? type.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_model_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due.length - b.due.length,\n      render: (due) => (\n        <Text>{due ? moment(due).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = getStatus(status).color;\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status ? getStatus(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"start\",\n      key: \"start\",\n      width: 500,\n      render: (start) => (\n        <Text>{start ? moment(start).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: 200,\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const checkBlockedRole = () => {\n    const SelectBranch = [];\n    const roleId = roles[0].role_id;\n    const blocked = isBlockedRoleCustomerView(roleId);\n\n    if (blocked) {\n      setIsBlockedRole(blocked);\n\n      if (blocked) {\n        // Call API report service only for his own branch\n        getListServiceRepair(page, limit, \"\", branchId).then((success) => {\n          setIsLoading(false);\n        });\n\n        // Set branch only on his own branch if role access is blocked\n        const selectedBranch = listBranchDropdown.filter(\n          (x) => x.id === branchId\n        );\n\n        // Push to enum dropdown branch reducer\n        SelectBranch.push({\n          id: `branch-${selectedBranch[0].id}`,\n          value: selectedBranch[0].id,\n          label: selectedBranch[0].name,\n        });\n        setSelectBranch(SelectBranch);\n      } else {\n        // Call API service report for all data, without filtering branch\n        getListServiceRepair(page, limit).then((success) => {\n          setIsLoading(false);\n        });\n\n        // Show all branch when not blocked role\n        listBranchDropdown.map((item, index) => {\n          SelectBranch.push({\n            id: `branch-${index}`,\n            value: item.id,\n            label: item.name,\n          });\n        });\n        setSelectBranch(SelectBranch);\n      }\n    } else {\n      setIsBlockedRole(false);\n    }\n  };\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    checkBlockedRole();\n  }, []);\n\n  React.useEffect(() => {\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true).then(\n      (successLoadedListBranch) => {\n        setSuccessLoaded(true);\n        checkBlockedRole();\n      }\n    );\n  }, []);\n\n  const onSearch = () => {\n    setIsLoading(true);\n    ReportServiceRepairActions.handleSearch(\n      serviceRepairFormValues,\n      isBlockedRole\n    ).then(() => {\n      setIsLoading(false);\n    });\n  };\n\n  return (\n    <ReportServiceRepairComponent\n      headers={headers}\n      listServiceRepair={listServiceRepair}\n      handlePressAddNew={handlePressAddNew}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={selectBranch}\n      onSearch={onSearch}\n      isLoading={isLoading}\n      isBlock={isBlockedRole}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  user: state.auth.userDetail,\n  serviceRepair: state.serviceRepair,\n  serviceRepairFormValues: getFormValues(\"serviceRepairForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServiceRepair: async (page, limit, keyword, branch, from, until) =>\n    ReportServiceRepairActions.getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      from,\n      until\n    ),\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportServiceRepairContainer);\n\nexport default reduxForm({\n  form: \"serviceRepairForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Spin, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportEmployeeComponent = (props) => {\n  const {\n    headers,\n    listReportEmployee,\n    onSearch,\n    enumBranch,\n    isLoading,\n    isBlock,\n  } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  {!isBlock && (\n                    <div class=\"col-md-3 mt-4\">\n                      {enumBranch.length > 0 && (\n                        <CSelect\n                          data={enumBranch ?? []}\n                          name=\"branch\"\n                          label=\"Cabang\"\n                        />\n                      )}\n                    </div>\n                  )}\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                {isLoading ? (\n                  <div class=\"d-flex justify-content-center align-items-center\">\n                    <Spin />\n                  </div>\n                ) : (\n                  <div class=\"table-responsive\">\n                    <Table\n                      bordered\n                      columns={headers}\n                      dataSource={listReportEmployee}\n                      size={\"small\"}\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport {\n  enumTypeMonitoringEmployee,\n  isBlockedRoleCustomerView,\n} from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportEmployeeActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Tag } from \"antd\";\nimport ReportEmployeeComponent from \"../Component/ReportEmployeeComponent\";\n\nconst ReportEmployeeContainer = (props) => {\n  const {\n    getReportEmployee,\n    reportEmployeeFormValues,\n    user: { roles, branchId },\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch, listBranchDropdown },\n  } = props;\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n  const [selectBranch, setSelectBranch] = React.useState([]);\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const checkBlockedRole = () => {\n    const SelectBranch = [];\n    const roleId = roles[0].role_id;\n    const blocked = isBlockedRoleCustomerView(roleId);\n    console.log(\"=== blocked : \", blocked);\n\n    if (blocked) {\n      setIsBlockedRole(blocked);\n\n      if (blocked) {\n        // Call API report service only for his own branch\n        getReportEmployee(page, limit, \"\", branchId).then((success) => {\n          setIsLoading(false);\n        });\n\n        // Set branch only on his own branch if role access is blocked\n        const selectedBranch = listBranchDropdown.filter((x) =>\n          x.id.includes(branchId)\n        );\n\n        // Push to enum dropdown branch reducer\n        SelectBranch.push({\n          id: `branch-${selectedBranch[0].id}`,\n          value: selectedBranch[0].id,\n          label: selectedBranch[0].name,\n        });\n        setSelectBranch(SelectBranch);\n      } else {\n        // Call API service report for all data, without filtering branch\n        getReportEmployee(page, limit).then((success) => {\n          setIsLoading(false);\n        });\n\n        // Show all branch when not blocked role\n        listBranchDropdown.map((item, index) => {\n          SelectBranch.push({\n            id: `branch-${index}`,\n            value: item.id,\n            label: item.name,\n          });\n        });\n        setSelectBranch(SelectBranch);\n      }\n    } else {\n      setIsBlockedRole(false);\n    }\n  };\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    checkBlockedRole();\n  }, []);\n\n  const onSearch = () => {\n    setIsLoading(true);\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues, isBlockedRole).then(\n      (success) => {\n        setIsLoading(false);\n      }\n    );\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={selectBranch}\n      onSearch={onSearch}\n      isLoading={isLoading}\n      isBlock={isBlockedRole}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  user: state.auth.userDetail,\n  reportEmployee: state.reportEmployee,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: async (page, limit, keyword, branchId, from, until) =>\n    await ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branchId,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportEmployeeContainer);\n\nexport default reduxForm({\n  form: \"reportEmployeeForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Input, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst ListServiceComponent = (props) => {\n  const {\n    headers,\n    listServices,\n    enumType,\n    enumStatus,\n    onChangePagination,\n    paging,\n    onSearch,\n    listEmployee,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">List Service</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row d-flex mb-2\">\n                      {/* This Filter */}\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumType ?? []}\n                          name=\"typeService\"\n                          label=\"Filter Tipe\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumStatus ?? []}\n                          name=\"statusService\"\n                          label=\"Filter Status\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      ...pagination,\n                    }}\n                    scroll={{\n                      x: \"calc(700px + 50%)\",\n                      y: 500,\n                    }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListServiceComponent;\n","import React from \"react\";\nimport { Space, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeExternalServices,\n  getIndex,\n  isBlockedRoleListService,\n  SelectStatusServices,\n} from \"../../../app/Helpers\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListServicesComponent from \"../Component/ListServicesComponent\";\nimport * as ListServiceActions from \"../Store/ListServicesActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nconst ListServicesContainer = (props) => {\n  const {\n    user: { roles },\n    getListServices,\n    handlePressEdit,\n    handlePressDelete,\n    services: { listServices, paging },\n    listServiceFormValues,\n    getListEmployeesDropdown,\n    listEmployee,\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n  const { page, limit, totalPage } = paging;\n\n  if (listServices.length > 0) {\n    listServices.map((item, index) => {\n      listServices[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <Link\n        to={\"/detail-services\"}\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n      >\n        <CButtonAntd type=\"primary\" icon={<EditOutlined />} size=\"middle\" />\n      </Link>\n      {roles[0].name === \"Administrator\" && (\n        <CButtonAntd\n          onClick={() => handlePressDelete(record.id)}\n          type=\"primary\"\n          icon={<DeleteOutlined />}\n          size=\"middle\"\n          danger\n        />\n      )}\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: 50,\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"No. Service\",\n      dataIndex: \"no_service\",\n      key: \"no_service\",\n      align: \"center\",\n      width: 150,\n      sorter: (a, b) => a.no_service - b.no_service,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      align: \"center\",\n      width: 160,\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type ? type?.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: 200,\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.length > 0 &&\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: 250,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.length > 0 &&\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: 250,\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.length > 0 &&\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: 250,\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: 100,\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      align: \"center\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status ? status?.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      width: 150,\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: 150,\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: 100,\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const checkBlockedRole = () => {\n    getListServices(page, limit);\n\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleListService(roleId);\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    getListEmployeesDropdown();\n    checkBlockedRole();\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ListServiceActions.setPagingListService(paging));\n    getListServices(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    ListServiceActions.handleSearch(1, 10, val, listServiceFormValues);\n  };\n\n  const SelectEmployeeData = [];\n  listEmployee.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <ListServicesComponent\n      headers={headers}\n      listServices={listServices}\n      renderActionTable={renderActionTable}\n      handlePressEdit={handlePressEdit}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      enumType={enumTypeExternalServices}\n      enumStatus={SelectStatusServices}\n      listEmployee={SelectEmployeeData}\n      // columns={columns}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  listServiceFormValues: getFormValues(\"listServices\")(state),\n  user: state.auth.userDetail,\n  listEmployee: state.employees.listEmployeeDropdown,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServices: (page, limit, keyword, filterValues) => {\n    ListServiceActions.getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      filterValues\n    );\n  },\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n  getListEmployeesDropdown: () => {\n    EmployeeActions.loadEmployeeDataDropdown();\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListServicesContainer);\n\nexport default reduxForm({\n  form: \"listServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst CTableAntd = (props) => {\n  const { data, headers, renderActions, size, pagination, id } = props;\n\n  const [searchText, setSearchText] = React.useState(\"\");\n  const [searchedColumn, setSearchedColumn] = React.useState(\"\");\n  const searchInput = React.useRef();\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.current.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const columns = [];\n  headers.map((item, index) => {\n    columns.push({\n      title: item.title,\n      dataIndex: item.dataIndex,\n      key: item.dataIndex,\n      width: item.width ?? \"30%\",\n      sorter: item.sorter,\n      render: item.render,\n      sortDirections: [\"descend\", \"ascend\"],\n      ...getColumnSearchProps(item.dataIndex),\n    });\n  });\n\n  if (renderActions) {\n    columns.push({\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActions,\n    });\n  }\n\n  return (\n    <Table\n      bordered\n      id={id ?? \"my-table-customize\"}\n      columns={columns}\n      dataSource={data}\n      size={size ?? \"middle\"}\n      pagination={{\n        size: 3,\n        pageSizeOptions: [\"10\", \"20\", \"50\"],\n        showSizeChanger: true,\n        ...pagination,\n      }}\n      // {...props}\n    />\n  );\n};\n\nCTableAntd.propTypes = {\n  data: PropTypes.array,\n  headers: PropTypes.array,\n  renderActions: PropTypes.any,\n};\n\nexport default CTableAntd;\n","import { Modal } from \"antd\";\nimport React from \"react\";\n\ninterface IProps {\n  visible: boolean;\n  content: any;\n  footer: any;\n  onCancel: any;\n  width: any;\n}\n\nconst CModal: React.FC<IProps> = (props) => {\n  // const showModal = () => {\n  //   setVisible(true)\n  // };\n\n  // const handleOk = () => {\n  //   setLoading(true)\n  //   setTimeout(() => {\n  //     setLoading(false)\n  //     setVisible(false)\n  //   }, 3000);\n  // };\n\n  return (\n    <Modal\n      visible={props.visible}\n      footer={props.footer}\n      destroyOnClose\n      onCancel={props.onCancel}\n      width={props.width ? props.width : 600}\n    >\n      {props.content}\n    </Modal>\n  );\n};\n\nexport default CModal;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"username\"\n            label=\"Username\"\n            placeholder=\"\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"fullname\"\n            label=\"Nama Lengkap\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"password\"\n            label=\"Password\"\n            component={CInput}\n            type=\"password\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AdminModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default AdminModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport AdminModalComponent from \"../Component/AdminModalComponent\";\n\nconst AdminModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    admins: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  return (\n    <AdminModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    AdminActions.saveAdminRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminModalContainer);\n\nexport default reduxForm({\n  form: \"editAdminForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport AdminModalContainer from \"../Container/AdminModalContainer\";\n\nconst { Search } = Input;\n\nconst AdminComponent = (props) => {\n  const {\n    headers,\n    listAdmin,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Admin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Admin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listAdmin}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AdminModalContainer />\n    </div>\n  );\n};\n\nexport default AdminComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport AdminComponent from \"../Component/AdminComponent\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListAdmin,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    admins: { listAdmin, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listAdmin.length > 0) {\n    listAdmin.map((item, index) => {\n      listAdmin[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"10%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Username\",\n      dataIndex: \"username\",\n      key: \"username\",\n      width: \"30%\",\n      sorter: (a, b) => a.username.length - b.username.length,\n    },\n    {\n      title: \"Nama Lengkap\",\n      dataIndex: \"fullname\",\n      key: \"fullname\",\n      width: \"30%\",\n      sorter: (a, b) => a.fullname.length - b.fullname.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListAdmin(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(AdminActions.setPagingAdmin(paging));\n    getListAdmin(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListAdmin(page, limit, val);\n  };\n\n  return (\n    <AdminComponent\n      headers={headers}\n      listAdmin={listAdmin}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListAdmin: (page, limit, keyword) =>\n    AdminActions.getListAdminRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(AdminActions.setSelectedAdminData({}));\n    await dispatch(AdminActions.setSelectedAdminId(\"\"));\n    dispatch(AdminActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    AdminActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(AdminActions.setFormStatus(\"edit\"));\n    await dispatch(AdminActions.setSelectedAdminId(record.id));\n    await dispatch(AdminActions.setSelectedAdminData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await AdminActions.mapDetailAdminToForm();\n  },\n  handlePressDelete: async (adminId) => {\n    await dispatch(AdminActions.setSelectedAdminId(adminId));\n    AdminActions.deleteAdminRequested(adminId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"adminForm\",\n})(EnhanceContainer);\n","import React from \"react\";\n\nconst NotFound = (props) => {\n  return (\n    // <div class=\"main-wrapper\">\n    //   <div class=\"page-wrapper full-page\">\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto d-flex flex-column align-items-center\">\n          <img\n            src=\"../../../assets/images/404.svg\"\n            class=\"img-fluid mb-2\"\n            alt=\"404\"\n          />\n          <h1 class=\"font-weight-bold mb-22 mt-2 tx-80 text-muted\">404</h1>\n          <h4 class=\"mb-2\">Page Not Found</h4>\n          <h6 class=\"text-muted mb-3 text-center\">\n            Oopps!! The page you were looking for doesn't exist.\n          </h6>\n          <a href=\"/dashboard\" class=\"btn btn-primary\">\n            Back to home\n          </a>\n        </div>\n      </div>\n    </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport history from \"./History\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as Selectors from \"../modules/Auth/Selector/AuthSelector\";\nimport ConfigAxios from \"./axios/ConfigAxios\";\nimport { navigate } from \"./Helpers\";\nimport { setGlobalLoading } from \"../modules/App/Store/ComponentAction\";\n\nconst AuthMiddleware = (ComposedComponent, menuPath, isSecureRoute) => {\n  const returnData = (props) => {\n    const { isAuthenticated, redirect, userMenus, redirectToServices } = props;\n\n    if (!isAuthenticated) {\n      redirect();\n    } else {\n      if (isSecureRoute) {\n        const isMenuCanAccess = userMenus.filter((x) => x.path === menuPath);\n\n        if (isMenuCanAccess.length <= 0) {\n          redirectToServices();\n        }\n      }\n      ConfigAxios.defaults.headers[\n        \"Authorization\"\n      ] = `Bearer ${isAuthenticated}`;\n    }\n\n    return (\n      <div>{isAuthenticated ? <ComposedComponent {...props} /> : null}</div>\n    );\n  };\n\n  const mapStateToProps = createStructuredSelector({\n    isAuthenticated: Selectors.Token(),\n    userRole: Selectors.UserRole(),\n    userMenus: Selectors.UserMenus(),\n  });\n  const mapDispatchToProps = (dispatch) => ({\n    redirect: () => {\n      setTimeout(() => {\n        navigate(\"/auth\");\n        dispatch(setGlobalLoading(false));\n      }, 1000);\n    },\n    redirectToServices: () => navigate(\"/list_service\"),\n  });\n  return connect(mapStateToProps, mapDispatchToProps)(returnData);\n};\n\nexport default AuthMiddleware;\n","import React from \"react\";\n\ninterface IProps {\n  type:\n    | \"primary\"\n    | \"danger\"\n    | \"warning\"\n    | \"info\"\n    | \"success\"\n    | \"secondary\"\n    | \"light\"\n    | \"dark\";\n}\n\nconst CBadgeText: React.FC<IProps> = (props) => {\n  return <span className={`badge badge-${props.type}`}>{props.children}</span>;\n};\n\nexport default CBadgeText;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumEmployee }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Teknisi</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <CSelect\n            showSearch\n            data={enumEmployee}\n            name=\"employee\"\n            label=\"Pilih Teknisi\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AddEmployeeModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    handleCancel,\n    enumEmployee,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          enumEmployee={enumEmployee}\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n        />\n      }\n    />\n  );\n};\n\nexport default AddEmployeeModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateServiceEmployeeForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport AddEmployeeModalComponent from \"../Component/AddEmployeeModalComponent\";\n\nconst AddEmployeeModalContainer = (props) => {\n  const {\n    handleCancel,\n    services: { selectedJobService },\n    component: { isModalVisible },\n    employees: { listEmployees },\n    valid,\n  } = props;\n\n  const SelectEmployee = [];\n  listEmployees.map((item, index) => {\n    SelectEmployee.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      const employee = values.employee.split(\"|\");\n      DetailServiceTransactionAction.handleAddNewEmployeeService(\n        selectedJobService.id,\n        employee[0]\n      );\n    } else {\n    }\n  };\n\n  return (\n    <AddEmployeeModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      enumEmployee={SelectEmployee}\n      submitForm={submitForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddEmployeeModalContainer);\n\nexport default reduxForm({\n  form: \"serviceEmployeeForm\",\n  validate: validateServiceEmployeeForm,\n})(EnhanceContainer);\n","export const Themes = {\n  success: \"#17B794\",\n  error: \"#f50\",\n  warning: \"#FEC260\",\n  secondary: \"#A5A5A5\",\n};\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"reason\"\n            label=\"Alasan Reject\"\n            component={CInput}\n            typeComponent=\"textarea\"\n            placeholder=\"Masukan alasan reject\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst RejectedModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RejectedModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRejected, validateFormRoles } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionActions from \"../Store/DetailServiceTransactionAction\";\nimport RejectedModalComponent from \"../Component/RejectedModalComponent\";\n\nconst RejectedModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { rejectionsModal },\n    services: { selectedJobService },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(selectedJobService.id, values);\n    } else {\n    }\n  };\n\n  return (\n    <RejectedModalComponent\n      isModalVisible={rejectionsModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formName={\"Alasan Reject\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  detailService: state.detailService,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionActions.setRejectionsModal(false)),\n\n  handleSubmitForm: (jobId, values) => {\n    DetailServiceTransactionActions.handlePressRejectedRequested(jobId, values);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RejectedModalContainer);\n\nexport default reduxForm({\n  form: \"editRejecetdForm\",\n  validate: validateFormRejected,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, InputNumber, Row, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumWarranty, warrantyMonths } from \"../../../app/Helpers\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">Ubah Service</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={enumWarranty}\n              name=\"warranty\"\n              label=\"Warranty\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-7\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={warrantyMonths()}\n              name=\"warrantyMonths\"\n              label=\"Warranty Months\"\n            />\n          </div>\n          <div class=\"col-md-5\">\n            <Field\n              name=\"warrantyYears\"\n              label=\"Warranty Year\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"jobPerform\"\n              label=\"Job Perform\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalTransactionComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalTransactionComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTransaction } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport EditModalTransactionComponent from \"../Component/EditModalTransactionComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editTransactionModal },\n    masters: { listMenu },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      // handleSubmitForm(\"edit\", values, menuSelected);\n      DetailServiceTransactionAction.handlePressEditRequested(values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <EditModalTransactionComponent\n      isModalVisible={editTransactionModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditTransactionModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) => {},\n  // DetailServiceTransactionAction.saveRoleRequested(\n  //   type,\n  //   values,\n  //   menuSelected\n  // ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editTransactionForm\",\n  validate: validateFormTransaction,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, Row, TimePicker, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumTypeActivities } from \"../../../app/Helpers\";\nimport moment from \"moment\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n  typeFormDailies,\n  handleChangeTimePicker,\n  timeStartEnd,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">{`${\n        typeFormDailies === \"add\" ? \"Tambah\" : \"Ubah\"\n      } Catatan Teknisi`}</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"title\"\n              label=\"Judul\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mb-3\">\n          <div class=\"col-md-6\">\n            <Typography\n              style={{ marginBottom: 7 }}\n            >{`Jam Mulai -> Selesai`}</Typography>\n            <TimePicker.RangePicker\n              name=\"timeStartEnd\"\n              value={[timeStartEnd[0] ?? \"\", timeStartEnd[1] ?? \"\"]}\n              onChange={handleChangeTimePicker}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-5\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-5\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n        </div>\n\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumTypeActivities}\n              name=\"activityType\"\n              label=\"Pilih Kegiatan\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalDailiesComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n    typeFormDailies,\n    handleChangeTimePicker,\n    timeStartEnd,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n          typeFormDailies={typeFormDailies}\n          handleChangeTimePicker={handleChangeTimePicker}\n          timeStartEnd={timeStartEnd}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, getFormValues, reduxForm } from \"redux-form\";\nimport { validateDailiesForm } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\n\nimport EditModalDailiesComponent from \"../Component/EditModalDailiesComponent\";\n\nconst EditModalDailiesContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editDailiesModal, typeFormDailies },\n    masters: { listMenu },\n    setTimeDailiesForm,\n    editDailiesFormValues,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      DetailServiceTransactionAction.handlePressEditDailiesRequested(values);\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleChangeTimePicker = (time) => {\n    setTimeDailiesForm(time);\n  };\n\n  return (\n    <EditModalDailiesComponent\n      isModalVisible={editDailiesModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      typeFormDailies={typeFormDailies}\n      handleChangeTimePicker={handleChangeTimePicker}\n      timeStartEnd={\n        editDailiesFormValues && editDailiesFormValues.timeStartEnd \n          ? editDailiesFormValues.timeStartEnd\n          : [\"\", \"\"]\n      }\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n  editDailiesFormValues: getFormValues(\"editDailiesForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditDailiesModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n  setTimeDailiesForm: (time) => {\n    dispatch(change(\"editDailiesForm\", \"timeStartEnd\", time ?? \"\"));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditModalDailiesContainer);\n\nexport default reduxForm({\n  form: \"editDailiesForm\",\n  validate: validateDailiesForm,\n})(EnhanceContainer);\n","import React from \"react\";\r\nimport CModal from \"../../../components/CModal/CModal\";\r\nimport { Field, Form } from \"redux-form\";\r\nimport CInput from \"../../../components/CInput/CInput\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { Checkbox, Col, Divider, message, Row, Typography, Upload } from \"antd\";\r\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\r\nimport {\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { getBase64 } from \"../../../app/Helpers\";\r\nimport CSelect from \"../../../components/CSelect/CSelect\";\r\n\r\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\r\n  return [\r\n    <CButtonAntd\r\n      icon={<CloseOutlined />}\r\n      key=\"submit\"\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleClose}\r\n      danger\r\n    >\r\n      Tutup\r\n    </CButtonAntd>,\r\n    <CButtonAntd\r\n      key=\"submit\"\r\n      icon={<CheckOutlined />}\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleSaveForm}\r\n    >\r\n      Simpan\r\n    </CButtonAntd>,\r\n  ];\r\n};\r\n\r\nconst RenderContent = ({\r\n  handleSubmit,\r\n  submitForm,\r\n  beforeUpload,\r\n  handleChange,\r\n  imageUrl,\r\n  uploadButton,\r\n  enumUnit,\r\n  isImageLoaded,\r\n  isExternal,\r\n}) => {\r\n  return (\r\n    <div class=\"page-content\">\r\n      <Divider orientation=\"left\">Tambah Media</Divider>\r\n      <Form onSubmit={handleSubmit(submitForm)}>\r\n        <Row>\r\n          <div\r\n            class=\"card-body\"\r\n            style={{\r\n              marginLeft: -22,\r\n              marginTop: -20,\r\n              alignSelf: \"center\",\r\n            }}\r\n          >\r\n            <Upload\r\n              name=\"avatar\"\r\n              listType=\"picture-card\"\r\n              className=\"avatar-uploader overflow-hidden\"\r\n              showUploadList={false}\r\n              beforeUpload={beforeUpload}\r\n              onChange={handleChange}\r\n            >\r\n              {imageUrl !== \"\" ? (\r\n                <>\r\n                  {\r\n                    <img\r\n                      src={imageUrl}\r\n                      alt=\"avatar\"\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        resizeMode: \"stretch\",\r\n                        borderRadius: 5,\r\n                      }}\r\n                    />\r\n                  }\r\n                  <div\r\n                    class=\"row\"\r\n                    style={{\r\n                      backgroundColor: \"#F3F3F3\",\r\n                      position: \"absolute\",\r\n                      width: 80,\r\n                      heigh: 30,\r\n                      borderRadius: 50,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      opacity: 0.7,\r\n                    }}\r\n                  >\r\n                    <Typography style={{ fontSize: 10 }}>Ubah</Typography>\r\n                    <EditOutlined\r\n                      style={{\r\n                        color: \"#020202\",\r\n                        fontSize: 10,\r\n                        marginLeft: 5,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                uploadButton\r\n              )}\r\n            </Upload>\r\n            {isImageLoaded === false && (\r\n              <Typography style={{ fontSize: 10, color: \"red\" }}>\r\n                Field foto wajib diisi!\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </Row>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <Field\r\n              name=\"title\"\r\n              label=\"Judul\"\r\n              component={CInput}\r\n              typeComponents=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <Field\r\n              name=\"description\"\r\n              label=\"Deskripsi\"\r\n              component={CInput}\r\n              typeComponents=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {isExternal && (\r\n          <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n              <CSelect\r\n                showSearch\r\n                data={enumUnit}\r\n                name=\"unit\"\r\n                label=\"Pilih Unit\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InsertImageModalComponent = (props) => {\r\n  const {\r\n    isModalVisible,\r\n    handleSubmit,\r\n    submitForm,\r\n    isLoadingFormGlobal,\r\n    handleCancel,\r\n    formName,\r\n    enumUnit,\r\n    menuChecked,\r\n    formStatus,\r\n    onChangeRoleMenu,\r\n    defaultImage,\r\n    handleUploadPhoto,\r\n    isImageLoaded,\r\n    isExternal,\r\n  } = props;\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [imageUrl, setImageUrl] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    if (defaultImage) {\r\n      setImageUrl(defaultImage);\r\n    } else {\r\n      setImageUrl(\"\");\r\n    }\r\n  }, [defaultImage, imageUrl]);\r\n\r\n  const beforeUpload = (file) => {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      message.error(\"You can only upload JPG/PNG file!\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"Image must smaller than 2MB!\");\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      info.file.status = \"done\";\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setImageUrl(imageUrl);\r\n        setLoading(false);\r\n        handleUploadPhoto(imageUrl);\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CModal\r\n      visible={isModalVisible}\r\n      onCancel={handleCancel}\r\n      footer={\r\n        <RenderFooter\r\n          handleSaveForm={handleSubmit}\r\n          handleClose={handleCancel}\r\n        />\r\n      }\r\n      content={\r\n        <RenderContent\r\n          handleSubmit={handleSubmit}\r\n          submitForm={submitForm}\r\n          isLoadingFormGlobal={isLoadingFormGlobal}\r\n          formName={formName}\r\n          enumUnit={enumUnit}\r\n          defaultValuesMenu={menuChecked}\r\n          formStatus={formStatus}\r\n          onChangeRoleMenu={onChangeRoleMenu}\r\n          setImageUrl={setImageUrl}\r\n          setLoading={setLoading}\r\n          beforeUpload={beforeUpload}\r\n          handleChange={handleChange}\r\n          uploadButton={uploadButton}\r\n          imageUrl={imageUrl}\r\n          isImageLoaded={isImageLoaded}\r\n          isExternal={isExternal}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default InsertImageModalComponent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { change, getFormValues, reduxForm } from \"redux-form\";\r\nimport { validateFormEditMedia } from \"../../../app/validateForm\";\r\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\r\n\r\nimport InsertImageModalComponent from \"../Component/InsertImageModalComponent\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport { showToast } from \"../../Roles/Store/RolesActions\";\r\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\r\n\r\nconst InsertImageModalContainer = (props) => {\r\n  const {\r\n    valid,\r\n    handleCancel,\r\n    detailService: { insertMediaModal },\r\n    formValues,\r\n    services: { selectedJobService },\r\n  } = props;\r\n  const [isImageLoaded, setIsImageLoaded] = React.useState(null);\r\n\r\n  const handleError = () => {\r\n    setIsImageLoaded(false);\r\n    showToast(\"Harap lengkapi form!\", \"error\");\r\n  };\r\n\r\n  const submitForm = (values) => {\r\n    if (valid) {\r\n      if (formValues.imageUrl) {\r\n        setIsImageLoaded(true);\r\n        DetailServiceTransactionAction.handlePressInsertMediaRequested(values);\r\n      } else {\r\n        handleError();\r\n      }\r\n    }\r\n  };\r\n\r\n  const SelectUnit = [];\r\n  if (selectedJobService.units && selectedJobService.units.length > 0) {\r\n    selectedJobService.units.map((item, index) => {\r\n      SelectUnit.push({\r\n        id: `unit-${index}`,\r\n        value: item.id,\r\n        label: item.unit_name,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleUploadPhoto = (base64) => {\r\n    store.dispatch(change(\"editMediaForm\", `imageUrl`, base64 ?? \"\"));\r\n  };\r\n\r\n  return (\r\n    <InsertImageModalComponent\r\n      isModalVisible={insertMediaModal}\r\n      handleCancel={handleCancel}\r\n      submitForm={submitForm}\r\n      enumUnit={SelectUnit}\r\n      handleUploadPhoto={handleUploadPhoto}\r\n      isImageLoaded={isImageLoaded}\r\n      defaultImage={\r\n        formValues && formValues.imageUrl ? formValues.imageUrl : \"\"\r\n      }\r\n      isExternal={selectedJobService.is_external}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  admins: state.admins,\r\n  roles: state.roles,\r\n  component: state.component,\r\n  masters: state.masters,\r\n  detailService: state.detailService,\r\n  services: state.services,\r\n  formValues: getFormValues(\"editMediaForm\")(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleCancel: () =>\r\n    dispatch(DetailServiceTransactionAction.setInsertMediaModal(false)),\r\n});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InsertImageModalContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"editMediaForm\",\r\n  validate: validateFormEditMedia,\r\n})(EnhanceContainer);\r\n","import React from \"react\";\r\nimport CModal from \"../../../components/CModal/CModal\";\r\nimport { Field, Form } from \"redux-form\";\r\nimport CInput from \"../../../components/CInput/CInput\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { Checkbox, Col, Divider, Row } from \"antd\";\r\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\r\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\r\n\r\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\r\n  return [\r\n    <CButtonAntd\r\n      icon={<CloseOutlined />}\r\n      key=\"submit\"\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleClose}\r\n      danger\r\n    >\r\n      Tutup\r\n    </CButtonAntd>,\r\n    <CButtonAntd\r\n      key=\"submit\"\r\n      icon={<CheckOutlined />}\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleSaveForm}\r\n    >\r\n      Simpan\r\n    </CButtonAntd>,\r\n  ];\r\n};\r\n\r\nconst SelectRole = (props) => {\r\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\r\n\r\n  const Item = ({ item }) => {\r\n    return (\r\n      <Checkbox name={`item.${item.value}`} value={item.value}>\r\n        {item.label}\r\n      </Checkbox>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Checkbox.Group\r\n        {...props.input}\r\n        style={{ width: \"100%\" }}\r\n        defaultValue={defaultValuesMenu}\r\n        onChange={onChangeRoleMenu}\r\n      >\r\n        <Row>\r\n          {data.map((item, index) => {\r\n            return (\r\n              <Col span={8}>\r\n                <Field\r\n                  item={item}\r\n                  name={`item.${item.value}`}\r\n                  component={Item}\r\n                />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Checkbox.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderContent = ({ handleSubmit, submitForm, handleKeyDown }) => {\r\n  return (\r\n    <div class=\"page-content\">\r\n      <Divider orientation=\"left\">Ubah laporan</Divider>\r\n      <Form onSubmit={handleSubmit(submitForm)}>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <Field\r\n              name=\"summary\"\r\n              label=\"Detail Laporan\"\r\n              component={CInput}\r\n              typeComponent=\"textarea\"\r\n              linebreak\r\n              onKeyDown={handleKeyDown}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditModalSummaryComponent = (props) => {\r\n  const {\r\n    isModalVisible,\r\n    handleSubmit,\r\n    submitForm,\r\n    isLoadingFormGlobal,\r\n    handleCancel,\r\n    formName,\r\n    enumMenu,\r\n    menuChecked,\r\n    formStatus,\r\n    onChangeRoleMenu,\r\n    typeFormDailies,\r\n  } = props;\r\n\r\n  return (\r\n    <CModal\r\n      visible={isModalVisible}\r\n      onCancel={handleCancel}\r\n      footer={\r\n        <RenderFooter\r\n          handleSaveForm={handleSubmit}\r\n          handleClose={handleCancel}\r\n        />\r\n      }\r\n      content={\r\n        <RenderContent\r\n          handleSubmit={handleSubmit}\r\n          submitForm={submitForm}\r\n          isLoadingFormGlobal={isLoadingFormGlobal}\r\n          formName={formName}\r\n          enumMenu={enumMenu}\r\n          defaultValuesMenu={menuChecked}\r\n          formStatus={formStatus}\r\n          onChangeRoleMenu={onChangeRoleMenu}\r\n          typeFormDailies={typeFormDailies}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditModalSummaryComponent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { change, reduxForm } from \"redux-form\";\r\nimport { validateFormTransaction } from \"../../../app/validateForm\";\r\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\r\nimport EditModalSummaryComponent from \"../Component/EditModalSummaryComponent\";\r\n\r\nconst EditModalSummaryContainer = (props) => {\r\n  const {\r\n    valid,\r\n    handleCancel,\r\n    detailService: { editSummaryModal, typeFormDailies },\r\n    masters: { listMenu },\r\n  } = props;\r\n\r\n  const submitForm = (values) => {\r\n    if (valid) {\r\n      DetailServiceTransactionAction.handlePressEditSummaryRequested(values);\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const SelectMenu = [];\r\n  listMenu.map((item, index) => {\r\n    SelectMenu.push({\r\n      id: `role-${index}`,\r\n      value: item.id,\r\n      label: item.menu,\r\n    });\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <EditModalSummaryComponent\r\n      isModalVisible={editSummaryModal}\r\n      handleCancel={handleCancel}\r\n      submitForm={submitForm}\r\n      enumMenu={SelectMenu}\r\n      typeFormDailies={typeFormDailies}\r\n      handleKeyDown={handleKeyDown}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  admins: state.admins,\r\n  roles: state.roles,\r\n  component: state.component,\r\n  masters: state.masters,\r\n  detailService: state.detailService,\r\n  services: state.services,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleCancel: () =>\r\n    dispatch(DetailServiceTransactionAction.setEditSummaryModal(false)),\r\n  handleClearModalContent: () => {\r\n    dispatch(change(\"editSummaryForm\", `type`, \"\"));\r\n    dispatch(change(\"editSummaryForm\", `unitId`, \"\"));\r\n    dispatch(change(\"editSummaryForm\", `summary`, \"\"));\r\n  },\r\n});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditModalSummaryContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"editSummaryForm\",\r\n  validate: validateFormTransaction,\r\n})(EnhanceContainer);\r\n","import React from \"react\";\nimport { Tabs } from \"antd\";\nimport { Typography } from \"antd\";\nimport CBadgeText from \"../../../components/CBadgeText/CBadgeText\";\nimport moment from \"moment\";\nimport AddEmployeeModalContainer from \"../Container/AddEmployeeModalContainer\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n  EditOutlined,\n  StarOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Themes } from \"../../../property/colors\";\nimport RejectedModalContainer from \"../Container/RejectedModalContainer\";\nimport EditModalTransactionContainer from \"../Container/EditModalTransactionContainer\";\nimport EditModalDailiesContainer from \"../Container/EditModalDailiesContainer\";\nimport InsertImageModalContainer from \"../Container/InsertImageModalContainer\";\nimport EditModalSummaryContainer from \"../Container/EditModalSummaryContainer\";\nimport { Link } from \"react-router-dom\";\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\nconst DetailServiceTransactionComponent = (props) => {\n  const {\n    data,\n    isNotBlockedRole,\n    isBlockedRoleActionButton,\n    TabPanel,\n    onChangeTab,\n    handlePressGeneratePdf,\n    goBack,\n    handlePressActions,\n    handlePressEdit,\n    handleSetOnProgress,\n  } = props;\n\n  const RenderButtonAction = ({ status, role }) => {\n    let button;\n    switch (status?.toLowerCase()) {\n      case \"completed\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"approved\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Approve\n            </CButtonAntd>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"rejected\")}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"progress\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"finished\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Complete\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"finished\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              // onClick={handlePressAddNew}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n\n      default:\n        return <div />;\n    }\n    return button;\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"col-md-12 grid-margin stretch-card\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"row align-items-center justify-content-between\">\n                <div>\n                  <h6 class=\"card-title\">Detail Transaksi</h6>\n                </div>\n                <div class=\"row mb-3 ml-2 mr-2\">\n                  <Link to={\"/list_service\"} onClick={goBack}>\n                    <CButtonAntd\n                      type=\"primary\"\n                      icon={<ArrowLeftOutlined />}\n                      size=\"middle\"\n                      danger\n                    >\n                      Kembali\n                    </CButtonAntd>\n                  </Link>\n                  <div class=\"ml-3\" />\n                  {data?.status?.toLowerCase() !== \"approved\" &&\n                    !isBlockedRoleActionButton &&\n                    data?.status?.toLowerCase() === \"progress\" && (\n                      <CButtonAntd\n                        onClick={handlePressEdit}\n                        type=\"primary\"\n                        icon={<EditOutlined />}\n                        size=\"middle\"\n                      >\n                        Ubah\n                      </CButtonAntd>\n                    )}\n                  {data?.status?.toLowerCase() === \"rejected\" &&\n                    !isBlockedRoleActionButton && (\n                      <CButtonAntd\n                        onClick={handleSetOnProgress}\n                        type=\"primary\"\n                        icon={<StarOutlined />}\n                        size=\"middle\"\n                      >\n                        Set Job OnProgress\n                      </CButtonAntd>\n                    )}\n                  <RenderButtonAction status={data.status} />\n                  <div class=\"mr-3\" />\n                  {/* button to trigger printing of target component */}\n                  {isNotBlockedRole && (\n                    <CButtonAntd\n                      onClick={handlePressGeneratePdf}\n                      type=\"primary\"\n                      icon={<FilePdfOutlined />}\n                      size=\"middle\"\n                    >\n                      Cetak Formulir\n                    </CButtonAntd>\n                  )}\n                </div>\n              </div>\n              <div\n                id=\"header-detail-transaction\"\n                class=\"d-flex justify-content-between align-items-baseline\"\n              >\n                <div class=\"col-md-6\">\n                  <Text>Tipe : </Text>\n                  <CBadgeText type={data.is_external ? \"success\" : \"info\"}>\n                    {data.type ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Unit : </Text>\n                  <Text>{data.unit ?? \"-\"}</Text>\n                  <br />\n                  <Text>Model (SN) : </Text>\n                  <Text>{data.model ?? \"-\"}</Text>\n                  <br />\n                  <Text>Job Forms : </Text>\n                  <Text>{data.job_form_name ?? \"-\"}</Text>\n                  <br />\n                  <Text>Customer : </Text>\n                  <Text strong>{data.customer_name}</Text>\n                  <br />\n                  <Text>Warranty : </Text>\n                  <Text strong>\n                    {data.warranty ? \"Warranty\" : \"No Warranty\"}\n                  </Text>\n                  <br />\n                  <Text>PIC : </Text>\n                  <Text strong>{data.customer_pic_name ?? \"()\"}</Text>\n                </div>\n                <div class=\"col-md-6\">\n                  <Text>Status Transaksi : </Text>\n                  <CBadgeText\n                    type={\n                      data?.status?.toLowerCase() === \"draft\"\n                        ? \"warning\"\n                        : \"success\"\n                    }\n                  >\n                    {data.status ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Job Perform : </Text>\n                  <Text strong>{data.job_perform}</Text>\n                  <br />\n                  <Text>Start - Due : </Text>\n                  <Text strong>{`${moment(data.start).format(\n                    \"DD-MMM-YYYY\"\n                  )} - ${moment(data.due).format(\"DD-MMM-YYYY\")}`}</Text>\n\n                  <br />\n                  <Text>Dibuat : </Text>\n                  <Text strong>{data.created_date}</Text>\n                  <br />\n                  <Text>Lokasi : </Text>\n                  <Text strong>{data.location ?? \"-\"}</Text>\n                </div>\n                <div class=\"col-md-4\"></div>\n              </div>\n\n              <div class=\"ml-2 mt-3\">\n                <Tabs defaultActiveKey=\"1\" onChange={onChangeTab}>\n                  {TabPanel.map((item, index) => (\n                    <TabPane\n                      tab={\n                        <span>\n                          {item.icon}\n                          {item.title}\n                        </span>\n                      }\n                      key={item.key}\n                    >\n                      {item.component}\n                    </TabPane>\n                  ))}\n                </Tabs>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AddEmployeeModalContainer />\n      <RejectedModalContainer />\n      <EditModalTransactionContainer />\n      <EditModalDailiesContainer />\n      <InsertImageModalContainer />\n      <EditModalSummaryContainer />\n    </div>\n  );\n};\n\nexport default DetailServiceTransactionComponent;\n","import React from \"react\";\nimport { Card, Typography, Col, Row, Image } from \"antd\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  CheckCircleOutlined,\n} from \"@ant-design/icons\";\n\nconst { Meta } = Card;\nconst { Text } = Typography;\n\nconst RenderDescription = ({\n  data,\n  handlePressNonactive,\n  handlePressActive,\n}) => {\n  return (\n    <div>\n      <hr />\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Nik</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.nik}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Telepon</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.phone}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Alamat</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong style={{ fontSize: 12 }}>\n            {data.address}\n          </Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Tanggal Mulai</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.created_date}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Status</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <CBadgeText type={data.active ? \"success\" : \"danger\"}>\n            {data.active ? \"Aktif\" : \"Tidak Aktif\"}\n          </CBadgeText>\n        </div>\n      </Row>\n      <div class=\"mt-3\">\n        {data.active ? (\n          <CButtonAntd\n            onClick={handlePressNonactive}\n            type=\"primary\"\n            icon={<DeleteOutlined />}\n            size=\"middle\"\n            danger\n          >\n            Non-Aktifkan Teknisi\n          </CButtonAntd>\n        ) : (\n          <CButtonAntd\n            onClick={handlePressActive}\n            type=\"primary\"\n            icon={<CheckCircleOutlined />}\n            size=\"middle\"\n          >\n            Aktifkan teknisi\n          </CButtonAntd>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst TabPanelEmployeeComponent = (props) => {\n  const {\n    employees,\n    handlePressAddNew,\n    handlePressNonactive,\n    jobId,\n    handlePressActive,\n    isBlockedRole,\n  } = props;\n  return (\n    <div class=\"page-content\">\n      <Row style={{ marginLeft: 16 }}>\n        {!isBlockedRole && <CButtonAntd\n          onClick={handlePressAddNew}\n          type=\"primary\"\n          icon={<PlusOutlined />}\n          size=\"middle\"\n        >\n          Tambah Teknisi\n        </CButtonAntd>}\n      </Row>\n      <Row>\n        {employees.map((item, index) => {\n          return (\n            <Col style={{ margin: 16 }} key={`employee-${index}`}>\n              <Text strong>{`Teknisi-${index + 1}`}</Text>\n              <Card\n                style={{ width: 350, marginTop: 8 }}\n                cover={\n                  <Image\n                    alt=\"example\"\n                    src={\n                      item.photo ??\n                      \"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                    }\n                    width=\"100%\"\n                    height={200}\n                  />\n                }\n              >\n                <Meta\n                  title={item.name}\n                  description={\n                    <RenderDescription\n                      data={item}\n                      handlePressNonactive={() =>\n                        handlePressNonactive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                      handlePressActive={() =>\n                        handlePressActive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                    />\n                  }\n                />\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </div>\n  );\n};\n\nexport default TabPanelEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TabPanelEmployeeComponent from \"../../Component/TabPanel/TabPanelEmployeeComponent\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionActions from \"../../Store/DetailServiceTransactionAction\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\n\nconst TabPanelEmployeeContainer = (props) => {\n  const {\n    userRole,\n    services: { selectedJobService },\n  } = props;\n\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  return <TabPanelEmployeeComponent jobId={selectedJobService.id} isBlockedRole={isBlockedRole} {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n  detailService: state.detailService,\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressAddNew: () => {\n    dispatch(ComponentActions.setGlobalModal(true));\n  },\n  handlePressNonactive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      false\n    ),\n  handlePressActive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      true\n    ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelEmployeeContainer);\n","import React, { Fragment } from \"react\";\nimport { Typography, Row, Empty, Divider, Col, Spin } from \"antd\";\nimport {\n  FileOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst RenderItemSummary = ({ summary, index }) => {\n  return summary.length > 0 ? (\n    summary.map((item, indexText) => (\n      <Typography key={`item-summary${index}-text-${indexText}`}>\n        {item}\n      </Typography>\n    ))\n  ) : (\n    <Typography>Summary belum ada</Typography>\n  );\n};\n\nconst TabPanelSummaryComponent = (props) => {\n  const { summaryArr, isLoaded, handlePressEdit, isBlockedRole, isExternal } =\n    props;\n\n  return (\n    <div class=\"page-content\">\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <Fragment>\n          <Row\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Row\n              style={{\n                alignItems: \"center\",\n              }}\n            >\n              <FileOutlined />\n              <Typography style={{ marginLeft: 5 }}>Laporan Akhir</Typography>\n            </Row>\n            <div>\n              {isExternal === false && summaryArr.length < 0 && (\n                <CButtonAntd\n                  onClick={() => handlePressEdit(\"NEW_SUMMARY\")}\n                  type=\"primary\"\n                  icon={<PlusCircleOutlined />}\n                  size=\"middle\"\n                >\n                  Tambah Summary\n                </CButtonAntd>\n              )}\n            </div>\n          </Row>\n          <hr />\n          <Row gutter={[16, 16]}>\n            {summaryArr.length > 0 ? (\n              summaryArr.map((item, index) => (\n                <Col key={`col-unit-${index}`} span={12}>\n                  <div class=\"card p-2\">\n                    {isBlockedRole && (\n                      <CButtonAntd\n                        onClick={() => handlePressEdit(item.id)}\n                        type=\"primary\"\n                        icon={<EditOutlined />}\n                        size=\"middle\"\n                      >\n                        Ubah Summary\n                      </CButtonAntd>\n                    )}\n                    <Divider\n                      style={{\n                        fontSize: 12,\n                        fontWeight: \"bold\",\n                        textTransform: \"uppercase\",\n                      }}\n                      plain\n                    >\n                      {isExternal ? `Unit ${item.unitName}` : \"Job Summary\"}\n                    </Divider>\n                    {<RenderItemSummary index={index} summary={item.summary} />}\n                  </div>\n                </Col>\n              ))\n            ) : (\n              <div class=\"col-md-12 px-auto\">\n                <Empty />\n              </div>\n            )}\n          </Row>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelSummaryComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change } from \"redux-form\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport TabPanelSummaryComponent from \"../../Component/TabPanel/TabPanelSummaryComponent\";\nimport { setEditSummaryModal } from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelSummaryContainer = (props) => {\n  const { summary, userRole, selectedService } = props;\n  const [summaryArr, setSummaryArr] = React.useState([]);\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  React.useEffect(() => {\n    const summaryMapping = [];\n\n    if (selectedService.is_external) {\n      summary.map((item, index) => {\n        const summaryText = item.summary ?? \"\";\n        const checkBreakLine = summaryText.includes(\"\\n\");\n\n        if (checkBreakLine) {\n          const splitSummary = summaryText.split(\"\\n\");\n          summaryMapping.push({\n            id: item.id,\n            unitName: item.unitName,\n            summary: splitSummary,\n          });\n        } else {\n          summaryMapping.push({\n            id: item.id,\n            unitName: item.unitName,\n            summary: [summaryText],\n          });\n        }\n      });\n\n      setSummaryArr(summaryMapping);\n    } else {\n      const data = {};\n      const summaryText = summary.summary ?? \"\";\n      const checkBreakLine = summaryText.includes(\"\\\\n\");\n\n      if (checkBreakLine) {\n        const splitSummary = summaryText.split(\"\\\\n\");\n        data.id = selectedService.id;\n        data.unitName = \"\";\n        data.summary = splitSummary;\n      } else {\n        data.id = selectedService.id;\n        data.unitName = \"\";\n        data.summary = [summaryText];\n      }\n\n      setSummaryArr([data]);\n    }\n  }, [selectedService.id, selectedService.is_external, summary]);\n\n  return (\n    <TabPanelSummaryComponent\n      summaryArr={summaryArr}\n      isExternal={selectedService.is_external}\n      isBlockedRole={isBlockedRole}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userRole: state.auth.userDetail.roles,\n  selectedService: state.services.selectedJobService,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (unitId) => {\n    if (unitId === \"NEW_SUMMARY\") {\n      dispatch(change(\"editSummaryForm\", `type`, \"NEW\"));\n    } else {\n      dispatch(change(\"editSummaryForm\", `type`, \"EDIT\"));\n      dispatch(change(\"editSummaryForm\", `unitId`, unitId));\n    }\n\n    await dispatch(setEditSummaryModal(true));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelSummaryContainer);\n\nexport default EnhanceContainer;\n","import React, { Fragment } from \"react\";\nimport { Typography, Row, Empty, Card, Col, Image, Divider, Spin } from \"antd\";\nimport { CameraOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\n\nconst { Meta } = Card;\n\nconst RenderImage = ({ medias, unit }) => {\n  return medias.map((item, index) => {\n    return (\n      <Col\n        style={{\n          marginLeft: 10,\n          marginRight: 10,\n        }}\n      >\n        <Card\n          hoverable\n          style={{ width: 240, height: 200 }}\n          cover={<Image width={\"100%\"} height={150} src={item.path} />}\n        >\n          <Meta\n            style={{ marginTop: -10 }}\n            title={`Gambar Penting ${index + 1}`}\n          />\n        </Card>\n      </Col>\n    );\n  });\n};\n\nconst TabPanelImagesComponent = (props) => {\n  const { medias, handlePressAdd, isLoaded, isBlockedRole } = props;\n\n  return (\n    <div class=\"page-content\">\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <Fragment>\n          <Row\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Row\n              style={{\n                alignItems: \"center\",\n              }}\n            >\n              <CameraOutlined />\n              <Typography style={{ marginLeft: 5 }}>Media</Typography>\n            </Row>\n            {isBlockedRole && (\n              <CButtonAntd\n                onClick={handlePressAdd}\n                type=\"primary\"\n                icon={<PlusCircleOutlined />}\n                size=\"middle\"\n              >\n                Tambah Gambar\n              </CButtonAntd>\n            )}\n          </Row>\n          <hr />\n          {medias && medias.length > 0 ? (\n            medias.map((item, index) => (\n              <div>\n                <Divider\n                  style={{\n                    textTransform: \"uppercase\",\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                  }}\n                  plain\n                >{`Unit ${item.unitName}`}</Divider>\n                <Row>\n                  <RenderImage medias={item.image} unit={item.unitName} />\n                </Row>\n              </div>\n            ))\n          ) : (\n            <div>\n              <Empty />\n            </div>\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelImagesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport TabPanelImagesComponent from \"../../Component/TabPanel/TabPanelImagesComponent\";\nimport {\n  resetFormModalImage,\n  setInsertMediaModal,\n} from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelImagesContainer = (props) => {\n  const { userRole } = props;\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  return <TabPanelImagesComponent isBlockedRole={isBlockedRole} {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressAdd: async (values) => {\n    await resetFormModalImage();\n    await dispatch(setInsertMediaModal(true));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelImagesContainer);\n\nexport default EnhanceContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table, Space } from \"antd\";\nimport { EditOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst RenderDailies = ({ dailies, handlePressEdit }) => {\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"karyawan\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"deskripsi\",\n    },\n    {\n      title: \"Mulai\",\n      dataIndex: \"mulai\",\n    },\n    {\n      title: \"Selesai\",\n      dataIndex: \"selesai\",\n    },\n    {\n      title: \"Jam\",\n      dataIndex: \"jam\",\n    },\n  ];\n  columns.push({\n    align: \"center\",\n    title: \"Aksi\",\n    key: \"action\",\n    width: \"10%\",\n    render: renderActionTable,\n  });\n  const data = [];\n  dailies.map((item, index) => {\n    data.push({\n      key: index,\n      id: item.id,\n      karyawan: item.employee_name,\n      title: item.title,\n      deskripsi: item.description,\n      mulai: moment(item.daily_start).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      selesai: moment(item.daily_end).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      jam: item.hours,\n      type: item.type\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelDailiesComponent = (props) => {\n  const { dailies, handlePressEdit, handlePressAdd, isBlockedRole } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Row>\n          <EditOutlined />\n          <Typography style={{ marginLeft: 5 }}>Catatan</Typography>\n        </Row>\n        {isBlockedRole && (\n          <CButtonAntd\n            onClick={handlePressAdd}\n            type=\"primary\"\n            icon={<PlusCircleOutlined />}\n            size=\"middle\"\n          >\n            Tambah Catatan\n          </CButtonAntd>\n        )}\n      </Row>\n      <hr />\n      {dailies && dailies.length > 0 ? (\n        <RenderDailies dailies={dailies} handlePressEdit={handlePressEdit} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change } from \"redux-form\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport TabPanelDailiesComponent from \"../../Component/TabPanel/TabPanelDailiesComponent\";\nimport {\n  mapDailiesToForm,\n  setEditDailiesModal,\n  setSelectedEditDailiesData,\n  setTypeFormDailies,\n} from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelDailiesContainer = (props) => {\n  const {\n    userRole,\n    detailService: { typeFormDailies },\n  } = props;\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  return (\n    <TabPanelDailiesComponent\n      isBlockedRole={isBlockedRole}\n      typeFormDailies={typeFormDailies}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  detailService: state.detailService,\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (values) => {\n    await dispatch(setTypeFormDailies(\"edit\"));\n    await dispatch(setSelectedEditDailiesData(values));\n    store.dispatch(setEditDailiesModal(true));\n    mapDailiesToForm();\n  },\n  handlePressAdd: async () => {\n    dispatch(change(\"editDailiesForm\", `id`, \"\"));\n    dispatch(change(\"editDailiesForm\", `startDate`, \"\"));\n    dispatch(change(\"editDailiesForm\", `endDate`, \"\"));\n    dispatch(change(\"editDailiesForm\", `title`, \"\"));\n    dispatch(change(\"editDailiesForm\", `description`, \"\"));\n    dispatch(change(\"editDailiesForm\", `type`, \"\"));\n    dispatch(change(\"editDailiesForm\", `timeStartEnd`, null));\n    await dispatch(setSelectedEditDailiesData({}));\n    await dispatch(setTypeFormDailies(\"add\"));\n    store.dispatch(setEditDailiesModal(true));\n  },\n  handlePressCancel: () => {\n    store.dispatch(setEditDailiesModal(false));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelDailiesContainer);\n\nexport default EnhanceContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderHistories = ({ histories }) => {\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"user_name\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  histories.map((item, index) => {\n    data.push({\n      key: index,\n      user_name: item.user_name,\n      title: item.title,\n      description: item.description,\n      created_date: moment(item.created_date).format(\"DD-MMM-YYYY\"),\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelHistoriesComponent = (props) => {\n  const { histories } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Riwayat</Typography>\n      </Row>\n      <hr />\n      {histories.length > 0 ? (\n        <RenderHistories histories={histories} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelHistoriesComponent;\n","import React from \"react\";\nimport TabPanelHistoriesComponent from \"../../Component/TabPanel/TabPanelHistoriesComponent\";\n\nconst TabPanelHistoriesContainer = (props) => {\n  return <TabPanelHistoriesComponent {...props} />;\n};\n\nexport default TabPanelHistoriesContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderDailies = ({ rejections }) => {\n  const columns = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n    },\n    {\n      title: \"Alasan Reject\",\n      dataIndex: \"reason\",\n    },\n    {\n      title: \"Tanggal Di-Reject\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  rejections.map((item, index) => {\n    data.push({\n      no: index + 1,\n      nik: item.nik,\n      employee_name: item.employee_name,\n      reason: item.reason,\n      created_date: item.created_date,\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelRejectionsComponent = (props) => {\n  const { rejections } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Alasan Reject</Typography>\n      </Row>\n      <hr />\n      {rejections.length > 0 ? (\n        <RenderDailies rejections={rejections} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelRejectionsComponent;\n","import React from \"react\";\nimport TabPanelRejectionsComponent from \"../../Component/TabPanel/TabPanelRejectionsComponent\";\n\nconst TabPanelRejectionsContainer = (props) => {\n  return <TabPanelRejectionsComponent {...props} />;\n};\n\nexport default TabPanelRejectionsContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Col, Checkbox, Divider, Spin } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Radio } from \"antd\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Themes } from \"../../../../property/colors\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst TabPanelChecklistComponent = (props) => {\n  const {\n    isLoaded,\n    isBlocked,\n    checklistArr,\n    handleChangeRadio,\n    getDefaultValueCheckbox,\n    handleSubmitUpdateChecklist,\n  } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Row style={{ alignItems: \"center\" }}>\n          <EditOutlined />\n          <Typography style={{ marginLeft: 5 }}>Checklist</Typography>\n        </Row>\n        {isBlocked && (\n          <CButtonAntd\n            onClick={handleSubmitUpdateChecklist}\n            type=\"primary\"\n            icon={<EditOutlined />}\n            size=\"middle\"\n          >\n            Simpan\n          </CButtonAntd>\n        )}\n      </Row>\n      <hr />\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <div class=\"row d-flex flex-wrap col md-12\">\n          {checklistArr.length > 0 ? (\n            checklistArr.map((itemUnit, indexUnit) => (\n              <div key={`checklist-unit-${indexUnit}`}>\n                <Divider\n                  style={{\n                    textTransform: \"uppercase\",\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                  }}\n                  plain\n                >{`Unit ${itemUnit.unitName}`}</Divider>\n                <Row gutter={[16, 16]}>\n                  {itemUnit.checklist.map((itemChecklist, indexChecklist) => (\n                    <Col\n                      key={`item-unit-checklist-${indexChecklist}`}\n                      span={12}\n                    >\n                      <div style={{ width: \"100%\" }}>\n                        <div>\n                          <div class=\"mb-2 mt-2 pb-2\">\n                            <Row\n                              gutter={16}\n                              style={{\n                                alignItems: \"center\",\n                                // padding: \"8px\",\n                                borderBottom: \"1px solid #020202\",\n                                marginRight: \"20px\",\n                                marginTop: \"20px\",\n                              }}\n                            >\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={6}\n                              >\n                                <Text\n                                  strong\n                                  style={{ fontSize: 10, textAlign: \"left\" }}\n                                >\n                                  {itemChecklist.category_form_name}\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={5}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  ADJUST\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  CHECK\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPAIR\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={5}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPLACE\n                                </Text>\n                              </Col>\n                            </Row>\n                          </div>\n\n                          {itemChecklist.fields &&\n                            itemChecklist.fields.map(\n                              (itemFields, indexFields) => {\n                                return (\n                                  <Row\n                                    key={`item-fields-${indexFields}`}\n                                    gutter={16}\n                                    style={{\n                                      alignItems: \"center\",\n                                      padding: \"8px\",\n                                      borderBottom: \"1px solid #020202\",\n                                      marginRight: \"30px\",\n                                    }}\n                                  >\n                                    <Col\n                                      style={style}\n                                      className=\"gutter-row\"\n                                      span={7}\n                                    >\n                                      <div>\n                                        <Typography\n                                          style={{\n                                            fontSize: 10,\n                                            color: Themes.secondary,\n                                            textAlign: \"left\",\n                                          }}\n                                        >\n                                          {itemFields.field_name}\n                                        </Typography>\n                                      </div>\n                                    </Col>\n                                    <Col\n                                      style={style}\n                                      className=\"gutter-row\"\n                                      span={4}\n                                    >\n                                      <Radio.Group\n                                        disabled={isBlocked ? false : true}\n                                        onChange={(val) =>\n                                          handleChangeRadio(\n                                            val,\n                                            indexChecklist,\n                                            indexFields,\n                                            indexUnit,\n                                            itemFields\n                                          )\n                                        }\n                                        value={getDefaultValueCheckbox(\n                                          itemFields\n                                        )}\n                                        defaultValue={getDefaultValueCheckbox(\n                                          itemFields\n                                        )}\n                                      >\n                                        <Row\n                                          key={`item-fields-${indexFields}`}\n                                          gutter={16}\n                                          style={{\n                                            alignItems: \"center\",\n                                            padding: \"8px\",\n                                            marginRight: \"30px\",\n                                          }}\n                                        >\n                                          <Col\n                                            style={style}\n                                            className=\"gutter-row\"\n                                            span={6}\n                                          >\n                                            <Radio\n                                              value={`${\n                                                itemFields.unit_field_id\n                                              }-${Object.keys(itemFields)[3]}`}\n                                            ></Radio>\n                                          </Col>\n                                          <Col\n                                            style={style}\n                                            className=\"gutter-row\"\n                                            span={6}\n                                          >\n                                            <Radio\n                                              value={`${\n                                                itemFields.unit_field_id\n                                              }-${Object.keys(itemFields)[2]}`}\n                                            />\n                                          </Col>\n                                          <Col\n                                            style={style}\n                                            className=\"gutter-row\"\n                                            span={6}\n                                          >\n                                            <Radio\n                                              value={`${\n                                                itemFields.unit_field_id\n                                              }-${Object.keys(itemFields)[4]}`}\n                                            />\n                                          </Col>\n                                          <Col\n                                            style={style}\n                                            className=\"gutter-row\"\n                                            span={6}\n                                          >\n                                            <Radio\n                                              value={`${\n                                                itemFields.unit_field_id\n                                              }-${Object.keys(itemFields)[5]}`}\n                                            />\n                                          </Col>\n                                        </Row>\n                                      </Radio.Group>\n                                    </Col>\n                                  </Row>\n                                );\n                              }\n                            )}\n                        </div>\n                        <div class=\"mr-3\" />\n                      </div>\n                    </Col>\n                  ))}\n                </Row>\n              </div>\n            ))\n          ) : (\n            <div class=\"page-content\">\n              <Empty />\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst style = {\n  width: \"200px\",\n  alignContent: \"center\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport default TabPanelChecklistComponent;\n","import React, { useState } from \"react\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport { setGlobalLoading } from \"../../../App/Store/ComponentAction\";\nimport { showToast } from \"../../../Roles/Store/RolesActions\";\nimport TabPanelChecklistComponent from \"../../Component/TabPanel/TabPanelChecklistComponent\";\nimport { setGroupingChecklistData } from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelChecklistContainer = (props) => {\n  const { roles, checklist, isLoaded } = props;\n  const [isBlocked, setIsBlocked] = useState(false);\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  const checkBlockedRole = () => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleDetailService(roleId);\n    if (isBlockedRole) {\n      setIsBlocked(isBlockedRole);\n    } else {\n      setIsBlocked(false);\n    }\n  };\n\n  const handleSubmitUpdateChecklist = async () => {\n    const { dispatch } = store;\n    dispatch(setGlobalLoading(true));\n    const payload = {};\n    let countHitApi = 0;\n    payload.checklist = [];\n    payload.note = \"\";\n\n    // Looping the checklist by unit\n    checklist.map(async (itemParent, index) => {\n      // Looping the fields by checklist unit\n      itemParent.checklist.map((itemChecklist, indexChecklist) => {\n        itemChecklist.fields.map((itemFields, indexFields) => {\n          const item = {};\n          item.unit_field_id = itemFields.unit_field_id;\n          item.category_form_id = itemChecklist.category_form_id;\n          item.is_check = itemFields.is_check;\n          item.is_adjust = itemFields.is_adjust;\n          item.is_repair = itemFields.is_repair;\n          item.is_replace = itemFields.is_replace;\n          payload.checklist.push(item);\n        });\n      });\n\n      try {\n        await Invoke.updateChecklist(payload, itemParent.unitId);\n        if (countHitApi === checklist.length - 1) {\n          showToast(\"Berhasil menyimpan checklist\", \"success\");\n          dispatch(setGlobalLoading(false));\n        } else {\n          countHitApi += 1;\n        }\n      } catch (error) {\n        showToast(\"Gagal menyimpan checklist\", \"error\");\n        dispatch(setGlobalLoading(false));\n      }\n    });\n  };\n\n  const handleChangeRadio = (\n    val,\n    indexChecklist,\n    indexFields,\n    indexUnit,\n    itemFields\n  ) => {\n    const { dispatch } = store;\n    let checklistTemp = checklist;\n    const valueCheck = val.target.value;\n\n    if (valueCheck === `${itemFields.unit_field_id}-is_check`) {\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_check = true;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_adjust = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_replace = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_repair = false;\n    } else if (valueCheck === `${itemFields.unit_field_id}-is_adjust`) {\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_check = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_adjust = true;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_replace = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_repair = false;\n    } else if (valueCheck === `${itemFields.unit_field_id}-is_replace`) {\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_check = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_adjust = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_replace = true;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_repair = false;\n    } else if (valueCheck === `${itemFields.unit_field_id}-is_repair`) {\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_check = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_adjust = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_replace = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_repair = true;\n    }\n\n    dispatch(setGroupingChecklistData(checklistTemp));\n  };\n\n  const getDefaultValueCheckbox = (field) => {\n    if (field.is_adjust) {\n      return `${field.unit_field_id}-${Object.keys(field)[3]}`;\n    } else if (field.is_check) {\n      return `${field.unit_field_id}-${Object.keys(field)[2]}`;\n    } else if (field.is_repair) {\n      return `${field.unit_field_id}-${Object.keys(field)[4]}`;\n    } else if (field.is_replace) {\n      return `${field.unit_field_id}-${Object.keys(field)[5]}`;\n    }\n  };\n\n  return (\n    <TabPanelChecklistComponent\n      isLoaded={isLoaded}\n      isBlocked={isBlocked}\n      checklistArr={checklist}\n      handleChangeRadio={handleChangeRadio}\n      getDefaultValueCheckbox={getDefaultValueCheckbox}\n      handleSubmitUpdateChecklist={handleSubmitUpdateChecklist}\n      {...props}\n    />\n  );\n};\n\nexport default TabPanelChecklistContainer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport DetailServiceTransactionComponent from \"../Component/DetailServiceTransactionComponent\";\nimport {\n  FileImageOutlined,\n  UsergroupAddOutlined,\n  CheckCircleOutlined,\n  EditOutlined,\n  FileTextOutlined,\n  CloseSquareOutlined,\n  HistoryOutlined,\n} from \"@ant-design/icons\";\nimport TabPanelEmployeeContainer from \"./TabPanel/TabPanelEmployeeContainer\";\nimport * as DetailServiceActions from \"../Store/DetailServiceTransactionAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport TabPanelSummaryContainer from \"./TabPanel/TabPanelSummaryContainer\";\nimport TabPanelImagesContainer from \"./TabPanel/TabPanelImagesContainer\";\nimport TabPanelDailiesContainer from \"./TabPanel/TabPanelDailiesContainer\";\nimport TabPanelHistoriesContainer from \"./TabPanel/TabPanelHistoriesContainer\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport TabPanelRejectionsContainer from \"./TabPanel/TabPanelRejectionsContainer\";\nimport TabPanelChecklistContainer from \"./TabPanel/TabPanelChecklistContainer\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport {\n  isBlockedRoleDetailService,\n  isNotBlockedRolePrintForm,\n  navigate,\n} from \"../../../app/Helpers\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\n\nconst DetailServiceTransactionContainer = (props) => {\n  const {\n    userRole,\n    setChecklist,\n    services: { selectedJobService },\n    detailService: {\n      selectedServiceEmployeeList,\n      groupingSelectedServiceMedia,\n      groupingSelectedServiceSummary,\n      groupingSelectedServiceChecklist,\n      selectedServiceDailies,\n      selectedServiceHistories,\n      selectedServiceRejected,\n      singleSelectedServiceSummary,\n    },\n  } = props;\n\n  const [isLoadedChecklist, setIsLoadedChecklist] = React.useState(false);\n  const [isNotBlockedRole, setNotIsBlockedRole] = React.useState(false);\n  const [isBlockedRoleActionButton, setIsBlockedRoleActionButton] =\n    React.useState(false);\n  const [isCompleteLoadedMedia, setIsCompleteLoadedMedia] =\n    React.useState(false);\n  const [isCompleteLoadedSummary, setIsCompleteLoadedSummary] =\n    React.useState(false);\n\n  const TabPanel = [\n    {\n      key: \"panel-gambar\",\n      title: \"Gambar\",\n      icon: <FileImageOutlined />,\n      component: (\n        <TabPanelImagesContainer\n          medias={groupingSelectedServiceMedia}\n          isLoaded={isCompleteLoadedMedia}\n        />\n      ),\n    },\n    {\n      key: \"panel-summary\",\n      title: \"Summary\",\n      icon: <FileTextOutlined />,\n      component: (\n        <TabPanelSummaryContainer\n          summary={\n            selectedJobService.is_external\n              ? groupingSelectedServiceSummary\n              : singleSelectedServiceSummary\n          }\n          isLoaded={isCompleteLoadedSummary}\n        />\n      ),\n    },\n    {\n      key: \"panel-teknisi\",\n      title: \"Teknisi\",\n      icon: <UsergroupAddOutlined />,\n      component: (\n        <TabPanelEmployeeContainer employees={selectedServiceEmployeeList} />\n      ),\n    },\n    {\n      key: \"panel-rejected\",\n      title: \"Alasan Reject\",\n      icon: <CloseSquareOutlined />,\n      component: (\n        <TabPanelRejectionsContainer rejections={selectedServiceRejected} />\n      ),\n    },\n    {\n      key: \"panel-dailies\",\n      title: \"Catatan Teknisi\",\n      icon: <EditOutlined />,\n      component: <TabPanelDailiesContainer dailies={selectedServiceDailies} />,\n    },\n    {\n      key: \"panel-histories\",\n      title: \"History\",\n      icon: <HistoryOutlined />,\n      component: (\n        <TabPanelHistoriesContainer\n          title=\"History\"\n          histories={selectedServiceHistories}\n        />\n      ),\n    },\n  ];\n\n  if (selectedJobService.is_external) {\n    TabPanel.push({\n      key: \"panel-checklist\",\n      title: \"Checklist\",\n      icon: <CheckCircleOutlined />,\n      component: (\n        <TabPanelChecklistContainer\n          roles={userRole}\n          isLoaded={isLoadedChecklist}\n          checklist={groupingSelectedServiceChecklist}\n          setChecklist={setChecklist}\n        />\n      ),\n    });\n\n    // Move content of checklist to index 0\n    const fromIndex = TabPanel.indexOf(\"panel-checklist\"); // 👉️ 0\n    const toIndex = 0;\n\n    const element = TabPanel.splice(fromIndex, 1)[0];\n    console.log(element); // ['panel-checklist']\n\n    TabPanel.splice(toIndex, 0, element);\n  }\n\n  const onChangeTab = (activeTab) => {\n    const tab = activeTab ?? \"panel-teknisi\";\n    switch (tab.toLowerCase()) {\n      case \"panel-teknisi\":\n        DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n        break;\n\n      case \"panel-summary\":\n        groupingUnitSummary();\n        break;\n\n      case \"panel-gambar\":\n        groupingUnitMedia();\n        break;\n\n      case \"panel-dailies\":\n        DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n        break;\n\n      case \"panel-histories\":\n        DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n        break;\n\n      case \"panel-checklist\":\n        groupingUnitChecklist();\n        break;\n\n      case \"panel-rejected\":\n        DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n        break;\n\n      default:\n        console.log(\"no panel selected...\");\n        break;\n    }\n  };\n\n  const callInitialize = async () => {\n    if (Object.keys(selectedJobService).length > 0) {\n      await EmployeesActions.loadEmployeeListData(1, 99999);\n      await DetailServiceActions.getJobServiceEmployeeList(\n        selectedJobService.id\n      );\n      await DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n      await DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n      await DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n      await groupingUnitMedia();\n      await groupingUnitSummary();\n      await groupingUnitChecklist();\n    }\n  };\n\n  const groupingUnitMedia = async () => {\n    setIsCompleteLoadedMedia(false);\n    await DetailServiceActions.getUnitMedia((isCompleted) => {\n      setIsCompleteLoadedMedia(isCompleted);\n    });\n  };\n\n  const groupingUnitSummary = async () => {\n    setIsCompleteLoadedSummary(false);\n    await DetailServiceActions.getUnitSummary((isCompleted) => {\n      setIsCompleteLoadedSummary(isCompleted);\n    });\n  };\n\n  const groupingUnitChecklist = async () => {\n    const groupingChecklist = [];\n\n    if (selectedJobService.units) {\n      await selectedJobService.units.map(async (item, index) => {\n        Invoke.getChecklistData(item.id)\n          .then((dataChecklist) => {\n            groupingChecklist.push({\n              unitName: item.unit_name,\n              unitId: item.id,\n              checklist: dataChecklist.data.callback,\n            });\n            if (index + 1 === selectedJobService.units.length) {\n              setIsLoadedChecklist(true);\n            }\n          })\n          .catch(() => setIsLoadedChecklist(true));\n      });\n\n      setTimeout(() => {\n        setChecklist(groupingChecklist);\n      }, 1000);\n    }\n  };\n\n  const checkBlockedRole = () => {\n    const isNotBlocked = isNotBlockedRolePrintForm(userRole[0].role_id);\n    setNotIsBlockedRole(isNotBlocked);\n    const isBlockedRoleButtonAction = isBlockedRoleDetailService(\n      userRole[0].role_id\n    );\n    setIsBlockedRoleActionButton(isBlockedRoleButtonAction);\n  };\n\n  React.useEffect(() => {\n    callInitialize();\n    checkBlockedRole();\n  }, [selectedJobService]);\n\n  const handlePressGeneratePdf = () => {\n    // exportDetailServicePdfRevision(printedData);\n    DetailServiceActions.downloadTransactionPdf();\n  };\n\n  const handleBackToListService = () => {\n    store.dispatch(DetailServiceActions.resetDetailService());\n  };\n\n  const handleSetOnProgress = () => {\n    Invoke.setJobToProgress(selectedJobService.id)\n      .then(() => {\n        showToast(\"Berhasil memindahkan job service ke On Progress\", \"success\");\n        setTimeout(() => {\n          navigate(\"list_service\");\n        }, 1500);\n      })\n      .catch(() => {\n        showToast(\"Gagal memindahkan job service ke On Progress\", \"error\");\n      });\n  };\n\n  return (\n    <DetailServiceTransactionComponent\n      data={selectedJobService}\n      isNotBlockedRole={isNotBlockedRole}\n      isBlockedRoleActionButton={isBlockedRoleActionButton}\n      TabPanel={TabPanel}\n      onChangeTab={onChangeTab}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      goBack={handleBackToListService}\n      medias={groupingSelectedServiceMedia}\n      checklist={groupingSelectedServiceChecklist}\n      employees={selectedServiceEmployeeList}\n      dailies={selectedServiceDailies}\n      summary={groupingSelectedServiceSummary}\n      handleSetOnProgress={handleSetOnProgress}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  units: state.units,\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressDelete: (jobId) => {\n    ListServiceActions.deleteJobServiceRequested(jobId);\n  },\n  handlePressActions: (jobId, type) => {\n    ListServiceActions.handlePressActionsRequested(jobId, type);\n  },\n  handlePressEdit: async () => {\n    await dispatch(DetailServiceActions.setEditTransactionModal(true));\n    await DetailServiceActions.mapDetailTransactionToForm();\n    dispatch(DetailServiceActions.setEditTransactionModal(true));\n  },\n  setMediaList: (list) => {\n    dispatch(DetailServiceActions.setGroupingSelectedServicesMediaData(list));\n  },\n  setSummaryList: (list) => {\n    dispatch(DetailServiceActions.setGroupingSummaryData(list));\n  },\n  setChecklist: (list) => {\n    dispatch(DetailServiceActions.setGroupingChecklistData(list));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DetailServiceTransactionContainer);\n\nexport default reduxForm({\n  form: \"detailJobServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Row } from \"antd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const {\n    data,\n    defaultValuesMenu,\n    onChangeRoleMenu,\n    // options,\n    // plainOptions,\n    // optionsWithDisabled,\n  } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"Role ID\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Role\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst RolesEditModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RolesEditModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport RolesEditModalComponent from \"../Component/RolesEditModalComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { formStatus, selectedRoleMenu },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n  const [menuSelected, setMenuSelected] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values, menuSelected);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  const onChangeRoleMenu = (menus) => {\n    setMenuSelected(menus);\n  };\n\n  return (\n    <RolesEditModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumMenu={SelectMenu}\n      menuChecked={selectedRoleMenu}\n      onChangeRoleMenu={onChangeRoleMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) =>\n    RolesActions.saveRoleRequested(type, values, menuSelected),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editRolesForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport RolesEditModalContainer from \"../Container/RolesEditModalContainer\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nconst RolesComponent = (props) => {\n  const { headers, listRoles, renderActionTable, handlePressAddNew } = props;\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Roles</h6>\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Roles\n                  </CButtonAntd>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <RolesEditModalContainer />\n    </div>\n  );\n};\n\nexport default RolesComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport RolesComponent from \"../Component/RolesComponent\";\nimport * as RolesActions from \"../Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RolesContainer = (props) => {\n  const {\n    getListRoles,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    roles: { listRoles },\n  } = props;\n\n  if (listRoles.length > 0) {\n    listRoles.map((item, index) => {\n      listRoles[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListRoles();\n  }, []);\n\n  return (\n    <RolesComponent\n      headers={headers}\n      listRoles={listRoles}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListRoles: () => RolesActions.getListRolesRequested(),\n  handlePressAddNew: async () => {\n    await dispatch(RolesActions.setSelectedRoleDetail({}));\n    await dispatch(RolesActions.setSelectedRoleId(\"\"));\n    dispatch(RolesActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    RolesActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(RolesActions.setFormStatus(\"edit\"));\n    await dispatch(RolesActions.setSelectedRoleId(record.id));\n    await dispatch(RolesActions.setSelectedRoleDetail(record));\n    await RolesActions.getMenuByRolesId(record.id);\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await RolesActions.mapDetailRoleToForm();\n  },\n  handlePressDelete: async (roleId) => {\n    await dispatch(RolesActions.setSelectedRoleId(roleId));\n    RolesActions.deleteRoleRequested(roleId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesContainer);\n\nexport default reduxForm({\n  form: \"rolesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst EmployeeListComponent = (props) => {\n  const {\n    headers,\n    listEmployees,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumRoles,\n    enumDivision,\n    employeeFormValues,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Karyawan</h6>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Karyawan\n                    </CButtonAntd>\n                  </div>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2\">\n                  {/* This Filter */}\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumRoles ?? []}\n                      name=\"role\"\n                      label=\"Filter Role\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Filter Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumDivision ?? []}\n                      name=\"division\"\n                      label=\"Filter Divisi\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployees}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeListComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as EmployeeActions from \"../Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ToolsActions from \"../../Tools/Store/ToolsActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport EmployeesListComponent from \"../Component/EmployeesListComponent\";\nimport {\n  enumSelectGenerator,\n  getIndex,\n  getRolesEnum,\n  navigate,\n} from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getDivisionListDataRequested } from \"../../Division/Store/DivisionActions\";\nimport { Link } from \"react-router-dom\";\n\nconst EmployeesListContainer = (props) => {\n  const {\n    getListEmployees,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressEmployeeTools,\n    employees: { listEmployees, paging },\n    roles: { listRoles },\n    branch: { listBranch },\n    division: { listDivision },\n    employeesFormValues,\n    getListTools,\n  } = props;\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployees.length > 0) {\n    listEmployees.map((item, index) => {\n      listEmployees[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, name: item.title };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"NIK\",\n      dataIndex: \"nik\",\n      key: \"nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.nik - b.nik,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name - b.name,\n    },\n    {\n      title: \"Nomor Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <Link to={\"/edit-employee\"} onClick={() => handlePressEdit(record)}>\n        <CButtonAntd type=\"primary\" icon={<EditOutlined />} size=\"middle\" />\n      </Link>\n      <Link\n        to={\"/employee-tools\"}\n        onClick={() => handlePressEmployeeTools(record)}\n      >\n        <CButtonAntd type=\"primary\" icon={<SettingOutlined />} size=\"middle\" />\n      </Link>\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployees(1, 10);\n    getDivisionListDataRequested(1, 100);\n    getListTools(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage ?? 1;\n    paging.limit = pageSize ?? 10;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeActions.setPagingEmployees(paging));\n    getListEmployees(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    EmployeeActions.handleSearch(keyword, employeesFormValues);\n  };\n\n  const SelectRoles = listRoles.length > 0 ? getRolesEnum(listRoles) : [];\n  const SelectBranch =\n    listBranch.length > 0 ? enumSelectGenerator(listBranch, \"branch\") : [];\n  const SelectDivision =\n    listDivision.length > 0\n      ? enumSelectGenerator(listDivision, \"division\")\n      : [];\n\n  return (\n    <EmployeesListComponent\n      headers={headers}\n      listEmployees={listEmployees}\n      renderActionTable={renderActionTable}\n      paging={paging}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      enumRoles={SelectRoles}\n      enumDivision={SelectDivision}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  roles: state.roles,\n  branch: state.branch,\n  division: state.division,\n  employeesFormValues: getFormValues(\"employeesForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployees: (page, limit, keyword) =>\n    EmployeeActions.loadEmployeeListData(page, limit, keyword),\n  getListTools: (page, limit) => {\n    ToolsActions.getToolsListDataRequested(page, limit);\n  },\n  handlePressEdit: async (employee) => {\n    dispatch(EmployeesActions.setISEmployeeDataLoaded(false));\n    dispatch(EmployeeActions.setFormStatus(\"edit\"));\n    await dispatch(EmployeeActions.setSelectedEmployeeId(employee.id));\n\n    const p1 = new Promise((resolve, reject) => {\n      EmployeesActions.getRolesByEmployeeId(employee.id).then((res) => {\n        resolve();\n      });\n    });\n    const p2 = new Promise((resolve, reject) => {\n      MasterDataActions.loadCityListData(employee.province_id).then((res) => {\n        resolve();\n      });\n    });\n    const p3 = new Promise((resolve, reject) => {\n      EmployeesActions.getEmployeeDataByIdRequested(employee.id).then((res) => {\n        resolve();\n      });\n    });\n\n    Promise.all([p1, p2, p3]).then(() => {\n      dispatch(EmployeesActions.setISEmployeeDataLoaded(true));\n    });\n  },\n  handlePressAddNew: async () => {\n    dispatch(EmployeesActions.setFormStatus(\"add\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeId(\"\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeData({}));\n    EmployeesActions.resetForm();\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n    }, 500);\n  },\n  handlePressDelete: async (employeeId) => {\n    await dispatch(EmployeesActions.setSelectedEmployeeId(employeeId));\n    EmployeesActions.deleteEmployeeRequested(employeeId);\n  },\n  handlePressEmployeeTools: async (record) => {\n    await dispatch(EmployeeActions.setSelectedEmployeeId(record.id));\n    await dispatch(EmployeeActions.setSelectedEmployeeData(record));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeesListContainer);\n\nexport default reduxForm({\n  form: \"employeesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  LoadingOutlined,\n  PlusOutlined,\n  ArrowLeftOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport { Checkbox, Col, message, Row, Spin, Typography, Upload } from \"antd\";\nimport { getBase64 } from \"../../../app/Helpers\";\nimport { Link } from \"react-router-dom\";\n\nconst SelectRole = (props) => {\n  const { data, defaultValues, onChangeRoleEmployee } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        onChange={onChangeRoleEmployee}\n        defaultValue={defaultValues}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst EmployeeEditComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    enumBranch,\n    enumRole,\n    enumProvince,\n    enumCity,\n    selectedRoleEmployee,\n    onChangeRoleEmployee,\n    handleUploadPhoto,\n    defaultImage,\n    onChangeProvince,\n    onBackAction,\n    formStatus,\n    isLoaded,\n  } = props;\n\n  const [loading, setLoading] = React.useState(false);\n  const [imageUrl, setImageUrl] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (defaultImage) {\n      setImageUrl(defaultImage);\n    }\n  }, [defaultImage]);\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error(\"Image must smaller than 2MB!\");\n    }\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h1 class=\"card-title\">Profil Karyawan</h1>\n                <p class=\"card-description\">\n                  Anda dapat mengelola role ataupun mengubah data karyawan pada\n                  halaman ini.\n                </p>\n                {isLoaded ? (\n                  <Form>\n                    <div class=\"row\">\n                      <div class=\"col-md-6\">\n                        <Field\n                          name=\"nik\"\n                          label=\"NIK\"\n                          placeholder=\"-\"\n                          component={CInput}\n                          type=\"text\"\n                        />\n                      </div>\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumProvince}\n                          name=\"province\"\n                          label=\"Nama Provinsi\"\n                          onChange={(val) => onChangeProvince(val)}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-md-6\">\n                        <Field\n                          name=\"password\"\n                          label=\"Password\"\n                          placeholder={\n                            formStatus === \"edit\"\n                              ? \"* Isi jika ingin merubah kata sandi\"\n                              : \"* Masukan kata sandi anda\"\n                          }\n                          component={CInput}\n                          type=\"password\"\n                        />\n                      </div>\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          name=\"city\"\n                          data={enumCity}\n                          label=\"Kota/Kabupaten\"\n                          disabled={enumCity.length <= 0}\n                        />\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-md-6\">\n                        <Field\n                          name={\"name\"}\n                          label=\"Nama Karyawan\"\n                          placeholder=\"-\"\n                          component={CInput}\n                          type=\"text\"\n                        />\n                      </div>\n                      <div class=\"col-md-6\">\n                        <Typography style={{ textAlign: \"left\" }}>\n                          Foto Profil\n                        </Typography>\n                        <div\n                          class=\"card-body\"\n                          style={{\n                            marginLeft: -22,\n                            marginTop: -20,\n                          }}\n                        >\n                          <Upload\n                            name=\"avatar\"\n                            listType=\"picture-card\"\n                            className=\"avatar-uploader overflow-hidden\"\n                            showUploadList={false}\n                            beforeUpload={beforeUpload}\n                            onChange={handleChange}\n                          >\n                            {imageUrl || defaultImage ? (\n                              <>\n                                <img\n                                  src={imageUrl}\n                                  alt=\"avatar\"\n                                  style={{\n                                    width: \"100%\",\n                                    height: \"100%\",\n                                    resizeMode: \"stretch\",\n                                    borderRadius: 5,\n                                  }}\n                                />\n                                <div\n                                  class=\"row\"\n                                  style={{\n                                    backgroundColor: \"#F3F3F3\",\n                                    position: \"absolute\",\n                                    width: 80,\n                                    heigh: 30,\n                                    borderRadius: 50,\n                                    alignItems: \"center\",\n                                    justifyContent: \"center\",\n                                    opacity: 0.7,\n                                  }}\n                                >\n                                  <Typography style={{ fontSize: 10 }}>\n                                    Ubah\n                                  </Typography>\n                                  <EditOutlined\n                                    style={{\n                                      color: \"#020202\",\n                                      fontSize: 10,\n                                      marginLeft: 5,\n                                    }}\n                                  />\n                                </div>\n                              </>\n                            ) : (\n                              uploadButton\n                            )}\n                          </Upload>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-md-6\">\n                        <Field\n                          name={`phone`}\n                          label=\"No. Telepon\"\n                          placeholder=\"-\"\n                          component={CInput}\n                          type=\"text\"\n                        />\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumBranch}\n                          name=\"branch\"\n                          label=\"Cabang\"\n                        />\n                        <Field\n                          name=\"address\"\n                          label=\"Alamat\"\n                          component={CInput}\n                          typeComponent=\"textarea\"\n                        />\n                        <br />\n                      </div>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-md-12\">\n                        <hr />\n                        {formStatus === \"edit\" && (\n                          <div class=\"card\">\n                            <div class=\"card-body\">\n                              <h6 class=\"card-title text-center\">Pilih Role</h6>\n                              <SelectRole\n                                data={enumRole}\n                                defaultValues={selectedRoleEmployee}\n                                onChangeRoleEmployee={onChangeRoleEmployee}\n                              />\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div class=\"row ml-2\">\n                      <Link to={\"/employees\"} onClick={onBackAction}>\n                        <CButtonAntd\n                          key=\"submit\"\n                          type=\"primary\"\n                          loading={false}\n                          danger\n                          icon={<ArrowLeftOutlined />}\n                        >\n                          Kembali\n                        </CButtonAntd>\n                      </Link>\n                      <div class=\"ml-3\" />\n                      <CButtonAntd\n                        key=\"submit\"\n                        type=\"primary\"\n                        loading={false}\n                        onClick={handleSubmit(submitForm)}\n                      >\n                        Simpan\n                      </CButtonAntd>\n                    </div>\n                  </Form>\n                ) : (\n                  <div class=\"d-flex justify-content-center align-items-center\">\n                    <Spin />\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeEditComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport EmployeeEditComponent from \"../Component/EmployeeEditComponent\";\nimport { validateFormEmployee } from \"../../../app/validateForm\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getCitiesEnum } from \"../../../app/Helpers\";\nimport Invoke from \"../../../app/axios/Invoke\";\n\nconst EmployeeEditContainer = (props) => {\n  const {\n    valid,\n    getListRoles,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { listRoles },\n    branch: { listBranch, paging, keyword },\n    employees: {\n      formStatus,\n      selectedEmployeeData,\n      selectedRoleEmployee,\n      isEmployeeDataLoaded,\n    },\n    masters: { listProvince, listCity },\n    handleClearSelectedEmployeeRole,\n  } = props;\n  const [listCityState, setListCityState] = React.useState([]);\n  const [roleSelected, setRoleSelected] = React.useState([]);\n  const [defaultImage, setDefaultImage] = React.useState(\"\");\n\n  const { page, limit } = paging;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      EmployeesActions.saveEmployeeRequested(formStatus, values, roleSelected);\n    } else {\n    }\n  };\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editEmployeeForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  const SelectEmployeeRole = [];\n  listRoles.map((item, index) => {\n    SelectEmployeeRole.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isEmployeeDataLoaded) {\n      let subItem = [];\n      listCity.map((item, index) => {\n        subItem.push({\n          id: `city-${index}`,\n          value: item.id,\n          label: item.name,\n        });\n      });\n      setListCityState(subItem);\n      // Mapping detail data employee when edit\n      if (formStatus === \"edit\") {\n        MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n        EmployeesActions.mapDetailEmployeeToForm();\n        // convert image url to base64\n        setDefaultImage(selectedEmployeeData.photo);\n        // set selected roles to redux-form\n        store.dispatch(\n          change(\"editEmployeeForm\", \"selectedRoles\", selectedRoleEmployee)\n        );\n      }\n    }\n  }, [isEmployeeDataLoaded]);\n\n  React.useEffect(() => {\n    getListRoles();\n\n    return () => {\n      handleClearSelectedEmployeeRole();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    setListCityState([]);\n    if (formStatus === \"edit\" && selectedEmployeeData.province_id) {\n      const provinceId =\n        selectedEmployeeData.province_id +\n        \"|\" +\n        selectedEmployeeData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedEmployeeData.province_id]);\n\n  const onChangeRoleEmployee = (roles) => {\n    setRoleSelected(roles);\n    store.dispatch(change(\"editEmployeeForm\", \"selectedRoles\", roles));\n  };\n\n  const onChangeProvince = async (provinceId) => {\n    setListCityState([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setListCityState(provinceMapping);\n      } else {\n        store.dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n        setListCityState([]);\n      }\n    } catch (error) {\n      setListCityState([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onBackAction = async () => {\n    await handleClearSelectedEmployeeRole();\n  };\n\n  return (\n    <EmployeeEditComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumBranch={SelectBranch}\n      enumRole={SelectEmployeeRole}\n      enumProvince={SelectProvince}\n      enumCity={listCityState}\n      detailEmployee={selectedEmployeeData}\n      handleUploadPhoto={handleUploadPhoto}\n      formStatus={formStatus}\n      selectedRoleEmployee={selectedRoleEmployee}\n      onChangeRoleEmployee={onChangeRoleEmployee}\n      defaultImage={defaultImage}\n      onChangeProvince={onChangeProvince}\n      onBackAction={onBackAction}\n      isLoaded={isEmployeeDataLoaded}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  employees: state.employees,\n  branch: state.branch,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListRoles: () => RolesActions.getListRolesRequested(),\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  getDetailEmployee: async (employeeId) =>\n    await EmployeesActions.getEmployeeDataByIdRequested(employeeId),\n  setAutoPopulateEmployee: () => EmployeesActions.setAutoPopulateEmployee(),\n  handleClearSelectedEmployeeRole: () => {\n    dispatch(EmployeesActions.setSelectedRoleEmployee([]));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeEditContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeForm\",\n  validate: validateFormEmployee,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"ID Cabang\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Cabang\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst BranchModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default BranchModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport BranchModalComponent from \"../Component/BranchModalComponent\";\n\nconst BranchModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values) =>\n    BranchActions.saveBranchRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchModalContainer);\n\nexport default reduxForm({\n  form: \"editBranchForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport BranchModalContainer from \"../Container/BranchModalContainer\";\n\nconst { Search } = Input;\n\nconst BranchComponent = (props) => {\n  const {\n    headers,\n    listRoles,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Cabang</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Branch\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <BranchModalContainer />\n    </div>\n  );\n};\n\nexport default BranchComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport BranchComponent from \"../Component/BranchComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListBranch,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    branch: { listBranch, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listBranch.length > 0) {\n    listBranch.map((item, index) => {\n      listBranch[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Cabang\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListBranch(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(BranchActions.setPagingBranch(paging));\n    getListBranch(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListBranch(page, limit, val);\n  };\n\n  return (\n    <BranchComponent\n      headers={headers}\n      listRoles={listBranch}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListBranch: (page, limit, keyword) =>\n    BranchActions.getBranchListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(BranchActions.setSelectedBranchData({}));\n    await dispatch(BranchActions.setSelectedBranchId(\"\"));\n    dispatch(BranchActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    BranchActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(BranchActions.setFormStatus(\"edit\"));\n    await dispatch(BranchActions.setSelectedBranchId(record.id));\n    await dispatch(BranchActions.setSelectedBranchData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await BranchActions.mapDetailBranchToForm();\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(BranchActions.setSelectedBranchId(branchId));\n    BranchActions.deleteBranchRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field name=\"name\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst JobFormsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default JobFormsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport JobFormsModalComponent from \"../Component/JobFormsModalComponent\";\n\nconst JobFormsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    jobForms: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <JobFormsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  jobForms: state.jobForms,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    JobFormsActions.saveJobFormsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsModalContainer);\n\nexport default reduxForm({\n  form: \"editJobForms\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport JobFormsModalContainer from \"../Container/JobFormsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst JobFormsComponent = (props) => {\n  const {\n    headers,\n    listJobForms,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Job Forms</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Job Forms\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listJobForms}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <JobFormsModalContainer />\n    </div>\n  );\n};\n\nexport default JobFormsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport JobFormsComponent from \"../Component/JobFormsComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst JobFormsContainer = (props) => {\n  const {\n    getListJobForms,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    jobForms: { listJobForms, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listJobForms.length > 0) {\n    listJobForms.map((item, index) => {\n      listJobForms[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"40%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListJobForms(page, limit);\n  }, []);\n\n  const onSearch = (val) => {\n    getListJobForms(page, limit, val);\n  };\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(JobFormsActions.setPagingJobForm(paging));\n    getListJobForms(nextPage, pageSize);\n  };\n\n  return (\n    <JobFormsComponent\n      headers={headers}\n      listJobForms={listJobForms}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onSearch={onSearch}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  jobForms: state.jobForms,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListJobForms: (page, limit, val) =>\n    JobFormsActions.getJobFormsListDataRequested(page, limit, val),\n  handlePressAddNew: async () => {\n    await dispatch(JobFormsActions.setSelectedJobFormsData({}));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(\"\"));\n    dispatch(JobFormsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    JobFormsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(JobFormsActions.setFormStatus(\"edit\"));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(record.id));\n    await dispatch(JobFormsActions.setSelectedJobFormsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await JobFormsActions.mapDetailJobFormsToForm();\n  },\n  handlePressDelete: async (jobFormsId) => {\n    await dispatch(JobFormsActions.setSelectedJobFormsId(jobFormsId));\n    JobFormsActions.deleteJobFormsRequested(jobFormsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect data={enumInstanceType} name=\"instanceType\" label=\"Tipe\" />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"riceTrademark\"\n            label=\"Merek Dagang Beras\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerAddress\"\n            label=\"Alamat\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"phone\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingCapacity\"\n            label=\"Kapasitas Penggilingan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingWorkCapacityPerDay\"\n            label=\"Kapasitas Kerja Penggilingan (Per Hari)\"\n            placeholder=\"-\"\n            component={CInput}\n            labelSize={12}\n            type=\"text\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentUnitComponent = () => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"serialNumber\"\n            label=\"Nomor Seri\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"engineNumber\"\n            label=\"Nomor Mesin\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"gearboxNumber\"\n            label=\"Nomor Gearbox\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"production_unit_year\"\n            label=\"Tahun Produksi Unit\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Jam Kerja</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>\n          (per Hari & Hour Meter )\n        </Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <Field\n            name=\"perHour\"\n            label=\"Per Hour\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"hourMeter\"\n            label=\"Hour Meter\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\"></div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Tanggal Transaksi Produk</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>(Bulan & Tahun)</Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Pembelian\" />\n        </div>\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Terima Bantuan\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentUnitComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentSparePartComponent = ({ onChangeServiced, isServiced }) => {\n  const [listServices] = React.useState([\n    {\n      id: `serviced-1`,\n      value: \"true\",\n      label: \"Pernah\",\n    },\n    {\n      id: `serviced-2`,\n      value: \"false\",\n      label: \"Tidak\",\n    },\n  ]);\n\n  const RenderServiceHistory = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_buy_place`}\n                    label=\"Tempat Pembelian Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartSelling = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_qty`}\n                    label=\"Qty\"\n                    placeholder=\"Jumlah Penjualan Spare Part\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartNeeded = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_name`}\n                    label=\"Nama Produk Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_code`}\n                    label=\"Kode Produk\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.part_number`}\n                    label=\"Part Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <CSelect\n            onChange={(val) => onChangeServiced(val)}\n            data={listServices}\n            label=\"Pernah Diservis\"\n            name=\"location\"\n          />\n        </div>\n      </div>\n      {isServiced && (\n        <div class=\"row m-2 text-left\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_place\"\n              label=\"Perbaikan Dilakukan Di\"\n              placeholder=\"cth: Blitar\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_type\"\n              label=\"Jenis Perbaikan\"\n              placeholder=\"cth: Service Sikring\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">Riwayat Penggantian Spare Part</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan service, maksimal 5 unit.\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_changing_histories\"\n          component={RenderServiceHistory}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Penjualan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>\n            (pada saat kunjuangan)\n          </Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan penjualan, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_selling_histories\"\n          component={(_props) => <RenderSparePartSelling {..._props} />}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Daftar Kebutuhan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>(per Quartal)</Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi apabila terdapat kebutuhan spare part, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_needs\"\n          component={(_props) => <RenderSparePartNeeded {..._props} />}\n        />\n        <hr />\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-12\">\n          <Field\n            name=\"note\"\n            label=\"Keterangan\"\n            placeholder=\"cth: Pernah dilakukan service namun tidak rampung\"\n            component={CInput}\n            typeComponent=\"textarea\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentSparePartComponent;\n","import React from \"react\";\n\nimport { Steps, Button, message } from \"antd\";\nimport { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\n\nconst { Text } = Typography;\n\nconst StepsContent = styled.div`\n  min-height: 200px;\n  margin-top: 16px;\n  padding-top: 22px;\n  text-align: center;\n  background-color: #fafafa;\n  border: 1px dashed #e9e9e9;\n  border-radius: 2px;\n`;\n\nconst StepsAction = styled.div`\n  margin-top: 24px;\n`;\n\nconst { Step } = Steps;\n\nconst FormWizardIdentificationComponent = (props) => {\n  const { data, steps, saveFormChanges } = props;\n  const [current, setCurrent] = React.useState(0);\n\n  const onClickNext = () => {\n    setCurrent(current + 1);\n    saveFormChanges(false);\n  };\n\n  const onClickPrevious = () => {\n    setCurrent(current - 1);\n  };\n\n  const onFinished = () => {\n    message.success(\"Processing complete!\");\n    saveFormChanges(true);\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">Form Identification</h4>\n            <h6 class=\"text-small\">\n              {data.milling ? \"(Penggilingan)\" : \"(Non Penggilingan)\"}\n            </h6>\n            <hr />\n            <div class=\"d-flex justify-content-between align-items-baseline\">\n              <div class=\"col-md-6 mb-3\">\n                <Text>Nama Customer : </Text>\n                <Text strong>{data.customer_name ?? \"-\"}</Text>\n                <br />\n                <Text>Tipe : </Text>\n                <Text strong>{data.type ?? \"-\"}</Text>\n                <br />\n                <Text>Cabang : </Text>\n                <Text strong>{data.branch_name ?? \"-\"}</Text>\n                <br />\n                <Text>Status : </Text>\n                <CBadgeText type=\"info\">{data.status ?? \"-\"}</CBadgeText>\n                <br />\n                <Text>Dibuat : </Text>\n                <Text strong>{data.created_date ?? \"-\"}</Text>\n              </div>\n            </div>\n            <Steps current={current}>\n              {steps.map((item) => (\n                <Step\n                  description={item.description}\n                  key={item.title}\n                  title={item.title}\n                />\n              ))}\n            </Steps>\n            <StepsContent>{steps[current].content}</StepsContent>\n            <StepsAction>\n              {current < steps.length - 1 && (\n                <Button type=\"primary\" onClick={onClickNext}>\n                  Next\n                </Button>\n              )}\n              {current === steps.length - 1 && (\n                <Button type=\"primary\" onClick={onFinished}>\n                  Done\n                </Button>\n              )}\n              {current > 0 && (\n                <Button style={{ margin: \"0 8px\" }} onClick={onClickPrevious}>\n                  Previous\n                </Button>\n              )}\n            </StepsAction>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormWizardIdentificationComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst ContentMachineConfigurationComponent = ({\n  machineConf,\n  onAddMachineConf,\n}) => {\n  const RenderBodyHusker = ({ fields, item }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 2) {\n                return;\n              }\n              fields.push({});\n              setTimeout(() => {\n                onAddMachineConf(item);\n              }, 500);\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`${item.type} ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.brand`}\n                    label=\"Merek\"\n                    placeholder=\"cth: merek_1, merek_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.type`}\n                    label=\"Tipe\"\n                    placeholder=\"cth: tipe_1, tipe_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-2\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"cth: 12, 5, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.buy_and_use_year`}\n                    label=\"Tahun Pembelian & Pemakaian\"\n                    placeholder=\"cth: 2015, 2017, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.serial_number`}\n                    label=\"Nomor Seri\"\n                    placeholder=\"cth: 77888, 66555, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return machineConf.map((item, index) => {\n    return (\n      <div key={`machine-conf-${index}`} className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">{item.type}</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Maksimal hanya input 2 field.\n          </p>\n        </div>\n        <FieldArray\n          name={`engine_confs.${item.name}.list`}\n          component={(_props) => <RenderBodyHusker item={item} {..._props} />}\n        />\n        <hr />\n      </div>\n    );\n  });\n};\n\nexport default ContentMachineConfigurationComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneRegularComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumInstanceType}\n            name=\"instanceType\"\n            label=\"Tipe Instansi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"productName\"\n            label=\"Nama Produk\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instancePhoneNumber\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-4\">\n        <h5 className=\"card-title\">Alamat Customer</h5>\n      </div>\n      <div class=\"row ml-2 mr-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"kelurahan\"\n            label=\"Kelurahan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"kecamatan\"\n            label=\"Kecamatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n          <Field\n            name=\"postalCode\"\n            label=\"Kode Pos\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneRegularComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, getFormValues, reduxForm } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport {\n  getCitiesEnum,\n  getMachineConf,\n  getProvinceEnum,\n  SelectInstanceType,\n  SelectInstanceTypeRegular,\n  SelectStatusMilling,\n} from \"../../../../app/Helpers\";\nimport ContentStepOneComponent from \"../../Component/Wizard/ContentStepOneComponent\";\nimport ContentUnitComponent from \"../../Component/Wizard/ContentUnitComponent\";\nimport ContentSparePartComponent from \"../../Component/Wizard/ContentSparePartComponent\";\nimport FormWizardIdentificationComponent from \"../../Component/Wizard/FormWizardIdentificationComponent\";\nimport ContentMachineConfigurationComponent from \"../../Component/Wizard/ContentMachineConfigurationComponent\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport ContentStepOneRegularComponent from \"../../Component/Wizard/ContentStepOneRegularComponent\";\nimport * as IdentificationActions from \"../../Store/IdentificationActions\";\n\nconst FormWizardIdentificationContainer = (props) => {\n  const [cities, setCities] = React.useState([]);\n  const [serviced, setServiced] = React.useState(false);\n  const {\n    identification: { selectedIdentificationData, formStatus },\n    masters: { listProvince },\n    machineConfiguration: { listMachine },\n    identificationFormValues,\n  } = props;\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"wizardIdentificationForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onChangeServiced = (val) => {\n    const isServiced = val.split(\"|\");\n    if (isServiced[0] === \"true\") {\n      setServiced(true);\n    } else {\n      setServiced(false);\n    }\n  };\n\n  const onAddMachineConf = (item) => {\n    store.dispatch(\n      change(\n        \"wizardIdentificationForm\",\n        `engine_confs.${item.name}.id`,\n        item.id\n      )\n    );\n  };\n\n  const saveFormChanges = (isLastStep) => {\n    IdentificationActions.saveIdentificationRequested(\n      formStatus,\n      identificationFormValues,\n      isLastStep\n    );\n  };\n\n  const steps = [];\n\n  if (selectedIdentificationData.milling) {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceType}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Konfigurasi Mesin\",\n      content: (\n        <ContentMachineConfigurationComponent\n          machineConf={getMachineConf(listMachine)}\n          onAddMachineConf={onAddMachineConf}\n        />\n      ),\n    });\n  } else {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneRegularComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceTypeRegular}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Unit\",\n      content: <ContentUnitComponent />,\n    });\n  }\n\n  steps.push({\n    title: \"Spare Part\",\n    content: (\n      <ContentSparePartComponent\n        onChangeServiced={onChangeServiced}\n        isServiced={serviced}\n      />\n    ),\n  });\n\n  return (\n    <FormWizardIdentificationComponent\n      data={selectedIdentificationData}\n      steps={steps}\n      saveFormChanges={saveFormChanges}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  identification: state.identification,\n  masters: state.masters,\n  machineConfiguration: state.machineConfiguration,\n  identificationFormValues: getFormValues(\"wizardIdentificationForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormWizardIdentificationContainer);\n\nexport default reduxForm({\n  form: \"wizardIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  formStatus,\n  listCustomer,\n  listType,\n  listBranch,\n  listLocation,\n  listMilling\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          {formStatus === \"edit\" && (\n            <Field\n              name=\"id\"\n              label=\"ID Cabang\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          )}\n        </div>\n        <div class=\"col-md-12\">\n          <CSelect\n            // onChange={(val) => handleAutoPopulateUnitModel(val, indexUnit)}\n            showSearch\n            data={listCustomer}\n            label=\"Nama Customer\"\n            name=\"customer\"\n          />\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <CSelect data={listBranch} label=\"Cabang\" name=\"branch\" />\n            </div>\n            <div class=\"col-md-6\">\n              <CSelect data={listLocation} label=\"Lokasi\" name=\"location\" />\n            </div>\n          </div>\n          <CSelect data={listType} label=\"Tipe Identifikasi\" name=\"type\" />\n          <CSelect data={listMilling} label=\"Milling\" name=\"milling\" />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst IdentificationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n    enumCustomers,\n    enumType,\n    enumBranch,\n    enumLocation,\n    enumMilling,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n          listCustomer={enumCustomers}\n          listType={enumType}\n          listBranch={enumBranch}\n          listLocation={enumLocation}\n          listMilling={enumMilling}\n        />\n      }\n    />\n  );\n};\n\nexport default IdentificationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as CustomersActions from \"../../Customers/Store/CustomersActions\";\nimport IdentificationModalComponent from \"../Component/IdentificationModalComponent\";\nimport {\n  SelectLocation,\n  SelectMilling,\n  SelectType,\n} from \"../../../app/Helpers\";\n\nconst IdentificationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    identification: { formStatus },\n    handleSubmitForm,\n    customers: { listCustomers },\n    branch: { listBranch },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomer = [];\n  listCustomers.map((item, index) => {\n    SelectCustomer.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    CustomersActions.getCustomerListDataByPaging(1, 300);\n  }, []);\n\n  return (\n    <IdentificationModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumCustomers={SelectCustomer}\n      enumType={SelectType}\n      enumBranch={SelectBranch}\n      enumLocation={SelectLocation}\n      enumMilling={SelectMilling}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  identification: state.identification,\n  component: state.component,\n  masters: state.masters,\n  customers: state.customers,\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    IdentificationActions.saveIdentificationRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IdentificationModalContainer);\n\nexport default reduxForm({\n  form: \"editIdentificationhForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport IdentificationModalContainer from \"../Container/IdentificationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ListIdentificationComponent = (props) => {\n  const {\n    headers,\n    listIdentification,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Identifikasi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Identifikasi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listIdentification}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    size=\"small\"\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <IdentificationModalContainer />\n    </div>\n  );\n};\n\nexport default ListIdentificationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListIdentificationComponent from \"../Component/ListIdentificationComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { Link } from \"react-router-dom\";\n\nconst ListIdentificationContainer = (props) => {\n  const {\n    getListIdentification,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    identification: { listIdentification, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listIdentification.length > 0) {\n    listIdentification.map((item, index) => {\n      listIdentification[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_id\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_id.length - b.branch_id.length,\n    },\n    {\n      title: \"Tipe Identifikasi\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"20%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <Link\n        to={\"/form-identification\"}\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n      >\n        <CButtonAntd type=\"primary\" icon={<EditOutlined />} size=\"middle\" />\n      </Link>\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListIdentification(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(IdentificationActions.setPagingIdentification(paging));\n    getListIdentification(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListIdentification(page, limit, val);\n  };\n\n  return (\n    <ListIdentificationComponent\n      headers={headers}\n      listIdentification={listIdentification}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  identification: state.identification,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListIdentification: (page, limit, keyword) =>\n    IdentificationActions.getIdentificationListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(IdentificationActions.setSelectedIdentificationData({}));\n    await dispatch(IdentificationActions.setSelectedIdentificationId(\"\"));\n    dispatch(IdentificationActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    IdentificationActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(IdentificationActions.setFormStatus(\"edit\"));\n    await dispatch(\n      IdentificationActions.setSelectedIdentificationId(record.id)\n    );\n    await dispatch(IdentificationActions.setSelectedIdentificationData(record));\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(IdentificationActions.setSelectedIdentificationId(branchId));\n    IdentificationActions.deleteIdentificationRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListIdentificationContainer);\n\nexport default reduxForm({\n  form: \"identificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, formStatus }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {formStatus === \"edit\" && (\n          <div class=\"col-md-12\">\n            <Field\n              name=\"id\"\n              label=\"ID Konfigurasi Mesin\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          </div>\n        )}\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Konfigurasi Mesin\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst MachineConfigurationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n        />\n      }\n    />\n  );\n};\n\nexport default MachineConfigurationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as MachineConfigurationActions from \"../Store/MachineConfigurationActions\";\nimport BranchModalComponent from \"../Component/MachineConfigurationModalComponent\";\n\nconst MachineConfigurationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    MachineConfigurationActions.saveMachineRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationModalContainer);\n\nexport default reduxForm({\n  form: \"editMachineConfigurationForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport MachineConfigurationModalContainer from \"../Container/MachineConfigurationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst MachineConfigurationComponent = (props) => {\n  const {\n    headers,\n    listMachine,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Konfigurasi Mesin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Konfigurasi Mesin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listMachine}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <MachineConfigurationModalContainer />\n    </div>\n  );\n};\n\nexport default MachineConfigurationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as MachineActions from \"../Store/MachineConfigurationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport MachineConfigurationComponent from \"../Component/MachineConfigurationComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst MachineConfigurationContainer = (props) => {\n  const {\n    getListMachine,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    machineConfiguration: { listMachine, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMachine.length > 0) {\n    listMachine.map((item, index) => {\n      listMachine[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Konfigurasi Mesin\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"50%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListMachine(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(MachineActions.setPagingMachineConf(paging));\n    getListMachine(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListMachine(page, limit, val);\n  };\n\n  return (\n    <MachineConfigurationComponent\n      headers={headers}\n      listMachine={listMachine}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  machineConfiguration: state.machineConfiguration,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMachine: (page, limit, keyword) =>\n    MachineActions.getMachineListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(MachineActions.setSelectedMachineData({}));\n    await dispatch(MachineActions.setSelectedMachineId(\"\"));\n    dispatch(MachineActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    MachineActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(MachineActions.setFormStatus(\"edit\"));\n    await dispatch(MachineActions.setSelectedMachineId(record.id));\n    await dispatch(MachineActions.setSelectedMachineData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await MachineActions.mapDetailMachineToForm();\n  },\n  handlePressDelete: async (machineId) => {\n    await dispatch(MachineActions.setSelectedMachineId(machineId));\n    MachineActions.deleteMachineRequested(machineId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationContainer);\n\nexport default reduxForm({\n  form: \"machineConfigurationForm\",\n})(EnhanceContainer);\n","import React, { useState } from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Upload, message, Typography } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\n\nconst beforeUpload = (file) => {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n  return isJpgOrPng && isLt2M;\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  handleUploadPhoto,\n  selectedUnitsData,\n}) => {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {/* <div class=\"col-md-12\">\n          <Text style={{ marginBottom: 10 }}>Foto Unit</Text>\n          <Upload\n            name=\"avatar\"\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n            // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            beforeUpload={beforeUpload}\n            onChange={handleChange}\n          >\n            {imageUrl ? (\n              <img\n                src={imageUrl}\n                alt=\"avatar\"\n                style={{ height: \"100%\", width: \"100%\" }}\n              />\n            ) : (\n              uploadButton\n            )}\n          </Upload>\n        </div> */}\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"name\" label=\"Nama Unit\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport UnitsModalComponent from \"../Component/UnitsModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    UnitsActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    UnitsActions.saveUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitForm\",\n  validate: validateFormUnit,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input, Table, Tooltip } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport UnitsModalContainer from \"../Container/UnitsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <Tooltip placement=\"top\" title=\"Edit unit\">\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </Tooltip>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    size=\"small\"\n                    columns={headers}\n                    dataSource={listUnits}\n                    // renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitsComponent;\n","import { Button, Space, Tooltip, Typography } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  BoxPlotOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/UnitsComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { Link } from \"react-router-dom\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressUnitModel,\n    handlePressUnitFields,\n    handlePressLink,\n    units: { listUnits, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const tooltipText = <span>Unit Model</span>;\n\n  if (listUnits.length > 0) {\n    listUnits.map((item, index) => {\n      listUnits[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <Tooltip placement=\"topLeft\" title=\"Edit unit\">\n        <CButtonAntd\n          onClick={() => {\n            handlePressEdit(record);\n          }}\n          type=\"primary\"\n          icon={<EditOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n\n      <Link to={\"/unit-models\"} onClick={() => handlePressUnitModel(record.id)}>\n        <CButtonAntd type=\"primary\" icon={<BoxPlotOutlined />} size=\"middle\" />\n      </Link>\n      <Link to={\"/unit-fields\"} onClick={() => handlePressUnitFields(record)}>\n        <CButtonAntd type=\"primary\" icon={<FileAddOutlined />} size=\"middle\" />\n      </Link>\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n      render: (unit, record) => (\n        <Link\n          class=\"nav-link\"\n          to={\"/unit-job-forms\"}\n          onClick={() => handlePressLink(record)}\n        >\n          <Typography\n            style={{ color: \"#1890ff\", fontWeight: \"bold\", fontSize: 11 }}\n          >\n            {unit}\n          </Typography>\n        </Link>\n      ),\n    },\n    {\n      title: \"Divisi\",\n      dataIndex: \"division\",\n      key: \"division\",\n      width: \"10%\",\n      sorter: (a, b) => a.division.length - b.division.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  React.useEffect(() => {\n    getListUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitsActions.setPagingUnit(paging));\n    getListUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnit(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listUnits}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnit: (page, limit, keyword) =>\n    UnitsActions.getUnitListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitsActions.setSelectedUnitData({}));\n    await dispatch(UnitsActions.setSelectedUnitId(\"\"));\n    dispatch(UnitsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitsActions.mapDetailUnitToForm();\n  },\n  handlePressDelete: async (unitId) => {\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    UnitsActions.deleteUnitRequested(unitId);\n  },\n  handlePressUnitModel: async (unitId) => {\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n  },\n  handlePressUnitFields: async (record) => {\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n  },\n  handlePressLink: async (record) => {\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"unitsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumProvince,\n  onChangeProvince,\n  cities,\n  enumBranch,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"name\"\n              label=\"Nama Customer\"\n              placeholder=\"Nama..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"picPhone\"\n              label=\"Telepon PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"username\"\n              label=\"Username\"\n              placeholder=\"Username..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              onChange={(val) => onChangeProvince(val)}\n              data={enumProvince}\n              name=\"province\"\n              label=\"Nama Provinsi\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"password\"\n              label=\"Password\"\n              placeholder=\"Password..\"\n              component={CInput}\n              type=\"password\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              data={cities}\n              name=\"city\"\n              label=\"Kota/Kabupaten\"\n              disabled={cities.length <= 0}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"phone\"\n              label=\"Telepon\"\n              placeholder=\"cth: 0821xxx\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"workHour\"\n              label=\"Jam Kerja\"\n              placeholder=\"cth : 08:00 - 15:20\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"pic\"\n              label=\"PIC\"\n              placeholder=\"PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"address\"\n              label=\"Alamat\"\n              component={CInput}\n              type=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst CustomerModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    enumProvince,\n    onChangeProvince,\n    cities,\n    enumBranch,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      width={900}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          enumProvince={enumProvince}\n          onChangeProvince={onChangeProvince}\n          cities={cities}\n          enumBranch={enumBranch}\n        />\n      }\n    />\n  );\n};\n\nexport default CustomerModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as CustomersActions from \"../Store/CustomersActions\";\nimport CustomerModalComponent from \"../Component/CustomerModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { getCitiesEnum } from \"../../../app/Helpers\";\n\nconst CustomerModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { listBranch },\n    masters: { listMenu, listProvince },\n    customers: { selectedCustomerData, formStatus },\n    handleSubmitForm,\n  } = props;\n  const [cities, setCities] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    setCities([]);\n    if (formStatus === \"edit\" && selectedCustomerData.province_id) {\n      const provinceId =\n        selectedCustomerData.province_id +\n        \"|\" +\n        selectedCustomerData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedCustomerData.province_id]);\n\n  React.useEffect(() => {\n    return () => {\n      CustomersActions.setFormStatus(\"add\");\n    };\n  });\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"editCustomerForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  return (\n    <CustomerModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumProvince={SelectProvince}\n      onChangeProvince={onChangeProvince}\n      cities={cities}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  customers: state.customers,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    CustomersActions.saveCustomerRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerModalContainer);\n\nexport default reduxForm({\n  form: \"editCustomerForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input, Spin } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CustomerModalContainer from \"../Container/CustomerModalContainer\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst CustomerComponent = (props) => {\n  const {\n    headers,\n    listCustomers,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    isBlocked,\n    isLoading,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Customer</h6>\n                </div>\n                <div class=\"row align-items-center\">\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Customers\n                  </CButtonAntd>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2 mt-3\">\n                  {!isBlocked && (\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        data={enumBranch ?? []}\n                        name=\"branch\"\n                        label=\"Cabang\"\n                      />\n                    </div>\n                  )}\n                  <div class=\"col-md-4 mt-4\">\n                    <div class=\"mt-2\" />\n                    <Search\n                      placeholder=\"Cari Customer\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                {isLoading ? (\n                  <div class=\"d-flex justify-content-center align-items-center\">\n                    <Spin />\n                  </div>\n                ) : (\n                  <div class=\"table-responsive\">\n                    <CTableAntd\n                      data={listCustomers}\n                      headers={headers}\n                      renderActions={renderActionTable}\n                      pagination={pagination}\n                    />\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <CustomerModalContainer />\n    </div>\n  );\n};\n\nexport default CustomerComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { formValueSelector, reduxForm } from \"redux-form\";\nimport * as CustomerActions from \"../Store/CustomersActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CustomerComponent from \"../Component/CustomerComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex, isBlockedRoleCustomerView } from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"customerForm\");\n\nconst CustomerContainer = (props) => {\n  const {\n    user: { roles, branchId },\n    getListCustomer,\n    getListBranch,\n    getListProvince,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    customerBranchValue,\n    customers: { listCustomers, paging, keyword },\n    branch: { listBranch },\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  const { page, totalPage, limit } = paging;\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  if (listCustomers.length > 0) {\n    listCustomers.map((item, index) => {\n      listCustomers[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n    {\n      title: \"PIC | Phone\",\n      dataIndex: `phone`,\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const checkBlockedRole = () => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomerView(roleId);\n\n    if (branchId) {\n      if (isBlockedRole) {\n        getListCustomer(1, 10, \"\", branchId).then(() => {\n          setIsLoading(false);\n        });\n      } else {\n        getListCustomer(1, 10, \"\", \"\").then(() => {\n          setIsLoading(false);\n        });\n      }\n    } else {\n      getListCustomer(1, 10, \"\", \"\").then(() => {\n        setIsLoading(false);\n      });\n    }\n\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    setIsLoading(true);\n    getListBranch();\n    getListProvince();\n    checkBlockedRole();\n  }, []);\n\n  const onChangePagination = async (nextPage) => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomerView(roleId);\n\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n    await store.dispatch(CustomerActions.setPagingCustomer(paging));\n    // getListCustomer(nextPage, limit, keyword);\n    if (isBlockedRole) {\n      getListCustomer(nextPage, limit, \"\", branchId);\n    } else {\n      getListCustomer(nextPage, limit, \"\");\n    }\n  };\n\n  const onSearch = (val) => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomerView(roleId);\n\n    if (branchId) {\n      if (isBlockedRole) {\n        getListCustomer(page, limit, val, branchId);\n      } else {\n        getListCustomer(page, limit, val, customerBranchValue);\n      }\n    } else {\n      getListCustomer(page, limit, val, customerBranchValue);\n    }\n  };\n\n  return (\n    <CustomerComponent\n      headers={headers}\n      paging={paging}\n      isBlocked={isBlocked}\n      listCustomers={listCustomers}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      isLoading={isLoading}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers,\n  branch: state.branch,\n  customerBranchValue: selector(state, \"branch\"),\n  user: state.auth.userDetail,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListCustomer: async (page, limit, keyword, branchId) => {\n    const splitBranch = branchId ? branchId.split(\"|\") : [\"\"];\n    await CustomerActions.getCustomerListDataByPaging(\n      page,\n      limit,\n      keyword,\n      splitBranch[0]\n    );\n  },\n  getListBranch: () => BranchActions.getBranchListDataRequested(1, 250),\n  getListProvince: () => MasterDataActions.loadProvinceListData(),\n  handlePressAddNew: async () => {\n    await dispatch(CustomerActions.setSelectedCustomerData({}));\n    await dispatch(CustomerActions.setSelectedCustomerId(\"\"));\n    dispatch(CustomerActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    CustomerActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(CustomerActions.setFormStatus(\"edit\"));\n    await dispatch(CustomerActions.setSelectedCustomerId(record.id));\n    await dispatch(CustomerActions.setSelectedCustomerData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await CustomerActions.mapDetailCustomerToForm();\n  },\n  handlePressDelete: async (customerId) => {\n    await dispatch(CustomerActions.setSelectedCustomerId(customerId));\n    CustomerActions.deleteCustomerRequested(customerId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerContainer);\n\nexport default reduxForm({\n  form: \"customerForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Peralatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default ToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTools } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport ToolsModalComponent from \"../Component/ToolsModalComponent\";\n\nconst ToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    tools: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <ToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    ToolsActions.saveToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editToolsForm\",\n  validate: validateFormTools,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ToolsModalContainer from \"../Container/ToolsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ToolsComponent = (props) => {\n  const {\n    headers,\n    listTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Peralatan</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Peralatan\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToolsModalContainer />\n    </div>\n  );\n};\n\nexport default ToolsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ToolsComponent from \"../Component/ToolsComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ToolsContainer = (props) => {\n  const {\n    getListTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    tools: { listTools, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listTools.length > 0) {\n    listTools.map((item, index) => {\n      listTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListTools(1, 10);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ToolsActions.setPagingTools(paging));\n    getListTools(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListTools(page, limit, val);\n  };\n\n  return (\n    <ToolsComponent\n      headers={headers}\n      listTools={listTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListTools: (page, limit, keyword) =>\n    ToolsActions.getToolsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(ToolsActions.setSelectedToolsData({}));\n    await dispatch(ToolsActions.setSelectedToolsId(\"\"));\n    dispatch(ToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    ToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(ToolsActions.setFormStatus(\"edit\"));\n    await dispatch(ToolsActions.setSelectedToolsId(record.id));\n    await dispatch(ToolsActions.setSelectedToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await ToolsActions.mapDetailToolsToForm();\n  },\n  handlePressDelete: async (toolsId) => {\n    await dispatch(ToolsActions.setSelectedToolsId(toolsId));\n    ToolsActions.deleteToolsRequested(toolsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsContainer);\n\nexport default reduxForm({\n  form: \"toolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Judul\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst FormCategoryModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default FormCategoryModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormCategory } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport BranchModalComponent from \"../Component/FormCategoryModalComponent\";\n\nconst FormCategoryModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    FormCategoryActions.saveFormCategoryRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryModalContainer);\n\nexport default reduxForm({\n  form: \"editFormCategory\",\n  validate: validateFormCategory,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport FormCategoryModalContainer from \"../Container/FormCategoryModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst FormCategoryComponent = (props) => {\n  const {\n    headers,\n    listFormCategory,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Kategori Form</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Kategori Form\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listFormCategory}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <FormCategoryModalContainer />\n    </div>\n  );\n};\n\nexport default FormCategoryComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport FormCategoryComponent from \"../Component/FormCategoryComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst FormCategoryContainer = (props) => {\n  const {\n    getListFormCategory,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    formCategory: { listFormCategory, paging, keyword },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listFormCategory.length > 0) {\n    listFormCategory.map((item, index) => {\n      listFormCategory[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListFormCategory(page, limit, keyword);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(FormCategoryActions.setPagingFormCategory(paging));\n    getListFormCategory(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListFormCategory(page, limit, val);\n  };\n\n  return (\n    <FormCategoryComponent\n      headers={headers}\n      listFormCategory={listFormCategory}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  formCategory: state.formCategory,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListFormCategory: (page, limit, keyword) =>\n    FormCategoryActions.getFormCatgeoryListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData({}));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(\"\"));\n    dispatch(FormCategoryActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    FormCategoryActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(FormCategoryActions.setFormStatus(\"edit\"));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(record.id));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await FormCategoryActions.mapDetailCategoryToForm();\n  },\n  handlePressDelete: async (formCategoryId) => {\n    await dispatch(\n      FormCategoryActions.setSelectedFormCategoryId(formCategoryId)\n    );\n    FormCategoryActions.deleteFormCategoryRequested(formCategoryId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryContainer);\n\nexport default reduxForm({\n  form: \"formCategory\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-12 mt-3\">\n            <Field\n              name=\"name\"\n              label=\"Nama Model\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModelsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModelsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit, validateFormUnitModel } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitsModelsModalComponent from \"../Component/UnitsModelsModalComponent\";\n\nconst UnitModelsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModelsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitModelActions.saveUnitModelsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitModelForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport UnitModelsModalContainer from \"../Container/UnitModelsModalContainer\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { Link } from \"react-router-dom\";\n\nconst { Search } = Input;\n\nconst UnitModelsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit Model</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-1\">\n                      <Link to={\"/unit\"}>\n                        <CButtonAntd\n                          type=\"primary\"\n                          icon={<ArrowLeftOutlined />}\n                          size=\"middle\"\n                          danger\n                        >\n                          Kembali\n                        </CButtonAntd>\n                      </Link>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Model\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitModelsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitModelsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FieldNumberOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitModelsComponent from \"../Component/UnitModelsComponent\";\nimport { Link } from \"react-router-dom\";\n\nconst UnitModelsContainer = (props) => {\n  const {\n    getListUnitModels,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressSerialNumber,\n    unitModels: { listUnitModels, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitModels.length > 0) {\n    listUnitModels.map((item, index) => {\n      listUnitModels[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Model\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <Link to={\"/unit-serial-number\"}>\n        <CButtonAntd\n          onClick={() => handlePressSerialNumber(record)}\n          type=\"ghost\"\n          icon={<FieldNumberOutlined />}\n          size=\"middle\"\n        />\n      </Link>\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitModels(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitModelActions.setPagingUnitModel(paging));\n    getListUnitModels(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitModels(page, limit, val);\n  };\n\n  return (\n    <UnitModelsComponent\n      headers={headers}\n      listUnits={listUnitModels}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitModels: state.unitModels,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitModels: (page, limit, keyword) =>\n    UnitModelActions.getUnitModelListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitModelActions.setSelectedUnitModelData({}));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(\"\"));\n    dispatch(UnitModelActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitModelActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitModelActions.setFormStatus(\"edit\"));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitModelActions.mapDetailUnitModelToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(UnitModelActions.setSelectedUnitModelId(unitModelId));\n    UnitModelActions.deleteUnitModelRequested(unitModelId);\n  },\n  handlePressSerialNumber: async (record) => {\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsContainer);\n\nexport default reduxForm({\n  form: \"unitsModelsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumFormCategory,\n  enumJobForm,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumFormCategory ?? []}\n              name=\"formCategory\"\n              label=\"Kategori\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"fieldName\"\n              label=\"Nama Field\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumJobForm ?? []}\n              name=\"jobForm\"\n              label=\"Jenis Form\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitFieldsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumFormCategory,\n    enumJobForm,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumFormCategory={enumFormCategory}\n          enumJobForm={enumJobForm}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitFieldsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsModalComponent from \"../../Component/UnitFields/UnitFieldsModalComponent\";\nimport Invoke from \"../../../../app/axios/Invoke\";\n\nconst UnitFieldsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    handleSubmitForm,\n  } = props;\n  const [formCategory, setFormCategory] = React.useState([]);\n  const [jobForm, setJobForm] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const loadOption = async () => {\n    const { data } = await Invoke.getFormCategory(1, 100, \"\");\n    const dataJobForm = await Invoke.getListJobForm(1, 100, \"\");\n    const listFormCategory = data.callback.data;\n    const listJobForm = dataJobForm.data.callback.data;\n\n    const SelectFormCategory = [];\n    listFormCategory.map((item, index) => {\n      SelectFormCategory.push({\n        id: `form-category-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    const SelectJobForm = [];\n    listJobForm.map((item, index) => {\n      SelectJobForm.push({\n        id: `job-form-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setFormCategory(SelectFormCategory);\n    setJobForm(SelectJobForm);\n  };\n\n  React.useEffect(() => {\n    loadOption();\n  }, []);\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitFieldsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      enumFormCategory={formCategory}\n      enumJobForm={jobForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitFieldsActions.saveUnitFieldsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitFieldsForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/UnitFields/UnitFieldsModalContainer\";\nimport { Link } from \"react-router-dom\";\n\nconst { Search } = Input;\n\nconst UnitFieldsComponent = (props) => {\n  const {\n    headers,\n    listUnitFields,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitsData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Field Unit : ${selectedUnitsData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <Link to={\"unit\"}>\n                        <CButtonAntd\n                          type=\"primary\"\n                          icon={<ArrowLeftOutlined />}\n                          size=\"middle\"\n                          danger\n                        >\n                          Kembali\n                        </CButtonAntd>\n                      </Link>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Field\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitFields}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitFieldsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsComponent from \"../../Component/UnitFields/UnitFieldsComponent\";\n\nconst UnitFieldsContainer = (props) => {\n  const {\n    getListUnitFields,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitFields: { listUnitFields, paging },\n    units: { selectedUnitsData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitFields.length > 0) {\n    listUnitFields.map((item, index) => {\n      listUnitFields[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Job Form\",\n      dataIndex: \"job_form_name\",\n      key: \"job_form_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\n    },\n    {\n      title: \"Nama Field\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Kategori\",\n      dataIndex: \"category_form_name\",\n      key: \"category_form_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.category_form_name.length - b.category_form_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"40%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitFields(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitFieldsActions.setPagingUnitFields(paging));\n    getListUnitFields(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitFields(page, limit, val);\n  };\n\n  return (\n    <UnitFieldsComponent\n      headers={headers}\n      listUnitFields={listUnitFields}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedUnitsData={selectedUnitsData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitFields: state.unitFields,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitFields: (page, limit, keyword) =>\n    UnitFieldsActions.getUnitFieldsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData({}));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(\"\"));\n    dispatch(UnitFieldsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitFieldsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitFieldsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(record.id));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitFieldsActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(unitFieldsId));\n    UnitFieldsActions.deleteUnitFieldRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsContainer);\n\nexport default reduxForm({\n  form: \"unitFieldsForm\",\n})(EnhanceContainer);\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_IDENTIFICATION_LIST_DATA =\n  \"SET_REPORT_IDENTIFICATION_LIST_DATA\";\nexport const SET_PAGING_REPORT_IDENTIFICATION =\n  \"SET_PAGING_REPORT_IDENTIFICATION\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportIdentificationListData = (payload) => {\n  return {\n    type: SET_REPORT_IDENTIFICATION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportIdentification = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportIdentificationListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportIdentification(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportIdentificationComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Identifikasi</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportIdentificationComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportIdentificationActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportIdentificationComponent\";\n\nconst ReportIdentificationContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportIdentificationContainer);\n\nexport default reduxForm({\n  form: \"reportIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Typography } from \"antd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumHeadDivision,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"title\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12 mt-3\">\n          <CSelect\n            showSearch\n            data={enumHeadDivision}\n            name=\"headDivision\"\n            label=\"Kepala Divisi\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumHeadDivision,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumHeadDivision={enumHeadDivision}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport DivisionModalComponent from \"../Component/DivisionModalComponent\";\nimport { enumSelectGenerator } from \"../../../app/Helpers\";\n\nconst DivisionModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    division: { formStatus },\n    masters: { listMenu },\n    employees: { listEmployees },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectEmployees = enumSelectGenerator(listEmployees, \"employee\");\n\n  return (\n    <DivisionModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumHeadDivision={SelectEmployees}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  division: state.division,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    DivisionActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    DivisionActions.saveDivisionRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionForm\",\n  validate: validateDivisionForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport DivisionModalContainer from \"../Container/DivisionModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Divisi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Divisi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <DivisionModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport * as DivisionUnitActions from \"../Store/DivisionUnitActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/DivisionComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { Link } from \"react-router-dom\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListDivision,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressDivisionUnit,\n    division: { listDivision, paging },\n    getListEmlpoyee,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n      key: \"title\",\n      width: \"30%\",\n      sorter: (a, b) => a.title.length - b.title.length,\n    },\n    {\n      title: \"Kepala Divisi\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <Link\n        to={\"division-unit\"}\n        onClick={() => handlePressDivisionUnit(record)}\n      >\n        <CButtonAntd type=\"primary\" icon={<FileAddOutlined />} size=\"middle\" />\n      </Link>\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivision(page, limit);\n    getListEmlpoyee(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionActions.setPagingDivision(paging));\n    getListDivision(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivision(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listDivision}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivision: (page, limit, keyword) =>\n    DivisionActions.getDivisionListDataRequested(page, limit, keyword),\n  getListEmlpoyee: (page, limit) => {\n    EmployeeActions.loadEmployeeListData(page, limit);\n  },\n  handlePressAddNew: async () => {\n    await dispatch(DivisionActions.setSelectedDivisionData({}));\n    await dispatch(DivisionActions.setSelectedDivisionId(\"\"));\n    dispatch(DivisionActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionActions.mapDetailDivisionToForm();\n  },\n  handlePressDelete: async (divisionId) => {\n    await dispatch(DivisionActions.setSelectedDivisionId(divisionId));\n    DivisionActions.deleteDivisionRequested(divisionId);\n  },\n  handlePressDivisionUnit: async (record) => {\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"divisionForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumTools }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Peralatan Karyawan</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumTools}\n              name=\"tools\"\n              label=\"Peralatan\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst EmployeeToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    enumTools,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formStatus={formStatus}\n          enumTools={enumTools}\n        />\n      }\n    />\n  );\n};\n\nexport default EmployeeToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateEmployeeToolsForm, validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport EmployeeToolsModalComponent from \"../../Component/EmployeeTools/EmployeeToolsModalComponent\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\n\nconst EmployeeToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    employeeTools: { formStatus },\n    tools: { listTools },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectTools = enumSelectGenerator(listTools);\n\n  return (\n    <EmployeeToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      enumTools={SelectTools}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  employeeTools: state.employeeTools,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    EmployeeToolsActions.saveEmployeeToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeToolsForm\",\n  validate: validateEmployeeToolsForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport {\n  PlusOutlined,\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n} from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport EmployeeToolsModalContainer from \"../../Container/EmployeeTools/EmployeeToolsModalContainer\";\nimport { Link } from \"react-router-dom\";\n\nconst { Search } = Input;\n\nconst EmployeeToolsComponent = (props) => {\n  const {\n    headers,\n    listEmployeeTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedEmployeeData,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Karyawan : ${selectedEmployeeData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-2 mb-2\">\n                      <Link to={\"/employees\"}>\n                        <CButtonAntd\n                          type=\"primary\"\n                          icon={<ArrowLeftOutlined />}\n                          size=\"middle\"\n                          danger\n                        >\n                          Kembali\n                        </CButtonAntd>\n                      </Link>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Peralatan\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak PDF\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployeeTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <EmployeeToolsModalContainer />\n    </div>\n  );\n};\n\nexport default EmployeeToolsComponent;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nexport const generateEmployeeToolsReport = async (data) => {\n  const { selectedEmployeeData, listEmployeeTools } = data;\n  const newListData = [];\n\n  // eslint-disable-next-line array-callback-return\n  await listEmployeeTools.map((item, index) => {\n    newListData.push({ no: index + 1, name: item.name, check: \"-\" });\n  });\n\n  const doc = new jsPDF();\n\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Peralatan Karyawan\", 100, 20, \"center\");\n\n  doc.setFontSize(12);\n  doc.setFont(\"courier\");\n  //   Line 1\n  doc.text(15, 42, `Karyawan`);\n  doc.text(`: ${selectedEmployeeData.name.toUpperCase()}`, 50, 42);\n\n  doc.text(15, 49, `Cabang`);\n  doc.text(`: ${selectedEmployeeData.branch_name ?? \"-\"}`, 50, 49);\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    let docCell = dataCell.doc;\n\n    // --> Draw Circle shape for checklist\n    if (dataCell.cell.section === \"body\" && dataCell.column.index === 2) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 22, dataCell.cell.y + 4, 2, \"FD\");\n    } else if (\n      dataCell.cell.section === \"body\" &&\n      dataCell.column.index === 3\n    ) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 12, dataCell.cell.y + 4, 2, \"FD\");\n    }\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  doc.autoTable({\n    startY: 57,\n    body: newListData,\n    theme: \"plain\",\n    headStyles: { halign: \"center\" },\n    styles: { overflow: \"linebreak\" },\n    columns: [\n      { header: \"#\", dataKey: \"no\" },\n      { header: \"Nama Peralatan\", dataKey: \"name\" },\n      { header: \"Check\", dataKey: \"test1\" },\n      { header: \"NA\", dataKey: \"test2\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  // === Signature ===\n  doc.addPage();\n  doc.setFontSize(16);\n  doc.setFont(\"Times-Roman\", \"regular\");\n  //   Line 2\n  doc.setFontSize(12);\n\n  doc.setFontSize(16);\n  doc.text(80, 90, `MENGETAHUI`);\n\n  //   Line 1\n  doc.text(45, 120, `Karyawan`);\n  doc.text(130, 120, `Coordinator /`);\n  doc.text(130, 127, `Supervisor`);\n\n  doc.text(45, 163, `(...........................)`);\n  doc.text(130, 163, `(...........................)`);\n\n  //   Export\n  doc.save(\n    `Peralatan-Karyawan-${selectedEmployeeData.name.replace(\" \", \"-\")}.pdf`\n  );\n};\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport EmployeeToolsComponent from \"../../Component/EmployeeTools/EmployeeToolsComponent\";\nimport { generateEmployeeToolsReport } from \"../../Store/EmployeeTools/EmployeeToolsReport\";\n\nconst EmployeeToolsContainer = (props) => {\n  const {\n    getListEmployeeTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    employeeTools: { listEmployeeTools, paging },\n    employees: { selectedEmployeeData, selectedEmployeeId },\n    employeeToolsFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployeeTools.length > 0) {\n    listEmployeeTools.map((item, index) => {\n      listEmployeeTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployeeTools(selectedEmployeeId, page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeToolsActions.setPagingEmployeeTools(paging));\n    getListEmployeeTools(selectedEmployeeId, nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListEmployeeTools(selectedEmployeeId, page, limit, val);\n  };\n\n  const handlePressGeneratePdf = () => {\n    const dataPrinted = {\n      selectedEmployeeData,\n      listEmployeeTools,\n    };\n    generateEmployeeToolsReport(dataPrinted, employeeToolsFormValues);\n  };\n\n  return (\n    <EmployeeToolsComponent\n      headers={headers}\n      listEmployeeTools={listEmployeeTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedEmployeeData={selectedEmployeeData}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  employeeTools: state.employeeTools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployeeTools: (employeeId, page, limit, keyword) =>\n    EmployeeToolsActions.getEmployeeToolsRequested(\n      employeeId,\n      page,\n      limit,\n      keyword\n    ),\n  handlePressAddNew: async () => {\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData({}));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(\"\"));\n    dispatch(EmployeeToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    EmployeeToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(EmployeeToolsActions.setFormStatus(\"edit\"));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(record.id));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await EmployeeToolsActions.mapDetailEmployeeToolsToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(\n      EmployeeToolsActions.setSelectedEmployeeToolsId(unitFieldsId)\n    );\n    EmployeeToolsActions.deleteEmployeeToolsRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsContainer);\n\nexport default reduxForm({\n  form: \"employeeToolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, enumUnits }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect showSearch data={enumUnits} name=\"unit\" label=\"Unit\" />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionUnitModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumUnits,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumUnits={enumUnits}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionUnitModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionUnitForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\nimport DivisionUnitModalComponent from \"../../Component/DivisionUnit/DivisionUnitModalComponent\";\n\nconst DivisionUnitModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    divisionUnit: { formStatus, selectedDivisionUnitData },\n    units: { listUnits },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectUnits = enumSelectGenerator(listUnits, \"unit\");\n\n  return (\n    <DivisionUnitModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedDivisionUnitData={selectedDivisionUnitData}\n      enumUnits={SelectUnits}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    DivisionUnitActions.saveDivisionUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionUnitForm\",\n  validate: validateDivisionUnitForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/DivisionUnit/DivisionUnitModalContainer\";\nimport { Link } from \"react-router-dom\";\n\nconst { Search } = Input;\n\nconst DivisionUnitComponent = (props) => {\n  const {\n    headers,\n    listDivisionUnit,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedDivisionData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Divisi : ${selectedDivisionData.title}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <Link to={\"/division\"}>\n                        <CButtonAntd\n                          type=\"primary\"\n                          icon={<ArrowLeftOutlined />}\n                          size=\"middle\"\n                          danger\n                        >\n                          Kembali\n                        </CButtonAntd>\n                      </Link>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listDivisionUnit}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionUnitComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport DivisionUnitComponent from \"../../Component/DivisionUnit/DivisionUnitComponent\";\n\nconst DivisionUnitContainer = (props) => {\n  const {\n    getListDivisionUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    divisionUnit: { listDivisionUnit, paging },\n    division: { selectedDivisionData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivisionUnit.length > 0) {\n    listDivisionUnit.map((item, index) => {\n      listDivisionUnit[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"unit_name\",\n      key: \"unit_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.unit_name.length - b.unit_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"20%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivisionUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionUnitActions.setPagingDivisionUnit(paging));\n    getListDivisionUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivisionUnit(page, limit, val);\n  };\n\n  return (\n    <DivisionUnitComponent\n      headers={headers}\n      listDivisionUnit={listDivisionUnit}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedDivisionData={selectedDivisionData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivisionUnit: (page, limit, keyword) =>\n    DivisionUnitActions.getDivisionUnitListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData({}));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(\"\"));\n    dispatch(DivisionUnitActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionUnitActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionUnitActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(record.id));\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionUnitActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (divisionUnitId) => {\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(divisionUnitId));\n    DivisionUnitActions.deleteUnitFieldRequested(divisionUnitId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitContainer);\n\nexport default reduxForm({\n  form: \"divisionUnitForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  Image,\n} from \"@react-pdf/renderer\";\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#E4E4E4\",\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n});\n\nconst DetailServiceReportComponent = () => {\n  return (\n    <PDFViewer style={{ flex: 1 }}>\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>Section #1</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n          <View style={styles.section}>\n            <Image\n              style={{\n                width: 300,\n                height: 100,\n              }}\n              src=\"https://cors-anywhere.herokuapp.com/https://drive.google.com/file/d/1hwrQUgM6CvBwxIZUu1fRASxKQr0FxfsM/view\"\n            />\n          </View>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nexport default DetailServiceReportComponent;\n","import React from \"react\";\nimport DetailServiceReportComponent from \"../Components/DetailServiceReportComponent\";\n\nconst DetailServiceReportContainer = () => {\n  return <DetailServiceReportComponent />;\n};\n\nexport default DetailServiceReportContainer;\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumCustomer,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumCustomer ?? []}\n              name=\"customer\"\n              label=\"Pilih Customer\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"serialNumber\"\n              label=\"Serial Number\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              typeComponent=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ModalUnitSerialNumberComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumCustomer,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumCustomer={enumCustomer}\n        />\n      }\n    />\n  );\n};\n\nexport default ModalUnitSerialNumberComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormUnitModel, validateUnitSerialNumberForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport ModalUnitSerialNumberComponent from \"../../Component/UnitSerialNumber/ModalUnitSerialNumberComponent\";\n\nconst ModalUnitSerialNumber = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    customers: { listCustomersDropdown },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <ModalUnitSerialNumberComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedUnitsData={selectedUnitsData}\n      enumCustomer={SelectCustomerData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  customers: state.customers,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitSerialNumberActions.saveUnitSerialNumberRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModalUnitSerialNumber);\n\nexport default reduxForm({\n  form: \"editUnitSerialNumberForm\",\n  validate: validateUnitSerialNumberForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport ModalUnitSerialNumberContainer from \"../../Container/UnitSerialNumber/ModalUnitSerialNumberContainer\";\nimport { Link } from \"react-router-dom\";\n\nconst { Search } = Input;\n\nconst UnitSerialNumberComponent = (props) => {\n  const {\n    headers,\n    listUnitSerialNumber,\n    listCustomer,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitModelsData,\n    onChangeCustomer,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <h6 class=\"ml-1 card-title\">{`Unit Serial Number : ${selectedUnitModelsData.name}`}</h6>\n                  <p class=\"card-description ml-1\">\n                    Silahkan pilih customer untuk menampilkan data serial number\n                  </p>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-1 mb-3\">\n                      <Link to={\"unit-models\"}>\n                        <CButtonAntd\n                          type=\"primary\"\n                          icon={<ArrowLeftOutlined />}\n                          size=\"middle\"\n                          danger\n                        >\n                          Kembali\n                        </CButtonAntd>\n                      </Link>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Serial Number\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-7\">\n                    <CSelect\n                      showSearch\n                      data={listCustomer}\n                      name=\"customer\"\n                      label=\"Pilih Customer\"\n                      onChange={(customer) => {\n                        onChangeCustomer(customer);\n                      }}\n                    />\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      name=\"keyword\"\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitSerialNumber}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ModalUnitSerialNumberContainer />\n    </div>\n  );\n};\n\nexport default UnitSerialNumberComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport * as CustomerActions from \"../../../Customers/Store/CustomersActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitSerialNumberComponent from \"../../Component/UnitSerialNumber/UnitSerialNumberComponent\";\n\nconst UnitSerialNumberContainer = (props) => {\n  const {\n    getUnitSerialNumber,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitSerialNumber: {\n      listUnitSerialNumber,\n      paging,\n      selectedtUnitSerialNumber,\n    },\n    unitModels: { selectedUnitModelsData },\n    customers: { listCustomersDropdown },\n    unitSerialNumberFormValues,\n  } = props;\n\n  const { dispatch } = store;\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitSerialNumber.length > 0) {\n    listUnitSerialNumber.map((item, index) => {\n      listUnitSerialNumber[index] = {\n        ...item,\n        no: getIndex(page, limit)[index],\n      };\n    });\n  }\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Serial Number\",\n      dataIndex: \"serial_number\",\n      key: \"serial_number\",\n      width: \"30%\",\n      sorter: (a, b) => a.serial_number.length - b.serial_number.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    // getUnitSerialNumber(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitSerialNumberActions.setPagingUnitModel(paging));\n    getUnitSerialNumber(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\n  };\n\n  const handleOnchangeCustomer = (customer) => {\n    if (!customer) {\n      dispatch(UnitSerialNumberActions.setUnitSerialNumberData([]));\n      return;\n    }\n\n    const splitCustomerId = customer.split(\"|\");\n    UnitSerialNumberActions.getUnitSerialNumber(\n      page,\n      limit,\n      \"\",\n      splitCustomerId[0]\n    );\n  };\n\n  return (\n    <UnitSerialNumberComponent\n      headers={headers}\n      listUnitSerialNumber={listUnitSerialNumber}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      listCustomer={SelectCustomerData}\n      selectedUnitModelsData={selectedUnitModelsData}\n      selectedtUnitSerialNumber={selectedtUnitSerialNumber}\n      onChangeCustomer={handleOnchangeCustomer}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitSerialNumber: state.unitSerialNumber,\n  unitModels: state.unitModels,\n  customers: state.customers,\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getUnitSerialNumber: (page, limit, keyword) =>\n    UnitSerialNumberActions.getUnitSerialNumber(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberData({}));\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberId(\"\"));\n    dispatch(UnitSerialNumberActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitSerialNumberActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitSerialNumberActions.setFormStatus(\"edit\"));\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(record.id)\n    );\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberData(record)\n    );\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitSerialNumberActions.mapDetailUnitSerialNumberToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(unitModelId)\n    );\n    UnitSerialNumberActions.deleteUnitModelRequested(unitModelId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitSerialNumberContainer);\n\nexport default reduxForm({\n  form: \"unitSerialNumberForm\",\n})(EnhanceContainer);\n","import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { navigate } from \"../../../app/Helpers\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst UnitJobFormsComponent = (props) => {\r\n  const {\r\n    headers,\r\n    listUnitJobForms,\r\n    renderActionTable,\r\n    onSearch,\r\n    selectedUnitsData,\r\n  } = props;\r\n\r\n  return (\r\n    <div class=\"page-content\">\r\n      <div class=\"mt-5\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 grid-margin stretch-card\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <div class=\"mb-2\">\r\n                  <h6 class=\"ml-1 card-title\">{`Unit : ${selectedUnitsData.name}`}</h6>\r\n                  {/* <p class=\"card-description ml-1\">\r\n                    Silahkan pilih customer untuk menampilkan data \r\n                  </p> */}\r\n                </div>\r\n                <div class=\"row d-flex justify-content-between mb-2\">\r\n                  <div class=\"col-md-7\">\r\n                    <div class=\"row ml-1 mb-3\">\r\n                      <Link to={\"/unit\"}>\r\n                        <CButtonAntd\r\n                          type=\"primary\"\r\n                          icon={<ArrowLeftOutlined />}\r\n                          size=\"middle\"\r\n                          danger\r\n                        >\r\n                          Kembali\r\n                        </CButtonAntd>\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4 mt-4\">\r\n                    <Search\r\n                      name=\"keyword\"\r\n                      placeholder=\"Cari\"\r\n                      onSearch={onSearch}\r\n                      enterButton\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <CTableAntd data={listUnitJobForms} headers={headers} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitJobFormsComponent;\r\n","import { Space } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFormValues, reduxForm } from \"redux-form\";\r\nimport * as UnitJobFormsActions from \"../../Units/Store/UnitJobFormActions\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport UnitJobFormsComponent from \"../Component/UnitJobFormsComponent\";\r\n\r\nconst UnitJobFormsContainer = (props) => {\r\n  const {\r\n    units: { selectedUnitsData },\r\n    unitJobForms: { listUnitJobForms },\r\n    handlePressEdit,\r\n    handlePressDelete,\r\n  } = props;\r\n\r\n  const { dispatch } = store;\r\n  //   const { page, limit, totalPage } = paging;\r\n\r\n  if (listUnitJobForms.length > 0) {\r\n    listUnitJobForms.map((item, index) => {\r\n      listUnitJobForms[index] = {\r\n        ...item,\r\n        no: index + 1,\r\n      };\r\n    });\r\n  }\r\n\r\n  const headers = [\r\n    {\r\n      title: \"No\",\r\n      dataIndex: \"no\",\r\n      key: \"no\",\r\n      width: \"7%\",\r\n      sorter: (a, b) => a.no - b.no,\r\n    },\r\n    {\r\n      title: \"Job Form\",\r\n      dataIndex: \"job_form_name\",\r\n      key: \"job_form_name\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\r\n    },\r\n    {\r\n      title: \"Deskripsi\",\r\n      dataIndex: \"descriptions\",\r\n      key: \"descriptions\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    UnitJobFormsActions.getUnitJobFormsListDataRequested(\"\");\r\n    // getUnitSerialNumber(page, limit);\r\n  }, []);\r\n\r\n  const onSearch = (keyword) => {\r\n    // UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\r\n  };\r\n\r\n  return (\r\n    <UnitJobFormsComponent\r\n      headers={headers}\r\n      selectedUnitsData={selectedUnitsData}\r\n      listUnitJobForms={listUnitJobForms}\r\n      onSearch={onSearch}\r\n      // {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  units: state.units,\r\n  unitJobForms: state.unitJobForms,\r\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UnitJobFormsContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"unitJobForms\",\r\n})(EnhanceContainer);\r\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst WorkingHoursComponent = (props) => {\n  const {\n    headers,\n    listMonitoringEmployee,\n    onChangePagination,\n    paging,\n    onSearch,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Jam Kerja Karyawan</h6>\n                </div>\n\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"No. Service\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Laporan\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listMonitoringEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkingHoursComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as WorkingHoursActions from \"../Store/WorkingHoursActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeMonitoringEmployee,\n  getStatusWorkingHours,\n} from \"../../../app/Helpers\";\nimport { Tag, Typography } from \"antd\";\nimport WorkingHoursComponent from \"../Component/WorkingHoursComponent\";\nimport { exportWorkingHoursReportPdf } from \"../Store/WorkingHoursReport\";\nimport moment from \"moment\";\n\nconst WorkingHoursContainer = (props) => {\n  const {\n    getListWorkingHours,\n    handlePressAddNew,\n    workingHours: { listWorkingHours, paging },\n    branch: { listBranchDropdown },\n    workingHoursFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const printedData = {\n    listWorkingHours,\n    from: moment(),\n    until: moment(),\n  };\n\n  if (listWorkingHours.length > 0) {\n    listWorkingHours.map((item, index) => {\n      listWorkingHours[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"No. Service\",\n      dataIndex: \"no_service\",\n      key: \"no_service\",\n      width: \"20%\",\n      sorter: (a, b) => a.no_service.length - b.no_service.length,\n      render: (no_service) => {\n        return (\n          <Tag style={{ width: 100, textAlign: \"center\" }} color={\"#f0f0f0\"}>\n            <Typography style={{ fontWeight: \"bold\" }}>\n              {no_service ? `${no_service}` : \"-\"}\n            </Typography>\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created\",\n      key: \"created\",\n      width: \"30%\",\n      sorter: (a, b) => a.created.length - b.created.length,\n    },\n    {\n      title: \"Jam Kerja\",\n      dataIndex: \"total_hours\",\n      key: \"total_hours\",\n      render: (total_hours) => {\n        return (\n          <Tag style={{ width: 80, textAlign: \"center\" }} color={\"#1890ff\"}>\n            {total_hours ? `${total_hours} Jam` : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.total_hours - b.total_hours,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n      render: (status) => {\n        let color = getStatusWorkingHours(status).color;\n        return (\n          <Tag style={{ width: 112, textAlign: \"center\" }} color={color}>\n            {status ? getStatusWorkingHours(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Tanggal Selesai\",\n      dataIndex: \"done\",\n      key: \"done\",\n      width: \"30%\",\n      sorter: (a, b) => a.done.length - b.done.length,\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranchDropdown.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListWorkingHours(page, limit);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      WorkingHoursActions.setPagingMonitoringEmployee(paging)\n    );\n    getListWorkingHours(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    WorkingHoursActions.handleSearch(workingHoursFormValues);\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportWorkingHoursReportPdf(printedData, workingHoursFormValues);\n  };\n\n  return (\n    <WorkingHoursComponent\n      headers={headers}\n      listMonitoringEmployee={listWorkingHours}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  workingHours: state.workingHours,\n  branch: state.branch,\n  workingHoursFormValues: getFormValues(\"workingHoursForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListWorkingHours: (page, limit, from, until, keyword) =>\n    WorkingHoursActions.getWorkingHoursListDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WorkingHoursContainer);\n\nexport default reduxForm({\n  form: \"workingHoursForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport moment from \"moment\";\r\nimport { getStatusWorkingHours } from \"../../../app/Helpers\";\r\n\r\nexport const exportWorkingHoursReportPdf = (data, values) => {\r\n  const { listWorkingHours, from, until } = data;\r\n  const startDate = moment(from).format(\"YYYY-MM-DD\");\r\n  const dueDate = moment(until).format(\"YYYY-MM-DD\");\r\n  const workingHoursList = [];\r\n\r\n  listWorkingHours.map((item, index) => {\r\n    workingHoursList.push({\r\n      no: index + 1,\r\n      employeeNik: item.employee_nik,\r\n      employeeName: item.employee_name,\r\n      noService: item.no_service,\r\n      customerName: item.customer_name,\r\n      type: item.job_type,\r\n      totalHours: item.total_hours,\r\n      status: item.status ? getStatusWorkingHours(item.status).value : \"-\",\r\n      createdDate: item.created,\r\n      doneDate: item.done,\r\n    });\r\n  });\r\n\r\n  const doc = new jsPDF();\r\n  // doc.text({from_left}, {from_top})\r\n  doc.setFontSize(20);\r\n  doc.setFont(\"courier\");\r\n  doc.text(\"Jam Kerja Karyawan\", 100, 20, \"center\");\r\n  doc.setFontSize(16);\r\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\r\n\r\n  doc.setFontSize(12);\r\n\r\n  //   Line 1\r\n  doc.text(15, 42, `Dari Tanggal`);\r\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\r\n  doc.text(15, 49, `Sampai Tanggal`);\r\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\r\n\r\n  // Check if filtered by branch\r\n  if (values) {\r\n    if (values.branch) {\r\n      const splitBranch = values.branch.split(\"|\");\r\n      doc.text(15, 56, `Cabang`);\r\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\r\n    }\r\n  }\r\n\r\n  // drawCell is function for styling font, color and add content to every cell\r\n  const drawCell = (dataCell) => {\r\n    // --> This for custom styling font too\r\n    // else if (dataCell.column.dataKey === \"no\") {\r\n    //   docCell.setFont(\"Verdana\", \"bold\");\r\n    //   docCell.setFontSize(12);\r\n    // }\r\n  };\r\n\r\n  // --> didParseCell is function for styling border, line, etc of every cell\r\n  const didParseCell = (dataCell) => {\r\n    let s = dataCell.cell.styles;\r\n    s.lineColor = [0, 0, 0];\r\n    s.lineWidth = 0.1;\r\n    s.font = \"courier\";\r\n\r\n    // --> This for spesific custom cell with spesific index\r\n    // if (dataCell.row.index === 1) {\r\n    //   s.lineColor = [0, 0, 0];\r\n    //   s.borders = \"t\";\r\n    // }\r\n  };\r\n\r\n  const headTable = [\r\n    [\r\n      \"No\",\r\n      \"NIK\",\r\n      \"Nama Karyawan\",\r\n      \"No. Service\",\r\n      \"Nama Customer\",\r\n      \"Dibuat\",\r\n      \"Jam Kerja\",\r\n      \"Status\",\r\n      \"Tanggal Selesai\",\r\n    ],\r\n  ];\r\n\r\n  doc.autoTable({\r\n    startY: values ? 65 : 60,\r\n    body: workingHoursList,\r\n    theme: \"plain\",\r\n    head: headTable,\r\n    headStyles: { halign: \"center\", valign: \"middle\" },\r\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\r\n    columns: [\r\n      { header: \"No\", dataKey: \"no\" },\r\n      { header: \"NIK\", dataKey: \"employeeNik\" },\r\n      { header: \"Nama Karyawan\", dataKey: \"employeeName\" },\r\n      { header: \"No. Service\", dataKey: \"noService\" },\r\n      { header: \"Nama Customer\", dataKey: \"customerName\" },\r\n      { header: \"Dibuat\", dataKey: \"createdDate\" },\r\n      { header: \"Jam Kerja\", dataKey: \"totalHours\" },\r\n      { header: \"Status\", dataKey: \"status\" },\r\n      { header: \"Tanggal Selesai\", dataKey: \"doneDate\" },\r\n    ],\r\n    willDrawCell: drawCell,\r\n    didParseCell: didParseCell,\r\n    columnStyles: {\r\n      0: { columnWidth: 28 },\r\n      1: { columnWidth: 20 },\r\n      // 2: { halign: \"center\" },\r\n      // 3: { halign: \"center\" },\r\n      // 4: { halign: \"center\" },\r\n      // 5: { halign: \"center\" },\r\n      // 6: { halign: \"center\" },\r\n    },\r\n    tableLineColor: [0, 0, 0],\r\n    tableLineWidth: 0.3,\r\n  });\r\n\r\n  //   Export\r\n  doc.save(\"working-hours.pdf\");\r\n};\r\n","import \"react-toastify/dist/ReactToastify.css\";\n\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch, withRouter } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer } from \"react-toastify\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport TemplateContainer from \"../modules/Template/Container/TemplateContainer\";\nimport withTemplate from \"./withTemplate\";\n\n// Pages\nimport DashboardContainer from \"../modules/Dashboard/Container/DashboardContainer\";\nimport LoginContainer from \"../modules/Auth/Container/LoginContainer\";\nimport InternalServiceContainer from \"../modules/InternalService/Container/InternalServiceContainer\";\nimport ExternalServiceContainer from \"../modules/ExternalService/Container/ExternalServiceContainer\";\nimport MonitoringEmployeeContainer from \"../modules/MonitoringEmployee/Container/MonitoringEmployeeContainer\";\nimport ReportServiceRepairContainer from \"../modules/ReportServiceRepair/Container/ReportServiceRepairContainer\";\nimport ReportEmployeeContainer from \"../modules/ReportEmployee/Container/ReportEmployeeContainer\";\nimport ListServicesContainer from \"../modules/ListServices/Container/ListServicesContainer\";\nimport AdminContainer from \"../modules/Admin/Container/AdminContainer\";\nimport NotFoundPage from \"../components/NotFound/NotFound\";\nimport AuthMiddleware from \"./AuthMiddleware\";\nimport DetailServiceTransactionContainer from \"../modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer\";\nimport RolesContainer from \"../modules/Roles/Container/RolesContainer\";\nimport EmployeesListContainer from \"../modules/Employees/Container/EmployeesListContainer\";\nimport EmployeeEditContainer from \"../modules/Employees/Container/EmployeeEditContainer\";\nimport BranchContainer from \"../modules/Branch/Container/BranchContainer\";\nimport JobFormsContainer from \"../modules/JobForms/Container/JobFormsContainer\";\nimport FormWizardIdentificationContainer from \"../modules/Identification/Container/Wizard/FormWizardIdentificationContainer\";\nimport ListIdentificationContainer from \"../modules/Identification/Container/ListIdentificationContainer\";\nimport MachineConfigurationContainer from \"../modules/MachineConfiguration/Container/MachineConfigurationContainer\";\nimport UnitsContainer from \"../modules/Units/Container/UnitsContainer\";\nimport CustomerContainer from \"../modules/Customers/Container/CustomerContainer\";\nimport ToolsContainer from \"../modules/Tools/Container/ToolsContainer\";\nimport FormCategoryContainer from \"../modules/FormCategory/Container/FormCategoryContainer\";\nimport UnitModelsContainer from \"../modules/Units/Container/UnitModelsContainer\";\nimport UnitFieldsContainer from \"../modules/Units/Container/UnitFields/UnitFieldsContainer\";\nimport ReportIdentificationContainer from \"../modules/ReportIdentification/Container/ReportIdentificationContainer\";\nimport DivisionContainer from \"../modules/Division/Container/DivisionContainer\";\nimport EmployeeToolsContainer from \"../modules/Employees/Container/EmployeeTools/EmployeeToolsContainer\";\nimport DivisionUnitContainer from \"../modules/Division/Container/DivisionUnit/DivisionUnitContainer\";\nimport DetailServiceReportContainer from \"../modules/ReportPdf/Containers/DetailServiceReportContainer\";\nimport UnitSerialNumberContainer from \"../modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer\";\nimport UnitJobFormsContainer from \"../modules/Units/Container/UnitJobFormsContainer\";\nimport WorkingHoursContainer from \"../modules/WorkingHours/Container/WorkingHoursContainer\";\nimport Sidebar from \"../components/Sidebar/Sidebar\";\n\nconst Navigation = () => {\n  const authenticatedPage = (\n    component,\n    footerImg,\n    menuPath = \"\",\n    isSecureRoute = false,\n    footer\n  ) => {\n    return AuthMiddleware(\n      withTemplate(TemplateContainer, component, footerImg, footer),\n      menuPath,\n      isSecureRoute\n    );\n  };\n\n  const templating = (component, isLandingPage) => {\n    return withTemplate(TemplateContainer, component, isLandingPage);\n  };\n\n  const Login = templating(LoginContainer, false);\n  const NotFound = templating(NotFoundPage, false);\n  const Admin = authenticatedPage(AdminContainer, true, \"/admin\", true);\n  const Roles = authenticatedPage(RolesContainer, true, \"/role\", true);\n  const JobForms = authenticatedPage(\n    JobFormsContainer,\n    true,\n    \"/jobforms\",\n    true\n  );\n  const Branches = authenticatedPage(BranchContainer, true, \"/cabang\", true);\n  const EmployeeList = authenticatedPage(\n    EmployeesListContainer,\n    true,\n    \"/employees\",\n    true\n  );\n  const EmployeeTools = authenticatedPage(\n    EmployeeToolsContainer,\n    true,\n    \"/employee-tool\"\n  );\n  const Division = authenticatedPage(\n    DivisionContainer,\n    true,\n    \"/division\",\n    true\n  );\n  const DivisionUnit = authenticatedPage(\n    DivisionUnitContainer,\n    true,\n    \"/division-unit\"\n  );\n  const EditEmployee = authenticatedPage(\n    EmployeeEditContainer,\n    true,\n    \"/edit-employee\"\n  );\n  const Dashboard = authenticatedPage(\n    DashboardContainer,\n    true,\n    \"/dashboard\",\n    false\n  );\n  const Units = authenticatedPage(UnitsContainer, true, \"/unit\", true);\n  const UnitModels = authenticatedPage(\n    UnitModelsContainer,\n    true,\n    \"/unit-models\"\n  );\n  const UnitFields = authenticatedPage(\n    UnitFieldsContainer,\n    true,\n    \"/unit-fields\"\n  );\n  const UnitJobForms = authenticatedPage(\n    UnitJobFormsContainer,\n    true,\n    \"/unit-job-forms\"\n  );\n  const UnitSerialNumber = authenticatedPage(\n    UnitSerialNumberContainer,\n    true,\n    \"/unit-serial-number\"\n  );\n  const Tools = authenticatedPage(ToolsContainer, true, \"/tools\");\n  const Customers = authenticatedPage(CustomerContainer, true, \"/customer\");\n  const FormCategory = authenticatedPage(\n    FormCategoryContainer,\n    true,\n    \"/category\",\n    true\n  );\n  const MachineConfiguration = authenticatedPage(\n    MachineConfigurationContainer,\n    true,\n    \"/machine\",\n    true\n  );\n  const InternalService = authenticatedPage(\n    InternalServiceContainer,\n    true,\n    \"/internal-service\",\n    true\n  );\n  const ExternalService = authenticatedPage(\n    ExternalServiceContainer,\n    true,\n    \"/external-service\",\n    true\n  );\n  const MonitoringEmployee = authenticatedPage(\n    MonitoringEmployeeContainer,\n    true,\n    \"/monitoring-employee\",\n    true\n  );\n  const ReportServiceRepair = authenticatedPage(\n    ReportServiceRepairContainer,\n    true,\n    \"/report_trans\",\n    true\n  );\n  const ReportEmployee = authenticatedPage(\n    ReportEmployeeContainer,\n    true,\n    \"/report_employee\",\n    true\n  );\n  const WorkingHours = authenticatedPage(\n    WorkingHoursContainer,\n    true,\n    \"/working-hours\",\n    true\n  );\n  const ListServices = authenticatedPage(\n    ListServicesContainer,\n    true,\n    \"/list_service\",\n    true\n  );\n  const ReportIdentification = authenticatedPage(\n    ReportIdentificationContainer,\n    true,\n    \"/report_identification\",\n    true\n  );\n  const DetailService = authenticatedPage(\n    DetailServiceTransactionContainer,\n    true,\n    \"/detail-services\"\n  );\n  const FormWizardIdentification = authenticatedPage(\n    FormWizardIdentificationContainer,\n    true,\n    \"/form-identification\"\n  );\n  const ListIdentification = authenticatedPage(\n    ListIdentificationContainer,\n    true,\n    \"/identification\",\n    true\n  );\n\n  return (\n    <>\n      <Helmet titleTemplate=\"PT. Rutan - \" defaultTitle=\"PT. Rutan\"></Helmet>\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates={true}\n        position=\"top-right\"\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"\n        progressBar={true}\n        closeOnToastrClick={true}\n      />\n      <ToastContainer autoClose={2000} />\n      <Router>\n        <Switch>\n          <Route exact path=\"/\" component={Dashboard} />\n          <Route exact path=\"/dashboard\" component={Dashboard} />\n          <Route exact path=\"/auth\" component={Login} />\n          <Route exact path=\"/admin\" component={Admin} />\n          <Route exact path=\"/role\" component={Roles} />\n          <Route exact path=\"/cabang\" component={Branches} />\n          <Route exact path=\"/machine\" component={MachineConfiguration} />\n          <Route exact path=\"/jobforms\" component={JobForms} />\n          <Route exact path=\"/unit\" component={Units} />\n          <Route exact path=\"/unit-models\" component={UnitModels} />\n          <Route exact path=\"/unit-fields\" component={UnitFields} />\n          <Route exact path=\"/unit-job-forms\" component={UnitJobForms} />\n          <Route\n            exact\n            path=\"/unit-serial-number\"\n            component={UnitSerialNumber}\n          />\n          <Route exact path=\"/tools\" component={Tools} />\n          <Route exact path=\"/customer\" component={Customers} />\n          <Route exact path=\"/category\" component={FormCategory} />\n          <Route exact path=\"/employees\" component={EmployeeList} />\n          <Route exact path=\"/division\" component={Division} />\n          <Route exact path=\"/division-unit\" component={DivisionUnit} />\n          <Route exact path=\"/edit-employee\" component={EditEmployee} />\n          <Route exact path=\"/internal-service\" component={InternalService} />\n          <Route exact path=\"/external-service\" component={ExternalService} />\n          <Route exact path=\"/employee-tools\" component={EmployeeTools} />\n          <Route\n            exact\n            path=\"/report-transaction\"\n            component={DetailServiceReportContainer}\n          />\n          <Route\n            exact\n            path=\"/monitoring-employee\"\n            component={MonitoringEmployee}\n          />\n          <Route exact path=\"/report_trans\" component={ReportServiceRepair} />\n          <Route exact path=\"/list_service\" component={ListServices} />\n          <Route exact path=\"/detail-services\" component={DetailService} />\n          <Route exact path=\"/report_employee\" component={ReportEmployee} />\n          <Route exact path=\"/working-hours\" component={WorkingHours} />\n          <Route\n            exact\n            path=\"/report_identification\"\n            component={ReportIdentification}\n          />\n          <Route\n            exact\n            path=\"/form-identification\"\n            component={FormWizardIdentification}\n          />\n          <Route exact path=\"/identification\" component={ListIdentification} />\n          <Route path={\"*\"} component={NotFound} />\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default withRouter(Navigation)","import \"react-redux-toastr/lib/css/react-redux-toastr.min.css\";\nimport \"antd/dist/antd.css\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport history from \"./app/History\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./app/ConfigureStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Navigation from \"./app/Navigation\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nfunction App({ context }) {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ConnectedRouter history={history}>\n          <BrowserRouter>\n            <Navigation />\n          </BrowserRouter>\n        </ConnectedRouter>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}