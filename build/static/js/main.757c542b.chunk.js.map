{"version":3,"sources":["app/History.js","app/Saga/AppSaga.js","app/Saga/SagaMiddleware.js","app/axios/ConfigAxios.js","app/axios/Invoke.js","modules/App/Store/ComponentAction.js","modules/Auth/Store/AuthAction.js","modules/Auth/Store/AuthReducer.js","app/Helpers.js","modules/Roles/Store/RolesActions.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionAction.js","modules/ListServices/Store/ListServicesActions.js","modules/ListServices/Store/ListServicesReducer.js","modules/App/Store/ComponentReducer.js","modules/Customers/Store/CustomersActions.js","modules/Customers/Store/CustomersReducer.js","modules/Admin/Store/AdminActions.js","modules/Admin/Store/AdminReducer.js","modules/Roles/Store/RolesReducer.js","modules/MasterData/Store/MasterDataActions.js","modules/Employees/Store/EmployeesActions.js","modules/Employees/Store/EmployeesReducer.js","modules/Employees/Store/EmployeeTools/EmployeeToolsActions.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReducer.js","modules/MasterData/Store/MasterDataReducer.js","modules/Units/Store/UnitsActions.js","modules/Units/Store/UnitsReducer.js","modules/JobForms/Store/JobFormsActions.js","modules/JobForms/Store/JobFormsReducer.js","modules/Branch/Store/BranchActions.js","modules/Branch/Store/BranchReducer.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer.js","modules/Units/Store/UnitModelActions.js","modules/Units/Store/UnitModelReducer.js","modules/ExternalService/Store/ExternalServiceActions.js","modules/ExternalService/Store/ExternalServiceReducer.js","modules/Identification/Store/IdentificationActions.js","modules/Identification/Store/IdentificationReducer.js","modules/MachineConfiguration/Store/MachineConfigurationActions.js","modules/MachineConfiguration/Store/MachineConfigurationReducer.js","modules/Tools/Store/ToolsActions.js","modules/Tools/Store/ToolsReducer.js","modules/FormCategory/Store/FormCategoryActions.js","modules/FormCategory/Store/FormCategoryReducer.js","modules/Units/Store/UnitFieldsActions.js","modules/Units/Store/UnitFieldsReducer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeActions.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReducer.js","modules/ReportServiceRepair/Store/ReportServiceRepairActions.js","modules/ReportServiceRepair/Store/ReportServiceRepairReducer.js","modules/ReportEmployee/Store/ReportEmployeeActions.js","modules/ReportEmployee/Store/ReportEmployeeReducer.js","modules/Division/Store/DivisionActions.js","modules/Division/Store/DivisionReducer.js","modules/Division/Store/DivisionUnitActions.js","modules/Division/Store/DivisionUnitReducer.js","modules/Dashboard/Store/DashboardActions.js","modules/Dashboard/Store/DashboardReducer.js","modules/Units/Store/UnitSerialNumberActions.js","modules/Units/Store/UnitSerialNumberReducer.js","modules/Units/Store/UnitJobFormActions.js","modules/Units/Store/UnitJobFormsReducer.js","modules/WorkingHours/Store/WorkingHoursActions.js","modules/WorkingHours/Store/WorkingHoursReducer.js","app/RootReducers.js","app/ConfigureStore.js","app/FormHelpers.js","components/CGlobalOverlay/CGlobalOverlay.tsx","components/Sidebar/Sidebar.js","components/Footer/Footer.js","components/Navbar/Navbar.js","modules/Template/Component/TemplateComponent.js","modules/Auth/Selector/AuthSelector.js","modules/App/Selector/AppSelector.js","modules/Template/Container/TemplateContainer.js","app/withTemplate.js","components/CButton/CButtonAntd.tsx","modules/Dashboard/Component/DashboardComponent.js","app/InitializeApp.js","modules/Dashboard/Container/DashboardContainer.js","components/CInput/CInput.tsx","modules/Auth/Component/LoginComponent.js","app/validateForm.js","modules/Auth/Container/LoginContainer.js","components/CSelect/CSelect.js","components/CDatePicker/CDatePicker.js","components/CButton/CButton.tsx","modules/InternalService/Component/InternalServiceComponent.js","modules/InternalService/Store/InternalServiceActions.js","modules/InternalService/Container/InternalServiceContainer.js","modules/ExternalService/Component/ExternalServiceComponent.js","modules/ExternalService/Container/ExternalServiceContainer.js","modules/MonitoringEmployee/Component/MonitoringEmployeeComponent.js","modules/MonitoringEmployee/Container/MonitoringEmployeeContainer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReport.js","modules/ReportServiceRepair/Component/ReportServiceRepairComponent.js","modules/ReportServiceRepair/Container/ReportServiceRepairContainer.js","modules/ReportEmployee/Component/ReportEmployeeComponent.js","modules/ReportEmployee/Container/ReportEmployeeContainer.js","modules/ListServices/Component/ListServicesComponent.js","modules/ListServices/Container/ListServicesContainer.js","components/CTable/CTableAntd.js","components/CModal/CModal.tsx","modules/Admin/Component/AdminModalComponent.js","modules/Admin/Container/AdminModalContainer.js","modules/Admin/Component/AdminComponent.js","modules/Admin/Container/AdminContainer.js","components/NotFound/NotFound.js","app/AuthMiddleware.js","components/CBadgeText/CBadgeText.tsx","modules/DetailServiceTransaction/Component/AddEmployeeModalComponent.js","modules/DetailServiceTransaction/Container/AddEmployeeModalContainer.js","property/colors.js","modules/DetailServiceTransaction/Component/RejectedModalComponent.js","modules/DetailServiceTransaction/Container/RejectedModalContainer.js","modules/DetailServiceTransaction/Component/EditModalTransactionComponent.js","modules/DetailServiceTransaction/Container/EditModalTransactionContainer.js","modules/DetailServiceTransaction/Component/EditModalDailiesComponent.js","modules/DetailServiceTransaction/Container/EditModalDailiesContainer.js","modules/DetailServiceTransaction/Component/InsertImageModalComponent.js","modules/DetailServiceTransaction/Container/InsertImageModalContainer.js","modules/DetailServiceTransaction/Component/EditModalSummaryComponent.js","modules/DetailServiceTransaction/Container/EditModalSummaryContainer.js","modules/DetailServiceTransaction/Component/DetailServiceTransactionComponent.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelEmployeeComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelEmployeeContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelSummaryComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelSummaryContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelImagesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelImagesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelDailiesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelDailiesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelHistoriesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelHistoriesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelRejectionsComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelRejectionsContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelChecklistComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelChecklistContainer.js","modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer.js","modules/Roles/Component/RolesEditModalComponent.js","modules/Roles/Container/RolesEditModalContainer.js","modules/Roles/Component/RolesComponent.js","modules/Roles/Container/RolesContainer.js","modules/Employees/Component/EmployeesListComponent.js","modules/Employees/Container/EmployeesListContainer.js","modules/Employees/Component/EmployeeEditComponent.js","modules/Employees/Container/EmployeeEditContainer.js","modules/Branch/Component/BranchModalComponent.js","modules/Branch/Container/BranchModalContainer.js","modules/Branch/Component/BranchComponent.js","modules/Branch/Container/BranchContainer.js","modules/JobForms/Component/JobFormsModalComponent.js","modules/JobForms/Container/JobFormsModalContainer.js","modules/JobForms/Component/JobFormsComponent.js","modules/JobForms/Container/JobFormsContainer.js","modules/Identification/Component/Wizard/ContentStepOneComponent.js","modules/Identification/Component/Wizard/ContentUnitComponent.js","modules/Identification/Component/Wizard/ContentSparePartComponent.js","modules/Identification/Component/Wizard/FormWizardIdentificationComponent.js","modules/Identification/Component/Wizard/ContentMachineConfigurationComponent.js","modules/Identification/Component/Wizard/ContentStepOneRegularComponent.js","modules/Identification/Container/Wizard/FormWizardIdentificationContainer.js","modules/Identification/Component/IdentificationModalComponent.js","modules/Identification/Container/IdentificationModalContainer.js","modules/Identification/Component/ListIdentificationComponent.js","modules/Identification/Container/ListIdentificationContainer.js","modules/MachineConfiguration/Component/MachineConfigurationModalComponent.js","modules/MachineConfiguration/Container/MachineConfigurationModalContainer.js","modules/MachineConfiguration/Component/MachineConfigurationComponent.js","modules/MachineConfiguration/Container/MachineConfigurationContainer.js","modules/Units/Component/UnitsModalComponent.js","modules/Units/Container/UnitsModalContainer.js","modules/Units/Component/UnitsComponent.js","modules/Units/Container/UnitsContainer.js","modules/Customers/Component/CustomerModalComponent.js","modules/Customers/Container/CustomerModalContainer.js","modules/Customers/Component/CustomerComponent.js","modules/Customers/Container/CustomerContainer.js","modules/Tools/Component/ToolsModalComponent.js","modules/Tools/Container/ToolsModalContainer.js","modules/Tools/Component/ToolsComponent.js","modules/Tools/Container/ToolsContainer.js","modules/FormCategory/Component/FormCategoryModalComponent.js","modules/FormCategory/Container/FormCategoryModalContainer.js","modules/FormCategory/Component/FormCategoryComponent.js","modules/FormCategory/Container/FormCategoryContainer.js","modules/Units/Component/UnitsModelsModalComponent.js","modules/Units/Container/UnitModelsModalContainer.js","modules/Units/Component/UnitModelsComponent.js","modules/Units/Container/UnitModelsContainer.js","modules/Units/Component/UnitFields/UnitFieldsModalComponent.js","modules/Units/Container/UnitFields/UnitFieldsModalContainer.js","modules/Units/Component/UnitFields/UnitFieldsComponent.js","modules/Units/Container/UnitFields/UnitFieldsContainer.js","modules/ReportIdentification/Store/ReportIdentificationActions.js","modules/ReportIdentification/Component/ReportIdentificationComponent.js","modules/ReportIdentification/Container/ReportIdentificationContainer.js","modules/Division/Component/DivisionModalComponent.js","modules/Division/Container/DivisionModalContainer.js","modules/Division/Component/DivisionComponent.js","modules/Division/Container/DivisionContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsModalComponent.js","modules/Employees/Container/EmployeeTools/EmployeeToolsModalContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsComponent.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReport.js","modules/Employees/Container/EmployeeTools/EmployeeToolsContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitModalComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitModalContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitContainer.js","modules/ReportPdf/Components/DetailServiceReportComponent.js","modules/ReportPdf/Containers/DetailServiceReportContainer.js","modules/Units/Component/UnitSerialNumber/ModalUnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/ModalUnitSerialNumberContainer.js","modules/Units/Component/UnitSerialNumber/UnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer.js","modules/Units/Component/UnitJobFormsComponent.js","modules/Units/Container/UnitJobFormsContainer.js","modules/WorkingHours/Component/WorkingHoursComponent.js","modules/WorkingHours/Container/WorkingHoursContainer.js","modules/WorkingHours/Store/WorkingHoursReport.js","app/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["history","createBrowserHistory","basename","forceRefresh","handleErrorProcess","handleErrorAction","action","errorData","response","undefined","toastrConfirmOptions","onOk","window","location","reload","okText","disableCancel","toastr","confirm","error","responseStatus","status","console","log","data","ErrorCode","toastMessage","class","id","MessageKey","dataErr","Data","Failures","ErrorKey","Message","toast","takeEvery","all","fork","ConfigAxios","axios","create","baseURL","process","headers","Accept","timeout","defaults","delete","interceptors","request","use","requestFulfilled","method","Promise","resolve","requestRejected","_","isEmpty","reject","responseFulfilled","responseRejected","warning","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Invoke","headersConfigDelete","submitLogin","post","submitLoginEmployee","getListServices","page","limit","keyword","type","employeeId","get","deleteJobServiceById","jobId","getOneServices","getListAdmin","getAdminById","adminId","addAdmin","updateAdmin","put","deleteAdminById","getListAdminRoles","getAdminRolesById","customerId","addAdminRoles","updateAdminRoles","deleteAdminRolesById","getEmployeeRoles","getEmployeeTools","addEmployeeRole","deleteEmployeeRole","getCustomerList","branchId","getCustomerById","addCustomer","updateCustomer","deleteCustomerById","getEmployeeList","roleId","divisionId","getEmployeeById","addEmployee","updateEmployee","deleteEmployeeById","getListEmployeeTools","getEmployeeToolsById","addEmployeeTools","updateEmployeeTools","deleteEmployeeToolsById","employeeToolsId","getListRole","getRoleById","addRole","updateRole","deleteRoleById","getProvinceList","getCityList","provinceId","getDashboardProgressData","addInternalService","updateJobService","setFinishedService","setApprovedService","setRejectedService","payload","getServicesEmployee","addNewEmployeeService","setStatusEmployeeService","getJobServiceSummary","unitId","getJobServiceMedia","getJobServiceDailies","updateJobServiceDailies","getChecklistData","unitModelId","getRejectedData","getJobServiceHistories","addJobServiceMedia","addJobServiceDaily","updateSummary","setJobToProgress","updateChecklist","getUnitList","addUnit","updateUnit","deleteUnitById","getListUnitModel","addUnitSerialNumber","updateUnitSerialNumber","unitSerialNumberId","deleteUnitSerialNumber","getUnitSerialNumber","addUnitModel","updateUnitModel","deleteUnitModelById","getListUnitFields","getListUnitJobForms","jobFormId","addUnitFields","updateUnitFields","deleteUnitFieldsById","unitfieldsId","getListJobForm","keyowrd","addJobForms","updateJobForms","deleteJobForms","jobFormsId","getListBranch","deleteBranchById","addBranch","updateBranch","getListMenu","addMenuRole","getMenuByRoleId","deleteMenuByMenuRoleId","menuRoleId","getListEngine","addEngine","updateEngine","deleteEngine","machineId","getListTools","addTool","updateTool","deleteTool","toolId","getFormCategory","addFormCategory","updateFormCategory","deleteFormCategory","categoryFormId","getIdentificationList","addIdentification","updateIdentificationMilling","updateIdentificationRegular","deleteIdentificationById","identificationId","getDivisionList","addDivision","updateDivision","deleteDivision","getDivisionUnitList","addDivisionUnit","getReportMonitoringEmployee","from","until","getReportServiceRepair","getReportEmployee","getWorkingHours","getTransactionPdfUrl","downloadPdfFromUrl","url","responseType","PROCESS_GLOBAL_LOADING","PROCESS_FORM_GLOBAL_LOADING","SHOW_GLOBAL_MODAL","RESET_ALL_LOADING","setGlobalLoading","setGlobalModal","setGlobalFormLoading","resetAllGlobalLoadingProcess","dispatch","store","SET_ACCESS_TOKEN_DATA","SET_USER_DETAIL_DATA","SET_ERROR_LOGIN","setUserDetail","setErrorLogin","appendItem","a","callback","accessToken","handleSubmitLogin","values","username","password","then","setTimeout","push","catch","onRejected","dataResponseRejected","initialState","userDetail","avatar","navigate","path","getIndex","currentpage","pageNumbers","startIndex","endIndex","i","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","SelectLocation","value","label","SelectType","SelectInstanceType","SelectStatus","SelectStatusServices","SelectStatusMilling","SelectInstanceTypeRegular","SelectMilling","enumTypeInternalServices","enumTypeExternalServices","enumWarranty","enumTypeActivities","warrantyMonths","toString","getProvinceEnum","SelectProvince","map","item","index","name","getCitiesEnum","SelectCities","enumSelectGenerator","enumName","SelectEnum","getUnitModelEnum","SelectUnitModel","getMachineConf","SelectMachines","replace","toLowerCase","getStatus","statusItem","toUpperCase","color","getStatusWorkingHours","categoryServices","categoryMonitoringServices","enumTypeMonitoringEmployee","isBlockedRoleDetailService","role","isBlocked","isBlockedRoleCustomerView","SET_LIST_ROLES","SET_SELECTED_ROLE_ID","SET_SELECTED_ROLE_DETAIL","SET_FORM_STATUS","RESET_STATE","SET_SELECTED_ROLE_MENU","setSelectedRoleId","setFormStatus","setSelectedRoleDetail","setSelectedRoleMenu","showToast","success","getListRolesRequested","mapDetailRoleToForm","getState","roles","selectedRoleDetail","change","description","getMenuByRolesId","subItem","menu_id","resetForm","doAddRoleProcess","menuSelected","splitDescription","split","length","replaceAll","ComponentActions","doDeleteMenuRoleProcess","menuId","menuListApi","filter","x","menu","doAddMenuRoleProcess","role_id","view","insert","update","doSaveMenuRole","newMenuSelected","currentMenuSelected","selectedRoleMenu","selectedRoleId","newMenu","doEditRoleProcess","doDeleteRoleProcess","deleteRoleRequested","cancelText","saveRoleRequested","SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA","SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA","SET_GROUPING_SUMMARY_DATA","SET_SINGLE_SUMMARY_DATA","SET_GROUPING_CHECKLIST_DATA","SET_SELECTED_SERVICES_SUMMARY_DATA","SET_SELECTED_SERVICES_MEDIA_DATA","SET_SELECTED_SERVICES_DAILIES_DATA","SET_SELECTED_SERVICES_HISTORIES_DATA","SET_SELECTED_SERVICES_CHECKLIST_DATA","SET_SELECTED_SERVICES_REJECTED_DATA","SET_EDIT_TRANSACTION_MODAL","SET_REJECTIONS_MODAL","SET_EDIT_DAILIES_MODAL","SET_SELECTED_EDIT_DAILIES_DATA","SET_SELECTED_UNIT","RESET_DETAIL_SERVICE","SET_INSERT_MEDIA_MODAL","SET_TYPE_FORM_DAILIES","SET_EDIT_SUMMARY_MODAL","setRejectionsModal","setEditTransactionModal","setGroupingSelectedServicesMediaData","setGroupingSummaryData","setSingleSummaryData","setGroupingChecklistData","setEditDailiesModal","setEditSummaryModal","setInsertMediaModal","setSelectedServicesEmployeeListData","setSelectedServiceDailiesData","setSelectedServiceHistoriesData","setSelectedEditDailiesData","setTypeFormDailies","getJobServiceEmployeeList","serviceEmployeeList","results","subIitem","active","employee_service_id","employee_id","employee","logs","getJobServiceRejections","handleAddNewEmployeeService","setStatusEmployee","employeeServiceId","isActive","doRejectServiceProcess","reason","doEditServiceProcess","warranty","warrantyYears","start","moment","startDate","format","due","dueDate","job_perform","jobPerform","warranty_month","warranty_year","setSelectedJobService","units","unit_models","handlePressEditRequested","handlePressRejectedRequested","doEditDailiesProcess","dataService","services","selectedJobService","typeForm","detailService","typeFormDailies","insertPayload","splitActivity","activityType","timeStart","timeStartEnd","timeEnd","dailyStart","dailyEnd","endDate","title","daily_start","daily_end","doEditSummaryProcess","summary","is_external","getUnitSummary","res","resetModalSummary","doAddSummaryProcess","handlePressEditDailiesRequested","handlePressEditSummaryRequested","doInsertMedia","splitUnit","unit","base64","imageUrl","media","getUnitMedia","handlePressInsertMediaRequested","mapDetailTransactionToForm","end","mapDailiesToForm","selectedEditDailies","mulai","selesai","deskripsi","downloadTransactionPdf","dataTransactionPdf","downloadUrl","pdf","fileDownload","filename","resetFormModalImage","groupingSummaryList","singleSummary","sequence","setDispatch","dataSummary","err","unitName","unit_name","groupingMediaList","dataMedia","imageList","image","SET_LIST_SERVICES","SET_SELECTED_JOB_SERVICE","SET_PAGING_LIST_SERVICE","SET_SELECTED_JOB_SERVICE_ID","SET_DASHBOARD_LIST_SERVICES","setListServices","setPagingListService","setSelectedJobServiceId","getListServicesRequested","paging","totalPage","getTopTenService","handleSearch","filterValues","splitTypeService","typeService","splitStatusService","statusService","handlePressEdit","doDeleteJobServiceProcess","deleteJobServiceRequested","handlePressActionsRequested","doCallActionProcess","listServices","dashboardListServices","selectedJobServiceId","isLoadingGlobal","isLoadingFormGlobal","isModalVisible","SET_CUSTOMER_LIST_DATA","SET_PAGING_CUSTOMER","SET_SELECTED_CUSTOMER_DATA","SET_SELECTED_CUSTOMER_ID","SET_CUSTOMER_LIST_DATA_DROPDOWN","setCustomerListData","setCustomerListDataDropdown","setPagingCustomer","setSelectedCustomerData","setSelectedCustomerId","getCustomerListDataByPaging","isDropdownData","doDeleteCustomerProcess","branch","doAddCustomerProcess","customers","province","cityId","city","branch_id","province_id","city_id","phone","work_hour","workHour","pic","pic_phone","picPhone","address","doEditBranchProcess","saveCustomerRequested","mapDetailCustomerToForm","selectedCustomerData","province_name","city_name","branch_name","deleteCustomerRequested","listCustomers","listCustomersDropdown","formStatus","selectedCustomerId","SET_LIST_ADMIN","SET_PAGING_ADMIN","SET_SELECTED_ADMIN_ID","SET_SELECTED_ADMIN_DATA","setListAdmin","setPagingAdmin","setSelectedAdminId","setSelectedAdminData","getListAdminRequested","doAddAdminProcess","admins","fullname","doEditAdminProcess","doDeleteAdminProcess","saveAdminRequested","mapDetailAdminToForm","selectedAdminData","deleteAdminRequested","listAdmin","selectedAdminId","listRoles","SET_PROVINCE_LIST_DATA","SET_CITY_LIST_DATA","SET_MENU_LIST_DATA","setCityListData","loadProvinceListData","loadCityListData","loadMenuListData","SET_EMPLOYEE_LIST_DATA","SET_SELECTED_EMPLOYEE_ID","SET_SELECTED_EMPLOYEE_DATA","SET_SELECTED_ROLE_EMPLOYEE","SET_PAGING_EMPLOYEES","SET_EMPLOYEE_LIST_DROPDOWN","setEmployeeListData","setSelectedEmployeeId","setSelectedEmployeeData","setSelectedRoleEmployee","setPagingEmployees","loadEmployeeListData","loadEmployeeDataDropdown","getEmployeeDataByIdRequested","getRolesByEmployeeId","setAutoPopulateEmployee","selectedEmployeeData","employees","listBranch","defaultBranch","MasterDataActions","doAddEmployeeProcess","selectedRoles","nik","photo","doEditEmployeeProcess","roleSelected","doSaveEmployeeRole","doAddEmployeeRoleProcess","newRoleId","doDeleteAllEmployeeRoleProcess","roleListApi","doDeleteEmployeeProcess","newRoleSelected","currentRoleSelected","selectedRoleEmployee","selectedEmployeeId","saveEmployeeRequested","mapDetailEmployeeToForm","deleteEmployeeRequested","splitRole","splitBranch","splitDivision","division","listEmployees","listEmployeeDropdown","SET_EMPLOYEE_TOOL_LIST_DATA","SET_SELECTED_EMPLOYEE_TOOLS_ID","SET_SELECTED_EMPLOYEE_TOOLS_DATA","SET_PAGING_EMPLOYEE_TOOLS","setEmployeeToolsListData","setSelectedEmployeeToolsId","setSelectedEmployeeToolsData","setPagingEmployeeTools","getEmployeeToolsRequested","doAddEmployeeToolsProcess","slpitToolsId","tools","tool_id","doEditEmployeeToolsProcess","splitTools","doDeleteEmployeeToolsProcess","employeeTools","saveEmployeeToolsRequested","mapDetailEmployeeToolsToForm","selectedEmployeeToolsData","deleteEmployeeToolsRequested","listEmployeeTools","selectedEmployeeToolsId","listProvince","listCity","listMenu","SET_UNIT_LIST_DATA","SET_SELECTED_UNIT_ID","SET_SELECTED_UNIT_DATA","SET_PAGING_UNIT","setUnitListData","setPagingUnit","setSelectedUnitId","setSelectedUnitData","doDeleteUnitProcess","getUnitListDataRequested","doAddUnitProcess","doEditUnitProcess","mapDetailUnitToForm","selectedUnitsData","saveUnitRequested","deleteUnitRequested","listUnits","selectedUnitsId","SET_JOB_FORMS_LIST_DATA","SET_SELECTED_JOB_FORMS_ID","SET_SELECTED_JOB_FORMS_DATA","SET_PAGING_JOB_FORM","setJobFormsListData","setPagingJobForm","setSelectedJobFormsId","setSelectedJobFormsData","doDeleteBranchProcess","jobForms","getJobFormsListDataRequested","doAddJobFormsProcess","doEditJobFormsProcess","mapDetailJobFormsToForm","selectedJobFormsData","saveJobFormsRequested","deleteJobFormsRequested","listJobForms","selectedJobFormsId","SET_BRANCH_LIST_DATA","SET_SELECTED_BRANCH_ID","SET_SELECTED_BRANCH_DATA","SET_PAGING_BRANCH","SET_BRANCH_LIST_DATA_DROPDOWN","setBranchListData","setBranchListDataDropdown","setPagingBranch","setSelectedBranchId","setSelectedBranchData","getBranchListDataRequested","doAddBranchProcess","mapDetailBranchToForm","selectedBranchData","isDropdown","saveBranchRequested","deleteBranchRequested","listBranchDropdown","selectedBranchId","selectedServiceEmployeeList","selectedServiceSummary","selectedServiceMedia","groupingSelectedServiceMedia","groupingSelectedServiceSummary","singleSelectedServiceSummary","groupingSelectedServiceChecklist","selectedServiceDailies","selectedServiceHistories","selectedServiceChecklist","selectedServiceRejected","rejectionsModal","editTransactionModal","editDailiesModal","editSummaryModal","insertMediaModal","selectedUnit","SET_UNIT_MODEL_LIST_DATA","SET_SELECTED_UNIT_MODEL_ID","SET_SELECTED_UNIT_MODEL_DATA","SET_PAGING_UNIT_MODEL","setUnitModelListData","setPagingUnitModel","setSelectedUnitModelId","setSelectedUnitModelData","getUnitModelListDataRequested","doAddUnitModelsProcess","unitModels","unit_id","descriptions","serial_number","serialNumber","machine_no","machineNo","engine_model","engineModel","engine_no","engineNo","chasis_no","chasisNo","transmission_no","transmissionNo","doEditUnitModelsProcess","doDeleteUnitModelsProcess","saveUnitModelsRequested","deleteUnitModelRequested","mapDetailUnitModelToForm","selectedUnitModelsData","listUnitModels","selectedUnitModelsId","SET_ENUM_UNIT_MODEL","getEmployeeByIdFromReducer","tempData","getProvinceByIdFromReducer","masters","setAutoPopulateUnitModel","fieldIndex","indexEmployee","employeeData","provinceData","cityData","filteredCity","citySelected","setAutoPopulateCustomer","customersData","handleSubmitForm","splitCustomerId","customer","splitTypeId","splitWarranty","splitEmployeeId","unitList","splitUnitModel","unit_model_id","customer_id","job_form_id","uuidv4","identification_id","customerLocation","functionThatReturnPromise","reset","promise","pending","enumUnitModel","SET_IDENTIFICATIONN_LIST_DATA","SET_SELECTED_IDENTIFICATION_ID","SET_PAGING_IDENTIFICATION","SET_SELECTED_IDENTIFICATION_DATA","setIdentificationListData","setSelectedIdentificationId","setSelectedIdentificationData","getIdentificationListRequested","branches","identificationList","newIdentificationList","doDeleteIdentificationProcess","identification","doAddIdentificationProcess","splitCustomer","splitLocation","splitMilling","milling","splitType","doUpdateIdentificationMilling","isLastStep","selectedIdentificationId","splitInstanceType","instanceType","splitMillingStatus","millingStatus","splitCity","splitProvince","engineConfs","engine_confs","list","engine_conf_id","instance_type","instance_name","instanceName","customerName","ktp_npwp","milling_capacity","millingCapacity","milling_work_capacity_perday","millingWorkCapacityPerDay","rice_trademark","riceTrademark","history_service_place","history_service_type","notes","note","spare_part_needs","spare_part_changing_histories","spare_part_selling_histories","doUpdateIdentificationRegular","isFinished","instance_address","instanceAddress","address_district","address_city","address_province","address_subdistrict","kelurahan","address_postal_code","postalCode","instancePhoneNumber","product_name","productName","buy_date","assistance_date","machine_number","gearbox_number","production_unit_year","work_hour_per_day","hour_meter","saveIdentificationRequested","isMilling","selectedIdentificationData","deleteIdentificationRequested","listIdentification","SET_MACHINE_LIST_DATA","SET_SELECTED_MACHINE_ID","SET_SELECTED_MACHINE_DATA","SET_PAGING_MACHINE_CONF","setMachineListData","setPagingMachineConf","setSelectedMachineId","setSelectedMachineData","doDeleteMachineProcess","getMachineListDataRequested","doAddMachineProcess","doEditMachineProcess","mapDetailMachineToForm","machineConfiguration","selectedMachineData","saveMachineRequested","deleteMachineRequested","listMachine","selectedMachineId","SET_TOOLS_LIST_DATA","SET_SELECTED_TOOLS_ID","SET_SELECTED_TOOLS_DATA","SET_PAGING_TOOLS","setToolsListData","setPagingTools","setSelectedToolsId","setSelectedToolsData","doDeleteToolsProcess","toolsId","getToolsListDataRequested","doAddToolsProcess","doEditToolsProcess","mapDetailToolsToForm","selectedToolsData","saveToolsRequested","deleteToolsRequested","listTools","selectedToolsId","SET_FORM_CATEGORY_LIST_DATA","SET_SELECTED_FORM_CATEGORY_ID","SET_SELECTED_FORM_CATEGORY_DATA","SET_PAGING_FORM_CATEGORY","setFormCategoryListData","setPagingFormCategory","setSelectedFormCategoryId","setSelectedFormCategoryData","doDeleteFormCategoryProcess","getFormCatgeoryListDataRequested","doAddFormCategoryProcess","doEditFormCategoryProcess","mapDetailCategoryToForm","formCategory","selectedFormCategoryData","saveFormCategoryRequested","deleteFormCategoryRequested","formCategoryId","listFormCategory","selectedFormCategoryId","SET_UNIT_FIELDS_LIST_DATA","SET_SELECTED_UNIT_FIELDS_ID","SET_SELECTED_UNIT_FIELDS_DATA","SET_PAGING_UNIT_FIELDS","setUnitFieldsListData","setPagingUnitFields","setSelectedUnitFieldsId","setSelectedUnitFieldsData","getUnitFieldsListDataRequested","doAddUnitFieldsProcess","unitFields","splitCategoryFormId","splitjobFormId","jobForm","fieldName","category_form_id","doEditUnitFieldsProcess","doDeleteUnitFieldsProcess","unitFieldId","saveUnitFieldsRequested","deleteUnitFieldRequested","mapDetailUnitFieldToForm","selectedUnitFieldsData","job_form_name","category_form_name","listUnitFields","selectedUnitFieldsId","SET_MONITORING_EMPLOYEE_LIST_DATA","SET_PAGING_MONITORING_EMPLOYEE","setMonitoringEmployeeListData","setPagingMonitoringEmployee","getMonitoringEmployeeListDataRequested","monitoringEmployee","newListMonitoringEmployee","itemData","indexData","created_date","date","listMonitoringEmployee","SET_SERVICE_REPAIR_LIST_DATA","SET_PAGING_SERVICE_REPAIR","setServiceRepairListData","setPagingServiceRepair","getServiceRepairListDataRequested","serviceRepair","newListServiceRepair","listServiceRepair","SET_REPORT_EMPLOYEE_LIST_DATA","SET_PAGING_REPORT_EMPLOYEE","setReportEmployeeListData","setPagingReportEmployee","getReportEmployeeDataRequested","reportEmployee","newReportEmployee","listReportEmployee","SET_DIVISION_LIST_DATA","SET_SELECTED_DIVISION_ID","SET_SELECTED_DIVISION_DATA","SET_PAGING_DIVISION","setDivisionListData","setPagingDivision","setSelectedDivisionId","setSelectedDivisionData","doDeleteDivisionProcess","getDivisionListDataRequested","doAddDivisionProcess","headDivision","doEditDivisionProcess","mapDetailDivisionToForm","selectedDivisionData","employee_name","saveDivisionRequested","deleteDivisionRequested","listDivision","selectedDivisionId","SET_DIVISION_UNIT_LIST_DATA","SET_SELECTED_DIVISION_UNIT_ID","SET_SELECTED_DIVISION_UNIT_DATA","SET_PAGING_DIVISION_UNIT","setDivisionUnitListData","setPagingDivisionUnit","setSelectedDivisonUnitId","setSelectedDivisionUnitData","getDivisionUnitListRequested","doAddDivisionUnitProcess","divisionUnit","splitUnitId","division_id","doEditDivisionUnitProcess","saveDivisionUnitRequested","listDivisionUnit","selectedDivisionUnitId","selectedDivisionUnitData","SET_DASHBOARD_DATA","dashboardData","SET_UNIT_SERIAL_NUMBER_DATA","SET_SELECTED_UNIT_SERIAL_NUMBER_ID","SET_SELECTED_UNIT_SERIAL_NUMBER_DATA","setUnitSerialNumberData","setSelectedUnitSerialNumberId","setSelectedUnitSerialNumberData","doAddUnitSerialNumberProcess","doEditUnitSerialNumberProcess","unitSerialNumber","selectedUnitSerialNumberId","serialNumberId","saveUnitSerialNumberRequested","mapDetailUnitSerialNumberToForm","selectedUnitSerialNumberData","customer_name","listUnitSerialNumber","SET_UNIT_JOB_FORMS_LIST_DATA","SET_PAGING_UNIT_JOB_FORMS","setUnitJobFormsListData","getUnitJobFormsListDataRequested","listUnitJobForms","SET_WORKING_HOURS_LIST_DATA","setWorkingHoursListData","getWorkingHoursListDataRequested","workingHours","newListWorkingHours","created","done","done_date","listWorkingHours","rootReducer","rootReducers","combineReducers","router","connectRouter","auth","state","newState","Object","assign","externalService","unitJobForms","component","dashboard","form","formReducer","toastrReducer","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","createStore","applyMiddleware","routerMiddleware","persistor","persistStore","run","Saga","Component","props","Overlay","styled","div","CGlobalOverlay","loading","height","width","radius","margin","withRouter","mainMenu","masterDataMenu","reportMenu","serviceRepairMenu","reportDataMenu","href","icon","Footer","Date","getFullYear","Navbar","onLogout","placeholder","src","alt","onClick","children","isGlobalLoading","isLandingPage","logout","Fragment","className","selectorAuth","selectorComponent","mapStateToProps","createStructuredSelector","createSelector","withConnect","connect","authActions","React","useState","setRole","useEffect","menus","size","style","marginRight","getIconName","withTemplate","Template","WrappedComponent","hoistNonReactStatics","CButtonAntd","isLoading","disabled","shape","danger","backgroundColor","alignSelf","borderColor","block","DashboardComponent","totalCustomer","totalInternalService","totalExternalService","totalIdentification","bordered","columns","dataSource","pagination","pageSizeOptions","showSizeChanger","initializeApp","AdminActions","RoleActions","BranchActions","UnitsActions","MachineConfigurationActions","ListServiceActions","handlePressDelete","jobServiceId","setisBlocked","no","isBlockedRole","checkBlockedRole","keys","toLocaleString","dataIndex","sorter","b","render","items","isExternal","borderRadius","textAlign","unit_model_name","align","text","record","EditOutlined","CInput","typeComponent","htmlFor","whiteSpace","linebreak","maxLength","rows","onChange","onKeyDown","input","meta","touched","fontSize","labelSize","LoginComponent","handleSubmit","submitForm","onSubmit","Field","validateFormRoles","errors","validateFormUnitModel","validateFormTransaction","EnhanceContainer","valid","AuthActions","reduxForm","validate","FormItem","Form","Item","Option","Select","ASelect","hasFeedback","rest","hasError","invalid","validateStatus","help","CSelect","showSearch","onBlur","e","preventDefault","RenderDatePicker","defaultValue","CDatePicker","CButton","InternalServiceComponent","listEmployee","enumType","handleAutoPopulateEmployee","handleAutoPopulateCustomer","InfoCircleTwoTone","FieldArray","fields","PlusOutlined","itemEmployee","DeleteOutlined","remove","getCityByIdFromReducer","user","arrVal","InternalServiceActions","ComponentAction","CustomerActions","EmployeeActions","SelectCustomerData","SelectEmployeeData","initialValues","ExternalServiceComponent","listUnit","enumJobForms","handleAutoPopulateUnitModel","externalValues","onChangeUnitModel","handleChangeType","isTroubleShoot","itemUnit","indexUnit","val","selector","formValueSelector","formValues","getFormValues","ExternalServiceActions","enumModel","enumUnit","selectedUnitModel","unitQty","setUnitQty","unitData","setUnitData","setIsTroubleShoot","SelectUnit","SelectJobFormsData","JobFormsActions","totalUnit","handleAddNewUnit","handleSubtractUnit","MonitoringEmployeeComponent","onChangePagination","onSearch","enumBranch","enumTypeReport","handlePressGeneratePdf","orientation","SearchOutlined","FilePdfOutlined","monitoringEmployeeFormValues","getListMonitoringEmployee","MonitoringEmployeeActions","handlePressAddNew","printedData","jd_date","employee_nik","jobType","job_type","models","SelectBranch","nextPage","pageSize","monitoringEmployeeList","job_status","createdDate","doc","jsPDF","setFontSize","setFont","autoTable","startY","body","theme","head","content","rowSpan","halign","colSpan","styles","fillColor","headStyles","valign","overflow","columnWidth","header","dataKey","willDrawCell","dataCell","didParseCell","s","cell","lineColor","lineWidth","font","columnStyles","tableLineColor","tableLineWidth","save","exportMonitoringEmployeePdf","ReportServiceRepairComponent","scroll","serviceRepairFormValues","getListServiceRepair","ReportServiceRepairActions","BookOutlined","fixed","ReportEmployeeComponent","reportEmployeeFormValues","ReportEmployeeActions","technition","Search","Input","ListServiceComponent","enumStatus","total","current","enterButton","listServiceFormValues","getListEmployeesDropdown","renderActionTable","isBlockedRoleListService","ListServicesComponent","CTableAntd","renderActions","searchText","searchedColumn","searchInput","useRef","sortDirections","filterIcon","filtered","onFilter","includes","onFilterDropdownVisibleChange","visible","select","highlightStyle","padding","searchWords","autoEscape","textToHighlight","CModal","footer","destroyOnClose","onCancel","RenderFooter","handleSaveForm","RenderContent","formName","AdminModalComponent","handleCancel","enumMenu","AdminComponent","NotFound","AuthMiddleware","ComposedComponent","menuPath","isSecureRoute","isAuthenticated","userRole","userMenus","redirect","redirectToServices","CBadgeText","enumEmployee","AddEmployeeModalComponent","SelectEmployee","DetailServiceTransactionAction","Themes","RejectedModalComponent","DetailServiceTransactionActions","reson","handleClose","CloseOutlined","CheckOutlined","SelectRole","defaultValuesMenu","onChangeRoleMenu","Group","span","typeComponents","EditModalTransactionComponent","menuChecked","handleClearModalContent","SelectMenu","handleChangeTimePicker","marginBottom","RangePicker","EditModalDailiesComponent","editDailiesFormValues","setTimeDailiesForm","time","beforeUpload","handleChange","uploadButton","isImageLoaded","marginLeft","marginTop","listType","showUploadList","resizeMode","heigh","alignItems","justifyContent","opacity","InsertImageModalComponent","defaultImage","handleUploadPhoto","setLoading","setImageUrl","LoadingOutlined","file","isJpgOrPng","isLt2M","info","originFileObj","setIsImageLoaded","handleKeyDown","EditModalSummaryComponent","Text","Typography","TabPane","Tabs","DetailServiceTransactionComponent","TabPanel","onChangeTab","goBack","handlePressActions","handleSetOnProgress","RenderButtonAction","button","CheckCircleOutlined","CloseCircleOutlined","ArrowLeftOutlined","StarOutlined","model","strong","customer_pic_name","defaultActiveKey","tab","EditModalTransactionContainer","Meta","Card","RenderDescription","handlePressNonactive","handlePressActive","TabPanelEmployeeComponent","cover","setIsBlockedRole","isBlock","RenderItemSummary","indexText","TabPanelSummaryComponent","summaryArr","isLoaded","FileOutlined","PlusCircleOutlined","gutter","fontWeight","textTransform","plain","selectedService","setSummaryArr","summaryMapping","summaryText","splitSummary","RenderImage","medias","hoverable","TabPanelImagesComponent","handlePressAdd","CameraOutlined","RenderDailies","dailies","karyawan","jam","hours","TabPanelDailiesComponent","handlePressCancel","RenderHistories","histories","user_name","TabPanelHistoriesComponent","TabPanelHistoriesContainer","rejections","TabPanelRejectionsComponent","TabPanelRejectionsContainer","alignContent","TabPanelChecklistComponent","checklistArr","handleChangeRadio","getDefaultValueCheckbox","handleSubmitUpdateChecklist","checklist","itemChecklist","indexChecklist","borderBottom","itemFields","indexFields","field_name","unit_field_id","TabPanelChecklistContainer","setIsBlocked","countHitApi","itemParent","is_check","is_adjust","is_repair","is_replace","checklistTemp","valueCheck","target","field","DetailServiceActions","setMediaList","setSummaryList","setChecklist","isLoadedChecklist","setIsLoadedChecklist","isCompleteLoadedMedia","setIsCompleteLoadedMedia","isCompleteLoadedSummary","setIsCompleteLoadedSummary","FileImageOutlined","FileTextOutlined","UsergroupAddOutlined","CloseSquareOutlined","HistoryOutlined","fromIndex","indexOf","element","splice","callInitialize","EmployeesActions","groupingUnitMedia","groupingUnitSummary","groupingUnitChecklist","isCompleted","groupingChecklist","dataChecklist","activeTab","RolesEditModalComponent","RolesActions","setMenuSelected","RolesComponent","getListRoles","EmployeeListComponent","enumRoles","enumDivision","employeeFormValues","employeesFormValues","getListEmployees","ToolsActions","handlePressEmployeeTools","SelectRoles","getRolesEnum","SelectDivision","EmployeesListComponent","SettingOutlined","defaultValues","onChangeRoleEmployee","EmployeeEditComponent","enumRole","enumProvince","enumCity","onChangeProvince","onBackAction","getDetailEmployee","handleClearSelectedEmployeeRole","listCityState","setListCityState","setRoleSelected","setDefaultImage","SelectEmployeeRole","provinceMapping","detailEmployee","BranchModalComponent","BranchComponent","JobFormsModalComponent","JobFormsComponent","getListJobForms","ContentStepOneComponent","provinces","cities","enumInstanceType","enumStatusMilling","ContentUnitComponent","ContentSparePartComponent","onChangeServiced","isServiced","RenderSparePartSelling","RenderSparePartNeeded","_props","StepsContent","StepsAction","Step","Steps","FormWizardIdentificationComponent","steps","saveFormChanges","setCurrent","ContentMachineConfigurationComponent","machineConf","onAddMachineConf","RenderBodyHusker","ContentStepOneRegularComponent","identificationFormValues","setCities","serviced","setServiced","IdentificationActions","listCustomer","listLocation","listMilling","IdentificationModalComponent","enumCustomers","enumLocation","enumMilling","SelectCustomer","CustomersActions","ListIdentificationComponent","getListIdentification","created_at","MachineConfigurationModalComponent","MachineConfigurationComponent","getListMachine","MachineActions","UnitsModalComponent","UnitsComponent","placement","getListUnit","handlePressUnitModel","handlePressUnitFields","handlePressLink","tooltipText","BoxPlotOutlined","FileAddOutlined","CustomerModalComponent","CustomerComponent","customerBranchValue","getListCustomer","getListProvince","ToolsModalComponent","ToolsComponent","FormCategoryModalComponent","FormCategoryActions","FormCategoryComponent","getListFormCategory","UnitsModelsModalComponent","UnitModelActions","UnitModelsComponent","getListUnitModels","handlePressSerialNumber","FieldNumberOutlined","enumFormCategory","enumJobForm","UnitFieldsModalComponent","UnitFieldsActions","setFormCategory","setJobForm","loadOption","dataJobForm","listJobForm","SelectFormCategory","SelectJobForm","UnitFieldsComponent","unitFieldsId","setReportIdentificationListData","setPagingReportIdentification","ReportIdentificationComponent","enumHeadDivision","DivisionModalComponent","DivisionActions","SelectEmployees","DivisionComponent","getListDivision","getListEmlpoyee","handlePressDivisionUnit","enumTools","EmployeeToolsModalComponent","EmployeeToolsActions","SelectTools","EmployeeToolsComponent","generateEmployeeToolsReport","newListData","check","drawCell","docCell","section","column","setLineWidth","setFillColor","circle","y","addPage","employeeToolsFormValues","enumUnits","DivisionUnitModalComponent","DivisionUnitActions","SelectUnits","DivisionUnitComponent","getListDivisionUnit","divisionUnitId","StyleSheet","flexDirection","flexGrow","DetailServiceReportComponent","flex","DetailServiceReportContainer","enumCustomer","ModalUnitSerialNumberComponent","UnitSerialNumberActions","UnitSerialNumberComponent","onChangeCustomer","ModalUnitSerialNumberContainer","unitSerialNumberFormValues","selectedtUnitSerialNumber","UnitJobFormsComponent","UnitJobFormsActions","WorkingHoursComponent","workingHoursFormValues","getListWorkingHours","WorkingHoursActions","no_service","total_hours","workingHoursList","employeeNik","employeeName","noService","totalHours","doneDate","exportWorkingHoursReportPdf","Navigation","authenticatedPage","footerImg","TemplateContainer","templating","Login","LoginContainer","NotFoundPage","Admin","AdminContainer","Roles","RolesContainer","JobForms","JobFormsContainer","Branches","BranchContainer","EmployeeList","EmployeesListContainer","EmployeeTools","EmployeeToolsContainer","Division","DivisionContainer","DivisionUnit","DivisionUnitContainer","EditEmployee","EmployeeEditContainer","Dashboard","DashboardContainer","Units","UnitsContainer","UnitModels","UnitModelsContainer","UnitFields","UnitFieldsContainer","UnitJobForms","UnitJobFormsContainer","UnitSerialNumber","UnitSerialNumberContainer","Tools","ToolsContainer","Customers","CustomerContainer","FormCategory","FormCategoryContainer","MachineConfiguration","MachineConfigurationContainer","InternalService","InternalServiceContainer","ExternalService","ExternalServiceContainer","MonitoringEmployee","MonitoringEmployeeContainer","ReportServiceRepair","ReportServiceRepairContainer","ReportEmployee","ReportEmployeeContainer","WorkingHours","WorkingHoursContainer","ListServices","ListServicesContainer","ReportIdentification","ReportIdentificationContainer","DetailService","DetailServiceTransactionContainer","FormWizardIdentification","FormWizardIdentificationContainer","ListIdentification","ListIdentificationContainer","Helmet","titleTemplate","defaultTitle","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","closeOnToastrClick","exact","App","context","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.757c542b.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL || \"\",\n  forceRefresh: true,\n});\nexport default history;\n","// import * as ActionAuth from \"../../Auth/Store/AuthAction\";\n// import * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\n\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { toastr } from \"react-redux-toastr\";\n\n// function* getToken() {\n//   return yield select(AuthSelector.Token());\n// }\n\n// export function* getCommonConfigHeader() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n// }\n// export function* getCommonConfigHeaderFormData() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"multipart/form-data\",\n//     },\n//   };\n// }\n\nexport function* handleErrorProcess(action) {\n  let toastMessage;\n\n  if (!action.errorData.response || action.errorData.response === undefined) {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        window.location.reload();\n      },\n      okText: \"Ya\",\n      disableCancel: true,\n    };\n\n    toastr.confirm(\n      \"Koneksi terputus, cek koneksi anda dan dimuat ulang\",\n      toastrConfirmOptions\n    );\n  }\n\n  if (action.errorData.response) {\n    const error = action.errorData;\n    const responseStatus = error?.response.status;\n    if (responseStatus === 401) {\n      // yield put(ActionAuth.renewToken(action));\n      console.log(\"=== Token Expired!\");\n    } else if (responseStatus === 500) {\n      if (error.response.data.ErrorCode === \"4201\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      }\n      if (error.response.data.ErrorCode === \"5100\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      } else {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error.response.data.MessageKey} />\n          </span>\n        );\n      }\n    } else if (responseStatus === 403) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={\"forbiddenError\"} />\n        </span>\n      );\n    } else {\n      try {\n        const dataErr = error.response.data?.Data?.Failures[0]?.ErrorKey;\n        if (dataErr) {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id={dataErr} />\n            </span>\n          );\n        } else {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id=\"unknownError\" />\n            </span>\n          );\n        }\n      } catch (error) {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error} />\n          </span>\n        );\n      }\n    }\n  } else {\n    if (action.errorData.response.data.Message) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={action.errorData.response.data.Message} />\n        </span>\n      );\n    }\n  }\n  if (toastMessage) {\n    toast.error(toastMessage);\n  }\n}\n\nexport function* handleErrorAction() {\n  yield takeEvery(\"HANDLE_ERROR_SAGA\", handleErrorProcess);\n}\n","import { all, fork } from \"redux-saga/effects\";\n// import {\n//   getUserDetailAction,\n//   loginUserAction,\n//   registerUserAction,\n//   updateUserAction,\n// } from \"../../Auth/Saga/AuthSaga\";\nimport { handleErrorAction } from \"../../app/Saga/AppSaga\";\n\nexport default function* () {\n  yield all([\n    fork(handleErrorAction),\n    // fork(registerUserAction),\n    // fork(getUserDetailAction),\n    // fork(loginUserAction),\n    // fork(updateUserAction),\n  ]);\n}\n","// First we need to import axios.js\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\n\n// Next we make an 'instance' of it\nconst ConfigAxios = axios.create({\n  // .. where we make our configurations\n  baseURL: process.env.REACT_APP_API_URL,\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Authorization\",\n  },\n  timeout: 15000,\n});\nConfigAxios.defaults.headers.delete = {\n  \"Content-Type\": \"application/json\",\n};\n\n// Where you would set stuff like your 'Authorization' header, etc ...\n// ConfigAxios.defaults.headers.common[\"Authorization\"] =\n//   \"AUTH TOKEN FROM INSTANCE\";\n\n// Also add/ configure interceptors && all the other cool stuff\nConfigAxios.interceptors.request.use(\n  (requestFulfilled) => {\n    if (requestFulfilled.method === \"get\") {\n      requestFulfilled.data = true;\n    }\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(requestFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-request-fulfilled\",\n        JSON.parse(JSON.stringify(requestFulfilled))\n      );\n    }\n    return Promise.resolve(requestFulfilled);\n  },\n  (requestRejected) => {\n    if (!_.isEmpty(requestRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-request-rejected\",\n          JSON.parse(\n            JSON.stringify(requestRejected.response || requestRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(requestRejected);\n  }\n);\n\nConfigAxios.interceptors.response.use(\n  (responseFulfilled) => {\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(responseFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-response-fulfilled\",\n        JSON.parse(JSON.stringify(responseFulfilled))\n      );\n    }\n    return Promise.resolve(responseFulfilled);\n  },\n  (responseRejected) => {\n    if (responseRejected.response && responseRejected.response.data) {\n      if (responseRejected.response.data.status === 400) {\n        toast.warning(responseRejected.response.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      } else {\n        toast.error(\"Request Timeout!\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n    if (!_.isEmpty(responseRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-response-rejected\",\n          JSON.parse(\n            JSON.stringify(responseRejected.response || responseRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(responseRejected);\n  }\n);\n\nexport default ConfigAxios;\n","import ConfigAxios from \"./ConfigAxios\";\n\nconst Invoke = {};\nconst headersConfigDelete = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  data: {},\n};\n\nInvoke.submitLogin = (data) => {\n  return ConfigAxios.post(\"/login\", data);\n};\n\nInvoke.submitLoginEmployee = (data) => {\n  return ConfigAxios.post(\"/m_auth\", data);\n};\n\nInvoke.getListServices = (page, limit, keyword, type, status, employeeId) => {\n  return ConfigAxios.get(\n    `/services?page=${page}&limit=${limit}&q=${keyword}&type=${type}&status=${status}&employeeId=${employeeId}`\n  );\n};\n\nInvoke.deleteJobServiceById = (jobId) => {\n  return ConfigAxios.delete(`/services/${jobId}`, headersConfigDelete);\n};\n\nInvoke.getOneServices = (jobId) => {\n  return ConfigAxios.get(`/services/${jobId}`);\n};\n\n// === Admin API : ===\nInvoke.getListAdmin = (page, limit, keyword = \"\") => {\n  return ConfigAxios.get(`/admins?page=${page}&limit=${limit}&q=${keyword}`);\n};\n\nInvoke.getAdminById = (adminId) => {\n  return ConfigAxios.get(`/admins/${adminId}`);\n};\n\nInvoke.addAdmin = (data) => {\n  return ConfigAxios.post(\"/admins\", data);\n};\n\nInvoke.updateAdmin = (data) => {\n  return ConfigAxios.put(\"/admins\", data);\n};\n\nInvoke.deleteAdminById = (adminId) => {\n  return ConfigAxios.delete(`/admins/${adminId}`, headersConfigDelete);\n};\n// === End Admin API ===\n\n// === Admin - Roles API : ===\nInvoke.getListAdminRoles = (adminId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${adminId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getAdminRolesById = (customerId) => {\n  return ConfigAxios.get(`/admins/roles${customerId}`);\n};\n\nInvoke.addAdminRoles = (data) => {\n  return ConfigAxios.post(\"/admins/roles\", data);\n};\n\nInvoke.updateAdminRoles = (data) => {\n  return ConfigAxios.put(\"/admins/roles\", data);\n};\n\nInvoke.deleteAdminRolesById = (customerId) => {\n  return ConfigAxios.delete(`/admins/roles${customerId}`);\n};\n// === End Admin - Roles API ===\n\n// === Employee - Roles API : ===\nInvoke.getEmployeeRoles = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\n// === Employee - Tools API : ===\nInvoke.getEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/tools/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.addEmployeeRole = (data) => {\n  return ConfigAxios.post(`/employees/roles`, data);\n};\n\nInvoke.deleteEmployeeRole = (id) => {\n  return ConfigAxios.delete(`/employees/roles/${id}`, headersConfigDelete);\n};\n// === End Employee - Roles API ===\n\n// === Customers API ===\nInvoke.getCustomerList = (page, limit, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/customers?page=${page}&limit=${limit}&q=${keyword}&branchId=${branchId}`\n  );\n};\nInvoke.getCustomerById = (customerId) => {\n  return ConfigAxios.get(`/customers/${customerId}`);\n};\n\nInvoke.addCustomer = (data) => {\n  return ConfigAxios.post(\"/customers\", data);\n};\n\nInvoke.updateCustomer = (data) => {\n  return ConfigAxios.put(\"/customers\", data);\n};\n\nInvoke.deleteCustomerById = (customerId) => {\n  return ConfigAxios.delete(`/customers/${customerId}`, headersConfigDelete);\n};\n// === End Customers API ===\n\n// === Employee API === :\nInvoke.getEmployeeList = (\n  page,\n  limit,\n  keyword,\n  roleId,\n  branchId,\n  divisionId\n) => {\n  return ConfigAxios.get(\n    `/employees?page=${page}&limit=${limit}&q=${keyword}&role_id=${roleId}&branch_id=${branchId}&division_id=${divisionId}`\n  );\n};\n\nInvoke.getEmployeeById = (employeeId) => {\n  return ConfigAxios.get(`/employees/${employeeId}`);\n};\n\nInvoke.addEmployee = (data) => {\n  return ConfigAxios.post(\"/employees\", data);\n};\n\nInvoke.updateEmployee = (data) => {\n  return ConfigAxios.put(\"/employees\", data);\n};\n\nInvoke.deleteEmployeeById = (employeeId) => {\n  return ConfigAxios.delete(`/employees/${employeeId}`, headersConfigDelete);\n};\n// === End employee API ===\n\n// === Employee - Tools API : ===\nInvoke.getListEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getEmployeeToolsById = (employeeId) => {\n  return ConfigAxios.get(`/employees/tools${employeeId}`);\n};\n\nInvoke.addEmployeeTools = (data) => {\n  return ConfigAxios.post(\"/employees/tools\", data);\n};\n\nInvoke.updateEmployeeTools = (data) => {\n  return ConfigAxios.put(\"/employees/tools\", data);\n};\n\nInvoke.deleteEmployeeToolsById = (employeeToolsId) => {\n  return ConfigAxios.delete(\n    `/employees/tools/${employeeToolsId}`,\n    headersConfigDelete\n  );\n};\n// === End Employee - Tools API ===\n\n// === Roles API ===\nInvoke.getListRole = (page, limit) => {\n  return ConfigAxios.get(`/roles?page=${page}&limit=${limit}`);\n};\nInvoke.getRoleById = (customerId) => {\n  return ConfigAxios.get(`/roles/${customerId}`);\n};\n\nInvoke.addRole = (data) => {\n  return ConfigAxios.post(\"/roles\", data);\n};\n\nInvoke.updateRole = (data) => {\n  return ConfigAxios.put(\"/roles\", data);\n};\n\nInvoke.deleteRoleById = (roleId) => {\n  return ConfigAxios.delete(`/roles/${roleId}`, headersConfigDelete);\n};\n// === End Roles API ===\n\n// === Master Province API === :\nInvoke.getProvinceList = (page, limit) => {\n  return ConfigAxios.get(`/provinces?page=${page}&limit=${limit}`);\n};\n// === End Master Province API ===\n\n// === Master Cities API === :\nInvoke.getCityList = (page, limit, provinceId) => {\n  return ConfigAxios.get(\n    `/provinces/cities/${provinceId}?page=${page}&limit=${limit}`\n  );\n};\n// === End Master Cities API ===\n\n// === Dashboard API ===\nInvoke.getDashboardProgressData = (data) => {\n  return ConfigAxios.get(\"/dashboards\", data);\n};\n// === End Dashboard API ===\n\n// === Services API ===\nInvoke.addInternalService = (data) => {\n  return ConfigAxios.post(\"/services\", data);\n};\nInvoke.updateJobService = (data) => {\n  return ConfigAxios.put(\"/services\", data);\n};\nInvoke.setFinishedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/finish/${jobId}`);\n};\nInvoke.setApprovedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/approve/${jobId}`);\n};\nInvoke.setRejectedService = (jobId, payload) => {\n  return ConfigAxios.post(\n    `/m_services/reject/${jobId}?allowReject=true`,\n    payload\n  );\n};\n// === End Service API ===\n\n// Services - Employee API\nInvoke.getServicesEmployee = (jobId, page, limit) => {\n  return ConfigAxios.get(\n    `/services/employees/${jobId}?page=${page}&limit=${limit}`\n  );\n};\nInvoke.addNewEmployeeService = (jobId, payload) => {\n  return ConfigAxios.post(`/services/employees/${jobId}`, payload);\n};\nInvoke.setStatusEmployeeService = (jobId, payload) => {\n  return ConfigAxios.put(\n    `/services/employees/${jobId}`,\n    payload,\n    headersConfigDelete\n  );\n};\n// End Services - Employee API\n\n// === Service - Views API ===\nInvoke.getJobServiceSummary = (jobId, unitId) => {\n  return ConfigAxios.get(\n    `/m_services/summary/${jobId}${unitId ? \"/\" + unitId : \"\"}`\n  );\n};\nInvoke.getJobServiceMedia = (jobId, unitId) => {\n  return ConfigAxios.get(\n    `/services/medias/${jobId}${unitId ? \"/\" + unitId : \"\"}`\n  );\n};\nInvoke.getJobServiceDailies = (jobId, unitId) => {\n  return ConfigAxios.get(`/services/dailies/${jobId}/${unitId}`);\n};\nInvoke.updateJobServiceDailies = (payload) => {\n  return ConfigAxios.put(`/services/dailies`, payload);\n};\nInvoke.getChecklistData = (unitModelId) => {\n  return ConfigAxios.get(`/m_services/checklist/${unitModelId}`);\n};\nInvoke.getRejectedData = (jobId) => {\n  return ConfigAxios.get(`/m_services/reject/${jobId}`);\n};\nInvoke.getJobServiceHistories = (jobId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/services/logs/${jobId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addJobServiceMedia = (payload, jobId, unitId) => {\n  return ConfigAxios.post(\n    `/m_services/media/${jobId}${unitId ? \"/\" + unitId : \"\"}`,\n    payload\n  );\n};\nInvoke.addJobServiceDaily = (payload, jobId) => {\n  return ConfigAxios.post(`/m_services/daily/${jobId}`, payload);\n};\nInvoke.updateSummary = (payload, jobId, unitId) => {\n  return ConfigAxios.put(\n    `/m_services/summary/${jobId}${unitId ? \"/\" + unitId : \"\"}`,\n    payload\n  );\n};\nInvoke.setJobToProgress = (jobId) => {\n  return ConfigAxios.get(`/m_services/progress/${jobId}`);\n};\nInvoke.updateChecklist = (payload, unitId) => {\n  return ConfigAxios.put(`/m_services/checklist/${unitId}`, payload);\n};\n\n// === End Service Views ===\n\n// === Master Unit API === :\nInvoke.getUnitList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/units?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addUnit = (payload) => {\n  return ConfigAxios.post(`/units`, payload);\n};\nInvoke.updateUnit = (payload) => {\n  return ConfigAxios.put(`/units`, payload);\n};\nInvoke.deleteUnitById = (unitId) => {\n  return ConfigAxios.delete(`units/${unitId}`, headersConfigDelete);\n};\n// === End Master Unit API ===\n\n// === Master unit-model API === :\nInvoke.getListUnitModel = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/models/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addUnitSerialNumber = (payload, unitModelId) => {\n  return ConfigAxios.post(`/units/serial/${unitModelId}`, payload);\n};\nInvoke.updateUnitSerialNumber = (payload, unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.put(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    payload\n  );\n};\nInvoke.deleteUnitSerialNumber = (unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.delete(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    headersConfigDelete\n  );\n};\nInvoke.getUnitSerialNumber = (\n  page,\n  limit,\n  keyword,\n  unitModelId,\n  customerId\n) => {\n  return ConfigAxios.get(\n    `/units/serial/${unitModelId}?page=${page}&limit=${limit}&q=${keyword}&customerId=${customerId}`\n  );\n};\nInvoke.addUnitModel = (payload) => {\n  return ConfigAxios.post(`/units/models`, payload);\n};\nInvoke.updateUnitModel = (payload) => {\n  return ConfigAxios.put(`/units/models`, payload);\n};\nInvoke.deleteUnitModelById = (unitModelId) => {\n  return ConfigAxios.delete(`units/models/${unitModelId}`, headersConfigDelete);\n};\n// === End Master Unit-Model API ===\n\n// === Master unit-fields API === :\nInvoke.getListUnitFields = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/fields/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.getListUnitJobForms = (unitId, jobFormId) => {\n  return ConfigAxios.get(`/units/job_forms/${unitId}?job_form_id=${jobFormId}`);\n};\nInvoke.addUnitFields = (payload) => {\n  return ConfigAxios.post(`/units/fields`, payload);\n};\nInvoke.updateUnitFields = (payload) => {\n  return ConfigAxios.put(`/units/fields`, payload);\n};\nInvoke.deleteUnitFieldsById = (unitfieldsId) => {\n  return ConfigAxios.delete(\n    `units/fields/${unitfieldsId}`,\n    headersConfigDelete\n  );\n};\n// === End Master Unit-Model API ===\n\n// === Master Job-Form API === :\nInvoke.getListJobForm = (page, limit, keyowrd) => {\n  return ConfigAxios.get(`job_forms?page=${page}&limit=${limit}&q=${keyowrd}`);\n};\nInvoke.addJobForms = (payload) => {\n  return ConfigAxios.post(`job_forms`, payload);\n};\nInvoke.updateJobForms = (payload) => {\n  return ConfigAxios.put(`job_forms`, payload);\n};\nInvoke.deleteJobForms = (jobFormsId) => {\n  return ConfigAxios.delete(`job_forms/${jobFormsId}`, headersConfigDelete);\n};\n// === End Job-Form API ===\n\n// === Master Branch API === :\nInvoke.getListBranch = (page, limit, keyword) => {\n  return ConfigAxios.get(`/branches?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.deleteBranchById = (branchId) => {\n  return ConfigAxios.delete(`/branches/${branchId}`, headersConfigDelete);\n};\nInvoke.addBranch = (payload) => {\n  return ConfigAxios.post(`/branches`, payload);\n};\nInvoke.updateBranch = (payload) => {\n  return ConfigAxios.put(`/branches`, payload);\n};\n// === End Branch API ===\n\n// === Master Menu API === :\nInvoke.getListMenu = (page, limit) => {\n  return ConfigAxios.get(`/menus?page=${page}&limit=${limit}`);\n};\n// === End Menu API ===\n\n// === Master Menu - Roles API === :\nInvoke.addMenuRole = (payload) => {\n  return ConfigAxios.post(`/menus/roles`, payload);\n};\n\nInvoke.getMenuByRoleId = (roleId) => {\n  return ConfigAxios.get(`/menus/menu_by_role/${roleId}`);\n};\n\nInvoke.deleteMenuByMenuRoleId = (menuRoleId) => {\n  return ConfigAxios.delete(`menus/roles/${menuRoleId}`, headersConfigDelete);\n};\n// === End Menu - Roles API ===\n\n// === Master Engines API === :\nInvoke.getListEngine = (page, limit, keyword) => {\n  return ConfigAxios.get(`/engines?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addEngine = (payload) => {\n  return ConfigAxios.post(`/engines`, payload);\n};\nInvoke.updateEngine = (payload) => {\n  return ConfigAxios.put(`/engines`, payload);\n};\nInvoke.deleteEngine = (machineId) => {\n  return ConfigAxios.delete(`/engines/${machineId}`, headersConfigDelete);\n};\n// === End Engines API ===\n\n// === Master Tools API === :\nInvoke.getListTools = (page, limit, keyword) => {\n  return ConfigAxios.get(`/tools?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addTool = (payload) => {\n  return ConfigAxios.post(`/tools`, payload);\n};\nInvoke.updateTool = (payload) => {\n  return ConfigAxios.put(`/tools`, payload);\n};\nInvoke.deleteTool = (toolId) => {\n  return ConfigAxios.delete(`/tools/${toolId}`, headersConfigDelete);\n};\n// === End Tools API ===\n\n// === Master FormCategory API === :\nInvoke.getFormCategory = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/category_forms?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addFormCategory = (payload) => {\n  return ConfigAxios.post(`/category_forms`, payload);\n};\nInvoke.updateFormCategory = (payload) => {\n  return ConfigAxios.put(`/category_forms`, payload);\n};\nInvoke.deleteFormCategory = (categoryFormId) => {\n  return ConfigAxios.delete(\n    `/category_forms/${categoryFormId}`,\n    headersConfigDelete\n  );\n};\n// === End FormCategory API ===\n\n// === Master Identification API === :\nInvoke.getIdentificationList = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/identifications?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\nInvoke.addIdentification = (payload) => {\n  return ConfigAxios.post(`/identifications`, payload);\n};\n\nInvoke.updateIdentificationMilling = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/milling\", payload);\n};\n\nInvoke.updateIdentificationRegular = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/regular\", payload);\n};\n\nInvoke.deleteIdentificationById = (identificationId) => {\n  return ConfigAxios.delete(\n    `/identifications/${identificationId}`,\n    headersConfigDelete\n  );\n};\n\n// === Master Dvision API === :\nInvoke.getDivisionList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/divisions?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addDivision = (payload) => {\n  return ConfigAxios.post(`/divisions`, payload);\n};\nInvoke.updateDivision = (payload) => {\n  return ConfigAxios.put(`/divisions`, payload);\n};\nInvoke.deleteDivision = (divisionId) => {\n  return ConfigAxios.delete(`/divisions/${divisionId}`, headersConfigDelete);\n};\n\n// === Master Dvision - Unit API === :\nInvoke.getDivisionUnitList = (divisionId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/units/divisions/${divisionId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addDivisionUnit = (payload) => {\n  return ConfigAxios.post(`/units/divisions`, payload);\n};\n\n// Monitoring Employee\nInvoke.getReportMonitoringEmployee = (\n  page,\n  limit,\n  from,\n  until,\n  type = \"all\",\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/monitoring?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&type=${type}&q=${keyword}`\n  );\n};\n\n// Report Service Repair\nInvoke.getReportServiceRepair = (\n  page,\n  limit,\n  from,\n  until,\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/report_services?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Report Employee\nInvoke.getReportEmployee = (page, limit, from, until, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/report/report_employee?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Working Hours\nInvoke.getWorkingHours = (page, limit, from, until, keyword) => {\n  return ConfigAxios.get(\n    `/services/monitor/hour?startDate=${from}&endDate=${until}&page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\n// Download pdf from server\nInvoke.getTransactionPdfUrl = (jobId) => {\n  return ConfigAxios.get(`/services/print_job/${jobId}`);\n};\n// Download pdf to BLOB\nInvoke.downloadPdfFromUrl = (url) => {\n  return ConfigAxios.get(url, { responseType: \"blob\" });\n};\n\nexport default Invoke;\n","import { store } from \"../../../app/ConfigureStore\";\n\nexport const PROCESS_GLOBAL_LOADING = \"PROCESS_GLOBAL_LOADING\";\nexport const PROCESS_FORM_GLOBAL_LOADING = \"PROCESS_FORM_GLOBAL_LOADING\";\nexport const SHOW_GLOBAL_MODAL = \"SHOW_GLOBAL_MODAL\";\nexport const RESET_ALL_LOADING = \"RESET_ALL_LOADING\";\n\nexport const setGlobalLoading = (payload) => {\n  return {\n    type: PROCESS_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const setGlobalModal = (payload) => {\n  return {\n    type: SHOW_GLOBAL_MODAL,\n    payload,\n  };\n};\n\nexport const setGlobalFormLoading = (payload) => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const resetAllProcessLoading = () => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n  };\n};\n\nexport const resetAllGlobalLoadingProcess = () => {\n  const { dispatch } = store;\n  dispatch(resetAllProcessLoading());\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport history from \"../../../app/History\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\n\nexport const SET_ACCESS_TOKEN_DATA = \"SET_ACCESS_TOKEN_DATA\";\nexport const SET_USER_DETAIL_DATA = \"SET_USER_DETAIL_DATA\";\nexport const SET_ERROR_LOGIN = \"SET_ERROR_LOGIN\";\n\nexport const setAccessToken = (payload) => {\n  return {\n    type: SET_ACCESS_TOKEN_DATA,\n    payload,\n  };\n};\nexport const setUserDetail = (payload) => {\n  return {\n    type: SET_USER_DETAIL_DATA,\n    payload,\n  };\n};\nexport const setErrorLogin = (payload) => {\n  return {\n    type: SET_ERROR_LOGIN,\n    payload,\n  };\n};\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\",\n  };\n};\n\nexport const doLogout = (dispatch) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      dispatch(logout());\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah Anda Yakin Ingin Keluar?\", toastrConfirmOptions);\n};\n\nconst appendItem = async (data) =>\n  new Promise((resolve, reject) => {\n    store.dispatch(setAccessToken(data.data.callback.accessToken));\n    delete data.data.callback.accessToken;\n    store.dispatch(setUserDetail(data.data.callback));\n    resolve();\n  });\n\nexport const handleSubmitLogin = async (values) => {\n  const { username, password } = values;\n  const payload = { username, password };\n\n  store.dispatch(setGlobalLoading(true));\n\n  Invoke.submitLogin(payload)\n    .then((data) => {\n      appendItem(data).then(() => {\n        setTimeout(() => {\n          history.push(\"/dashboard\");\n          window.location.reload();\n          store.dispatch(setGlobalLoading(false));\n        }, 5000);\n      });\n    })\n    .catch((onRejected) => {\n      store.dispatch(setGlobalLoading(false));\n      if (onRejected) {\n        const status = onRejected?.response?.data?.status;\n        const dataResponseRejected = onRejected?.response?.data ?? null;\n        if (dataResponseRejected) {\n          if (status === 400) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          } else if (status === 401) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          }\n        }\n      }\n    });\n};\n","import {\n  SET_ACCESS_TOKEN_DATA,\n  SET_USER_DETAIL_DATA,\n  SET_ERROR_LOGIN,\n} from \"./AuthAction\";\n\nexport const initialState = {\n  accessToken: \"\",\n  userDetail: null,\n  avatar: null,\n  error: {\n    status: false,\n    message: \"\",\n  },\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ACCESS_TOKEN_DATA:\n      newState.accessToken = action.payload;\n      return { ...newState };\n\n    case SET_USER_DETAIL_DATA:\n      newState.userDetail = action.payload;\n      return { ...newState };\n\n    case SET_ERROR_LOGIN:\n      newState.error = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import React from \"react\";\nimport history from \"./History\";\n\nexport const navigate = (path) => {\n  history.push(path);\n  // window.location.reload();\n};\n\nexport const getIndex = (currentpage, limit) => {\n  const pageNumbers = [];\n  const startIndex = currentpage * limit - limit + 1;\n  const endIndex = startIndex + limit;\n  for (let i = startIndex === 0 ? 1 : startIndex; i <= endIndex; i++) {\n    pageNumbers.push(i);\n  }\n  return pageNumbers;\n};\n\nexport const getBase64 = (img, callback) => {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\n\nexport const SelectLocation = [\n  {\n    id: `location-1`,\n    value: \"L1\",\n    label: \"Cabang\",\n  },\n  {\n    id: `location-2`,\n    value: \"L2\",\n    label: \"Depo PT Rutan\",\n  },\n];\n\nexport const SelectType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Project\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"PB\",\n  },\n  {\n    id: `type-3`,\n    value: \"T3\",\n    label: \"Komersil\",\n  },\n];\n\nexport const SelectInstanceType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"Kelompok Tani\",\n  },\n];\n\nexport const SelectStatus = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Finished\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusServices = [\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Completed\",\n  },\n  {\n    id: `status-2`,\n    value: \"S4\",\n    label: \"Approved\",\n  },\n  {\n    id: `status-3`,\n    value: \"S5\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusMilling = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n  {\n    id: `status-3`,\n    value: \"S4\",\n    label: \"Lain-lain\",\n  },\n];\n\nexport const SelectInstanceTypeRegular = [\n  {\n    id: `status-1`,\n    value: \"T1\",\n    label: \"Kepemilikan Pribadi\",\n  },\n  {\n    id: `status-2`,\n    value: \"T2\",\n    label: \"Perusahaan\",\n  },\n  {\n    id: `status-3`,\n    value: \"T3\",\n    label: \"Kelompok Tani\",\n  },\n  {\n    id: `status-3`,\n    value: \"T4\",\n    label: \"Dinas\",\n  },\n];\n\nexport const SelectStatusIdentification = [\n  {\n    id: `status-identification-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-identification-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-identification-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n];\n\nexport const SelectMilling = [\n  {\n    id: `milling-1`,\n    value: \"true\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `milling-2`,\n    value: \"false\",\n    label: \"non-Penggilingan\",\n  },\n];\n\nexport const enumTypeInternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T4\", label: \"Training\" },\n];\n\nexport const enumTypeExternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Training\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modification\" },\n];\n\nexport const enumWarranty = [\n  { id: `enum-warranty-1`, value: true, label: \"Warranty\" },\n  { id: `enum-warranty-2`, value: false, label: \"No Warranty\" },\n];\n\nexport const enumTypeActivities = [\n  { id: `enum-activity-1`, value: \"Perjalanan\", label: \"Perjalanan\" },\n  { id: `enum-activity-2`, value: \"Pekerjaan\", label: \"Pekerjaan\" },\n  { id: `enum-activity-3`, value: \"Istirahat\", label: \"Istirahat\" },\n  { id: `enum-activity-4`, value: \"Perjalanan Pulang\", label: \"Perjalanan Pulang\" },\n];\n\nexport const warrantyMonths = () => {\n  const warrantyMonths = [];\n  for (let i = 0; i <= 24; i++) {\n    warrantyMonths.push({\n      id: `enum-warranty-moths-${i}`,\n      value: i.toString(),\n      label: `${i} bulan`,\n    });\n  }\n  return warrantyMonths;\n};\n\nexport const getProvinceEnum = (data) => {\n  const SelectProvince = [];\n  data.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectProvince;\n};\n\nexport const getCitiesEnum = (data) => {\n  const SelectCities = [];\n  data.map((item, index) => {\n    SelectCities.push({\n      id: `city-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectCities;\n};\n\nexport const getRolesEnum = (data) => {\n  const SelectRoles = [];\n  data.map((item, index) => {\n    SelectRoles.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectRoles;\n};\n\nexport const enumSelectGenerator = (data, enumName) => {\n  const SelectEnum = [];\n  data.map((item, index) => {\n    SelectEnum.push({\n      id: `${enumName}-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectEnum;\n};\n\nexport const getUnitModelEnum = (data) => {\n  const SelectUnitModel = [];\n  data.map((item, index) => {\n    SelectUnitModel.push({\n      id: `unit-model-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectUnitModel;\n};\n\nexport const getMachineConf = (data) => {\n  const SelectMachines = [];\n  data.map((item, index) => {\n    SelectMachines.push({\n      id: item.id,\n      name: item.name.replace(/ /g, \"_\").toLowerCase(),\n      type: item.name,\n    });\n  });\n  return SelectMachines;\n};\n\nexport const getStatus = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S2\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Completed\", color: \"#87d068\" };\n      break;\n    case \"S4\":\n      statusItem = { value: \"Approved\", color: \"#87d068\" };\n      break;\n    case \"S5\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\nexport const getStatusWorkingHours = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S1\":\n      statusItem = { value: \"Draft\", color: \"#fff566\" };\n      break;\n    case \"S2\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Completed\", color: \"#95de64\" };\n      break;\n    case \"S4\":\n      statusItem = { value: \"Approved\", color: \"#95de64\" };\n      break;\n    case \"S5\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\n// This list not used\nexport const machineConf = [\n  {\n    name: \"dryer\",\n    type: \"dryer\",\n  },\n  {\n    name: \"cleaner\",\n    type: \"cleaner\",\n  },\n  {\n    name: \"head_husker\",\n    type: \"head husker\",\n  },\n  {\n    name: \"body_husker\",\n    type: \"body husker\",\n  },\n  {\n    name: \"separator\",\n    type: \"separator\",\n  },\n  {\n    name: \"destoner\",\n    type: \"destoner\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n\n  {\n    name: \"vertikal_abrasive\",\n    type: \"vertikal abrasive\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n  {\n    name: \"friction_abrasive\",\n    type: \"friction abrasive\",\n  },\n  {\n    name: \"rotary_rice_sifter\",\n    type: \"rotary rice sifter\",\n  },\n  {\n    name: \"non_rotary_rice_sifter\",\n    type: \"non rotary rice sifter\",\n  },\n\n  {\n    name: \"length_grader\",\n    type: \"length grader\",\n  },\n  {\n    name: \"milling_meter\",\n    type: \"milling meter\",\n  },\n  {\n    name: \"scale\",\n    type: \"scale\",\n  },\n];\n\nexport const monitoringType = {\n  all: \"all\",\n  external: \"T1\",\n  internal: \"T2\",\n  loss: \"T3\",\n};\n\nexport const categoryServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n];\n\nexport const categoryMonitoringServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n  {\n    name: \"Loss\",\n    status: \"error\",\n  },\n];\n\nexport const enumTypeMonitoringEmployee = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Pelatihan\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modifikasi\" },\n];\n\nexport const getBase64Image = (url) => {\n  const img = new Image();\n  img.setAttribute(\"crossOrigin\", \"anonymous\");\n  img.onload = () => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    const dataURL = canvas.toDataURL(\"image/png\");\n    console.log(dataURL);\n  };\n  img.src = url;\n};\n\n/**\n * This function calculate the width of a string based on its length\n * @param {String} text\n * @param {String} font\n */\nconst getTextWidth = (text, font = \"14px -apple-system\") => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n  return Math.round(metrics.width + 80);\n};\n\n/**\n * This function calculates the width of each column based in all CELL VALUES\n * @param {Array} columns\n * @param {Array} source\n * @param {Number} maxWidthPerCell\n */\nexport const calculateColumnsWidth = (\n  columns,\n  source,\n  maxWidthPerCell = 500\n) => {\n  const columnsParsed = JSON.parse(JSON.stringify(columns));\n\n  // First we calculate the width for each column\n  // The column width is based on its string length\n\n  const columnsWithWidth = columnsParsed.map((column) =>\n    Object.assign(column, {\n      width: getTextWidth(column.title),\n    })\n  );\n\n  // Since we have a minimum width (column's width already calculated),\n  // now we are going to verify if the cell value is bigger\n  // than the column width which is already set\n\n  source.map((entry) => {\n    columnsWithWidth.map((column, indexColumn) => {\n      const columnWidth = column.width;\n      const cellValue = Object.values(entry)[indexColumn];\n\n      // Get the string width based on chars length\n      let cellWidth = getTextWidth(cellValue);\n\n      // Verify if the cell value is smaller than column's width\n      if (cellWidth < columnWidth) cellWidth = columnWidth;\n\n      // Verify if the cell value width is bigger than our max width flag\n      if (cellWidth > maxWidthPerCell) cellWidth = maxWidthPerCell;\n\n      // Update the column width\n      columnsWithWidth[indexColumn].width = cellWidth;\n    });\n  });\n\n  // Sum of all columns width to determine the table max width\n  const tableWidth = columnsWithWidth\n    .map((column) => column.width)\n    .reduce((a, b) => {\n      return a + b;\n    });\n\n  return {\n    columns: columnsWithWidth,\n    source,\n    tableWidth,\n  };\n};\n\nexport const isBlockedRoleDetailService = (role) => {\n  let isBlocked;\n  switch (role) {\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\n// Check if roles is blocked on filter branch customer\nexport const isBlockedRoleCustomerView = (role) => {\n  let isBlocked\n  switch (role) {\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n}\n\n// Check if roles is blocked on menu list service:\nexport const isBlockedRoleListService = (role) => {\n  let isBlocked;\n  switch (role) {\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    case \"7cf419b8-9275-479b-846a-cda27aa173eb\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\n// Check if roles is blocked on menu customer:\nexport const isBlockedRoleCustomer = (role) => {\n  let isBlocked = false;\n  switch (role) {\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"7cf419b8-9275-479b-846a-cda27aa173eb\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { toastr } from \"react-redux-toastr\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toast } from \"react-toastify\";\nimport { change } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ROLES = \"SET_LIST_ROLES\";\nexport const SET_SELECTED_ROLE_ID = \"SET_SELECTED_ROLE_ID\";\nexport const SET_SELECTED_ROLE_DETAIL = \"SET_SELECTED_ROLE_DETAIL\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const RESET_STATE = \"RESET_STATE\";\nexport const SET_SELECTED_ROLE_MENU = \"SET_SELECTED_ROLE_MENU\";\n\nexport const resetState = (payload) => {\n  return {\n    type: RESET_STATE,\n    payload,\n  };\n};\n\nexport const setListRoles = (payload) => {\n  return {\n    type: SET_LIST_ROLES,\n    payload,\n  };\n};\n\nexport const setSelectedRoleId = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_ID,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedRoleDetail = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_DETAIL,\n    payload,\n  };\n};\n\nexport const setSelectedRoleMenu = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_MENU,\n    payload,\n  };\n};\n\nexport const showToast = (message, type) => {\n  switch (type) {\n    case \"success\":\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n\n    case \"error\":\n      toast.error(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n    default:\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n  }\n};\n\nexport const getListRolesRequested = async () => {\n  const { data } = await Invoke.getListRole(1, 100);\n  store.dispatch(setListRoles(data.callback.data));\n};\n\nexport const mapDetailRoleToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().roles.selectedRoleDetail;\n  dispatch(change(\"editRolesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editRolesForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getMenuByRolesId = async (roleId) => {\n  const { data } = await Invoke.getMenuByRoleId(roleId);\n  let subItem = [];\n  data.callback.map((item, index) => {\n    subItem.push(item.menu_id);\n  });\n  store.dispatch(setSelectedRoleMenu(subItem));\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editRolesForm\", `id`, \"\"));\n  dispatch(change(\"editRolesForm\", `description`, \"\"));\n};\n\nconst doAddRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await Invoke.addRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteMenuRoleProcess = async (menuId, menuListApi) => {\n  const [menu] = menuListApi.filter((x) => x.menu_id === menuId);\n  await Invoke.deleteMenuByMenuRoleId(menu.id);\n};\n\nconst doAddMenuRoleProcess = async (menuId, roleId) => {\n  const payload = {\n    menu_id: menuId,\n    role_id: roleId,\n    view: true,\n    insert: true,\n    update: true,\n    delete: false,\n  };\n  await Invoke.addMenuRole(payload);\n};\n\nconst doSaveMenuRole = async (newMenuSelected) => {\n  const { getState } = store;\n  const currentMenuSelected = getState().roles.selectedRoleMenu;\n  const selectedRoleId = getState().roles.selectedRoleId;\n  const { data } = await Invoke.getMenuByRoleId(selectedRoleId);\n  const menuListApi = data.callback;\n\n  if (currentMenuSelected.length > 0) {\n    await currentMenuSelected.map((item, index) => {\n      doDeleteMenuRoleProcess(item, menuListApi);\n    });\n    setTimeout(() => {\n      newMenuSelected.map((newMenu, index) => {\n        doAddMenuRoleProcess(newMenu, selectedRoleId);\n      });\n    }, 1000);\n  } else {\n    newMenuSelected.map((item, index) => {\n      doAddMenuRoleProcess(item, selectedRoleId);\n    });\n  }\n};\n\nconst doEditRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.id = values.id;\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await doSaveMenuRole(menuSelected);\n    await Invoke.updateRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteRoleProcess = async (roleId) => {\n  try {\n    await Invoke.deleteRoleById(roleId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListRolesRequested();\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteRoleRequested = async (roleId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteRoleProcess(roleId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const saveRoleRequested = async (type, values, menuSelected) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddRoleProcess(values, menuSelected);\n      } else {\n        doEditRoleProcess(values, menuSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { change } from \"redux-form\";\nimport moment from \"moment\";\nimport { setSelectedJobService } from \"../../ListServices/Store/ListServicesActions\";\nimport fileDownload from \"js-file-download\";\n\nexport const SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA =\n  \"SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA\";\n\nexport const SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_GROUPING_SUMMARY_DATA = \"SET_GROUPING_SUMMARY_DATA\";\n\nexport const SET_SINGLE_SUMMARY_DATA = \"SET_SINGLE_SUMMARY_DATA\";\n\nexport const SET_GROUPING_CHECKLIST_DATA = \"SET_GROUPING_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_SUMMARY_DATA =\n  \"SET_SELECTED_SERVICES_SUMMARY_DATA\";\n\nexport const SET_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_SELECTED_SERVICES_DAILIES_DATA =\n  \"SET_SELECTED_SERVICES_DAILIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_HISTORIES_DATA =\n  \"SET_SELECTED_SERVICES_HISTORIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_CHECKLIST_DATA =\n  \"SET_SELECTED_SERVICES_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_REJECTED_DATA =\n  \"SET_SELECTED_SERVICES_REJECTED_DATA\";\n\nexport const SET_EDIT_TRANSACTION_MODAL = \"SET_EDIT_TRANSACTION_MODAL\";\n\nexport const SET_REJECTIONS_MODAL = \"SET_REJECTIONS_MODAL\";\n\nexport const SET_EDIT_DAILIES_MODAL = \"SET_EDIT_DAILIES_MODAL\";\n\nexport const SET_SELECTED_EDIT_DAILIES_DATA = \"SET_SELECTED_EDIT_DAILIES_DATA\";\n\nexport const SET_SELECTED_UNIT = \"SET_SELECTED_UNIT\";\n\nexport const RESET_DETAIL_SERVICE = \"RESET_DETAIL_SERVICE\";\n\nexport const SET_INSERT_MEDIA_MODAL = \"SET_INSERT_MEDIA_MODAL\";\n\nexport const SET_TYPE_FORM_DAILIES = \"SET_TYPE_FORM_DAILIES\";\n\nexport const SET_EDIT_SUMMARY_MODAL = \"SET_EDIT_SUMMARY_MODAL\";\n\nexport const setRejectionsModal = (payload) => {\n  return {\n    type: SET_REJECTIONS_MODAL,\n    payload,\n  };\n};\n\nexport const resetDetailService = () => {\n  return {\n    type: RESET_DETAIL_SERVICE,\n  };\n};\n\nexport const setSelectedUnit = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT,\n    payload,\n  };\n};\n\nexport const setEditTransactionModal = (payload) => {\n  return {\n    type: SET_EDIT_TRANSACTION_MODAL,\n    payload,\n  };\n};\n\nexport const setGroupingSelectedServicesMediaData = (payload) => {\n  return {\n    type: SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingSummaryData = (payload) => {\n  return {\n    type: SET_GROUPING_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setSingleSummaryData = (payload) => {\n  return {\n    type: SET_SINGLE_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingChecklistData = (payload) => {\n  return {\n    type: SET_GROUPING_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setEditDailiesModal = (payload) => {\n  return {\n    type: SET_EDIT_DAILIES_MODAL,\n    payload,\n  };\n};\n\nexport const setEditSummaryModal = (payload) => {\n  return {\n    type: SET_EDIT_SUMMARY_MODAL,\n    payload,\n  };\n};\n\nexport const setInsertMediaModal = (payload) => {\n  return {\n    type: SET_INSERT_MEDIA_MODAL,\n    payload,\n  };\n};\n\nexport const setSelectedServicesEmployeeListData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServicesChecklisttData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedSummaryData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceMediaData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceHistoriesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_HISTORIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceRejectedData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_REJECTED_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEditDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_EDIT_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const setTypeFormDailies = (payload) => {\n  return {\n    type: SET_TYPE_FORM_DAILIES,\n    payload,\n  };\n};\n\nexport const getJobServiceEmployeeList = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getServicesEmployee(jobId, 1, 100);\n  const serviceEmployeeList = data.callback.data;\n\n  const results = Promise.all(\n    serviceEmployeeList.map(async (item, index) => {\n      let subIitem = {};\n      subIitem.active = item.active;\n      subIitem.employee_service_id = item.id;\n      const employee = await Invoke.getEmployeeById(item.employee_id);\n      subIitem = { ...subIitem, ...employee.data.callback };\n      return subIitem;\n    })\n  );\n  dispatch(setSelectedServicesEmployeeListData(await results));\n};\n\nexport const getJobServiceSummary = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceSummary(jobId, unitId);\n    dispatch(setSelectedSummaryData(data.callback));\n  } catch (error) {\n    dispatch(setSelectedSummaryData({}));\n  }\n};\n\nexport const getJobServiceMedia = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceMedia(jobId, unitId);\n    dispatch(setSelectedServiceMediaData(data.callback.data));\n  } catch (error) {\n    dispatch(setSelectedServiceMediaData([]));\n  }\n};\n\nexport const getJobServiceDailies = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceDailies(jobId, unitId);\n    dispatch(\n      setSelectedServiceDailiesData(data.callback.data || data.callback)\n    );\n  } catch (error) {\n    dispatch(setSelectedServiceDailiesData([]));\n  }\n};\n\nexport const getJobServiceHistories = async (jobId, keyword = \"\") => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getJobServiceHistories(jobId, 1, 100, keyword);\n  dispatch(setSelectedServiceHistoriesData(data.callback.logs));\n};\n\nexport const getJobServiceRejections = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getRejectedData(jobId);\n  dispatch(setSelectedServiceRejectedData(data.callback));\n};\n\nexport const getChecklistData = async (unitModelId) => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getChecklistData(unitModelId);\n    dispatch(setSelectedServicesChecklisttData(data.callback));\n  } catch (e) {\n    console.log(e);\n    dispatch(setSelectedServicesChecklisttData([]));\n  }\n};\n\nexport const handleAddNewEmployeeService = async (jobId, employeeId) => {\n  const { dispatch } = store;\n  try {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.active = \"true\";\n    await Invoke.addNewEmployeeService(jobId, payload);\n    setTimeout(() => {\n      dispatch(ComponentActions.setGlobalModal(false));\n      dispatch(ComponentActions.setGlobalLoading(false));\n      getJobServiceEmployeeList(jobId);\n    }, 500);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nexport const setStatusEmployee = async (\n  jobId,\n  employeeServiceId,\n  employeeId,\n  isActive\n) => {\n  const payload = {};\n  payload.id = employeeServiceId;\n  payload.employee_id = employeeId;\n  payload.active = isActive;\n  await Invoke.setStatusEmployeeService(jobId, payload);\n  setTimeout(() => {\n    getJobServiceEmployeeList(jobId);\n  }, 500);\n};\n\nconst doRejectServiceProcess = async (jobId, values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.reason = values.reason;\n    await Invoke.setRejectedService(jobId, payload);\n    showToast(\"Berhasil melakukan reject\", \"success\");\n    navigate(\"/list_service\");\n    dispatch(setRejectionsModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setRejectionsModal(false));\n  }\n};\n\nconst doEditServiceProcess = async (values) => {\n  const { dispatch } = store;\n\n  const warranty = values.warranty.split(\"|\");\n  const warrantyYears = values.warrantyYears.split(\"|\");\n  const warrantyMonths = values.warrantyMonths.split(\"|\");\n\n  const payload = {};\n  payload.id = values.id;\n  payload.start = moment(values.startDate).format(\"YYYY-MM-DD\");\n  payload.due = moment(values.dueDate).format(\"YYYY-MM-DD\");\n  payload.job_perform = values.jobPerform;\n  payload.warranty = warranty[0];\n  payload.warranty_month = warrantyMonths[0] ?? 0;\n  payload.warranty_year = warrantyYears[0] ?? 0;\n\n  try {\n    await Invoke.updateJobService(payload);\n    showToast(\"Data berhasil disimpan\", \"success\");\n\n    const { data } = await Invoke.getOneServices(values.id);\n    await store.dispatch(\n      setSelectedJobService({ ...data.callback, units: values.unit_models })\n    );\n    dispatch(setEditTransactionModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nexport const handlePressEditRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditServiceProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah anda yakin menyimpan data ini?\", toastrConfirmOptions);\n};\n\nexport const handlePressRejectedRequested = async (jobId, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doRejectServiceProcess(jobId, values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin me me-reject data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nconst doEditDailiesProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n  const typeForm = getState().detailService.typeFormDailies;\n\n  const payload = {};\n  const insertPayload = {};\n  const splitActivity = values.activityType.split(\"|\") ?? \"\";\n  const timeStart = values.timeStartEnd[0]\n    ? moment(values.timeStartEnd[0]).format(\"HH:mm:ss\")\n    : moment().format(\"HH:mm:ss\");\n  const timeEnd = values.timeStartEnd[1]\n    ? moment(values.timeStartEnd[1]).format(\"HH:mm:ss\")\n    : moment().format(\"HH:mm:ss\");\n\n  const dailyStart = `${moment(values.startDate).format(\n    \"YYYY-MM-DD\"\n  )} ${timeStart}`;\n\n  const dailyEnd = `${moment(values.endDate).format(\"YYYY-MM-DD\")} ${timeEnd}`;\n\n  payload.id = values.id;\n  payload.title = values.title ?? \"\";\n  payload.daily_start = dailyStart;\n  payload.daily_end = dailyEnd;\n  payload.description = values.description ?? \"\";\n\n  insertPayload.title = values.title ?? \"\";\n  insertPayload.daily_start = dailyEnd;\n  insertPayload.daily_end = dailyStart;\n  insertPayload.description = values.description ?? \"\";\n  insertPayload.type = splitActivity[0] ?? \"none\";\n\n  try {\n    if (typeForm === \"add\") {\n      await Invoke.addJobServiceDaily(insertPayload, dataService.id);\n    } else {\n      await Invoke.updateJobServiceDailies(payload);\n    }\n\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    await getJobServiceDailies(dataService.id);\n    dispatch(setEditDailiesModal(false));\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nconst doEditSummaryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const payload = {};\n\n  payload.summary = values.summary ?? \"\";\n\n  if (dataService.is_external) {\n    try {\n      await Invoke.updateSummary(payload, dataService.id, values.unitId);\n      showToast(\"Berhasil menyimpan data\", \"success\");\n      dispatch(setEditSummaryModal(false));\n      // Call function to referesh summary unit group\n      getUnitSummary((res) => {\n        resetModalSummary();\n      });\n    } catch (error) {\n      showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n      dispatch(setEditSummaryModal(false));\n    }\n  } else {\n    try {\n      await Invoke.updateSummary(payload, dataService.id, null);\n      showToast(\"Berhasil menyimpan data\", \"success\");\n      dispatch(setEditSummaryModal(false));\n      // Call function to referesh summary unit single\n      getUnitSummary((res) => {\n        resetModalSummary();\n      });\n    } catch (error) {\n      showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n      dispatch(setEditSummaryModal(false));\n    }\n  }\n};\n\nconst doAddSummaryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const payload = {};\n\n  payload.summary = values.summary ?? \"\";\n\n  try {\n    await Invoke.updateSummary(payload, dataService.id, null);\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    dispatch(setEditSummaryModal(false));\n    // Call function to referesh summary unit group\n    getUnitSummary((res) => {\n      resetModalSummary();\n    });\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditSummaryModal(false));\n  }\n};\n\nexport const handlePressEditDailiesRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditDailiesProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handlePressEditSummaryRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (values.type === \"NEW\") {\n        doAddSummaryProcess(values);\n      } else {\n        doEditSummaryProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nconst doInsertMedia = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  dispatch(ComponentActions.setGlobalLoading(true));\n\n  const payload = {};\n\n  const splitUnit = values.unit ? values.unit.split(\"|\") : \"\";\n  const unitId = splitUnit[0] ?? \"\";\n\n  payload.title = values.title ?? \"\";\n  payload.description = values.description ?? \"\";\n  payload.type = \"image\";\n  payload.base64 = values.imageUrl ?? \"\";\n\n  const media = { media: [payload] };\n  try {\n    if (dataService.is_external) {\n      await Invoke.addJobServiceMedia(media, dataService.id, unitId);\n    } else {\n      await Invoke.addJobServiceMedia(media, dataService.id);\n    }\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    await getUnitMedia((callback) => {});\n    dispatch(setInsertMediaModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setInsertMediaModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nexport const handlePressInsertMediaRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doInsertMedia(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailTransactionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().services.selectedJobService;\n  dispatch(change(\"editTransactionForm\", `id`, data.id ?? \"\"));\n  dispatch(\n    change(\"editTransactionForm\", `startDate`, moment(data.start) ?? \"\")\n  );\n  dispatch(change(\"editTransactionForm\", `endDate`, moment(data.end) ?? \"\"));\n  dispatch(change(\"editTransactionForm\", `jobPerform`, data.job_perform ?? \"\"));\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warranty`,\n      `${data.warranty}|${data.warranty ? \"Warranty\" : \"No Warranty\"}`\n    )\n  );\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warrantyMonths`,\n      `${data.warranty_month}|${data.warranty_month} bulan` ?? \"0\"\n    )\n  );\n  dispatch(\n    change(\"editTransactionForm\", `warrantyYears`, data.warranty_year ?? \"\")\n  );\n};\n\nexport const mapDailiesToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().detailService.selectedEditDailies;\n  dispatch(change(\"editDailiesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `startDate`, moment(data.mulai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `endDate`, moment(data.selesai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `description`, data.deskripsi ?? \"\"));\n  dispatch(\n    change(\"editDailiesForm\", `activityType`, `${data.type}|${data.type}` ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editDailiesForm\",\n      `timeStartEnd`,\n      [moment(data.mulai), moment(data.selesai)] ?? \"\"\n    )\n  );\n};\n\nexport const resetModalSummary = () => {\n  const { dispatch } = store;\n  dispatch(change(\"editSummaryForm\", `type`, \"\"));\n  dispatch(change(\"editSummaryForm\", `unitId`, \"\"));\n  dispatch(change(\"editSummaryForm\", `summary`, \"\"));\n};\n\nexport const downloadTransactionPdf = async () => {\n  const { dispatch, getState } = store;\n  const jobId = getState().services.selectedJobService.id;\n  dispatch(ComponentActions.setGlobalLoading(true));\n\n  try {\n    const { data: dataTransactionPdf } = await Invoke.getTransactionPdfUrl(\n      jobId\n    );\n    const downloadUrl = dataTransactionPdf.callback.pdf.url.replace(\n      \"103.158.192.161:3000\",\n      \"\"\n    );\n    const { data } = await Invoke.downloadPdfFromUrl(downloadUrl);\n    dispatch(ComponentActions.setGlobalLoading(false));\n    fileDownload(data, `${dataTransactionPdf.callback.pdf.filename}.pdf`);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n    showToast(\"Gagal mengunduh report!\", \"error\");\n  }\n};\n\nexport const resetFormModalImage = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editMediaForm\", `imageUrl`, null));\n  dispatch(change(\"editMediaForm\", `title`, \"\"));\n  dispatch(change(\"editMediaForm\", `description`, \"\"));\n  dispatch(change(\"editMediaForm\", `unit`, \"\"));\n};\n\nexport const getUnitSummary = async (callback) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  // setIsCompleteLoadedSummary(false);\n  const groupingSummaryList = [];\n  const singleSummary = {};\n  let sequence = 0;\n\n  const setDispatch = (responseStatus) => {\n    if (sequence === dataService.units.length) {\n      if (responseStatus === \"error\") {\n        setTimeout(() => {\n          if (dataService.is_external) {\n            dispatch(setGroupingSummaryData(groupingSummaryList));\n          } else {\n            dispatch(setSingleSummaryData(singleSummary));\n          }\n\n          callback(true);\n        }, 1000);\n      } else {\n        setTimeout(() => {\n          if (dataService.is_external) {\n            dispatch(setGroupingSummaryData(groupingSummaryList));\n          } else {\n            dispatch(setSingleSummaryData(singleSummary));\n          }\n\n          callback(true);\n        }, 1000);\n      }\n    }\n  };\n\n  if (!dataService.is_external) {\n    await Invoke.getJobServiceSummary(dataService.id, null)\n      .then((dataSummary) => {\n        singleSummary.id = dataService.id;\n        singleSummary.summary = dataSummary.data.callback.summary;\n\n        setDispatch(dataSummary.status);\n      })\n      .catch((err) => {\n        singleSummary.id = dataService.id;\n        singleSummary.summary = \"\";\n\n        setDispatch(\"error\");\n        callback(true);\n        console.log(err);\n      });\n  }\n\n  if (dataService.units.length > 0) {\n    await dataService.units.map(async (item, index) => {\n      await Invoke.getJobServiceSummary(dataService.id, item.id)\n        .then((dataSummary) => {\n          groupingSummaryList.push({\n            id: item.id,\n            unitName: item.unit_name,\n            summary: dataSummary.data.callback.summary,\n          });\n\n          sequence += 1;\n          setDispatch(dataSummary.status);\n        })\n        .catch((err) => {\n          groupingSummaryList.push({\n            id: item.id,\n            unitName: item.unit_name,\n            summary: [],\n          });\n          sequence += 1;\n          setDispatch(\"error\");\n          callback(true);\n          console.log(err);\n        });\n    });\n  } else {\n    callback(true);\n  }\n};\n\nexport const getUnitMedia = async (callback) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const groupingMediaList = [];\n  let sequence = 0;\n\n  const setDispatch = () => {\n    if (sequence === dataService.units.length) {\n      setTimeout(() => {\n        dispatch(setGroupingSelectedServicesMediaData(groupingMediaList));\n        callback(true);\n      }, 1000);\n    }\n  };\n\n  if (dataService.units.length > 0) {\n    await dataService.units.map(async (item, index) => {\n      await Invoke.getJobServiceMedia(dataService.id, item.id)\n        .then((dataMedia) => {\n          const imageList = dataMedia.data.callback.data ?? [];\n          // Push to tempporary array\n          groupingMediaList.push({\n            unitName: item.unit_name,\n            image: imageList ?? [],\n          });\n          sequence += 1;\n          setDispatch();\n        })\n        .catch((err) => {\n          groupingMediaList.push({\n            unitName: item.unit_name,\n            image: [],\n          });\n\n          sequence += 1;\n          setDispatch();\n        });\n    });\n  } else {\n    try {\n      // Get media without unitId\n      const { data: dataMedia } = await Invoke.getJobServiceMedia(\n        dataService.id\n      );\n      // Push to tempporary array\n      groupingMediaList.push({\n        unitName: \"All\",\n        image: dataMedia.callback.data ?? [],\n      });\n      callback(true);\n    } catch (error) {\n      dispatch(setGroupingSelectedServicesMediaData([]));\n      callback(true);\n    }\n\n    setTimeout(() => {\n      dispatch(setGroupingSelectedServicesMediaData(groupingMediaList));\n      callback(true);\n    }, 1000);\n  }\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { setRejectionsModal } from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\nimport * as DetailServiceActions from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\n\nexport const SET_LIST_SERVICES = \"SET_LIST_SERVICES\";\nexport const SET_SELECTED_JOB_SERVICE = \"SET_SELECTED_JOB_SERVICE\";\nexport const SET_PAGING_LIST_SERVICE = \"SET_PAGING_LIST_SERVICE\";\nexport const SET_SELECTED_JOB_SERVICE_ID = \"SET_SELECTED_JOB_SERVICE_ID\";\nexport const SET_DASHBOARD_LIST_SERVICES = \"SET_DASHBOARD_LIST_SERVICES\";\n\nexport const setListServices = (payload) => {\n  return {\n    type: SET_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setDashboardListService = (payload) => {\n  return {\n    type: SET_DASHBOARD_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setPagingListService = (payload) => {\n  return {\n    type: SET_PAGING_LIST_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobService = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobServiceId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE_ID,\n    payload,\n  };\n};\n\nexport const getListServicesRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  type = \"\",\n  status = \"\",\n  employeeId = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListServices(\n      page,\n      limit,\n      keyword,\n      type,\n      status,\n      employeeId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListServices(data.callback.data));\n    store.dispatch(setPagingListService(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTopTenService = async () => {\n  try {\n    const { data } = await Invoke.getListServices(1, 10, \"\", \"\", \"\", \"\");\n    store.dispatch(setDashboardListService(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (page, limit, keyword, filterValues) => {\n  if (!filterValues) {\n    getListServicesRequested(page, limit, keyword);\n    return;\n  }\n\n  const splitTypeService = filterValues.typeService\n    ? filterValues.typeService.split(\"|\")\n    : \"\";\n  const splitStatusService = filterValues.statusService\n    ? filterValues.statusService.split(\"|\")\n    : \"\";\n\n  const typeService = filterValues.typeService ? splitTypeService[0] : \"\";\n  const statusService = filterValues.statusService ? splitStatusService[0] : \"\";\n\n  try {\n    await getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      typeService,\n      statusService\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getDetailServicePerUnit = async (service) => {\n\n  const { dispatch } = store;\n  // Hit media api and grouping by units :\n  let groupingChecklist = [];\n  if (service.units) {\n    await service.units.map(async (item, index) => {\n      const { data: dataChecklist } = await Invoke.getChecklistData(item.id);\n      // Push to tempporary array\n      groupingChecklist.push({\n        unitName: item.unit_name,\n        checklist: dataChecklist.callback,\n      });\n    });\n\n    // Save to reducer\n    await dispatch(\n      DetailServiceActions.setGroupingChecklistData(groupingChecklist)\n    );\n  }\n};\n\nexport const handlePressEdit = async (values) => {\n  store.dispatch(setGlobalLoading(true));\n  try {\n    const { data } = await Invoke.getOneServices(values.id);\n    const dataService = { ...data.callback, units: values.unit_models };\n    await store.dispatch(setSelectedJobService(dataService));\n    // await getDetailServicePerUnit(dataService);\n    setTimeout(() => {\n      store.dispatch(setGlobalLoading(false));\n      \n      navigate(\"detail-services\");\n    }, 1500);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteJobServiceProcess = async (jobId) => {\n  const { getState } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteJobServiceById(jobId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListServicesRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteJobServiceRequested = async (jobId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteJobServiceProcess(jobId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handlePressActionsRequested = async (jobId, type) => {\n  const { dispatch } = store;\n  type = type.toLowerCase();\n  let message;\n\n  switch (type) {\n    case \"approved\":\n      message = \"Apakah anda yakin ingin meng-approve data ini?\";\n      break;\n\n    case \"finished\":\n      message = \"Apakah anda yakin ingin mem-finishing data ini?\";\n      break;\n\n    case \"rejected\":\n      message = \"Apakah anda yakin ingin me me-reject data ini?\";\n      await dispatch(setRejectionsModal(true));\n      break;\n  }\n\n  if (type.toLowerCase() !== \"rejected\") {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        doCallActionProcess(jobId, type);\n      },\n      okText: \"Ya\",\n      cancelText: \"Tidak\",\n    };\n\n    toastr.confirm(message, toastrConfirmOptions);\n  }\n};\n\nexport const doCallActionProcess = async (jobId, type) => {\n  const { getState, dispatch } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n  dispatch(setGlobalLoading(true));\n  try {\n    if (type === \"approved\") {\n      await Invoke.setApprovedService(jobId);\n    }\n    if (type === \"finished\") {\n      await Invoke.setFinishedService(jobId);\n    }\n    await getListServicesRequested(page, limit);\n    showToast(\"Data berhasil di approved\", \"success\");\n    setTimeout(() => {\n      navigate(\"/list_service\");\n      dispatch(setGlobalLoading(false));\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(setGlobalLoading(false));\n    console.log(\"error : \", error);\n  }\n};\n","import {\n  SET_LIST_SERVICES,\n  SET_SELECTED_JOB_SERVICE,\n  SET_PAGING_LIST_SERVICE,\n  SET_SELECTED_JOB_SERVICE_ID,\n  SET_DASHBOARD_LIST_SERVICES,\n} from \"./ListServicesActions\";\n\nexport const initialState = {\n  listServices: [],\n  dashboardListServices: [],\n  selectedJobService: {},\n  selectedJobServiceId: {},\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function listServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_SERVICES:\n      newState.listServices = action.payload;\n      return { ...newState };\n\n    case SET_DASHBOARD_LIST_SERVICES:\n      newState.dashboardListServices = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE:\n      newState.selectedJobService = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE_ID:\n      newState.selectedJobServiceId = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_LIST_SERVICE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  PROCESS_GLOBAL_LOADING,\n  PROCESS_FORM_GLOBAL_LOADING,\n  RESET_ALL_LOADING,\n  SHOW_GLOBAL_MODAL,\n} from \"./ComponentAction\";\n\nexport const initialState = {\n  isLoadingGlobal: false,\n  isLoadingFormGlobal: false,\n  isModalVisible: false,\n};\n\nexport default function ComponentReducer(state = initialState, action) {\n  if (!action) {\n    return state;\n  }\n  const newState = Object.assign({}, state);\n\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case PROCESS_GLOBAL_LOADING:\n      newState.isLoadingGlobal = action.payload;\n      return { ...newState };\n    case PROCESS_FORM_GLOBAL_LOADING:\n      newState.isLoadingFormGlobal = action.payload;\n      return { ...newState };\n    case SHOW_GLOBAL_MODAL:\n      newState.isModalVisible = action.payload;\n      return { ...newState };\n    case RESET_ALL_LOADING:\n      newState.isLoadingGlobal = false;\n      newState.isLoadingFormGlobal = false;\n      return { ...newState };\n  }\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_CUSTOMER_LIST_DATA = \"SET_CUSTOMER_LIST_DATA\";\nexport const SET_PAGING_CUSTOMER = \"SET_PAGING_CUSTOMER\";\nexport const SET_SELECTED_CUSTOMER_DATA = \"SET_SELECTED_CUSTOMER_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_CUSTOMER_ID = \"SET_SELECTED_CUSTOMER_ID\";\nexport const SET_CUSTOMER_LIST_DATA_DROPDOWN =\n  \"SET_CUSTOMER_LIST_DATA_DROPDOWN\";\n\nexport const setCustomerListData = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCustomerListDataDropdown = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingCustomer = (payload) => {\n  return {\n    type: SET_PAGING_CUSTOMER,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerData = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerId = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_ID,\n    payload,\n  };\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editCustomerForm\", `id`, \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, \"\"));\n};\n\nexport const loadCustomerListData = async () => {\n  try {\n    const { data } = await Invoke.getCustomerList(1, 100);\n    store.dispatch(setCustomerListData(data.callback.data));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getCustomerListDataByPaging = async (\n  page,\n  limit,\n  keyword = \"\",\n  branchId = \"\",\n  isDropdownData = false\n) => {\n  try {\n    const { data } = await Invoke.getCustomerList(\n      page,\n      limit,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdownData) {\n      store.dispatch(setCustomerListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setCustomerListData(data.callback.data));\n    }\n    store.dispatch(setPagingCustomer(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteCustomerProcess = async (customerId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteCustomerById(customerId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddCustomerProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n\n    await Invoke.addCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n    await Invoke.updateCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveCustomerRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddCustomerProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailCustomerToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().customers.selectedCustomerData;\n  const provinceId = data.province_id + \"|\" + data.province_name;\n  const cityId = data.city_id + \"|\" + data.city_name;\n  const branchId = data.branch_id + \"|\" + data.branch_name;\n\n  dispatch(change(\"editCustomerForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, data.pic_phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, data.pic ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, data.work_hour ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, provinceId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, cityId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, branchId ?? \"\"));\n};\n\nexport const deleteCustomerRequested = async (customerId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteCustomerProcess(customerId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_CUSTOMER_LIST_DATA,\n  SET_PAGING_CUSTOMER,\n  SET_FORM_STATUS,\n  SET_SELECTED_CUSTOMER_DATA,\n  SET_SELECTED_CUSTOMER_ID,\n  SET_CUSTOMER_LIST_DATA_DROPDOWN,\n} from \"./CustomersActions\";\n\nexport const initialState = {\n  listCustomers: [],\n  listCustomersDropdown: [],\n  formStatus: \"add\",\n  selectedCustomerData: {},\n  selectedCustomerId: \"\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_CUSTOMER_LIST_DATA:\n      newState.listCustomers = action.payload;\n      return { ...newState };\n\n    case SET_CUSTOMER_LIST_DATA_DROPDOWN:\n      newState.listCustomersDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_CUSTOMER:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_DATA:\n      newState.selectedCustomerData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_ID:\n      newState.selectedCustomerId = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ADMIN = \"SET_LIST_ADMIN\";\nexport const SET_PAGING_ADMIN = \"SET_PAGING_ADMIN\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ADMIN_ID = \"SET_SELECTED_ADMIN_ID\";\nexport const SET_SELECTED_ADMIN_DATA = \"SET_SELECTED_ADMIN_DATA\";\n\nexport const setListAdmin = (payload) => {\n  return {\n    type: SET_LIST_ADMIN,\n    payload,\n  };\n};\n\nexport const setPagingAdmin = (payload) => {\n  return {\n    type: SET_PAGING_ADMIN,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedAdminId = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_ID,\n    payload,\n  };\n};\n\nexport const setSelectedAdminData = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_DATA,\n    payload,\n  };\n};\n\nexport const getListAdminRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListAdmin(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListAdmin(data.callback.data));\n    store.dispatch(setPagingAdmin(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editAdminForm\", `id`, \"\"));\n  dispatch(change(\"editAdminForm\", `username`, \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, \"\"));\n  dispatch(change(\"editAdminForm\", `password`, \"\"));\n};\n\nconst doAddAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.addAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.updateAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteAdminProcess = async (adminId) => {\n  const { getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteAdminById(adminId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListAdminRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveAdminRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddAdminProcess(values);\n      } else {\n        doEditAdminProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailAdminToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().admins.selectedAdminData;\n  dispatch(change(\"editAdminForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editAdminForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, data.fullname ?? \"\"));\n};\n\nexport const deleteAdminRequested = async (adminId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteAdminProcess(adminId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_LIST_ADMIN,\n  SET_FORM_STATUS,\n  SET_PAGING_ADMIN,\n  SET_SELECTED_ADMIN_ID,\n  SET_SELECTED_ADMIN_DATA,\n} from \"./AdminActions\";\n\nexport const initialState = {\n  listAdmin: [],\n  selectedAdminId: \"\",\n  selectedAdminData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ADMIN:\n      newState.listAdmin = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_ID:\n      newState.selectedAdminId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_DATA:\n      newState.selectedAdminData = action.payload;\n      return { ...newState };\n    case SET_PAGING_ADMIN:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_LIST_ROLES,\n  SET_SELECTED_ROLE_ID,\n  SET_SELECTED_ROLE_DETAIL,\n  SET_FORM_STATUS,\n  RESET_STATE,\n  SET_SELECTED_ROLE_MENU\n} from \"./RolesActions\";\n\nexport const initialState = {\n  listRoles: [],\n  selectedRoleId: \"\",\n  selectedRoleDetail: {},\n  selectedRoleMenu: [],\n  formStatus: \"add\",\n};\n\nexport default function rolesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ROLES:\n      newState.listRoles = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_ID:\n      newState.selectedRoleId = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_DETAIL:\n      newState.selectedRoleDetail = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_MENU:\n      newState.selectedRoleMenu = action.payload;\n      return { ...newState };\n\n    case RESET_STATE:\n      newState.listRoles = [];\n      newState.selectedRoleId = \"\";\n      newState.selectedRoleDetail = {};\n      newState.formStatus = \"add\";\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_PROVINCE_LIST_DATA = \"SET_PROVINCE_LIST_DATA\";\nexport const SET_CITY_LIST_DATA = \"SET_CITY_LIST_DATA\";\nexport const SET_MENU_LIST_DATA = \"SET_MENU_LIST_DATA\";\n\nexport const setProvinceListData = (payload) => {\n  return {\n    type: SET_PROVINCE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setMenuListData = (payload) => {\n  return {\n    type: SET_MENU_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCityListData = (payload) => {\n  return {\n    type: SET_CITY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const loadProvinceListData = async () => {\n  try {\n    const { data } = await Invoke.getProvinceList(1, 100);\n    store.dispatch(setProvinceListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadCityListData = async (provinceId) => {\n  try {\n    const { data } = await Invoke.getCityList(1, 200, provinceId);\n    store.dispatch(setCityListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadMenuListData = async () => {\n  try {\n    const { data } = await Invoke.getListMenu(1, 100);\n    store.dispatch(setMenuListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_LIST_DATA = \"SET_EMPLOYEE_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_ID = \"SET_SELECTED_EMPLOYEE_ID\";\nexport const SET_SELECTED_EMPLOYEE_DATA = \"SET_SELECTED_EMPLOYEE_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEES = \"SET_PAGING_EMPLOYEES\";\nexport const SET_EMPLOYEE_LIST_DROPDOWN = \"SET_EMPLOYEE_LIST_DROPDOWN\";\n\nexport const setEmployeeListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setEmployeeListDropdown = (payload) => {\n  return {\n    type: SET_EMPLOYEE_LIST_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedRoleEmployee = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployees = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEES,\n    payload,\n  };\n};\n\nexport const loadEmployeeListData = async (\n  page,\n  limit,\n  keyword = \"\",\n  roleId = \"\",\n  branchId = \"\",\n  divisionId = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeList(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setEmployeeListData(data.callback.data));\n    store.dispatch(setPagingEmployees(paging));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const loadEmployeeDataDropdown = async () => {\n  try {\n    const { data } = await Invoke.getEmployeeList(1, 99999999, \"\", \"\", \"\", \"\");\n\n    store.dispatch(setEmployeeListDropdown(data.callback.data));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getEmployeeToolsRequested = (employeeId, page, limit) => {\n  try {\n    const { data } = Invoke.getEmployeeTools(employeeId, page, limit);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployees(paging));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getRolesByEmployeeId = async (employeeId) => {\n  const { data } = await Invoke.getEmployeeRoles(employeeId, 1, 100);\n  let subItem = [];\n  data.callback.data.map((item, index) => {\n    subItem.push(item.role_id);\n  });\n  store.dispatch(setSelectedRoleEmployee(subItem));\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeProcess = async (values, selectedRoles) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.nik = values.nik;\n    payload.password = values.password ?? \"\";\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n\n    await Invoke.addEmployee(payload);\n    // await doSaveEmployeeRole(selectedRoles, \"add\");\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    loadEmployeeListData(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employees\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeProcess = async (values, roleSelected) => {\n  const { dispatch } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.nik = values.nik;\n    payload.password = values.password ?? \"\";\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n    // Save Employee - roles actions\n    if (values.selectedRoles.length > 0) {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-and-add\");\n    } else {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-all\");\n    }\n    // Save Employee data actions\n    await Invoke.updateEmployee(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    // setTimeout(() => {\n    //   navigate(\"/employees\");\n    // }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doAddEmployeeRoleProcess = async (newRoleId, employeeId) => {\n  const payload = {\n    employee_id: employeeId,\n    role_id: newRoleId,\n  };\n  await Invoke.addEmployeeRole(payload);\n};\n\nconst doDeleteAllEmployeeRoleProcess = async (roleListApi) => {\n  roleListApi.data.map(async (item, index) => {\n    await Invoke.deleteEmployeeRole(item.id);\n  });\n};\n\nconst doDeleteEmployeeProcess = async (employeeId) => {\n  const { getState } = store;\n  const paging = getState().employees.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeById(employeeId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    loadEmployeeListData(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doSaveEmployeeRole = async (newRoleSelected, type) => {\n  const { getState } = store;\n  try {\n    const currentRoleSelected = getState().employees.selectedRoleEmployee;\n    const selectedEmployeeId = getState().employees.selectedEmployeeId;\n    const { data } = await Invoke.getEmployeeRoles(selectedEmployeeId, 1, 100);\n    const roleListApi = data.callback;\n\n    if (type === \"delete-all\") {\n      await currentRoleSelected.map(async (item, index) => {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n      });\n    } else if (type === \"add\") {\n      await newRoleSelected.map(async (item, index) => {\n        await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n      });\n    } else {\n      // Check if the user is has been have roles or not\n      if (currentRoleSelected.length > 0) {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      } else {\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveEmployeeRequested = async (\n  formStatus,\n  values,\n  roleSelected\n) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeProcess(values, roleSelected);\n      } else {\n        doEditEmployeeProcess(values, roleSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employees.selectedEmployeeData;\n  const branch = `${data.branch_id}|${data.branch_name}`;\n  const province = `${data.province_id}|${data.province_name}`;\n  const city = `${data.city_id}|${data.city_name}`;\n\n  dispatch(change(\"editEmployeeForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `nik`, data.nik ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, branch ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, province ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, city ?? \"\"));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(MasterDataActions.setCityListData([]));\n  dispatch(change(\"editEmployeeForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n};\n\nexport const deleteEmployeeRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n\n  if (!values) {\n    await loadEmployeeListData(page, limit, keyword);\n    return;\n  }\n\n  const splitRole = values.role ? values.role.split(\"|\") : \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const splitDivision = values.division ? values.division.split(\"|\") : \"\";\n\n  const roleId = values.role ? splitRole[0] : \"\";\n  const branchId = values.branch ? splitBranch[0] : \"\";\n  const divisionId = values.division ? splitDivision[0] : \"\";\n\n  try {\n    await loadEmployeeListData(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_ID,\n  SET_SELECTED_EMPLOYEE_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_ROLE_EMPLOYEE,\n  SET_PAGING_EMPLOYEES,\n  SET_EMPLOYEE_LIST_DROPDOWN\n} from \"./EmployeesActions\";\n\nexport const initialState = {\n  listEmployees: [],\n  listEmployeeDropdown: [],\n  selectedEmployeeId: \"\",\n  selectedEmployeeData: {},\n  selectedRoleEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_LIST_DATA:\n      newState.listEmployees = action.payload;\n      return { ...newState };\n\n      case SET_EMPLOYEE_LIST_DROPDOWN:\n      newState.listEmployeeDropdown = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_ID:\n      newState.selectedEmployeeId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_DATA:\n      newState.selectedEmployeeData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_EMPLOYEE:\n      newState.selectedRoleEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEES:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_TOOL_LIST_DATA = \"SET_EMPLOYEE_TOOL_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_ID = \"SET_SELECTED_EMPLOYEE_TOOLS_ID\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_DATA =\n  \"SET_SELECTED_EMPLOYEE_TOOLS_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEE_TOOLS = \"SET_PAGING_EMPLOYEE_TOOLS\";\n\nexport const setEmployeeToolsListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_TOOL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployeeTools = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEE_TOOLS,\n    payload,\n  };\n};\n\nexport const getEmployeeToolsRequested = async (\n  employeeId,\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeTools(employeeId, page, limit);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployeeTools(paging));\n    store.dispatch(setEmployeeToolsListData(data.callback.data));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeToolsData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const slpitToolsId = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.tool_id = slpitToolsId[0];\n\n    await Invoke.addEmployeeTools(payload);\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const employeeId = getState().employees.selectedEmployeeId;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const splitTools = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.employee_id = employeeId;\n    payload.tool_id = splitTools[0];\n\n    // Save Employee data actions\n    await Invoke.updateEmployeeTools(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doDeleteEmployeeToolsProcess = async (employeeToolsId) => {\n  const { getState } = store;\n  const paging = getState().employeeTools.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeToolsById(employeeToolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveEmployeeToolsRequested = async (formStatus, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeToolsProcess(values);\n      } else {\n        doEditEmployeeToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employeeTools.selectedEmployeeToolsData;\n  // const splitTools = data;\n  const tools = `${data.tool_id}|${data.name}`;\n\n  dispatch(change(\"editEmployeeToolsForm\", `id`, data.id));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, tools));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(change(\"editEmployeeToolsForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, \"\"));\n};\n\nexport const deleteEmployeeToolsRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeToolsProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n\n  if (!values) {\n    getEmployeeToolsRequested(employeeId, page, limit, keyword);\n    return;\n  }\n\n  try {\n    await getEmployeeToolsRequested(employeeId, page, limit, keyword);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_TOOL_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_TOOLS_ID,\n  SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_EMPLOYEE_TOOLS,\n} from \"./EmployeeToolsActions\";\n\nexport const initialState = {\n  listEmployeeTools: [],\n  selectedEmployeeToolsId: \"\",\n  selectedEmployeeToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeeToolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_TOOL_LIST_DATA:\n      newState.listEmployeeTools = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_ID:\n      newState.selectedEmployeeToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_DATA:\n      newState.selectedEmployeeToolsData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEE_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_PROVINCE_LIST_DATA,\n  SET_MENU_LIST_DATA,\n  SET_CITY_LIST_DATA\n} from \"./MasterDataActions\";\n\nexport const initialState = {\n  listProvince: [],\n  listCity: [],\n  listMenu: [],\n};\n\nexport default function masterDataReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_PROVINCE_LIST_DATA:\n      newState.listProvince = action.payload;\n      return { ...newState };\n    case SET_CITY_LIST_DATA:\n      newState.listCity = action.payload;\n      return { ...newState };\n    case SET_MENU_LIST_DATA:\n      newState.listMenu = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_ID = \"SET_SELECTED_UNIT_ID\";\nexport const SET_SELECTED_UNIT_DATA = \"SET_SELECTED_UNIT_DATA\";\nexport const SET_PAGING_UNIT = \"SET_PAGING_UNIT\";\n\nexport const setUnitListData = (payload) => {\n  return {\n    type: SET_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnit = (payload) => {\n  return {\n    type: SET_PAGING_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteUnitProcess = async (unitId) => {\n  const { getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitById(unitId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    payload.photo = values.imageUrl ?? \"\";\n    await Invoke.addUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.photo = values.imageUrl ?? \"\";\n    payload.description = values.description;\n    await Invoke.updateUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitForm\", `id`, \"\"));\n  dispatch(change(\"editUnitForm\", `name`, \"\"));\n  dispatch(change(\"editUnitForm\", `description`, \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, \"\"));\n};\n\nexport const mapDetailUnitToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().units.selectedUnitsData;\n\n  dispatch(change(\"editUnitForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitForm\", `description`, data.description ?? \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, data.photo ?? \"\"));\n};\n\nexport const getUnitListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getUnitList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitListData(data.callback.data));\n    store.dispatch(setPagingUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitProcess(values);\n      } else {\n        doEditUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitRequested = async (unitId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitProcess(unitId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_ID,\n  SET_SELECTED_UNIT_DATA,\n  SET_PAGING_UNIT\n} from \"./UnitsActions\";\n\nexport const initialState = {\n  listUnits: [],\n  selectedUnitsId: \"\",\n  selectedUnitsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_LIST_DATA:\n      newState.listUnits = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_ID:\n      newState.selectedUnitsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_DATA:\n      newState.selectedUnitsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_JOB_FORMS_LIST_DATA = \"SET_JOB_FORMS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_JOB_FORMS_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_JOB_FORMS_DATA = \"SET_SELECTED_JOB_FORMS_DATA\";\nexport const SET_PAGING_JOB_FORM = \"SET_PAGING_JOB_FORM\";\n\nexport const setJobFormsListData = (payload) => {\n  return {\n    type: SET_JOB_FORMS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingJobForm = (payload) => {\n  return {\n    type: SET_PAGING_JOB_FORM,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsData = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (jobFormsId) => {\n  const { getState } = store;\n  const data = getState().jobForms;\n  const { paging } = data;\n\n  try {\n    await Invoke.deleteJobForms(jobFormsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getJobFormsListDataRequested(paging.page, paging.limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editJobForms\", `id`, \"\"));\n  dispatch(change(\"editJobForms\", `name`, \"\"));\n  dispatch(change(\"editJobForms\", `description`, \"\"));\n};\n\nexport const mapDetailJobFormsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().jobForms.selectedJobFormsData;\n  dispatch(change(\"editJobForms\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editJobForms\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editJobForms\", `description`, data.description ?? \"\"));\n};\n\nexport const getJobFormsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListJobForm(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page ?? 1;\n    paging.limit = data.callback.limit ?? 10;\n    paging.totalPage = data.callback.totalPage ?? 1;\n    store.dispatch(setJobFormsListData(data.callback.data));\n    store.dispatch(setPagingJobForm(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveJobFormsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddJobFormsProcess(values);\n      } else {\n        doEditJobFormsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteJobFormsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_JOB_FORMS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_JOB_FORMS_ID,\n  SET_SELECTED_JOB_FORMS_DATA,\n  SET_PAGING_JOB_FORM,\n} from \"./JobFormsActions\";\n\nexport const initialState = {\n  listJobForms: [],\n  selectedJobFormsId: \"\",\n  selectedJobFormsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function jobFormsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_JOB_FORMS_LIST_DATA:\n      newState.listJobForms = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_ID:\n      newState.selectedJobFormsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_DATA:\n      newState.selectedJobFormsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_JOB_FORM:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_BRANCH_LIST_DATA = \"SET_BRANCH_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_BRANCH_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_BRANCH_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_BRANCH = \"SET_PAGING_BRANCH\";\nexport const SET_BRANCH_LIST_DATA_DROPDOWN = \"SET_BRANCH_LIST_DATA_DROPDOWN\";\n\nexport const setBranchListData = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setBranchListDataDropdown = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingBranch = (payload) => {\n  return {\n    type: SET_PAGING_BRANCH,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedBranchId = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_ID,\n    payload,\n  };\n};\n\nexport const setSelectedBranchData = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteBranchById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getBranchListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.addBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.updateBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editBranchForm\", `id`, \"\"));\n  dispatch(change(\"editBranchForm\", `description`, \"\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().branch.selectedBranchData;\n  dispatch(change(\"editBranchForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editBranchForm\", `description`, data.name ?? \"\"));\n};\n\nexport const getBranchListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  isDropdown = false\n) => {\n  try {\n    const { data } = await Invoke.getListBranch(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdown) {\n      store.dispatch(setBranchListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setBranchListData(data.callback.data));\n    }\n    store.dispatch(setPagingBranch(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveBranchRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddBranchProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteBranchRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_BRANCH_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_BRANCH,\n  SET_SELECTED_BRANCH_ID,\n  SET_SELECTED_BRANCH_DATA,\n  SET_BRANCH_LIST_DATA_DROPDOWN\n} from \"./BranchActions\";\n\nexport const initialState = {\n  listBranch: [],\n  listBranchDropdown: [],\n  selectedBranchId: \"\",\n  selectedBranchData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_BRANCH_LIST_DATA:\n      newState.listBranch = action.payload;\n      return { ...newState };\n\n    case SET_BRANCH_LIST_DATA_DROPDOWN:\n      newState.listBranchDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_ID:\n      newState.selectedBranchId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_DATA:\n      newState.selectedBranchData = action.payload;\n      return { ...newState };\n    case SET_PAGING_BRANCH:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_SERVICES_SUMMARY_DATA,\n  SET_SELECTED_SERVICES_MEDIA_DATA,\n  SET_SELECTED_SERVICES_DAILIES_DATA,\n  SET_SELECTED_SERVICES_HISTORIES_DATA,\n  SET_SELECTED_SERVICES_CHECKLIST_DATA,\n  SET_SELECTED_SERVICES_REJECTED_DATA,\n  SET_REJECTIONS_MODAL,\n  SET_EDIT_TRANSACTION_MODAL,\n  SET_EDIT_DAILIES_MODAL,\n  SET_SELECTED_EDIT_DAILIES_DATA,\n  SET_SELECTED_UNIT,\n  RESET_DETAIL_SERVICE,\n  SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n  SET_GROUPING_SUMMARY_DATA,\n  SET_SINGLE_SUMMARY_DATA,\n  SET_GROUPING_CHECKLIST_DATA,\n  SET_INSERT_MEDIA_MODAL,\n  SET_TYPE_FORM_DAILIES,\n  SET_EDIT_SUMMARY_MODAL,\n} from \"./DetailServiceTransactionAction\";\n\nexport const initialState = {\n  selectedServiceEmployeeList: [],\n  selectedServiceSummary: {},\n  selectedServiceMedia: [],\n  groupingSelectedServiceMedia: [],\n  groupingSelectedServiceSummary: [],\n  singleSelectedServiceSummary: {},\n  groupingSelectedServiceChecklist: [],\n  selectedServiceDailies: [],\n  selectedServiceHistories: [],\n  selectedServiceChecklist: [],\n  selectedServiceRejected: [],\n  rejectionsModal: false,\n  editTransactionModal: false,\n  editDailiesModal: false,\n  editSummaryModal: false,\n  insertMediaModal: false,\n  typeFormDailies: \"add\",\n  selectedEditDailies: {},\n  selectedUnit: \"Seluruh Unit\",\n};\n\nexport default function detailServiceTransactionReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA:\n      newState.selectedServiceEmployeeList = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_SUMMARY_DATA:\n      newState.selectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_MEDIA_DATA:\n      newState.selectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA:\n      newState.groupingSelectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SUMMARY_DATA:\n      newState.groupingSelectedServiceSummary = action.payload;\n    case SET_SINGLE_SUMMARY_DATA:\n      newState.singleSelectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_GROUPING_CHECKLIST_DATA:\n      newState.groupingSelectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_DAILIES_DATA:\n      newState.selectedServiceDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_HISTORIES_DATA:\n      newState.selectedServiceHistories = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_CHECKLIST_DATA:\n      newState.selectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_REJECTED_DATA:\n      newState.selectedServiceRejected = action.payload;\n      return { ...newState };\n    case SET_REJECTIONS_MODAL:\n      newState.rejectionsModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_TRANSACTION_MODAL:\n      newState.editTransactionModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_DAILIES_MODAL:\n      newState.editDailiesModal = action.payload;\n      return { ...newState };\n    case SET_SELECTED_EDIT_DAILIES_DATA:\n      newState.selectedEditDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      return { ...newState };\n    case SET_INSERT_MEDIA_MODAL:\n      newState.insertMediaModal = action.payload;\n      return { ...newState };\n    case SET_TYPE_FORM_DAILIES:\n      newState.typeFormDailies = action.payload;\n      return { ...newState };\n    case SET_EDIT_SUMMARY_MODAL:\n      newState.editSummaryModal = action.payload;\n      return { ...newState };\n    case RESET_DETAIL_SERVICE:\n      return initialState;\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_MODEL_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_MODEL_ID = \"SET_SELECTED_UNIT_MODEL_ID\";\nexport const SET_SELECTED_UNIT_MODEL_DATA = \"SET_SELECTED_UNIT_MODEL_DATA\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\n\nexport const setUnitModelListData = (payload) => {\n  return {\n    type: SET_UNIT_MODEL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_DATA,\n    payload,\n  };\n};\n\nexport const getUnitModelListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitModel(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitModelListData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitModelsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.addUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitModelsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = values.unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.updateUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (unitModelId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitModelById(unitModelId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitModelsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitModelsProcess(values);\n      } else {\n        doEditUnitModelsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitModelToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitModels.selectedUnitModelsData;\n\n  dispatch(change(\"editUnitModelForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, data.descriptions ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(change(\"editUnitModelForm\", `machineNo`, data.machine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, data.engine_model ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, data.engine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, data.chasis_no ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `transmissionNo`, data.transmission_no ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitModelForm\", `id`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `machineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `transmissionNo`, \"\"));\n};\n","import {\n  SET_UNIT_MODEL_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_MODEL_ID,\n  SET_SELECTED_UNIT_MODEL_DATA,\n  SET_PAGING_UNIT_MODEL\n} from \"./UnitModelActions\";\n\nexport const initialState = {\n  listUnitModels: [],\n  selectedUnitModelsId: \"\",\n  selectedUnitModelsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitModelReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_MODEL_LIST_DATA:\n      newState.listUnitModels = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_ID:\n      newState.selectedUnitModelsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_DATA:\n      newState.selectedUnitModelsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_ENUM_UNIT_MODEL = \"SET_ENUM_UNIT_MODEL\";\n\nexport const setEnumUnintModel = (payload) => {\n  return {\n    type: SET_ENUM_UNIT_MODEL,\n    payload,\n  };\n};\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateUnitModel = async (unitId, fieldIndex) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getListUnitModel(1, 100, unitId, \"\");\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${fieldIndex}].enumUnitModel`,\n      data.callback.data ?? []\n    )\n  );\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"externalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(1, 200, employeeData.province_id);\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === employeeData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        citySelected.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        citySelected\n      )\n    );\n    // store.dispatch(\n    //   change(\"externalServiceForm\", \"employeeCityName\", detailEmployee.nik)\n    // );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"externalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"externalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const onChangeUnitModel = (val, index, enumUnit) => {\n  const { dispatch } = store;\n\n  const splitUnitModel = val.split(\"|\");\n\n  const [selectedUnitModel] = enumUnit.filter(\n    (x) => x.id === splitUnitModel[0]\n  );\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${index}].unitModelSerialNumber`,\n      selectedUnitModel.serial_number ?? \"\"\n    )\n  );\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  const splitWarranty = values.warranty.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const unitList = [];\n  values.units.map((item, index) => {\n    const splitUnitModel = item.unitModelId.split(\"|\");\n    unitList.push({\n      unit_model_id: splitUnitModel[0],\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"true\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: splitWarranty[0],\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: unitList ?? [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              resolve();\n            }, 1000);\n            setTimeout(() => {\n              navigate(\"list_service\");\n            }, 1500);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import { SET_ENUM_UNIT_MODEL } from \"./ExternalServiceActions\";\n\nexport const initialState = {\n  enumUnitModel: [],\n};\n\nexport default function externalServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ENUM_UNIT_MODEL:\n      newState.enumUnitModel = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change, reset } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { message } from \"antd\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_IDENTIFICATIONN_LIST_DATA = \"SET_IDENTIFICATIONN_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_IDENTIFICATION_ID = \"SET_SELECTED_IDENTIFICATION_ID\";\nexport const SET_PAGING_IDENTIFICATION = \"SET_PAGING_IDENTIFICATION\";\nexport const SET_SELECTED_IDENTIFICATION_DATA =\n  \"SET_SELECTED_IDENTIFICATION_DATA\";\n\nexport const setIdentificationListData = (payload) => {\n  return {\n    type: SET_IDENTIFICATIONN_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingIdentification = (payload) => {\n  return {\n    type: SET_PAGING_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationId = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationData = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_DATA,\n    payload,\n  };\n};\n\nexport const getIdentificationListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState, dispatch } = store;\n  try {\n    const branches = getState().branch.listBranch;\n    const { data } = await Invoke.getIdentificationList(page, limit, keyword);\n    const identificationList = data.callback.data;\n\n    const newIdentificationList = [];\n    if (identificationList.length > 0) {\n      identificationList.map((item, index) => {\n        const [defaultBranch] = branches.filter((x) => x.id === item.branch_id);\n        item.branch_name = defaultBranch ? defaultBranch.name : \"-\";\n\n        newIdentificationList.push(item);\n      });\n    }\n\n    dispatch(setIdentificationListData(newIdentificationList));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteIdentificationProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteIdentificationById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddIdentificationProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const splitCustomer = values.customer.split(\"|\");\n    const splitBranch = values.branch.split(\"|\");\n    const splitLocation = values.location.split(\"|\");\n    const splitMilling = values.milling.split(\"|\");\n    const splitType = values.type.split(\"|\");\n\n    const payload = {};\n    payload.customer_id = splitCustomer[0];\n    payload.branch_id = splitBranch[0];\n    payload.location = splitLocation[0];\n    payload.type = splitType[0];\n    payload.status = SelectStatus[0].value;\n    payload.milling = splitMilling[0];\n\n    await Invoke.addIdentification(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationMilling = async (values, isLastStep) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = !values.instanceType\n      ? \"\"\n      : values.instanceType.split(\"|\");\n    const splitMillingStatus = !values.millingStatus\n      ? \"\"\n      : values.millingStatus.split(\"|\");\n    const splitCity = !values.city ? \"\" : values.city.split(\"|\") ?? [];\n    const splitProvince = !values.province\n      ? \"\"\n      : values.province.split(\"|\") ?? [];\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0],\n      instance_name: values.instanceName ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0] ?? \"\",\n      city: splitCity[1] ?? \"\",\n      province: splitProvince[1] ?? \"\",\n      phone: values.phone ?? \"\",\n      milling_capacity: values.millingCapacity ?? \"\",\n      milling_work_capacity_perday: values.millingWorkCapacityPerDay ?? \"\",\n      rice_trademark: values.riceTrademark ?? \"\",\n      history_service_place: values.history_service_place ?? \"\",\n      history_service_type: values.history_service_type ?? \"\",\n      notes: values.note ?? \"\",\n      engine_confs: engineConfs,\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    if (isLastStep) {\n      showToast(\"Menyimpan perubahan\", \"success\");\n      setTimeout(() => {\n        navigate(\"identification\");\n      }, 1000);\n    }\n    // return;\n    await Invoke.updateIdentificationMilling(payload);\n    // showToast(\"Pembaruan Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationRegular = async (values, isFinished) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    if (!values || values === undefined) {\n      // showToast(\"Harap lengkapi form untuk melanjutkan\", \"error\");\n      return;\n    }\n\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = values?.instanceType.split(\"|\");\n    const splitMillingStatus = values.millingStatus\n      ? values?.millingStatus.split(\"|\")\n      : [\"\"];\n    const splitCity = values?.city.split(\"|\");\n    const splitProvince = values?.province.split(\"|\");\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0] ?? \"\",\n      instance_name: values.instanceName ?? \"\",\n      instance_address: values.instanceAddress ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0],\n      address_district: \"\",\n      address_city: splitCity[1] ?? \"\",\n      address_province: splitProvince[1] ?? \"\",\n      address_subdistrict: values.kelurahan ?? \"\",\n      address_postal_code: values.postalCode ?? \"\",\n      phone: values.instancePhoneNumber ?? \"\",\n      product_name: values.productName,\n      buy_date: \"2021-09-22\",\n      assistance_date: \"2021-09-25\",\n      serial_number: \"SN1231\",\n      machine_number: \"MCN1231\",\n      gearbox_number: \"GB1231\",\n      production_unit_year: \"2021\",\n      work_hour_per_day: \"8 Hours\",\n      hour_meter: 1233,\n      history_service_place: \"Fee Text\",\n      history_service_type: \"Fee Text\",\n      notes: \"Test Regular Identification\",\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    // return;\n    await Invoke.updateIdentificationRegular(payload);\n    if (isFinished) {\n      showToast(\"Data berhasil disimpan\", \"success\");\n      getIdentificationListRequested(page, limit);\n      navigate(\"/identification\");\n    }\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n// === END INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(reset(\"editIdentificationhForm\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().identification.setSelectedIdentificationData;\n  dispatch(change(\"editIdentificationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editIdentificationForm\", `description`, data.name ?? \"\"));\n};\n\nexport const saveIdentificationRequested = async (\n  type,\n  values,\n  isLastStep = false\n) => {\n  const { getState } = store;\n  const isMilling =\n    getState().identification.selectedIdentificationData.milling;\n\n  if (type === \"add\") {\n    doAddIdentificationProcess(values);\n  } else {\n    if (isMilling) {\n      doUpdateIdentificationMilling(values, isLastStep);\n    } else {\n      doUpdateIdentificationRegular(values, isLastStep);\n    }\n  }\n};\n\nexport const deleteIdentificationRequested = async (identificationId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteIdentificationProcess(identificationId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_IDENTIFICATIONN_LIST_DATA,\n  SET_SELECTED_IDENTIFICATION_DATA,\n  SET_SELECTED_IDENTIFICATION_ID,\n  SET_FORM_STATUS,\n  SET_PAGING_IDENTIFICATION\n} from \"./IdentificationActions\";\n\nexport const initialState = {\n  listIdentification: [],\n  selectedIdentificationId: \"\",\n  selectedIdentificationData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function identificationReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_IDENTIFICATIONN_LIST_DATA:\n      newState.listIdentification = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_ID:\n      newState.selectedIdentificationId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_DATA:\n      newState.selectedIdentificationData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_IDENTIFICATION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_MACHINE_LIST_DATA = \"SET_MACHINE_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_MACHINE_ID = \"SET_SELECTED_MACHINE_ID\";\nexport const SET_SELECTED_MACHINE_DATA = \"SET_SELECTED_MACHINE_DATA\";\nexport const SET_PAGING_MACHINE_CONF = \"SET_PAGING_MACHINE_CONF\";\n\nexport const setMachineListData = (payload) => {\n  return {\n    type: SET_MACHINE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMachineConf = (payload) => {\n  return {\n    type: SET_PAGING_MACHINE_CONF,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedMachineId = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedMachineData = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteMachineProcess = async (machineId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteEngine(machineId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getMachineListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editMachineConfigurationForm\", `name`, \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `description`, \"\"));\n};\n\nexport const mapDetailMachineToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().machineConfiguration.selectedMachineData;\n  dispatch(change(\"editMachineConfigurationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `name`, data.name ?? \"\"));\n  dispatch(\n    change(\n      \"editMachineConfigurationForm\",\n      `description`,\n      data.description ?? \"\"\n    )\n  );\n};\n\nexport const getMachineListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListEngine(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setMachineListData(data.callback.data));\n    store.dispatch(setPagingMachineConf(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveMachineRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddMachineProcess(values);\n      } else {\n        doEditMachineProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteMachineRequested = async (machineId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteMachineProcess(machineId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_MACHINE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_MACHINE_ID,\n  SET_SELECTED_MACHINE_DATA,\n  SET_PAGING_MACHINE_CONF,\n} from \"./MachineConfigurationActions\";\n\nexport const initialState = {\n  listMachine: [],\n  selectedMachineId: \"\",\n  selectedMachineData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function machineConfigurationReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MACHINE_LIST_DATA:\n      newState.listMachine = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_ID:\n      newState.selectedMachineId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_DATA:\n      newState.selectedMachineData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MACHINE_CONF:\n      newState.paging = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_TOOLS_LIST_DATA = \"SET_TOOLS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_TOOLS_ID = \"SET_SELECTED_TOOLS_ID\";\nexport const SET_SELECTED_TOOLS_DATA = \"SET_SELECTED_TOOLS_DATA\";\nexport const SET_PAGING_TOOLS = \"SET_PAGING_TOOLS\";\n\nexport const setToolsListData = (payload) => {\n  return {\n    type: SET_TOOLS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingTools = (payload) => {\n  return {\n    type: SET_PAGING_TOOLS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteToolsProcess = async (toolsId) => {\n  const { getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteTool(toolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getToolsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.addTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.updateTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editToolsForm\", `id`, \"\"));\n  dispatch(change(\"editToolsForm\", `name`, \"\"));\n  dispatch(change(\"editToolsForm\", `description`, \"\"));\n};\n\nexport const mapDetailToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().tools.selectedToolsData;\n  dispatch(change(\"editToolsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editToolsForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editToolsForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getToolsListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListTools(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setToolsListData(data.callback.data));\n    store.dispatch(setPagingTools(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveToolsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddToolsProcess(values);\n      } else {\n        doEditToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteToolsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteToolsProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_TOOLS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_TOOLS_ID,\n  SET_SELECTED_TOOLS_DATA,\n  SET_PAGING_TOOLS,\n} from \"./ToolsActions\";\n\nexport const initialState = {\n  listTools: [],\n  selectedToolsId: \"\",\n  selectedToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function toolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_TOOLS_LIST_DATA:\n      newState.listTools = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_ID:\n      newState.selectedToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_DATA:\n      newState.selectedToolsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_FORM_CATEGORY_LIST_DATA = \"SET_FORM_CATEGORY_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_FORM_CATEGORY_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_FORM_CATEGORY_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_FORM_CATEGORY = \"SET_PAGING_FORM_CATEGORY\";\n\nexport const setFormCategoryListData = (payload) => {\n  return {\n    type: SET_FORM_CATEGORY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingFormCategory = (payload) => {\n  return {\n    type: SET_PAGING_FORM_CATEGORY,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryId = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_ID,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryData = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteFormCategoryProcess = async (categoryFormId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteFormCategory(categoryFormId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"Nones\";\n    await Invoke.updateFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editFormCategory\", `id`, \"\"));\n  dispatch(change(\"editFormCategory\", `name`, \"\"));\n  dispatch(change(\"editFormCategory\", `description`, \"\"));\n};\n\nexport const mapDetailCategoryToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().formCategory.selectedFormCategoryData;\n  dispatch(change(\"editFormCategory\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editFormCategory\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editFormCategory\", `description`, data.description ?? \"\"));\n};\n\nexport const getFormCatgeoryListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getFormCategory(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setFormCategoryListData(data.callback.data));\n    store.dispatch(setPagingFormCategory(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveFormCategoryRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddFormCategoryProcess(values);\n      } else {\n        doEditFormCategoryProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteFormCategoryRequested = async (formCategoryId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteFormCategoryProcess(formCategoryId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_FORM_CATEGORY_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_FORM_CATEGORY_ID,\n  SET_SELECTED_FORM_CATEGORY_DATA,\n  SET_PAGING_FORM_CATEGORY\n} from \"./FormCategoryActions\";\n\nexport const initialState = {\n  listFormCategory: [],\n  selectedFormCategoryId: \"\",\n  selectedFormCategoryData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function formCategoryReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_FORM_CATEGORY_LIST_DATA:\n      newState.listFormCategory = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_ID:\n      newState.selectedFormCategoryId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_DATA:\n      newState.selectedFormCategoryData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_FORM_CATEGORY:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_FIELDS_LIST_DATA = \"SET_UNIT_FIELDS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_FIELDS_ID = \"SET_SELECTED_UNIT_FIELDS_ID\";\nexport const SET_SELECTED_UNIT_FIELDS_DATA = \"SET_SELECTED_UNIT_FIELDS_DATA\";\nexport const SET_PAGING_UNIT_FIELDS = \"SET_PAGING_UNIT_FIELDS\";\n\nexport const setUnitFieldsListData = (payload) => {\n  return {\n    type: SET_UNIT_FIELDS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitFields = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_FIELDS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_DATA,\n    payload,\n  };\n};\n\nexport const getUnitFieldsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitFields(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitFieldsListData(data.callback.data));\n    store.dispatch(setPagingUnitFields(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddUnitFieldsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.addUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitFieldsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitFieldsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitFieldsProcess(values);\n      } else {\n        doEditUnitFieldsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_UNIT_FIELDS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_FIELDS_ID,\n  SET_SELECTED_UNIT_FIELDS_DATA,\n  SET_PAGING_UNIT_FIELDS,\n} from \"./UnitFieldsActions\";\n\nexport const initialState = {\n  listUnitFields: [],\n  selectedUnitFieldsId: \"\",\n  selectedUnitFieldsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitFieldsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_FIELDS_LIST_DATA:\n      newState.listUnitFields = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_ID:\n      newState.selectedUnitFieldsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_DATA:\n      newState.selectedUnitFieldsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_FIELDS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_MONITORING_EMPLOYEE_LIST_DATA =\n  \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setMonitoringEmployeeListData = (payload) => {\n  return {\n    type: SET_MONITORING_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getMonitoringEmployeeListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().monitoringEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportMonitoringEmployee(\n      page,\n      limit,\n      from,\n      until,\n      type,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListMonitoringEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newListMonitoringEmployee.push({\n            created_date: item.date,\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(\n      setMonitoringEmployeeListData(newListMonitoringEmployee ?? [])\n    );\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n\n  if (!values) {\n    await getMonitoringEmployeeListDataRequested(page, limit);\n    return;\n  }\n  const splitType = values.type ? values.type.split(\"|\") : \"\";\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const type = values.type ? splitType[0] : \"all\";\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_MONITORING_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./MonitoringEmployeeActions\";\n\nexport const initialState = {\n  listMonitoringEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function monitoringEmployeeReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MONITORING_EMPLOYEE_LIST_DATA:\n      newState.listMonitoringEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_SERVICE_REPAIR_LIST_DATA = \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_SERVICE_REPAIR = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setServiceRepairListData = (payload) => {\n  return {\n    type: SET_SERVICE_REPAIR_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingServiceRepair = (payload) => {\n  return {\n    type: SET_PAGING_SERVICE_REPAIR,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getServiceRepairListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().serviceRepair.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportServiceRepair(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListServiceRepair = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        newListServiceRepair.push({\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setServiceRepairListData(newListServiceRepair ?? []));\n    store.dispatch(setPagingServiceRepair(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().serviceRepair.paging;\n\n  if (!values) {\n    await getServiceRepairListDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_SERVICE_REPAIR_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_SERVICE_REPAIR,\n} from \"./ReportServiceRepairActions\";\n\nexport const initialState = {\n  listServiceRepair: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportServiceRepairReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SERVICE_REPAIR_LIST_DATA:\n      newState.listServiceRepair = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_SERVICE_REPAIR:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_EMPLOYEE_LIST_DATA = \"SET_REPORT_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_REPORT_EMPLOYEE = \"SET_PAGING_REPORT_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportEmployeeListData = (payload) => {\n  return {\n    type: SET_REPORT_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportEmployee = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportEmployeeListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee.paging;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/* eslint-disable default-case */\nimport {\n  SET_REPORT_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_REPORT_EMPLOYEE,\n} from \"./ReportEmployeeActions\";\n\nexport const initialState = {\n  listReportEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportEmployeeReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  switch (action.type) {\n    case SET_REPORT_EMPLOYEE_LIST_DATA:\n      newState.listReportEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_REPORT_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_LIST_DATA = \"SET_DIVISION_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_ID = \"SET_SELECTED_DIVISION_ID\";\nexport const SET_SELECTED_DIVISION_DATA = \"SET_SELECTED_DIVISION_DATA\";\nexport const SET_PAGING_DIVISION = \"SET_PAGING_DIVISION\";\n\nexport const setDivisionListData = (payload) => {\n  return {\n    type: SET_DIVISION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivision = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteDivisionProcess = async (divisionId) => {\n  const { getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteDivision(divisionId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddDivisionProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = headDivision[0];\n    payload.title = values.title;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.title = values.title;\n    payload.employee_id = headDivision[0];\n    payload.description = values.description ?? \"none\";\n    await Invoke.updateDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editDivisionForm\", `id`, \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, \"\"));\n  dispatch(change(\"editDivisionForm\", `headDivision`, \"\"));\n};\n\nexport const mapDetailDivisionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().division.selectedDivisionData;\n\n  dispatch(change(\"editDivisionForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, data.description ?? \"\"));\n  dispatch(\n    change(\n      \"editDivisionForm\",\n      `headDivision`,\n      `${data.employee_id}|${data.employee_name}`\n    )\n  );\n};\n\nexport const getDivisionListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getDivisionList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionListData(data.callback.data));\n    store.dispatch(setPagingDivision(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveDivisionRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionProcess(values);\n      } else {\n        doEditDivisionProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteDivisionRequested = async (divisionId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteDivisionProcess(divisionId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_DIVISION_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_ID,\n  SET_SELECTED_DIVISION_DATA,\n  SET_PAGING_DIVISION\n} from \"./DivisionActions\";\n\nexport const initialState = {\n  listDivision: [],\n  selectedDivisionId: \"\",\n  selectedDivisionData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_LIST_DATA:\n      newState.listDivision = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_ID:\n      newState.selectedDivisionId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_DATA:\n      newState.selectedDivisionData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_UNIT_LIST_DATA = \"SET_DIVISION_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_UNIT_ID = \"SET_SELECTED_DIVISION_UNIT_ID\";\nexport const SET_SELECTED_DIVISION_UNIT_DATA =\n  \"SET_SELECTED_DIVISION_UNIT_DATA\";\nexport const SET_PAGING_DIVISION_UNIT = \"SET_PAGING_DIVISION_UNIT\";\n\nexport const setDivisionUnitListData = (payload) => {\n  return {\n    type: SET_DIVISION_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivisionUnit = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisonUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_DATA,\n    payload,\n  };\n};\n\nexport const getDivisionUnitListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const divisionId = getState().division.selectedDivisionId;\n  try {\n    const { data } = await Invoke.getDivisionUnitList(\n      divisionId,\n      page,\n      limit,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionUnitListData(data.callback.data));\n    store.dispatch(setPagingDivisionUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddDivisionUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const divisionId = getState().division.selectedDivisionId;\n  const { page, limit } = paging;\n  const splitUnitId = values.unit.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = splitUnitId[0];\n    payload.division_id = divisionId;\n\n    await Invoke.addDivisionUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const unitId = getState().division.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveDivisionUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionUnitProcess(values);\n      } else {\n        doEditDivisionUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_DIVISION_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_UNIT_ID,\n  SET_SELECTED_DIVISION_UNIT_DATA,\n  SET_PAGING_DIVISION_UNIT,\n} from \"./DivisionUnitActions\";\n\nexport const initialState = {\n  listDivisionUnit: [],\n  selectedDivisionUnitId: \"\",\n  selectedDivisionUnitData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionUnitReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_UNIT_LIST_DATA:\n      newState.listDivisionUnit = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_ID:\n      newState.selectedDivisionUnitId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_DATA:\n      newState.selectedDivisionUnitData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_DASHBOARD_DATA = \"SET_DASHBOARD_DATA\";\n\nexport const setDashboardData = (payload) => {\n  return {\n    type: SET_DASHBOARD_DATA,\n    payload,\n  };\n};\n\nexport const getDashboardProgressData = async () => {\n  try {\n    const { dispatch } = store;\n    const { data } = await Invoke.getDashboardProgressData();\n    dispatch(setDashboardData(data.callback));\n  } catch (e) {\n    console.log(\"error : \", e);\n  }\n};\n","import { SET_DASHBOARD_DATA } from \"./DashboardActions\";\n\nexport const initialState = {\n  dashboardData: {},\n};\n\nexport default function dashboardReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DASHBOARD_DATA:\n      newState.dashboardData = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\n\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_UNIT_SERIAL_NUMBER_DATA = \"SET_UNIT_SERIAL_NUMBER_DATA\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_ID =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_ID\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_DATA =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_DATA\";\n\nexport const setUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const handleSearch = (val, keyword) => {\n  const { getState, dispatch } = store;\n  const { page, limit } = getState().unitSerialNumber.paging;\n  try {\n    if (!val) {\n      toast.warning(\n        \"Wajib memilih customer untuk menampilkan data serial number\",\n        {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n      dispatch(setUnitSerialNumberData([]));\n      return;\n    }\n    const splitCustomerId = val.customer.split(\"|\");\n    getUnitSerialNumber(page, limit, keyword, splitCustomerId[0]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUnitSerialNumber = async (\n  page,\n  limit,\n  keyword = \"\",\n  customerId\n) => {\n  // If customerId is null or undefined return this\n  if (!customerId) {\n    store.dispatch(setUnitSerialNumberData([]));\n    return;\n  }\n\n  const { getState } = store;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  try {\n    const { data } = await Invoke.getUnitSerialNumber(\n      page,\n      limit,\n      keyword,\n      unitModelId,\n      customerId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitSerialNumberData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitSerialNumberProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const customerId = values.customer.split(\"|\");\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.customer_id = customerId[0];\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.description ?? \"None\";\n\n    await Invoke.addUnitSerialNumber(payload, unitModelId);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitSerialNumberProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const unitSerialNumberId =\n    getState().unitSerialNumber.selectedUnitSerialNumberId;\n\n  try {\n    const payload = {};\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.descriptions ?? \"None\";\n\n    await Invoke.updateUnitSerialNumber(\n      payload,\n      unitModelId,\n      unitSerialNumberId\n    );\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (serialNumberId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitSerialNumber(unitModelId, serialNumberId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitSerialNumber(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitSerialNumberRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitSerialNumberProcess(values);\n      } else {\n        doEditUnitSerialNumberProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitSerialNumberToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitSerialNumber.selectedUnitSerialNumberData;\n\n  dispatch(\n    change(\n      \"editUnitSerialNumberForm\",\n      `customer`,\n      `${data.customer_id}|${data.customer_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `description`, data.descriptions ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitSerialNumberForm\", `customer`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `description`, \"\"));\n};\n","import {\n  SET_UNIT_SERIAL_NUMBER_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n  SET_PAGING_UNIT_MODEL,\n} from \"./UnitSerialNumberActions\";\n\nexport const initialState = {\n  listUnitSerialNumber: [],\n  selectedUnitSerialNumberId: \"\",\n  selectedUnitSerialNumberData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitSerialNumberReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_SERIAL_NUMBER_DATA:\n      newState.listUnitSerialNumber = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_ID:\n      newState.selectedUnitSerialNumberId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_DATA:\n      newState.selectedUnitSerialNumberData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\r\nimport Invoke from \"../../../app/axios/Invoke\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport { showToast } from \"../../Roles/Store/RolesActions\";\r\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\r\n\r\nexport const SET_UNIT_JOB_FORMS_LIST_DATA = \"SET_UNIT_JOB_FORMS_LIST_DATA\";\r\nexport const SET_PAGING_UNIT_JOB_FORMS = \"SET_PAGING_UNIT_JOB_FORMS\";\r\n\r\nexport const setUnitJobFormsListData = (payload) => {\r\n  return {\r\n    type: SET_UNIT_JOB_FORMS_LIST_DATA,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setPagingUnitJobForms = (payload) => {\r\n  return {\r\n    type: SET_PAGING_UNIT_JOB_FORMS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getUnitJobFormsListDataRequested = async (jobFormId = \"\") => {\r\n  const { getState } = store;\r\n  const unitId = getState().units.selectedUnitsId;\r\n  try {\r\n    // Get data unit jobforms from API\r\n    const { data } = await Invoke.getListUnitJobForms(unitId, jobFormId);\r\n\r\n    // Store data to reducer\r\n    store.dispatch(setUnitJobFormsListData(data.callback));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import {\r\n  SET_UNIT_JOB_FORMS_LIST_DATA,\r\n  SET_PAGING_UNIT_JOB_FORMS,\r\n} from \"./UnitJobFormActions\";\r\n\r\nexport const initialState = {\r\n  listUnitJobForms: [],\r\n  paging: {\r\n    page: 1,\r\n    limit: 10,\r\n    totalPage: 0,\r\n  },\r\n};\r\n\r\nexport default function unitJobFormsReducer(state = initialState, action) {\r\n  const newState = Object.assign({}, state);\r\n\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case SET_UNIT_JOB_FORMS_LIST_DATA:\r\n      newState.listUnitJobForms = action.payload;\r\n      return { ...newState };\r\n\r\n    case SET_PAGING_UNIT_JOB_FORMS:\r\n      newState.paging = { ...state.paging, ...action.payload };\r\n      return { ...newState };\r\n  }\r\n\r\n  return state;\r\n}\r\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_WORKING_HOURS_LIST_DATA = \"SET_WORKING_HOURS_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setWorkingHoursListData = (payload) => {\n  return {\n    type: SET_WORKING_HOURS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getWorkingHoursListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().workingHours.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getWorkingHours(\n      page,\n      limit,\n      from,\n      until,\n      keyword\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListWorkingHours = [];\n\n    if (data.callback.data.length > 0) {\n      data.callback.data.map((item, index) => {\n        newListWorkingHours.push({\n          created: moment(item.created_date).format(\"YYYY-MM-DD\"),\n          done: moment(item.done_date).format(\"YYYY-MM-DD\"),\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setWorkingHoursListData(newListWorkingHours ?? []));\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n\n  if (!values) {\n    await getWorkingHoursListDataRequested(page, limit);\n    return;\n  }\n  const keyword = values.keyword ?? \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  try {\n    await getWorkingHoursListDataRequested(\n      page,\n      limit,\n      keyword,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_WORKING_HOURS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./WorkingHoursActions\";\n\nexport const initialState = {\n  listWorkingHours: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function workingHoursReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_WORKING_HOURS_LIST_DATA:\n      newState.listWorkingHours = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { combineReducers } from \"redux\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport { connectRouter } from \"connected-react-router\";\nimport { reducer as formReducer } from \"redux-form\";\nimport history from \"./History\";\nimport authReducer from \"../modules/Auth/Store/AuthReducer\";\nimport listServicesReducer from \"../modules/ListServices/Store/ListServicesReducer\";\nimport ComponentReducer from \"../modules/App/Store/ComponentReducer\";\nimport customersReducer from \"../modules/Customers/Store/CustomersReducer\";\nimport adminReducer from \"../modules/Admin/Store/AdminReducer\";\nimport rolesReducer from \"../modules/Roles/Store/RolesReducer\";\nimport employeesReducer from \"../modules/Employees/Store/EmployeesReducer\";\nimport employeeToolsReducer from \"../modules/Employees/Store/EmployeeTools/EmployeeToolsReducer\";\nimport masterDataReducer from \"../modules/MasterData/Store/MasterDataReducer\";\nimport unitReducer from \"../modules/Units/Store/UnitsReducer\";\nimport jobFormsReducer from \"../modules/JobForms/Store/JobFormsReducer\";\nimport branchReducer from \"../modules/Branch/Store/BranchReducer\";\nimport detailServiceTransactionReducer from \"../modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer\";\nimport unitModelReducer from \"../modules/Units/Store/UnitModelReducer\";\nimport externalServiceReducer from \"../modules/ExternalService/Store/ExternalServiceReducer\";\nimport identificationReducer from \"../modules/Identification/Store/IdentificationReducer\";\nimport machineConfigurationReducer from \"../modules/MachineConfiguration/Store/MachineConfigurationReducer\";\nimport toolsReducer from \"../modules/Tools/Store/ToolsReducer\";\nimport formCategoryReducer from \"../modules/FormCategory/Store/FormCategoryReducer\";\nimport unitFieldsReducer from \"../modules/Units/Store/UnitFieldsReducer\";\nimport monitoringEmployeeReducer from \"../modules/MonitoringEmployee/Store/MonitoringEmployeeReducer\";\nimport reportServiceRepairReducer from \"../modules/ReportServiceRepair/Store/ReportServiceRepairReducer\";\nimport reportEmployeeReducer from \"../modules/ReportEmployee/Store/ReportEmployeeReducer\";\nimport divisionReducer from \"../modules/Division/Store/DivisionReducer\";\nimport divisionUnitReducer from \"../modules/Division/Store/DivisionUnitReducer\";\nimport dashboardReducer from \"../modules/Dashboard/Store/DashboardReducer\";\nimport unitSerialNumberReducer from \"../modules/Units/Store/UnitSerialNumberReducer\";\nimport unitJobFormsReducer from \"../modules/Units/Store/UnitJobFormsReducer\";\nimport workingHoursReducer from \"../modules/WorkingHours/Store/WorkingHoursReducer\";\n\nconst rootReducers = combineReducers({\n  router: connectRouter(history),\n  auth: authReducer,\n  services: listServicesReducer,\n  externalService: externalServiceReducer,\n  admins: adminReducer,\n  roles: rolesReducer,\n  units: unitReducer,\n  unitModels: unitModelReducer,\n  unitFields: unitFieldsReducer,\n  unitSerialNumber: unitSerialNumberReducer,\n  unitJobForms: unitJobFormsReducer,\n  jobForms: jobFormsReducer,\n  customers: customersReducer,\n  employees: employeesReducer,\n  employeeTools: employeeToolsReducer,\n  component: ComponentReducer,\n  identification: identificationReducer,\n  workingHours: workingHoursReducer,\n  masters: masterDataReducer,\n  branch: branchReducer,\n  formCategory: formCategoryReducer,\n  tools: toolsReducer,\n  machineConfiguration: machineConfigurationReducer,\n  detailService: detailServiceTransactionReducer,\n  monitoringEmployee: monitoringEmployeeReducer,\n  serviceRepair: reportServiceRepairReducer,\n  reportEmployee: reportEmployeeReducer,\n  division: divisionReducer,\n  divisionUnit: divisionUnitReducer,\n  dashboard: dashboardReducer,\n  form: formReducer,\n  toastr: toastrReducer,\n});\n\nexport default rootReducers;\n","import * as _ from \"lodash\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport Saga from \"./Saga/SagaMiddleware\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport history from \"../app/History\";\nimport rootReducers from \"./RootReducers\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"form\", \"component\"],\n};\n\nconst resetEnhancer = (rootReducer) => (state, action) => {\n  if (action.type !== \"LOGOUT\") {\n    return rootReducer(state, action);\n  } else {\n    const newState = rootReducer(undefined, {});\n    newState.router = state.router;\n    return newState;\n  }\n};\n\nconst persistedReducer = persistReducer(\n  persistConfig,\n  resetEnhancer(rootReducers)\n);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== \"production\" &&\n  typeof window === \"object\" &&\n  _.has(window, \"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\")\n    ? composeWithDevTools({ trace: true, traceLimit: 1000 })\n    : compose;\n\nexport const store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n);\nexport const persistor = persistStore(store);\nsagaMiddleware.run(Saga);\n","import { Form } from \"antd\";\nconst FormItem = Form.Item;\n\nexport const makeField =\n  (Component, props) =>\n  ({ style, input, meta, children, hasFeedback, label, ...rest }) => {\n    const hasError = meta.touched && meta.invalid;\n    return (\n      <FormItem\n        validateStatus={hasError ? \"error\" : \"success\"}\n        hasFeedback={hasFeedback && hasError}\n        help={hasError && meta.error}\n      >\n        <Component {...props} {...input} {...rest} children={children} />\n      </FormItem>\n    );\n  };\n","import React from \"react\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport styled from \"styled-components\";\ninterface IProps {\n  loading: boolean;\n}\n\nconst Overlay = styled.div`\n  position: fixed;\n  display: block;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 99999;\n  padding-top: 23vh;\n  text-align: center;\n  margin: auto;\n  display: block;\n`;\n\nconst CGlobalOverlay: React.FC<IProps> = (props) => {\n  const { loading } = props;\n  if (loading) {\n    return (\n      <Overlay>\n        <ScaleLoader\n          height={120}\n          width={18}\n          radius={12}\n          margin={5}\n          color={\"#faad14\"}\n          loading={true}\n        />\n      </Overlay>\n    );\n  }\n  return null;\n};\n\nexport default CGlobalOverlay;\n","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Command } from \"react-feather\";\n\nconst Sidebar = ({\n  role,\n  mainMenu,\n  masterDataMenu,\n  reportMenu,\n  serviceRepairMenu,\n  reportDataMenu,\n}) => {\n  return (\n    <div>\n      <nav class=\"sidebar\">\n        <div class=\"sidebar-header\">\n          <a href=\"#\" class=\"sidebar-brand\">\n            Rutan<span>Admin</span>\n          </a>\n          <div class=\"sidebar-toggler not-active\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </div>\n        <div class=\"sidebar-body\">\n          <ul class=\"nav\">\n            {mainMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Main</li>\n            )}\n            {mainMenu?.length > 0 &&\n              mainMenu.map((item, index) => (\n                <li key={`sidebar-main-menu-${index}`} class=\"nav-item\">\n                  <a href={item.path} class=\"nav-link\">\n                    {item.icon}\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {masterDataMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Master Data</li>\n            )}\n            {masterDataMenu?.length > 0 &&\n              masterDataMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    {item.icon}\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {serviceRepairMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Service Repair</li>\n            )}\n            {serviceRepairMenu?.length > 0 &&\n              serviceRepairMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    {item.icon}\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {reportMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Monitoring</li>\n            )}\n            {reportMenu?.length > 0 &&\n              reportMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    {item.icon}\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {reportDataMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Laporan</li>\n            )}\n            {reportDataMenu?.length > 0 &&\n              reportDataMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    {item.icon}\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default withRouter(Sidebar);\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer class=\"footer d-flex flex-column flex-md-row align-items-center justify-content-between\">\n      <p class=\"text-muted text-center text-md-left\">\n        Copyright © {new Date().getFullYear() + \" \"}\n        <a href=\"#\">Rutan Team</a>. All rights reserved\n      </p>\n      <p class=\"text-muted text-center text-md-left mb-0 d-none d-md-block\">\n        Handcrafted With{\" \"}\n        <i class=\"mb-1 text-primary ml-1 icon-small\" data-feather=\"heart\"></i>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Navbar = (props) => {\n  const { onLogout, userDetail } = props;\n  return (\n    <nav class=\"navbar\">\n      <a href=\"#\" class=\"sidebar-toggler\">\n        <i data-feather=\"menu\"></i>\n      </a>\n      <div class=\"navbar-content\">\n        <form class=\"search-form\">\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <div class=\"input-group-text\">\n                <i data-feather=\"search\"></i>\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"navbarForm\"\n              placeholder=\"Search here...\"\n            />\n          </div>\n        </form>\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item dropdown nav-messages\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"messageDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"mail\"></i>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"messageDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">9 New Messages</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Leonardo Payne</p>\n                      <p class=\"sub-text text-muted\">2 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project status</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Carl Henson</p>\n                      <p class=\"sub-text text-muted\">30 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Client meeting</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Jensen Combs</p>\n                      <p class=\"sub-text text-muted\">1 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project updates</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>{userDetail.fullname}</p>\n                      <p class=\"sub-text text-muted\">2 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project deadline</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Yaretzi Mayo</p>\n                      <p class=\"sub-text text-muted\">5 hr ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">New record</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-notifications\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"notificationDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"bell\"></i>\n              <div class=\"indicator\">\n                <div class=\"circle\"></div>\n              </div>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"notificationDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">6 New Notifications</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"user-plus\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New customer registered</p>\n                    <p class=\"sub-text text-muted\">2 sec ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"gift\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New Order Recieved</p>\n                    <p class=\"sub-text text-muted\">30 min ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"alert-circle\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Server Limit Reached!</p>\n                    <p class=\"sub-text text-muted\">1 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"layers\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Apps are ready for update</p>\n                    <p class=\"sub-text text-muted\">5 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"download\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Download completed</p>\n                    <p class=\"sub-text text-muted\">6 hrs ago</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-profile\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"profileDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"https://via.placeholder.com/30x30\" alt=\"profile\" />\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"profileDropdown\">\n              <div class=\"dropdown-header d-flex flex-column align-items-center\">\n                {/* <div class=\"figure mb-3\">\n                  <img src=\"https://via.placeholder.com/80x80\" alt=\"\" />\n                </div> */}\n                <div class=\"info text-center\">\n                  <p class=\"name font-weight-bold mb-0\">\n                    {userDetail.fullname\n                      ? userDetail.fullname.toUpperCase()\n                      : \"Anonym\"}\n                  </p>\n                  <p class=\"email text-muted mb-3\">\n                    {userDetail.roles.map((item) => {\n                      if (userDetail.roles.length > 1) {\n                        return `${item.name},`;\n                      }\n                      return item.name;\n                    })}\n                  </p>\n                </div>\n              </div>\n              <div class=\"dropdown-body\">\n                <ul class=\"profile-nav p-0 pt-3\">\n                  <li class=\"nav-item\">\n                    <a href=\"pages/general/profile.html\" class=\"nav-link\">\n                      <i data-feather=\"user\"></i>\n                      <span>Profile</span>\n                    </a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a onClick={onLogout} class=\"nav-link cursor-pointer\">\n                      <i data-feather=\"log-out\"></i>\n                      <span>Log Out</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport CGlobalOverlay from \"../../../components/CGlobalOverlay/CGlobalOverlay\";\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport Navbar from \"../../../components/Navbar/Navbar\";\nimport { withRouter } from \"react-router-dom\";\n\nconst TemplateComponent = (props) => {\n  const {\n    children,\n    isGlobalLoading,\n    isLandingPage,\n    logout,\n    userDetail,\n    role,\n    mainMenu,\n    masterDataMenu,\n    reportMenu,\n    serviceRepairMenu,\n    reportDataMenu,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <CGlobalOverlay loading={isGlobalLoading} />\n      {isLandingPage && (\n        <Sidebar\n          role={role}\n          masterDataMenu={masterDataMenu}\n          mainMenu={mainMenu}\n          reportMenu={reportMenu}\n          serviceRepairMenu={serviceRepairMenu}\n          reportDataMenu={reportDataMenu}\n        />\n      )}\n      <div className={`page-wrapper ${!isLandingPage ? \"full-page\" : \"\"}`}>\n        {isLandingPage && <Navbar onLogout={logout} userDetail={userDetail} />}\n        {children}\n        {isLandingPage && <Footer />}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default withRouter(TemplateComponent);\n","import { createSelector } from \"reselect\";\n\nconst selectorAuth = (state) => state.auth;\n\n// SELECTOR FOR AUTH\nexport const AllAuthData = () => createSelector(selectorAuth, (state) => state);\nexport const Token = () =>\n  createSelector(selectorAuth, (state) => state.accessToken);\nexport const UserDetail = () =>\n  createSelector(selectorAuth, (state) => state.userDetail);\nexport const ErrorData = () =>\n  createSelector(selectorAuth, (state) => state.error);\nexport const UserRole = () =>\n  createSelector(selectorAuth, (state) => state?.userDetail?.roles);\n  export const UserMenus = () =>\n  createSelector(selectorAuth, (state) => state?.userDetail?.menus);\n","import { createSelector } from \"reselect\";\n\nconst selectorComponent = (state) => state.component;\n\nexport const IsGlobalLoading = () =>\n  createSelector(selectorComponent, (state) => state.isLoadingGlobal);\n","import React from \"react\";\nimport { compose } from \"redux\";\n\nimport TemplateComponent from \"../Component/TemplateComponent\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as authActions from \"../../Auth/Store/AuthAction\";\nimport * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\nimport * as AppSelector from \"../../App/Selector/AppSelector\";\nimport {\n  Box,\n  Briefcase,\n  Clock,\n  Command,\n  FilePlus,\n  FileText,\n  Key,\n  Link,\n  List,\n  Monitor,\n  Settings,\n  Tool,\n  User,\n  Users,\n} from \"react-feather\";\n\nconst TemplateContainer = (props) => {\n  const [role, setRole] = React.useState(\"\");\n  const { userDetail } = props;\n\n  React.useEffect(() => {\n    if (userDetail && userDetail.role) {\n      setRole(userDetail.role[0].name);\n    }\n  }, [userDetail]);\n\n  const getIconName = (menu) => {\n    switch (menu) {\n      case \"/dashboard\":\n        return <Command size={14} style={{ marginRight: -15 }} />;\n\n      case \"/admin\":\n        return <User size={14} style={{ marginRight: -15 }} />;\n\n      case \"/cabang\":\n        return <Link size={14} style={{ marginRight: -15 }} />;\n\n      case \"/employees\":\n        return <Users size={14} style={{ marginRight: -15 }} />;\n\n      case \"/customer\":\n        return <Users size={14} style={{ marginRight: -15 }} />;\n\n      case \"/division\":\n        return <Briefcase size={14} style={{ marginRight: -15 }} />;\n\n      case \"/role\":\n        return <Key size={14} style={{ marginRight: -15 }} />;\n\n      case \"/tools\":\n        return <Tool size={14} style={{ marginRight: -15 }} />;\n\n      case \"/machine\":\n        return <Settings size={14} style={{ marginRight: -15 }} />;\n\n      case \"/jobforms\":\n        return <FileText size={14} style={{ marginRight: -15 }} />;\n\n      case \"/category\":\n        return <FileText size={14} style={{ marginRight: -15 }} />;\n\n      case \"/unit\":\n        return <Box size={14} style={{ marginRight: -15 }} />;\n\n      case \"/internal-service\":\n        return <FilePlus size={14} style={{ marginRight: -15 }} />;\n\n      case \"/external-service\":\n        return <FilePlus size={14} style={{ marginRight: -15 }} />;\n\n      case \"/list_service\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/monitoring-employee\":\n        return <Monitor size={14} style={{ marginRight: -15 }} />;\n\n      case \"/identification\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/report_trans\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/report_identification\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/report_employee\":\n        return <List size={14} style={{ marginRight: -15 }} />;\n\n      case \"/working-hours\":\n        return <Clock size={14} style={{ marginRight: -15 }} />;\n\n      default:\n        return \"command\";\n    }\n  };\n\n  const mainMenu = [];\n  const masterDataMenu = [];\n  const reportMenu = [];\n  const serviceRepairMenu = [];\n  const reportDataMenu = [];\n\n  if (userDetail) {\n    userDetail.menus.map((item, index) => {\n      let menu = {};\n      menu.icon = getIconName(item.path);\n      menu.name = item.menu;\n      menu.path = item.path;\n\n      if (\n        item.path === \"/admin\" ||\n        item.path === \"/cabang\" ||\n        item.path === \"/employees\" ||\n        item.path === \"/customer\" ||\n        item.path === \"/division\" ||\n        item.path === \"/role\" ||\n        item.path === \"/tools\" ||\n        item.path === \"/machine\" ||\n        item.path === \"/jobforms\" ||\n        item.path === \"/category\" ||\n        item.path === \"/unit\" ||\n        item.path === \"/identification\"\n      ) {\n        masterDataMenu.push(menu);\n      } else if (\n        item.path === \"/internal-service\" ||\n        item.path === \"/external-service\" ||\n        item.path === \"/list_service\"\n      ) {\n        serviceRepairMenu.push(menu);\n      } else if (item.path === \"/monitoring-employee\") {\n        reportMenu.push(menu);\n      } else if (\n        item.path === \"/report_trans\" ||\n        item.path === \"/report_employee\" ||\n        item.path === \"/report_identification\" ||\n        item.path === \"/working-hours\"\n      ) {\n        reportDataMenu.push(menu);\n      } else {\n        mainMenu.push(menu);\n      }\n    });\n  }\n\n  return (\n    <TemplateComponent\n      role={role}\n      mainMenu={mainMenu}\n      masterDataMenu={masterDataMenu}\n      reportMenu={reportMenu}\n      serviceRepairMenu={serviceRepairMenu}\n      reportDataMenu={reportDataMenu}\n      {...props}\n    />\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  isGlobalLoading: AppSelector.IsGlobalLoading(),\n  userDetail: AuthSelector.UserDetail(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => {\n    authActions.doLogout(dispatch);\n  },\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(TemplateContainer);\n","import * as React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\n\nconst withTemplate = (Template, WrappedComponent, isLandingPage) => {\n  const AddedTemplate = (props) => {\n    return (\n      <Template {...props} isLandingPage={isLandingPage}>\n        <WrappedComponent {...props} />\n      </Template>\n    );\n  };\n\n  return hoistNonReactStatics(AddedTemplate, WrappedComponent);\n};\n\nexport default withTemplate;\n","import React from \"react\";\nimport { Button } from \"antd\";\n\ninterface IProps {\n  onClick: any;\n  disabled: boolean;\n  isLoading: boolean;\n  backgroundColor: string;\n  icon: any;\n  shape: \"default\" | \"circle\" | \"round\";\n  type: \"primary\" | \"dashed\" | \"default\" | \"ghost\" | \"link\" | \"text\";\n  size: \"middle\" | \"small\" | \"large\";\n  danger: boolean;\n  block: boolean;\n}\n\nconst CButtonAntd: React.FC<IProps> = (props) => {\n  const {\n    onClick,\n    children,\n    isLoading,\n    disabled,\n    icon,\n    shape,\n    type,\n    size,\n    danger,\n    backgroundColor,\n  } = props;\n  return (\n    <Button\n      style={{\n        alignSelf: \"center\",\n        backgroundColor: backgroundColor,\n        borderColor: backgroundColor,\n      }}\n      block={props.block ?? false}\n      icon={icon ?? null}\n      type={type ?? \"default\"}\n      shape={shape ?? \"default\"}\n      onClick={onClick}\n      disabled={disabled}\n      loading={isLoading}\n      size={size ?? \"middle\"}\n      danger={danger}\n    >\n      {isLoading ? \"Loading\" : children}\n    </Button>\n  );\n};\n\nexport default CButtonAntd;\n","import { Table } from \"antd\";\nimport React from \"react\";\nimport \"../../../app/style/tableStyle.css\";\n\nconst DashboardComponent = (props) => {\n  const { userDetail, headers, listServices, dashboard, isBlocked } = props;\n  return (\n    <div>\n      <div class=\"page-content\">\n        <div class=\"d-flex justify-content-between align-items-center flex-wrap grid-margin\">\n          <h4 class=\"mt-5 ml-2\">{`Hallo, ${\n            userDetail.fullname ?? \"Anonym\"\n          }`}</h4>\n        </div>\n        {!isBlocked && (\n          <div class=\"row\">\n            <div class=\"col-12 col-xl-12 stretch-card\">\n              <div class=\"row flex-grow\">\n                <div class=\"col-md-3 grid-margin stretch-card\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <div class=\"d-flex justify-content-between align-items-baseline\">\n                        <h6 class=\"card-title mb-0\">Total Customer</h6>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-12 col-md-12 col-xl-8\">\n                          <h3 class=\"mb-2\">{dashboard.totalCustomer}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3 grid-margin stretch-card\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <div class=\"d-flex justify-content-between align-items-baseline\">\n                        <h6 class=\"card-title mb-0\">Total Service Internal</h6>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-6 col-md-12 col-xl-8\">\n                          <h3 class=\"mb-2\">{dashboard.totalInternalService}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3 grid-margin stretch-card\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <div class=\"d-flex justify-content-between align-items-baseline\">\n                        <h6 class=\"card-title mb-0\">Total Service External</h6>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-6 col-md-12 col-xl-8\">\n                          <h3 class=\"mb-2\">{dashboard.totalExternalService}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-md-3 grid-margin stretch-card\">\n                  <div class=\"card\">\n                    <div class=\"card-body\">\n                      <div class=\"d-flex justify-content-between align-items-baseline\">\n                        <h6 class=\"card-title mb-0\">Total Identifikasi</h6>\n                      </div>\n                      <div class=\"row\">\n                        <div class=\"col-6 col-md-12 col-xl-8\">\n                          <h3 class=\"mb-2\">{dashboard.totalIdentification}</h3>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        <div class=\"row\">\n          <div class=\"col-12 col-xl-12 grid-margin stretch-card\"></div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-lg-12 col-xl-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between align-items-baseline mb-2\">\n                  <h6 class=\"card-title mb-0\">10 Service Terbaru</h6>\n                </div>\n                <p class=\"text-muted mb-4\">\n                  Menampilkan 10 service berdasarkan tanggal terbaru\n                </p>\n                {/* <div class=\"monthly-sales-chart-wrapper\"> */}\n                {/* <canvas id=\"monthly-sales-chart\"></canvas> */}\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      // ...pagination,\n                    }}\n                  />\n                </div>\n                {/* </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardComponent;\n","import * as AdminActions from \"../modules/Admin/Store/AdminActions\";\nimport * as RoleActions from \"../modules/Roles/Store/RolesActions\";\nimport * as MasterDataActions from \"../modules/MasterData/Store/MasterDataActions\";\nimport * as BranchActions from \"../modules/Branch/Store/BranchActions\";\nimport * as UnitsActions from \"../modules/Units/Store/UnitsActions\";\nimport * as MachineConfigurationActions from \"../modules/MachineConfiguration/Store/MachineConfigurationActions\";\n\nexport const initializeApp = async () => {\n  await AdminActions.getListAdminRequested(1, 10);\n  await RoleActions.getListRolesRequested();\n  await MasterDataActions.loadMenuListData();\n  await MasterDataActions.loadProvinceListData();\n  await BranchActions.getBranchListDataRequested(1, 10);\n  await UnitsActions.getUnitListDataRequested(1, 10);\n  await MachineConfigurationActions.getMachineListDataRequested(1, 10);\n};\n","import { Space, Tag } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport DashboardComponent from \"../Component/DashboardComponent\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\nimport { getDashboardProgressData } from \"../Store/DashboardActions\";\nimport { initializeApp } from \"../../../app/InitializeApp\";\nimport { isBlockedRoleDetailService } from \"../../../app/Helpers\";\n\nconst DashboardContainer = (props) => {\n  const {\n    handlePressEdit,\n    auth: { userDetail },\n    services: { dashboardListServices },\n    dashboard: { dashboardData },\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n\n  if (dashboardListServices.length > 0) {\n    dashboardListServices.map((item, index) => {\n      dashboardListServices[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const checkBlockedRole = () => {\n    const roleId = userDetail.roles[0].role_id;\n    const isBlockedRole = isBlockedRoleDetailService(roleId);\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole()\n    initializeApp();\n    store.dispatch(setGlobalLoading(false));\n    ListServiceActions.getTopTenService();\n    getDashboardProgressData();\n  }, []);\n\n  if (Object.keys(dashboardData).length > 0) {\n    dashboardData.totalCustomer = dashboardData.totalCustomer\n      ? dashboardData.totalCustomer.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalInternalService = dashboardData.totalCustomer\n      ? dashboardData.totalInternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalExternalService = dashboardData.totalExternalService\n      ? dashboardData.totalExternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalIdentification = dashboardData.totalIdentification\n      ? dashboardData.totalIdentification.toLocaleString(\"en-US\")\n      : 0;\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"15%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"40%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: \"15%\",\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: \"15%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  return (\n    <DashboardComponent\n      userDetail={userDetail}\n      headers={headers}\n      listServices={dashboardListServices}\n      dashboard={dashboardData}\n      isBlocked={isBlocked}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  services: state.services,\n  dashboard: state.dashboard,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContainer);\n","import React from \"react\";\n\ninterface IProps {\n  onChange: any;\n  value: string;\n  label: string;\n  name: string;\n  placeholder: string;\n  type: string;\n  typeComponent: string;\n  input: any;\n  error: boolean;\n  message: string;\n  meta: { error: any; touched: any };\n  disabled: boolean;\n  maxLength: number;\n  rows: number;\n  key: string;\n  labelSize: number;\n  linebreak: boolean;\n  onKeyDown: any;\n}\n\nconst CInput: React.FC<IProps> = (props) => {\n  switch (props.typeComponent) {\n    case \"textarea\":\n      return (\n        <div className=\"form-group\">\n          <label htmlFor={props.name}>{props.label}</label>\n          <textarea\n            style={{ whiteSpace: props.linebreak ? \"pre-line\" : \"normal\" }}\n            key={props.key ?? \"\"}\n            id={props.name}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            maxLength={props.maxLength ?? 250}\n            rows={props.rows ?? 8}\n            name={props.name}\n            onChange={props.onChange}\n            onKeyDown={props.onKeyDown}\n            placeholder={props.placeholder ?? \"\"}\n            value={props.value}\n            {...props.input}\n          ></textarea>\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n    default:\n      return (\n        <div className=\"form-group\">\n          <label\n            htmlFor={props.name}\n            style={{ fontSize: props.labelSize ?? 14 }}\n          >\n            {props.label}\n          </label>\n          <input\n            id={props.name}\n            maxLength={props.maxLength ?? 250}\n            value={props.value}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            name={props.name}\n            type={props.type}\n            onChange={props.onChange}\n            placeholder={props.placeholder ?? \"\"}\n            disabled={props.disabled ?? false}\n            {...props.input}\n          />\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n  }\n};\n\nexport default CInput;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\n\nconst LoginComponent = (props) => {\n  const { handleSubmit, submitForm, error } = props;\n\n  return (\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto\">\n          <div class=\"card\">\n            <div class=\"row\">\n              <div class=\"col-md-4 pr-md-0\">\n                <div class=\"auth-left-wrapper\"></div>\n              </div>\n              <div class=\"col-md-8 pl-md-0\">\n                <div class=\"auth-form-wrapper px-4 py-5\">\n                  <a href=\"#\" class=\"noble-ui-logo d-block mb-2\">\n                    Rutan<span>Admin</span>\n                  </a>\n                  <h5 class=\"text-muted font-weight-normal mb-4\">\n                    Selamat datang! Silahkan login dengan akun anda.\n                  </h5>\n                  <form\n                    class=\"forms-sample\"\n                    onSubmit={handleSubmit(submitForm)}\n                  >\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"username\"\n                        label=\"Username\"\n                        placeholder=\"Username\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder=\"Password\"\n                        component={CInput}\n                        type=\"password\"\n                      />\n                    </div>\n\n                    {error.status && (\n                      <span className=\"mt-2 text-danger\">{error.message}</span>\n                    )}\n\n                    <div class=\"mt-3\">\n                      <button\n                        type=\"submit\"\n                        class=\"btn btn-primary mr-2 mb-2 mb-md-0 text-white\"\n                      >\n                        Login\n                      </button>\n                    </div>\n                    <a href=\"register.html\" class=\"d-block mt-3 text-muted\">\n                      Belum punya akun? Daftar\n                    </a>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginComponent;\n","import React from \"react\";\nimport { store } from \"./ConfigureStore\";\n\nexport const validateFormLogin = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Username wajib diisi!\";\n  } else if (values.username.length < 4) {\n    errors.username = \"Minimal 4 karakter atau lebih\";\n  }\n  if (!values.password) {\n    errors.password = \"Password wajib diisi!\";\n  } else if (values.password.length < 5) {\n    errors.password = \"Minimal 5 karakter atau lebih\";\n  }\n  return errors;\n};\n\nexport const validateFormInternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n};\n\nexport const validateFormExternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.jobForm) {\n    errors.jobForm = \"Job Form wajib diisi!\";\n  }\n  if (!values.warranty) {\n    errors.warranty = \"Job Form wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n  return errors;\n};\n\nexport const validateFormRoles = (values) => {\n  const errors = {};\n  if (!values.description) {\n    errors.description = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormCategory = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Judul wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnit = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Unit wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnitModel = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Model wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTools = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama peralatan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormEmployee = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama wajib diisi!\";\n  }\n  if (!values.phone) {\n    errors.phone = \"No. Telpon wajib diisi!\";\n  }\n  if (!values.province) {\n    errors.province = \"Wajib pilih provinsi!\";\n  }\n  if (!values.city) {\n    errors.city = \"Wajib pilih kota!\";\n  }\n  if (!values.branch) {\n    errors.branch = \"Wajib pilih cabang!\";\n  }\n  if (!values.address) {\n    errors.address = \"Wajib isi alamat!\";\n  }\n  return errors;\n};\n\nexport const validateServiceEmployeeForm = (values) => {\n  const errors = {};\n  if (!values.employee) {\n    errors.employee = \"Karyawan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionForm = (values) => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = \"Judul wajib diisi!\";\n  }\n  if (!values.headDivision) {\n    errors.headDivision = \"Kepala divisi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionUnitForm = (values) => {\n  const errors = {};\n  if (!values.unit) {\n    errors.unit = \"Unit wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateEmployeeToolsForm = (values) => {\n  const errors = {};\n  if (!values.tools) {\n    errors.tools = \"Peralatan wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateFormRejected = (values) => {\n  const errors = {};\n  if (!values.reson) {\n    errors.reson = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTransaction = (values) => {\n  const errors = {};\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormEditMedia = (values) => {\n  const { getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const errors = {};\n  if (!values.imageUrl) {\n    errors.imageUrl = \"Field ini wajib diisi!\";\n  }\n  if (!values.title) {\n    errors.title = \"Field ini wajib diisi!\";\n  }\n  if (!values.unit && dataService.is_external === true) {\n    errors.unit = \"Wajib pilih unit!\";\n  }\n\n  return errors;\n};\n\nexport const validateUnitSerialNumberForm = (values) => {\n  const errors = {};\n  if (!values.customer) {\n    errors.customer = \"Wajib memilih customer!\";\n  }\n  if (!values.serialNumber) {\n    errors.serialNumber = \"Serial number wajib diisi!\";\n  }\n  if (!values.descriptions) {\n    errors.descriptions = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDailiesForm = (values) => {\n  const errors = {};\n  if (!values.activityType) {\n    errors.activityType = \"Field ini wajib diisi!\";\n  }\n  if (!values.title) {\n    errors.title = \"Field ini wajib diisi!\";\n  }\n  if (!values.daily_start) {\n    errors.daily_start = \"Field ini wajib diisi!\";\n  }\n  if (!values.daily_end) {\n    errors.daily_end = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n","import React from \"react\";\nimport LoginComponent from \"../Component/LoginComponent\";\nimport { reduxForm, reset } from \"redux-form\"; // imported Field\nimport { connect } from \"react-redux\";\nimport * as AuthActions from \"../Store/AuthAction\";\nimport * as AuthSelector from \"../Selector/AuthSelector\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport { createStructuredSelector } from \"reselect\";\nimport { navigate } from \"../../../app/Helpers\";\n\nconst LoginContainer = (props) => {\n  const { valid } = props;\n\n  const submitForm = (values) => {\n    // navigate(\"/preview-pdf\");\n    if (valid) {\n      AuthActions.handleSubmitLogin(values);\n    }\n  };\n\n  return <LoginComponent submitForm={submitForm} {...props} />;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  auth: AuthSelector.AllAuthData(),\n  error: AuthSelector.ErrorData(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"loginForm\"));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginContainer);\n\nexport default reduxForm({\n  form: \"loginForm\",\n  validate: validateForm.validateFormLogin,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport { Field } from \"redux-form\";\nimport { makeField } from \"../../app/FormHelpers\";\n\nconst { Option } = Select;\nconst ASelect = makeField(Select);\n\nconst CSelect = (props) => {\n  return (\n    <div>\n      <label htmlFor={props.name}>{props.label}</label>\n      <br />\n      <Field\n        style={{ width: \"100%\" }}\n        showSearch={props.showSearch ?? false}\n        name={props.name}\n        component={ASelect}\n        onChange={props.onChange}\n        onBlur={(e) => {\n          if (props.onBlur) {\n            props.onBlur();\n          }\n          e.preventDefault();\n        }}\n        {...props}\n      >\n        <Option disabled={props.disabled ?? false} value=\"\">\n          {props.placeholder ?? \"- Pilih -\"}\n        </Option>\n        {props.data.length > 0 &&\n          props.data.map((item, index) => {\n            return (\n              <Option\n                value={`${item.value}|${item.label}`}\n                key={`option-${index}`}\n              >\n                {item.label}\n              </Option>\n            );\n          })}\n      </Field>\n    </div>\n  );\n};\n\nexport default CSelect;\n","import React from \"react\";\nimport { DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { Field } from \"redux-form\";\n\nconst RenderDatePicker = (props) => {\n  const { name, input, label, meta } = props;\n\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n      <br />\n      <DatePicker\n        placeholder=\"Pilih Tanggal\"\n        style={{ width: \"100%\" }}\n        name={name}\n        onBlur={(e) => {\n          e.preventDefault();\n        }}\n        defaultValue={moment()}\n        {...input}\n      />\n      {meta.touched && meta.error && (\n        <span className=\"mt-2 text-danger\">\n          {meta.error ?? \"This field required\"}\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst CDatePicker = (props) => {\n  return (\n    <Field\n      component={RenderDatePicker}\n      onBlur={(e) => {\n        e.preventDefault();\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default CDatePicker;\n","import React from \"react\";\n\ninterface IProps {\n  type: \"submit\" | \"button\" | \"reset\";\n  onClick: any;\n  isLoading: boolean;\n}\n\nconst CButton: React.FC<IProps> = (props) => {\n  const { type, isLoading, onClick, children } = props;\n  return (\n    <button\n      onClick={onClick}\n      className=\"btn btn-primary\"\n      type={type}\n      disabled={isLoading}\n    >\n      {isLoading && (\n        <span\n          className=\"spinner-grow spinner-grow-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        ></span>\n      )}\n      {isLoading ? \"Loading...\" : children}\n    </button>\n  );\n};\n\nexport default CButton;\n","import React from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\n\nconst InternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    isLoadingFormGlobal,\n  } = props;\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({ employee: \"\" })}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah Internal Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan internal service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-4 mt-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                      />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12 mt-2\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      {/* <input\n                        class=\"btn btn-primary\"\n                        type=\"submit\"\n                        value=\"Simpan\"\n                      /> */}\n                      <CButton type=\"submit\" isLoading={isLoadingFormGlobal}>\n                        Simpan\n                      </CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InternalServiceComponent;\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nconst getCityByIdFromReducer = async (cityId) => {\n  const { getState } = store;\n  const { listCity } = getState().masters;\n  const result = listCity.filter((x) => x.id === cityId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"internalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n    return;\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    await MasterDataActions.loadCityListData(employeeData.province_id);\n\n    const cityData = await getCityByIdFromReducer(employeeData.city_id);\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        cityData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        cityData\n      )\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"internalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"internalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"false\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: \"false\",\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              navigate(\"list_service\");\n              resolve();\n            }, 1000);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, reset } from \"redux-form\";\nimport InternalServiceComponent from \"../Component/InternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as InternalServiceActions from \"../Store/InternalServiceActions\";\nimport * as ComponentAction from \"../../App/Store/ComponentAction\";\nimport {\n  enumTypeInternalServices,\n  isBlockedRoleCustomerView,\n} from \"../../../app/Helpers\";\n\nconst InternalServiceContainer = (props) => {\n  const {\n    valid,\n    user: { roles, branchId },\n    customers: { listCustomersDropdown },\n    employees: { listEmployees },\n    component: { isLoadingFormGlobal },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      InternalServiceActions.handleSubmitForm(values);\n    } else {\n    }\n  };\n\n  React.useEffect(() => {\n    // Reset all form data and loading when first load data\n    // resetForm();\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomerView(roleId);\n\n    ComponentAction.resetAllGlobalLoadingProcess();\n    if (isBlockedRole) {\n      CustomerActions.getCustomerListDataByPaging(\n        1,\n        999999,\n        \"\",\n        branchId ?? \"\",\n        true\n      );\n    } else {\n      CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    }\n    EmployeeActions.loadEmployeeListData(1, 999999);\n    MasterDataActions.loadProvinceListData();\n    // MasterDataActions.loadCityListData();\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <InternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      enumType={enumTypeInternalServices}\n      submitForm={submitForm}\n      isLoadingFormGlobal={isLoadingFormGlobal}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  component: state.component,\n  user: state.auth.userDetail,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"internalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      InternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    InternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n    if (!customerId) {\n      InternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    InternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InternalServiceContainer);\n\nexport default reduxForm({\n  form: \"internalServiceForm\",\n  validate: validateForm.validateFormInternalService,\n  initialValues: {\n    employees: [],\n  },\n})(EnhanceContainer);\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport { getUnitModelEnum } from \"../../../app/Helpers\";\n\nconst ExternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    enumWarranty,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    listUnit,\n    enumJobForms,\n    handleAutoPopulateUnitModel,\n    externalValues,\n    onChangeUnitModel,\n    handleChangeType,\n    isTroubleShoot,\n  } = props;\n\n  const renderUnits = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Unit\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Unit ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-units-${indexUnit}`}\n                    onChange={(val) =>\n                      handleAutoPopulateUnitModel(val, indexUnit)\n                    }\n                    data={listUnit}\n                    name={`${itemUnit}.id`}\n                    label=\"Pilih Unit\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-model-${indexUnit}`}\n                    data={\n                      externalValues[indexUnit].enumUnitModel\n                        ? getUnitModelEnum(\n                            externalValues[indexUnit].enumUnitModel\n                          )\n                        : []\n                    }\n                    name={`${itemUnit}.unitModelId`}\n                    onChange={(val) => {\n                      if (externalValues[indexUnit].enumUnitModel.length > 0) {\n                        onChangeUnitModel(\n                          val,\n                          indexUnit,\n                          externalValues[indexUnit].enumUnitModel\n                        );\n                      }\n                    }}\n                    label=\"Model\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    key={`serial-number-${indexUnit}`}\n                    name={`${itemUnit}.unitModelSerialNumber`}\n                    label=\"Serial Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah External Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan external service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                        onChange={handleChangeType}\n                      />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                    <div class=\"col-md-2\">\n                      {!isTroubleShoot && (\n                        <CSelect\n                          data={enumJobForms}\n                          name=\"jobForm\"\n                          label=\"Job Form\"\n                        />\n                      )}\n                    </div>\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumWarranty}\n                        name=\"warranty\"\n                        label=\"Warranty\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu unit.\n                    </p>\n                  </div>\n                  <FieldArray name=\"units\" component={renderUnits} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      <CButton type=\"submit\">Simpan</CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExternalServiceComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  change,\n  formValueSelector,\n  getFormValues,\n  reduxForm,\n  reset,\n} from \"redux-form\";\nimport ExternalServiceComponent from \"../Component/ExternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ExternalServiceActions from \"../Store/ExternalServiceActions\";\nimport * as UnitsActions from \"../../Units/Store/UnitsActions\";\nimport * as JobFormsActions from \"../../JobForms/Store/JobFormsActions\";\nimport {\n  enumTypeExternalServices,\n  enumWarranty,\n  isBlockedRoleCustomerView,\n} from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"externalServiceForm\");\n\nconst ExternalServiceContainer = (props) => {\n  const [unitQty, setUnitQty] = React.useState(1);\n  const [unitData, setUnitData] = React.useState([]);\n  const [isTroubleShoot, setIsTroubleShoot] = React.useState(false);\n\n  const {\n    valid,\n    user: { roles, branchId },\n    customers: { listCustomersDropdown },\n    employees: { listEmployees },\n    units: { listUnits },\n    jobForms: { listJobForms },\n    resetForm,\n    // form: { externalServiceForm },\n  } = props;\n\n  const submitForm = (values) => {\n    ExternalServiceActions.handleSubmitForm(values);\n    if (valid) {\n      console.log(\"success\");\n    }\n  };\n\n  const handleAddNewUnit = () => {\n    if (unitQty === 5) {\n      return;\n    }\n    setUnitQty(unitQty + 1);\n  };\n\n  const handleSubtractUnit = () => {\n    if (unitQty === 0) {\n      return;\n    }\n    setUnitQty(unitQty - 1);\n  };\n\n  const SelectUnit = [];\n  listUnits.map((item, index) => {\n    SelectUnit.push({\n      id: `unit-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomerView(roleId);\n\n    if (isBlockedRole) {\n      CustomerActions.getCustomerListDataByPaging(\n        1,\n        999999,\n        \"\",\n        branchId ?? \"\",\n        true\n      );\n    } else {\n      CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    }\n\n    EmployeeActions.loadEmployeeListData(1, 99999);\n    MasterDataActions.loadProvinceListData();\n    return () => {\n      resetForm();\n    };\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectJobFormsData = [];\n  listJobForms.map((item, index) => {\n    SelectJobFormsData.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const handleChangeType = (val) => {\n    const type = val.split(\"|\");\n    if (\n      type[0] === \"T2\" ||\n      type[0] === \"T4\" ||\n      type[0] === \"T5\" ||\n      type[0] === \"T6\"\n    ) {\n      setIsTroubleShoot(true);\n    } else {\n      setIsTroubleShoot(false);\n    }\n  };\n\n  React.useEffect(() => {\n    UnitsActions.getUnitListDataRequested(1, 100);\n    JobFormsActions.getJobFormsListDataRequested(1, 100);\n    let totalUnit = [];\n    for (let i = 0; i < unitQty; i++) {\n      totalUnit.push(i);\n    }\n    setUnitData(totalUnit);\n  }, [unitQty]);\n\n  return (\n    <ExternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      listUnit={SelectUnit}\n      enumJobForms={SelectJobFormsData}\n      enumType={enumTypeExternalServices}\n      enumWarranty={enumWarranty}\n      submitForm={submitForm}\n      handleAddNewUnit={handleAddNewUnit}\n      handleSubtractUnit={handleSubtractUnit}\n      unitData={unitData}\n      handleChangeType={handleChangeType}\n      isTroubleShoot={isTroubleShoot}\n      // selectedUnitModelList={selectedUnitModelList}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  units: state.units,\n  jobForms: state.jobForms,\n  formValues: getFormValues(\"externalServiceForm\")(state),\n  externalValues: selector(state, \"units\"),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"externalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      ExternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n\n    if (!customerId) {\n      ExternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n  handleAutoPopulateUnitModel: (unitId, fieldIndex) => {\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].enumUnitModel`, [])\n    );\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].unitModelId`, \"\")\n    );\n    if (unitId) {\n      const arrVal = unitId.split(\"|\");\n      ExternalServiceActions.setAutoPopulateUnitModel(arrVal[0], fieldIndex);\n    }\n  },\n  onChangeUnitModel: (val, index, enumModel) => {\n    if (val) {\n      ExternalServiceActions.onChangeUnitModel(val, index, enumModel);\n    }\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExternalServiceContainer);\n\nexport default reduxForm({\n  form: \"externalServiceForm\",\n  validate: validateForm.validateFormExternalService,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryMonitoringServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst MonitoringEmployeeComponent = (props) => {\n  const {\n    headers,\n    listMonitoringEmployee,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumTypeReport,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Monitoring Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryMonitoringServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumTypeReport ?? []}\n                      name=\"type\"\n                      label=\"Tipe\"\n                    />\n                  </div>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                      placeholder=\"-Pilih Semua-\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Laporan\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listMonitoringEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MonitoringEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as MonitoringEmployeeActions from \"../Store/MonitoringEmployeeActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport MonitoringEmployeeComponent from \"../Component/MonitoringEmployeeComponent\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Tag } from \"antd\";\nimport { exportMonitoringEmployeePdf } from \"../Store/MonitoringEmployeeReport\";\nimport moment from \"moment\";\n\nconst MonitoringEmployeeContainer = (props) => {\n  const {\n    getListMonitoringEmployee,\n    handlePressAddNew,\n    monitoringEmployee: { listMonitoringEmployee, paging },\n    branch: { listBranchDropdown },\n    monitoringEmployeeFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMonitoringEmployee.length > 0) {\n    listMonitoringEmployee.map((item, index) => {\n      listMonitoringEmployee[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const printedData = {\n    listMonitoringEmployee,\n    from: moment(),\n    until: moment(),\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"job_type\",\n      key: \"job_type\",\n      render: (jobType) => {\n        let color = jobType === \"loss\" ? \"#f50\" : \"#f50\";\n        return (\n          <Tag style={{ width: 115, textAlign: \"center\" }} color={color}>\n            {jobType ? jobType.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.job_type.length - b.job_type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n      sorter: (a, b) => a.models.length - b.models.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranchDropdown.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListMonitoringEmployee(page, limit);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      MonitoringEmployeeActions.setPagingMonitoringEmployee(paging)\n    );\n    getListMonitoringEmployee(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    MonitoringEmployeeActions.handleSearch(monitoringEmployeeFormValues);\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportMonitoringEmployeePdf(printedData, monitoringEmployeeFormValues);\n  };\n\n  return (\n    <MonitoringEmployeeComponent\n      headers={headers}\n      listMonitoringEmployee={listMonitoringEmployee}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  monitoringEmployee: state.monitoringEmployee,\n  branch: state.branch,\n  monitoringEmployeeFormValues: getFormValues(\"monitoringEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMonitoringEmployee: (page, limit, keyword, type, from, until) =>\n    MonitoringEmployeeActions.getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MonitoringEmployeeContainer);\n\nexport default reduxForm({\n  form: \"monitoringEmployeeForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport moment from \"moment\";\n\nexport const exportMonitoringEmployeePdf = (data, values) => {\n  const { listMonitoringEmployee, from, until } = data;\n  const startDate = moment(from).format(\"YYYY-MM-DD\");\n  const dueDate = moment(until).format(\"YYYY-MM-DD\");\n  const monitoringEmployeeList = [];\n\n  listMonitoringEmployee.map((item, index) => {\n    monitoringEmployeeList.push({\n      no: index + 1,\n      nik: item.employee_nik,\n      name: item.employee_name,\n      phone: item.phone,\n      address: item.address,\n      type: item.job_type,\n      status: item.job_status,\n      branch: item.branch_name,\n      customer: item.customer_name,\n      createdDate: item.created_date,\n    });\n  });\n\n  const doc = new jsPDF();\n  // doc.text({from_left}, {from_top})\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Monitoring Karyawan\", 100, 20, \"center\");\n  doc.setFontSize(16);\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\n\n  doc.setFontSize(12);\n\n  //   Line 1\n  doc.text(15, 42, `Dari Tanggal`);\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\n  doc.text(15, 49, `Sampai Tanggal`);\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\n\n  // Check if filtered by branch\n  if (values) {\n    if (values.branch) {\n      const splitBranch = values.branch.split(\"|\");\n      doc.text(15, 56, `Cabang`);\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\n    }\n  }\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  const headTable = [\n    [\n      { content: \"Tanggal\", rowSpan: 2, halign: \"center\" },\n      {\n        content: \"Karyawan\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n      {\n        content: \"Service\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n    ],\n    [\n      \"NIK\",\n      \"Nama Karyawan\",\n      \"Cabang\",\n      \"Tipe\",\n      \"Customer\",\n      \"Unit\",\n      \"Model\",\n      \"Status\",\n    ],\n  ];\n\n  doc.autoTable({\n    startY: values ? 65 : 60,\n    body: monitoringEmployeeList,\n    theme: \"plain\",\n    head: headTable,\n    headStyles: { halign: \"center\", valign: \"middle\" },\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\n    columns: [\n      { header: \"Tanggal\", dataKey: \"createdDate\" },\n      { header: \"NIK\", dataKey: \"nik\" },\n      { header: \"Nama Karyawan\", dataKey: \"name\" },\n      { header: \"Cabang\", dataKey: \"branch\" },\n      { header: \"Tipe\", dataKey: \"type\" },\n      { header: \"Customer\", dataKey: \"customer\" },\n      { header: \"Unit\", dataKey: \"units\" },\n      { header: \"Model\", dataKey: \"unit_models\" },\n      { header: \"Status\", dataKey: \"status\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { columnWidth: 28 },\n      1: { columnWidth: 20 },\n      // 2: { halign: \"center\" },\n      // 3: { halign: \"center\" },\n      // 4: { halign: \"center\" },\n      // 5: { halign: \"center\" },\n      // 6: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  //   Export\n  doc.save(\"monitoring-employee.pdf\");\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportServiceRepairComponent = (props) => {\n  const { headers, listServiceRepair, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Service Repair</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServiceRepair}\n                    size={\"small\"}\n                    // scroll={{ x: 50, y: 50, scrollToFirstRowOnChange }}#108ee9\n                    scroll\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportServiceRepairComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { BookOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee, getStatus } from \"../../../app/Helpers\";\nimport * as ReportServiceRepairActions from \"../Store/ReportServiceRepairActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport ReportServiceRepairComponent from \"../Component/ReportServiceRepairComponent\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport moment from \"moment\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\n\n\nconst ReportServiceRepairContainer = (props) => {\n  const {\n    handlePressAddNew,\n    serviceRepair: { listServiceRepair, paging },\n    branch: { listBranch },\n    serviceRepairFormValues,\n    getListServiceRepair,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listServiceRepair.length > 0) {\n    listServiceRepair.map((item, index) => {\n      listServiceRepair[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<BookOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type ? type.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_model_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due.length - b.due.length,\n      render: (due) => (\n        <Text>{due ? moment(due).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = getStatus(status).color;\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status ? getStatus(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"start\",\n      key: \"start\",\n      width: 500,\n      render: (start) => (\n        <Text>{start ? moment(start).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: 200,\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListServiceRepair(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportServiceRepairActions.handleSearch(serviceRepairFormValues);\n  };\n\n  return (\n    <ReportServiceRepairComponent\n      headers={headers}\n      listServiceRepair={listServiceRepair}\n      handlePressAddNew={handlePressAddNew}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  serviceRepair: state.serviceRepair,\n  branch: state.branch,\n  serviceRepairFormValues: getFormValues(\"serviceRepairForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServiceRepair: (page, limit, keyword, branch, from, until) =>\n    ReportServiceRepairActions.getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      from,\n      until\n    ),\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportServiceRepairContainer);\n\nexport default reduxForm({\n  form: \"serviceRepairForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportEmployeeComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportEmployeeActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportEmployeeComponent\";\n\nconst ReportEmployeeContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportEmployeeContainer);\n\nexport default reduxForm({\n  form: \"reportEmployeeForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Input, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst ListServiceComponent = (props) => {\n  const {\n    headers,\n    listServices,\n    enumType,\n    enumStatus,\n    onChangePagination,\n    paging,\n    onSearch,\n    listEmployee,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">List Service</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row d-flex mb-2\">\n                      {/* This Filter */}\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumType ?? []}\n                          name=\"typeService\"\n                          label=\"Filter Tipe\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumStatus ?? []}\n                          name=\"statusService\"\n                          label=\"Filter Status\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      ...pagination,\n                    }}\n                    // scroll={{ x: dataTable.tableWidth, y: tableHeight }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListServiceComponent;\n","import React from \"react\";\nimport { Space, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeExternalServices,\n  getIndex,\n  isBlockedRoleListService,\n  SelectStatusServices,\n} from \"../../../app/Helpers\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListServicesComponent from \"../Component/ListServicesComponent\";\nimport * as ListServiceActions from \"../Store/ListServicesActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\n\nconst ListServicesContainer = (props) => {\n  const {\n    user: { roles },\n    getListServices,\n    handlePressEdit,\n    handlePressDelete,\n    services: { listServices, paging },\n    listServiceFormValues,\n    getListEmployeesDropdown,\n    listEmployee,\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n  const { page, limit, totalPage } = paging;\n\n  if (listServices.length > 0) {\n    listServices.map((item, index) => {\n      listServices[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      {roles[0].name === \"Administrator\" && (\n        <CButtonAntd\n          onClick={() => handlePressDelete(record.id)}\n          type=\"primary\"\n          icon={<DeleteOutlined />}\n          size=\"middle\"\n          danger\n        />\n      )}\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"15%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: \"15%\",\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: \"15%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const checkBlockedRole = () => {\n    getListServices(page, limit);\n\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleListService(roleId);\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    getListEmployeesDropdown();\n    checkBlockedRole();\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ListServiceActions.setPagingListService(paging));\n    getListServices(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    ListServiceActions.handleSearch(1, 10, val, listServiceFormValues);\n  };\n\n  const SelectEmployeeData = [];\n  listEmployee.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <ListServicesComponent\n      headers={headers}\n      listServices={listServices}\n      renderActionTable={renderActionTable}\n      handlePressEdit={handlePressEdit}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      enumType={enumTypeExternalServices}\n      enumStatus={SelectStatusServices}\n      listEmployee={SelectEmployeeData}\n      // columns={columns}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  listServiceFormValues: getFormValues(\"listServices\")(state),\n  user: state.auth.userDetail,\n  listEmployee: state.employees.listEmployeeDropdown,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServices: (page, limit, keyword, filterValues) => {\n    ListServiceActions.getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      filterValues\n    );\n  },\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n  getListEmployeesDropdown: () => {\n    EmployeeActions.loadEmployeeDataDropdown();\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListServicesContainer);\n\nexport default reduxForm({\n  form: \"listServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst CTableAntd = (props) => {\n  const { data, headers, renderActions, size, pagination, id } = props;\n\n  const [searchText, setSearchText] = React.useState(\"\");\n  const [searchedColumn, setSearchedColumn] = React.useState(\"\");\n  const searchInput = React.useRef();\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.current.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const columns = [];\n  headers.map((item, index) => {\n    columns.push({\n      title: item.title,\n      dataIndex: item.dataIndex,\n      key: item.dataIndex,\n      width: item.width ?? \"30%\",\n      sorter: item.sorter,\n      render: item.render,\n      sortDirections: [\"descend\", \"ascend\"],\n      ...getColumnSearchProps(item.dataIndex),\n    });\n  });\n\n  if (renderActions) {\n    columns.push({\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActions,\n    });\n  }\n\n  return (\n    <Table\n      bordered\n      id={id ?? \"my-table-customize\"}\n      columns={columns}\n      dataSource={data}\n      size={size ?? \"middle\"}\n      pagination={{\n        size: 3,\n        pageSizeOptions: [\"10\", \"20\", \"50\"],\n        showSizeChanger: true,\n        ...pagination,\n      }}\n      // {...props}\n    />\n  );\n};\n\nCTableAntd.propTypes = {\n  data: PropTypes.array,\n  headers: PropTypes.array,\n  renderActions: PropTypes.any,\n};\n\nexport default CTableAntd;\n","import { Modal } from \"antd\";\nimport React from \"react\";\n\ninterface IProps {\n  visible: boolean;\n  content: any;\n  footer: any;\n  onCancel: any;\n  width: any;\n}\n\nconst CModal: React.FC<IProps> = (props) => {\n  // const showModal = () => {\n  //   setVisible(true)\n  // };\n\n  // const handleOk = () => {\n  //   setLoading(true)\n  //   setTimeout(() => {\n  //     setLoading(false)\n  //     setVisible(false)\n  //   }, 3000);\n  // };\n\n  return (\n    <Modal\n      visible={props.visible}\n      footer={props.footer}\n      destroyOnClose\n      onCancel={props.onCancel}\n      width={props.width ? props.width : 600}\n    >\n      {props.content}\n    </Modal>\n  );\n};\n\nexport default CModal;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"username\"\n            label=\"Username\"\n            placeholder=\"\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"fullname\"\n            label=\"Nama Lengkap\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"password\"\n            label=\"Password\"\n            component={CInput}\n            type=\"password\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AdminModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default AdminModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport AdminModalComponent from \"../Component/AdminModalComponent\";\n\nconst AdminModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    admins: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  return (\n    <AdminModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    AdminActions.saveAdminRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminModalContainer);\n\nexport default reduxForm({\n  form: \"editAdminForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport AdminModalContainer from \"../Container/AdminModalContainer\";\n\nconst { Search } = Input;\n\nconst AdminComponent = (props) => {\n  const {\n    headers,\n    listAdmin,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Admin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Admin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listAdmin}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AdminModalContainer />\n    </div>\n  );\n};\n\nexport default AdminComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport AdminComponent from \"../Component/AdminComponent\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListAdmin,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    admins: { listAdmin, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listAdmin.length > 0) {\n    listAdmin.map((item, index) => {\n      listAdmin[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"10%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Username\",\n      dataIndex: \"username\",\n      key: \"username\",\n      width: \"30%\",\n      sorter: (a, b) => a.username.length - b.username.length,\n    },\n    {\n      title: \"Nama Lengkap\",\n      dataIndex: \"fullname\",\n      key: \"fullname\",\n      width: \"30%\",\n      sorter: (a, b) => a.fullname.length - b.fullname.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListAdmin(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(AdminActions.setPagingAdmin(paging));\n    getListAdmin(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListAdmin(page, limit, val);\n  };\n\n  return (\n    <AdminComponent\n      headers={headers}\n      listAdmin={listAdmin}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListAdmin: (page, limit, keyword) =>\n    AdminActions.getListAdminRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(AdminActions.setSelectedAdminData({}));\n    await dispatch(AdminActions.setSelectedAdminId(\"\"));\n    dispatch(AdminActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    AdminActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(AdminActions.setFormStatus(\"edit\"));\n    await dispatch(AdminActions.setSelectedAdminId(record.id));\n    await dispatch(AdminActions.setSelectedAdminData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await AdminActions.mapDetailAdminToForm();\n  },\n  handlePressDelete: async (adminId) => {\n    await dispatch(AdminActions.setSelectedAdminId(adminId));\n    AdminActions.deleteAdminRequested(adminId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"adminForm\",\n})(EnhanceContainer);\n","import React from \"react\";\n\nconst NotFound = (props) => {\n  return (\n    // <div class=\"main-wrapper\">\n    //   <div class=\"page-wrapper full-page\">\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto d-flex flex-column align-items-center\">\n          <img\n            src=\"../../../assets/images/404.svg\"\n            class=\"img-fluid mb-2\"\n            alt=\"404\"\n          />\n          <h1 class=\"font-weight-bold mb-22 mt-2 tx-80 text-muted\">404</h1>\n          <h4 class=\"mb-2\">Page Not Found</h4>\n          <h6 class=\"text-muted mb-3 text-center\">\n            Oopps!! The page you were looking for doesn't exist.\n          </h6>\n          <a href=\"/dashboard\" class=\"btn btn-primary\">\n            Back to home\n          </a>\n        </div>\n      </div>\n    </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport history from \"./History\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as Selectors from \"../modules/Auth/Selector/AuthSelector\";\nimport ConfigAxios from \"./axios/ConfigAxios\";\nimport { navigate } from \"./Helpers\";\n\nconst AuthMiddleware = (ComposedComponent, menuPath, isSecureRoute) => {\n  const returnData = (props) => {\n    const { isAuthenticated, redirect, userMenus, redirectToServices } = props;\n\n    if (!isAuthenticated) {\n      redirect();\n    } else {\n      if (isSecureRoute) {\n        const isMenuCanAccess = userMenus.filter((x) => x.path === menuPath);\n\n        if (isMenuCanAccess.length <= 0) {\n          redirectToServices();\n        }\n      }\n      ConfigAxios.defaults.headers[\n        \"Authorization\"\n      ] = `Bearer ${isAuthenticated}`;\n    }\n\n    return (\n      <div>{isAuthenticated ? <ComposedComponent {...props} /> : null}</div>\n    );\n  };\n\n  const mapStateToProps = createStructuredSelector({\n    isAuthenticated: Selectors.Token(),\n    userRole: Selectors.UserRole(),\n    userMenus: Selectors.UserMenus(),\n  });\n  const mapDispatchToProps = (dispatch) => ({\n    redirect: () => history.push(\"/auth\"),\n    redirectToServices: () => navigate(\"/list_service\"),\n  });\n  return connect(mapStateToProps, mapDispatchToProps)(returnData);\n};\n\nexport default AuthMiddleware;\n","import React from \"react\";\n\ninterface IProps {\n  type:\n    | \"primary\"\n    | \"danger\"\n    | \"warning\"\n    | \"info\"\n    | \"success\"\n    | \"secondary\"\n    | \"light\"\n    | \"dark\";\n}\n\nconst CBadgeText: React.FC<IProps> = (props) => {\n  return <span className={`badge badge-${props.type}`}>{props.children}</span>;\n};\n\nexport default CBadgeText;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumEmployee }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Teknisi</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <CSelect\n            showSearch\n            data={enumEmployee}\n            name=\"employee\"\n            label=\"Pilih Teknisi\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AddEmployeeModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    handleCancel,\n    enumEmployee,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          enumEmployee={enumEmployee}\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n        />\n      }\n    />\n  );\n};\n\nexport default AddEmployeeModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateServiceEmployeeForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport AddEmployeeModalComponent from \"../Component/AddEmployeeModalComponent\";\n\nconst AddEmployeeModalContainer = (props) => {\n  const {\n    handleCancel,\n    services: { selectedJobService },\n    component: { isModalVisible },\n    employees: { listEmployees },\n    valid,\n  } = props;\n\n  const SelectEmployee = [];\n  listEmployees.map((item, index) => {\n    SelectEmployee.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      const employee = values.employee.split(\"|\");\n      DetailServiceTransactionAction.handleAddNewEmployeeService(\n        selectedJobService.id,\n        employee[0]\n      );\n    } else {\n    }\n  };\n\n  return (\n    <AddEmployeeModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      enumEmployee={SelectEmployee}\n      submitForm={submitForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddEmployeeModalContainer);\n\nexport default reduxForm({\n  form: \"serviceEmployeeForm\",\n  validate: validateServiceEmployeeForm,\n})(EnhanceContainer);\n","export const Themes = {\n  success: \"#17B794\",\n  error: \"#f50\",\n  warning: \"#FEC260\",\n  secondary: \"#A5A5A5\",\n};\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"reason\"\n            label=\"Alasan Reject\"\n            component={CInput}\n            typeComponent=\"textarea\"\n            placeholder=\"Masukan alasan reject\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst RejectedModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RejectedModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRejected, validateFormRoles } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionActions from \"../Store/DetailServiceTransactionAction\";\nimport RejectedModalComponent from \"../Component/RejectedModalComponent\";\n\nconst RejectedModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { rejectionsModal },\n    services: { selectedJobService },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(selectedJobService.id, values);\n    } else {\n    }\n  };\n\n  return (\n    <RejectedModalComponent\n      isModalVisible={rejectionsModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formName={\"Alasan Reject\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  detailService: state.detailService,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionActions.setRejectionsModal(false)),\n\n  handleSubmitForm: (jobId, values) => {\n    DetailServiceTransactionActions.handlePressRejectedRequested(jobId, values);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RejectedModalContainer);\n\nexport default reduxForm({\n  form: \"editRejecetdForm\",\n  validate: validateFormRejected,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, InputNumber, Row, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumWarranty, warrantyMonths } from \"../../../app/Helpers\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">Ubah Service</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={enumWarranty}\n              name=\"warranty\"\n              label=\"Warranty\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-7\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={warrantyMonths()}\n              name=\"warrantyMonths\"\n              label=\"Warranty Months\"\n            />\n          </div>\n          <div class=\"col-md-5\">\n            <Field\n              name=\"warrantyYears\"\n              label=\"Warranty Year\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"jobPerform\"\n              label=\"Job Perform\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalTransactionComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalTransactionComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTransaction } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport EditModalTransactionComponent from \"../Component/EditModalTransactionComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editTransactionModal },\n    masters: { listMenu },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      // handleSubmitForm(\"edit\", values, menuSelected);\n      DetailServiceTransactionAction.handlePressEditRequested(values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <EditModalTransactionComponent\n      isModalVisible={editTransactionModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditTransactionModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) => {},\n  // DetailServiceTransactionAction.saveRoleRequested(\n  //   type,\n  //   values,\n  //   menuSelected\n  // ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editTransactionForm\",\n  validate: validateFormTransaction,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, Row, TimePicker, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumTypeActivities } from \"../../../app/Helpers\";\nimport moment from \"moment\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n  typeFormDailies,\n  handleChangeTimePicker,\n  timeStartEnd,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">{`${\n        typeFormDailies === \"add\" ? \"Tambah\" : \"Ubah\"\n      } Catatan Teknisi`}</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"title\"\n              label=\"Judul\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mb-3\">\n          <div class=\"col-md-6\">\n            <Typography\n              style={{ marginBottom: 7 }}\n            >{`Jam Mulai -> Selesai`}</Typography>\n            <TimePicker.RangePicker\n              name=\"timeStartEnd\"\n              value={[timeStartEnd[0] ?? \"\", timeStartEnd[1] ?? \"\"]}\n              onChange={handleChangeTimePicker}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-5\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-5\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n        </div>\n\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumTypeActivities}\n              name=\"activityType\"\n              label=\"Pilih Kegiatan\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalDailiesComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n    typeFormDailies,\n    handleChangeTimePicker,\n    timeStartEnd,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n          typeFormDailies={typeFormDailies}\n          handleChangeTimePicker={handleChangeTimePicker}\n          timeStartEnd={timeStartEnd}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, getFormValues, reduxForm } from \"redux-form\";\nimport { validateDailiesForm } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\n\nimport EditModalDailiesComponent from \"../Component/EditModalDailiesComponent\";\n\nconst EditModalDailiesContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editDailiesModal, typeFormDailies },\n    masters: { listMenu },\n    setTimeDailiesForm,\n    editDailiesFormValues,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      DetailServiceTransactionAction.handlePressEditDailiesRequested(values);\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleChangeTimePicker = (time) => {\n    setTimeDailiesForm(time);\n  };\n\n  return (\n    <EditModalDailiesComponent\n      isModalVisible={editDailiesModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      typeFormDailies={typeFormDailies}\n      handleChangeTimePicker={handleChangeTimePicker}\n      timeStartEnd={\n        editDailiesFormValues && editDailiesFormValues.timeStartEnd \n          ? editDailiesFormValues.timeStartEnd\n          : [\"\", \"\"]\n      }\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n  editDailiesFormValues: getFormValues(\"editDailiesForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditDailiesModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n  setTimeDailiesForm: (time) => {\n    dispatch(change(\"editDailiesForm\", \"timeStartEnd\", time ?? \"\"));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditModalDailiesContainer);\n\nexport default reduxForm({\n  form: \"editDailiesForm\",\n  validate: validateDailiesForm,\n})(EnhanceContainer);\n","import React from \"react\";\r\nimport CModal from \"../../../components/CModal/CModal\";\r\nimport { Field, Form } from \"redux-form\";\r\nimport CInput from \"../../../components/CInput/CInput\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { Checkbox, Col, Divider, message, Row, Typography, Upload } from \"antd\";\r\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\r\nimport {\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { getBase64 } from \"../../../app/Helpers\";\r\nimport CSelect from \"../../../components/CSelect/CSelect\";\r\n\r\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\r\n  return [\r\n    <CButtonAntd\r\n      icon={<CloseOutlined />}\r\n      key=\"submit\"\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleClose}\r\n      danger\r\n    >\r\n      Tutup\r\n    </CButtonAntd>,\r\n    <CButtonAntd\r\n      key=\"submit\"\r\n      icon={<CheckOutlined />}\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleSaveForm}\r\n    >\r\n      Simpan\r\n    </CButtonAntd>,\r\n  ];\r\n};\r\n\r\nconst RenderContent = ({\r\n  handleSubmit,\r\n  submitForm,\r\n  beforeUpload,\r\n  handleChange,\r\n  imageUrl,\r\n  uploadButton,\r\n  enumUnit,\r\n  isImageLoaded,\r\n  isExternal,\r\n}) => {\r\n  return (\r\n    <div class=\"page-content\">\r\n      <Divider orientation=\"left\">Tambah Media</Divider>\r\n      <Form onSubmit={handleSubmit(submitForm)}>\r\n        <Row>\r\n          <div\r\n            class=\"card-body\"\r\n            style={{\r\n              marginLeft: -22,\r\n              marginTop: -20,\r\n              alignSelf: \"center\",\r\n            }}\r\n          >\r\n            <Upload\r\n              name=\"avatar\"\r\n              listType=\"picture-card\"\r\n              className=\"avatar-uploader overflow-hidden\"\r\n              showUploadList={false}\r\n              beforeUpload={beforeUpload}\r\n              onChange={handleChange}\r\n            >\r\n              {imageUrl !== \"\" ? (\r\n                <>\r\n                  {\r\n                    <img\r\n                      src={imageUrl}\r\n                      alt=\"avatar\"\r\n                      style={{\r\n                        width: \"100%\",\r\n                        height: \"100%\",\r\n                        resizeMode: \"stretch\",\r\n                        borderRadius: 5,\r\n                      }}\r\n                    />\r\n                  }\r\n                  <div\r\n                    class=\"row\"\r\n                    style={{\r\n                      backgroundColor: \"#F3F3F3\",\r\n                      position: \"absolute\",\r\n                      width: 80,\r\n                      heigh: 30,\r\n                      borderRadius: 50,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      opacity: 0.7,\r\n                    }}\r\n                  >\r\n                    <Typography style={{ fontSize: 10 }}>Ubah</Typography>\r\n                    <EditOutlined\r\n                      style={{\r\n                        color: \"#020202\",\r\n                        fontSize: 10,\r\n                        marginLeft: 5,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                uploadButton\r\n              )}\r\n            </Upload>\r\n            {isImageLoaded === false && (\r\n              <Typography style={{ fontSize: 10, color: \"red\" }}>\r\n                Field foto wajib diisi!\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </Row>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <Field\r\n              name=\"title\"\r\n              label=\"Judul\"\r\n              component={CInput}\r\n              typeComponents=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <Field\r\n              name=\"description\"\r\n              label=\"Deskripsi\"\r\n              component={CInput}\r\n              typeComponents=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n        {isExternal && (\r\n          <div class=\"row mt-2\">\r\n            <div class=\"col-md-12\">\r\n              <CSelect\r\n                showSearch\r\n                data={enumUnit}\r\n                name=\"unit\"\r\n                label=\"Pilih Unit\"\r\n              />\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InsertImageModalComponent = (props) => {\r\n  const {\r\n    isModalVisible,\r\n    handleSubmit,\r\n    submitForm,\r\n    isLoadingFormGlobal,\r\n    handleCancel,\r\n    formName,\r\n    enumUnit,\r\n    menuChecked,\r\n    formStatus,\r\n    onChangeRoleMenu,\r\n    defaultImage,\r\n    handleUploadPhoto,\r\n    isImageLoaded,\r\n    isExternal,\r\n  } = props;\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [imageUrl, setImageUrl] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    if (defaultImage) {\r\n      setImageUrl(defaultImage);\r\n    } else {\r\n      setImageUrl(\"\");\r\n    }\r\n  }, [defaultImage, imageUrl]);\r\n\r\n  const beforeUpload = (file) => {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      message.error(\"You can only upload JPG/PNG file!\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"Image must smaller than 2MB!\");\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      info.file.status = \"done\";\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setImageUrl(imageUrl);\r\n        setLoading(false);\r\n        handleUploadPhoto(imageUrl);\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CModal\r\n      visible={isModalVisible}\r\n      onCancel={handleCancel}\r\n      footer={\r\n        <RenderFooter\r\n          handleSaveForm={handleSubmit}\r\n          handleClose={handleCancel}\r\n        />\r\n      }\r\n      content={\r\n        <RenderContent\r\n          handleSubmit={handleSubmit}\r\n          submitForm={submitForm}\r\n          isLoadingFormGlobal={isLoadingFormGlobal}\r\n          formName={formName}\r\n          enumUnit={enumUnit}\r\n          defaultValuesMenu={menuChecked}\r\n          formStatus={formStatus}\r\n          onChangeRoleMenu={onChangeRoleMenu}\r\n          setImageUrl={setImageUrl}\r\n          setLoading={setLoading}\r\n          beforeUpload={beforeUpload}\r\n          handleChange={handleChange}\r\n          uploadButton={uploadButton}\r\n          imageUrl={imageUrl}\r\n          isImageLoaded={isImageLoaded}\r\n          isExternal={isExternal}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default InsertImageModalComponent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { change, getFormValues, reduxForm } from \"redux-form\";\r\nimport { validateFormEditMedia } from \"../../../app/validateForm\";\r\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\r\n\r\nimport InsertImageModalComponent from \"../Component/InsertImageModalComponent\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport { showToast } from \"../../Roles/Store/RolesActions\";\r\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\r\n\r\nconst InsertImageModalContainer = (props) => {\r\n  const {\r\n    valid,\r\n    handleCancel,\r\n    detailService: { insertMediaModal },\r\n    formValues,\r\n    services: { selectedJobService },\r\n  } = props;\r\n  const [isImageLoaded, setIsImageLoaded] = React.useState(null);\r\n\r\n  const handleError = () => {\r\n    setIsImageLoaded(false);\r\n    showToast(\"Harap lengkapi form!\", \"error\");\r\n  };\r\n\r\n  const submitForm = (values) => {\r\n    if (valid) {\r\n      if (formValues.imageUrl) {\r\n        setIsImageLoaded(true);\r\n        DetailServiceTransactionAction.handlePressInsertMediaRequested(values);\r\n      } else {\r\n        handleError();\r\n      }\r\n    }\r\n  };\r\n\r\n  const SelectUnit = [];\r\n  if (selectedJobService.units && selectedJobService.units.length > 0) {\r\n    selectedJobService.units.map((item, index) => {\r\n      SelectUnit.push({\r\n        id: `unit-${index}`,\r\n        value: item.id,\r\n        label: item.unit_name,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleUploadPhoto = (base64) => {\r\n    store.dispatch(change(\"editMediaForm\", `imageUrl`, base64 ?? \"\"));\r\n  };\r\n\r\n  return (\r\n    <InsertImageModalComponent\r\n      isModalVisible={insertMediaModal}\r\n      handleCancel={handleCancel}\r\n      submitForm={submitForm}\r\n      enumUnit={SelectUnit}\r\n      handleUploadPhoto={handleUploadPhoto}\r\n      isImageLoaded={isImageLoaded}\r\n      defaultImage={\r\n        formValues && formValues.imageUrl ? formValues.imageUrl : \"\"\r\n      }\r\n      isExternal={selectedJobService.is_external}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  admins: state.admins,\r\n  roles: state.roles,\r\n  component: state.component,\r\n  masters: state.masters,\r\n  detailService: state.detailService,\r\n  services: state.services,\r\n  formValues: getFormValues(\"editMediaForm\")(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleCancel: () =>\r\n    dispatch(DetailServiceTransactionAction.setInsertMediaModal(false)),\r\n});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InsertImageModalContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"editMediaForm\",\r\n  validate: validateFormEditMedia,\r\n})(EnhanceContainer);\r\n","import React from \"react\";\r\nimport CModal from \"../../../components/CModal/CModal\";\r\nimport { Field, Form } from \"redux-form\";\r\nimport CInput from \"../../../components/CInput/CInput\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { Checkbox, Col, Divider, Row } from \"antd\";\r\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\r\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\r\n\r\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\r\n  return [\r\n    <CButtonAntd\r\n      icon={<CloseOutlined />}\r\n      key=\"submit\"\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleClose}\r\n      danger\r\n    >\r\n      Tutup\r\n    </CButtonAntd>,\r\n    <CButtonAntd\r\n      key=\"submit\"\r\n      icon={<CheckOutlined />}\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleSaveForm}\r\n    >\r\n      Simpan\r\n    </CButtonAntd>,\r\n  ];\r\n};\r\n\r\nconst SelectRole = (props) => {\r\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\r\n\r\n  const Item = ({ item }) => {\r\n    return (\r\n      <Checkbox name={`item.${item.value}`} value={item.value}>\r\n        {item.label}\r\n      </Checkbox>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Checkbox.Group\r\n        {...props.input}\r\n        style={{ width: \"100%\" }}\r\n        defaultValue={defaultValuesMenu}\r\n        onChange={onChangeRoleMenu}\r\n      >\r\n        <Row>\r\n          {data.map((item, index) => {\r\n            return (\r\n              <Col span={8}>\r\n                <Field\r\n                  item={item}\r\n                  name={`item.${item.value}`}\r\n                  component={Item}\r\n                />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Checkbox.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderContent = ({ handleSubmit, submitForm, handleKeyDown }) => {\r\n  return (\r\n    <div class=\"page-content\">\r\n      <Divider orientation=\"left\">Ubah laporan</Divider>\r\n      <Form onSubmit={handleSubmit(submitForm)}>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <Field\r\n              name=\"summary\"\r\n              label=\"Detail Laporan\"\r\n              component={CInput}\r\n              typeComponent=\"textarea\"\r\n              linebreak\r\n              onKeyDown={handleKeyDown}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditModalSummaryComponent = (props) => {\r\n  const {\r\n    isModalVisible,\r\n    handleSubmit,\r\n    submitForm,\r\n    isLoadingFormGlobal,\r\n    handleCancel,\r\n    formName,\r\n    enumMenu,\r\n    menuChecked,\r\n    formStatus,\r\n    onChangeRoleMenu,\r\n    typeFormDailies,\r\n  } = props;\r\n\r\n  return (\r\n    <CModal\r\n      visible={isModalVisible}\r\n      onCancel={handleCancel}\r\n      footer={\r\n        <RenderFooter\r\n          handleSaveForm={handleSubmit}\r\n          handleClose={handleCancel}\r\n        />\r\n      }\r\n      content={\r\n        <RenderContent\r\n          handleSubmit={handleSubmit}\r\n          submitForm={submitForm}\r\n          isLoadingFormGlobal={isLoadingFormGlobal}\r\n          formName={formName}\r\n          enumMenu={enumMenu}\r\n          defaultValuesMenu={menuChecked}\r\n          formStatus={formStatus}\r\n          onChangeRoleMenu={onChangeRoleMenu}\r\n          typeFormDailies={typeFormDailies}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditModalSummaryComponent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { change, reduxForm } from \"redux-form\";\r\nimport { validateFormTransaction } from \"../../../app/validateForm\";\r\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\r\nimport EditModalSummaryComponent from \"../Component/EditModalSummaryComponent\";\r\n\r\nconst EditModalSummaryContainer = (props) => {\r\n  const {\r\n    valid,\r\n    handleCancel,\r\n    detailService: { editSummaryModal, typeFormDailies },\r\n    masters: { listMenu },\r\n  } = props;\r\n\r\n  const submitForm = (values) => {\r\n    if (valid) {\r\n      DetailServiceTransactionAction.handlePressEditSummaryRequested(values);\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const SelectMenu = [];\r\n  listMenu.map((item, index) => {\r\n    SelectMenu.push({\r\n      id: `role-${index}`,\r\n      value: item.id,\r\n      label: item.menu,\r\n    });\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <EditModalSummaryComponent\r\n      isModalVisible={editSummaryModal}\r\n      handleCancel={handleCancel}\r\n      submitForm={submitForm}\r\n      enumMenu={SelectMenu}\r\n      typeFormDailies={typeFormDailies}\r\n      handleKeyDown={handleKeyDown}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  admins: state.admins,\r\n  roles: state.roles,\r\n  component: state.component,\r\n  masters: state.masters,\r\n  detailService: state.detailService,\r\n  services: state.services,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleCancel: () =>\r\n    dispatch(DetailServiceTransactionAction.setEditSummaryModal(false)),\r\n  handleClearModalContent: () => {\r\n    dispatch(change(\"editSummaryForm\", `type`, \"\"));\r\n    dispatch(change(\"editSummaryForm\", `unitId`, \"\"));\r\n    dispatch(change(\"editSummaryForm\", `summary`, \"\"));\r\n  },\r\n});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditModalSummaryContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"editSummaryForm\",\r\n  validate: validateFormTransaction,\r\n})(EnhanceContainer);\r\n","import React from \"react\";\nimport { Tabs } from \"antd\";\nimport { Typography } from \"antd\";\nimport CBadgeText from \"../../../components/CBadgeText/CBadgeText\";\nimport moment from \"moment\";\nimport AddEmployeeModalContainer from \"../Container/AddEmployeeModalContainer\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n  EditOutlined,\n  StarOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Themes } from \"../../../property/colors\";\nimport RejectedModalContainer from \"../Container/RejectedModalContainer\";\nimport EditModalTransactionContainer from \"../Container/EditModalTransactionContainer\";\nimport EditModalDailiesContainer from \"../Container/EditModalDailiesContainer\";\nimport InsertImageModalContainer from \"../Container/InsertImageModalContainer\";\nimport EditModalSummaryContainer from \"../Container/EditModalSummaryContainer\";\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\nconst DetailServiceTransactionComponent = (props) => {\n  const {\n    data,\n    isBlockedRole,\n    TabPanel,\n    onChangeTab,\n    handlePressGeneratePdf,\n    goBack,\n    handlePressActions,\n    handlePressEdit,\n    handleSetOnProgress,\n  } = props;\n\n  const RenderButtonAction = ({ status, role }) => {\n    let button;\n    switch (status.toLowerCase()) {\n      case \"completed\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"approved\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Approve\n            </CButtonAntd>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"rejected\")}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"progress\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"finished\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Complete\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"finished\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              // onClick={handlePressAddNew}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n\n      default:\n        return <div />;\n    }\n    return button;\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"col-md-12 grid-margin stretch-card\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"row align-items-center justify-content-between\">\n                <div>\n                  <h6 class=\"card-title\">Detail Transaksi</h6>\n                </div>\n                <div class=\"row mb-3 ml-2 mr-2\">\n                  <CButtonAntd\n                    onClick={goBack}\n                    type=\"primary\"\n                    icon={<ArrowLeftOutlined />}\n                    size=\"middle\"\n                    danger\n                  >\n                    Kembali\n                  </CButtonAntd>\n                  <div class=\"ml-3\" />\n                  {data.status.toLowerCase() !== \"approved\" && !isBlockedRole && (\n                    <CButtonAntd\n                      onClick={handlePressEdit}\n                      type=\"primary\"\n                      icon={<EditOutlined />}\n                      size=\"middle\"\n                    >\n                      Ubah\n                    </CButtonAntd>\n                  )}\n                  {data.status.toLowerCase() === \"rejected\" && !isBlockedRole && (\n                    <CButtonAntd\n                      onClick={handleSetOnProgress}\n                      type=\"primary\"\n                      icon={<StarOutlined />}\n                      size=\"middle\"\n                    >\n                      Set Job OnProgress\n                    </CButtonAntd>\n                  )}\n                  <RenderButtonAction status={data.status} />\n                  <div class=\"mr-3\" />\n                  {/* button to trigger printing of target component */}\n                  {!isBlockedRole && (\n                    <CButtonAntd\n                      onClick={handlePressGeneratePdf}\n                      type=\"primary\"\n                      icon={<FilePdfOutlined />}\n                      size=\"middle\"\n                    >\n                      Cetak Formulir\n                    </CButtonAntd>\n                  )}\n                </div>\n              </div>\n              <div\n                id=\"header-detail-transaction\"\n                class=\"d-flex justify-content-between align-items-baseline\"\n              >\n                <div class=\"col-md-6\">\n                  <Text>Tipe : </Text>\n                  <CBadgeText type={data.is_external ? \"success\" : \"info\"}>\n                    {data.type ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Unit : </Text>\n                  <Text>{data.unit ?? \"-\"}</Text>\n                  <br />\n                  <Text>Model (SN) : </Text>\n                  <Text>{data.model ?? \"-\"}</Text>\n                  <br />\n                  <Text>Job Forms : </Text>\n                  <Text>{data.job_form_name ?? \"-\"}</Text>\n                  <br />\n                  <Text>Customer : </Text>\n                  <Text strong>{data.customer_name}</Text>\n                  <br />\n                  <Text>Warranty : </Text>\n                  <Text strong>\n                    {data.warranty ? \"Warranty\" : \"No Warranty\"}\n                  </Text>\n                  <br />\n                  <Text>PIC : </Text>\n                  <Text strong>{data.customer_pic_name ?? \"()\"}</Text>\n                </div>\n                <div class=\"col-md-6\">\n                  <Text>Status Transaksi : </Text>\n                  <CBadgeText\n                    type={\n                      data.status.toLowerCase() === \"draft\"\n                        ? \"warning\"\n                        : \"success\"\n                    }\n                  >\n                    {data.status ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Job Perform : </Text>\n                  <Text strong>{data.job_perform}</Text>\n                  <br />\n                  <Text>Start - Due : </Text>\n                  <Text strong>{`${moment(data.start).format(\n                    \"DD-MMM-YYYY\"\n                  )} - ${moment(data.due).format(\"DD-MMM-YYYY\")}`}</Text>\n\n                  <br />\n                  <Text>Dibuat : </Text>\n                  <Text strong>{data.created_date}</Text>\n                  <br />\n                  <Text>Lokasi : </Text>\n                  <Text strong>{data.location ?? \"-\"}</Text>\n                </div>\n                <div class=\"col-md-4\"></div>\n              </div>\n\n              <div class=\"ml-2 mt-3\">\n                <Tabs defaultActiveKey=\"1\" onChange={onChangeTab}>\n                  {TabPanel.map((item, index) => (\n                    <TabPane\n                      tab={\n                        <span>\n                          {item.icon}\n                          {item.title}\n                        </span>\n                      }\n                      key={item.key}\n                    >\n                      {item.component}\n                    </TabPane>\n                  ))}\n                </Tabs>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AddEmployeeModalContainer />\n      <RejectedModalContainer />\n      <EditModalTransactionContainer />\n      <EditModalDailiesContainer />\n      <InsertImageModalContainer />\n      <EditModalSummaryContainer />\n    </div>\n  );\n};\n\nexport default DetailServiceTransactionComponent;\n","import React from \"react\";\nimport { Card, Typography, Col, Row, Image } from \"antd\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  CheckCircleOutlined,\n} from \"@ant-design/icons\";\n\nconst { Meta } = Card;\nconst { Text } = Typography;\n\nconst RenderDescription = ({\n  data,\n  handlePressNonactive,\n  handlePressActive,\n}) => {\n  return (\n    <div>\n      <hr />\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Nik</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.nik}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Telepon</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.phone}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Alamat</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong style={{ fontSize: 12 }}>\n            {data.address}\n          </Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Tanggal Mulai</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.created_date}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Status</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <CBadgeText type={data.active ? \"success\" : \"danger\"}>\n            {data.active ? \"Aktif\" : \"Tidak Aktif\"}\n          </CBadgeText>\n        </div>\n      </Row>\n      <div class=\"mt-3\">\n        {data.active ? (\n          <CButtonAntd\n            onClick={handlePressNonactive}\n            type=\"primary\"\n            icon={<DeleteOutlined />}\n            size=\"middle\"\n            danger\n          >\n            Non-Aktifkan Teknisi\n          </CButtonAntd>\n        ) : (\n          <CButtonAntd\n            onClick={handlePressActive}\n            type=\"primary\"\n            icon={<CheckCircleOutlined />}\n            size=\"middle\"\n          >\n            Aktifkan teknisi\n          </CButtonAntd>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst TabPanelEmployeeComponent = (props) => {\n  const {\n    employees,\n    handlePressAddNew,\n    handlePressNonactive,\n    jobId,\n    handlePressActive,\n    isBlockedRole,\n  } = props;\n  return (\n    <div class=\"page-content\">\n      <Row style={{ marginLeft: 16 }}>\n        {!isBlockedRole && <CButtonAntd\n          onClick={handlePressAddNew}\n          type=\"primary\"\n          icon={<PlusOutlined />}\n          size=\"middle\"\n        >\n          Tambah Teknisi\n        </CButtonAntd>}\n      </Row>\n      <Row>\n        {employees.map((item, index) => {\n          return (\n            <Col style={{ margin: 16 }} key={`employee-${index}`}>\n              <Text strong>{`Teknisi-${index + 1}`}</Text>\n              <Card\n                style={{ width: 350, marginTop: 8 }}\n                cover={\n                  <Image\n                    alt=\"example\"\n                    src={\n                      item.photo ??\n                      \"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                    }\n                    width=\"100%\"\n                    height={200}\n                  />\n                }\n              >\n                <Meta\n                  title={item.name}\n                  description={\n                    <RenderDescription\n                      data={item}\n                      handlePressNonactive={() =>\n                        handlePressNonactive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                      handlePressActive={() =>\n                        handlePressActive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                    />\n                  }\n                />\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </div>\n  );\n};\n\nexport default TabPanelEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TabPanelEmployeeComponent from \"../../Component/TabPanel/TabPanelEmployeeComponent\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionActions from \"../../Store/DetailServiceTransactionAction\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\n\nconst TabPanelEmployeeContainer = (props) => {\n  const {\n    userRole,\n    services: { selectedJobService },\n  } = props;\n\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  return <TabPanelEmployeeComponent jobId={selectedJobService.id} isBlockedRole={isBlockedRole} {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n  detailService: state.detailService,\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressAddNew: () => {\n    dispatch(ComponentActions.setGlobalModal(true));\n  },\n  handlePressNonactive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      false\n    ),\n  handlePressActive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      true\n    ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelEmployeeContainer);\n","import React, { Fragment } from \"react\";\nimport { Typography, Row, Empty, Divider, Col, Spin } from \"antd\";\nimport {\n  FileOutlined,\n  EditOutlined,\n  PlusCircleOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst RenderItemSummary = ({ summary, index }) => {\n  return summary.length > 0 ? (\n    summary.map((item, indexText) => (\n      <Typography key={`item-summary${index}-text-${indexText}`}>\n        {item}\n      </Typography>\n    ))\n  ) : (\n    <Typography>Summary belum ada</Typography>\n  );\n};\n\nconst TabPanelSummaryComponent = (props) => {\n  const { summaryArr, isLoaded, handlePressEdit, isBlockedRole, isExternal } =\n    props;\n\n  return (\n    <div class=\"page-content\">\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <Fragment>\n          <Row\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Row\n              style={{\n                alignItems: \"center\",\n              }}\n            >\n              <FileOutlined />\n              <Typography style={{ marginLeft: 5 }}>Laporan Akhir</Typography>\n            </Row>\n            <div>\n              {isExternal === false && summaryArr.length < 0 && (\n                <CButtonAntd\n                  onClick={() => handlePressEdit(\"NEW_SUMMARY\")}\n                  type=\"primary\"\n                  icon={<PlusCircleOutlined />}\n                  size=\"middle\"\n                >\n                  Tambah Summary\n                </CButtonAntd>\n              )}\n            </div>\n          </Row>\n          <hr />\n          <Row gutter={[16, 16]}>\n            {summaryArr.length > 0 ? (\n              summaryArr.map((item, index) => (\n                <Col key={`col-unit-${index}`} span={12}>\n                  <div class=\"card p-2\">\n                    {isBlockedRole && (\n                      <CButtonAntd\n                        onClick={() => handlePressEdit(item.id)}\n                        type=\"primary\"\n                        icon={<EditOutlined />}\n                        size=\"middle\"\n                      >\n                        Ubah Summary\n                      </CButtonAntd>\n                    )}\n                    <Divider\n                      style={{\n                        fontSize: 12,\n                        fontWeight: \"bold\",\n                        textTransform: \"uppercase\",\n                      }}\n                      plain\n                    >\n                      {isExternal ? `Unit ${item.unitName}` : \"Job Summary\"}\n                    </Divider>\n                    {<RenderItemSummary index={index} summary={item.summary} />}\n                  </div>\n                </Col>\n              ))\n            ) : (\n              <div class=\"col-md-12 px-auto\">\n                <Empty />\n              </div>\n            )}\n          </Row>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelSummaryComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change } from \"redux-form\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport TabPanelSummaryComponent from \"../../Component/TabPanel/TabPanelSummaryComponent\";\nimport { setEditSummaryModal } from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelSummaryContainer = (props) => {\n  const { summary, userRole, selectedService } = props;\n  const [summaryArr, setSummaryArr] = React.useState([]);\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  React.useEffect(() => {\n    const summaryMapping = [];\n\n    if (selectedService.is_external) {\n      summary.map((item, index) => {\n        const summaryText = item.summary ?? \"\";\n        const checkBreakLine = summaryText.includes(\"\\n\");\n\n        if (checkBreakLine) {\n          const splitSummary = summaryText.split(\"\\n\");\n          summaryMapping.push({\n            id: item.id,\n            unitName: item.unitName,\n            summary: splitSummary,\n          });\n        } else {\n          summaryMapping.push({\n            id: item.id,\n            unitName: item.unitName,\n            summary: [summaryText],\n          });\n        }\n      });\n\n      setSummaryArr(summaryMapping);\n    } else {\n      const data = {};\n      const summaryText = summary.summary ?? \"\";\n      const checkBreakLine = summaryText.includes(\"\\\\n\");\n\n      if (checkBreakLine) {\n        const splitSummary = summaryText.split(\"\\\\n\");\n        data.id = selectedService.id;\n        data.unitName = \"\";\n        data.summary = splitSummary;\n      } else {\n        data.id = selectedService.id;\n        data.unitName = \"\";\n        data.summary = [summaryText];\n      }\n\n      setSummaryArr([data]);\n    }\n  }, [selectedService.id, selectedService.is_external, summary]);\n\n  return (\n    <TabPanelSummaryComponent\n      summaryArr={summaryArr}\n      isExternal={selectedService.is_external}\n      isBlockedRole={isBlockedRole}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userRole: state.auth.userDetail.roles,\n  selectedService: state.services.selectedJobService,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (unitId) => {\n    if (unitId === \"NEW_SUMMARY\") {\n      dispatch(change(\"editSummaryForm\", `type`, \"NEW\"));\n    } else {\n      dispatch(change(\"editSummaryForm\", `type`, \"EDIT\"));\n      dispatch(change(\"editSummaryForm\", `unitId`, unitId));\n    }\n\n    await dispatch(setEditSummaryModal(true));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelSummaryContainer);\n\nexport default EnhanceContainer;\n","import React, { Fragment } from \"react\";\nimport { Typography, Row, Empty, Card, Col, Image, Divider, Spin } from \"antd\";\nimport { CameraOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\n\nconst { Meta } = Card;\n\nconst RenderImage = ({ medias, unit }) => {\n  return medias.map((item, index) => {\n    return (\n      <Col\n        style={{\n          marginLeft: 10,\n          marginRight: 10,\n        }}\n      >\n        <Card\n          hoverable\n          style={{ width: 240, height: 200 }}\n          cover={<Image width={\"100%\"} height={150} src={item.path} />}\n        >\n          <Meta\n            style={{ marginTop: -10 }}\n            title={`Gambar Penting ${index + 1}`}\n          />\n        </Card>\n      </Col>\n    );\n  });\n};\n\nconst TabPanelImagesComponent = (props) => {\n  const { medias, handlePressAdd, isLoaded, isBlockedRole } = props;\n\n  return (\n    <div class=\"page-content\">\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <Fragment>\n          <Row\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Row\n              style={{\n                alignItems: \"center\",\n              }}\n            >\n              <CameraOutlined />\n              <Typography style={{ marginLeft: 5 }}>Media</Typography>\n            </Row>\n            {isBlockedRole && (\n              <CButtonAntd\n                onClick={handlePressAdd}\n                type=\"primary\"\n                icon={<PlusCircleOutlined />}\n                size=\"middle\"\n              >\n                Tambah Gambar\n              </CButtonAntd>\n            )}\n          </Row>\n          <hr />\n          {medias && medias.length > 0 ? (\n            medias.map((item, index) => (\n              <div>\n                <Divider\n                  style={{\n                    textTransform: \"uppercase\",\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                  }}\n                  plain\n                >{`Unit ${item.unitName}`}</Divider>\n                <Row>\n                  <RenderImage medias={item.image} unit={item.unitName} />\n                </Row>\n              </div>\n            ))\n          ) : (\n            <div>\n              <Empty />\n            </div>\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelImagesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport TabPanelImagesComponent from \"../../Component/TabPanel/TabPanelImagesComponent\";\nimport {\n  resetFormModalImage,\n  setInsertMediaModal,\n} from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelImagesContainer = (props) => {\n  const { userRole } = props;\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  return <TabPanelImagesComponent isBlockedRole={isBlockedRole} {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressAdd: async (values) => {\n    await resetFormModalImage();\n    await dispatch(setInsertMediaModal(true));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelImagesContainer);\n\nexport default EnhanceContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table, Space } from \"antd\";\nimport { EditOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst RenderDailies = ({ dailies, handlePressEdit }) => {\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"karyawan\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"deskripsi\",\n    },\n    {\n      title: \"Mulai\",\n      dataIndex: \"mulai\",\n    },\n    {\n      title: \"Selesai\",\n      dataIndex: \"selesai\",\n    },\n    {\n      title: \"Jam\",\n      dataIndex: \"jam\",\n    },\n  ];\n  columns.push({\n    align: \"center\",\n    title: \"Aksi\",\n    key: \"action\",\n    width: \"10%\",\n    render: renderActionTable,\n  });\n  const data = [];\n  dailies.map((item, index) => {\n    data.push({\n      key: index,\n      id: item.id,\n      karyawan: item.employee_name,\n      title: item.title,\n      deskripsi: item.description,\n      mulai: moment(item.daily_start).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      selesai: moment(item.daily_end).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      jam: item.hours,\n      type: item.type\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelDailiesComponent = (props) => {\n  const { dailies, handlePressEdit, handlePressAdd, isBlockedRole } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Row>\n          <EditOutlined />\n          <Typography style={{ marginLeft: 5 }}>Catatan</Typography>\n        </Row>\n        {isBlockedRole && (\n          <CButtonAntd\n            onClick={handlePressAdd}\n            type=\"primary\"\n            icon={<PlusCircleOutlined />}\n            size=\"middle\"\n          >\n            Tambah Catatan\n          </CButtonAntd>\n        )}\n      </Row>\n      <hr />\n      {dailies && dailies.length > 0 ? (\n        <RenderDailies dailies={dailies} handlePressEdit={handlePressEdit} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change } from \"redux-form\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport TabPanelDailiesComponent from \"../../Component/TabPanel/TabPanelDailiesComponent\";\nimport {\n  mapDailiesToForm,\n  setEditDailiesModal,\n  setSelectedEditDailiesData,\n  setTypeFormDailies,\n} from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelDailiesContainer = (props) => {\n  const {\n    userRole,\n    detailService: { typeFormDailies },\n  } = props;\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  return (\n    <TabPanelDailiesComponent\n      isBlockedRole={isBlockedRole}\n      typeFormDailies={typeFormDailies}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  detailService: state.detailService,\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (values) => {\n    await dispatch(setTypeFormDailies(\"edit\"));\n    await dispatch(setSelectedEditDailiesData(values));\n    store.dispatch(setEditDailiesModal(true));\n    mapDailiesToForm();\n  },\n  handlePressAdd: async () => {\n    dispatch(change(\"editDailiesForm\", `id`, \"\"));\n    dispatch(change(\"editDailiesForm\", `startDate`, \"\"));\n    dispatch(change(\"editDailiesForm\", `endDate`, \"\"));\n    dispatch(change(\"editDailiesForm\", `title`, \"\"));\n    dispatch(change(\"editDailiesForm\", `description`, \"\"));\n    dispatch(change(\"editDailiesForm\", `type`, \"\"));\n    dispatch(change(\"editDailiesForm\", `timeStartEnd`, null));\n    await dispatch(setSelectedEditDailiesData({}));\n    await dispatch(setTypeFormDailies(\"add\"));\n    store.dispatch(setEditDailiesModal(true));\n  },\n  handlePressCancel: () => {\n    store.dispatch(setEditDailiesModal(false));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelDailiesContainer);\n\nexport default EnhanceContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderHistories = ({ histories }) => {\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"user_name\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  histories.map((item, index) => {\n    data.push({\n      key: index,\n      user_name: item.user_name,\n      title: item.title,\n      description: item.description,\n      created_date: moment(item.created_date).format(\"DD-MMM-YYYY\"),\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelHistoriesComponent = (props) => {\n  const { histories } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Riwayat</Typography>\n      </Row>\n      <hr />\n      {histories.length > 0 ? (\n        <RenderHistories histories={histories} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelHistoriesComponent;\n","import React from \"react\";\nimport TabPanelHistoriesComponent from \"../../Component/TabPanel/TabPanelHistoriesComponent\";\n\nconst TabPanelHistoriesContainer = (props) => {\n  return <TabPanelHistoriesComponent {...props} />;\n};\n\nexport default TabPanelHistoriesContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderDailies = ({ rejections }) => {\n  const columns = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n    },\n    {\n      title: \"Alasan Reject\",\n      dataIndex: \"reason\",\n    },\n    {\n      title: \"Tanggal Di-Reject\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  rejections.map((item, index) => {\n    data.push({\n      no: index + 1,\n      nik: item.nik,\n      employee_name: item.employee_name,\n      reason: item.reason,\n      created_date: item.created_date,\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelRejectionsComponent = (props) => {\n  const { rejections } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Alasan Reject</Typography>\n      </Row>\n      <hr />\n      {rejections.length > 0 ? (\n        <RenderDailies rejections={rejections} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelRejectionsComponent;\n","import React from \"react\";\nimport TabPanelRejectionsComponent from \"../../Component/TabPanel/TabPanelRejectionsComponent\";\n\nconst TabPanelRejectionsContainer = (props) => {\n  return <TabPanelRejectionsComponent {...props} />;\n};\n\nexport default TabPanelRejectionsContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Col, Checkbox, Divider, Spin } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Radio } from \"antd\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Themes } from \"../../../../property/colors\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst TabPanelChecklistComponent = (props) => {\n  const {\n    isLoaded,\n    isBlocked,\n    checklistArr,\n    handleChangeRadio,\n    getDefaultValueCheckbox,\n    handleSubmitUpdateChecklist,\n  } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Row style={{ alignItems: \"center\" }}>\n          <EditOutlined />\n          <Typography style={{ marginLeft: 5 }}>Checklist</Typography>\n        </Row>\n        {isBlocked && (\n          <CButtonAntd\n            onClick={handleSubmitUpdateChecklist}\n            type=\"primary\"\n            icon={<EditOutlined />}\n            size=\"middle\"\n          >\n            Simpan\n          </CButtonAntd>\n        )}\n      </Row>\n      <hr />\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <div class=\"row d-flex flex-wrap col md-12\">\n          {checklistArr.length > 0 ? (\n            checklistArr.map((itemUnit, indexUnit) => (\n              <div key={`checklist-unit-${indexUnit}`}>\n                <Divider\n                  style={{\n                    textTransform: \"uppercase\",\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                  }}\n                  plain\n                >{`Unit ${itemUnit.unitName}`}</Divider>\n                <Row gutter={[16, 16]}>\n                  {itemUnit.checklist.map((itemChecklist, indexChecklist) => (\n                    <Col\n                      key={`item-unit-checklist-${indexChecklist}`}\n                      span={12}\n                    >\n                      <div style={{ width: \"100%\" }}>\n                        <div>\n                          <div class=\"mb-2 mt-2 pb-2\">\n                            <Row\n                              gutter={16}\n                              style={{\n                                alignItems: \"center\",\n                                // padding: \"8px\",\n                                borderBottom: \"1px solid #020202\",\n                                marginRight: \"20px\",\n                                marginTop: \"20px\",\n                              }}\n                            >\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={6}\n                              >\n                                <Text\n                                  strong\n                                  style={{ fontSize: 10, textAlign: \"left\" }}\n                                >\n                                  {itemChecklist.category_form_name}\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={5}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  ADJUST\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  CHECK\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPAIR\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={5}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPLACE\n                                </Text>\n                              </Col>\n                            </Row>\n                          </div>\n\n                          {itemChecklist.fields &&\n                            itemChecklist.fields.map(\n                              (itemFields, indexFields) => {\n                                return (\n                                  <Row\n                                    key={`item-fields-${indexFields}`}\n                                    gutter={16}\n                                    style={{\n                                      alignItems: \"center\",\n                                      padding: \"8px\",\n                                      borderBottom: \"1px solid #020202\",\n                                      marginRight: \"30px\",\n                                    }}\n                                  >\n                                    <Col\n                                      style={style}\n                                      className=\"gutter-row\"\n                                      span={7}\n                                    >\n                                      <div>\n                                        <Typography\n                                          style={{\n                                            fontSize: 10,\n                                            color: Themes.secondary,\n                                            textAlign: \"left\",\n                                          }}\n                                        >\n                                          {itemFields.field_name}\n                                        </Typography>\n                                      </div>\n                                    </Col>\n                                    <Col\n                                      style={style}\n                                      className=\"gutter-row\"\n                                      span={4}\n                                    >\n                                      <Radio.Group\n                                        disabled={isBlocked ? false : true}\n                                        onChange={(val) =>\n                                          handleChangeRadio(\n                                            val,\n                                            indexChecklist,\n                                            indexFields,\n                                            indexUnit,\n                                            itemFields\n                                          )\n                                        }\n                                        value={getDefaultValueCheckbox(\n                                          itemFields\n                                        )}\n                                        defaultValue={getDefaultValueCheckbox(\n                                          itemFields\n                                        )}\n                                      >\n                                        <Row\n                                          key={`item-fields-${indexFields}`}\n                                          gutter={16}\n                                          style={{\n                                            alignItems: \"center\",\n                                            padding: \"8px\",\n                                            marginRight: \"30px\",\n                                          }}\n                                        >\n                                          <Col\n                                            style={style}\n                                            className=\"gutter-row\"\n                                            span={6}\n                                          >\n                                            <Radio\n                                              value={`${\n                                                itemFields.unit_field_id\n                                              }-${Object.keys(itemFields)[3]}`}\n                                            ></Radio>\n                                          </Col>\n                                          <Col\n                                            style={style}\n                                            className=\"gutter-row\"\n                                            span={6}\n                                          >\n                                            <Radio\n                                              value={`${\n                                                itemFields.unit_field_id\n                                              }-${Object.keys(itemFields)[2]}`}\n                                            />\n                                          </Col>\n                                          <Col\n                                            style={style}\n                                            className=\"gutter-row\"\n                                            span={6}\n                                          >\n                                            <Radio\n                                              value={`${\n                                                itemFields.unit_field_id\n                                              }-${Object.keys(itemFields)[4]}`}\n                                            />\n                                          </Col>\n                                          <Col\n                                            style={style}\n                                            className=\"gutter-row\"\n                                            span={6}\n                                          >\n                                            <Radio\n                                              value={`${\n                                                itemFields.unit_field_id\n                                              }-${Object.keys(itemFields)[5]}`}\n                                            />\n                                          </Col>\n                                        </Row>\n                                      </Radio.Group>\n                                    </Col>\n                                  </Row>\n                                );\n                              }\n                            )}\n                        </div>\n                        <div class=\"mr-3\" />\n                      </div>\n                    </Col>\n                  ))}\n                </Row>\n              </div>\n            ))\n          ) : (\n            <div class=\"page-content\">\n              <Empty />\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst style = {\n  width: \"200px\",\n  alignContent: \"center\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport default TabPanelChecklistComponent;\n","import React, { useState } from \"react\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport { setGlobalLoading } from \"../../../App/Store/ComponentAction\";\nimport { showToast } from \"../../../Roles/Store/RolesActions\";\nimport TabPanelChecklistComponent from \"../../Component/TabPanel/TabPanelChecklistComponent\";\nimport { setGroupingChecklistData } from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelChecklistContainer = (props) => {\n  const { roles, checklist, isLoaded } = props;\n  const [isBlocked, setIsBlocked] = useState(false);\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  const checkBlockedRole = () => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleDetailService(roleId);\n    if (isBlockedRole) {\n      setIsBlocked(isBlockedRole);\n    } else {\n      setIsBlocked(false);\n    }\n  };\n\n  const handleSubmitUpdateChecklist = async () => {\n    const { dispatch } = store;\n    dispatch(setGlobalLoading(true));\n    const payload = {};\n    let countHitApi = 0;\n    payload.checklist = [];\n    payload.note = \"\";\n\n    // Looping the checklist by unit\n    checklist.map(async (itemParent, index) => {\n      // Looping the fields by checklist unit\n      itemParent.checklist.map((itemChecklist, indexChecklist) => {\n        itemChecklist.fields.map((itemFields, indexFields) => {\n          const item = {};\n          item.unit_field_id = itemFields.unit_field_id;\n          item.category_form_id = itemChecklist.category_form_id;\n          item.is_check = itemFields.is_check;\n          item.is_adjust = itemFields.is_adjust;\n          item.is_repair = itemFields.is_repair;\n          item.is_replace = itemFields.is_replace;\n          payload.checklist.push(item);\n        });\n      });\n\n      try {\n        await Invoke.updateChecklist(payload, itemParent.unitId);\n        if (countHitApi === checklist.length - 1) {\n          showToast(\"Berhasil menyimpan checklist\", \"success\");\n          dispatch(setGlobalLoading(false));\n        } else {\n          countHitApi += 1;\n        }\n      } catch (error) {\n        showToast(\"Gagal menyimpan checklist\", \"error\");\n        dispatch(setGlobalLoading(false));\n      }\n    });\n  };\n\n  const handleChangeRadio = (\n    val,\n    indexChecklist,\n    indexFields,\n    indexUnit,\n    itemFields\n  ) => {\n    const { dispatch } = store;\n    let checklistTemp = checklist;\n    const valueCheck = val.target.value;\n\n    if (valueCheck === `${itemFields.unit_field_id}-is_check`) {\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_check = true;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_adjust = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_replace = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_repair = false;\n    } else if (valueCheck === `${itemFields.unit_field_id}-is_adjust`) {\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_check = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_adjust = true;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_replace = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_repair = false;\n    } else if (valueCheck === `${itemFields.unit_field_id}-is_replace`) {\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_check = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_adjust = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_replace = true;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_repair = false;\n    } else if (valueCheck === `${itemFields.unit_field_id}-is_repair`) {\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_check = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_adjust = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_replace = false;\n      checklistTemp[indexUnit].checklist[indexChecklist].fields[\n        indexFields\n      ].is_repair = true;\n    }\n\n    dispatch(setGroupingChecklistData(checklistTemp));\n  };\n\n  const getDefaultValueCheckbox = (field) => {\n    if (field.is_adjust) {\n      return `${field.unit_field_id}-${Object.keys(field)[3]}`;\n    } else if (field.is_check) {\n      return `${field.unit_field_id}-${Object.keys(field)[2]}`;\n    } else if (field.is_repair) {\n      return `${field.unit_field_id}-${Object.keys(field)[4]}`;\n    } else if (field.is_replace) {\n      return `${field.unit_field_id}-${Object.keys(field)[5]}`;\n    }\n  };\n\n  return (\n    <TabPanelChecklistComponent\n      isLoaded={isLoaded}\n      isBlocked={isBlocked}\n      checklistArr={checklist}\n      handleChangeRadio={handleChangeRadio}\n      getDefaultValueCheckbox={getDefaultValueCheckbox}\n      handleSubmitUpdateChecklist={handleSubmitUpdateChecklist}\n      {...props}\n    />\n  );\n};\n\nexport default TabPanelChecklistContainer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport DetailServiceTransactionComponent from \"../Component/DetailServiceTransactionComponent\";\nimport {\n  FileImageOutlined,\n  UsergroupAddOutlined,\n  CheckCircleOutlined,\n  EditOutlined,\n  FileTextOutlined,\n  CloseSquareOutlined,\n  HistoryOutlined,\n} from \"@ant-design/icons\";\nimport TabPanelEmployeeContainer from \"./TabPanel/TabPanelEmployeeContainer\";\nimport * as DetailServiceActions from \"../Store/DetailServiceTransactionAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport TabPanelSummaryContainer from \"./TabPanel/TabPanelSummaryContainer\";\nimport TabPanelImagesContainer from \"./TabPanel/TabPanelImagesContainer\";\nimport TabPanelDailiesContainer from \"./TabPanel/TabPanelDailiesContainer\";\nimport TabPanelHistoriesContainer from \"./TabPanel/TabPanelHistoriesContainer\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport TabPanelRejectionsContainer from \"./TabPanel/TabPanelRejectionsContainer\";\nimport TabPanelChecklistContainer from \"./TabPanel/TabPanelChecklistContainer\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { isBlockedRoleDetailService, navigate } from \"../../../app/Helpers\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\n\nconst DetailServiceTransactionContainer = (props) => {\n  const {\n    userRole,\n    setChecklist,\n    services: { selectedJobService },\n    detailService: {\n      selectedServiceEmployeeList,\n      groupingSelectedServiceMedia,\n      groupingSelectedServiceSummary,\n      groupingSelectedServiceChecklist,\n      selectedServiceDailies,\n      selectedServiceHistories,\n      selectedServiceRejected,\n      singleSelectedServiceSummary,\n    },\n  } = props;\n\n  const [isLoadedChecklist, setIsLoadedChecklist] = React.useState(false);\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n  const [isCompleteLoadedMedia, setIsCompleteLoadedMedia] =\n    React.useState(false);\n  const [isCompleteLoadedSummary, setIsCompleteLoadedSummary] =\n    React.useState(false);\n\n  const TabPanel = [\n    {\n      key: \"panel-gambar\",\n      title: \"Gambar\",\n      icon: <FileImageOutlined />,\n      component: (\n        <TabPanelImagesContainer\n          medias={groupingSelectedServiceMedia}\n          isLoaded={isCompleteLoadedMedia}\n        />\n      ),\n    },\n    {\n      key: \"panel-summary\",\n      title: \"Summary\",\n      icon: <FileTextOutlined />,\n      component: (\n        <TabPanelSummaryContainer\n          summary={\n            selectedJobService.is_external\n              ? groupingSelectedServiceSummary\n              : singleSelectedServiceSummary\n          }\n          isLoaded={isCompleteLoadedSummary}\n        />\n      ),\n    },\n    {\n      key: \"panel-teknisi\",\n      title: \"Teknisi\",\n      icon: <UsergroupAddOutlined />,\n      component: (\n        <TabPanelEmployeeContainer employees={selectedServiceEmployeeList} />\n      ),\n    },\n    {\n      key: \"panel-rejected\",\n      title: \"Alasan Reject\",\n      icon: <CloseSquareOutlined />,\n      component: (\n        <TabPanelRejectionsContainer rejections={selectedServiceRejected} />\n      ),\n    },\n    {\n      key: \"panel-dailies\",\n      title: \"Catatan Teknisi\",\n      icon: <EditOutlined />,\n      component: <TabPanelDailiesContainer dailies={selectedServiceDailies} />,\n    },\n    {\n      key: \"panel-histories\",\n      title: \"History\",\n      icon: <HistoryOutlined />,\n      component: (\n        <TabPanelHistoriesContainer\n          title=\"History\"\n          histories={selectedServiceHistories}\n        />\n      ),\n    },\n  ];\n\n  if (selectedJobService.is_external) {\n    TabPanel.push({\n      key: \"panel-checklist\",\n      title: \"Checklist\",\n      icon: <CheckCircleOutlined />,\n      component: (\n        <TabPanelChecklistContainer\n          roles={userRole}\n          isLoaded={isLoadedChecklist}\n          checklist={groupingSelectedServiceChecklist}\n          setChecklist={setChecklist}\n        />\n      ),\n    });\n\n    // Move content of checklist to index 0\n    const fromIndex = TabPanel.indexOf(\"panel-checklist\"); // 👉️ 0\n    const toIndex = 0;\n\n    const element = TabPanel.splice(fromIndex, 1)[0];\n    console.log(element); // ['panel-checklist']\n\n    TabPanel.splice(toIndex, 0, element);\n  }\n\n  const onChangeTab = (activeTab) => {\n    switch (activeTab.toLowerCase()) {\n      case \"panel-teknisi\":\n        DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n        break;\n\n      case \"panel-summary\":\n        groupingUnitSummary();\n        break;\n\n      case \"panel-gambar\":\n        groupingUnitMedia();\n        break;\n\n      case \"panel-dailies\":\n        DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n        break;\n\n      case \"panel-histories\":\n        DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n        break;\n\n      case \"panel-checklist\":\n        groupingUnitChecklist();\n        break;\n\n      case \"panel-rejected\":\n        DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n        break;\n\n      default:\n        console.log(\"no panel selected...\");\n        break;\n    }\n  };\n\n  const callInitialize = async () => {\n    await EmployeesActions.loadEmployeeListData(1, 99999);\n    await DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n    await DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n    await DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n    await DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n    await groupingUnitMedia();\n    await groupingUnitSummary();\n    await groupingUnitChecklist();\n  };\n\n  const groupingUnitMedia = async () => {\n    setIsCompleteLoadedMedia(false);\n    await DetailServiceActions.getUnitMedia((isCompleted) => {\n      setIsCompleteLoadedMedia(isCompleted);\n    });\n  };\n\n  const groupingUnitSummary = async () => {\n    setIsCompleteLoadedSummary(false);\n    await DetailServiceActions.getUnitSummary((isCompleted) => {\n      setIsCompleteLoadedSummary(isCompleted);\n    });\n  };\n\n  const groupingUnitChecklist = async () => {\n    const groupingChecklist = [];\n\n    if (selectedJobService.units) {\n      await selectedJobService.units.map(async (item, index) => {\n        Invoke.getChecklistData(item.id)\n          .then((dataChecklist) => {\n            groupingChecklist.push({\n              unitName: item.unit_name,\n              unitId: item.id,\n              checklist: dataChecklist.data.callback,\n            });\n            if (index + 1 === selectedJobService.units.length) {\n              setIsLoadedChecklist(true);\n            }\n          })\n          .catch(() => setIsLoadedChecklist(true));\n      });\n\n      setTimeout(() => {\n        setChecklist(groupingChecklist);\n      }, 1000);\n    }\n  };\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    callInitialize();\n    checkBlockedRole();\n  }, []);\n\n  const handlePressGeneratePdf = () => {\n    // exportDetailServicePdfRevision(printedData);\n    DetailServiceActions.downloadTransactionPdf();\n  };\n\n  const handleBackToListService = () => {\n    store.dispatch(DetailServiceActions.resetDetailService());\n    navigate(\"list_service\");\n  };\n\n  const handleSetOnProgress = () => {\n    Invoke.setJobToProgress(selectedJobService.id)\n      .then(() => {\n        showToast(\"Berhasil memindahkan job service ke On Progress\", \"success\");\n        setTimeout(() => {\n          navigate(\"list_service\");\n        }, 1500);\n      })\n      .catch(() => {\n        showToast(\"Gagal memindahkan job service ke On Progress\", \"error\");\n      });\n  };\n\n  return (\n    <DetailServiceTransactionComponent\n      data={selectedJobService}\n      isBlockedRole={isBlockedRole}\n      TabPanel={TabPanel}\n      onChangeTab={onChangeTab}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      goBack={handleBackToListService}\n      medias={groupingSelectedServiceMedia}\n      checklist={groupingSelectedServiceChecklist}\n      employees={selectedServiceEmployeeList}\n      dailies={selectedServiceDailies}\n      summary={groupingSelectedServiceSummary}\n      handleSetOnProgress={handleSetOnProgress}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  units: state.units,\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressDelete: (jobId) => {\n    ListServiceActions.deleteJobServiceRequested(jobId);\n  },\n  handlePressActions: (jobId, type) => {\n    ListServiceActions.handlePressActionsRequested(jobId, type);\n  },\n  handlePressEdit: async () => {\n    await dispatch(DetailServiceActions.setEditTransactionModal(true));\n    await DetailServiceActions.mapDetailTransactionToForm();\n    dispatch(DetailServiceActions.setEditTransactionModal(true));\n  },\n  setMediaList: (list) => {\n    dispatch(DetailServiceActions.setGroupingSelectedServicesMediaData(list));\n  },\n  setSummaryList: (list) => {\n    dispatch(DetailServiceActions.setGroupingSummaryData(list));\n  },\n  setChecklist: (list) => {\n    dispatch(DetailServiceActions.setGroupingChecklistData(list));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DetailServiceTransactionContainer);\n\nexport default reduxForm({\n  form: \"detailJobServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Row } from \"antd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const {\n    data,\n    defaultValuesMenu,\n    onChangeRoleMenu,\n    // options,\n    // plainOptions,\n    // optionsWithDisabled,\n  } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"Role ID\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Role\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst RolesEditModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RolesEditModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport RolesEditModalComponent from \"../Component/RolesEditModalComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { formStatus, selectedRoleMenu },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n  const [menuSelected, setMenuSelected] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values, menuSelected);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  const onChangeRoleMenu = (menus) => {\n    setMenuSelected(menus);\n  };\n\n  return (\n    <RolesEditModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumMenu={SelectMenu}\n      menuChecked={selectedRoleMenu}\n      onChangeRoleMenu={onChangeRoleMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) =>\n    RolesActions.saveRoleRequested(type, values, menuSelected),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editRolesForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport RolesEditModalContainer from \"../Container/RolesEditModalContainer\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nconst RolesComponent = (props) => {\n  const { headers, listRoles, renderActionTable, handlePressAddNew } = props;\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Roles</h6>\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Roles\n                  </CButtonAntd>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <RolesEditModalContainer />\n    </div>\n  );\n};\n\nexport default RolesComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport RolesComponent from \"../Component/RolesComponent\";\nimport * as RolesActions from \"../Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RolesContainer = (props) => {\n  const {\n    getListRoles,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    roles: { listRoles },\n  } = props;\n\n  if (listRoles.length > 0) {\n    listRoles.map((item, index) => {\n      listRoles[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListRoles();\n  }, []);\n\n  return (\n    <RolesComponent\n      headers={headers}\n      listRoles={listRoles}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListRoles: () => RolesActions.getListRolesRequested(),\n  handlePressAddNew: async () => {\n    await dispatch(RolesActions.setSelectedRoleDetail({}));\n    await dispatch(RolesActions.setSelectedRoleId(\"\"));\n    dispatch(RolesActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    RolesActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(RolesActions.setFormStatus(\"edit\"));\n    await dispatch(RolesActions.setSelectedRoleId(record.id));\n    await dispatch(RolesActions.setSelectedRoleDetail(record));\n    await RolesActions.getMenuByRolesId(record.id);\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await RolesActions.mapDetailRoleToForm();\n  },\n  handlePressDelete: async (roleId) => {\n    await dispatch(RolesActions.setSelectedRoleId(roleId));\n    RolesActions.deleteRoleRequested(roleId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesContainer);\n\nexport default reduxForm({\n  form: \"rolesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst EmployeeListComponent = (props) => {\n  const {\n    headers,\n    listEmployees,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumRoles,\n    enumDivision,\n    employeeFormValues,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Karyawan</h6>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Karyawan\n                    </CButtonAntd>\n                  </div>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2\">\n                  {/* This Filter */}\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumRoles ?? []}\n                      name=\"role\"\n                      label=\"Filter Role\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Filter Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumDivision ?? []}\n                      name=\"division\"\n                      label=\"Filter Divisi\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployees}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeListComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as EmployeeActions from \"../Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ToolsActions from \"../../Tools/Store/ToolsActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport EmployeesListComponent from \"../Component/EmployeesListComponent\";\nimport {\n  enumSelectGenerator,\n  getIndex,\n  getRolesEnum,\n  navigate,\n} from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getDivisionListDataRequested } from \"../../Division/Store/DivisionActions\";\n\nconst EmployeesListContainer = (props) => {\n  const {\n    getListEmployees,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressEmployeeTools,\n    employees: { listEmployees, paging },\n    roles: { listRoles },\n    branch: { listBranch },\n    division: { listDivision },\n    employeesFormValues,\n    getListTools,\n  } = props;\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployees.length > 0) {\n    listEmployees.map((item, index) => {\n      listEmployees[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, name: item.title };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"NIK\",\n      dataIndex: \"nik\",\n      key: \"nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.nik - b.nik,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name - b.name,\n    },\n    {\n      title: \"Nomor Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => handlePressEdit(record)}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressEmployeeTools(record)}\n        type=\"primary\"\n        icon={<SettingOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployees(1, 10);\n    getDivisionListDataRequested(1, 100);\n    getListTools(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage ?? 1;\n    paging.limit = pageSize ?? 10;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeActions.setPagingEmployees(paging));\n    getListEmployees(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    EmployeeActions.handleSearch(keyword, employeesFormValues);\n  };\n\n  const SelectRoles = listRoles.length > 0 ? getRolesEnum(listRoles) : [];\n  const SelectBranch =\n    listBranch.length > 0 ? enumSelectGenerator(listBranch, \"branch\") : [];\n  const SelectDivision =\n    listDivision.length > 0\n      ? enumSelectGenerator(listDivision, \"division\")\n      : [];\n\n  return (\n    <EmployeesListComponent\n      headers={headers}\n      listEmployees={listEmployees}\n      renderActionTable={renderActionTable}\n      paging={paging}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      enumRoles={SelectRoles}\n      enumDivision={SelectDivision}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  roles: state.roles,\n  branch: state.branch,\n  division: state.division,\n  employeesFormValues: getFormValues(\"employeesForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployees: (page, limit, keyword) =>\n    EmployeeActions.loadEmployeeListData(page, limit, keyword),\n  getListTools: (page, limit) => {\n    ToolsActions.getToolsListDataRequested(page, limit);\n  },\n  handlePressEdit: async (employee) => {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    dispatch(EmployeeActions.setFormStatus(\"edit\"));\n    await EmployeesActions.getRolesByEmployeeId(employee.id);\n    await MasterDataActions.loadCityListData(employee.province_id);\n    await dispatch(EmployeeActions.setSelectedEmployeeId(employee.id));\n    await EmployeesActions.getEmployeeDataByIdRequested(employee.id);\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n      dispatch(ComponentActions.setGlobalLoading(false));\n    }, 500);\n  },\n  handlePressAddNew: async () => {\n    dispatch(EmployeesActions.setFormStatus(\"add\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeId(\"\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeData({}));\n    EmployeesActions.resetForm();\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n    }, 500);\n  },\n  handlePressDelete: async (employeeId) => {\n    await dispatch(EmployeesActions.setSelectedEmployeeId(employeeId));\n    EmployeesActions.deleteEmployeeRequested(employeeId);\n  },\n  handlePressEmployeeTools: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(EmployeeActions.setSelectedEmployeeId(record.id));\n    await dispatch(EmployeeActions.setSelectedEmployeeData(record));\n    setTimeout(() => {\n      navigate(\"employee-tools\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeesListContainer);\n\nexport default reduxForm({\n  form: \"employeesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  LoadingOutlined,\n  PlusOutlined,\n  ArrowLeftOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport { Checkbox, Col, message, Row, Typography, Upload } from \"antd\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst SelectRole = (props) => {\n  const { data, defaultValues, onChangeRoleEmployee } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        onChange={onChangeRoleEmployee}\n        defaultValue={defaultValues}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst EmployeeEditComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    enumBranch,\n    enumRole,\n    enumProvince,\n    enumCity,\n    selectedRoleEmployee,\n    onChangeRoleEmployee,\n    handleUploadPhoto,\n    defaultImage,\n    onChangeProvince,\n    onBackAction,\n    formStatus,\n  } = props;\n\n  const [loading, setLoading] = React.useState(false);\n  const [imageUrl, setImageUrl] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (defaultImage) {\n      setImageUrl(defaultImage);\n    }\n  }, [defaultImage]);\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error(\"Image must smaller than 2MB!\");\n    }\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h1 class=\"card-title\">Profil Karyawan</h1>\n                <p class=\"card-description\">\n                  Anda dapat mengelola role ataupun mengubah data karyawan pada\n                  halaman ini.\n                </p>\n                <Form>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name=\"nik\"\n                        label=\"NIK\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <CSelect\n                        data={enumProvince}\n                        name=\"province\"\n                        label=\"Nama Provinsi\"\n                        onChange={(val) => onChangeProvince(val)}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder={formStatus === 'edit' ? \"* Isi jika ingin merubah kata sandi\" : \"* Masukan kata sandi anda\"}\n                        component={CInput}\n                        type=\"password\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <CSelect\n                        name=\"city\"\n                        data={enumCity}\n                        label=\"Kota/Kabupaten\"\n                        disabled={enumCity.length <= 0}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name={\"name\"}\n                        label=\"Nama Karyawan\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <Typography style={{ textAlign: \"left\" }}>\n                        Foto Profil\n                      </Typography>\n                      <div\n                        class=\"card-body\"\n                        style={{\n                          marginLeft: -22,\n                          marginTop: -20,\n                        }}\n                      >\n                        <Upload\n                          name=\"avatar\"\n                          listType=\"picture-card\"\n                          className=\"avatar-uploader overflow-hidden\"\n                          showUploadList={false}\n                          beforeUpload={beforeUpload}\n                          onChange={handleChange}\n                        >\n                          {imageUrl || defaultImage ? (\n                            <>\n                              <img\n                                src={imageUrl}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                  height: \"100%\",\n                                  resizeMode: \"stretch\",\n                                  borderRadius: 5,\n                                }}\n                              />\n                              <div\n                                class=\"row\"\n                                style={{\n                                  backgroundColor: \"#F3F3F3\",\n                                  position: \"absolute\",\n                                  width: 80,\n                                  heigh: 30,\n                                  borderRadius: 50,\n                                  alignItems: \"center\",\n                                  justifyContent: \"center\",\n                                  opacity: 0.7,\n                                }}\n                              >\n                                <Typography style={{ fontSize: 10 }}>\n                                  Ubah\n                                </Typography>\n                                <EditOutlined\n                                  style={{\n                                    color: \"#020202\",\n                                    fontSize: 10,\n                                    marginLeft: 5,\n                                  }}\n                                />\n                              </div>\n                            </>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name={`phone`}\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n                      <Field\n                        name=\"address\"\n                        label=\"Alamat\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                      />\n                      <br />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <hr />\n                      {formStatus === \"edit\" && (\n                        <div class=\"card\">\n                          <div class=\"card-body\">\n                            <h6 class=\"card-title text-center\">Pilih Role</h6>\n                            <SelectRole\n                              data={enumRole}\n                              defaultValues={selectedRoleEmployee}\n                              onChangeRoleEmployee={onChangeRoleEmployee}\n                            />\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div class=\"row ml-2\">\n                    <CButtonAntd\n                      key=\"submit\"\n                      type=\"primary\"\n                      loading={false}\n                      onClick={onBackAction}\n                      danger\n                      icon={<ArrowLeftOutlined />}\n                    >\n                      Kembali\n                    </CButtonAntd>\n                    <div class=\"ml-3\" />\n                    <CButtonAntd\n                      key=\"submit\"\n                      type=\"primary\"\n                      loading={false}\n                      onClick={handleSubmit(submitForm)}\n                    >\n                      Simpan\n                    </CButtonAntd>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeEditComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport EmployeeEditComponent from \"../Component/EmployeeEditComponent\";\nimport { validateFormEmployee } from \"../../../app/validateForm\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getCitiesEnum, navigate } from \"../../../app/Helpers\";\nimport Invoke from \"../../../app/axios/Invoke\";\n\nconst EmployeeEditContainer = (props) => {\n  const {\n    valid,\n    getListRoles,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { listRoles },\n    branch: { listBranch, paging, keyword },\n    employees: { formStatus, selectedEmployeeData, selectedRoleEmployee },\n    masters: { listProvince, listCity },\n    handleClearSelectedEmployeeRole,\n  } = props;\n  const [listCityState, setListCityState] = React.useState([]);\n  const [roleSelected, setRoleSelected] = React.useState([]);\n  const [defaultImage, setDefaultImage] = React.useState(\"\");\n\n  const { page, limit } = paging;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      EmployeesActions.saveEmployeeRequested(formStatus, values, roleSelected);\n    } else {\n    }\n  };\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editEmployeeForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  const SelectEmployeeRole = [];\n  listRoles.map((item, index) => {\n    SelectEmployeeRole.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListRoles();\n\n    let subItem = [];\n    listCity.map((item, index) => {\n      subItem.push({\n        id: `city-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setListCityState(subItem);\n    // Mapping detail data employee when edit\n    if (formStatus === \"edit\") {\n      MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n      EmployeesActions.mapDetailEmployeeToForm();\n      // convert image url to base64\n      setDefaultImage(selectedEmployeeData.photo);\n      // set selected roles to redux-form\n      store.dispatch(\n        change(\"editEmployeeForm\", \"selectedRoles\", selectedRoleEmployee)\n      );\n    }\n    return () => {\n      handleClearSelectedEmployeeRole();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    setListCityState([]);\n    if (formStatus === \"edit\" && selectedEmployeeData.province_id) {\n      const provinceId =\n        selectedEmployeeData.province_id +\n        \"|\" +\n        selectedEmployeeData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedEmployeeData.province_id]);\n\n  const onChangeRoleEmployee = (roles) => {\n    setRoleSelected(roles);\n    store.dispatch(change(\"editEmployeeForm\", \"selectedRoles\", roles));\n  };\n\n  const onChangeProvince = async (provinceId) => {\n    setListCityState([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setListCityState(provinceMapping);\n      } else {\n        store.dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n        setListCityState([]);\n      }\n    } catch (error) {\n      setListCityState([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onBackAction = async () => {\n    await handleClearSelectedEmployeeRole();\n    setTimeout(() => {\n      navigate(\"employees\");\n    }, 500);\n  };\n\n  return (\n    <EmployeeEditComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumBranch={SelectBranch}\n      enumRole={SelectEmployeeRole}\n      enumProvince={SelectProvince}\n      enumCity={listCityState}\n      detailEmployee={selectedEmployeeData}\n      handleUploadPhoto={handleUploadPhoto}\n      formStatus={formStatus}\n      selectedRoleEmployee={selectedRoleEmployee}\n      onChangeRoleEmployee={onChangeRoleEmployee}\n      defaultImage={defaultImage}\n      onChangeProvince={onChangeProvince}\n      onBackAction={onBackAction}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  employees: state.employees,\n  branch: state.branch,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListRoles: () => RolesActions.getListRolesRequested(),\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  getDetailEmployee: async (employeeId) =>\n    await EmployeesActions.getEmployeeDataByIdRequested(employeeId),\n  setAutoPopulateEmployee: () => EmployeesActions.setAutoPopulateEmployee(),\n  handleClearSelectedEmployeeRole: () => {\n    dispatch(EmployeesActions.setSelectedRoleEmployee([]));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeEditContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeForm\",\n  validate: validateFormEmployee,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"ID Cabang\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Cabang\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst BranchModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default BranchModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport BranchModalComponent from \"../Component/BranchModalComponent\";\n\nconst BranchModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values) =>\n    BranchActions.saveBranchRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchModalContainer);\n\nexport default reduxForm({\n  form: \"editBranchForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport BranchModalContainer from \"../Container/BranchModalContainer\";\n\nconst { Search } = Input;\n\nconst BranchComponent = (props) => {\n  const {\n    headers,\n    listRoles,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Cabang</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Branch\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <BranchModalContainer />\n    </div>\n  );\n};\n\nexport default BranchComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport BranchComponent from \"../Component/BranchComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListBranch,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    branch: { listBranch, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listBranch.length > 0) {\n    listBranch.map((item, index) => {\n      listBranch[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Cabang\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListBranch(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(BranchActions.setPagingBranch(paging));\n    getListBranch(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListBranch(page, limit, val);\n  };\n\n  return (\n    <BranchComponent\n      headers={headers}\n      listRoles={listBranch}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListBranch: (page, limit, keyword) =>\n    BranchActions.getBranchListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(BranchActions.setSelectedBranchData({}));\n    await dispatch(BranchActions.setSelectedBranchId(\"\"));\n    dispatch(BranchActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    BranchActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(BranchActions.setFormStatus(\"edit\"));\n    await dispatch(BranchActions.setSelectedBranchId(record.id));\n    await dispatch(BranchActions.setSelectedBranchData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await BranchActions.mapDetailBranchToForm();\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(BranchActions.setSelectedBranchId(branchId));\n    BranchActions.deleteBranchRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field name=\"name\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst JobFormsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default JobFormsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport JobFormsModalComponent from \"../Component/JobFormsModalComponent\";\n\nconst JobFormsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    jobForms: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <JobFormsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  jobForms: state.jobForms,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    JobFormsActions.saveJobFormsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsModalContainer);\n\nexport default reduxForm({\n  form: \"editJobForms\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport JobFormsModalContainer from \"../Container/JobFormsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst JobFormsComponent = (props) => {\n  const {\n    headers,\n    listJobForms,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Job Forms</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Job Forms\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listJobForms}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <JobFormsModalContainer />\n    </div>\n  );\n};\n\nexport default JobFormsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport JobFormsComponent from \"../Component/JobFormsComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst JobFormsContainer = (props) => {\n  const {\n    getListJobForms,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    jobForms: { listJobForms, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listJobForms.length > 0) {\n    listJobForms.map((item, index) => {\n      listJobForms[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"40%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListJobForms(page, limit);\n  }, []);\n\n  const onSearch = (val) => {\n    getListJobForms(page, limit, val);\n  };\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(JobFormsActions.setPagingJobForm(paging));\n    getListJobForms(nextPage, pageSize);\n  };\n\n  return (\n    <JobFormsComponent\n      headers={headers}\n      listJobForms={listJobForms}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onSearch={onSearch}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  jobForms: state.jobForms,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListJobForms: (page, limit, val) =>\n    JobFormsActions.getJobFormsListDataRequested(page, limit, val),\n  handlePressAddNew: async () => {\n    await dispatch(JobFormsActions.setSelectedJobFormsData({}));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(\"\"));\n    dispatch(JobFormsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    JobFormsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(JobFormsActions.setFormStatus(\"edit\"));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(record.id));\n    await dispatch(JobFormsActions.setSelectedJobFormsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await JobFormsActions.mapDetailJobFormsToForm();\n  },\n  handlePressDelete: async (jobFormsId) => {\n    await dispatch(JobFormsActions.setSelectedJobFormsId(jobFormsId));\n    JobFormsActions.deleteJobFormsRequested(jobFormsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect data={enumInstanceType} name=\"instanceType\" label=\"Tipe\" />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"riceTrademark\"\n            label=\"Merek Dagang Beras\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerAddress\"\n            label=\"Alamat\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"phone\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingCapacity\"\n            label=\"Kapasitas Penggilingan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingWorkCapacityPerDay\"\n            label=\"Kapasitas Kerja Penggilingan (Per Hari)\"\n            placeholder=\"-\"\n            component={CInput}\n            labelSize={12}\n            type=\"text\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentUnitComponent = () => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"serialNumber\"\n            label=\"Nomor Seri\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"engineNumber\"\n            label=\"Nomor Mesin\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"gearboxNumber\"\n            label=\"Nomor Gearbox\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"production_unit_year\"\n            label=\"Tahun Produksi Unit\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Jam Kerja</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>\n          (per Hari & Hour Meter )\n        </Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <Field\n            name=\"perHour\"\n            label=\"Per Hour\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"hourMeter\"\n            label=\"Hour Meter\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\"></div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Tanggal Transaksi Produk</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>(Bulan & Tahun)</Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Pembelian\" />\n        </div>\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Terima Bantuan\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentUnitComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentSparePartComponent = ({ onChangeServiced, isServiced }) => {\n  const [listServices] = React.useState([\n    {\n      id: `serviced-1`,\n      value: \"true\",\n      label: \"Pernah\",\n    },\n    {\n      id: `serviced-2`,\n      value: \"false\",\n      label: \"Tidak\",\n    },\n  ]);\n\n  const RenderServiceHistory = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_buy_place`}\n                    label=\"Tempat Pembelian Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartSelling = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_qty`}\n                    label=\"Qty\"\n                    placeholder=\"Jumlah Penjualan Spare Part\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartNeeded = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_name`}\n                    label=\"Nama Produk Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_code`}\n                    label=\"Kode Produk\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.part_number`}\n                    label=\"Part Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <CSelect\n            onChange={(val) => onChangeServiced(val)}\n            data={listServices}\n            label=\"Pernah Diservis\"\n            name=\"location\"\n          />\n        </div>\n      </div>\n      {isServiced && (\n        <div class=\"row m-2 text-left\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_place\"\n              label=\"Perbaikan Dilakukan Di\"\n              placeholder=\"cth: Blitar\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_type\"\n              label=\"Jenis Perbaikan\"\n              placeholder=\"cth: Service Sikring\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">Riwayat Penggantian Spare Part</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan service, maksimal 5 unit.\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_changing_histories\"\n          component={RenderServiceHistory}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Penjualan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>\n            (pada saat kunjuangan)\n          </Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan penjualan, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_selling_histories\"\n          component={(_props) => <RenderSparePartSelling {..._props} />}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Daftar Kebutuhan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>(per Quartal)</Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi apabila terdapat kebutuhan spare part, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_needs\"\n          component={(_props) => <RenderSparePartNeeded {..._props} />}\n        />\n        <hr />\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-12\">\n          <Field\n            name=\"note\"\n            label=\"Keterangan\"\n            placeholder=\"cth: Pernah dilakukan service namun tidak rampung\"\n            component={CInput}\n            typeComponent=\"textarea\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentSparePartComponent;\n","import React from \"react\";\n\nimport { Steps, Button, message } from \"antd\";\nimport { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\n\nconst { Text } = Typography;\n\nconst StepsContent = styled.div`\n  min-height: 200px;\n  margin-top: 16px;\n  padding-top: 22px;\n  text-align: center;\n  background-color: #fafafa;\n  border: 1px dashed #e9e9e9;\n  border-radius: 2px;\n`;\n\nconst StepsAction = styled.div`\n  margin-top: 24px;\n`;\n\nconst { Step } = Steps;\n\nconst FormWizardIdentificationComponent = (props) => {\n  const { data, steps, saveFormChanges } = props;\n  const [current, setCurrent] = React.useState(0);\n\n  const onClickNext = () => {\n    setCurrent(current + 1);\n    saveFormChanges(false);\n  };\n\n  const onClickPrevious = () => {\n    setCurrent(current - 1);\n  };\n\n  const onFinished = () => {\n    message.success(\"Processing complete!\");\n    saveFormChanges(true);\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">Form Identification</h4>\n            <h6 class=\"text-small\">\n              {data.milling ? \"(Penggilingan)\" : \"(Non Penggilingan)\"}\n            </h6>\n            <hr />\n            <div class=\"d-flex justify-content-between align-items-baseline\">\n              <div class=\"col-md-6 mb-3\">\n                <Text>Nama Customer : </Text>\n                <Text strong>{data.customer_name ?? \"-\"}</Text>\n                <br />\n                <Text>Tipe : </Text>\n                <Text strong>{data.type ?? \"-\"}</Text>\n                <br />\n                <Text>Cabang : </Text>\n                <Text strong>{data.branch_name ?? \"-\"}</Text>\n                <br />\n                <Text>Status : </Text>\n                <CBadgeText type=\"info\">{data.status ?? \"-\"}</CBadgeText>\n                <br />\n                <Text>Dibuat : </Text>\n                <Text strong>{data.created_date ?? \"-\"}</Text>\n              </div>\n            </div>\n            <Steps current={current}>\n              {steps.map((item) => (\n                <Step\n                  description={item.description}\n                  key={item.title}\n                  title={item.title}\n                />\n              ))}\n            </Steps>\n            <StepsContent>{steps[current].content}</StepsContent>\n            <StepsAction>\n              {current < steps.length - 1 && (\n                <Button type=\"primary\" onClick={onClickNext}>\n                  Next\n                </Button>\n              )}\n              {current === steps.length - 1 && (\n                <Button type=\"primary\" onClick={onFinished}>\n                  Done\n                </Button>\n              )}\n              {current > 0 && (\n                <Button style={{ margin: \"0 8px\" }} onClick={onClickPrevious}>\n                  Previous\n                </Button>\n              )}\n            </StepsAction>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormWizardIdentificationComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst ContentMachineConfigurationComponent = ({\n  machineConf,\n  onAddMachineConf,\n}) => {\n  const RenderBodyHusker = ({ fields, item }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 2) {\n                return;\n              }\n              fields.push({});\n              setTimeout(() => {\n                onAddMachineConf(item);\n              }, 500);\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`${item.type} ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.brand`}\n                    label=\"Merek\"\n                    placeholder=\"cth: merek_1, merek_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.type`}\n                    label=\"Tipe\"\n                    placeholder=\"cth: tipe_1, tipe_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-2\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"cth: 12, 5, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.buy_and_use_year`}\n                    label=\"Tahun Pembelian & Pemakaian\"\n                    placeholder=\"cth: 2015, 2017, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.serial_number`}\n                    label=\"Nomor Seri\"\n                    placeholder=\"cth: 77888, 66555, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return machineConf.map((item, index) => {\n    return (\n      <div key={`machine-conf-${index}`} className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">{item.type}</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Maksimal hanya input 2 field.\n          </p>\n        </div>\n        <FieldArray\n          name={`engine_confs.${item.name}.list`}\n          component={(_props) => <RenderBodyHusker item={item} {..._props} />}\n        />\n        <hr />\n      </div>\n    );\n  });\n};\n\nexport default ContentMachineConfigurationComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneRegularComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumInstanceType}\n            name=\"instanceType\"\n            label=\"Tipe Instansi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"productName\"\n            label=\"Nama Produk\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instancePhoneNumber\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-4\">\n        <h5 className=\"card-title\">Alamat Customer</h5>\n      </div>\n      <div class=\"row ml-2 mr-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"kelurahan\"\n            label=\"Kelurahan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"kecamatan\"\n            label=\"Kecamatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n          <Field\n            name=\"postalCode\"\n            label=\"Kode Pos\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneRegularComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, getFormValues, reduxForm } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport {\n  getCitiesEnum,\n  getMachineConf,\n  getProvinceEnum,\n  SelectInstanceType,\n  SelectInstanceTypeRegular,\n  SelectStatusMilling,\n} from \"../../../../app/Helpers\";\nimport ContentStepOneComponent from \"../../Component/Wizard/ContentStepOneComponent\";\nimport ContentUnitComponent from \"../../Component/Wizard/ContentUnitComponent\";\nimport ContentSparePartComponent from \"../../Component/Wizard/ContentSparePartComponent\";\nimport FormWizardIdentificationComponent from \"../../Component/Wizard/FormWizardIdentificationComponent\";\nimport ContentMachineConfigurationComponent from \"../../Component/Wizard/ContentMachineConfigurationComponent\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport ContentStepOneRegularComponent from \"../../Component/Wizard/ContentStepOneRegularComponent\";\nimport * as IdentificationActions from \"../../Store/IdentificationActions\";\n\nconst FormWizardIdentificationContainer = (props) => {\n  const [cities, setCities] = React.useState([]);\n  const [serviced, setServiced] = React.useState(false);\n  const {\n    identification: { selectedIdentificationData, formStatus },\n    masters: { listProvince },\n    machineConfiguration: { listMachine },\n    identificationFormValues,\n  } = props;\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"wizardIdentificationForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onChangeServiced = (val) => {\n    const isServiced = val.split(\"|\");\n    if (isServiced[0] === \"true\") {\n      setServiced(true);\n    } else {\n      setServiced(false);\n    }\n  };\n\n  const onAddMachineConf = (item) => {\n    store.dispatch(\n      change(\n        \"wizardIdentificationForm\",\n        `engine_confs.${item.name}.id`,\n        item.id\n      )\n    );\n  };\n\n  const saveFormChanges = (isLastStep) => {\n    IdentificationActions.saveIdentificationRequested(\n      formStatus,\n      identificationFormValues,\n      isLastStep\n    );\n  };\n\n  const steps = [];\n\n  if (selectedIdentificationData.milling) {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceType}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Konfigurasi Mesin\",\n      content: (\n        <ContentMachineConfigurationComponent\n          machineConf={getMachineConf(listMachine)}\n          onAddMachineConf={onAddMachineConf}\n        />\n      ),\n    });\n  } else {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneRegularComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceTypeRegular}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Unit\",\n      content: <ContentUnitComponent />,\n    });\n  }\n\n  steps.push({\n    title: \"Spare Part\",\n    content: (\n      <ContentSparePartComponent\n        onChangeServiced={onChangeServiced}\n        isServiced={serviced}\n      />\n    ),\n  });\n\n  return (\n    <FormWizardIdentificationComponent\n      data={selectedIdentificationData}\n      steps={steps}\n      saveFormChanges={saveFormChanges}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  identification: state.identification,\n  masters: state.masters,\n  machineConfiguration: state.machineConfiguration,\n  identificationFormValues: getFormValues(\"wizardIdentificationForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormWizardIdentificationContainer);\n\nexport default reduxForm({\n  form: \"wizardIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  formStatus,\n  listCustomer,\n  listType,\n  listBranch,\n  listLocation,\n  listMilling\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          {formStatus === \"edit\" && (\n            <Field\n              name=\"id\"\n              label=\"ID Cabang\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          )}\n        </div>\n        <div class=\"col-md-12\">\n          <CSelect\n            // onChange={(val) => handleAutoPopulateUnitModel(val, indexUnit)}\n            showSearch\n            data={listCustomer}\n            label=\"Nama Customer\"\n            name=\"customer\"\n          />\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <CSelect data={listBranch} label=\"Cabang\" name=\"branch\" />\n            </div>\n            <div class=\"col-md-6\">\n              <CSelect data={listLocation} label=\"Lokasi\" name=\"location\" />\n            </div>\n          </div>\n          <CSelect data={listType} label=\"Tipe Identifikasi\" name=\"type\" />\n          <CSelect data={listMilling} label=\"Milling\" name=\"milling\" />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst IdentificationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n    enumCustomers,\n    enumType,\n    enumBranch,\n    enumLocation,\n    enumMilling,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n          listCustomer={enumCustomers}\n          listType={enumType}\n          listBranch={enumBranch}\n          listLocation={enumLocation}\n          listMilling={enumMilling}\n        />\n      }\n    />\n  );\n};\n\nexport default IdentificationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as CustomersActions from \"../../Customers/Store/CustomersActions\";\nimport IdentificationModalComponent from \"../Component/IdentificationModalComponent\";\nimport {\n  SelectLocation,\n  SelectMilling,\n  SelectType,\n} from \"../../../app/Helpers\";\n\nconst IdentificationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    identification: { formStatus },\n    handleSubmitForm,\n    customers: { listCustomers },\n    branch: { listBranch },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomer = [];\n  listCustomers.map((item, index) => {\n    SelectCustomer.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    CustomersActions.getCustomerListDataByPaging(1, 300);\n  }, []);\n\n  return (\n    <IdentificationModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumCustomers={SelectCustomer}\n      enumType={SelectType}\n      enumBranch={SelectBranch}\n      enumLocation={SelectLocation}\n      enumMilling={SelectMilling}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  identification: state.identification,\n  component: state.component,\n  masters: state.masters,\n  customers: state.customers,\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    IdentificationActions.saveIdentificationRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IdentificationModalContainer);\n\nexport default reduxForm({\n  form: \"editIdentificationhForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport IdentificationModalContainer from \"../Container/IdentificationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ListIdentificationComponent = (props) => {\n  const {\n    headers,\n    listIdentification,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Identifikasi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Identifikasi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listIdentification}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    size=\"small\"\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <IdentificationModalContainer />\n    </div>\n  );\n};\n\nexport default ListIdentificationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListIdentificationComponent from \"../Component/ListIdentificationComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ListIdentificationContainer = (props) => {\n  const {\n    getListIdentification,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    identification: { listIdentification, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listIdentification.length > 0) {\n    listIdentification.map((item, index) => {\n      listIdentification[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_id\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_id.length - b.branch_id.length,\n    },\n    {\n      title: \"Tipe Identifikasi\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"20%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListIdentification(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(IdentificationActions.setPagingIdentification(paging));\n    getListIdentification(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListIdentification(page, limit, val);\n  };\n\n  return (\n    <ListIdentificationComponent\n      headers={headers}\n      listIdentification={listIdentification}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  identification: state.identification,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListIdentification: (page, limit, keyword) =>\n    IdentificationActions.getIdentificationListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(IdentificationActions.setSelectedIdentificationData({}));\n    await dispatch(IdentificationActions.setSelectedIdentificationId(\"\"));\n    dispatch(IdentificationActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    IdentificationActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(IdentificationActions.setFormStatus(\"edit\"));\n    await dispatch(\n      IdentificationActions.setSelectedIdentificationId(record.id)\n    );\n    await dispatch(IdentificationActions.setSelectedIdentificationData(record));\n    setTimeout(() => {\n      navigate(\"form-identification\");\n    }, 500);\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(IdentificationActions.setSelectedIdentificationId(branchId));\n    IdentificationActions.deleteIdentificationRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListIdentificationContainer);\n\nexport default reduxForm({\n  form: \"identificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, formStatus }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {formStatus === \"edit\" && (\n          <div class=\"col-md-12\">\n            <Field\n              name=\"id\"\n              label=\"ID Konfigurasi Mesin\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          </div>\n        )}\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Konfigurasi Mesin\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst MachineConfigurationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n        />\n      }\n    />\n  );\n};\n\nexport default MachineConfigurationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as MachineConfigurationActions from \"../Store/MachineConfigurationActions\";\nimport BranchModalComponent from \"../Component/MachineConfigurationModalComponent\";\n\nconst MachineConfigurationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    MachineConfigurationActions.saveMachineRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationModalContainer);\n\nexport default reduxForm({\n  form: \"editMachineConfigurationForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport MachineConfigurationModalContainer from \"../Container/MachineConfigurationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst MachineConfigurationComponent = (props) => {\n  const {\n    headers,\n    listMachine,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Konfigurasi Mesin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Konfigurasi Mesin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listMachine}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <MachineConfigurationModalContainer />\n    </div>\n  );\n};\n\nexport default MachineConfigurationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as MachineActions from \"../Store/MachineConfigurationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport MachineConfigurationComponent from \"../Component/MachineConfigurationComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst MachineConfigurationContainer = (props) => {\n  const {\n    getListMachine,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    machineConfiguration: { listMachine, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMachine.length > 0) {\n    listMachine.map((item, index) => {\n      listMachine[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Konfigurasi Mesin\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"50%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListMachine(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(MachineActions.setPagingMachineConf(paging));\n    getListMachine(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListMachine(page, limit, val);\n  };\n\n  return (\n    <MachineConfigurationComponent\n      headers={headers}\n      listMachine={listMachine}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  machineConfiguration: state.machineConfiguration,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMachine: (page, limit, keyword) =>\n    MachineActions.getMachineListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(MachineActions.setSelectedMachineData({}));\n    await dispatch(MachineActions.setSelectedMachineId(\"\"));\n    dispatch(MachineActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    MachineActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(MachineActions.setFormStatus(\"edit\"));\n    await dispatch(MachineActions.setSelectedMachineId(record.id));\n    await dispatch(MachineActions.setSelectedMachineData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await MachineActions.mapDetailMachineToForm();\n  },\n  handlePressDelete: async (machineId) => {\n    await dispatch(MachineActions.setSelectedMachineId(machineId));\n    MachineActions.deleteMachineRequested(machineId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationContainer);\n\nexport default reduxForm({\n  form: \"machineConfigurationForm\",\n})(EnhanceContainer);\n","import React, { useState } from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Upload, message, Typography } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\n\nconst beforeUpload = (file) => {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n  return isJpgOrPng && isLt2M;\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  handleUploadPhoto,\n  selectedUnitsData,\n}) => {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {/* <div class=\"col-md-12\">\n          <Text style={{ marginBottom: 10 }}>Foto Unit</Text>\n          <Upload\n            name=\"avatar\"\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n            // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            beforeUpload={beforeUpload}\n            onChange={handleChange}\n          >\n            {imageUrl ? (\n              <img\n                src={imageUrl}\n                alt=\"avatar\"\n                style={{ height: \"100%\", width: \"100%\" }}\n              />\n            ) : (\n              uploadButton\n            )}\n          </Upload>\n        </div> */}\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"name\" label=\"Nama Unit\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport UnitsModalComponent from \"../Component/UnitsModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    UnitsActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    UnitsActions.saveUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitForm\",\n  validate: validateFormUnit,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input, Table, Tooltip } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport UnitsModalContainer from \"../Container/UnitsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <Tooltip placement=\"top\" title=\"Edit unit\">\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </Tooltip>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    size=\"small\"\n                    columns={headers}\n                    dataSource={listUnits}\n                    // renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitsComponent;\n","import { Button, Space, Tooltip, Typography } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  BoxPlotOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/UnitsComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressUnitModel,\n    handlePressUnitFields,\n    handlePressLink,\n    units: { listUnits, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const tooltipText = <span>Unit Model</span>;\n\n  if (listUnits.length > 0) {\n    listUnits.map((item, index) => {\n      listUnits[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <Tooltip placement=\"topLeft\" title=\"Edit unit\">\n        <CButtonAntd\n          onClick={() => {\n            handlePressEdit(record);\n          }}\n          type=\"primary\"\n          icon={<EditOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n      <Tooltip placement=\"top\" title={tooltipText}>\n        <CButtonAntd\n          onClick={() => handlePressUnitModel(record.id)}\n          type=\"primary\"\n          icon={<BoxPlotOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n      <CButtonAntd\n        onClick={() => handlePressUnitFields(record)}\n        type=\"primary\"\n        icon={<FileAddOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n      render: (unit, record) => (\n        <Button\n          block\n          onClick={() => handlePressLink(record)}\n          type=\"link\"\n          style={{ whiteSpace: \"normal\", textAlign: \"left\" }}\n        >\n          <Typography\n            style={{ color: \"#1890ff\", fontWeight: \"bold\", fontSize: 11 }}\n          >\n            {unit}\n          </Typography>\n        </Button>\n      ),\n    },\n    {\n      title: \"Divisi\",\n      dataIndex: \"division\",\n      key: \"division\",\n      width: \"10%\",\n      sorter: (a, b) => a.division.length - b.division.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  React.useEffect(() => {\n    getListUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitsActions.setPagingUnit(paging));\n    getListUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnit(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listUnits}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnit: (page, limit, keyword) =>\n    UnitsActions.getUnitListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitsActions.setSelectedUnitData({}));\n    await dispatch(UnitsActions.setSelectedUnitId(\"\"));\n    dispatch(UnitsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitsActions.mapDetailUnitToForm();\n  },\n  handlePressDelete: async (unitId) => {\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    UnitsActions.deleteUnitRequested(unitId);\n  },\n  handlePressUnitModel: async (unitId) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    setTimeout(() => {\n      navigate(\"unit-models\");\n    }, 500);\n  },\n  handlePressUnitFields: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    setTimeout(() => {\n      navigate(\"unit-fields\");\n    }, 500);\n  },\n  handlePressLink: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    setTimeout(() => {\n      navigate(\"unit-job-forms\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"unitsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumProvince,\n  onChangeProvince,\n  cities,\n  enumBranch,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"name\"\n              label=\"Nama Customer\"\n              placeholder=\"Nama..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"picPhone\"\n              label=\"Telepon PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"username\"\n              label=\"Username\"\n              placeholder=\"Username..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              onChange={(val) => onChangeProvince(val)}\n              data={enumProvince}\n              name=\"province\"\n              label=\"Nama Provinsi\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"password\"\n              label=\"Password\"\n              placeholder=\"Password..\"\n              component={CInput}\n              type=\"password\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              data={cities}\n              name=\"city\"\n              label=\"Kota/Kabupaten\"\n              disabled={cities.length <= 0}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"phone\"\n              label=\"Telepon\"\n              placeholder=\"cth: 0821xxx\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"workHour\"\n              label=\"Jam Kerja\"\n              placeholder=\"cth : 08:00 - 15:20\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"pic\"\n              label=\"PIC\"\n              placeholder=\"PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"address\"\n              label=\"Alamat\"\n              component={CInput}\n              type=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst CustomerModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    enumProvince,\n    onChangeProvince,\n    cities,\n    enumBranch,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      width={900}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          enumProvince={enumProvince}\n          onChangeProvince={onChangeProvince}\n          cities={cities}\n          enumBranch={enumBranch}\n        />\n      }\n    />\n  );\n};\n\nexport default CustomerModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as CustomersActions from \"../Store/CustomersActions\";\nimport CustomerModalComponent from \"../Component/CustomerModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { getCitiesEnum } from \"../../../app/Helpers\";\n\nconst CustomerModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { listBranch },\n    masters: { listMenu, listProvince },\n    customers: { selectedCustomerData, formStatus },\n    handleSubmitForm,\n  } = props;\n  const [cities, setCities] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    setCities([]);\n    if (formStatus === \"edit\" && selectedCustomerData.province_id) {\n      const provinceId =\n        selectedCustomerData.province_id +\n        \"|\" +\n        selectedCustomerData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedCustomerData.province_id]);\n\n  React.useEffect(() => {\n    return () => {\n      CustomersActions.setFormStatus(\"add\");\n    };\n  });\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"editCustomerForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  return (\n    <CustomerModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumProvince={SelectProvince}\n      onChangeProvince={onChangeProvince}\n      cities={cities}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  customers: state.customers,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    CustomersActions.saveCustomerRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerModalContainer);\n\nexport default reduxForm({\n  form: \"editCustomerForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CustomerModalContainer from \"../Container/CustomerModalContainer\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst CustomerComponent = (props) => {\n  const {\n    headers,\n    listCustomers,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    isBlocked\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Customer</h6>\n                </div>\n                <div class=\"row align-items-center\">\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Customers\n                  </CButtonAntd>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2 mt-3\">\n                  {!isBlocked && <div class=\"col-md-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>}\n                  <div class=\"col-md-4 mt-4\">\n                    <div class=\"mt-2\" />\n                    <Search\n                      placeholder=\"Cari Customer\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listCustomers}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <CustomerModalContainer />\n    </div>\n  );\n};\n\nexport default CustomerComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { formValueSelector, reduxForm } from \"redux-form\";\nimport * as CustomerActions from \"../Store/CustomersActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CustomerComponent from \"../Component/CustomerComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex, isBlockedRoleCustomerView } from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"customerForm\");\n\nconst CustomerContainer = (props) => {\n  const {\n    user: { roles, branchId },\n    getListCustomer,\n    getListBranch,\n    getListProvince,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    customerBranchValue,\n    customers: { listCustomers, paging, keyword },\n    branch: { listBranch },\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n  const { page, totalPage, limit } = paging;\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  if (listCustomers.length > 0) {\n    listCustomers.map((item, index) => {\n      listCustomers[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n    {\n      title: \"PIC | Phone\",\n      dataIndex: `phone`,\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const checkBlockedRole = () => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomerView(roleId);\n\n    if (branchId) {\n      if (isBlockedRole) {\n        getListCustomer(1, 10, \"\", branchId);\n      } else {\n        getListCustomer(1, 10, \"\");\n      }\n    } else {\n      getListCustomer(1, 10, \"\");\n    }\n\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    getListBranch();\n    getListProvince();\n    checkBlockedRole();\n  }, []);\n\n  const onChangePagination = async (nextPage) => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomerView(roleId);\n\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n    await store.dispatch(CustomerActions.setPagingCustomer(paging));\n    // getListCustomer(nextPage, limit, keyword);\n    if (isBlockedRole) {\n      getListCustomer(nextPage, limit, \"\", branchId);\n    } else {\n      getListCustomer(nextPage, limit, \"\");\n    }\n  };\n\n  const onSearch = (val) => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomerView(roleId);\n\n    if (branchId) {\n      if (isBlockedRole) {\n        getListCustomer(page, limit, val, branchId);\n      } else {\n        getListCustomer(page, limit, val, customerBranchValue);\n      }\n    } else {\n      getListCustomer(page, limit, val, customerBranchValue);\n    }\n  };\n\n  return (\n    <CustomerComponent\n      headers={headers}\n      paging={paging}\n      isBlocked={isBlocked}\n      listCustomers={listCustomers}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers,\n  branch: state.branch,\n  customerBranchValue: selector(state, \"branch\"),\n  user: state.auth.userDetail,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListCustomer: (page, limit, keyword, branchId) => {\n    const splitBranch = branchId ? branchId.split(\"|\") : [\"\"];\n    CustomerActions.getCustomerListDataByPaging(\n      page,\n      limit,\n      keyword,\n      splitBranch[0]\n    );\n  },\n  getListBranch: () => BranchActions.getBranchListDataRequested(1, 250),\n  getListProvince: () => MasterDataActions.loadProvinceListData(),\n  handlePressAddNew: async () => {\n    await dispatch(CustomerActions.setSelectedCustomerData({}));\n    await dispatch(CustomerActions.setSelectedCustomerId(\"\"));\n    dispatch(CustomerActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    CustomerActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(CustomerActions.setFormStatus(\"edit\"));\n    await dispatch(CustomerActions.setSelectedCustomerId(record.id));\n    await dispatch(CustomerActions.setSelectedCustomerData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await CustomerActions.mapDetailCustomerToForm();\n  },\n  handlePressDelete: async (customerId) => {\n    await dispatch(CustomerActions.setSelectedCustomerId(customerId));\n    CustomerActions.deleteCustomerRequested(customerId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerContainer);\n\nexport default reduxForm({\n  form: \"customerForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Peralatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default ToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTools } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport ToolsModalComponent from \"../Component/ToolsModalComponent\";\n\nconst ToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    tools: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <ToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    ToolsActions.saveToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editToolsForm\",\n  validate: validateFormTools,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ToolsModalContainer from \"../Container/ToolsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ToolsComponent = (props) => {\n  const {\n    headers,\n    listTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Peralatan</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Peralatan\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToolsModalContainer />\n    </div>\n  );\n};\n\nexport default ToolsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ToolsComponent from \"../Component/ToolsComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ToolsContainer = (props) => {\n  const {\n    getListTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    tools: { listTools, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listTools.length > 0) {\n    listTools.map((item, index) => {\n      listTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListTools(1, 10);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ToolsActions.setPagingTools(paging));\n    getListTools(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListTools(page, limit, val);\n  };\n\n  return (\n    <ToolsComponent\n      headers={headers}\n      listTools={listTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListTools: (page, limit, keyword) =>\n    ToolsActions.getToolsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(ToolsActions.setSelectedToolsData({}));\n    await dispatch(ToolsActions.setSelectedToolsId(\"\"));\n    dispatch(ToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    ToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(ToolsActions.setFormStatus(\"edit\"));\n    await dispatch(ToolsActions.setSelectedToolsId(record.id));\n    await dispatch(ToolsActions.setSelectedToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await ToolsActions.mapDetailToolsToForm();\n  },\n  handlePressDelete: async (toolsId) => {\n    await dispatch(ToolsActions.setSelectedToolsId(toolsId));\n    ToolsActions.deleteToolsRequested(toolsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsContainer);\n\nexport default reduxForm({\n  form: \"toolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Judul\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst FormCategoryModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default FormCategoryModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormCategory } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport BranchModalComponent from \"../Component/FormCategoryModalComponent\";\n\nconst FormCategoryModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    FormCategoryActions.saveFormCategoryRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryModalContainer);\n\nexport default reduxForm({\n  form: \"editFormCategory\",\n  validate: validateFormCategory,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport FormCategoryModalContainer from \"../Container/FormCategoryModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst FormCategoryComponent = (props) => {\n  const {\n    headers,\n    listFormCategory,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Kategori Form</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Kategori Form\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listFormCategory}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <FormCategoryModalContainer />\n    </div>\n  );\n};\n\nexport default FormCategoryComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport FormCategoryComponent from \"../Component/FormCategoryComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst FormCategoryContainer = (props) => {\n  const {\n    getListFormCategory,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    formCategory: { listFormCategory, paging, keyword },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listFormCategory.length > 0) {\n    listFormCategory.map((item, index) => {\n      listFormCategory[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListFormCategory(page, limit, keyword);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(FormCategoryActions.setPagingFormCategory(paging));\n    getListFormCategory(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListFormCategory(page, limit, val);\n  };\n\n  return (\n    <FormCategoryComponent\n      headers={headers}\n      listFormCategory={listFormCategory}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  formCategory: state.formCategory,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListFormCategory: (page, limit, keyword) =>\n    FormCategoryActions.getFormCatgeoryListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData({}));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(\"\"));\n    dispatch(FormCategoryActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    FormCategoryActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(FormCategoryActions.setFormStatus(\"edit\"));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(record.id));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await FormCategoryActions.mapDetailCategoryToForm();\n  },\n  handlePressDelete: async (formCategoryId) => {\n    await dispatch(\n      FormCategoryActions.setSelectedFormCategoryId(formCategoryId)\n    );\n    FormCategoryActions.deleteFormCategoryRequested(formCategoryId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryContainer);\n\nexport default reduxForm({\n  form: \"formCategory\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-12 mt-3\">\n            <Field\n              name=\"name\"\n              label=\"Nama Model\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModelsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModelsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit, validateFormUnitModel } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitsModelsModalComponent from \"../Component/UnitsModelsModalComponent\";\n\nconst UnitModelsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModelsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitModelActions.saveUnitModelsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitModelForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport UnitModelsModalContainer from \"../Container/UnitModelsModalContainer\";\nimport { navigate } from \"../../../app/Helpers\";\n\nconst { Search } = Input;\n\nconst UnitModelsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit Model</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Model\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitModelsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitModelsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FieldNumberOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitModelsComponent from \"../Component/UnitModelsComponent\";\n\nconst UnitModelsContainer = (props) => {\n  const {\n    getListUnitModels,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressSerialNumber,\n    unitModels: { listUnitModels, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitModels.length > 0) {\n    listUnitModels.map((item, index) => {\n      listUnitModels[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Model\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressSerialNumber(record)}\n        type=\"ghost\"\n        icon={<FieldNumberOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitModels(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitModelActions.setPagingUnitModel(paging));\n    getListUnitModels(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitModels(page, limit, val);\n  };\n\n  return (\n    <UnitModelsComponent\n      headers={headers}\n      listUnits={listUnitModels}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitModels: state.unitModels,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitModels: (page, limit, keyword) =>\n    UnitModelActions.getUnitModelListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitModelActions.setSelectedUnitModelData({}));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(\"\"));\n    dispatch(UnitModelActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitModelActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitModelActions.setFormStatus(\"edit\"));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitModelActions.mapDetailUnitModelToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(UnitModelActions.setSelectedUnitModelId(unitModelId));\n    UnitModelActions.deleteUnitModelRequested(unitModelId);\n  },\n  handlePressSerialNumber: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    setTimeout(() => {\n      navigate(\"unit-serial-number\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsContainer);\n\nexport default reduxForm({\n  form: \"unitsModelsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumFormCategory,\n  enumJobForm,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumFormCategory ?? []}\n              name=\"formCategory\"\n              label=\"Kategori\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"fieldName\"\n              label=\"Nama Field\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumJobForm ?? []}\n              name=\"jobForm\"\n              label=\"Jenis Form\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitFieldsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumFormCategory,\n    enumJobForm,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumFormCategory={enumFormCategory}\n          enumJobForm={enumJobForm}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitFieldsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsModalComponent from \"../../Component/UnitFields/UnitFieldsModalComponent\";\nimport Invoke from \"../../../../app/axios/Invoke\";\n\nconst UnitFieldsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    handleSubmitForm,\n  } = props;\n  const [formCategory, setFormCategory] = React.useState([]);\n  const [jobForm, setJobForm] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const loadOption = async () => {\n    const { data } = await Invoke.getFormCategory(1, 100, \"\");\n    const dataJobForm = await Invoke.getListJobForm(1, 100, \"\");\n    const listFormCategory = data.callback.data;\n    const listJobForm = dataJobForm.data.callback.data;\n\n    const SelectFormCategory = [];\n    listFormCategory.map((item, index) => {\n      SelectFormCategory.push({\n        id: `form-category-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    const SelectJobForm = [];\n    listJobForm.map((item, index) => {\n      SelectJobForm.push({\n        id: `job-form-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setFormCategory(SelectFormCategory);\n    setJobForm(SelectJobForm);\n  };\n\n  React.useEffect(() => {\n    loadOption();\n  }, []);\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitFieldsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      enumFormCategory={formCategory}\n      enumJobForm={jobForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitFieldsActions.saveUnitFieldsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitFieldsForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/UnitFields/UnitFieldsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitFieldsComponent = (props) => {\n  const {\n    headers,\n    listUnitFields,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitsData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Field Unit : ${selectedUnitsData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Field\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitFields}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitFieldsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsComponent from \"../../Component/UnitFields/UnitFieldsComponent\";\n\nconst UnitFieldsContainer = (props) => {\n  const {\n    getListUnitFields,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitFields: { listUnitFields, paging },\n    units: { selectedUnitsData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitFields.length > 0) {\n    listUnitFields.map((item, index) => {\n      listUnitFields[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Job Form\",\n      dataIndex: \"job_form_name\",\n      key: \"job_form_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\n    },\n    {\n      title: \"Nama Field\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Kategori\",\n      dataIndex: \"category_form_name\",\n      key: \"category_form_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.category_form_name.length - b.category_form_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"40%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitFields(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitFieldsActions.setPagingUnitFields(paging));\n    getListUnitFields(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitFields(page, limit, val);\n  };\n\n  return (\n    <UnitFieldsComponent\n      headers={headers}\n      listUnitFields={listUnitFields}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedUnitsData={selectedUnitsData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitFields: state.unitFields,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitFields: (page, limit, keyword) =>\n    UnitFieldsActions.getUnitFieldsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData({}));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(\"\"));\n    dispatch(UnitFieldsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitFieldsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitFieldsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(record.id));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitFieldsActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(unitFieldsId));\n    UnitFieldsActions.deleteUnitFieldRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsContainer);\n\nexport default reduxForm({\n  form: \"unitFieldsForm\",\n})(EnhanceContainer);\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_IDENTIFICATION_LIST_DATA =\n  \"SET_REPORT_IDENTIFICATION_LIST_DATA\";\nexport const SET_PAGING_REPORT_IDENTIFICATION =\n  \"SET_PAGING_REPORT_IDENTIFICATION\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportIdentificationListData = (payload) => {\n  return {\n    type: SET_REPORT_IDENTIFICATION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportIdentification = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportIdentificationListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportIdentification(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportIdentificationComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Identifikasi</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportIdentificationComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportIdentificationActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportIdentificationComponent\";\n\nconst ReportIdentificationContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportIdentificationContainer);\n\nexport default reduxForm({\n  form: \"reportIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Typography } from \"antd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumHeadDivision,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"title\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12 mt-3\">\n          <CSelect\n            showSearch\n            data={enumHeadDivision}\n            name=\"headDivision\"\n            label=\"Kepala Divisi\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumHeadDivision,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumHeadDivision={enumHeadDivision}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport DivisionModalComponent from \"../Component/DivisionModalComponent\";\nimport { enumSelectGenerator } from \"../../../app/Helpers\";\n\nconst DivisionModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    division: { formStatus },\n    masters: { listMenu },\n    employees: { listEmployees },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectEmployees = enumSelectGenerator(listEmployees, \"employee\");\n\n  return (\n    <DivisionModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumHeadDivision={SelectEmployees}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  division: state.division,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    DivisionActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    DivisionActions.saveDivisionRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionForm\",\n  validate: validateDivisionForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport DivisionModalContainer from \"../Container/DivisionModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Divisi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Divisi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <DivisionModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport * as DivisionUnitActions from \"../Store/DivisionUnitActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/DivisionComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListDivision,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressDivisionUnit,\n    division: { listDivision, paging },\n    getListEmlpoyee \n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n      key: \"title\",\n      width: \"30%\",\n      sorter: (a, b) => a.title.length - b.title.length,\n    },\n    {\n      title: \"Kepala Divisi\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDivisionUnit(record)}\n        type=\"primary\"\n        icon={<FileAddOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivision(page, limit);\n    getListEmlpoyee(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionActions.setPagingDivision(paging));\n    getListDivision(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivision(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listDivision}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivision: (page, limit, keyword) =>\n    DivisionActions.getDivisionListDataRequested(page, limit, keyword),\n  getListEmlpoyee: (page, limit) => {\n    EmployeeActions.loadEmployeeListData(page, limit);\n  },\n  handlePressAddNew: async () => {\n    await dispatch(DivisionActions.setSelectedDivisionData({}));\n    await dispatch(DivisionActions.setSelectedDivisionId(\"\"));\n    dispatch(DivisionActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionActions.mapDetailDivisionToForm();\n  },\n  handlePressDelete: async (divisionId) => {\n    await dispatch(DivisionActions.setSelectedDivisionId(divisionId));\n    DivisionActions.deleteDivisionRequested(divisionId);\n  },\n  handlePressDivisionUnit: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    setTimeout(() => {\n      navigate(\"division-unit\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"divisionForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumTools }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Peralatan Karyawan</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumTools}\n              name=\"tools\"\n              label=\"Peralatan\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst EmployeeToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    enumTools,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formStatus={formStatus}\n          enumTools={enumTools}\n        />\n      }\n    />\n  );\n};\n\nexport default EmployeeToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateEmployeeToolsForm, validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport EmployeeToolsModalComponent from \"../../Component/EmployeeTools/EmployeeToolsModalComponent\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\n\nconst EmployeeToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    employeeTools: { formStatus },\n    tools: { listTools },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectTools = enumSelectGenerator(listTools);\n\n  return (\n    <EmployeeToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      enumTools={SelectTools}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  employeeTools: state.employeeTools,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    EmployeeToolsActions.saveEmployeeToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeToolsForm\",\n  validate: validateEmployeeToolsForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport {\n  PlusOutlined,\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n} from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport EmployeeToolsModalContainer from \"../../Container/EmployeeTools/EmployeeToolsModalContainer\";\n\nconst { Search } = Input;\n\nconst EmployeeToolsComponent = (props) => {\n  const {\n    headers,\n    listEmployeeTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedEmployeeData,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Karyawan : ${selectedEmployeeData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-2 mb-2\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"employees\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Peralatan\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak PDF\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployeeTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <EmployeeToolsModalContainer />\n    </div>\n  );\n};\n\nexport default EmployeeToolsComponent;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nexport const generateEmployeeToolsReport = async (data) => {\n  const { selectedEmployeeData, listEmployeeTools } = data;\n  const newListData = [];\n\n  // eslint-disable-next-line array-callback-return\n  await listEmployeeTools.map((item, index) => {\n    newListData.push({ no: index + 1, name: item.name, check: \"-\" });\n  });\n\n  const doc = new jsPDF();\n\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Peralatan Karyawan\", 100, 20, \"center\");\n\n  doc.setFontSize(12);\n  doc.setFont(\"courier\");\n  //   Line 1\n  doc.text(15, 42, `Karyawan`);\n  doc.text(`: ${selectedEmployeeData.name.toUpperCase()}`, 50, 42);\n\n  doc.text(15, 49, `Cabang`);\n  doc.text(`: ${selectedEmployeeData.branch_name ?? \"-\"}`, 50, 49);\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    let docCell = dataCell.doc;\n\n    // --> Draw Circle shape for checklist\n    if (dataCell.cell.section === \"body\" && dataCell.column.index === 2) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 22, dataCell.cell.y + 4, 2, \"FD\");\n    } else if (\n      dataCell.cell.section === \"body\" &&\n      dataCell.column.index === 3\n    ) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 12, dataCell.cell.y + 4, 2, \"FD\");\n    }\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  doc.autoTable({\n    startY: 57,\n    body: newListData,\n    theme: \"plain\",\n    headStyles: { halign: \"center\" },\n    styles: { overflow: \"linebreak\" },\n    columns: [\n      { header: \"#\", dataKey: \"no\" },\n      { header: \"Nama Peralatan\", dataKey: \"name\" },\n      { header: \"Check\", dataKey: \"test1\" },\n      { header: \"NA\", dataKey: \"test2\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  // === Signature ===\n  doc.addPage();\n  doc.setFontSize(16);\n  doc.setFont(\"Times-Roman\", \"regular\");\n  //   Line 2\n  doc.setFontSize(12);\n\n  doc.setFontSize(16);\n  doc.text(80, 90, `MENGETAHUI`);\n\n  //   Line 1\n  doc.text(45, 120, `Karyawan`);\n  doc.text(130, 120, `Coordinator /`);\n  doc.text(130, 127, `Supervisor`);\n\n  doc.text(45, 163, `(...........................)`);\n  doc.text(130, 163, `(...........................)`);\n\n  //   Export\n  doc.save(\n    `Peralatan-Karyawan-${selectedEmployeeData.name.replace(\" \", \"-\")}.pdf`\n  );\n};\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport EmployeeToolsComponent from \"../../Component/EmployeeTools/EmployeeToolsComponent\";\nimport { generateEmployeeToolsReport } from \"../../Store/EmployeeTools/EmployeeToolsReport\";\n\nconst EmployeeToolsContainer = (props) => {\n  const {\n    getListEmployeeTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    employeeTools: { listEmployeeTools, paging },\n    employees: { selectedEmployeeData, selectedEmployeeId },\n    employeeToolsFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployeeTools.length > 0) {\n    listEmployeeTools.map((item, index) => {\n      listEmployeeTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployeeTools(selectedEmployeeId, page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeToolsActions.setPagingEmployeeTools(paging));\n    getListEmployeeTools(selectedEmployeeId, nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListEmployeeTools(selectedEmployeeId, page, limit, val);\n  };\n\n  const handlePressGeneratePdf = () => {\n    const dataPrinted = {\n      selectedEmployeeData,\n      listEmployeeTools,\n    };\n    generateEmployeeToolsReport(dataPrinted, employeeToolsFormValues);\n  };\n\n  return (\n    <EmployeeToolsComponent\n      headers={headers}\n      listEmployeeTools={listEmployeeTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedEmployeeData={selectedEmployeeData}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  employeeTools: state.employeeTools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployeeTools: (employeeId, page, limit, keyword) =>\n    EmployeeToolsActions.getEmployeeToolsRequested(\n      employeeId,\n      page,\n      limit,\n      keyword\n    ),\n  handlePressAddNew: async () => {\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData({}));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(\"\"));\n    dispatch(EmployeeToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    EmployeeToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(EmployeeToolsActions.setFormStatus(\"edit\"));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(record.id));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await EmployeeToolsActions.mapDetailEmployeeToolsToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(\n      EmployeeToolsActions.setSelectedEmployeeToolsId(unitFieldsId)\n    );\n    EmployeeToolsActions.deleteEmployeeToolsRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsContainer);\n\nexport default reduxForm({\n  form: \"employeeToolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, enumUnits }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect showSearch data={enumUnits} name=\"unit\" label=\"Unit\" />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionUnitModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumUnits,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumUnits={enumUnits}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionUnitModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionUnitForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\nimport DivisionUnitModalComponent from \"../../Component/DivisionUnit/DivisionUnitModalComponent\";\n\nconst DivisionUnitModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    divisionUnit: { formStatus, selectedDivisionUnitData },\n    units: { listUnits },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectUnits = enumSelectGenerator(listUnits, \"unit\");\n\n  return (\n    <DivisionUnitModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedDivisionUnitData={selectedDivisionUnitData}\n      enumUnits={SelectUnits}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    DivisionUnitActions.saveDivisionUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionUnitForm\",\n  validate: validateDivisionUnitForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/DivisionUnit/DivisionUnitModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionUnitComponent = (props) => {\n  const {\n    headers,\n    listDivisionUnit,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedDivisionData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Divisi : ${selectedDivisionData.title}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"division\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listDivisionUnit}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionUnitComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport DivisionUnitComponent from \"../../Component/DivisionUnit/DivisionUnitComponent\";\n\nconst DivisionUnitContainer = (props) => {\n  const {\n    getListDivisionUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    divisionUnit: { listDivisionUnit, paging },\n    division: { selectedDivisionData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivisionUnit.length > 0) {\n    listDivisionUnit.map((item, index) => {\n      listDivisionUnit[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"unit_name\",\n      key: \"unit_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.unit_name.length - b.unit_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"20%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivisionUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionUnitActions.setPagingDivisionUnit(paging));\n    getListDivisionUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivisionUnit(page, limit, val);\n  };\n\n  return (\n    <DivisionUnitComponent\n      headers={headers}\n      listDivisionUnit={listDivisionUnit}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedDivisionData={selectedDivisionData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivisionUnit: (page, limit, keyword) =>\n    DivisionUnitActions.getDivisionUnitListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData({}));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(\"\"));\n    dispatch(DivisionUnitActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionUnitActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionUnitActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(record.id));\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionUnitActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (divisionUnitId) => {\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(divisionUnitId));\n    DivisionUnitActions.deleteUnitFieldRequested(divisionUnitId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitContainer);\n\nexport default reduxForm({\n  form: \"divisionUnitForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  Image,\n} from \"@react-pdf/renderer\";\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#E4E4E4\",\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n});\n\nconst DetailServiceReportComponent = () => {\n  return (\n    <PDFViewer style={{ flex: 1 }}>\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>Section #1</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n          <View style={styles.section}>\n            <Image\n              style={{\n                width: 300,\n                height: 100,\n              }}\n              src=\"https://cors-anywhere.herokuapp.com/https://drive.google.com/file/d/1hwrQUgM6CvBwxIZUu1fRASxKQr0FxfsM/view\"\n            />\n          </View>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nexport default DetailServiceReportComponent;\n","import React from \"react\";\nimport DetailServiceReportComponent from \"../Components/DetailServiceReportComponent\";\n\nconst DetailServiceReportContainer = () => {\n  return <DetailServiceReportComponent />;\n};\n\nexport default DetailServiceReportContainer;\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumCustomer,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumCustomer ?? []}\n              name=\"customer\"\n              label=\"Pilih Customer\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"serialNumber\"\n              label=\"Serial Number\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              typeComponent=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ModalUnitSerialNumberComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumCustomer,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumCustomer={enumCustomer}\n        />\n      }\n    />\n  );\n};\n\nexport default ModalUnitSerialNumberComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormUnitModel, validateUnitSerialNumberForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport ModalUnitSerialNumberComponent from \"../../Component/UnitSerialNumber/ModalUnitSerialNumberComponent\";\n\nconst ModalUnitSerialNumber = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    customers: { listCustomersDropdown },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <ModalUnitSerialNumberComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedUnitsData={selectedUnitsData}\n      enumCustomer={SelectCustomerData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  customers: state.customers,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitSerialNumberActions.saveUnitSerialNumberRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModalUnitSerialNumber);\n\nexport default reduxForm({\n  form: \"editUnitSerialNumberForm\",\n  validate: validateUnitSerialNumberForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport ModalUnitSerialNumberContainer from \"../../Container/UnitSerialNumber/ModalUnitSerialNumberContainer\";\n\nconst { Search } = Input;\n\nconst UnitSerialNumberComponent = (props) => {\n  const {\n    headers,\n    listUnitSerialNumber,\n    listCustomer,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitModelsData,\n    onChangeCustomer,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <h6 class=\"ml-1 card-title\">{`Unit Serial Number : ${selectedUnitModelsData.name}`}</h6>\n                  <p class=\"card-description ml-1\">\n                    Silahkan pilih customer untuk menampilkan data serial number\n                  </p>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-1 mb-3\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit-models\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Serial Number\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-7\">\n                    <CSelect\n                      showSearch\n                      data={listCustomer}\n                      name=\"customer\"\n                      label=\"Pilih Customer\"\n                      onChange={(customer) => {\n                        onChangeCustomer(customer);\n                      }}\n                    />\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      name=\"keyword\"\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitSerialNumber}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ModalUnitSerialNumberContainer />\n    </div>\n  );\n};\n\nexport default UnitSerialNumberComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport * as CustomerActions from \"../../../Customers/Store/CustomersActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitSerialNumberComponent from \"../../Component/UnitSerialNumber/UnitSerialNumberComponent\";\n\nconst UnitSerialNumberContainer = (props) => {\n  const {\n    getUnitSerialNumber,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitSerialNumber: {\n      listUnitSerialNumber,\n      paging,\n      selectedtUnitSerialNumber,\n    },\n    unitModels: { selectedUnitModelsData },\n    customers: { listCustomersDropdown },\n    unitSerialNumberFormValues,\n  } = props;\n\n  const { dispatch } = store;\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitSerialNumber.length > 0) {\n    listUnitSerialNumber.map((item, index) => {\n      listUnitSerialNumber[index] = {\n        ...item,\n        no: getIndex(page, limit)[index],\n      };\n    });\n  }\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Serial Number\",\n      dataIndex: \"serial_number\",\n      key: \"serial_number\",\n      width: \"30%\",\n      sorter: (a, b) => a.serial_number.length - b.serial_number.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    // getUnitSerialNumber(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitSerialNumberActions.setPagingUnitModel(paging));\n    getUnitSerialNumber(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\n  };\n\n  const handleOnchangeCustomer = (customer) => {\n    if (!customer) {\n      dispatch(UnitSerialNumberActions.setUnitSerialNumberData([]));\n      return;\n    }\n\n    const splitCustomerId = customer.split(\"|\");\n    UnitSerialNumberActions.getUnitSerialNumber(\n      page,\n      limit,\n      \"\",\n      splitCustomerId[0]\n    );\n  };\n\n  return (\n    <UnitSerialNumberComponent\n      headers={headers}\n      listUnitSerialNumber={listUnitSerialNumber}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      listCustomer={SelectCustomerData}\n      selectedUnitModelsData={selectedUnitModelsData}\n      selectedtUnitSerialNumber={selectedtUnitSerialNumber}\n      onChangeCustomer={handleOnchangeCustomer}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitSerialNumber: state.unitSerialNumber,\n  unitModels: state.unitModels,\n  customers: state.customers,\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getUnitSerialNumber: (page, limit, keyword) =>\n    UnitSerialNumberActions.getUnitSerialNumber(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberData({}));\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberId(\"\"));\n    dispatch(UnitSerialNumberActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitSerialNumberActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitSerialNumberActions.setFormStatus(\"edit\"));\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(record.id)\n    );\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberData(record)\n    );\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitSerialNumberActions.mapDetailUnitSerialNumberToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(unitModelId)\n    );\n    UnitSerialNumberActions.deleteUnitModelRequested(unitModelId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitSerialNumberContainer);\n\nexport default reduxForm({\n  form: \"unitSerialNumberForm\",\n})(EnhanceContainer);\n","import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { navigate } from \"../../../app/Helpers\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst UnitJobFormsComponent = (props) => {\r\n  const {\r\n    headers,\r\n    listUnitJobForms,\r\n    renderActionTable,\r\n    onSearch,\r\n    selectedUnitsData,\r\n  } = props;\r\n\r\n  return (\r\n    <div class=\"page-content\">\r\n      <div class=\"mt-5\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 grid-margin stretch-card\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <div class=\"mb-2\">\r\n                  <h6 class=\"ml-1 card-title\">{`Unit : ${selectedUnitsData.name}`}</h6>\r\n                  {/* <p class=\"card-description ml-1\">\r\n                    Silahkan pilih customer untuk menampilkan data \r\n                  </p> */}\r\n                </div>\r\n                <div class=\"row d-flex justify-content-between mb-2\">\r\n                  <div class=\"col-md-7\">\r\n                    <div class=\"row ml-1 mb-3\">\r\n                      <CButtonAntd\r\n                        onClick={() => navigate(\"unit\")}\r\n                        type=\"primary\"\r\n                        icon={<ArrowLeftOutlined />}\r\n                        size=\"middle\"\r\n                        danger\r\n                      >\r\n                        Kembali\r\n                      </CButtonAntd>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4 mt-4\">\r\n                    <Search\r\n                      name=\"keyword\"\r\n                      placeholder=\"Cari\"\r\n                      onSearch={onSearch}\r\n                      enterButton\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <CTableAntd data={listUnitJobForms} headers={headers} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitJobFormsComponent;\r\n","import { Space } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFormValues, reduxForm } from \"redux-form\";\r\nimport * as UnitJobFormsActions from \"../../Units/Store/UnitJobFormActions\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport UnitJobFormsComponent from \"../Component/UnitJobFormsComponent\";\r\n\r\nconst UnitJobFormsContainer = (props) => {\r\n  const {\r\n    units: { selectedUnitsData },\r\n    unitJobForms: { listUnitJobForms },\r\n    handlePressEdit,\r\n    handlePressDelete,\r\n  } = props;\r\n\r\n  const { dispatch } = store;\r\n  //   const { page, limit, totalPage } = paging;\r\n\r\n  if (listUnitJobForms.length > 0) {\r\n    listUnitJobForms.map((item, index) => {\r\n      listUnitJobForms[index] = {\r\n        ...item,\r\n        no: index + 1,\r\n      };\r\n    });\r\n  }\r\n\r\n  const headers = [\r\n    {\r\n      title: \"No\",\r\n      dataIndex: \"no\",\r\n      key: \"no\",\r\n      width: \"7%\",\r\n      sorter: (a, b) => a.no - b.no,\r\n    },\r\n    {\r\n      title: \"Job Form\",\r\n      dataIndex: \"job_form_name\",\r\n      key: \"job_form_name\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\r\n    },\r\n    {\r\n      title: \"Deskripsi\",\r\n      dataIndex: \"descriptions\",\r\n      key: \"descriptions\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    UnitJobFormsActions.getUnitJobFormsListDataRequested(\"\");\r\n    // getUnitSerialNumber(page, limit);\r\n  }, []);\r\n\r\n  const onSearch = (keyword) => {\r\n    // UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\r\n  };\r\n\r\n  return (\r\n    <UnitJobFormsComponent\r\n      headers={headers}\r\n      selectedUnitsData={selectedUnitsData}\r\n      listUnitJobForms={listUnitJobForms}\r\n      onSearch={onSearch}\r\n      // {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  units: state.units,\r\n  unitJobForms: state.unitJobForms,\r\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UnitJobFormsContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"unitJobForms\",\r\n})(EnhanceContainer);\r\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst WorkingHoursComponent = (props) => {\n  const {\n    headers,\n    listMonitoringEmployee,\n    onChangePagination,\n    paging,\n    onSearch,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Jam Kerja Karyawan</h6>\n                </div>\n\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"No. Service\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Laporan\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listMonitoringEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkingHoursComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as WorkingHoursActions from \"../Store/WorkingHoursActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeMonitoringEmployee,\n  getStatusWorkingHours,\n} from \"../../../app/Helpers\";\nimport { Tag, Typography } from \"antd\";\nimport WorkingHoursComponent from \"../Component/WorkingHoursComponent\";\nimport { exportWorkingHoursReportPdf } from \"../Store/WorkingHoursReport\";\nimport moment from \"moment\";\n\nconst WorkingHoursContainer = (props) => {\n  const {\n    getListWorkingHours,\n    handlePressAddNew,\n    workingHours: { listWorkingHours, paging },\n    branch: { listBranchDropdown },\n    workingHoursFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const printedData = {\n    listWorkingHours,\n    from: moment(),\n    until: moment(),\n  };\n\n  if (listWorkingHours.length > 0) {\n    listWorkingHours.map((item, index) => {\n      listWorkingHours[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"No. Service\",\n      dataIndex: \"no_service\",\n      key: \"no_service\",\n      width: \"20%\",\n      sorter: (a, b) => a.no_service.length - b.no_service.length,\n      render: (no_service) => {\n        return (\n          <Tag style={{ width: 100, textAlign: \"center\" }} color={\"#f0f0f0\"}>\n            <Typography style={{ fontWeight: \"bold\" }}>\n              {no_service ? `${no_service}` : \"-\"}\n            </Typography>\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created\",\n      key: \"created\",\n      width: \"30%\",\n      sorter: (a, b) => a.created.length - b.created.length,\n    },\n    {\n      title: \"Jam Kerja\",\n      dataIndex: \"total_hours\",\n      key: \"total_hours\",\n      render: (total_hours) => {\n        return (\n          <Tag style={{ width: 80, textAlign: \"center\" }} color={\"#1890ff\"}>\n            {total_hours ? `${total_hours} Jam` : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.total_hours - b.total_hours,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n      render: (status) => {\n        let color = getStatusWorkingHours(status).color;\n        return (\n          <Tag style={{ width: 112, textAlign: \"center\" }} color={color}>\n            {status ? getStatusWorkingHours(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Tanggal Selesai\",\n      dataIndex: \"done\",\n      key: \"done\",\n      width: \"30%\",\n      sorter: (a, b) => a.done.length - b.done.length,\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranchDropdown.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListWorkingHours(page, limit);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      WorkingHoursActions.setPagingMonitoringEmployee(paging)\n    );\n    getListWorkingHours(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    WorkingHoursActions.handleSearch(workingHoursFormValues);\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportWorkingHoursReportPdf(printedData, workingHoursFormValues);\n  };\n\n  return (\n    <WorkingHoursComponent\n      headers={headers}\n      listMonitoringEmployee={listWorkingHours}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  workingHours: state.workingHours,\n  branch: state.branch,\n  workingHoursFormValues: getFormValues(\"workingHoursForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListWorkingHours: (page, limit, from, until, keyword) =>\n    WorkingHoursActions.getWorkingHoursListDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WorkingHoursContainer);\n\nexport default reduxForm({\n  form: \"workingHoursForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport moment from \"moment\";\r\nimport { getStatusWorkingHours } from \"../../../app/Helpers\";\r\n\r\nexport const exportWorkingHoursReportPdf = (data, values) => {\r\n  const { listWorkingHours, from, until } = data;\r\n  const startDate = moment(from).format(\"YYYY-MM-DD\");\r\n  const dueDate = moment(until).format(\"YYYY-MM-DD\");\r\n  const workingHoursList = [];\r\n\r\n  listWorkingHours.map((item, index) => {\r\n    workingHoursList.push({\r\n      no: index + 1,\r\n      employeeNik: item.employee_nik,\r\n      employeeName: item.employee_name,\r\n      noService: item.no_service,\r\n      customerName: item.customer_name,\r\n      type: item.job_type,\r\n      totalHours: item.total_hours,\r\n      status: item.status ? getStatusWorkingHours(item.status).value : \"-\",\r\n      createdDate: item.created,\r\n      doneDate: item.done,\r\n    });\r\n  });\r\n\r\n  const doc = new jsPDF();\r\n  // doc.text({from_left}, {from_top})\r\n  doc.setFontSize(20);\r\n  doc.setFont(\"courier\");\r\n  doc.text(\"Jam Kerja Karyawan\", 100, 20, \"center\");\r\n  doc.setFontSize(16);\r\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\r\n\r\n  doc.setFontSize(12);\r\n\r\n  //   Line 1\r\n  doc.text(15, 42, `Dari Tanggal`);\r\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\r\n  doc.text(15, 49, `Sampai Tanggal`);\r\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\r\n\r\n  // Check if filtered by branch\r\n  if (values) {\r\n    if (values.branch) {\r\n      const splitBranch = values.branch.split(\"|\");\r\n      doc.text(15, 56, `Cabang`);\r\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\r\n    }\r\n  }\r\n\r\n  // drawCell is function for styling font, color and add content to every cell\r\n  const drawCell = (dataCell) => {\r\n    // --> This for custom styling font too\r\n    // else if (dataCell.column.dataKey === \"no\") {\r\n    //   docCell.setFont(\"Verdana\", \"bold\");\r\n    //   docCell.setFontSize(12);\r\n    // }\r\n  };\r\n\r\n  // --> didParseCell is function for styling border, line, etc of every cell\r\n  const didParseCell = (dataCell) => {\r\n    let s = dataCell.cell.styles;\r\n    s.lineColor = [0, 0, 0];\r\n    s.lineWidth = 0.1;\r\n    s.font = \"courier\";\r\n\r\n    // --> This for spesific custom cell with spesific index\r\n    // if (dataCell.row.index === 1) {\r\n    //   s.lineColor = [0, 0, 0];\r\n    //   s.borders = \"t\";\r\n    // }\r\n  };\r\n\r\n  const headTable = [\r\n    [\r\n      \"No\",\r\n      \"NIK\",\r\n      \"Nama Karyawan\",\r\n      \"No. Service\",\r\n      \"Nama Customer\",\r\n      \"Dibuat\",\r\n      \"Jam Kerja\",\r\n      \"Status\",\r\n      \"Tanggal Selesai\",\r\n    ],\r\n  ];\r\n\r\n  doc.autoTable({\r\n    startY: values ? 65 : 60,\r\n    body: workingHoursList,\r\n    theme: \"plain\",\r\n    head: headTable,\r\n    headStyles: { halign: \"center\", valign: \"middle\" },\r\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\r\n    columns: [\r\n      { header: \"No\", dataKey: \"no\" },\r\n      { header: \"NIK\", dataKey: \"employeeNik\" },\r\n      { header: \"Nama Karyawan\", dataKey: \"employeeName\" },\r\n      { header: \"No. Service\", dataKey: \"noService\" },\r\n      { header: \"Nama Customer\", dataKey: \"customerName\" },\r\n      { header: \"Dibuat\", dataKey: \"createdDate\" },\r\n      { header: \"Jam Kerja\", dataKey: \"totalHours\" },\r\n      { header: \"Status\", dataKey: \"status\" },\r\n      { header: \"Tanggal Selesai\", dataKey: \"doneDate\" },\r\n    ],\r\n    willDrawCell: drawCell,\r\n    didParseCell: didParseCell,\r\n    columnStyles: {\r\n      0: { columnWidth: 28 },\r\n      1: { columnWidth: 20 },\r\n      // 2: { halign: \"center\" },\r\n      // 3: { halign: \"center\" },\r\n      // 4: { halign: \"center\" },\r\n      // 5: { halign: \"center\" },\r\n      // 6: { halign: \"center\" },\r\n    },\r\n    tableLineColor: [0, 0, 0],\r\n    tableLineWidth: 0.3,\r\n  });\r\n\r\n  //   Export\r\n  doc.save(\"working-hours.pdf\");\r\n};\r\n","import \"react-toastify/dist/ReactToastify.css\";\n\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer } from \"react-toastify\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport TemplateContainer from \"../modules/Template/Container/TemplateContainer\";\nimport withTemplate from \"./withTemplate\";\n\n// Pages\nimport DashboardContainer from \"../modules/Dashboard/Container/DashboardContainer\";\nimport LoginContainer from \"../modules/Auth/Container/LoginContainer\";\nimport InternalServiceContainer from \"../modules/InternalService/Container/InternalServiceContainer\";\nimport ExternalServiceContainer from \"../modules/ExternalService/Container/ExternalServiceContainer\";\nimport MonitoringEmployeeContainer from \"../modules/MonitoringEmployee/Container/MonitoringEmployeeContainer\";\nimport ReportServiceRepairContainer from \"../modules/ReportServiceRepair/Container/ReportServiceRepairContainer\";\nimport ReportEmployeeContainer from \"../modules/ReportEmployee/Container/ReportEmployeeContainer\";\nimport ListServicesContainer from \"../modules/ListServices/Container/ListServicesContainer\";\nimport AdminContainer from \"../modules/Admin/Container/AdminContainer\";\nimport NotFoundPage from \"../components/NotFound/NotFound\";\nimport AuthMiddleware from \"./AuthMiddleware\";\nimport DetailServiceTransactionContainer from \"../modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer\";\nimport RolesContainer from \"../modules/Roles/Container/RolesContainer\";\nimport EmployeesListContainer from \"../modules/Employees/Container/EmployeesListContainer\";\nimport EmployeeEditContainer from \"../modules/Employees/Container/EmployeeEditContainer\";\nimport BranchContainer from \"../modules/Branch/Container/BranchContainer\";\nimport JobFormsContainer from \"../modules/JobForms/Container/JobFormsContainer\";\nimport FormWizardIdentificationContainer from \"../modules/Identification/Container/Wizard/FormWizardIdentificationContainer\";\nimport ListIdentificationContainer from \"../modules/Identification/Container/ListIdentificationContainer\";\nimport MachineConfigurationContainer from \"../modules/MachineConfiguration/Container/MachineConfigurationContainer\";\nimport UnitsContainer from \"../modules/Units/Container/UnitsContainer\";\nimport CustomerContainer from \"../modules/Customers/Container/CustomerContainer\";\nimport ToolsContainer from \"../modules/Tools/Container/ToolsContainer\";\nimport FormCategoryContainer from \"../modules/FormCategory/Container/FormCategoryContainer\";\nimport UnitModelsContainer from \"../modules/Units/Container/UnitModelsContainer\";\nimport UnitFieldsContainer from \"../modules/Units/Container/UnitFields/UnitFieldsContainer\";\nimport ReportIdentificationContainer from \"../modules/ReportIdentification/Container/ReportIdentificationContainer\";\nimport DivisionContainer from \"../modules/Division/Container/DivisionContainer\";\nimport EmployeeToolsContainer from \"../modules/Employees/Container/EmployeeTools/EmployeeToolsContainer\";\nimport DivisionUnitContainer from \"../modules/Division/Container/DivisionUnit/DivisionUnitContainer\";\nimport DetailServiceReportContainer from \"../modules/ReportPdf/Containers/DetailServiceReportContainer\";\nimport UnitSerialNumberContainer from \"../modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer\";\nimport UnitJobFormsContainer from \"../modules/Units/Container/UnitJobFormsContainer\";\nimport WorkingHoursContainer from \"../modules/WorkingHours/Container/WorkingHoursContainer\";\n\nexport default function Navigation() {\n  const authenticatedPage = (\n    component,\n    footerImg,\n    menuPath = \"\",\n    isSecureRoute = false,\n    footer\n  ) => {\n    return AuthMiddleware(\n      withTemplate(TemplateContainer, component, footerImg, footer),\n      menuPath,\n      isSecureRoute\n    );\n  };\n\n  const templating = (component, isLandingPage) => {\n    return withTemplate(TemplateContainer, component, isLandingPage);\n  };\n\n  const Login = templating(LoginContainer, false);\n  const NotFound = templating(NotFoundPage, false);\n  const Admin = authenticatedPage(AdminContainer, true, \"/admin\", true);\n  const Roles = authenticatedPage(RolesContainer, true, \"/role\", true);\n  const JobForms = authenticatedPage(\n    JobFormsContainer,\n    true,\n    \"/jobforms\",\n    true\n  );\n  const Branches = authenticatedPage(BranchContainer, true, \"/cabang\", true);\n  const EmployeeList = authenticatedPage(\n    EmployeesListContainer,\n    true,\n    \"/employees\",\n    true\n  );\n  const EmployeeTools = authenticatedPage(\n    EmployeeToolsContainer,\n    true,\n    \"/employee-tool\"\n  );\n  const Division = authenticatedPage(\n    DivisionContainer,\n    true,\n    \"/division\",\n    true\n  );\n  const DivisionUnit = authenticatedPage(\n    DivisionUnitContainer,\n    true,\n    \"/division-unit\"\n  );\n  const EditEmployee = authenticatedPage(\n    EmployeeEditContainer,\n    true,\n    \"/edit-employee\"\n  );\n  const Dashboard = authenticatedPage(\n    DashboardContainer,\n    true,\n    \"/dashboard\",\n    false\n  );\n  const Units = authenticatedPage(UnitsContainer, true, \"/unit\", true);\n  const UnitModels = authenticatedPage(\n    UnitModelsContainer,\n    true,\n    \"/unit-models\"\n  );\n  const UnitFields = authenticatedPage(\n    UnitFieldsContainer,\n    true,\n    \"/unit-fields\"\n  );\n  const UnitJobForms = authenticatedPage(\n    UnitJobFormsContainer,\n    true,\n    \"/unit-job-forms\"\n  );\n  const UnitSerialNumber = authenticatedPage(\n    UnitSerialNumberContainer,\n    true,\n    \"/unit-serial-number\"\n  );\n  const Tools = authenticatedPage(ToolsContainer, true, \"/tools\");\n  const Customers = authenticatedPage(CustomerContainer, true, \"/customer\");\n  const FormCategory = authenticatedPage(\n    FormCategoryContainer,\n    true,\n    \"/category\",\n    true\n  );\n  const MachineConfiguration = authenticatedPage(\n    MachineConfigurationContainer,\n    true,\n    \"/machine\",\n    true\n  );\n  const InternalService = authenticatedPage(\n    InternalServiceContainer,\n    true,\n    \"/internal-service\",\n    true\n  );\n  const ExternalService = authenticatedPage(\n    ExternalServiceContainer,\n    true,\n    \"/external-service\",\n    true\n  );\n  const MonitoringEmployee = authenticatedPage(\n    MonitoringEmployeeContainer,\n    true,\n    \"/monitoring-employee\",\n    true\n  );\n  const ReportServiceRepair = authenticatedPage(\n    ReportServiceRepairContainer,\n    true,\n    \"/report_trans\",\n    true\n  );\n  const ReportEmployee = authenticatedPage(\n    ReportEmployeeContainer,\n    true,\n    \"/report_employee\",\n    true\n  );\n  const WorkingHours = authenticatedPage(\n    WorkingHoursContainer,\n    true,\n    \"/working-hours\",\n    true\n  );\n  const ListServices = authenticatedPage(\n    ListServicesContainer,\n    true,\n    \"/list_service\",\n    true\n  );\n  const ReportIdentification = authenticatedPage(\n    ReportIdentificationContainer,\n    true,\n    \"/report_identification\",\n    true\n  );\n  const DetailService = authenticatedPage(\n    DetailServiceTransactionContainer,\n    true,\n    \"/detail-services\"\n  );\n  const FormWizardIdentification = authenticatedPage(\n    FormWizardIdentificationContainer,\n    true,\n    \"/form-identification\"\n  );\n  const ListIdentification = authenticatedPage(\n    ListIdentificationContainer,\n    true,\n    \"/identification\",\n    true\n  );\n\n  return (\n    <>\n      <Helmet titleTemplate=\"PT. Rutan - \" defaultTitle=\"PT. Rutan\"></Helmet>\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates={true}\n        position=\"top-right\"\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"\n        progressBar={true}\n        closeOnToastrClick={true}\n      />\n      <ToastContainer autoClose={2000} />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n        <Route exact path=\"/auth\" component={Login} />\n        <Route exact path=\"/admin\" component={Admin} />\n        <Route exact path=\"/role\" component={Roles} />\n        <Route exact path=\"/cabang\" component={Branches} />\n        <Route exact path=\"/machine\" component={MachineConfiguration} />\n        <Route exact path=\"/jobforms\" component={JobForms} />\n        <Route exact path=\"/unit\" component={Units} />\n        <Route exact path=\"/unit-models\" component={UnitModels} />\n        <Route exact path=\"/unit-fields\" component={UnitFields} />\n        <Route exact path=\"/unit-job-forms\" component={UnitJobForms} />\n        <Route exact path=\"/unit-serial-number\" component={UnitSerialNumber} />\n        <Route exact path=\"/tools\" component={Tools} />\n        <Route exact path=\"/customer\" component={Customers} />\n        <Route exact path=\"/category\" component={FormCategory} />\n        <Route exact path=\"/employees\" component={EmployeeList} />\n        <Route exact path=\"/division\" component={Division} />\n        <Route exact path=\"/division-unit\" component={DivisionUnit} />\n        <Route exact path=\"/edit-employee\" component={EditEmployee} />\n        <Route exact path=\"/internal-service\" component={InternalService} />\n        <Route exact path=\"/external-service\" component={ExternalService} />\n        <Route exact path=\"/employee-tools\" component={EmployeeTools} />\n        <Route\n          exact\n          path=\"/report-transaction\"\n          component={DetailServiceReportContainer}\n        />\n        <Route\n          exact\n          path=\"/monitoring-employee\"\n          component={MonitoringEmployee}\n        />\n        <Route exact path=\"/report_trans\" component={ReportServiceRepair} />\n        <Route exact path=\"/list_service\" component={ListServices} />\n        <Route exact path=\"/detail-services\" component={DetailService} />\n        <Route exact path=\"/report_employee\" component={ReportEmployee} />\n        <Route exact path=\"/working-hours\" component={WorkingHours} />\n        <Route\n          exact\n          path=\"/report_identification\"\n          component={ReportIdentification}\n        />\n        <Route\n          exact\n          path=\"/form-identification\"\n          component={FormWizardIdentification}\n        />\n        <Route exact path=\"/identification\" component={ListIdentification} />\n        <Route path={\"*\"} component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n","import \"react-redux-toastr/lib/css/react-redux-toastr.min.css\";\nimport \"antd/dist/antd.css\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport history from \"./app/History\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./app/ConfigureStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Navigation from \"./app/Navigation\";\n\nfunction App({ context }) {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ConnectedRouter history={history}>\n          <Navigation />\n        </ConnectedRouter>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}