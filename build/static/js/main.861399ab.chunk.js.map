{"version":3,"sources":["app/History.js","app/Saga/AppSaga.js","app/Saga/SagaMiddleware.js","app/axios/ConfigAxios.js","app/axios/Invoke.js","modules/App/Store/ComponentAction.js","modules/Auth/Store/AuthAction.js","modules/Auth/Store/AuthReducer.js","app/Helpers.js","modules/Roles/Store/RolesActions.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionAction.js","modules/ListServices/Store/ListServicesActions.js","modules/ListServices/Store/ListServicesReducer.js","modules/App/Store/ComponentReducer.js","modules/Customers/Store/CustomersActions.js","modules/Customers/Store/CustomersReducer.js","modules/Admin/Store/AdminActions.js","modules/Admin/Store/AdminReducer.js","modules/Roles/Store/RolesReducer.js","modules/MasterData/Store/MasterDataActions.js","modules/Employees/Store/EmployeesActions.js","modules/Employees/Store/EmployeesReducer.js","modules/Employees/Store/EmployeeTools/EmployeeToolsActions.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReducer.js","modules/MasterData/Store/MasterDataReducer.js","modules/Units/Store/UnitsActions.js","modules/Units/Store/UnitsReducer.js","modules/JobForms/Store/JobFormsActions.js","modules/JobForms/Store/JobFormsReducer.js","modules/Branch/Store/BranchActions.js","modules/Branch/Store/BranchReducer.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer.js","modules/Units/Store/UnitModelActions.js","modules/Units/Store/UnitModelReducer.js","modules/ExternalService/Store/ExternalServiceActions.js","modules/ExternalService/Store/ExternalServiceReducer.js","modules/Identification/Store/IdentificationActions.js","modules/Identification/Store/IdentificationReducer.js","modules/MachineConfiguration/Store/MachineConfigurationActions.js","modules/MachineConfiguration/Store/MachineConfigurationReducer.js","modules/Tools/Store/ToolsActions.js","modules/Tools/Store/ToolsReducer.js","modules/FormCategory/Store/FormCategoryActions.js","modules/FormCategory/Store/FormCategoryReducer.js","modules/Units/Store/UnitFieldsActions.js","modules/Units/Store/UnitFieldsReducer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeActions.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReducer.js","modules/ReportServiceRepair/Store/ReportServiceRepairActions.js","modules/ReportServiceRepair/Store/ReportServiceRepairReducer.js","modules/ReportEmployee/Store/ReportEmployeeActions.js","modules/ReportEmployee/Store/ReportEmployeeReducer.js","modules/Division/Store/DivisionActions.js","modules/Division/Store/DivisionReducer.js","modules/Division/Store/DivisionUnitActions.js","modules/Division/Store/DivisionUnitReducer.js","modules/Dashboard/Store/DashboardActions.js","modules/Dashboard/Store/DashboardReducer.js","modules/Units/Store/UnitSerialNumberActions.js","modules/Units/Store/UnitSerialNumberReducer.js","modules/Units/Store/UnitJobFormActions.js","modules/Units/Store/UnitJobFormsReducer.js","modules/WorkingHours/Store/WorkingHoursActions.js","modules/WorkingHours/Store/WorkingHoursReducer.js","app/RootReducers.js","app/ConfigureStore.js","app/FormHelpers.js","components/CGlobalOverlay/CGlobalOverlay.tsx","components/Sidebar/Sidebar.js","components/Footer/Footer.js","components/Navbar/Navbar.js","modules/Template/Component/TemplateComponent.js","modules/Auth/Selector/AuthSelector.js","modules/App/Selector/AppSelector.js","modules/Template/Container/TemplateContainer.js","app/withTemplate.js","components/CButton/CButtonAntd.tsx","modules/Dashboard/Component/DashboardComponent.js","app/InitializeApp.js","modules/Dashboard/Container/DashboardContainer.js","components/CInput/CInput.tsx","modules/Auth/Component/LoginComponent.js","app/validateForm.js","modules/Auth/Container/LoginContainer.js","components/CSelect/CSelect.js","components/CDatePicker/CDatePicker.js","components/CButton/CButton.tsx","modules/InternalService/Component/InternalServiceComponent.js","modules/InternalService/Store/InternalServiceActions.js","modules/InternalService/Container/InternalServiceContainer.js","modules/ExternalService/Component/ExternalServiceComponent.js","modules/ExternalService/Container/ExternalServiceContainer.js","modules/MonitoringEmployee/Component/MonitoringEmployeeComponent.js","modules/MonitoringEmployee/Container/MonitoringEmployeeContainer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReport.js","modules/ReportServiceRepair/Component/ReportServiceRepairComponent.js","modules/ReportServiceRepair/Container/ReportServiceRepairContainer.js","modules/ReportEmployee/Component/ReportEmployeeComponent.js","modules/ReportEmployee/Container/ReportEmployeeContainer.js","modules/ListServices/Component/ListServicesComponent.js","modules/ListServices/Container/ListServicesContainer.js","components/CTable/CTableAntd.js","components/CModal/CModal.tsx","modules/Admin/Component/AdminModalComponent.js","modules/Admin/Container/AdminModalContainer.js","modules/Admin/Component/AdminComponent.js","modules/Admin/Container/AdminContainer.js","components/NotFound/NotFound.js","app/AuthMiddleware.js","components/CBadgeText/CBadgeText.tsx","modules/DetailServiceTransaction/Component/AddEmployeeModalComponent.js","modules/DetailServiceTransaction/Container/AddEmployeeModalContainer.js","property/colors.js","modules/DetailServiceTransaction/Component/RejectedModalComponent.js","modules/DetailServiceTransaction/Container/RejectedModalContainer.js","modules/DetailServiceTransaction/Component/EditModalTransactionComponent.js","modules/DetailServiceTransaction/Container/EditModalTransactionContainer.js","modules/DetailServiceTransaction/Component/EditModalDailiesComponent.js","modules/DetailServiceTransaction/Container/EditModalDailiesContainer.js","modules/DetailServiceTransaction/Component/DetailServiceTransactionComponent.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelEmployeeComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelEmployeeContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelSummaryComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelSummaryContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelImagesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelImagesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelDailiesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelDailiesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelHistoriesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelHistoriesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelRejectionsComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelRejectionsContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelChecklistComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelChecklistContainer.js","modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer.js","modules/Roles/Component/RolesEditModalComponent.js","modules/Roles/Container/RolesEditModalContainer.js","modules/Roles/Component/RolesComponent.js","modules/Roles/Container/RolesContainer.js","modules/Employees/Component/EmployeesListComponent.js","modules/Employees/Container/EmployeesListContainer.js","modules/Employees/Component/EmployeeEditComponent.js","modules/Employees/Container/EmployeeEditContainer.js","modules/Branch/Component/BranchModalComponent.js","modules/Branch/Container/BranchModalContainer.js","modules/Branch/Component/BranchComponent.js","modules/Branch/Container/BranchContainer.js","modules/JobForms/Component/JobFormsModalComponent.js","modules/JobForms/Container/JobFormsModalContainer.js","modules/JobForms/Component/JobFormsComponent.js","modules/JobForms/Container/JobFormsContainer.js","modules/Identification/Component/Wizard/ContentStepOneComponent.js","modules/Identification/Component/Wizard/ContentUnitComponent.js","modules/Identification/Component/Wizard/ContentSparePartComponent.js","modules/Identification/Component/Wizard/FormWizardIdentificationComponent.js","modules/Identification/Component/Wizard/ContentMachineConfigurationComponent.js","modules/Identification/Component/Wizard/ContentStepOneRegularComponent.js","modules/Identification/Container/Wizard/FormWizardIdentificationContainer.js","modules/Identification/Component/IdentificationModalComponent.js","modules/Identification/Container/IdentificationModalContainer.js","modules/Identification/Component/ListIdentificationComponent.js","modules/Identification/Container/ListIdentificationContainer.js","modules/MachineConfiguration/Component/MachineConfigurationModalComponent.js","modules/MachineConfiguration/Container/MachineConfigurationModalContainer.js","modules/MachineConfiguration/Component/MachineConfigurationComponent.js","modules/MachineConfiguration/Container/MachineConfigurationContainer.js","modules/Units/Component/UnitsModalComponent.js","modules/Units/Container/UnitsModalContainer.js","modules/Units/Component/UnitsComponent.js","modules/Units/Container/UnitsContainer.js","modules/Customers/Component/CustomerModalComponent.js","modules/Customers/Container/CustomerModalContainer.js","modules/Customers/Component/CustomerComponent.js","modules/Customers/Container/CustomerContainer.js","modules/Tools/Component/ToolsModalComponent.js","modules/Tools/Container/ToolsModalContainer.js","modules/Tools/Component/ToolsComponent.js","modules/Tools/Container/ToolsContainer.js","modules/FormCategory/Component/FormCategoryModalComponent.js","modules/FormCategory/Container/FormCategoryModalContainer.js","modules/FormCategory/Component/FormCategoryComponent.js","modules/FormCategory/Container/FormCategoryContainer.js","modules/Units/Component/UnitsModelsModalComponent.js","modules/Units/Container/UnitModelsModalContainer.js","modules/Units/Component/UnitModelsComponent.js","modules/Units/Container/UnitModelsContainer.js","modules/Units/Component/UnitFields/UnitFieldsModalComponent.js","modules/Units/Container/UnitFields/UnitFieldsModalContainer.js","modules/Units/Component/UnitFields/UnitFieldsComponent.js","modules/Units/Container/UnitFields/UnitFieldsContainer.js","modules/ReportIdentification/Store/ReportIdentificationActions.js","modules/ReportIdentification/Component/ReportIdentificationComponent.js","modules/ReportIdentification/Container/ReportIdentificationContainer.js","modules/Division/Component/DivisionModalComponent.js","modules/Division/Container/DivisionModalContainer.js","modules/Division/Component/DivisionComponent.js","modules/Division/Container/DivisionContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsModalComponent.js","modules/Employees/Container/EmployeeTools/EmployeeToolsModalContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsComponent.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReport.js","modules/Employees/Container/EmployeeTools/EmployeeToolsContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitModalComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitModalContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitContainer.js","modules/ReportPdf/Components/DetailServiceReportComponent.js","modules/ReportPdf/Containers/DetailServiceReportContainer.js","modules/Units/Component/UnitSerialNumber/ModalUnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/ModalUnitSerialNumberContainer.js","modules/Units/Component/UnitSerialNumber/UnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer.js","modules/Units/Component/UnitJobFormsComponent.js","modules/Units/Container/UnitJobFormsContainer.js","modules/WorkingHours/Component/WorkingHoursComponent.js","modules/WorkingHours/Container/WorkingHoursContainer.js","modules/WorkingHours/Store/WorkingHoursReport.js","app/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["history","createBrowserHistory","basename","handleErrorProcess","handleErrorAction","action","errorData","response","undefined","toastrConfirmOptions","onOk","window","location","reload","okText","disableCancel","toastr","confirm","error","responseStatus","status","console","log","data","ErrorCode","toastMessage","class","id","MessageKey","dataErr","Data","Failures","ErrorKey","Message","toast","takeEvery","all","fork","ConfigAxios","axios","create","baseURL","headers","Accept","timeout","defaults","delete","interceptors","request","use","requestFulfilled","method","Promise","resolve","requestRejected","_","isEmpty","reject","responseFulfilled","responseRejected","warning","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Invoke","headersConfigDelete","submitLogin","post","submitLoginEmployee","getListServices","page","limit","keyword","type","employeeId","get","deleteJobServiceById","jobId","getOneServices","getListAdmin","getAdminById","adminId","addAdmin","updateAdmin","put","deleteAdminById","getListAdminRoles","getAdminRolesById","customerId","addAdminRoles","updateAdminRoles","deleteAdminRolesById","getEmployeeRoles","getEmployeeTools","addEmployeeRole","deleteEmployeeRole","getCustomerList","branchId","getCustomerById","addCustomer","updateCustomer","deleteCustomerById","getEmployeeList","roleId","divisionId","getEmployeeById","addEmployee","updateEmployee","deleteEmployeeById","getListEmployeeTools","getEmployeeToolsById","addEmployeeTools","updateEmployeeTools","deleteEmployeeToolsById","employeeToolsId","getListRole","getRoleById","addRole","updateRole","deleteRoleById","getProvinceList","getCityList","provinceId","getDashboardProgressData","addInternalService","updateJobService","setFinishedService","setApprovedService","setRejectedService","payload","getServicesEmployee","addNewEmployeeService","setStatusEmployeeService","getJobServiceSummary","unitId","getJobServiceMedia","getJobServiceDailies","updateJobServiceDailies","getChecklistData","unitModelId","getRejectedData","getJobServiceHistories","getUnitList","addUnit","updateUnit","deleteUnitById","getListUnitModel","addUnitSerialNumber","updateUnitSerialNumber","unitSerialNumberId","deleteUnitSerialNumber","getUnitSerialNumber","addUnitModel","updateUnitModel","deleteUnitModelById","getListUnitFields","getListUnitJobForms","jobFormId","addUnitFields","updateUnitFields","deleteUnitFieldsById","unitfieldsId","getListJobForm","keyowrd","addJobForms","updateJobForms","deleteJobForms","jobFormsId","getListBranch","deleteBranchById","addBranch","updateBranch","getListMenu","addMenuRole","getMenuByRoleId","deleteMenuByMenuRoleId","menuRoleId","getListEngine","addEngine","updateEngine","deleteEngine","machineId","getListTools","addTool","updateTool","deleteTool","toolId","getFormCategory","addFormCategory","updateFormCategory","deleteFormCategory","categoryFormId","getIdentificationList","addIdentification","updateIdentificationMilling","updateIdentificationRegular","deleteIdentificationById","identificationId","getDivisionList","addDivision","updateDivision","deleteDivision","getDivisionUnitList","addDivisionUnit","getReportMonitoringEmployee","from","until","getReportServiceRepair","getReportEmployee","getWorkingHours","getTransactionPdfUrl","downloadPdfFromUrl","url","responseType","PROCESS_GLOBAL_LOADING","PROCESS_FORM_GLOBAL_LOADING","SHOW_GLOBAL_MODAL","RESET_ALL_LOADING","setGlobalLoading","setGlobalModal","setGlobalFormLoading","resetAllGlobalLoadingProcess","dispatch","store","SET_ACCESS_TOKEN_DATA","SET_USER_DETAIL_DATA","SET_ERROR_LOGIN","setUserDetail","setErrorLogin","appendItem","a","callback","accessToken","handleSubmitLogin","values","username","password","then","setTimeout","push","catch","onRejected","dataResponseRejected","initialState","userDetail","avatar","navigate","path","getIndex","currentpage","pageNumbers","startIndex","endIndex","i","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","SelectLocation","value","label","SelectType","SelectInstanceType","SelectStatus","SelectStatusServices","SelectStatusMilling","SelectInstanceTypeRegular","SelectMilling","enumTypeInternalServices","enumTypeExternalServices","enumWarranty","warrantyMonths","toString","getProvinceEnum","SelectProvince","map","item","index","name","getCitiesEnum","SelectCities","enumSelectGenerator","enumName","SelectEnum","getUnitModelEnum","SelectUnitModel","getMachineConf","SelectMachines","replace","toLowerCase","getStatus","statusItem","toUpperCase","color","getStatusWorkingHours","categoryServices","categoryMonitoringServices","enumTypeMonitoringEmployee","isBlockedRoleCustomer","role","isBlocked","SET_LIST_ROLES","SET_SELECTED_ROLE_ID","SET_SELECTED_ROLE_DETAIL","SET_FORM_STATUS","RESET_STATE","SET_SELECTED_ROLE_MENU","setSelectedRoleId","setFormStatus","setSelectedRoleDetail","setSelectedRoleMenu","showToast","success","getListRolesRequested","mapDetailRoleToForm","getState","roles","selectedRoleDetail","change","description","getMenuByRolesId","subItem","menu_id","resetForm","doAddRoleProcess","menuSelected","splitDescription","split","length","replaceAll","ComponentActions","doDeleteMenuRoleProcess","menuId","menuListApi","filter","x","menu","doAddMenuRoleProcess","role_id","view","insert","update","doSaveMenuRole","newMenuSelected","currentMenuSelected","selectedRoleMenu","selectedRoleId","newMenu","doEditRoleProcess","doDeleteRoleProcess","deleteRoleRequested","cancelText","saveRoleRequested","SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA","SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA","SET_GROUPING_SUMMARY_DATA","SET_GROUPING_CHECKLIST_DATA","SET_SELECTED_SERVICES_SUMMARY_DATA","SET_SELECTED_SERVICES_MEDIA_DATA","SET_SELECTED_SERVICES_DAILIES_DATA","SET_SELECTED_SERVICES_HISTORIES_DATA","SET_SELECTED_SERVICES_CHECKLIST_DATA","SET_SELECTED_SERVICES_REJECTED_DATA","SET_EDIT_TRANSACTION_MODAL","SET_REJECTIONS_MODAL","SET_EDIT_DAILIES_MODAL","SET_SELECTED_EDIT_DAILIES_DATA","SET_SELECTED_UNIT","RESET_DETAIL_SERVICE","setRejectionsModal","setEditTransactionModal","setGroupingSummaryData","setGroupingChecklistData","setEditDailiesModal","setSelectedServicesEmployeeListData","setSelectedServiceDailiesData","setSelectedServiceHistoriesData","getJobServiceEmployeeList","serviceEmployeeList","results","subIitem","active","employee_service_id","employee_id","employee","logs","getJobServiceRejections","handleAddNewEmployeeService","setStatusEmployee","employeeServiceId","isActive","doRejectServiceProcess","reason","doEditServiceProcess","warranty","warrantyYears","start","moment","startDate","format","due","dueDate","job_perform","jobPerform","warranty_month","warranty_year","setSelectedJobService","units","unit_models","handlePressEditRequested","handlePressRejectedRequested","doEditDailiesProcess","dataService","services","selectedJobService","title","daily_start","daily_end","endDate","handlePressEditDailiesRequested","mapDetailTransactionToForm","end","mapDailiesToForm","detailService","selectedEditDailies","mulai","selesai","deskripsi","downloadTransactionPdf","dataTransactionPdf","downloadUrl","pdf","fileDownload","filename","SET_LIST_SERVICES","SET_SELECTED_JOB_SERVICE","SET_PAGING_LIST_SERVICE","SET_SELECTED_JOB_SERVICE_ID","SET_DASHBOARD_LIST_SERVICES","setListServices","setPagingListService","setSelectedJobServiceId","getListServicesRequested","paging","totalPage","getTopTenService","handleSearch","filterValues","splitTypeService","typeService","splitStatusService","statusService","handlePressEdit","doDeleteJobServiceProcess","deleteJobServiceRequested","handlePressActionsRequested","doCallActionProcess","listServices","dashboardListServices","selectedJobServiceId","isLoadingGlobal","isLoadingFormGlobal","isModalVisible","SET_CUSTOMER_LIST_DATA","SET_PAGING_CUSTOMER","SET_SELECTED_CUSTOMER_DATA","SET_SELECTED_CUSTOMER_ID","SET_CUSTOMER_LIST_DATA_DROPDOWN","setCustomerListData","setCustomerListDataDropdown","setPagingCustomer","setSelectedCustomerData","setSelectedCustomerId","getCustomerListDataByPaging","isDropdownData","doDeleteCustomerProcess","branch","doAddCustomerProcess","customers","province","cityId","city","branch_id","province_id","city_id","phone","work_hour","workHour","pic","pic_phone","picPhone","address","doEditBranchProcess","saveCustomerRequested","mapDetailCustomerToForm","selectedCustomerData","province_name","city_name","branch_name","deleteCustomerRequested","listCustomers","listCustomersDropdown","formStatus","selectedCustomerId","SET_LIST_ADMIN","SET_PAGING_ADMIN","SET_SELECTED_ADMIN_ID","SET_SELECTED_ADMIN_DATA","setListAdmin","setPagingAdmin","setSelectedAdminId","setSelectedAdminData","getListAdminRequested","doAddAdminProcess","admins","fullname","doEditAdminProcess","doDeleteAdminProcess","saveAdminRequested","mapDetailAdminToForm","selectedAdminData","deleteAdminRequested","listAdmin","selectedAdminId","listRoles","SET_PROVINCE_LIST_DATA","SET_CITY_LIST_DATA","SET_MENU_LIST_DATA","setCityListData","loadProvinceListData","loadCityListData","loadMenuListData","SET_EMPLOYEE_LIST_DATA","SET_SELECTED_EMPLOYEE_ID","SET_SELECTED_EMPLOYEE_DATA","SET_SELECTED_ROLE_EMPLOYEE","SET_PAGING_EMPLOYEES","SET_EMPLOYEE_LIST_DROPDOWN","setEmployeeListData","setSelectedEmployeeId","setSelectedEmployeeData","setSelectedRoleEmployee","setPagingEmployees","loadEmployeeListData","loadEmployeeDataDropdown","getEmployeeDataByIdRequested","getRolesByEmployeeId","setAutoPopulateEmployee","selectedEmployeeData","employees","listBranch","defaultBranch","MasterDataActions","doAddEmployeeProcess","selectedRoles","nik","photo","imageUrl","doEditEmployeeProcess","roleSelected","doSaveEmployeeRole","doAddEmployeeRoleProcess","newRoleId","doDeleteAllEmployeeRoleProcess","roleListApi","doDeleteEmployeeProcess","newRoleSelected","currentRoleSelected","selectedRoleEmployee","selectedEmployeeId","saveEmployeeRequested","mapDetailEmployeeToForm","deleteEmployeeRequested","splitRole","splitBranch","splitDivision","division","listEmployees","listEmployeeDropdown","SET_EMPLOYEE_TOOL_LIST_DATA","SET_SELECTED_EMPLOYEE_TOOLS_ID","SET_SELECTED_EMPLOYEE_TOOLS_DATA","SET_PAGING_EMPLOYEE_TOOLS","setEmployeeToolsListData","setSelectedEmployeeToolsId","setSelectedEmployeeToolsData","setPagingEmployeeTools","getEmployeeToolsRequested","doAddEmployeeToolsProcess","slpitToolsId","tools","tool_id","doEditEmployeeToolsProcess","splitTools","doDeleteEmployeeToolsProcess","employeeTools","saveEmployeeToolsRequested","mapDetailEmployeeToolsToForm","selectedEmployeeToolsData","deleteEmployeeToolsRequested","listEmployeeTools","selectedEmployeeToolsId","listProvince","listCity","listMenu","SET_UNIT_LIST_DATA","SET_SELECTED_UNIT_ID","SET_SELECTED_UNIT_DATA","SET_PAGING_UNIT","setUnitListData","setPagingUnit","setSelectedUnitId","setSelectedUnitData","doDeleteUnitProcess","getUnitListDataRequested","doAddUnitProcess","doEditUnitProcess","mapDetailUnitToForm","selectedUnitsData","saveUnitRequested","deleteUnitRequested","listUnits","selectedUnitsId","SET_JOB_FORMS_LIST_DATA","SET_SELECTED_JOB_FORMS_ID","SET_SELECTED_JOB_FORMS_DATA","SET_PAGING_JOB_FORM","setJobFormsListData","setPagingJobForm","setSelectedJobFormsId","setSelectedJobFormsData","doDeleteBranchProcess","getJobFormsListDataRequested","doAddJobFormsProcess","doEditJobFormsProcess","mapDetailJobFormsToForm","jobForms","selectedJobFormsData","saveJobFormsRequested","deleteJobFormsRequested","listJobForms","selectedJobFormsId","SET_BRANCH_LIST_DATA","SET_SELECTED_BRANCH_ID","SET_SELECTED_BRANCH_DATA","SET_PAGING_BRANCH","SET_BRANCH_LIST_DATA_DROPDOWN","setBranchListData","setBranchListDataDropdown","setPagingBranch","setSelectedBranchId","setSelectedBranchData","getBranchListDataRequested","doAddBranchProcess","mapDetailBranchToForm","selectedBranchData","isDropdown","saveBranchRequested","deleteBranchRequested","listBranchDropdown","selectedBranchId","selectedServiceEmployeeList","selectedServiceSummary","selectedServiceMedia","groupingSelectedServiceMedia","groupingSelectedServiceSummary","groupingSelectedServiceChecklist","selectedServiceDailies","selectedServiceHistories","selectedServiceChecklist","selectedServiceRejected","rejectionsModal","editTransactionModal","editDailiesModal","selectedUnit","SET_UNIT_MODEL_LIST_DATA","SET_SELECTED_UNIT_MODEL_ID","SET_SELECTED_UNIT_MODEL_DATA","SET_PAGING_UNIT_MODEL","setUnitModelListData","setPagingUnitModel","setSelectedUnitModelId","setSelectedUnitModelData","getUnitModelListDataRequested","doAddUnitModelsProcess","unitModels","unit_id","descriptions","serial_number","serialNumber","machine_no","machineNo","engine_model","engineModel","engine_no","engineNo","chasis_no","chasisNo","transmission_no","transmissionNo","doEditUnitModelsProcess","doDeleteUnitModelsProcess","saveUnitModelsRequested","deleteUnitModelRequested","mapDetailUnitModelToForm","selectedUnitModelsData","listUnitModels","selectedUnitModelsId","SET_ENUM_UNIT_MODEL","getEmployeeByIdFromReducer","tempData","getProvinceByIdFromReducer","masters","setAutoPopulateUnitModel","fieldIndex","indexEmployee","employeeData","provinceData","cityData","filteredCity","citySelected","setAutoPopulateCustomer","customersData","handleSubmitForm","splitCustomerId","customer","splitTypeId","splitWarranty","splitEmployeeId","unitList","splitUnitModel","unit_model_id","customer_id","job_form_id","uuidv4","identification_id","is_external","customerLocation","functionThatReturnPromise","reset","promise","pending","enumUnitModel","SET_IDENTIFICATIONN_LIST_DATA","SET_SELECTED_IDENTIFICATION_ID","SET_PAGING_IDENTIFICATION","SET_SELECTED_IDENTIFICATION_DATA","setIdentificationListData","setSelectedIdentificationId","setSelectedIdentificationData","getIdentificationListRequested","branches","identificationList","newIdentificationList","doDeleteIdentificationProcess","identification","doAddIdentificationProcess","splitCustomer","splitLocation","splitMilling","milling","splitType","doUpdateIdentificationMilling","isLastStep","selectedIdentificationId","splitInstanceType","instanceType","splitMillingStatus","millingStatus","splitCity","splitProvince","engineConfs","engine_confs","list","engine_conf_id","instance_type","instance_name","instanceName","customerName","ktp_npwp","milling_capacity","millingCapacity","milling_work_capacity_perday","millingWorkCapacityPerDay","rice_trademark","riceTrademark","history_service_place","history_service_type","notes","note","spare_part_needs","spare_part_changing_histories","spare_part_selling_histories","doUpdateIdentificationRegular","isFinished","instance_address","instanceAddress","address_district","address_city","address_province","address_subdistrict","kelurahan","address_postal_code","postalCode","instancePhoneNumber","product_name","productName","buy_date","assistance_date","machine_number","gearbox_number","production_unit_year","work_hour_per_day","hour_meter","saveIdentificationRequested","isMilling","selectedIdentificationData","deleteIdentificationRequested","listIdentification","SET_MACHINE_LIST_DATA","SET_SELECTED_MACHINE_ID","SET_SELECTED_MACHINE_DATA","SET_PAGING_MACHINE_CONF","setMachineListData","setPagingMachineConf","setSelectedMachineId","setSelectedMachineData","doDeleteMachineProcess","getMachineListDataRequested","doAddMachineProcess","doEditMachineProcess","mapDetailMachineToForm","machineConfiguration","selectedMachineData","saveMachineRequested","deleteMachineRequested","listMachine","selectedMachineId","SET_TOOLS_LIST_DATA","SET_SELECTED_TOOLS_ID","SET_SELECTED_TOOLS_DATA","SET_PAGING_TOOLS","setToolsListData","setPagingTools","setSelectedToolsId","setSelectedToolsData","doDeleteToolsProcess","toolsId","getToolsListDataRequested","doAddToolsProcess","doEditToolsProcess","mapDetailToolsToForm","selectedToolsData","saveToolsRequested","deleteToolsRequested","listTools","selectedToolsId","SET_FORM_CATEGORY_LIST_DATA","SET_SELECTED_FORM_CATEGORY_ID","SET_SELECTED_FORM_CATEGORY_DATA","SET_PAGING_FORM_CATEGORY","setFormCategoryListData","setPagingFormCategory","setSelectedFormCategoryId","setSelectedFormCategoryData","doDeleteFormCategoryProcess","getFormCatgeoryListDataRequested","doAddFormCategoryProcess","doEditFormCategoryProcess","mapDetailCategoryToForm","formCategory","selectedFormCategoryData","saveFormCategoryRequested","deleteFormCategoryRequested","formCategoryId","listFormCategory","selectedFormCategoryId","SET_UNIT_FIELDS_LIST_DATA","SET_SELECTED_UNIT_FIELDS_ID","SET_SELECTED_UNIT_FIELDS_DATA","SET_PAGING_UNIT_FIELDS","setUnitFieldsListData","setPagingUnitFields","setSelectedUnitFieldsId","setSelectedUnitFieldsData","getUnitFieldsListDataRequested","doAddUnitFieldsProcess","unitFields","splitCategoryFormId","splitjobFormId","jobForm","fieldName","category_form_id","doEditUnitFieldsProcess","doDeleteUnitFieldsProcess","unitFieldId","saveUnitFieldsRequested","deleteUnitFieldRequested","mapDetailUnitFieldToForm","selectedUnitFieldsData","job_form_name","category_form_name","listUnitFields","selectedUnitFieldsId","SET_MONITORING_EMPLOYEE_LIST_DATA","SET_PAGING_MONITORING_EMPLOYEE","setMonitoringEmployeeListData","setPagingMonitoringEmployee","getMonitoringEmployeeListDataRequested","monitoringEmployee","newListMonitoringEmployee","itemData","indexData","created_date","date","listMonitoringEmployee","SET_SERVICE_REPAIR_LIST_DATA","SET_PAGING_SERVICE_REPAIR","setServiceRepairListData","setPagingServiceRepair","getServiceRepairListDataRequested","serviceRepair","newListServiceRepair","listServiceRepair","SET_REPORT_EMPLOYEE_LIST_DATA","SET_PAGING_REPORT_EMPLOYEE","setReportEmployeeListData","setPagingReportEmployee","getReportEmployeeDataRequested","reportEmployee","newReportEmployee","listReportEmployee","SET_DIVISION_LIST_DATA","SET_SELECTED_DIVISION_ID","SET_SELECTED_DIVISION_DATA","SET_PAGING_DIVISION","setDivisionListData","setPagingDivision","setSelectedDivisionId","setSelectedDivisionData","doDeleteDivisionProcess","getDivisionListDataRequested","doAddDivisionProcess","headDivision","doEditDivisionProcess","mapDetailDivisionToForm","selectedDivisionData","employee_name","saveDivisionRequested","deleteDivisionRequested","listDivision","selectedDivisionId","SET_DIVISION_UNIT_LIST_DATA","SET_SELECTED_DIVISION_UNIT_ID","SET_SELECTED_DIVISION_UNIT_DATA","SET_PAGING_DIVISION_UNIT","setDivisionUnitListData","setPagingDivisionUnit","setSelectedDivisonUnitId","setSelectedDivisionUnitData","getDivisionUnitListRequested","doAddDivisionUnitProcess","divisionUnit","splitUnitId","unit","division_id","doEditDivisionUnitProcess","saveDivisionUnitRequested","listDivisionUnit","selectedDivisionUnitId","selectedDivisionUnitData","SET_DASHBOARD_DATA","dashboardData","SET_UNIT_SERIAL_NUMBER_DATA","SET_SELECTED_UNIT_SERIAL_NUMBER_ID","SET_SELECTED_UNIT_SERIAL_NUMBER_DATA","setUnitSerialNumberData","setSelectedUnitSerialNumberId","setSelectedUnitSerialNumberData","doAddUnitSerialNumberProcess","doEditUnitSerialNumberProcess","unitSerialNumber","selectedUnitSerialNumberId","serialNumberId","saveUnitSerialNumberRequested","mapDetailUnitSerialNumberToForm","selectedUnitSerialNumberData","customer_name","listUnitSerialNumber","SET_UNIT_JOB_FORMS_LIST_DATA","SET_PAGING_UNIT_JOB_FORMS","setUnitJobFormsListData","getUnitJobFormsListDataRequested","listUnitJobForms","SET_WORKING_HOURS_LIST_DATA","setWorkingHoursListData","getWorkingHoursListDataRequested","workingHours","newListWorkingHours","created","done","done_date","listWorkingHours","rootReducer","rootReducers","combineReducers","router","connectRouter","auth","state","newState","Object","assign","externalService","unitJobForms","component","dashboard","form","formReducer","toastrReducer","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","createStore","applyMiddleware","routerMiddleware","persistor","persistStore","run","Saga","Component","props","Overlay","styled","div","CGlobalOverlay","loading","height","width","radius","margin","Sidebar","mainMenu","masterDataMenu","reportMenu","serviceRepairMenu","reportDataMenu","href","icon","Footer","Date","getFullYear","Navbar","onLogout","placeholder","src","alt","onClick","TemplateComponent","children","isGlobalLoading","isLandingPage","logout","Fragment","className","selectorAuth","selectorComponent","mapStateToProps","createStructuredSelector","createSelector","withConnect","connect","authActions","React","useState","setRole","useEffect","menus","getIconName","withTemplate","Template","WrappedComponent","hoistNonReactStatics","CButtonAntd","isLoading","disabled","shape","size","danger","backgroundColor","style","borderColor","block","DashboardComponent","totalCustomer","totalInternalService","totalExternalService","totalIdentification","bordered","columns","dataSource","pagination","pageSizeOptions","showSizeChanger","initializeApp","AdminActions","RoleActions","BranchActions","UnitsActions","MachineConfigurationActions","ListServiceActions","handlePressDelete","jobServiceId","no","keys","toLocaleString","dataIndex","sorter","b","render","items","isExternal","borderRadius","textAlign","unit_name","unit_model_name","align","text","record","EditOutlined","CInput","typeComponent","htmlFor","maxLength","rows","onChange","input","meta","touched","fontSize","labelSize","LoginComponent","handleSubmit","submitForm","onSubmit","Field","validateFormRoles","errors","validateFormUnitModel","validateFormTransaction","EnhanceContainer","valid","AuthActions","reduxForm","validate","FormItem","Form","Item","Option","Select","ASelect","hasFeedback","rest","hasError","invalid","validateStatus","help","CSelect","showSearch","onBlur","e","preventDefault","RenderDatePicker","defaultValue","CDatePicker","CButton","InternalServiceComponent","listEmployee","enumType","handleAutoPopulateEmployee","handleAutoPopulateCustomer","InfoCircleTwoTone","FieldArray","fields","PlusOutlined","itemEmployee","DeleteOutlined","remove","getCityByIdFromReducer","arrVal","InternalServiceActions","ComponentAction","CustomerActions","EmployeeActions","SelectCustomerData","SelectEmployeeData","initialValues","ExternalServiceComponent","listUnit","enumJobForms","handleAutoPopulateUnitModel","externalValues","onChangeUnitModel","handleChangeType","isTroubleShoot","itemUnit","indexUnit","val","selector","formValueSelector","formValues","getFormValues","ExternalServiceActions","enumModel","enumUnit","selectedUnitModel","unitQty","setUnitQty","unitData","setUnitData","setIsTroubleShoot","SelectUnit","SelectJobFormsData","JobFormsActions","totalUnit","handleAddNewUnit","handleSubtractUnit","MonitoringEmployeeComponent","onChangePagination","onSearch","enumBranch","enumTypeReport","handlePressGeneratePdf","orientation","SearchOutlined","FilePdfOutlined","monitoringEmployeeFormValues","getListMonitoringEmployee","MonitoringEmployeeActions","handlePressAddNew","printedData","jd_date","employee_nik","jobType","job_type","models","SelectBranch","nextPage","pageSize","monitoringEmployeeList","job_status","createdDate","doc","jsPDF","setFontSize","setFont","autoTable","startY","body","theme","head","content","rowSpan","halign","colSpan","styles","fillColor","headStyles","valign","overflow","columnWidth","header","dataKey","willDrawCell","dataCell","didParseCell","s","cell","lineColor","lineWidth","font","columnStyles","tableLineColor","tableLineWidth","save","exportMonitoringEmployeePdf","ReportServiceRepairComponent","scroll","serviceRepairFormValues","getListServiceRepair","ReportServiceRepairActions","BookOutlined","fixed","ReportEmployeeComponent","reportEmployeeFormValues","ReportEmployeeActions","technition","Search","Input","ListServiceComponent","enumStatus","total","current","enterButton","listServiceFormValues","user","getListEmployeesDropdown","setisBlocked","renderActionTable","isBlockedRole","isBlockedRoleListService","checkBlockedRole","ListServicesComponent","CTableAntd","renderActions","searchText","searchedColumn","searchInput","useRef","sortDirections","filterIcon","filtered","onFilter","includes","onFilterDropdownVisibleChange","visible","select","highlightStyle","padding","searchWords","autoEscape","textToHighlight","CModal","footer","destroyOnClose","onCancel","RenderFooter","handleSaveForm","RenderContent","formName","AdminModalComponent","handleCancel","enumMenu","AdminComponent","NotFound","AuthMiddleware","ComposedComponent","menuPath","isSecureRoute","isAuthenticated","userRole","userMenus","redirect","redirectToServices","CBadgeText","enumEmployee","AddEmployeeModalComponent","SelectEmployee","DetailServiceTransactionAction","Themes","RejectedModalComponent","DetailServiceTransactionActions","reson","handleClose","CloseOutlined","CheckOutlined","SelectRole","defaultValuesMenu","onChangeRoleMenu","Group","span","typeComponents","EditModalTransactionComponent","menuChecked","handleClearModalContent","SelectMenu","EditModalDailiesComponent","Text","Typography","TabPane","Tabs","DetailServiceTransactionComponent","TabPanel","onChangeTab","goBack","handlePressActions","RenderButtonAction","button","CheckCircleOutlined","CloseCircleOutlined","ArrowLeftOutlined","model","strong","customer_pic_name","defaultActiveKey","tab","EditModalTransactionContainer","Meta","Card","RenderDescription","handlePressNonactive","handlePressActive","TabPanelEmployeeComponent","marginLeft","marginTop","cover","RenderItemSummary","Paragraph","summary","indexText","TabPanelSummaryComponent","summaryArr","alignItems","FileOutlined","gutter","fontWeight","textTransform","plain","unitName","TabPanelSummaryContainer","setSummaryArr","summaryMapping","splitSummary","RenderImage","medias","marginRight","hoverable","TabPanelImagesComponent","CameraOutlined","image","TabPanelImagesContainer","RenderDailies","dailies","karyawan","jam","hours","TabPanelDailiesComponent","handlePressCancel","RenderHistories","histories","user_name","TabPanelHistoriesComponent","TabPanelHistoriesContainer","rejections","TabPanelRejectionsComponent","TabPanelRejectionsContainer","alignContent","justifyContent","TabPanelChecklistComponent","checklistArr","isLoaded","checklist","itemChecklist","indexChecklist","borderBottom","itemFields","indexFields","field_name","checked","is_check","TabPanelChecklistContainer","setchecklistArr","DetailServiceActions","isLoadedChecklist","setIsLoadedChecklist","setIsBlockedRole","FileImageOutlined","FileTextOutlined","UsergroupAddOutlined","CloseSquareOutlined","HistoryOutlined","fromIndex","indexOf","element","splice","callInitialize","EmployeesActions","getGroupingUnitData","groupingMediaList","groupingSummaryList","groupingChecklist","dataMedia","dataSummary","dataChecklist","isBlock","activeTab","RolesEditModalComponent","RolesActions","setMenuSelected","RolesComponent","getListRoles","EmployeeListComponent","enumRoles","enumDivision","employeeFormValues","employeesFormValues","getListEmployees","ToolsActions","handlePressEmployeeTools","SelectRoles","getRolesEnum","SelectDivision","EmployeesListComponent","SettingOutlined","defaultValues","onChangeRoleEmployee","EmployeeEditComponent","enumRole","enumProvince","enumCity","handleUploadPhoto","defaultImage","onChangeProvince","onBackAction","setLoading","setImageUrl","uploadButton","LoadingOutlined","listType","showUploadList","beforeUpload","file","isJpgOrPng","isLt2M","info","originFileObj","resizeMode","heigh","opacity","getDetailEmployee","handleClearSelectedEmployeeRole","listCityState","setListCityState","setRoleSelected","setDefaultImage","SelectEmployeeRole","provinceMapping","detailEmployee","base64","BranchModalComponent","BranchComponent","JobFormsModalComponent","JobFormsComponent","getListJobForms","ContentStepOneComponent","provinces","cities","enumInstanceType","enumStatusMilling","ContentUnitComponent","ContentSparePartComponent","onChangeServiced","isServiced","RenderSparePartSelling","RenderSparePartNeeded","_props","StepsContent","StepsAction","Step","Steps","FormWizardIdentificationComponent","steps","saveFormChanges","setCurrent","ContentMachineConfigurationComponent","machineConf","onAddMachineConf","RenderBodyHusker","ContentStepOneRegularComponent","identificationFormValues","setCities","serviced","setServiced","IdentificationActions","listCustomer","listLocation","listMilling","IdentificationModalComponent","enumCustomers","enumLocation","enumMilling","SelectCustomer","CustomersActions","ListIdentificationComponent","getListIdentification","created_at","MachineConfigurationModalComponent","MachineConfigurationComponent","getListMachine","MachineActions","UnitsModalComponent","UnitsComponent","placement","getListUnit","handlePressUnitModel","handlePressUnitFields","handlePressLink","tooltipText","BoxPlotOutlined","FileAddOutlined","whiteSpace","CustomerModalComponent","CustomerComponent","customerBranchValue","getListCustomer","getListProvince","ToolsModalComponent","ToolsComponent","FormCategoryModalComponent","FormCategoryActions","FormCategoryComponent","getListFormCategory","UnitsModelsModalComponent","UnitModelActions","UnitModelsComponent","getListUnitModels","handlePressSerialNumber","FieldNumberOutlined","enumFormCategory","enumJobForm","UnitFieldsModalComponent","UnitFieldsActions","setFormCategory","setJobForm","loadOption","dataJobForm","listJobForm","SelectFormCategory","SelectJobForm","UnitFieldsComponent","unitFieldsId","setReportIdentificationListData","setPagingReportIdentification","ReportIdentificationComponent","enumHeadDivision","DivisionModalComponent","DivisionActions","SelectEmployees","DivisionComponent","getListDivision","getListEmlpoyee","handlePressDivisionUnit","enumTools","EmployeeToolsModalComponent","EmployeeToolsActions","SelectTools","EmployeeToolsComponent","generateEmployeeToolsReport","newListData","check","drawCell","docCell","section","column","setLineWidth","setFillColor","circle","y","addPage","employeeToolsFormValues","enumUnits","DivisionUnitModalComponent","DivisionUnitActions","SelectUnits","DivisionUnitComponent","getListDivisionUnit","divisionUnitId","StyleSheet","flexDirection","flexGrow","DetailServiceReportComponent","flex","DetailServiceReportContainer","enumCustomer","ModalUnitSerialNumberComponent","UnitSerialNumberActions","UnitSerialNumberComponent","onChangeCustomer","ModalUnitSerialNumberContainer","unitSerialNumberFormValues","selectedtUnitSerialNumber","UnitJobFormsComponent","UnitJobFormsActions","WorkingHoursComponent","workingHoursFormValues","getListWorkingHours","WorkingHoursActions","no_service","total_hours","workingHoursList","employeeNik","employeeName","noService","totalHours","doneDate","exportWorkingHoursReportPdf","Navigation","authenticatedPage","footerImg","TemplateContainer","templating","Login","LoginContainer","NotFoundPage","Admin","AdminContainer","Roles","RolesContainer","JobForms","JobFormsContainer","Branches","BranchContainer","EmployeeList","EmployeesListContainer","EmployeeTools","EmployeeToolsContainer","Division","DivisionContainer","DivisionUnit","DivisionUnitContainer","EditEmployee","EmployeeEditContainer","Dashboard","DashboardContainer","Units","UnitsContainer","UnitModels","UnitModelsContainer","UnitFields","UnitFieldsContainer","UnitJobForms","UnitJobFormsContainer","UnitSerialNumber","UnitSerialNumberContainer","Tools","ToolsContainer","Customers","CustomerContainer","FormCategory","FormCategoryContainer","MachineConfiguration","MachineConfigurationContainer","InternalService","InternalServiceContainer","ExternalService","ExternalServiceContainer","MonitoringEmployee","MonitoringEmployeeContainer","ReportServiceRepair","ReportServiceRepairContainer","ReportEmployee","ReportEmployeeContainer","WorkingHours","WorkingHoursContainer","ListServices","ListServicesContainer","ReportIdentification","ReportIdentificationContainer","DetailService","DetailServiceTransactionContainer","FormWizardIdentification","FormWizardIdentificationContainer","ListIdentification","ListIdentificationContainer","Helmet","titleTemplate","defaultTitle","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","closeOnToastrClick","exact","App","context","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.861399ab.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL || \"\",\n});\nexport default history;\n","// import * as ActionAuth from \"../../Auth/Store/AuthAction\";\n// import * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\n\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { toastr } from \"react-redux-toastr\";\n\n// function* getToken() {\n//   return yield select(AuthSelector.Token());\n// }\n\n// export function* getCommonConfigHeader() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n// }\n// export function* getCommonConfigHeaderFormData() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"multipart/form-data\",\n//     },\n//   };\n// }\n\nexport function* handleErrorProcess(action) {\n  let toastMessage;\n\n  if (!action.errorData.response || action.errorData.response === undefined) {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        window.location.reload();\n      },\n      okText: \"Ya\",\n      disableCancel: true,\n    };\n\n    toastr.confirm(\n      \"Koneksi terputus, cek koneksi anda dan dimuat ulang\",\n      toastrConfirmOptions\n    );\n  }\n\n  if (action.errorData.response) {\n    const error = action.errorData;\n    const responseStatus = error?.response.status;\n    if (responseStatus === 401) {\n      // yield put(ActionAuth.renewToken(action));\n      console.log(\"=== Token Expired!\");\n    } else if (responseStatus === 500) {\n      if (error.response.data.ErrorCode === \"4201\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      }\n      if (error.response.data.ErrorCode === \"5100\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      } else {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error.response.data.MessageKey} />\n          </span>\n        );\n      }\n    } else if (responseStatus === 403) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={\"forbiddenError\"} />\n        </span>\n      );\n    } else {\n      try {\n        const dataErr = error.response.data?.Data?.Failures[0]?.ErrorKey;\n        if (dataErr) {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id={dataErr} />\n            </span>\n          );\n        } else {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id=\"unknownError\" />\n            </span>\n          );\n        }\n      } catch (error) {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error} />\n          </span>\n        );\n      }\n    }\n  } else {\n    if (action.errorData.response.data.Message) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={action.errorData.response.data.Message} />\n        </span>\n      );\n    }\n  }\n  if (toastMessage) {\n    toast.error(toastMessage);\n  }\n}\n\nexport function* handleErrorAction() {\n  yield takeEvery(\"HANDLE_ERROR_SAGA\", handleErrorProcess);\n}\n","import { all, fork } from \"redux-saga/effects\";\n// import {\n//   getUserDetailAction,\n//   loginUserAction,\n//   registerUserAction,\n//   updateUserAction,\n// } from \"../../Auth/Saga/AuthSaga\";\nimport { handleErrorAction } from \"../../app/Saga/AppSaga\";\n\nexport default function* () {\n  yield all([\n    fork(handleErrorAction),\n    // fork(registerUserAction),\n    // fork(getUserDetailAction),\n    // fork(loginUserAction),\n    // fork(updateUserAction),\n  ]);\n}\n","// First we need to import axios.js\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\n\n// Next we make an 'instance' of it\nconst ConfigAxios = axios.create({\n  // .. where we make our configurations\n  baseURL: \"http://103.158.192.161:3000\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Authorization\",\n  },\n  timeout: 15000,\n});\nConfigAxios.defaults.headers.delete = {\n  \"Content-Type\": \"application/json\",\n};\n\n// Where you would set stuff like your 'Authorization' header, etc ...\n// ConfigAxios.defaults.headers.common[\"Authorization\"] =\n//   \"AUTH TOKEN FROM INSTANCE\";\n\n// Also add/ configure interceptors && all the other cool stuff\nConfigAxios.interceptors.request.use(\n  (requestFulfilled) => {\n    if (requestFulfilled.method === \"get\") {\n      requestFulfilled.data = true;\n    }\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(requestFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-request-fulfilled\",\n        JSON.parse(JSON.stringify(requestFulfilled))\n      );\n    }\n    return Promise.resolve(requestFulfilled);\n  },\n  (requestRejected) => {\n    if (!_.isEmpty(requestRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-request-rejected\",\n          JSON.parse(\n            JSON.stringify(requestRejected.response || requestRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(requestRejected);\n  }\n);\n\nConfigAxios.interceptors.response.use(\n  (responseFulfilled) => {\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(responseFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-response-fulfilled\",\n        JSON.parse(JSON.stringify(responseFulfilled))\n      );\n    }\n    return Promise.resolve(responseFulfilled);\n  },\n  (responseRejected) => {\n    if (responseRejected.response && responseRejected.response.data) {\n      if (responseRejected.response.data.status === 400) {\n        toast.warning(responseRejected.response.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      } else {\n        toast.error(\"Request Timeout!\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n    if (!_.isEmpty(responseRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-response-rejected\",\n          JSON.parse(\n            JSON.stringify(responseRejected.response || responseRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(responseRejected);\n  }\n);\n\nexport default ConfigAxios;\n","import ConfigAxios from \"./ConfigAxios\";\n\nconst Invoke = {};\nconst headersConfigDelete = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  data: {},\n};\n\nInvoke.submitLogin = (data) => {\n  return ConfigAxios.post(\"/login\", data);\n};\n\nInvoke.submitLoginEmployee = (data) => {\n  return ConfigAxios.post(\"/m_auth\", data);\n};\n\nInvoke.getListServices = (page, limit, keyword, type, status, employeeId) => {\n  return ConfigAxios.get(\n    `/services?page=${page}&limit=${limit}&q=${keyword}&type=${type}&status=${status}&employeeId=${employeeId}`\n  );\n};\n\nInvoke.deleteJobServiceById = (jobId) => {\n  return ConfigAxios.delete(`/services/${jobId}`, headersConfigDelete);\n};\n\nInvoke.getOneServices = (jobId) => {\n  return ConfigAxios.get(`/services/${jobId}`);\n};\n\n// === Admin API : ===\nInvoke.getListAdmin = (page, limit, keyword = \"\") => {\n  return ConfigAxios.get(`/admins?page=${page}&limit=${limit}&q=${keyword}`);\n};\n\nInvoke.getAdminById = (adminId) => {\n  return ConfigAxios.get(`/admins/${adminId}`);\n};\n\nInvoke.addAdmin = (data) => {\n  return ConfigAxios.post(\"/admins\", data);\n};\n\nInvoke.updateAdmin = (data) => {\n  return ConfigAxios.put(\"/admins\", data);\n};\n\nInvoke.deleteAdminById = (adminId) => {\n  return ConfigAxios.delete(`/admins/${adminId}`, headersConfigDelete);\n};\n// === End Admin API ===\n\n// === Admin - Roles API : ===\nInvoke.getListAdminRoles = (adminId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${adminId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getAdminRolesById = (customerId) => {\n  return ConfigAxios.get(`/admins/roles${customerId}`);\n};\n\nInvoke.addAdminRoles = (data) => {\n  return ConfigAxios.post(\"/admins/roles\", data);\n};\n\nInvoke.updateAdminRoles = (data) => {\n  return ConfigAxios.put(\"/admins/roles\", data);\n};\n\nInvoke.deleteAdminRolesById = (customerId) => {\n  return ConfigAxios.delete(`/admins/roles${customerId}`);\n};\n// === End Admin - Roles API ===\n\n// === Employee - Roles API : ===\nInvoke.getEmployeeRoles = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\n// === Employee - Tools API : ===\nInvoke.getEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/tools/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.addEmployeeRole = (data) => {\n  return ConfigAxios.post(`/employees/roles`, data);\n};\n\nInvoke.deleteEmployeeRole = (id) => {\n  return ConfigAxios.delete(`/employees/roles/${id}`, headersConfigDelete);\n};\n// === End Employee - Roles API ===\n\n// === Customers API ===\nInvoke.getCustomerList = (page, limit, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/customers?page=${page}&limit=${limit}&q=${keyword}&branchId=${branchId}`\n  );\n};\nInvoke.getCustomerById = (customerId) => {\n  return ConfigAxios.get(`/customers/${customerId}`);\n};\n\nInvoke.addCustomer = (data) => {\n  return ConfigAxios.post(\"/customers\", data);\n};\n\nInvoke.updateCustomer = (data) => {\n  return ConfigAxios.put(\"/customers\", data);\n};\n\nInvoke.deleteCustomerById = (customerId) => {\n  return ConfigAxios.delete(`/customers/${customerId}`, headersConfigDelete);\n};\n// === End Customers API ===\n\n// === Employee API === :\nInvoke.getEmployeeList = (\n  page,\n  limit,\n  keyword,\n  roleId,\n  branchId,\n  divisionId\n) => {\n  return ConfigAxios.get(\n    `/employees?page=${page}&limit=${limit}&q=${keyword}&role_id=${roleId}&branch_id=${branchId}&division_id=${divisionId}`\n  );\n};\n\nInvoke.getEmployeeById = (employeeId) => {\n  return ConfigAxios.get(`/employees/${employeeId}`);\n};\n\nInvoke.addEmployee = (data) => {\n  return ConfigAxios.post(\"/employees\", data);\n};\n\nInvoke.updateEmployee = (data) => {\n  return ConfigAxios.put(\"/employees\", data);\n};\n\nInvoke.deleteEmployeeById = (employeeId) => {\n  return ConfigAxios.delete(`/employees/${employeeId}`, headersConfigDelete);\n};\n// === End employee API ===\n\n// === Employee - Tools API : ===\nInvoke.getListEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getEmployeeToolsById = (employeeId) => {\n  return ConfigAxios.get(`/employees/tools${employeeId}`);\n};\n\nInvoke.addEmployeeTools = (data) => {\n  return ConfigAxios.post(\"/employees/tools\", data);\n};\n\nInvoke.updateEmployeeTools = (data) => {\n  return ConfigAxios.put(\"/employees/tools\", data);\n};\n\nInvoke.deleteEmployeeToolsById = (employeeToolsId) => {\n  return ConfigAxios.delete(\n    `/employees/tools/${employeeToolsId}`,\n    headersConfigDelete\n  );\n};\n// === End Employee - Tools API ===\n\n// === Roles API ===\nInvoke.getListRole = (page, limit) => {\n  return ConfigAxios.get(`/roles?page=${page}&limit=${limit}`);\n};\nInvoke.getRoleById = (customerId) => {\n  return ConfigAxios.get(`/roles/${customerId}`);\n};\n\nInvoke.addRole = (data) => {\n  return ConfigAxios.post(\"/roles\", data);\n};\n\nInvoke.updateRole = (data) => {\n  return ConfigAxios.put(\"/roles\", data);\n};\n\nInvoke.deleteRoleById = (roleId) => {\n  return ConfigAxios.delete(`/roles/${roleId}`, headersConfigDelete);\n};\n// === End Roles API ===\n\n// === Master Province API === :\nInvoke.getProvinceList = (page, limit) => {\n  return ConfigAxios.get(`/provinces?page=${page}&limit=${limit}`);\n};\n// === End Master Province API ===\n\n// === Master Cities API === :\nInvoke.getCityList = (page, limit, provinceId) => {\n  return ConfigAxios.get(\n    `/provinces/cities/${provinceId}?page=${page}&limit=${limit}`\n  );\n};\n// === End Master Cities API ===\n\n// === Dashboard API ===\nInvoke.getDashboardProgressData = (data) => {\n  return ConfigAxios.get(\"/dashboards\", data);\n};\n// === End Dashboard API ===\n\n// === Services API ===\nInvoke.addInternalService = (data) => {\n  return ConfigAxios.post(\"/services\", data);\n};\nInvoke.updateJobService = (data) => {\n  return ConfigAxios.put(\"/services\", data);\n};\nInvoke.setFinishedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/finish/${jobId}`);\n};\nInvoke.setApprovedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/approve/${jobId}`);\n};\nInvoke.setRejectedService = (jobId, payload) => {\n  return ConfigAxios.post(\n    `/m_services/reject/${jobId}?allowReject=true`,\n    payload\n  );\n};\n// === End Service API ===\n\n// Services - Employee API\nInvoke.getServicesEmployee = (jobId, page, limit) => {\n  return ConfigAxios.get(\n    `/services/employees/${jobId}?page=${page}&limit=${limit}`\n  );\n};\nInvoke.addNewEmployeeService = (jobId, payload) => {\n  return ConfigAxios.post(`/services/employees/${jobId}`, payload);\n};\nInvoke.setStatusEmployeeService = (jobId, payload) => {\n  return ConfigAxios.put(\n    `/services/employees/${jobId}`,\n    payload,\n    headersConfigDelete\n  );\n};\n// End Services - Employee API\n\n// === Service - Views API ===\nInvoke.getJobServiceSummary = (jobId, unitId) => {\n  return ConfigAxios.get(`/m_services/summary/${jobId}/${unitId}`);\n};\nInvoke.getJobServiceMedia = (jobId, unitId) => {\n  return ConfigAxios.get(`/services/medias/${jobId}/${unitId}`);\n};\nInvoke.getJobServiceDailies = (jobId, unitId) => {\n  return ConfigAxios.get(`/services/dailies/${jobId}/${unitId}`);\n};\nInvoke.updateJobServiceDailies = (payload) => {\n  return ConfigAxios.put(`/services/dailies`, payload);\n};\nInvoke.getChecklistData = (unitModelId) => {\n  return ConfigAxios.get(`/m_services/checklist/${unitModelId}`);\n};\nInvoke.getRejectedData = (jobId) => {\n  return ConfigAxios.get(`/m_services/reject/${jobId}`);\n};\nInvoke.getJobServiceHistories = (jobId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/services/logs/${jobId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\n// === End Service Views ===\n\n// === Master Unit API === :\nInvoke.getUnitList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/units?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addUnit = (payload) => {\n  return ConfigAxios.post(`/units`, payload);\n};\nInvoke.updateUnit = (payload) => {\n  return ConfigAxios.put(`/units`, payload);\n};\nInvoke.deleteUnitById = (unitId) => {\n  return ConfigAxios.delete(`units/${unitId}`, headersConfigDelete);\n};\n// === End Master Unit API ===\n\n// === Master unit-model API === :\nInvoke.getListUnitModel = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/models/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addUnitSerialNumber = (payload, unitModelId) => {\n  return ConfigAxios.post(`/units/serial/${unitModelId}`, payload);\n};\nInvoke.updateUnitSerialNumber = (payload, unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.put(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    payload\n  );\n};\nInvoke.deleteUnitSerialNumber = (unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.delete(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    headersConfigDelete\n  );\n};\nInvoke.getUnitSerialNumber = (\n  page,\n  limit,\n  keyword,\n  unitModelId,\n  customerId\n) => {\n  return ConfigAxios.get(\n    `/units/serial/${unitModelId}?page=${page}&limit=${limit}&q=${keyword}&customerId=${customerId}`\n  );\n};\nInvoke.addUnitModel = (payload) => {\n  return ConfigAxios.post(`/units/models`, payload);\n};\nInvoke.updateUnitModel = (payload) => {\n  return ConfigAxios.put(`/units/models`, payload);\n};\nInvoke.deleteUnitModelById = (unitModelId) => {\n  return ConfigAxios.delete(`units/models/${unitModelId}`, headersConfigDelete);\n};\n// === End Master Unit-Model API ===\n\n// === Master unit-fields API === :\nInvoke.getListUnitFields = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/fields/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.getListUnitJobForms = (unitId, jobFormId) => {\n  return ConfigAxios.get(`/units/job_forms/${unitId}?job_form_id=${jobFormId}`);\n};\nInvoke.addUnitFields = (payload) => {\n  return ConfigAxios.post(`/units/fields`, payload);\n};\nInvoke.updateUnitFields = (payload) => {\n  return ConfigAxios.put(`/units/fields`, payload);\n};\nInvoke.deleteUnitFieldsById = (unitfieldsId) => {\n  return ConfigAxios.delete(\n    `units/fields/${unitfieldsId}`,\n    headersConfigDelete\n  );\n};\n// === End Master Unit-Model API ===\n\n// === Master Job-Form API === :\nInvoke.getListJobForm = (page, limit, keyowrd) => {\n  return ConfigAxios.get(`job_forms?page=${page}&limit=${limit}&q=${keyowrd}`);\n};\nInvoke.addJobForms = (payload) => {\n  return ConfigAxios.post(`job_forms`, payload);\n};\nInvoke.updateJobForms = (payload) => {\n  return ConfigAxios.put(`job_forms`, payload);\n};\nInvoke.deleteJobForms = (jobFormsId) => {\n  return ConfigAxios.delete(`job_forms/${jobFormsId}`, headersConfigDelete);\n};\n// === End Job-Form API ===\n\n// === Master Branch API === :\nInvoke.getListBranch = (page, limit, keyword) => {\n  return ConfigAxios.get(`/branches?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.deleteBranchById = (branchId) => {\n  return ConfigAxios.delete(`/branches/${branchId}`, headersConfigDelete);\n};\nInvoke.addBranch = (payload) => {\n  return ConfigAxios.post(`/branches`, payload);\n};\nInvoke.updateBranch = (payload) => {\n  return ConfigAxios.put(`/branches`, payload);\n};\n// === End Branch API ===\n\n// === Master Menu API === :\nInvoke.getListMenu = (page, limit) => {\n  return ConfigAxios.get(`/menus?page=${page}&limit=${limit}`);\n};\n// === End Menu API ===\n\n// === Master Menu - Roles API === :\nInvoke.addMenuRole = (payload) => {\n  return ConfigAxios.post(`/menus/roles`, payload);\n};\n\nInvoke.getMenuByRoleId = (roleId) => {\n  return ConfigAxios.get(`/menus/menu_by_role/${roleId}`);\n};\n\nInvoke.deleteMenuByMenuRoleId = (menuRoleId) => {\n  return ConfigAxios.delete(`menus/roles/${menuRoleId}`, headersConfigDelete);\n};\n// === End Menu - Roles API ===\n\n// === Master Engines API === :\nInvoke.getListEngine = (page, limit, keyword) => {\n  return ConfigAxios.get(`/engines?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addEngine = (payload) => {\n  return ConfigAxios.post(`/engines`, payload);\n};\nInvoke.updateEngine = (payload) => {\n  return ConfigAxios.put(`/engines`, payload);\n};\nInvoke.deleteEngine = (machineId) => {\n  return ConfigAxios.delete(`/engines/${machineId}`, headersConfigDelete);\n};\n// === End Engines API ===\n\n// === Master Tools API === :\nInvoke.getListTools = (page, limit, keyword) => {\n  return ConfigAxios.get(`/tools?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addTool = (payload) => {\n  return ConfigAxios.post(`/tools`, payload);\n};\nInvoke.updateTool = (payload) => {\n  return ConfigAxios.put(`/tools`, payload);\n};\nInvoke.deleteTool = (toolId) => {\n  return ConfigAxios.delete(`/tools/${toolId}`, headersConfigDelete);\n};\n// === End Tools API ===\n\n// === Master FormCategory API === :\nInvoke.getFormCategory = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/category_forms?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addFormCategory = (payload) => {\n  return ConfigAxios.post(`/category_forms`, payload);\n};\nInvoke.updateFormCategory = (payload) => {\n  return ConfigAxios.put(`/category_forms`, payload);\n};\nInvoke.deleteFormCategory = (categoryFormId) => {\n  return ConfigAxios.delete(\n    `/category_forms/${categoryFormId}`,\n    headersConfigDelete\n  );\n};\n// === End FormCategory API ===\n\n// === Master Identification API === :\nInvoke.getIdentificationList = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/identifications?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\nInvoke.addIdentification = (payload) => {\n  return ConfigAxios.post(`/identifications`, payload);\n};\n\nInvoke.updateIdentificationMilling = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/milling\", payload);\n};\n\nInvoke.updateIdentificationRegular = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/regular\", payload);\n};\n\nInvoke.deleteIdentificationById = (identificationId) => {\n  return ConfigAxios.delete(\n    `/identifications/${identificationId}`,\n    headersConfigDelete\n  );\n};\n\n// === Master Dvision API === :\nInvoke.getDivisionList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/divisions?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addDivision = (payload) => {\n  return ConfigAxios.post(`/divisions`, payload);\n};\nInvoke.updateDivision = (payload) => {\n  return ConfigAxios.put(`/divisions`, payload);\n};\nInvoke.deleteDivision = (divisionId) => {\n  return ConfigAxios.delete(`/divisions/${divisionId}`, headersConfigDelete);\n};\n\n// === Master Dvision - Unit API === :\nInvoke.getDivisionUnitList = (divisionId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/units/divisions/${divisionId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addDivisionUnit = (payload) => {\n  return ConfigAxios.post(`/units/divisions`, payload);\n};\n\n// Monitoring Employee\nInvoke.getReportMonitoringEmployee = (\n  page,\n  limit,\n  from,\n  until,\n  type = \"all\",\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/monitoring?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&type=${type}&q=${keyword}`\n  );\n};\n\n// Report Service Repair\nInvoke.getReportServiceRepair = (\n  page,\n  limit,\n  from,\n  until,\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/report_services?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Report Employee\nInvoke.getReportEmployee = (page, limit, from, until, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/report/report_employee?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Working Hours\nInvoke.getWorkingHours = (page, limit, from, until, keyword) => {\n  return ConfigAxios.get(\n    `/services/monitor/hour?startDate=${from}&endDate=${until}&page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\n// Download pdf from server\nInvoke.getTransactionPdfUrl = (jobId) => {\n  return ConfigAxios.get(`/services/print_job/${jobId}`);\n};\n// Download pdf to BLOB\nInvoke.downloadPdfFromUrl = (url) => {\n  return ConfigAxios.get(url, { responseType: \"blob\" });\n};\n\nexport default Invoke;\n","import { store } from \"../../../app/ConfigureStore\";\n\nexport const PROCESS_GLOBAL_LOADING = \"PROCESS_GLOBAL_LOADING\";\nexport const PROCESS_FORM_GLOBAL_LOADING = \"PROCESS_FORM_GLOBAL_LOADING\";\nexport const SHOW_GLOBAL_MODAL = \"SHOW_GLOBAL_MODAL\";\nexport const RESET_ALL_LOADING = \"RESET_ALL_LOADING\";\n\nexport const setGlobalLoading = (payload) => {\n  return {\n    type: PROCESS_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const setGlobalModal = (payload) => {\n  return {\n    type: SHOW_GLOBAL_MODAL,\n    payload,\n  };\n};\n\nexport const setGlobalFormLoading = (payload) => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const resetAllProcessLoading = () => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n  };\n};\n\nexport const resetAllGlobalLoadingProcess = () => {\n  const { dispatch } = store;\n  dispatch(resetAllProcessLoading());\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport history from \"../../../app/History\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\n\nexport const SET_ACCESS_TOKEN_DATA = \"SET_ACCESS_TOKEN_DATA\";\nexport const SET_USER_DETAIL_DATA = \"SET_USER_DETAIL_DATA\";\nexport const SET_ERROR_LOGIN = \"SET_ERROR_LOGIN\";\n\nexport const setAccessToken = (payload) => {\n  return {\n    type: SET_ACCESS_TOKEN_DATA,\n    payload,\n  };\n};\nexport const setUserDetail = (payload) => {\n  return {\n    type: SET_USER_DETAIL_DATA,\n    payload,\n  };\n};\nexport const setErrorLogin = (payload) => {\n  return {\n    type: SET_ERROR_LOGIN,\n    payload,\n  };\n};\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\",\n  };\n};\n\nexport const doLogout = (dispatch) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      dispatch(logout());\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah Anda Yakin Ingin Keluar?\", toastrConfirmOptions);\n};\n\nconst appendItem = async (data) =>\n  new Promise((resolve, reject) => {\n    store.dispatch(setAccessToken(data.data.callback.accessToken));\n    delete data.data.callback.accessToken;\n    store.dispatch(setUserDetail(data.data.callback));\n    resolve();\n  });\n\nexport const handleSubmitLogin = async (values) => {\n  const { username, password } = values;\n  const payload = { username, password };\n\n  store.dispatch(setGlobalLoading(true));\n\n  Invoke.submitLogin(payload)\n    .then((data) => {\n      appendItem(data).then(() => {\n        setTimeout(() => {\n          history.push(\"/dashboard\");\n          window.location.reload();\n          store.dispatch(setGlobalLoading(false));\n        }, 5000);\n      });\n    })\n    .catch((onRejected) => {\n      store.dispatch(setGlobalLoading(false));\n      if (onRejected) {\n        const status = onRejected?.response?.data?.status;\n        const dataResponseRejected = onRejected?.response?.data ?? null;\n        if (dataResponseRejected) {\n          if (status === 400) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          } else if (status === 401) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          }\n        }\n      }\n    });\n};\n","import {\n  SET_ACCESS_TOKEN_DATA,\n  SET_USER_DETAIL_DATA,\n  SET_ERROR_LOGIN,\n} from \"./AuthAction\";\n\nexport const initialState = {\n  accessToken: \"\",\n  userDetail: null,\n  avatar: null,\n  error: {\n    status: false,\n    message: \"\",\n  },\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ACCESS_TOKEN_DATA:\n      newState.accessToken = action.payload;\n      return { ...newState };\n\n    case SET_USER_DETAIL_DATA:\n      newState.userDetail = action.payload;\n      return { ...newState };\n\n    case SET_ERROR_LOGIN:\n      newState.error = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import history from \"./History\";\n\nexport const navigate = (path) => {\n  history.push(path);\n  window.location.reload();\n};\n\nexport const getIndex = (currentpage, limit) => {\n  const pageNumbers = [];\n  const startIndex = currentpage * limit - limit + 1;\n  const endIndex = startIndex + limit;\n  for (let i = startIndex === 0 ? 1 : startIndex; i <= endIndex; i++) {\n    pageNumbers.push(i);\n  }\n  return pageNumbers;\n};\n\nexport const getBase64 = (img, callback) => {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\n\nexport const SelectLocation = [\n  {\n    id: `location-1`,\n    value: \"L1\",\n    label: \"Cabang\",\n  },\n  {\n    id: `location-2`,\n    value: \"L2\",\n    label: \"Depo PT Rutan\",\n  },\n];\n\nexport const SelectType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Project\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"PB\",\n  },\n  {\n    id: `type-3`,\n    value: \"T3\",\n    label: \"Komersil\",\n  },\n];\n\nexport const SelectInstanceType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"Kelompok Tani\",\n  },\n];\n\nexport const SelectStatus = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Finished\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusServices = [\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Completed\",\n  },\n  {\n    id: `status-2`,\n    value: \"S4\",\n    label: \"Approved\",\n  },\n  {\n    id: `status-3`,\n    value: \"S5\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusMilling = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n  {\n    id: `status-3`,\n    value: \"S4\",\n    label: \"Lain-lain\",\n  },\n];\n\nexport const SelectInstanceTypeRegular = [\n  {\n    id: `status-1`,\n    value: \"T1\",\n    label: \"Kepemilikan Pribadi\",\n  },\n  {\n    id: `status-2`,\n    value: \"T2\",\n    label: \"Perusahaan\",\n  },\n  {\n    id: `status-3`,\n    value: \"T3\",\n    label: \"Kelompok Tani\",\n  },\n  {\n    id: `status-3`,\n    value: \"T4\",\n    label: \"Dinas\",\n  },\n];\n\nexport const SelectStatusIdentification = [\n  {\n    id: `status-identification-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-identification-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-identification-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n];\n\nexport const SelectMilling = [\n  {\n    id: `milling-1`,\n    value: \"true\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `milling-2`,\n    value: \"false\",\n    label: \"non-Penggilingan\",\n  },\n];\n\nexport const enumTypeInternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T4\", label: \"Training\" },\n];\n\nexport const enumTypeExternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Training\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modification\" },\n];\n\nexport const enumWarranty = [\n  { id: `enum-warranty-1`, value: true, label: \"Warranty\" },\n  { id: `enum-warranty-2`, value: false, label: \"No Warranty\" },\n];\n\nexport const warrantyMonths = () => {\n  const warrantyMonths = [];\n  for (let i = 0; i <= 24; i++) {\n    warrantyMonths.push({\n      id: `enum-warranty-moths-${i}`,\n      value: i.toString(),\n      label: `${i} bulan`,\n    });\n  }\n  return warrantyMonths;\n};\n\nexport const getProvinceEnum = (data) => {\n  const SelectProvince = [];\n  data.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectProvince;\n};\n\nexport const getCitiesEnum = (data) => {\n  const SelectCities = [];\n  data.map((item, index) => {\n    SelectCities.push({\n      id: `city-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectCities;\n};\n\nexport const getRolesEnum = (data) => {\n  const SelectRoles = [];\n  data.map((item, index) => {\n    SelectRoles.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectRoles;\n};\n\nexport const enumSelectGenerator = (data, enumName) => {\n  const SelectEnum = [];\n  data.map((item, index) => {\n    SelectEnum.push({\n      id: `${enumName}-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectEnum;\n};\n\nexport const getUnitModelEnum = (data) => {\n  const SelectUnitModel = [];\n  data.map((item, index) => {\n    SelectUnitModel.push({\n      id: `unit-model-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectUnitModel;\n};\n\nexport const getMachineConf = (data) => {\n  const SelectMachines = [];\n  data.map((item, index) => {\n    SelectMachines.push({\n      id: item.id,\n      name: item.name.replace(/ /g, \"_\").toLowerCase(),\n      type: item.name,\n    });\n  });\n  return SelectMachines;\n};\n\nexport const getStatus = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S2\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Completed\", color: \"#87d068\" };\n      break;\n    case \"S4\":\n      statusItem = { value: \"Approved\", color: \"#87d068\" };\n      break;\n    case \"S5\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\nexport const getStatusWorkingHours = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S1\":\n      statusItem = { value: \"Draft\", color: \"#fff566\" };\n      break;\n    case \"S2\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Completed\", color: \"#95de64\" };\n      break;\n    case \"S4\":\n      statusItem = { value: \"Approved\", color: \"#95de64\" };\n      break;\n    case \"S5\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\n// This list not used\nexport const machineConf = [\n  {\n    name: \"dryer\",\n    type: \"dryer\",\n  },\n  {\n    name: \"cleaner\",\n    type: \"cleaner\",\n  },\n  {\n    name: \"head_husker\",\n    type: \"head husker\",\n  },\n  {\n    name: \"body_husker\",\n    type: \"body husker\",\n  },\n  {\n    name: \"separator\",\n    type: \"separator\",\n  },\n  {\n    name: \"destoner\",\n    type: \"destoner\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n\n  {\n    name: \"vertikal_abrasive\",\n    type: \"vertikal abrasive\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n  {\n    name: \"friction_abrasive\",\n    type: \"friction abrasive\",\n  },\n  {\n    name: \"rotary_rice_sifter\",\n    type: \"rotary rice sifter\",\n  },\n  {\n    name: \"non_rotary_rice_sifter\",\n    type: \"non rotary rice sifter\",\n  },\n\n  {\n    name: \"length_grader\",\n    type: \"length grader\",\n  },\n  {\n    name: \"milling_meter\",\n    type: \"milling meter\",\n  },\n  {\n    name: \"scale\",\n    type: \"scale\",\n  },\n];\n\nexport const monitoringType = {\n  all: \"all\",\n  external: \"T1\",\n  internal: \"T2\",\n  loss: \"T3\",\n};\n\nexport const categoryServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n];\n\nexport const categoryMonitoringServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n  {\n    name: \"Loss\",\n    status: \"error\",\n  },\n];\n\nexport const enumTypeMonitoringEmployee = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Pelatihan\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modifikasi\" },\n];\n\nexport const getBase64Image = (url) => {\n  const img = new Image();\n  img.setAttribute(\"crossOrigin\", \"anonymous\");\n  img.onload = () => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    const dataURL = canvas.toDataURL(\"image/png\");\n    console.log(dataURL);\n  };\n  img.src = url;\n};\n\n/**\n * This function calculate the width of a string based on its length\n * @param {String} text\n * @param {String} font\n */\nconst getTextWidth = (text, font = \"14px -apple-system\") => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n  return Math.round(metrics.width + 80);\n};\n\n/**\n * This function calculates the width of each column based in all CELL VALUES\n * @param {Array} columns\n * @param {Array} source\n * @param {Number} maxWidthPerCell\n */\nexport const calculateColumnsWidth = (\n  columns,\n  source,\n  maxWidthPerCell = 500\n) => {\n  const columnsParsed = JSON.parse(JSON.stringify(columns));\n\n  // First we calculate the width for each column\n  // The column width is based on its string length\n\n  const columnsWithWidth = columnsParsed.map((column) =>\n    Object.assign(column, {\n      width: getTextWidth(column.title),\n    })\n  );\n\n  // Since we have a minimum width (column's width already calculated),\n  // now we are going to verify if the cell value is bigger\n  // than the column width which is already set\n\n  source.map((entry) => {\n    columnsWithWidth.map((column, indexColumn) => {\n      const columnWidth = column.width;\n      const cellValue = Object.values(entry)[indexColumn];\n\n      // Get the string width based on chars length\n      let cellWidth = getTextWidth(cellValue);\n\n      // Verify if the cell value is smaller than column's width\n      if (cellWidth < columnWidth) cellWidth = columnWidth;\n\n      // Verify if the cell value width is bigger than our max width flag\n      if (cellWidth > maxWidthPerCell) cellWidth = maxWidthPerCell;\n\n      // Update the column width\n      columnsWithWidth[indexColumn].width = cellWidth;\n    });\n  });\n\n  // Sum of all columns width to determine the table max width\n  const tableWidth = columnsWithWidth\n    .map((column) => column.width)\n    .reduce((a, b) => {\n      return a + b;\n    });\n\n  return {\n    columns: columnsWithWidth,\n    source,\n    tableWidth,\n  };\n};\n\nexport const isBlockedRoleDetailService = (role) => {\n  let isBlocked;\n  switch (role) {\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\n// Check if roles is blocked on menu list service:\nexport const isBlockedRoleListService = (role) => {\n  let isBlocked;\n  switch (role) {\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    case \"7cf419b8-9275-479b-846a-cda27aa173eb\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\n// Check if roles is blocked on menu customer:\nexport const isBlockedRoleCustomer = (role) => {\n  let isBlocked = false;\n  switch (role) {\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"7cf419b8-9275-479b-846a-cda27aa173eb\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { toastr } from \"react-redux-toastr\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toast } from \"react-toastify\";\nimport { change } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ROLES = \"SET_LIST_ROLES\";\nexport const SET_SELECTED_ROLE_ID = \"SET_SELECTED_ROLE_ID\";\nexport const SET_SELECTED_ROLE_DETAIL = \"SET_SELECTED_ROLE_DETAIL\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const RESET_STATE = \"RESET_STATE\";\nexport const SET_SELECTED_ROLE_MENU = \"SET_SELECTED_ROLE_MENU\";\n\nexport const resetState = (payload) => {\n  return {\n    type: RESET_STATE,\n    payload,\n  };\n};\n\nexport const setListRoles = (payload) => {\n  return {\n    type: SET_LIST_ROLES,\n    payload,\n  };\n};\n\nexport const setSelectedRoleId = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_ID,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedRoleDetail = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_DETAIL,\n    payload,\n  };\n};\n\nexport const setSelectedRoleMenu = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_MENU,\n    payload,\n  };\n};\n\nexport const showToast = (message, type) => {\n  switch (type) {\n    case \"success\":\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n\n    case \"error\":\n      toast.error(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n    default:\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n  }\n};\n\nexport const getListRolesRequested = async () => {\n  const { data } = await Invoke.getListRole(1, 100);\n  store.dispatch(setListRoles(data.callback.data));\n};\n\nexport const mapDetailRoleToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().roles.selectedRoleDetail;\n  dispatch(change(\"editRolesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editRolesForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getMenuByRolesId = async (roleId) => {\n  const { data } = await Invoke.getMenuByRoleId(roleId);\n  let subItem = [];\n  data.callback.map((item, index) => {\n    subItem.push(item.menu_id);\n  });\n  store.dispatch(setSelectedRoleMenu(subItem));\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editRolesForm\", `id`, \"\"));\n  dispatch(change(\"editRolesForm\", `description`, \"\"));\n};\n\nconst doAddRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await Invoke.addRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteMenuRoleProcess = async (menuId, menuListApi) => {\n  const [menu] = menuListApi.filter((x) => x.menu_id === menuId);\n  await Invoke.deleteMenuByMenuRoleId(menu.id);\n};\n\nconst doAddMenuRoleProcess = async (menuId, roleId) => {\n  const payload = {\n    menu_id: menuId,\n    role_id: roleId,\n    view: true,\n    insert: true,\n    update: true,\n    delete: false,\n  };\n  await Invoke.addMenuRole(payload);\n};\n\nconst doSaveMenuRole = async (newMenuSelected) => {\n  const { getState } = store;\n  const currentMenuSelected = getState().roles.selectedRoleMenu;\n  const selectedRoleId = getState().roles.selectedRoleId;\n  const { data } = await Invoke.getMenuByRoleId(selectedRoleId);\n  const menuListApi = data.callback;\n\n  if (currentMenuSelected.length > 0) {\n    await currentMenuSelected.map((item, index) => {\n      doDeleteMenuRoleProcess(item, menuListApi);\n    });\n    setTimeout(() => {\n      newMenuSelected.map((newMenu, index) => {\n        doAddMenuRoleProcess(newMenu, selectedRoleId);\n      });\n    }, 1000);\n  } else {\n    newMenuSelected.map((item, index) => {\n      doAddMenuRoleProcess(item, selectedRoleId);\n    });\n  }\n};\n\nconst doEditRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.id = values.id;\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await doSaveMenuRole(menuSelected);\n    await Invoke.updateRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteRoleProcess = async (roleId) => {\n  try {\n    await Invoke.deleteRoleById(roleId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListRolesRequested();\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteRoleRequested = async (roleId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteRoleProcess(roleId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const saveRoleRequested = async (type, values, menuSelected) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddRoleProcess(values, menuSelected);\n      } else {\n        doEditRoleProcess(values, menuSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { change } from \"redux-form\";\nimport moment from \"moment\";\nimport { setSelectedJobService } from \"../../ListServices/Store/ListServicesActions\";\nimport fileDownload from \"js-file-download\";\n\nexport const SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA =\n  \"SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA\";\n\nexport const SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_GROUPING_SUMMARY_DATA = \"SET_GROUPING_SUMMARY_DATA\";\n\nexport const SET_GROUPING_CHECKLIST_DATA = \"SET_GROUPING_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_SUMMARY_DATA =\n  \"SET_SELECTED_SERVICES_SUMMARY_DATA\";\n\nexport const SET_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_SELECTED_SERVICES_DAILIES_DATA =\n  \"SET_SELECTED_SERVICES_DAILIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_HISTORIES_DATA =\n  \"SET_SELECTED_SERVICES_HISTORIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_CHECKLIST_DATA =\n  \"SET_SELECTED_SERVICES_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_REJECTED_DATA =\n  \"SET_SELECTED_SERVICES_REJECTED_DATA\";\n\nexport const SET_EDIT_TRANSACTION_MODAL = \"SET_EDIT_TRANSACTION_MODAL\";\n\nexport const SET_REJECTIONS_MODAL = \"SET_REJECTIONS_MODAL\";\n\nexport const SET_EDIT_DAILIES_MODAL = \"SET_EDIT_DAILIES_MODAL\";\n\nexport const SET_SELECTED_EDIT_DAILIES_DATA = \"SET_SELECTED_EDIT_DAILIES_DATA\";\n\nexport const SET_SELECTED_UNIT = \"SET_SELECTED_UNIT\";\n\nexport const RESET_DETAIL_SERVICE = \"RESET_DETAIL_SERVICE\";\n\nexport const setRejectionsModal = (payload) => {\n  return {\n    type: SET_REJECTIONS_MODAL,\n    payload,\n  };\n};\n\nexport const resetDetailService = () => {\n  return {\n    type: RESET_DETAIL_SERVICE,\n  };\n};\n\nexport const setSelectedUnit = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT,\n    payload,\n  };\n};\n\nexport const setEditTransactionModal = (payload) => {\n  return {\n    type: SET_EDIT_TRANSACTION_MODAL,\n    payload,\n  };\n};\n\nexport const setGroupingSelectedServicesMediaData = (payload) => {\n  return {\n    type: SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingSummaryData = (payload) => {\n  return {\n    type: SET_GROUPING_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingChecklistData = (payload) => {\n  return {\n    type: SET_GROUPING_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setEditDailiesModal = (payload) => {\n  return {\n    type: SET_EDIT_DAILIES_MODAL,\n    payload,\n  };\n};\n\nexport const setSelectedServicesEmployeeListData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServicesChecklisttData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedSummaryData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceMediaData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceHistoriesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_HISTORIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceRejectedData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_REJECTED_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEditDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_EDIT_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const getJobServiceEmployeeList = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getServicesEmployee(jobId, 1, 100);\n  const serviceEmployeeList = data.callback.data;\n\n  const results = Promise.all(\n    serviceEmployeeList.map(async (item, index) => {\n      let subIitem = {};\n      subIitem.active = item.active;\n      subIitem.employee_service_id = item.id;\n      const employee = await Invoke.getEmployeeById(item.employee_id);\n      subIitem = { ...subIitem, ...employee.data.callback };\n      return subIitem;\n    })\n  );\n  dispatch(setSelectedServicesEmployeeListData(await results));\n};\n\nexport const getJobServiceSummary = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceSummary(jobId, unitId);\n    dispatch(setSelectedSummaryData(data.callback));\n  } catch (error) {\n    dispatch(setSelectedSummaryData({}));\n  }\n};\n\nexport const getJobServiceMedia = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceMedia(jobId, unitId);\n    dispatch(setSelectedServiceMediaData(data.callback.data));\n  } catch (error) {\n    dispatch(setSelectedServiceMediaData([]));\n  }\n};\n\nexport const getJobServiceDailies = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceDailies(jobId, unitId);\n    dispatch(\n      setSelectedServiceDailiesData(data.callback.data || data.callback)\n    );\n  } catch (error) {\n    dispatch(setSelectedServiceDailiesData([]));\n  }\n};\n\nexport const getJobServiceHistories = async (jobId, keyword = \"\") => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getJobServiceHistories(jobId, 1, 100, keyword);\n  dispatch(setSelectedServiceHistoriesData(data.callback.logs));\n};\n\nexport const getJobServiceRejections = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getRejectedData(jobId);\n  dispatch(setSelectedServiceRejectedData(data.callback));\n};\n\nexport const getChecklistData = async (unitModelId) => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getChecklistData(unitModelId);\n    dispatch(setSelectedServicesChecklisttData(data.callback));\n  } catch (e) {\n    console.log(e);\n    dispatch(setSelectedServicesChecklisttData([]));\n  }\n};\n\nexport const handleAddNewEmployeeService = async (jobId, employeeId) => {\n  const { dispatch } = store;\n  try {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.active = \"true\";\n    await Invoke.addNewEmployeeService(jobId, payload);\n    setTimeout(() => {\n      dispatch(ComponentActions.setGlobalModal(false));\n      dispatch(ComponentActions.setGlobalLoading(false));\n      getJobServiceEmployeeList(jobId);\n    }, 500);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nexport const setStatusEmployee = async (\n  jobId,\n  employeeServiceId,\n  employeeId,\n  isActive\n) => {\n  const payload = {};\n  payload.id = employeeServiceId;\n  payload.employee_id = employeeId;\n  payload.active = isActive;\n  await Invoke.setStatusEmployeeService(jobId, payload);\n  setTimeout(() => {\n    getJobServiceEmployeeList(jobId);\n  }, 500);\n};\n\nconst doRejectServiceProcess = async (jobId, values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.reason = values.reason;\n    await Invoke.setRejectedService(jobId, payload);\n    showToast(\"Berhasil melakukan reject\", \"success\");\n    navigate(\"/list_service\");\n    dispatch(setRejectionsModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setRejectionsModal(false));\n  }\n};\n\nconst doEditServiceProcess = async (values) => {\n  const { dispatch } = store;\n\n  const warranty = values.warranty.split(\"|\");\n  const warrantyYears = values.warrantyYears.split(\"|\");\n  const warrantyMonths = values.warrantyMonths.split(\"|\");\n\n  const payload = {};\n  payload.id = values.id;\n  payload.start = moment(values.startDate).format(\"YYYY-MM-DD\");\n  payload.due = moment(values.dueDate).format(\"YYYY-MM-DD\");\n  payload.job_perform = values.jobPerform;\n  payload.warranty = warranty[0];\n  payload.warranty_month = warrantyMonths[0] ?? 0;\n  payload.warranty_year = warrantyYears[0] ?? 0;\n\n  try {\n    await Invoke.updateJobService(payload);\n    showToast(\"Data berhasil disimpan\", \"success\");\n\n    const { data } = await Invoke.getOneServices(values.id);\n    await store.dispatch(\n      setSelectedJobService({ ...data.callback, units: values.unit_models })\n    );\n    dispatch(setEditTransactionModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nexport const handlePressEditRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditServiceProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah anda yakin menyimpan data ini?\", toastrConfirmOptions);\n};\n\nexport const handlePressRejectedRequested = async (jobId, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doRejectServiceProcess(jobId, values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin me me-reject data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nconst doEditDailiesProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const payload = {};\n  payload.id = values.id;\n  payload.title = values.title ?? \"\";\n  payload.daily_start = moment(values.startDate).format(\"YYYY-MM-DD\");\n  payload.daily_end = moment(values.endDate).format(\"YYYY-MM-DD\");\n  payload.description = values.description ?? \"\";\n  try {\n    await Invoke.updateJobServiceDailies(payload);\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    await getJobServiceDailies(dataService.id);\n    dispatch(setEditDailiesModal(false));\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nexport const handlePressEditDailiesRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditDailiesProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailTransactionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().services.selectedJobService;\n  dispatch(change(\"editTransactionForm\", `id`, data.id ?? \"\"));\n  dispatch(\n    change(\"editTransactionForm\", `startDate`, moment(data.start) ?? \"\")\n  );\n  dispatch(change(\"editTransactionForm\", `endDate`, moment(data.end) ?? \"\"));\n  dispatch(change(\"editTransactionForm\", `jobPerform`, data.job_perform ?? \"\"));\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warranty`,\n      `${data.warranty}|${data.warranty ? \"Warranty\" : \"No Warranty\"}`\n    )\n  );\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warrantyMonths`,\n      `${data.warranty_month}|${data.warranty_month} bulan` ?? \"0\"\n    )\n  );\n  dispatch(\n    change(\"editTransactionForm\", `warrantyYears`, data.warranty_year ?? \"\")\n  );\n};\n\nexport const mapDailiesToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().detailService.selectedEditDailies;\n  dispatch(change(\"editDailiesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `startDate`, moment(data.mulai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `endDate`, moment(data.selesai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `description`, data.deskripsi ?? \"\"));\n};\n\nexport const downloadTransactionPdf = async () => {\n  const { dispatch, getState } = store;\n  const jobId = getState().services.selectedJobService.id;\n  dispatch(ComponentActions.setGlobalLoading(true));\n\n  try {\n    const { data: dataTransactionPdf } = await Invoke.getTransactionPdfUrl(\n      jobId\n    );\n    const downloadUrl = dataTransactionPdf.callback.pdf.url.replace(\n      \"103.158.192.161:3000\",\n      \"\"\n    );\n    const { data } = await Invoke.downloadPdfFromUrl(downloadUrl);\n    dispatch(ComponentActions.setGlobalLoading(false));\n    fileDownload(data, `${dataTransactionPdf.callback.pdf.filename}.pdf`);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n    showToast(\"Gagal mengunduh report!\", \"error\");\n  }\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { setRejectionsModal } from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\nimport * as DetailServiceActions from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\n\nexport const SET_LIST_SERVICES = \"SET_LIST_SERVICES\";\nexport const SET_SELECTED_JOB_SERVICE = \"SET_SELECTED_JOB_SERVICE\";\nexport const SET_PAGING_LIST_SERVICE = \"SET_PAGING_LIST_SERVICE\";\nexport const SET_SELECTED_JOB_SERVICE_ID = \"SET_SELECTED_JOB_SERVICE_ID\";\nexport const SET_DASHBOARD_LIST_SERVICES = \"SET_DASHBOARD_LIST_SERVICES\";\n\nexport const setListServices = (payload) => {\n  return {\n    type: SET_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setDashboardListService = (payload) => {\n  return {\n    type: SET_DASHBOARD_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setPagingListService = (payload) => {\n  return {\n    type: SET_PAGING_LIST_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobService = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobServiceId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE_ID,\n    payload,\n  };\n};\n\nexport const getListServicesRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  type = \"\",\n  status = \"\",\n  employeeId = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListServices(\n      page,\n      limit,\n      keyword,\n      type,\n      status,\n      employeeId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListServices(data.callback.data));\n    store.dispatch(setPagingListService(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTopTenService = async () => {\n  try {\n    const { data } = await Invoke.getListServices(1, 10, \"\", \"\", \"\", \"\");\n    store.dispatch(setDashboardListService(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (page, limit, keyword, filterValues) => {\n  if (!filterValues) {\n    getListServicesRequested(page, limit, keyword);\n    return;\n  }\n\n  const splitTypeService = filterValues.typeService\n    ? filterValues.typeService.split(\"|\")\n    : \"\";\n  const splitStatusService = filterValues.statusService\n    ? filterValues.statusService.split(\"|\")\n    : \"\";\n\n  const typeService = filterValues.typeService ? splitTypeService[0] : \"\";\n  const statusService = filterValues.statusService ? splitStatusService[0] : \"\";\n\n  try {\n    await getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      typeService,\n      statusService\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getDetailServicePerUnit = async (service) => {\n  console.log(\"=== service : \", service);\n\n  const { dispatch } = store;\n  // Hit media api and grouping by units :\n  let groupingChecklist = [];\n  if (service.units) {\n    await service.units.map(async (item, index) => {\n      const { data: dataChecklist } = await Invoke.getChecklistData(item.id);\n\n      console.log(\"=== dataChecklist : \", dataChecklist);\n      // Push to tempporary array\n      groupingChecklist.push({\n        unitName: item.unit_name,\n        checklist: dataChecklist.callback,\n      });\n    });\n\n    // Save to reducer\n    await dispatch(\n      DetailServiceActions.setGroupingChecklistData(groupingChecklist)\n    );\n  }\n};\n\nexport const handlePressEdit = async (values) => {\n  store.dispatch(setGlobalLoading(true));\n  try {\n    const { data } = await Invoke.getOneServices(values.id);\n    const dataService = { ...data.callback, units: values.unit_models };\n    await store.dispatch(setSelectedJobService(dataService));\n    // await getDetailServicePerUnit(dataService);\n    setTimeout(() => {\n      store.dispatch(setGlobalLoading(false));\n      navigate(\"detail-services\");\n    }, 1500);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteJobServiceProcess = async (jobId) => {\n  const { getState } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteJobServiceById(jobId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListServicesRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteJobServiceRequested = async (jobId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteJobServiceProcess(jobId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handlePressActionsRequested = async (jobId, type) => {\n  const { dispatch } = store;\n  type = type.toLowerCase();\n  let message;\n\n  switch (type) {\n    case \"approved\":\n      message = \"Apakah anda yakin ingin meng-approve data ini?\";\n      break;\n\n    case \"finished\":\n      message = \"Apakah anda yakin ingin mem-finishing data ini?\";\n      break;\n\n    case \"rejected\":\n      message = \"Apakah anda yakin ingin me me-reject data ini?\";\n      await dispatch(setRejectionsModal(true));\n      break;\n  }\n\n  if (type.toLowerCase() !== \"rejected\") {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        doCallActionProcess(jobId, type);\n      },\n      okText: \"Ya\",\n      cancelText: \"Tidak\",\n    };\n\n    toastr.confirm(message, toastrConfirmOptions);\n  }\n};\n\nexport const doCallActionProcess = async (jobId, type) => {\n  const { getState, dispatch } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n  dispatch(setGlobalLoading(true));\n  try {\n    if (type === \"approved\") {\n      await Invoke.setApprovedService(jobId);\n    }\n    if (type === \"finished\") {\n      await Invoke.setFinishedService(jobId);\n    }\n    await getListServicesRequested(page, limit);\n    showToast(\"Data berhasil di approved\", \"success\");\n    setTimeout(() => {\n      navigate(\"/list_service\");\n      dispatch(setGlobalLoading(false));\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(setGlobalLoading(false));\n    console.log(\"error : \", error);\n  }\n};\n","import {\n  SET_LIST_SERVICES,\n  SET_SELECTED_JOB_SERVICE,\n  SET_PAGING_LIST_SERVICE,\n  SET_SELECTED_JOB_SERVICE_ID,\n  SET_DASHBOARD_LIST_SERVICES,\n} from \"./ListServicesActions\";\n\nexport const initialState = {\n  listServices: [],\n  dashboardListServices: [],\n  selectedJobService: {},\n  selectedJobServiceId: {},\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function listServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_SERVICES:\n      newState.listServices = action.payload;\n      return { ...newState };\n\n    case SET_DASHBOARD_LIST_SERVICES:\n      newState.dashboardListServices = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE:\n      newState.selectedJobService = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE_ID:\n      newState.selectedJobServiceId = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_LIST_SERVICE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  PROCESS_GLOBAL_LOADING,\n  PROCESS_FORM_GLOBAL_LOADING,\n  RESET_ALL_LOADING,\n  SHOW_GLOBAL_MODAL,\n} from \"./ComponentAction\";\n\nexport const initialState = {\n  isLoadingGlobal: false,\n  isLoadingFormGlobal: false,\n  isModalVisible: false,\n};\n\nexport default function ComponentReducer(state = initialState, action) {\n  if (!action) {\n    return state;\n  }\n  const newState = Object.assign({}, state);\n\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case PROCESS_GLOBAL_LOADING:\n      newState.isLoadingGlobal = action.payload;\n      return { ...newState };\n    case PROCESS_FORM_GLOBAL_LOADING:\n      newState.isLoadingFormGlobal = action.payload;\n      return { ...newState };\n    case SHOW_GLOBAL_MODAL:\n      newState.isModalVisible = action.payload;\n      return { ...newState };\n    case RESET_ALL_LOADING:\n      newState.isLoadingGlobal = false;\n      newState.isLoadingFormGlobal = false;\n      return { ...newState };\n  }\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_CUSTOMER_LIST_DATA = \"SET_CUSTOMER_LIST_DATA\";\nexport const SET_PAGING_CUSTOMER = \"SET_PAGING_CUSTOMER\";\nexport const SET_SELECTED_CUSTOMER_DATA = \"SET_SELECTED_CUSTOMER_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_CUSTOMER_ID = \"SET_SELECTED_CUSTOMER_ID\";\nexport const SET_CUSTOMER_LIST_DATA_DROPDOWN =\n  \"SET_CUSTOMER_LIST_DATA_DROPDOWN\";\n\nexport const setCustomerListData = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCustomerListDataDropdown = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingCustomer = (payload) => {\n  return {\n    type: SET_PAGING_CUSTOMER,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerData = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerId = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_ID,\n    payload,\n  };\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editCustomerForm\", `id`, \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, \"\"));\n};\n\nexport const loadCustomerListData = async () => {\n  try {\n    const { data } = await Invoke.getCustomerList(1, 100);\n    store.dispatch(setCustomerListData(data.callback.data));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getCustomerListDataByPaging = async (\n  page,\n  limit,\n  keyword = \"\",\n  branchId = \"\",\n  isDropdownData = false\n) => {\n  try {\n    const { data } = await Invoke.getCustomerList(\n      page,\n      limit,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdownData) {\n      store.dispatch(setCustomerListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setCustomerListData(data.callback.data));\n    }\n    store.dispatch(setPagingCustomer(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteCustomerProcess = async (customerId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteCustomerById(customerId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddCustomerProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n\n    await Invoke.addCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n    await Invoke.updateCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveCustomerRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddCustomerProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailCustomerToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().customers.selectedCustomerData;\n  const provinceId = data.province_id + \"|\" + data.province_name;\n  const cityId = data.city_id + \"|\" + data.city_name;\n  const branchId = data.branch_id + \"|\" + data.branch_name;\n\n  dispatch(change(\"editCustomerForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, data.pic_phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, data.pic ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, data.work_hour ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, provinceId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, cityId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, branchId ?? \"\"));\n};\n\nexport const deleteCustomerRequested = async (customerId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteCustomerProcess(customerId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_CUSTOMER_LIST_DATA,\n  SET_PAGING_CUSTOMER,\n  SET_FORM_STATUS,\n  SET_SELECTED_CUSTOMER_DATA,\n  SET_SELECTED_CUSTOMER_ID,\n  SET_CUSTOMER_LIST_DATA_DROPDOWN,\n} from \"./CustomersActions\";\n\nexport const initialState = {\n  listCustomers: [],\n  listCustomersDropdown: [],\n  formStatus: \"add\",\n  selectedCustomerData: {},\n  selectedCustomerId: \"\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_CUSTOMER_LIST_DATA:\n      newState.listCustomers = action.payload;\n      return { ...newState };\n\n    case SET_CUSTOMER_LIST_DATA_DROPDOWN:\n      newState.listCustomersDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_CUSTOMER:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_DATA:\n      newState.selectedCustomerData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_ID:\n      newState.selectedCustomerId = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ADMIN = \"SET_LIST_ADMIN\";\nexport const SET_PAGING_ADMIN = \"SET_PAGING_ADMIN\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ADMIN_ID = \"SET_SELECTED_ADMIN_ID\";\nexport const SET_SELECTED_ADMIN_DATA = \"SET_SELECTED_ADMIN_DATA\";\n\nexport const setListAdmin = (payload) => {\n  return {\n    type: SET_LIST_ADMIN,\n    payload,\n  };\n};\n\nexport const setPagingAdmin = (payload) => {\n  return {\n    type: SET_PAGING_ADMIN,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedAdminId = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_ID,\n    payload,\n  };\n};\n\nexport const setSelectedAdminData = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_DATA,\n    payload,\n  };\n};\n\nexport const getListAdminRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListAdmin(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListAdmin(data.callback.data));\n    store.dispatch(setPagingAdmin(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editAdminForm\", `id`, \"\"));\n  dispatch(change(\"editAdminForm\", `username`, \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, \"\"));\n  dispatch(change(\"editAdminForm\", `password`, \"\"));\n};\n\nconst doAddAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.addAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.updateAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteAdminProcess = async (adminId) => {\n  const { getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteAdminById(adminId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListAdminRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveAdminRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddAdminProcess(values);\n      } else {\n        doEditAdminProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailAdminToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().admins.selectedAdminData;\n  dispatch(change(\"editAdminForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editAdminForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, data.fullname ?? \"\"));\n};\n\nexport const deleteAdminRequested = async (adminId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteAdminProcess(adminId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_LIST_ADMIN,\n  SET_FORM_STATUS,\n  SET_PAGING_ADMIN,\n  SET_SELECTED_ADMIN_ID,\n  SET_SELECTED_ADMIN_DATA,\n} from \"./AdminActions\";\n\nexport const initialState = {\n  listAdmin: [],\n  selectedAdminId: \"\",\n  selectedAdminData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ADMIN:\n      newState.listAdmin = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_ID:\n      newState.selectedAdminId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_DATA:\n      newState.selectedAdminData = action.payload;\n      return { ...newState };\n    case SET_PAGING_ADMIN:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_LIST_ROLES,\n  SET_SELECTED_ROLE_ID,\n  SET_SELECTED_ROLE_DETAIL,\n  SET_FORM_STATUS,\n  RESET_STATE,\n  SET_SELECTED_ROLE_MENU\n} from \"./RolesActions\";\n\nexport const initialState = {\n  listRoles: [],\n  selectedRoleId: \"\",\n  selectedRoleDetail: {},\n  selectedRoleMenu: [],\n  formStatus: \"add\",\n};\n\nexport default function rolesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ROLES:\n      newState.listRoles = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_ID:\n      newState.selectedRoleId = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_DETAIL:\n      newState.selectedRoleDetail = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_MENU:\n      newState.selectedRoleMenu = action.payload;\n      return { ...newState };\n\n    case RESET_STATE:\n      newState.listRoles = [];\n      newState.selectedRoleId = \"\";\n      newState.selectedRoleDetail = {};\n      newState.formStatus = \"add\";\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_PROVINCE_LIST_DATA = \"SET_PROVINCE_LIST_DATA\";\nexport const SET_CITY_LIST_DATA = \"SET_CITY_LIST_DATA\";\nexport const SET_MENU_LIST_DATA = \"SET_MENU_LIST_DATA\";\n\nexport const setProvinceListData = (payload) => {\n  return {\n    type: SET_PROVINCE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setMenuListData = (payload) => {\n  return {\n    type: SET_MENU_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCityListData = (payload) => {\n  return {\n    type: SET_CITY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const loadProvinceListData = async () => {\n  try {\n    const { data } = await Invoke.getProvinceList(1, 100);\n    store.dispatch(setProvinceListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadCityListData = async (provinceId) => {\n  try {\n    const { data } = await Invoke.getCityList(1, 200, provinceId);\n    store.dispatch(setCityListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadMenuListData = async () => {\n  try {\n    const { data } = await Invoke.getListMenu(1, 100);\n    store.dispatch(setMenuListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_LIST_DATA = \"SET_EMPLOYEE_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_ID = \"SET_SELECTED_EMPLOYEE_ID\";\nexport const SET_SELECTED_EMPLOYEE_DATA = \"SET_SELECTED_EMPLOYEE_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEES = \"SET_PAGING_EMPLOYEES\";\nexport const SET_EMPLOYEE_LIST_DROPDOWN = \"SET_EMPLOYEE_LIST_DROPDOWN\";\n\nexport const setEmployeeListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setEmployeeListDropdown = (payload) => {\n  return {\n    type: SET_EMPLOYEE_LIST_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedRoleEmployee = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployees = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEES,\n    payload,\n  };\n};\n\nexport const loadEmployeeListData = async (\n  page,\n  limit,\n  keyword = \"\",\n  roleId = \"\",\n  branchId = \"\",\n  divisionId = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeList(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setEmployeeListData(data.callback.data));\n    store.dispatch(setPagingEmployees(paging));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const loadEmployeeDataDropdown = async () => {\n  try {\n    const { data } = await Invoke.getEmployeeList(1, 99999999, \"\", \"\", \"\", \"\");\n\n    store.dispatch(setEmployeeListDropdown(data.callback.data));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getEmployeeToolsRequested = (employeeId, page, limit) => {\n  try {\n    const { data } = Invoke.getEmployeeTools(employeeId, page, limit);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployees(paging));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getRolesByEmployeeId = async (employeeId) => {\n  const { data } = await Invoke.getEmployeeRoles(employeeId, 1, 100);\n  let subItem = [];\n  data.callback.data.map((item, index) => {\n    subItem.push(item.role_id);\n  });\n  store.dispatch(setSelectedRoleEmployee(subItem));\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeProcess = async (values, selectedRoles) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.nik = values.nik;\n    payload.password = values.password ?? \"\";\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n\n    await Invoke.addEmployee(payload);\n    // await doSaveEmployeeRole(selectedRoles, \"add\");\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    loadEmployeeListData(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employees\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeProcess = async (values, roleSelected) => {\n  const { dispatch } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.nik = values.nik;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n    // Save Employee - roles actions\n    if (values.selectedRoles.length > 0) {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-and-add\");\n    } else {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-all\");\n    }\n    // Save Employee data actions\n    await Invoke.updateEmployee(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    setTimeout(() => {\n      navigate(\"/employees\");\n    }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doAddEmployeeRoleProcess = async (newRoleId, employeeId) => {\n  const payload = {\n    employee_id: employeeId,\n    role_id: newRoleId,\n  };\n  await Invoke.addEmployeeRole(payload);\n};\n\nconst doDeleteAllEmployeeRoleProcess = async (roleListApi) => {\n  roleListApi.data.map(async (item, index) => {\n    await Invoke.deleteEmployeeRole(item.id);\n  });\n};\n\nconst doDeleteEmployeeProcess = async (employeeId) => {\n  const { getState } = store;\n  const paging = getState().employees.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeById(employeeId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    loadEmployeeListData(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doSaveEmployeeRole = async (newRoleSelected, type) => {\n  const { getState } = store;\n  try {\n    const currentRoleSelected = getState().employees.selectedRoleEmployee;\n    const selectedEmployeeId = getState().employees.selectedEmployeeId;\n    const { data } = await Invoke.getEmployeeRoles(selectedEmployeeId, 1, 100);\n    const roleListApi = data.callback;\n\n    if (type === \"delete-all\") {\n      await currentRoleSelected.map(async (item, index) => {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n      });\n    } else if (type === \"add\") {\n      await newRoleSelected.map(async (item, index) => {\n        await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n      });\n    } else {\n      // Check if the user is has been have roles or not\n      if (currentRoleSelected.length > 0) {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      } else {\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveEmployeeRequested = async (\n  formStatus,\n  values,\n  roleSelected\n) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeProcess(values, roleSelected);\n      } else {\n        doEditEmployeeProcess(values, roleSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employees.selectedEmployeeData;\n  const branch = `${data.branch_id}|${data.branch_name}`;\n  const province = `${data.province_id}|${data.province_name}`;\n  const city = `${data.city_id}|${data.city_name}`;\n\n  dispatch(change(\"editEmployeeForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `nik`, data.nik ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, branch ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, province ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, city ?? \"\"));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(MasterDataActions.setCityListData([]));\n  dispatch(change(\"editEmployeeForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n};\n\nexport const deleteEmployeeRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n\n  if (!values) {\n    await loadEmployeeListData(page, limit, keyword);\n    return;\n  }\n\n  const splitRole = values.role ? values.role.split(\"|\") : \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const splitDivision = values.division ? values.division.split(\"|\") : \"\";\n\n  const roleId = values.role ? splitRole[0] : \"\";\n  const branchId = values.branch ? splitBranch[0] : \"\";\n  const divisionId = values.division ? splitDivision[0] : \"\";\n\n  try {\n    await loadEmployeeListData(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_ID,\n  SET_SELECTED_EMPLOYEE_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_ROLE_EMPLOYEE,\n  SET_PAGING_EMPLOYEES,\n  SET_EMPLOYEE_LIST_DROPDOWN\n} from \"./EmployeesActions\";\n\nexport const initialState = {\n  listEmployees: [],\n  listEmployeeDropdown: [],\n  selectedEmployeeId: \"\",\n  selectedEmployeeData: {},\n  selectedRoleEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_LIST_DATA:\n      newState.listEmployees = action.payload;\n      return { ...newState };\n\n      case SET_EMPLOYEE_LIST_DROPDOWN:\n      newState.listEmployeeDropdown = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_ID:\n      newState.selectedEmployeeId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_DATA:\n      newState.selectedEmployeeData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_EMPLOYEE:\n      newState.selectedRoleEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEES:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_TOOL_LIST_DATA = \"SET_EMPLOYEE_TOOL_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_ID = \"SET_SELECTED_EMPLOYEE_TOOLS_ID\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_DATA =\n  \"SET_SELECTED_EMPLOYEE_TOOLS_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEE_TOOLS = \"SET_PAGING_EMPLOYEE_TOOLS\";\n\nexport const setEmployeeToolsListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_TOOL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployeeTools = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEE_TOOLS,\n    payload,\n  };\n};\n\nexport const getEmployeeToolsRequested = async (\n  employeeId,\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeTools(employeeId, page, limit);\n    console.log(\"=== data : \", data);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployeeTools(paging));\n    store.dispatch(setEmployeeToolsListData(data.callback.data));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeToolsData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const slpitToolsId = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.tool_id = slpitToolsId[0];\n\n    await Invoke.addEmployeeTools(payload);\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const employeeId = getState().employees.selectedEmployeeId;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const splitTools = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.employee_id = employeeId;\n    payload.tool_id = splitTools[0];\n\n    // Save Employee data actions\n    await Invoke.updateEmployeeTools(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doDeleteEmployeeToolsProcess = async (employeeToolsId) => {\n  const { getState } = store;\n  const paging = getState().employeeTools.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeToolsById(employeeToolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveEmployeeToolsRequested = async (formStatus, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeToolsProcess(values);\n      } else {\n        doEditEmployeeToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employeeTools.selectedEmployeeToolsData;\n  // const splitTools = data;\n  const tools = `${data.tool_id}|${data.name}`;\n\n  dispatch(change(\"editEmployeeToolsForm\", `id`, data.id));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, tools));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(change(\"editEmployeeToolsForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, \"\"));\n};\n\nexport const deleteEmployeeToolsRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeToolsProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n\n  if (!values) {\n    getEmployeeToolsRequested(employeeId, page, limit, keyword);\n    return;\n  }\n\n  try {\n    await getEmployeeToolsRequested(employeeId, page, limit, keyword);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_TOOL_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_TOOLS_ID,\n  SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_EMPLOYEE_TOOLS,\n} from \"./EmployeeToolsActions\";\n\nexport const initialState = {\n  listEmployeeTools: [],\n  selectedEmployeeToolsId: \"\",\n  selectedEmployeeToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeeToolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_TOOL_LIST_DATA:\n      newState.listEmployeeTools = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_ID:\n      newState.selectedEmployeeToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_DATA:\n      newState.selectedEmployeeToolsData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEE_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_PROVINCE_LIST_DATA,\n  SET_MENU_LIST_DATA,\n  SET_CITY_LIST_DATA\n} from \"./MasterDataActions\";\n\nexport const initialState = {\n  listProvince: [],\n  listCity: [],\n  listMenu: [],\n};\n\nexport default function masterDataReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_PROVINCE_LIST_DATA:\n      newState.listProvince = action.payload;\n      return { ...newState };\n    case SET_CITY_LIST_DATA:\n      newState.listCity = action.payload;\n      return { ...newState };\n    case SET_MENU_LIST_DATA:\n      newState.listMenu = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_ID = \"SET_SELECTED_UNIT_ID\";\nexport const SET_SELECTED_UNIT_DATA = \"SET_SELECTED_UNIT_DATA\";\nexport const SET_PAGING_UNIT = \"SET_PAGING_UNIT\";\n\nexport const setUnitListData = (payload) => {\n  return {\n    type: SET_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnit = (payload) => {\n  return {\n    type: SET_PAGING_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteUnitProcess = async (unitId) => {\n  const { getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitById(unitId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    payload.photo = values.imageUrl ?? \"\";\n    await Invoke.addUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.photo = values.imageUrl ?? \"\";\n    payload.description = values.description;\n    await Invoke.updateUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitForm\", `id`, \"\"));\n  dispatch(change(\"editUnitForm\", `name`, \"\"));\n  dispatch(change(\"editUnitForm\", `description`, \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, \"\"));\n};\n\nexport const mapDetailUnitToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().units.selectedUnitsData;\n\n  dispatch(change(\"editUnitForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitForm\", `description`, data.description ?? \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, data.photo ?? \"\"));\n};\n\nexport const getUnitListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getUnitList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitListData(data.callback.data));\n    store.dispatch(setPagingUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitProcess(values);\n      } else {\n        doEditUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitRequested = async (unitId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitProcess(unitId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_ID,\n  SET_SELECTED_UNIT_DATA,\n  SET_PAGING_UNIT\n} from \"./UnitsActions\";\n\nexport const initialState = {\n  listUnits: [],\n  selectedUnitsId: \"\",\n  selectedUnitsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_LIST_DATA:\n      newState.listUnits = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_ID:\n      newState.selectedUnitsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_DATA:\n      newState.selectedUnitsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_JOB_FORMS_LIST_DATA = \"SET_JOB_FORMS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_JOB_FORMS_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_JOB_FORMS_DATA = \"SET_SELECTED_JOB_FORMS_DATA\";\nexport const SET_PAGING_JOB_FORM = \"SET_PAGING_JOB_FORM\";\n\nexport const setJobFormsListData = (payload) => {\n  return {\n    type: SET_JOB_FORMS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingJobForm = (payload) => {\n  return {\n    type: SET_PAGING_JOB_FORM,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsData = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (jobFormsId) => {\n  try {\n    await Invoke.deleteJobForms(jobFormsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getJobFormsListDataRequested();\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editJobForms\", `id`, \"\"));\n  dispatch(change(\"editJobForms\", `name`, \"\"));\n  dispatch(change(\"editJobForms\", `description`, \"\"));\n};\n\nexport const mapDetailJobFormsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().jobForms.selectedJobFormsData;\n  dispatch(change(\"editJobForms\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editJobForms\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editJobForms\", `description`, data.description ?? \"\"));\n};\n\nexport const getJobFormsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListJobForm(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setJobFormsListData(data.callback.data));\n    store.dispatch(setPagingJobForm(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveJobFormsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddJobFormsProcess(values);\n      } else {\n        doEditJobFormsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteJobFormsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_JOB_FORMS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_JOB_FORMS_ID,\n  SET_SELECTED_JOB_FORMS_DATA,\n  SET_PAGING_JOB_FORM,\n} from \"./JobFormsActions\";\n\nexport const initialState = {\n  listJobForms: [],\n  selectedJobFormsId: \"\",\n  selectedJobFormsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function jobFormsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_JOB_FORMS_LIST_DATA:\n      newState.listJobForms = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_ID:\n      newState.selectedJobFormsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_DATA:\n      newState.selectedJobFormsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_JOB_FORM:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_BRANCH_LIST_DATA = \"SET_BRANCH_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_BRANCH_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_BRANCH_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_BRANCH = \"SET_PAGING_BRANCH\";\nexport const SET_BRANCH_LIST_DATA_DROPDOWN = \"SET_BRANCH_LIST_DATA_DROPDOWN\";\n\nexport const setBranchListData = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setBranchListDataDropdown = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingBranch = (payload) => {\n  return {\n    type: SET_PAGING_BRANCH,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedBranchId = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_ID,\n    payload,\n  };\n};\n\nexport const setSelectedBranchData = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteBranchById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getBranchListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.addBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.updateBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editBranchForm\", `id`, \"\"));\n  dispatch(change(\"editBranchForm\", `description`, \"\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().branch.selectedBranchData;\n  dispatch(change(\"editBranchForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editBranchForm\", `description`, data.name ?? \"\"));\n};\n\nexport const getBranchListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  isDropdown = false\n) => {\n  try {\n    const { data } = await Invoke.getListBranch(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdown) {\n      store.dispatch(setBranchListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setBranchListData(data.callback.data));\n    }\n    store.dispatch(setPagingBranch(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveBranchRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddBranchProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteBranchRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_BRANCH_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_BRANCH,\n  SET_SELECTED_BRANCH_ID,\n  SET_SELECTED_BRANCH_DATA,\n  SET_BRANCH_LIST_DATA_DROPDOWN\n} from \"./BranchActions\";\n\nexport const initialState = {\n  listBranch: [],\n  listBranchDropdown: [],\n  selectedBranchId: \"\",\n  selectedBranchData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_BRANCH_LIST_DATA:\n      newState.listBranch = action.payload;\n      return { ...newState };\n\n    case SET_BRANCH_LIST_DATA_DROPDOWN:\n      newState.listBranchDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_ID:\n      newState.selectedBranchId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_DATA:\n      newState.selectedBranchData = action.payload;\n      return { ...newState };\n    case SET_PAGING_BRANCH:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_SERVICES_SUMMARY_DATA,\n  SET_SELECTED_SERVICES_MEDIA_DATA,\n  SET_SELECTED_SERVICES_DAILIES_DATA,\n  SET_SELECTED_SERVICES_HISTORIES_DATA,\n  SET_SELECTED_SERVICES_CHECKLIST_DATA,\n  SET_SELECTED_SERVICES_REJECTED_DATA,\n  SET_REJECTIONS_MODAL,\n  SET_EDIT_TRANSACTION_MODAL,\n  SET_EDIT_DAILIES_MODAL,\n  SET_SELECTED_EDIT_DAILIES_DATA,\n  SET_SELECTED_UNIT,\n  RESET_DETAIL_SERVICE,\n  SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n  SET_GROUPING_SUMMARY_DATA,\n  SET_GROUPING_CHECKLIST_DATA,\n} from \"./DetailServiceTransactionAction\";\n\nexport const initialState = {\n  selectedServiceEmployeeList: [],\n  selectedServiceSummary: {},\n  selectedServiceMedia: [],\n  groupingSelectedServiceMedia: [],\n  groupingSelectedServiceSummary: [],\n  groupingSelectedServiceChecklist: [],\n  selectedServiceDailies: [],\n  selectedServiceHistories: [],\n  selectedServiceChecklist: [],\n  selectedServiceRejected: [],\n  rejectionsModal: false,\n  editTransactionModal: false,\n  editDailiesModal: false,\n  selectedEditDailies: {},\n  selectedUnit: \"Seluruh Unit\",\n};\n\nexport default function detailServiceTransactionReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA:\n      newState.selectedServiceEmployeeList = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_SUMMARY_DATA:\n      newState.selectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_MEDIA_DATA:\n      newState.selectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA:\n      newState.groupingSelectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SUMMARY_DATA:\n      newState.groupingSelectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_GROUPING_CHECKLIST_DATA:\n      newState.groupingSelectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_DAILIES_DATA:\n      newState.selectedServiceDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_HISTORIES_DATA:\n      newState.selectedServiceHistories = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_CHECKLIST_DATA:\n      newState.selectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_REJECTED_DATA:\n      newState.selectedServiceRejected = action.payload;\n      return { ...newState };\n    case SET_REJECTIONS_MODAL:\n      newState.rejectionsModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_TRANSACTION_MODAL:\n      newState.editTransactionModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_DAILIES_MODAL:\n      newState.editDailiesModal = action.payload;\n      return { ...newState };\n    case SET_SELECTED_EDIT_DAILIES_DATA:\n      newState.selectedEditDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      return { ...newState };\n    case RESET_DETAIL_SERVICE:\n      return initialState;\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_MODEL_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_MODEL_ID = \"SET_SELECTED_UNIT_MODEL_ID\";\nexport const SET_SELECTED_UNIT_MODEL_DATA = \"SET_SELECTED_UNIT_MODEL_DATA\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\n\nexport const setUnitModelListData = (payload) => {\n  return {\n    type: SET_UNIT_MODEL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_DATA,\n    payload,\n  };\n};\n\nexport const getUnitModelListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitModel(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitModelListData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitModelsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.addUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitModelsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = values.unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.updateUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (unitModelId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitModelById(unitModelId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitModelsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitModelsProcess(values);\n      } else {\n        doEditUnitModelsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitModelToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitModels.selectedUnitModelsData;\n\n  dispatch(change(\"editUnitModelForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, data.descriptions ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(change(\"editUnitModelForm\", `machineNo`, data.machine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, data.engine_model ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, data.engine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, data.chasis_no ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `transmissionNo`, data.transmission_no ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitModelForm\", `id`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `machineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `transmissionNo`, \"\"));\n};\n","import {\n  SET_UNIT_MODEL_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_MODEL_ID,\n  SET_SELECTED_UNIT_MODEL_DATA,\n  SET_PAGING_UNIT_MODEL\n} from \"./UnitModelActions\";\n\nexport const initialState = {\n  listUnitModels: [],\n  selectedUnitModelsId: \"\",\n  selectedUnitModelsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitModelReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_MODEL_LIST_DATA:\n      newState.listUnitModels = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_ID:\n      newState.selectedUnitModelsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_DATA:\n      newState.selectedUnitModelsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_ENUM_UNIT_MODEL = \"SET_ENUM_UNIT_MODEL\";\n\nexport const setEnumUnintModel = (payload) => {\n  return {\n    type: SET_ENUM_UNIT_MODEL,\n    payload,\n  };\n};\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateUnitModel = async (unitId, fieldIndex) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getListUnitModel(1, 100, unitId, \"\");\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${fieldIndex}].enumUnitModel`,\n      data.callback.data ?? []\n    )\n  );\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"externalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(1, 200, employeeData.province_id);\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === employeeData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        citySelected.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        citySelected\n      )\n    );\n    // store.dispatch(\n    //   change(\"externalServiceForm\", \"employeeCityName\", detailEmployee.nik)\n    // );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"externalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"externalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const onChangeUnitModel = (val, index, enumUnit) => {\n  const { dispatch } = store;\n\n  const splitUnitModel = val.split(\"|\");\n\n  const [selectedUnitModel] = enumUnit.filter(\n    (x) => x.id === splitUnitModel[0]\n  );\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${index}].unitModelSerialNumber`,\n      selectedUnitModel.serial_number ?? \"\"\n    )\n  );\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  const splitWarranty = values.warranty.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const unitList = [];\n  values.units.map((item, index) => {\n    const splitUnitModel = item.unitModelId.split(\"|\");\n    unitList.push({\n      unit_model_id: splitUnitModel[0],\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"true\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: splitWarranty[0],\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: unitList ?? [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              resolve();\n            }, 1000);\n            setTimeout(() => {\n              navigate(\"list_service\");\n            }, 1500);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import { SET_ENUM_UNIT_MODEL } from \"./ExternalServiceActions\";\n\nexport const initialState = {\n  enumUnitModel: [],\n};\n\nexport default function externalServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ENUM_UNIT_MODEL:\n      newState.enumUnitModel = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change, reset } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { message } from \"antd\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_IDENTIFICATIONN_LIST_DATA = \"SET_IDENTIFICATIONN_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_IDENTIFICATION_ID = \"SET_SELECTED_IDENTIFICATION_ID\";\nexport const SET_PAGING_IDENTIFICATION = \"SET_PAGING_IDENTIFICATION\";\nexport const SET_SELECTED_IDENTIFICATION_DATA =\n  \"SET_SELECTED_IDENTIFICATION_DATA\";\n\nexport const setIdentificationListData = (payload) => {\n  return {\n    type: SET_IDENTIFICATIONN_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingIdentification = (payload) => {\n  return {\n    type: SET_PAGING_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationId = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationData = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_DATA,\n    payload,\n  };\n};\n\nexport const getIdentificationListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState, dispatch } = store;\n  try {\n    const branches = getState().branch.listBranch;\n    const { data } = await Invoke.getIdentificationList(page, limit, keyword);\n    const identificationList = data.callback.data;\n\n    const newIdentificationList = [];\n    if (identificationList.length > 0) {\n      identificationList.map((item, index) => {\n        const [defaultBranch] = branches.filter((x) => x.id === item.branch_id);\n        item.branch_name = defaultBranch ? defaultBranch.name : \"-\";\n\n        newIdentificationList.push(item);\n      });\n    }\n\n    dispatch(setIdentificationListData(newIdentificationList));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteIdentificationProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteIdentificationById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddIdentificationProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const splitCustomer = values.customer.split(\"|\");\n    const splitBranch = values.branch.split(\"|\");\n    const splitLocation = values.location.split(\"|\");\n    const splitMilling = values.milling.split(\"|\");\n    const splitType = values.type.split(\"|\");\n\n    const payload = {};\n    payload.customer_id = splitCustomer[0];\n    payload.branch_id = splitBranch[0];\n    payload.location = splitLocation[0];\n    payload.type = splitType[0];\n    payload.status = SelectStatus[0].value;\n    payload.milling = splitMilling[0];\n\n    await Invoke.addIdentification(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationMilling = async (values, isLastStep) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = !values.instanceType\n      ? \"\"\n      : values.instanceType.split(\"|\");\n    const splitMillingStatus = !values.millingStatus\n      ? \"\"\n      : values.millingStatus.split(\"|\");\n    const splitCity = !values.city ? \"\" : values.city.split(\"|\") ?? [];\n    const splitProvince = !values.province\n      ? \"\"\n      : values.province.split(\"|\") ?? [];\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0],\n      instance_name: values.instanceName ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0] ?? \"\",\n      city: splitCity[1] ?? \"\",\n      province: splitProvince[1] ?? \"\",\n      phone: values.phone ?? \"\",\n      milling_capacity: values.millingCapacity ?? \"\",\n      milling_work_capacity_perday: values.millingWorkCapacityPerDay ?? \"\",\n      rice_trademark: values.riceTrademark ?? \"\",\n      history_service_place: values.history_service_place ?? \"\",\n      history_service_type: values.history_service_type ?? \"\",\n      notes: values.note ?? \"\",\n      engine_confs: engineConfs,\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    if (isLastStep) {\n      showToast(\"Menyimpan perubahan\", \"success\");\n      setTimeout(() => {\n        navigate(\"identification\");\n      }, 1000);\n    }\n    // return;\n    await Invoke.updateIdentificationMilling(payload);\n    // showToast(\"Pembaruan Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationRegular = async (values, isFinished) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    if (!values || values === undefined) {\n      // showToast(\"Harap lengkapi form untuk melanjutkan\", \"error\");\n      return;\n    }\n\n    console.log(\"=== values : \", values);\n\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = values?.instanceType.split(\"|\");\n    const splitMillingStatus = values.millingStatus\n      ? values?.millingStatus.split(\"|\")\n      : [\"\"];\n    const splitCity = values?.city.split(\"|\");\n    const splitProvince = values?.province.split(\"|\");\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0] ?? \"\",\n      instance_name: values.instanceName ?? \"\",\n      instance_address: values.instanceAddress ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0],\n      address_district: \"\",\n      address_city: splitCity[1] ?? \"\",\n      address_province: splitProvince[1] ?? \"\",\n      address_subdistrict: values.kelurahan ?? \"\",\n      address_postal_code: values.postalCode ?? \"\",\n      phone: values.instancePhoneNumber ?? \"\",\n      product_name: values.productName,\n      buy_date: \"2021-09-22\",\n      assistance_date: \"2021-09-25\",\n      serial_number: \"SN1231\",\n      machine_number: \"MCN1231\",\n      gearbox_number: \"GB1231\",\n      production_unit_year: \"2021\",\n      work_hour_per_day: \"8 Hours\",\n      hour_meter: 1233,\n      history_service_place: \"Fee Text\",\n      history_service_type: \"Fee Text\",\n      notes: \"Test Regular Identification\",\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    // return;\n    await Invoke.updateIdentificationRegular(payload);\n    if (isFinished) {\n      showToast(\"Data berhasil disimpan\", \"success\");\n      getIdentificationListRequested(page, limit);\n      navigate(\"/identification\");\n    }\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n// === END INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(reset(\"editIdentificationhForm\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().identification.setSelectedIdentificationData;\n  dispatch(change(\"editIdentificationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editIdentificationForm\", `description`, data.name ?? \"\"));\n};\n\nexport const saveIdentificationRequested = async (\n  type,\n  values,\n  isLastStep = false\n) => {\n  const { getState } = store;\n  const isMilling =\n    getState().identification.selectedIdentificationData.milling;\n\n  if (type === \"add\") {\n    doAddIdentificationProcess(values);\n  } else {\n    if (isMilling) {\n      doUpdateIdentificationMilling(values, isLastStep);\n    } else {\n      doUpdateIdentificationRegular(values, isLastStep);\n    }\n  }\n};\n\nexport const deleteIdentificationRequested = async (identificationId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteIdentificationProcess(identificationId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_IDENTIFICATIONN_LIST_DATA,\n  SET_SELECTED_IDENTIFICATION_DATA,\n  SET_SELECTED_IDENTIFICATION_ID,\n  SET_FORM_STATUS,\n  SET_PAGING_IDENTIFICATION\n} from \"./IdentificationActions\";\n\nexport const initialState = {\n  listIdentification: [],\n  selectedIdentificationId: \"\",\n  selectedIdentificationData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function identificationReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_IDENTIFICATIONN_LIST_DATA:\n      newState.listIdentification = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_ID:\n      newState.selectedIdentificationId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_DATA:\n      newState.selectedIdentificationData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_IDENTIFICATION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_MACHINE_LIST_DATA = \"SET_MACHINE_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_MACHINE_ID = \"SET_SELECTED_MACHINE_ID\";\nexport const SET_SELECTED_MACHINE_DATA = \"SET_SELECTED_MACHINE_DATA\";\nexport const SET_PAGING_MACHINE_CONF = \"SET_PAGING_MACHINE_CONF\";\n\nexport const setMachineListData = (payload) => {\n  return {\n    type: SET_MACHINE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMachineConf = (payload) => {\n  return {\n    type: SET_PAGING_MACHINE_CONF,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedMachineId = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedMachineData = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteMachineProcess = async (machineId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteEngine(machineId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getMachineListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editMachineConfigurationForm\", `name`, \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `description`, \"\"));\n};\n\nexport const mapDetailMachineToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().machineConfiguration.selectedMachineData;\n  dispatch(change(\"editMachineConfigurationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `name`, data.name ?? \"\"));\n  dispatch(\n    change(\n      \"editMachineConfigurationForm\",\n      `description`,\n      data.description ?? \"\"\n    )\n  );\n};\n\nexport const getMachineListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListEngine(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setMachineListData(data.callback.data));\n    store.dispatch(setPagingMachineConf(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveMachineRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddMachineProcess(values);\n      } else {\n        doEditMachineProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteMachineRequested = async (machineId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteMachineProcess(machineId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_MACHINE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_MACHINE_ID,\n  SET_SELECTED_MACHINE_DATA,\n  SET_PAGING_MACHINE_CONF,\n} from \"./MachineConfigurationActions\";\n\nexport const initialState = {\n  listMachine: [],\n  selectedMachineId: \"\",\n  selectedMachineData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function machineConfigurationReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MACHINE_LIST_DATA:\n      newState.listMachine = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_ID:\n      newState.selectedMachineId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_DATA:\n      newState.selectedMachineData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MACHINE_CONF:\n      newState.paging = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_TOOLS_LIST_DATA = \"SET_TOOLS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_TOOLS_ID = \"SET_SELECTED_TOOLS_ID\";\nexport const SET_SELECTED_TOOLS_DATA = \"SET_SELECTED_TOOLS_DATA\";\nexport const SET_PAGING_TOOLS = \"SET_PAGING_TOOLS\";\n\nexport const setToolsListData = (payload) => {\n  return {\n    type: SET_TOOLS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingTools = (payload) => {\n  return {\n    type: SET_PAGING_TOOLS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteToolsProcess = async (toolsId) => {\n  const { getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteTool(toolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getToolsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.addTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.updateTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editToolsForm\", `id`, \"\"));\n  dispatch(change(\"editToolsForm\", `name`, \"\"));\n  dispatch(change(\"editToolsForm\", `description`, \"\"));\n};\n\nexport const mapDetailToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().tools.selectedToolsData;\n  dispatch(change(\"editToolsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editToolsForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editToolsForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getToolsListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListTools(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setToolsListData(data.callback.data));\n    store.dispatch(setPagingTools(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveToolsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddToolsProcess(values);\n      } else {\n        doEditToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteToolsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteToolsProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_TOOLS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_TOOLS_ID,\n  SET_SELECTED_TOOLS_DATA,\n  SET_PAGING_TOOLS,\n} from \"./ToolsActions\";\n\nexport const initialState = {\n  listTools: [],\n  selectedToolsId: \"\",\n  selectedToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function toolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_TOOLS_LIST_DATA:\n      newState.listTools = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_ID:\n      newState.selectedToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_DATA:\n      newState.selectedToolsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_FORM_CATEGORY_LIST_DATA = \"SET_FORM_CATEGORY_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_FORM_CATEGORY_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_FORM_CATEGORY_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_FORM_CATEGORY = \"SET_PAGING_FORM_CATEGORY\";\n\nexport const setFormCategoryListData = (payload) => {\n  return {\n    type: SET_FORM_CATEGORY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingFormCategory = (payload) => {\n  return {\n    type: SET_PAGING_FORM_CATEGORY,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryId = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_ID,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryData = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteFormCategoryProcess = async (categoryFormId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteFormCategory(categoryFormId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"Nones\";\n    await Invoke.updateFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editFormCategory\", `id`, \"\"));\n  dispatch(change(\"editFormCategory\", `name`, \"\"));\n  dispatch(change(\"editFormCategory\", `description`, \"\"));\n};\n\nexport const mapDetailCategoryToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().formCategory.selectedFormCategoryData;\n  dispatch(change(\"editFormCategory\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editFormCategory\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editFormCategory\", `description`, data.description ?? \"\"));\n};\n\nexport const getFormCatgeoryListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getFormCategory(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setFormCategoryListData(data.callback.data));\n    store.dispatch(setPagingFormCategory(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveFormCategoryRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddFormCategoryProcess(values);\n      } else {\n        doEditFormCategoryProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteFormCategoryRequested = async (formCategoryId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteFormCategoryProcess(formCategoryId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_FORM_CATEGORY_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_FORM_CATEGORY_ID,\n  SET_SELECTED_FORM_CATEGORY_DATA,\n  SET_PAGING_FORM_CATEGORY\n} from \"./FormCategoryActions\";\n\nexport const initialState = {\n  listFormCategory: [],\n  selectedFormCategoryId: \"\",\n  selectedFormCategoryData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function formCategoryReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_FORM_CATEGORY_LIST_DATA:\n      newState.listFormCategory = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_ID:\n      newState.selectedFormCategoryId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_DATA:\n      newState.selectedFormCategoryData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_FORM_CATEGORY:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_FIELDS_LIST_DATA = \"SET_UNIT_FIELDS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_FIELDS_ID = \"SET_SELECTED_UNIT_FIELDS_ID\";\nexport const SET_SELECTED_UNIT_FIELDS_DATA = \"SET_SELECTED_UNIT_FIELDS_DATA\";\nexport const SET_PAGING_UNIT_FIELDS = \"SET_PAGING_UNIT_FIELDS\";\n\nexport const setUnitFieldsListData = (payload) => {\n  return {\n    type: SET_UNIT_FIELDS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitFields = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_FIELDS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_DATA,\n    payload,\n  };\n};\n\nexport const getUnitFieldsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitFields(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitFieldsListData(data.callback.data));\n    store.dispatch(setPagingUnitFields(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddUnitFieldsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.addUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitFieldsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitFieldsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitFieldsProcess(values);\n      } else {\n        doEditUnitFieldsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_UNIT_FIELDS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_FIELDS_ID,\n  SET_SELECTED_UNIT_FIELDS_DATA,\n  SET_PAGING_UNIT_FIELDS,\n} from \"./UnitFieldsActions\";\n\nexport const initialState = {\n  listUnitFields: [],\n  selectedUnitFieldsId: \"\",\n  selectedUnitFieldsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitFieldsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_FIELDS_LIST_DATA:\n      newState.listUnitFields = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_ID:\n      newState.selectedUnitFieldsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_DATA:\n      newState.selectedUnitFieldsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_FIELDS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_MONITORING_EMPLOYEE_LIST_DATA =\n  \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setMonitoringEmployeeListData = (payload) => {\n  return {\n    type: SET_MONITORING_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getMonitoringEmployeeListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().monitoringEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportMonitoringEmployee(\n      page,\n      limit,\n      from,\n      until,\n      type,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListMonitoringEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newListMonitoringEmployee.push({\n            created_date: item.date,\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(\n      setMonitoringEmployeeListData(newListMonitoringEmployee ?? [])\n    );\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n\n  if (!values) {\n    await getMonitoringEmployeeListDataRequested(page, limit);\n    return;\n  }\n  const splitType = values.type ? values.type.split(\"|\") : \"\";\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const type = values.type ? splitType[0] : \"all\";\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_MONITORING_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./MonitoringEmployeeActions\";\n\nexport const initialState = {\n  listMonitoringEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function monitoringEmployeeReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MONITORING_EMPLOYEE_LIST_DATA:\n      newState.listMonitoringEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_SERVICE_REPAIR_LIST_DATA = \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_SERVICE_REPAIR = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setServiceRepairListData = (payload) => {\n  return {\n    type: SET_SERVICE_REPAIR_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingServiceRepair = (payload) => {\n  return {\n    type: SET_PAGING_SERVICE_REPAIR,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getServiceRepairListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().serviceRepair.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportServiceRepair(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListServiceRepair = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        newListServiceRepair.push({\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setServiceRepairListData(newListServiceRepair ?? []));\n    store.dispatch(setPagingServiceRepair(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().serviceRepair.paging;\n\n  if (!values) {\n    await getServiceRepairListDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_SERVICE_REPAIR_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_SERVICE_REPAIR,\n} from \"./ReportServiceRepairActions\";\n\nexport const initialState = {\n  listServiceRepair: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportServiceRepairReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SERVICE_REPAIR_LIST_DATA:\n      newState.listServiceRepair = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_SERVICE_REPAIR:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_EMPLOYEE_LIST_DATA = \"SET_REPORT_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_REPORT_EMPLOYEE = \"SET_PAGING_REPORT_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportEmployeeListData = (payload) => {\n  return {\n    type: SET_REPORT_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportEmployee = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportEmployeeListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee.paging;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/* eslint-disable default-case */\nimport {\n  SET_REPORT_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_REPORT_EMPLOYEE,\n} from \"./ReportEmployeeActions\";\n\nexport const initialState = {\n  listReportEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportEmployeeReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  switch (action.type) {\n    case SET_REPORT_EMPLOYEE_LIST_DATA:\n      newState.listReportEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_REPORT_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_LIST_DATA = \"SET_DIVISION_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_ID = \"SET_SELECTED_DIVISION_ID\";\nexport const SET_SELECTED_DIVISION_DATA = \"SET_SELECTED_DIVISION_DATA\";\nexport const SET_PAGING_DIVISION = \"SET_PAGING_DIVISION\";\n\nexport const setDivisionListData = (payload) => {\n  return {\n    type: SET_DIVISION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivision = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteDivisionProcess = async (divisionId) => {\n  const { getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteDivision(divisionId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddDivisionProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = headDivision[0];\n    payload.title = values.title;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.title = values.title;\n    payload.employee_id = headDivision[0];\n    payload.description = values.description ?? \"none\";\n    await Invoke.updateDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editDivisionForm\", `id`, \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, \"\"));\n  dispatch(change(\"editDivisionForm\", `headDivision`, \"\"));\n};\n\nexport const mapDetailDivisionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().division.selectedDivisionData;\n\n  dispatch(change(\"editDivisionForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, data.description ?? \"\"));\n  dispatch(\n    change(\n      \"editDivisionForm\",\n      `headDivision`,\n      `${data.employee_id}|${data.employee_name}`\n    )\n  );\n};\n\nexport const getDivisionListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getDivisionList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionListData(data.callback.data));\n    store.dispatch(setPagingDivision(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveDivisionRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionProcess(values);\n      } else {\n        doEditDivisionProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteDivisionRequested = async (divisionId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteDivisionProcess(divisionId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_DIVISION_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_ID,\n  SET_SELECTED_DIVISION_DATA,\n  SET_PAGING_DIVISION\n} from \"./DivisionActions\";\n\nexport const initialState = {\n  listDivision: [],\n  selectedDivisionId: \"\",\n  selectedDivisionData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_LIST_DATA:\n      newState.listDivision = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_ID:\n      newState.selectedDivisionId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_DATA:\n      newState.selectedDivisionData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_UNIT_LIST_DATA = \"SET_DIVISION_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_UNIT_ID = \"SET_SELECTED_DIVISION_UNIT_ID\";\nexport const SET_SELECTED_DIVISION_UNIT_DATA =\n  \"SET_SELECTED_DIVISION_UNIT_DATA\";\nexport const SET_PAGING_DIVISION_UNIT = \"SET_PAGING_DIVISION_UNIT\";\n\nexport const setDivisionUnitListData = (payload) => {\n  return {\n    type: SET_DIVISION_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivisionUnit = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisonUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_DATA,\n    payload,\n  };\n};\n\nexport const getDivisionUnitListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const divisionId = getState().division.selectedDivisionId;\n  try {\n    const { data } = await Invoke.getDivisionUnitList(\n      divisionId,\n      page,\n      limit,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionUnitListData(data.callback.data));\n    store.dispatch(setPagingDivisionUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddDivisionUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const divisionId = getState().division.selectedDivisionId;\n  const { page, limit } = paging;\n  const splitUnitId = values.unit.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = splitUnitId[0];\n    payload.division_id = divisionId;\n\n    await Invoke.addDivisionUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const unitId = getState().division.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveDivisionUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionUnitProcess(values);\n      } else {\n        doEditDivisionUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_DIVISION_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_UNIT_ID,\n  SET_SELECTED_DIVISION_UNIT_DATA,\n  SET_PAGING_DIVISION_UNIT,\n} from \"./DivisionUnitActions\";\n\nexport const initialState = {\n  listDivisionUnit: [],\n  selectedDivisionUnitId: \"\",\n  selectedDivisionUnitData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionUnitReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_UNIT_LIST_DATA:\n      newState.listDivisionUnit = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_ID:\n      newState.selectedDivisionUnitId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_DATA:\n      newState.selectedDivisionUnitData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_DASHBOARD_DATA = \"SET_DASHBOARD_DATA\";\n\nexport const setDashboardData = (payload) => {\n  return {\n    type: SET_DASHBOARD_DATA,\n    payload,\n  };\n};\n\nexport const getDashboardProgressData = async () => {\n  try {\n    const { dispatch } = store;\n    const { data } = await Invoke.getDashboardProgressData();\n    dispatch(setDashboardData(data.callback));\n  } catch (e) {\n    console.log(\"error : \", e);\n  }\n};\n","import { SET_DASHBOARD_DATA } from \"./DashboardActions\";\n\nexport const initialState = {\n  dashboardData: {},\n};\n\nexport default function dashboardReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DASHBOARD_DATA:\n      newState.dashboardData = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\n\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_UNIT_SERIAL_NUMBER_DATA = \"SET_UNIT_SERIAL_NUMBER_DATA\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_ID =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_ID\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_DATA =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_DATA\";\n\nexport const setUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const handleSearch = (val, keyword) => {\n  const { getState, dispatch } = store;\n  const { page, limit } = getState().unitSerialNumber.paging;\n  try {\n    if (!val) {\n      toast.warning(\n        \"Wajib memilih customer untuk menampilkan data serial number\",\n        {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n      dispatch(setUnitSerialNumberData([]));\n      return;\n    }\n    const splitCustomerId = val.customer.split(\"|\");\n    getUnitSerialNumber(page, limit, keyword, splitCustomerId[0]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUnitSerialNumber = async (\n  page,\n  limit,\n  keyword = \"\",\n  customerId\n) => {\n  // If customerId is null or undefined return this\n  if (!customerId) {\n    store.dispatch(setUnitSerialNumberData([]));\n    return;\n  }\n\n  const { getState } = store;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  try {\n    const { data } = await Invoke.getUnitSerialNumber(\n      page,\n      limit,\n      keyword,\n      unitModelId,\n      customerId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitSerialNumberData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitSerialNumberProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const customerId = values.customer.split(\"|\");\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.customer_id = customerId[0];\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.description ?? \"None\";\n\n    await Invoke.addUnitSerialNumber(payload, unitModelId);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitSerialNumberProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const unitSerialNumberId =\n    getState().unitSerialNumber.selectedUnitSerialNumberId;\n\n  try {\n    const payload = {};\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.descriptions ?? \"None\";\n\n    await Invoke.updateUnitSerialNumber(\n      payload,\n      unitModelId,\n      unitSerialNumberId\n    );\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (serialNumberId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitSerialNumber(unitModelId, serialNumberId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitSerialNumber(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitSerialNumberRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitSerialNumberProcess(values);\n      } else {\n        doEditUnitSerialNumberProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitSerialNumberToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitSerialNumber.selectedUnitSerialNumberData;\n\n  dispatch(\n    change(\n      \"editUnitSerialNumberForm\",\n      `customer`,\n      `${data.customer_id}|${data.customer_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `description`, data.descriptions ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitSerialNumberForm\", `customer`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `description`, \"\"));\n};\n","import {\n  SET_UNIT_SERIAL_NUMBER_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n  SET_PAGING_UNIT_MODEL,\n} from \"./UnitSerialNumberActions\";\n\nexport const initialState = {\n  listUnitSerialNumber: [],\n  selectedUnitSerialNumberId: \"\",\n  selectedUnitSerialNumberData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitSerialNumberReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_SERIAL_NUMBER_DATA:\n      newState.listUnitSerialNumber = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_ID:\n      newState.selectedUnitSerialNumberId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_DATA:\n      newState.selectedUnitSerialNumberData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\r\nimport Invoke from \"../../../app/axios/Invoke\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport { showToast } from \"../../Roles/Store/RolesActions\";\r\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\r\n\r\nexport const SET_UNIT_JOB_FORMS_LIST_DATA = \"SET_UNIT_JOB_FORMS_LIST_DATA\";\r\nexport const SET_PAGING_UNIT_JOB_FORMS = \"SET_PAGING_UNIT_JOB_FORMS\";\r\n\r\nexport const setUnitJobFormsListData = (payload) => {\r\n  return {\r\n    type: SET_UNIT_JOB_FORMS_LIST_DATA,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setPagingUnitJobForms = (payload) => {\r\n  return {\r\n    type: SET_PAGING_UNIT_JOB_FORMS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getUnitJobFormsListDataRequested = async (jobFormId = \"\") => {\r\n  const { getState } = store;\r\n  const unitId = getState().units.selectedUnitsId;\r\n  try {\r\n    // Get data unit jobforms from API\r\n    const { data } = await Invoke.getListUnitJobForms(unitId, jobFormId);\r\n\r\n    // Store data to reducer\r\n    store.dispatch(setUnitJobFormsListData(data.callback));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import {\r\n  SET_UNIT_JOB_FORMS_LIST_DATA,\r\n  SET_PAGING_UNIT_JOB_FORMS,\r\n} from \"./UnitJobFormActions\";\r\n\r\nexport const initialState = {\r\n  listUnitJobForms: [],\r\n  paging: {\r\n    page: 1,\r\n    limit: 10,\r\n    totalPage: 0,\r\n  },\r\n};\r\n\r\nexport default function unitJobFormsReducer(state = initialState, action) {\r\n  const newState = Object.assign({}, state);\r\n\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case SET_UNIT_JOB_FORMS_LIST_DATA:\r\n      newState.listUnitJobForms = action.payload;\r\n      return { ...newState };\r\n\r\n    case SET_PAGING_UNIT_JOB_FORMS:\r\n      newState.paging = { ...state.paging, ...action.payload };\r\n      return { ...newState };\r\n  }\r\n\r\n  return state;\r\n}\r\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_WORKING_HOURS_LIST_DATA = \"SET_WORKING_HOURS_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setWorkingHoursListData = (payload) => {\n  return {\n    type: SET_WORKING_HOURS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getWorkingHoursListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().workingHours.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getWorkingHours(\n      page,\n      limit,\n      from,\n      until,\n      keyword\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListWorkingHours = [];\n\n    if (data.callback.data.length > 0) {\n      data.callback.data.map((item, index) => {\n        newListWorkingHours.push({\n          created: moment(item.created_date).format(\"YYYY-MM-DD\"),\n          done: moment(item.done_date).format(\"YYYY-MM-DD\"),\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setWorkingHoursListData(newListWorkingHours ?? []));\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n\n  if (!values) {\n    await getWorkingHoursListDataRequested(page, limit);\n    return;\n  }\n  const keyword = values.keyword ?? \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  try {\n    await getWorkingHoursListDataRequested(\n      page,\n      limit,\n      keyword,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_WORKING_HOURS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./WorkingHoursActions\";\n\nexport const initialState = {\n  listWorkingHours: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function workingHoursReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_WORKING_HOURS_LIST_DATA:\n      newState.listWorkingHours = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { combineReducers } from \"redux\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport { connectRouter } from \"connected-react-router\";\nimport { reducer as formReducer } from \"redux-form\";\nimport history from \"./History\";\nimport authReducer from \"../modules/Auth/Store/AuthReducer\";\nimport listServicesReducer from \"../modules/ListServices/Store/ListServicesReducer\";\nimport ComponentReducer from \"../modules/App/Store/ComponentReducer\";\nimport customersReducer from \"../modules/Customers/Store/CustomersReducer\";\nimport adminReducer from \"../modules/Admin/Store/AdminReducer\";\nimport rolesReducer from \"../modules/Roles/Store/RolesReducer\";\nimport employeesReducer from \"../modules/Employees/Store/EmployeesReducer\";\nimport employeeToolsReducer from \"../modules/Employees/Store/EmployeeTools/EmployeeToolsReducer\";\nimport masterDataReducer from \"../modules/MasterData/Store/MasterDataReducer\";\nimport unitReducer from \"../modules/Units/Store/UnitsReducer\";\nimport jobFormsReducer from \"../modules/JobForms/Store/JobFormsReducer\";\nimport branchReducer from \"../modules/Branch/Store/BranchReducer\";\nimport detailServiceTransactionReducer from \"../modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer\";\nimport unitModelReducer from \"../modules/Units/Store/UnitModelReducer\";\nimport externalServiceReducer from \"../modules/ExternalService/Store/ExternalServiceReducer\";\nimport identificationReducer from \"../modules/Identification/Store/IdentificationReducer\";\nimport machineConfigurationReducer from \"../modules/MachineConfiguration/Store/MachineConfigurationReducer\";\nimport toolsReducer from \"../modules/Tools/Store/ToolsReducer\";\nimport formCategoryReducer from \"../modules/FormCategory/Store/FormCategoryReducer\";\nimport unitFieldsReducer from \"../modules/Units/Store/UnitFieldsReducer\";\nimport monitoringEmployeeReducer from \"../modules/MonitoringEmployee/Store/MonitoringEmployeeReducer\";\nimport reportServiceRepairReducer from \"../modules/ReportServiceRepair/Store/ReportServiceRepairReducer\";\nimport reportEmployeeReducer from \"../modules/ReportEmployee/Store/ReportEmployeeReducer\";\nimport divisionReducer from \"../modules/Division/Store/DivisionReducer\";\nimport divisionUnitReducer from \"../modules/Division/Store/DivisionUnitReducer\";\nimport dashboardReducer from \"../modules/Dashboard/Store/DashboardReducer\";\nimport unitSerialNumberReducer from \"../modules/Units/Store/UnitSerialNumberReducer\";\nimport unitJobFormsReducer from \"../modules/Units/Store/UnitJobFormsReducer\";\nimport workingHoursReducer from \"../modules/WorkingHours/Store/WorkingHoursReducer\";\n\nconst rootReducers = combineReducers({\n  router: connectRouter(history),\n  auth: authReducer,\n  services: listServicesReducer,\n  externalService: externalServiceReducer,\n  admins: adminReducer,\n  roles: rolesReducer,\n  units: unitReducer,\n  unitModels: unitModelReducer,\n  unitFields: unitFieldsReducer,\n  unitSerialNumber: unitSerialNumberReducer,\n  unitJobForms: unitJobFormsReducer,\n  jobForms: jobFormsReducer,\n  customers: customersReducer,\n  employees: employeesReducer,\n  employeeTools: employeeToolsReducer,\n  component: ComponentReducer,\n  identification: identificationReducer,\n  workingHours: workingHoursReducer,\n  masters: masterDataReducer,\n  branch: branchReducer,\n  formCategory: formCategoryReducer,\n  tools: toolsReducer,\n  machineConfiguration: machineConfigurationReducer,\n  detailService: detailServiceTransactionReducer,\n  monitoringEmployee: monitoringEmployeeReducer,\n  serviceRepair: reportServiceRepairReducer,\n  reportEmployee: reportEmployeeReducer,\n  division: divisionReducer,\n  divisionUnit: divisionUnitReducer,\n  dashboard: dashboardReducer,\n  form: formReducer,\n  toastr: toastrReducer,\n});\n\nexport default rootReducers;\n","import * as _ from \"lodash\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport Saga from \"./Saga/SagaMiddleware\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport history from \"../app/History\";\nimport rootReducers from \"./RootReducers\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"form\", \"component\"],\n};\n\nconst resetEnhancer = (rootReducer) => (state, action) => {\n  if (action.type !== \"LOGOUT\") {\n    return rootReducer(state, action);\n  } else {\n    const newState = rootReducer(undefined, {});\n    newState.router = state.router;\n    return newState;\n  }\n};\n\nconst persistedReducer = persistReducer(\n  persistConfig,\n  resetEnhancer(rootReducers)\n);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== \"production\" &&\n  typeof window === \"object\" &&\n  _.has(window, \"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\")\n    ? composeWithDevTools({ trace: true, traceLimit: 1000 })\n    : compose;\n\nexport const store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n);\nexport const persistor = persistStore(store);\nsagaMiddleware.run(Saga);\n","import { Form } from \"antd\";\nconst FormItem = Form.Item;\n\nexport const makeField =\n  (Component, props) =>\n  ({ style, input, meta, children, hasFeedback, label, ...rest }) => {\n    const hasError = meta.touched && meta.invalid;\n    return (\n      <FormItem\n        validateStatus={hasError ? \"error\" : \"success\"}\n        hasFeedback={hasFeedback && hasError}\n        help={hasError && meta.error}\n      >\n        <Component {...props} {...input} {...rest} children={children} />\n      </FormItem>\n    );\n  };\n","import React from \"react\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport styled from \"styled-components\";\ninterface IProps {\n  loading: boolean;\n}\n\nconst Overlay = styled.div`\n  position: fixed;\n  display: block;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 99999;\n  padding-top: 23vh;\n  text-align: center;\n  margin: auto;\n  display: block;\n`;\n\nconst CGlobalOverlay: React.FC<IProps> = (props) => {\n  const { loading } = props;\n  if (loading) {\n    return (\n      <Overlay>\n        <ScaleLoader\n          height={120}\n          width={18}\n          radius={12}\n          margin={5}\n          color={\"#faad14\"}\n          loading={true}\n        />\n      </Overlay>\n    );\n  }\n  return null;\n};\n\nexport default CGlobalOverlay;\n","import React from \"react\";\n\nconst Sidebar = ({\n  role,\n  mainMenu,\n  masterDataMenu,\n  reportMenu,\n  serviceRepairMenu,\n  reportDataMenu,\n}) => {\n  return (\n    <div>\n      <nav class=\"sidebar\">\n        <div class=\"sidebar-header\">\n          <a href=\"#\" class=\"sidebar-brand\">\n            Rutan<span>Admin</span>\n          </a>\n          <div class=\"sidebar-toggler not-active\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </div>\n        <div class=\"sidebar-body\">\n          <ul class=\"nav\">\n            {mainMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Main</li>\n            )}\n            {mainMenu?.length > 0 &&\n              mainMenu.map((item, index) => (\n                <li key={`sidebar-main-menu-${index}`} class=\"nav-item\">\n                  <a href={item.path} class=\"nav-link\">\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {masterDataMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Master Data</li>\n            )}\n            {masterDataMenu?.length > 0 &&\n              masterDataMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {serviceRepairMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Service Repair</li>\n            )}\n            {serviceRepairMenu?.length > 0 &&\n              serviceRepairMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {reportMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Monitoring</li>\n            )}\n            {reportMenu?.length > 0 &&\n              reportMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {reportDataMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Laporan</li>\n            )}\n            {reportDataMenu?.length > 0 &&\n              reportDataMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer class=\"footer d-flex flex-column flex-md-row align-items-center justify-content-between\">\n      <p class=\"text-muted text-center text-md-left\">\n        Copyright © {new Date().getFullYear() + \" \"}\n        <a href=\"#\">Rutan Team</a>. All rights reserved\n      </p>\n      <p class=\"text-muted text-center text-md-left mb-0 d-none d-md-block\">\n        Handcrafted With{\" \"}\n        <i class=\"mb-1 text-primary ml-1 icon-small\" data-feather=\"heart\"></i>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Navbar = (props) => {\n  const { onLogout, userDetail } = props;\n  return (\n    <nav class=\"navbar\">\n      <a href=\"#\" class=\"sidebar-toggler\">\n        <i data-feather=\"menu\"></i>\n      </a>\n      <div class=\"navbar-content\">\n        <form class=\"search-form\">\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <div class=\"input-group-text\">\n                <i data-feather=\"search\"></i>\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"navbarForm\"\n              placeholder=\"Search here...\"\n            />\n          </div>\n        </form>\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item dropdown nav-messages\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"messageDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"mail\"></i>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"messageDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">9 New Messages</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Leonardo Payne</p>\n                      <p class=\"sub-text text-muted\">2 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project status</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Carl Henson</p>\n                      <p class=\"sub-text text-muted\">30 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Client meeting</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Jensen Combs</p>\n                      <p class=\"sub-text text-muted\">1 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project updates</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>{userDetail.fullname}</p>\n                      <p class=\"sub-text text-muted\">2 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project deadline</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Yaretzi Mayo</p>\n                      <p class=\"sub-text text-muted\">5 hr ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">New record</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-notifications\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"notificationDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"bell\"></i>\n              <div class=\"indicator\">\n                <div class=\"circle\"></div>\n              </div>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"notificationDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">6 New Notifications</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"user-plus\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New customer registered</p>\n                    <p class=\"sub-text text-muted\">2 sec ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"gift\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New Order Recieved</p>\n                    <p class=\"sub-text text-muted\">30 min ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"alert-circle\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Server Limit Reached!</p>\n                    <p class=\"sub-text text-muted\">1 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"layers\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Apps are ready for update</p>\n                    <p class=\"sub-text text-muted\">5 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"download\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Download completed</p>\n                    <p class=\"sub-text text-muted\">6 hrs ago</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-profile\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"profileDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"https://via.placeholder.com/30x30\" alt=\"profile\" />\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"profileDropdown\">\n              <div class=\"dropdown-header d-flex flex-column align-items-center\">\n                {/* <div class=\"figure mb-3\">\n                  <img src=\"https://via.placeholder.com/80x80\" alt=\"\" />\n                </div> */}\n                <div class=\"info text-center\">\n                  <p class=\"name font-weight-bold mb-0\">\n                    {userDetail.fullname\n                      ? userDetail.fullname.toUpperCase()\n                      : \"Anonym\"}\n                  </p>\n                  <p class=\"email text-muted mb-3\">\n                    {userDetail.roles.map((item) => {\n                      if (userDetail.roles.length > 1) {\n                        return `${item.name},`;\n                      }\n                      return item.name;\n                    })}\n                  </p>\n                </div>\n              </div>\n              <div class=\"dropdown-body\">\n                <ul class=\"profile-nav p-0 pt-3\">\n                  <li class=\"nav-item\">\n                    <a href=\"pages/general/profile.html\" class=\"nav-link\">\n                      <i data-feather=\"user\"></i>\n                      <span>Profile</span>\n                    </a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a onClick={onLogout} class=\"nav-link cursor-pointer\">\n                      <i data-feather=\"log-out\"></i>\n                      <span>Log Out</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport CGlobalOverlay from \"../../../components/CGlobalOverlay/CGlobalOverlay\";\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport Navbar from \"../../../components/Navbar/Navbar\";\n\nconst TemplateComponent = (props) => {\n  const {\n    children,\n    isGlobalLoading,\n    isLandingPage,\n    logout,\n    userDetail,\n    role,\n    mainMenu,\n    masterDataMenu,\n    reportMenu,\n    serviceRepairMenu,\n    reportDataMenu,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <CGlobalOverlay loading={isGlobalLoading} />\n      {isLandingPage && (\n        <Sidebar\n          role={role}\n          masterDataMenu={masterDataMenu}\n          mainMenu={mainMenu}\n          reportMenu={reportMenu}\n          serviceRepairMenu={serviceRepairMenu}\n          reportDataMenu={reportDataMenu}\n        />\n      )}\n      <div className={`page-wrapper ${!isLandingPage ? \"full-page\" : \"\"}`}>\n        {isLandingPage && <Navbar onLogout={logout} userDetail={userDetail} />}\n        {children}\n        {isLandingPage && <Footer />}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TemplateComponent;\n","import { createSelector } from \"reselect\";\n\nconst selectorAuth = (state) => state.auth;\n\n// SELECTOR FOR AUTH\nexport const AllAuthData = () => createSelector(selectorAuth, (state) => state);\nexport const Token = () =>\n  createSelector(selectorAuth, (state) => state.accessToken);\nexport const UserDetail = () =>\n  createSelector(selectorAuth, (state) => state.userDetail);\nexport const ErrorData = () =>\n  createSelector(selectorAuth, (state) => state.error);\nexport const UserRole = () =>\n  createSelector(selectorAuth, (state) => state?.userDetail?.roles);\n  export const UserMenus = () =>\n  createSelector(selectorAuth, (state) => state?.userDetail?.menus);\n","import { createSelector } from \"reselect\";\n\nconst selectorComponent = (state) => state.component;\n\nexport const IsGlobalLoading = () =>\n  createSelector(selectorComponent, (state) => state.isLoadingGlobal);\n","import React from \"react\";\nimport { compose } from \"redux\";\n\nimport TemplateComponent from \"../Component/TemplateComponent\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as authActions from \"../../Auth/Store/AuthAction\";\nimport * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\nimport * as AppSelector from \"../../App/Selector/AppSelector\";\n\nconst TemplateContainer = (props) => {\n  const [role, setRole] = React.useState(\"\");\n  const { userDetail } = props;\n\n  React.useEffect(() => {\n    if (userDetail && userDetail.role) {\n      setRole(userDetail.role[0].name);\n    }\n  }, [userDetail]);\n\n  const getIconName = (menu) => {\n    switch (menu) {\n      case \"/dashboard\":\n        return \"command\";\n\n      case \"/admin\":\n        return \"user\";\n\n      case \"/cabang\":\n        return \"link\";\n\n      case \"/employees\":\n        return \"users\";\n\n      case \"/customer\":\n        return \"users\";\n\n      case \"/division\":\n        return \"briefcase\";\n\n      case \"/role\":\n        return \"key\";\n\n      case \"/tools\":\n        return \"tool\";\n\n      case \"/machine\":\n        return \"settings\";\n\n      case \"/jobforms\":\n        return \"file-text\";\n\n      case \"/category\":\n        return \"file-text\";\n\n      case \"/unit\":\n        return \"box\";\n\n      case \"/internal-service\":\n        return \"file-plus\";\n\n      case \"/external-service\":\n        return \"file-plus\";\n\n      case \"/list_service\":\n        return \"list\";\n\n      case \"/monitoring-employee\":\n        return \"monitor\";\n\n      case \"/identification\":\n        return \"list\";\n\n      case \"/report_trans\":\n        return \"list\";\n\n      case \"/report_identification\":\n        return \"list\";\n\n      case \"/report_employee\":\n        return \"list\";\n\n      case \"/working-hours\":\n        return \"clock\";\n\n      default:\n        return \"command\";\n    }\n  };\n\n  const mainMenu = [];\n  const masterDataMenu = [];\n  const reportMenu = [];\n  const serviceRepairMenu = [];\n  const reportDataMenu = [];\n\n  if (userDetail) {\n    userDetail.menus.map((item, index) => {\n      let menu = {};\n      menu.icon = getIconName(item.path);\n      menu.name = item.menu;\n      menu.path = item.path;\n\n      if (\n        item.path === \"/admin\" ||\n        item.path === \"/cabang\" ||\n        item.path === \"/employees\" ||\n        item.path === \"/customer\" ||\n        item.path === \"/division\" ||\n        item.path === \"/role\" ||\n        item.path === \"/tools\" ||\n        item.path === \"/machine\" ||\n        item.path === \"/jobforms\" ||\n        item.path === \"/category\" ||\n        item.path === \"/unit\" ||\n        item.path === \"/identification\"\n      ) {\n        masterDataMenu.push(menu);\n      } else if (\n        item.path === \"/internal-service\" ||\n        item.path === \"/external-service\" ||\n        item.path === \"/list_service\"\n      ) {\n        serviceRepairMenu.push(menu);\n      } else if (item.path === \"/monitoring-employee\") {\n        reportMenu.push(menu);\n      } else if (\n        item.path === \"/report_trans\" ||\n        item.path === \"/report_employee\" ||\n        item.path === \"/report_identification\" ||\n        item.path === \"/working-hours\"\n      ) {\n        reportDataMenu.push(menu);\n      } else {\n        mainMenu.push(menu);\n      }\n    });\n  }\n\n  return (\n    <TemplateComponent\n      role={role}\n      mainMenu={mainMenu}\n      masterDataMenu={masterDataMenu}\n      reportMenu={reportMenu}\n      serviceRepairMenu={serviceRepairMenu}\n      reportDataMenu={reportDataMenu}\n      {...props}\n    />\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  isGlobalLoading: AppSelector.IsGlobalLoading(),\n  userDetail: AuthSelector.UserDetail(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => {\n    authActions.doLogout(dispatch);\n  },\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(TemplateContainer);\n","import * as React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\n\nconst withTemplate = (Template, WrappedComponent, isLandingPage) => {\n  const AddedTemplate = (props) => {\n    return (\n      <Template {...props} isLandingPage={isLandingPage}>\n        <WrappedComponent {...props} />\n      </Template>\n    );\n  };\n\n  return hoistNonReactStatics(AddedTemplate, WrappedComponent);\n};\n\nexport default withTemplate;\n","import React from \"react\";\nimport { Button } from \"antd\";\n\ninterface IProps {\n  onClick: any;\n  disabled: boolean;\n  isLoading: boolean;\n  backgroundColor: string;\n  icon: any;\n  shape: \"default\" | \"circle\" | \"round\";\n  type: \"primary\" | \"dashed\" | \"default\" | \"ghost\" | \"link\" | \"text\";\n  size: \"middle\" | \"small\" | \"large\";\n  danger: boolean;\n  block: boolean;\n}\n\nconst CButtonAntd: React.FC<IProps> = (props) => {\n  const {\n    onClick,\n    children,\n    isLoading,\n    disabled,\n    icon,\n    shape,\n    type,\n    size,\n    danger,\n    backgroundColor\n  } = props;\n  return (\n    <Button\n      style={{backgroundColor: backgroundColor, borderColor: backgroundColor}}\n      block={props.block ?? false}\n      icon={icon ?? null}\n      type={type ?? \"default\"}\n      shape={shape ?? \"default\"}\n      onClick={onClick}\n      disabled={disabled}\n      loading={isLoading}\n      size={size ?? \"middle\"}\n      danger={danger}\n    >\n      {isLoading ? \"Loading\" : children}\n    </Button>\n  );\n};\n\nexport default CButtonAntd;\n","import { Table } from \"antd\";\nimport React from \"react\";\nimport '../../../app/style/tableStyle.css'\n\nconst DashboardComponent = (props) => {\n  const { userDetail, headers, listServices, dashboard } = props;\n  return (\n    <div>\n      <div class=\"page-content\">\n        <div class=\"d-flex justify-content-between align-items-center flex-wrap grid-margin\">\n          <h4 class=\"mt-5 ml-2\">{`Hallo, ${\n            userDetail.fullname ?? \"Anonym\"\n          }`}</h4>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12 col-xl-12 stretch-card\">\n            <div class=\"row flex-grow\">\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Customer</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-12 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalCustomer}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Service Internal</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-6 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalInternalService}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Service External</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-6 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalExternalService}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Identifikasi</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-6 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalIdentification}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12 col-xl-12 grid-margin stretch-card\"></div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-lg-12 col-xl-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between align-items-baseline mb-2\">\n                  <h6 class=\"card-title mb-0\">10 Service Terbaru</h6>\n                </div>\n                <p class=\"text-muted mb-4\">\n                  Menampilkan 10 service berdasarkan tanggal terbaru\n                </p>\n                {/* <div class=\"monthly-sales-chart-wrapper\"> */}\n                {/* <canvas id=\"monthly-sales-chart\"></canvas> */}\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      // ...pagination,\n                    }}\n                  />\n                </div>\n                {/* </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardComponent;\n","import * as AdminActions from \"../modules/Admin/Store/AdminActions\";\nimport * as RoleActions from \"../modules/Roles/Store/RolesActions\";\nimport * as MasterDataActions from \"../modules/MasterData/Store/MasterDataActions\";\nimport * as BranchActions from \"../modules/Branch/Store/BranchActions\";\nimport * as UnitsActions from \"../modules/Units/Store/UnitsActions\";\nimport * as MachineConfigurationActions from \"../modules/MachineConfiguration/Store/MachineConfigurationActions\";\n\nexport const initializeApp = async () => {\n  await AdminActions.getListAdminRequested(1, 10);\n  await RoleActions.getListRolesRequested();\n  await MasterDataActions.loadMenuListData();\n  await MasterDataActions.loadProvinceListData();\n  await BranchActions.getBranchListDataRequested(1, 10);\n  await UnitsActions.getUnitListDataRequested(1, 10);\n  await MachineConfigurationActions.getMachineListDataRequested(1, 10);\n};\n","import { Space, Tag } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport DashboardComponent from \"../Component/DashboardComponent\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\nimport { getDashboardProgressData } from \"../Store/DashboardActions\";\nimport { initializeApp } from \"../../../app/InitializeApp\";\n\nconst DashboardContainer = (props) => {\n  const {\n    handlePressEdit,\n    auth: { userDetail },\n    services: { dashboardListServices },\n    dashboard: { dashboardData },\n  } = props;\n  if (dashboardListServices.length > 0) {\n    dashboardListServices.map((item, index) => {\n      dashboardListServices[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  React.useEffect(() => {\n    initializeApp();\n    store.dispatch(setGlobalLoading(false));\n    ListServiceActions.getTopTenService();\n    getDashboardProgressData();\n  }, []);\n\n  if (Object.keys(dashboardData).length > 0) {\n    dashboardData.totalCustomer = dashboardData.totalCustomer\n      ? dashboardData.totalCustomer.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalInternalService = dashboardData.totalCustomer\n      ? dashboardData.totalInternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalExternalService = dashboardData.totalExternalService\n      ? dashboardData.totalExternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalIdentification = dashboardData.totalIdentification\n      ? dashboardData.totalIdentification.toLocaleString(\"en-US\")\n      : 0;\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"15%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"40%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: \"15%\",\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: \"15%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  return (\n    <DashboardComponent\n      userDetail={userDetail}\n      headers={headers}\n      listServices={dashboardListServices}\n      dashboard={dashboardData}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  services: state.services,\n  dashboard: state.dashboard,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContainer);\n","import React from \"react\";\n\ninterface IProps {\n  onChange: any;\n  value: string;\n  label: string;\n  name: string;\n  placeholder: string;\n  type: string;\n  typeComponent: string;\n  input: any;\n  error: boolean;\n  message: string;\n  meta: { error: any; touched: any };\n  disabled: boolean;\n  maxLength: number;\n  rows: number;\n  key: string;\n  labelSize: number;\n}\n\nconst CInput: React.FC<IProps> = (props) => {\n  switch (props.typeComponent) {\n    case \"textarea\":\n      return (\n        <div className=\"form-group\">\n          <label htmlFor={props.name}>{props.label}</label>\n          <textarea\n            key={props.key ?? \"\"}\n            id={props.name}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            maxLength={props.maxLength ?? 250}\n            rows={props.rows ?? 8}\n            name={props.name}\n            onChange={props.onChange}\n            placeholder={props.placeholder ?? \"\"}\n            value={props.value}\n            {...props.input}\n          ></textarea>\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n    default:\n      return (\n        <div className=\"form-group\">\n          <label\n            htmlFor={props.name}\n            style={{ fontSize: props.labelSize ?? 14 }}\n          >\n            {props.label}\n          </label>\n          <input\n            id={props.name}\n            maxLength={props.maxLength ?? 250}\n            value={props.value}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            name={props.name}\n            type={props.type}\n            onChange={props.onChange}\n            placeholder={props.placeholder ?? \"\"}\n            disabled={props.disabled ?? false}\n            {...props.input}\n          />\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n  }\n};\n\nexport default CInput;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\n\nconst LoginComponent = (props) => {\n  const { handleSubmit, submitForm, error } = props;\n\n  return (\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto\">\n          <div class=\"card\">\n            <div class=\"row\">\n              <div class=\"col-md-4 pr-md-0\">\n                <div class=\"auth-left-wrapper\"></div>\n              </div>\n              <div class=\"col-md-8 pl-md-0\">\n                <div class=\"auth-form-wrapper px-4 py-5\">\n                  <a href=\"#\" class=\"noble-ui-logo d-block mb-2\">\n                    Rutan<span>Admin</span>\n                  </a>\n                  <h5 class=\"text-muted font-weight-normal mb-4\">\n                    Selamat datang! Silahkan login dengan akun anda.\n                  </h5>\n                  <form\n                    class=\"forms-sample\"\n                    onSubmit={handleSubmit(submitForm)}\n                  >\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"username\"\n                        label=\"Username\"\n                        placeholder=\"Username\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder=\"Password\"\n                        component={CInput}\n                        type=\"password\"\n                      />\n                    </div>\n\n                    {error.status && (\n                      <span className=\"mt-2 text-danger\">{error.message}</span>\n                    )}\n\n                    <div class=\"mt-3\">\n                      <button\n                        type=\"submit\"\n                        class=\"btn btn-primary mr-2 mb-2 mb-md-0 text-white\"\n                      >\n                        Login\n                      </button>\n                    </div>\n                    <a href=\"register.html\" class=\"d-block mt-3 text-muted\">\n                      Belum punya akun? Daftar\n                    </a>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginComponent;\n","export const validateFormLogin = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Username wajib diisi!\";\n  } else if (values.username.length < 4) {\n    errors.username = \"Minimal 4 karakter atau lebih\";\n  }\n  if (!values.password) {\n    errors.password = \"Password wajib diisi!\";\n  } else if (values.password.length < 5) {\n    errors.password = \"Minimal 5 karakter atau lebih\";\n  }\n  return errors;\n};\n\nexport const validateFormInternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n};\n\nexport const validateFormExternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.jobForm) {\n    errors.jobForm = \"Job Form wajib diisi!\";\n  }\n  if (!values.warranty) {\n    errors.warranty = \"Job Form wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n  return errors;\n};\n\nexport const validateFormRoles = (values) => {\n  const errors = {};\n  if (!values.description) {\n    errors.description = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormCategory = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Judul wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnit = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Unit wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnitModel = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Model wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTools = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama peralatan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormEmployee = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama wajib diisi!\";\n  }\n  if (!values.phone) {\n    errors.phone = \"No. Telpon wajib diisi!\";\n  }\n  if (!values.province) {\n    errors.province = \"Wajib pilih provinsi!\";\n  }\n  if (!values.city) {\n    errors.city = \"Wajib pilih kota!\";\n  }\n  if (!values.branch) {\n    errors.branch = \"Wajib pilih cabang!\";\n  }\n  if (!values.address) {\n    errors.address = \"Wajib isi alamat!\";\n  }\n  return errors;\n};\n\nexport const validateServiceEmployeeForm = (values) => {\n  const errors = {};\n  if (!values.employee) {\n    errors.employee = \"Karyawan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionForm = (values) => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = \"Judul wajib diisi!\";\n  }\n  if (!values.headDivision) {\n    errors.headDivision = \"Kepala divisi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionUnitForm = (values) => {\n  const errors = {};\n  if (!values.unit) {\n    errors.unit = \"Unit wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateEmployeeToolsForm = (values) => {\n  const errors = {};\n  if (!values.tools) {\n    errors.tools = \"Peralatan wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateFormRejected = (values) => {\n  const errors = {};\n  if (!values.reson) {\n    errors.reson = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTransaction = (values) => {\n  const errors = {};\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateUnitSerialNumberForm = (values) => {\n  const errors = {};\n  if (!values.customer) {\n    errors.customer = \"Wajib memilih customer!\";\n  }\n  if (!values.serialNumber) {\n    errors.serialNumber = \"Serial number wajib diisi!\";\n  }\n  if (!values.descriptions) {\n    errors.descriptions = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n","import React from \"react\";\nimport LoginComponent from \"../Component/LoginComponent\";\nimport { reduxForm, reset } from \"redux-form\"; // imported Field\nimport { connect } from \"react-redux\";\nimport * as AuthActions from \"../Store/AuthAction\";\nimport * as AuthSelector from \"../Selector/AuthSelector\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport { createStructuredSelector } from \"reselect\";\nimport { navigate } from \"../../../app/Helpers\";\n\nconst LoginContainer = (props) => {\n  const { valid } = props;\n\n  const submitForm = (values) => {\n    // navigate(\"/preview-pdf\");\n    if (valid) {\n      AuthActions.handleSubmitLogin(values);\n    }\n  };\n\n  return <LoginComponent submitForm={submitForm} {...props} />;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  auth: AuthSelector.AllAuthData(),\n  error: AuthSelector.ErrorData(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"loginForm\"));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginContainer);\n\nexport default reduxForm({\n  form: \"loginForm\",\n  validate: validateForm.validateFormLogin,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport { Field } from \"redux-form\";\nimport { makeField } from \"../../app/FormHelpers\";\n\nconst { Option } = Select;\nconst ASelect = makeField(Select);\n\nconst CSelect = (props) => {\n  return (\n    <div>\n      <label htmlFor={props.name}>{props.label}</label>\n      <br />\n      <Field\n        style={{ width: \"100%\" }}\n        showSearch={props.showSearch ?? false}\n        name={props.name}\n        component={ASelect}\n        onChange={props.onChange}\n        onBlur={(e) => {\n          if (props.onBlur) {\n            props.onBlur();\n          }\n          e.preventDefault();\n        }}\n        {...props}\n      >\n        <Option disabled={props.disabled ?? false} value=\"\">\n          {props.placeholder ?? \"- Pilih -\"}\n        </Option>\n        {props.data.length > 0 &&\n          props.data.map((item, index) => {\n            return (\n              <Option\n                value={`${item.value}|${item.label}`}\n                key={`option-${index}`}\n              >\n                {item.label}\n              </Option>\n            );\n          })}\n      </Field>\n    </div>\n  );\n};\n\nexport default CSelect;\n","import React from \"react\";\nimport { DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { Field } from \"redux-form\";\n\nconst RenderDatePicker = (props) => {\n  const { name, input, label, meta } = props;\n\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n      <br />\n      <DatePicker\n        placeholder=\"Pilih Tanggal\"\n        style={{ width: \"100%\" }}\n        name={name}\n        onBlur={(e) => {\n          e.preventDefault();\n        }}\n        defaultValue={moment()}\n        {...input}\n      />\n      {meta.touched && meta.error && (\n        <span className=\"mt-2 text-danger\">\n          {meta.error ?? \"This field required\"}\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst CDatePicker = (props) => {\n  return (\n    <Field\n      component={RenderDatePicker}\n      onBlur={(e) => {\n        e.preventDefault();\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default CDatePicker;\n","import React from \"react\";\n\ninterface IProps {\n  type: \"submit\" | \"button\" | \"reset\";\n  onClick: any;\n  isLoading: boolean;\n}\n\nconst CButton: React.FC<IProps> = (props) => {\n  const { type, isLoading, onClick, children } = props;\n  return (\n    <button\n      onClick={onClick}\n      className=\"btn btn-primary\"\n      type={type}\n      disabled={isLoading}\n    >\n      {isLoading && (\n        <span\n          className=\"spinner-grow spinner-grow-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        ></span>\n      )}\n      {isLoading ? \"Loading...\" : children}\n    </button>\n  );\n};\n\nexport default CButton;\n","import React from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\n\nconst InternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    isLoadingFormGlobal,\n  } = props;\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({ employee: \"\" })}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah Internal Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan internal service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-4 mt-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                      />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12 mt-2\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      {/* <input\n                        class=\"btn btn-primary\"\n                        type=\"submit\"\n                        value=\"Simpan\"\n                      /> */}\n                      <CButton type=\"submit\" isLoading={isLoadingFormGlobal}>\n                        Simpan\n                      </CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InternalServiceComponent;\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nconst getCityByIdFromReducer = async (cityId) => {\n  const { getState } = store;\n  const { listCity } = getState().masters;\n  const result = listCity.filter((x) => x.id === cityId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"internalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n    return;\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    await MasterDataActions.loadCityListData(employeeData.province_id);\n\n    const cityData = await getCityByIdFromReducer(employeeData.city_id);\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        cityData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        cityData\n      )\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"internalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"internalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    console.log(\"=== City : \", cityData);\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"false\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: \"false\",\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              navigate(\"list_service\");\n              resolve();\n            }, 1000);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, reset } from \"redux-form\";\nimport InternalServiceComponent from \"../Component/InternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as InternalServiceActions from \"../Store/InternalServiceActions\";\nimport * as ComponentAction from \"../../App/Store/ComponentAction\";\nimport { enumTypeInternalServices } from \"../../../app/Helpers\";\n\nconst InternalServiceContainer = (props) => {\n  const {\n    valid,\n    customers: { listCustomersDropdown, paging, keyowrd },\n    employees: { listEmployees },\n    component: { isLoadingFormGlobal },\n  } = props;\n\n  const { page, limit } = paging;\n\n  const submitForm = (values) => {\n    if (valid) {\n      InternalServiceActions.handleSubmitForm(values);\n    } else {\n    }\n  };\n\n  React.useEffect(() => {\n    // Reset all form data and loading when first load data\n    ComponentAction.resetAllGlobalLoadingProcess();\n    // resetForm();\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    EmployeeActions.loadEmployeeListData(1, 999999);\n    MasterDataActions.loadProvinceListData();\n    // MasterDataActions.loadCityListData();\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <InternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      enumType={enumTypeInternalServices}\n      submitForm={submitForm}\n      isLoadingFormGlobal={isLoadingFormGlobal}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"internalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      InternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    InternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n    if (!customerId) {\n      InternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    InternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InternalServiceContainer);\n\nexport default reduxForm({\n  form: \"internalServiceForm\",\n  validate: validateForm.validateFormInternalService,\n  initialValues: {\n    employees: [],\n  },\n})(EnhanceContainer);\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport { getUnitModelEnum } from \"../../../app/Helpers\";\n\nconst ExternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    enumWarranty,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    listUnit,\n    enumJobForms,\n    handleAutoPopulateUnitModel,\n    externalValues,\n    onChangeUnitModel,\n    handleChangeType,\n    isTroubleShoot,\n  } = props;\n\n  const renderUnits = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Unit\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Unit ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-units-${indexUnit}`}\n                    onChange={(val) =>\n                      handleAutoPopulateUnitModel(val, indexUnit)\n                    }\n                    data={listUnit}\n                    name={`${itemUnit}.id`}\n                    label=\"Pilih Unit\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-model-${indexUnit}`}\n                    data={\n                      externalValues[indexUnit].enumUnitModel\n                        ? getUnitModelEnum(\n                            externalValues[indexUnit].enumUnitModel\n                          )\n                        : []\n                    }\n                    name={`${itemUnit}.unitModelId`}\n                    onChange={(val) => {\n                      if (externalValues[indexUnit].enumUnitModel.length > 0) {\n                        onChangeUnitModel(\n                          val,\n                          indexUnit,\n                          externalValues[indexUnit].enumUnitModel\n                        );\n                      }\n                    }}\n                    label=\"Model\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    key={`serial-number-${indexUnit}`}\n                    name={`${itemUnit}.unitModelSerialNumber`}\n                    label=\"Serial Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah External Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan external service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                        onChange={handleChangeType}\n                      />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                    <div class=\"col-md-2\">\n                      {!isTroubleShoot && (\n                        <CSelect\n                          data={enumJobForms}\n                          name=\"jobForm\"\n                          label=\"Job Form\"\n                        />\n                      )}\n                    </div>\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumWarranty}\n                        name=\"warranty\"\n                        label=\"Warranty\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu unit.\n                    </p>\n                  </div>\n                  <FieldArray name=\"units\" component={renderUnits} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      <CButton type=\"submit\">Simpan</CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExternalServiceComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  change,\n  formValueSelector,\n  getFormValues,\n  reduxForm,\n  reset,\n} from \"redux-form\";\nimport ExternalServiceComponent from \"../Component/ExternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ExternalServiceActions from \"../Store/ExternalServiceActions\";\nimport * as UnitsActions from \"../../Units/Store/UnitsActions\";\nimport * as JobFormsActions from \"../../JobForms/Store/JobFormsActions\";\nimport { enumTypeExternalServices, enumWarranty } from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"externalServiceForm\");\n\nconst ExternalServiceContainer = (props) => {\n  const [unitQty, setUnitQty] = React.useState(1);\n  const [unitData, setUnitData] = React.useState([]);\n  const [isTroubleShoot, setIsTroubleShoot] = React.useState(false);\n\n  const {\n    valid,\n    customers: { listCustomersDropdown },\n    employees: { listEmployees },\n    units: { listUnits },\n    jobForms: { listJobForms },\n    resetForm,\n    // form: { externalServiceForm },\n  } = props;\n\n  const submitForm = (values) => {\n    ExternalServiceActions.handleSubmitForm(values);\n    if (valid) {\n      console.log(\"success\");\n    }\n  };\n\n  const handleAddNewUnit = () => {\n    if (unitQty === 5) {\n      return;\n    }\n    setUnitQty(unitQty + 1);\n  };\n\n  const handleSubtractUnit = () => {\n    if (unitQty === 0) {\n      return;\n    }\n    setUnitQty(unitQty - 1);\n  };\n\n  const SelectUnit = [];\n  listUnits.map((item, index) => {\n    SelectUnit.push({\n      id: `unit-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    EmployeeActions.loadEmployeeListData(1, 99999);\n    MasterDataActions.loadProvinceListData();\n    return () => {\n      resetForm();\n    };\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectJobFormsData = [];\n  listJobForms.map((item, index) => {\n    SelectJobFormsData.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const handleChangeType = (val) => {\n    const type = val.split(\"|\");\n    if (\n      type[0] === \"T2\" ||\n      type[0] === \"T4\" ||\n      type[0] === \"T5\" ||\n      type[0] === \"T6\"\n    ) {\n      setIsTroubleShoot(true);\n    } else {\n      setIsTroubleShoot(false);\n    }\n  };\n\n  React.useEffect(() => {\n    UnitsActions.getUnitListDataRequested(1, 100);\n    JobFormsActions.getJobFormsListDataRequested(1, 100);\n    let totalUnit = [];\n    for (let i = 0; i < unitQty; i++) {\n      totalUnit.push(i);\n    }\n    setUnitData(totalUnit);\n  }, [unitQty]);\n\n  return (\n    <ExternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      listUnit={SelectUnit}\n      enumJobForms={SelectJobFormsData}\n      enumType={enumTypeExternalServices}\n      enumWarranty={enumWarranty}\n      submitForm={submitForm}\n      handleAddNewUnit={handleAddNewUnit}\n      handleSubtractUnit={handleSubtractUnit}\n      unitData={unitData}\n      handleChangeType={handleChangeType}\n      isTroubleShoot={isTroubleShoot}\n      // selectedUnitModelList={selectedUnitModelList}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  units: state.units,\n  jobForms: state.jobForms,\n  formValues: getFormValues(\"externalServiceForm\")(state),\n  externalValues: selector(state, \"units\"),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"externalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      ExternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n\n    if (!customerId) {\n      ExternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n  handleAutoPopulateUnitModel: (unitId, fieldIndex) => {\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].enumUnitModel`, [])\n    );\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].unitModelId`, \"\")\n    );\n    if (unitId) {\n      const arrVal = unitId.split(\"|\");\n      ExternalServiceActions.setAutoPopulateUnitModel(arrVal[0], fieldIndex);\n    }\n  },\n  onChangeUnitModel: (val, index, enumModel) => {\n    if (val) {\n      ExternalServiceActions.onChangeUnitModel(val, index, enumModel);\n    }\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExternalServiceContainer);\n\nexport default reduxForm({\n  form: \"externalServiceForm\",\n  validate: validateForm.validateFormExternalService,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryMonitoringServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst MonitoringEmployeeComponent = (props) => {\n  const {\n    headers,\n    listMonitoringEmployee,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumTypeReport,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Monitoring Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryMonitoringServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumTypeReport ?? []}\n                      name=\"type\"\n                      label=\"Tipe\"\n                    />\n                  </div>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                      placeholder=\"-Pilih Semua-\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Laporan\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listMonitoringEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MonitoringEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as MonitoringEmployeeActions from \"../Store/MonitoringEmployeeActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport MonitoringEmployeeComponent from \"../Component/MonitoringEmployeeComponent\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Tag } from \"antd\";\nimport { exportMonitoringEmployeePdf } from \"../Store/MonitoringEmployeeReport\";\nimport moment from \"moment\";\n\nconst MonitoringEmployeeContainer = (props) => {\n  const {\n    getListMonitoringEmployee,\n    handlePressAddNew,\n    monitoringEmployee: { listMonitoringEmployee, paging },\n    branch: { listBranchDropdown },\n    monitoringEmployeeFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMonitoringEmployee.length > 0) {\n    listMonitoringEmployee.map((item, index) => {\n      listMonitoringEmployee[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const printedData = {\n    listMonitoringEmployee,\n    from: moment(),\n    until: moment(),\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"job_type\",\n      key: \"job_type\",\n      render: (jobType) => {\n        let color = jobType === \"loss\" ? \"#f50\" : \"#f50\";\n        return (\n          <Tag style={{ width: 115, textAlign: \"center\" }} color={color}>\n            {jobType ? jobType.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.job_type.length - b.job_type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n      sorter: (a, b) => a.models.length - b.models.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranchDropdown.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListMonitoringEmployee(page, limit);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      MonitoringEmployeeActions.setPagingMonitoringEmployee(paging)\n    );\n    getListMonitoringEmployee(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    MonitoringEmployeeActions.handleSearch(monitoringEmployeeFormValues);\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportMonitoringEmployeePdf(printedData, monitoringEmployeeFormValues);\n  };\n\n  return (\n    <MonitoringEmployeeComponent\n      headers={headers}\n      listMonitoringEmployee={listMonitoringEmployee}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  monitoringEmployee: state.monitoringEmployee,\n  branch: state.branch,\n  monitoringEmployeeFormValues: getFormValues(\"monitoringEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMonitoringEmployee: (page, limit, keyword, type, from, until) =>\n    MonitoringEmployeeActions.getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MonitoringEmployeeContainer);\n\nexport default reduxForm({\n  form: \"monitoringEmployeeForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport moment from \"moment\";\n\nexport const exportMonitoringEmployeePdf = (data, values) => {\n  const { listMonitoringEmployee, from, until } = data;\n  const startDate = moment(from).format(\"YYYY-MM-DD\");\n  const dueDate = moment(until).format(\"YYYY-MM-DD\");\n  const monitoringEmployeeList = [];\n\n  listMonitoringEmployee.map((item, index) => {\n    monitoringEmployeeList.push({\n      no: index + 1,\n      nik: item.employee_nik,\n      name: item.employee_name,\n      phone: item.phone,\n      address: item.address,\n      type: item.job_type,\n      status: item.job_status,\n      branch: item.branch_name,\n      customer: item.customer_name,\n      createdDate: item.created_date,\n    });\n  });\n\n  const doc = new jsPDF();\n  // doc.text({from_left}, {from_top})\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Monitoring Karyawan\", 100, 20, \"center\");\n  doc.setFontSize(16);\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\n\n  doc.setFontSize(12);\n\n  //   Line 1\n  doc.text(15, 42, `Dari Tanggal`);\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\n  doc.text(15, 49, `Sampai Tanggal`);\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\n\n  // Check if filtered by branch\n  if (values) {\n    if (values.branch) {\n      const splitBranch = values.branch.split(\"|\");\n      doc.text(15, 56, `Cabang`);\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\n    }\n  }\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  const headTable = [\n    [\n      { content: \"Tanggal\", rowSpan: 2, halign: \"center\" },\n      {\n        content: \"Karyawan\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n      {\n        content: \"Service\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n    ],\n    [\n      \"NIK\",\n      \"Nama Karyawan\",\n      \"Cabang\",\n      \"Tipe\",\n      \"Customer\",\n      \"Unit\",\n      \"Model\",\n      \"Status\",\n    ],\n  ];\n\n  doc.autoTable({\n    startY: values ? 65 : 60,\n    body: monitoringEmployeeList,\n    theme: \"plain\",\n    head: headTable,\n    headStyles: { halign: \"center\", valign: \"middle\" },\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\n    columns: [\n      { header: \"Tanggal\", dataKey: \"createdDate\" },\n      { header: \"NIK\", dataKey: \"nik\" },\n      { header: \"Nama Karyawan\", dataKey: \"name\" },\n      { header: \"Cabang\", dataKey: \"branch\" },\n      { header: \"Tipe\", dataKey: \"type\" },\n      { header: \"Customer\", dataKey: \"customer\" },\n      { header: \"Unit\", dataKey: \"units\" },\n      { header: \"Model\", dataKey: \"unit_models\" },\n      { header: \"Status\", dataKey: \"status\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { columnWidth: 28 },\n      1: { columnWidth: 20 },\n      // 2: { halign: \"center\" },\n      // 3: { halign: \"center\" },\n      // 4: { halign: \"center\" },\n      // 5: { halign: \"center\" },\n      // 6: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  //   Export\n  doc.save(\"monitoring-employee.pdf\");\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportServiceRepairComponent = (props) => {\n  const { headers, listServiceRepair, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Service Repair</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServiceRepair}\n                    size={\"small\"}\n                    // scroll={{ x: 50, y: 50, scrollToFirstRowOnChange }}#108ee9\n                    scroll\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportServiceRepairComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { BookOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee, getStatus } from \"../../../app/Helpers\";\nimport * as ReportServiceRepairActions from \"../Store/ReportServiceRepairActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport ReportServiceRepairComponent from \"../Component/ReportServiceRepairComponent\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport moment from \"moment\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\n\n\nconst ReportServiceRepairContainer = (props) => {\n  const {\n    handlePressAddNew,\n    serviceRepair: { listServiceRepair, paging },\n    branch: { listBranch },\n    serviceRepairFormValues,\n    getListServiceRepair,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listServiceRepair.length > 0) {\n    listServiceRepair.map((item, index) => {\n      listServiceRepair[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<BookOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type ? type.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_model_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due.length - b.due.length,\n      render: (due) => (\n        <Text>{due ? moment(due).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = getStatus(status).color;\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status ? getStatus(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"start\",\n      key: \"start\",\n      width: 500,\n      render: (start) => (\n        <Text>{start ? moment(start).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: 200,\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListServiceRepair(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportServiceRepairActions.handleSearch(serviceRepairFormValues);\n  };\n\n  return (\n    <ReportServiceRepairComponent\n      headers={headers}\n      listServiceRepair={listServiceRepair}\n      handlePressAddNew={handlePressAddNew}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  serviceRepair: state.serviceRepair,\n  branch: state.branch,\n  serviceRepairFormValues: getFormValues(\"serviceRepairForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServiceRepair: (page, limit, keyword, branch, from, until) =>\n    ReportServiceRepairActions.getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      from,\n      until\n    ),\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportServiceRepairContainer);\n\nexport default reduxForm({\n  form: \"serviceRepairForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportEmployeeComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportEmployeeActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportEmployeeComponent\";\n\nconst ReportEmployeeContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportEmployeeContainer);\n\nexport default reduxForm({\n  form: \"reportEmployeeForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Input, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst ListServiceComponent = (props) => {\n  const {\n    headers,\n    listServices,\n    enumType,\n    enumStatus,\n    onChangePagination,\n    paging,\n    onSearch,\n    listEmployee,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">List Service</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row d-flex mb-2\">\n                      {/* This Filter */}\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumType ?? []}\n                          name=\"typeService\"\n                          label=\"Filter Tipe\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumStatus ?? []}\n                          name=\"statusService\"\n                          label=\"Filter Status\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      ...pagination,\n                    }}\n                    // scroll={{ x: dataTable.tableWidth, y: tableHeight }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListServiceComponent;\n","import React from \"react\";\nimport { Space, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeExternalServices,\n  getIndex,\n  isBlockedRoleListService,\n  SelectStatusServices,\n} from \"../../../app/Helpers\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListServicesComponent from \"../Component/ListServicesComponent\";\nimport * as ListServiceActions from \"../Store/ListServicesActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\n\nconst ListServicesContainer = (props) => {\n  const {\n    user: { roles },\n    getListServices,\n    handlePressEdit,\n    handlePressDelete,\n    services: { listServices, paging },\n    listServiceFormValues,\n    getListEmployeesDropdown,\n    listEmployee,\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n  const { page, limit, totalPage } = paging;\n\n  if (listServices.length > 0) {\n    listServices.map((item, index) => {\n      listServices[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      {roles[0].name === \"Administrator\" && (\n        <CButtonAntd\n          onClick={() => handlePressDelete(record.id)}\n          type=\"primary\"\n          icon={<DeleteOutlined />}\n          size=\"middle\"\n          danger\n        />\n      )}\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"15%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: \"15%\",\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: \"15%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const checkBlockedRole = () => {\n    getListServices(page, limit);\n\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleListService(roleId);\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    getListEmployeesDropdown();\n    checkBlockedRole();\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ListServiceActions.setPagingListService(paging));\n    getListServices(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    ListServiceActions.handleSearch(1, 10, val, listServiceFormValues);\n  };\n\n  const SelectEmployeeData = [];\n  listEmployee.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <ListServicesComponent\n      headers={headers}\n      listServices={listServices}\n      renderActionTable={renderActionTable}\n      handlePressEdit={handlePressEdit}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      enumType={enumTypeExternalServices}\n      enumStatus={SelectStatusServices}\n      listEmployee={SelectEmployeeData}\n      // columns={columns}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  listServiceFormValues: getFormValues(\"listServices\")(state),\n  user: state.auth.userDetail,\n  listEmployee: state.employees.listEmployeeDropdown,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServices: (page, limit, keyword, filterValues) => {\n    ListServiceActions.getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      filterValues\n    );\n  },\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n  getListEmployeesDropdown: () => {\n    EmployeeActions.loadEmployeeDataDropdown();\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListServicesContainer);\n\nexport default reduxForm({\n  form: \"listServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst CTableAntd = (props) => {\n  const { data, headers, renderActions, size, pagination, id } = props;\n\n  const [searchText, setSearchText] = React.useState(\"\");\n  const [searchedColumn, setSearchedColumn] = React.useState(\"\");\n  const searchInput = React.useRef();\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.current.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const columns = [];\n  headers.map((item, index) => {\n    columns.push({\n      title: item.title,\n      dataIndex: item.dataIndex,\n      key: item.dataIndex,\n      width: item.width ?? \"30%\",\n      sorter: item.sorter,\n      render: item.render,\n      sortDirections: [\"descend\", \"ascend\"],\n      ...getColumnSearchProps(item.dataIndex),\n    });\n  });\n\n  if (renderActions) {\n    columns.push({\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActions,\n    });\n  }\n\n  return (\n    <Table\n      bordered\n      id={id ?? \"my-table-customize\"}\n      columns={columns}\n      dataSource={data}\n      size={size ?? \"middle\"}\n      pagination={{\n        size: 3,\n        pageSizeOptions: [\"10\", \"20\", \"50\"],\n        showSizeChanger: true,\n        ...pagination,\n      }}\n      // {...props}\n    />\n  );\n};\n\nCTableAntd.propTypes = {\n  data: PropTypes.array,\n  headers: PropTypes.array,\n  renderActions: PropTypes.any,\n};\n\nexport default CTableAntd;\n","import { Modal } from \"antd\";\nimport React from \"react\";\n\ninterface IProps {\n  visible: boolean;\n  content: any;\n  footer: any;\n  onCancel: any;\n  width: any;\n}\n\nconst CModal: React.FC<IProps> = (props) => {\n  // const showModal = () => {\n  //   setVisible(true)\n  // };\n\n  // const handleOk = () => {\n  //   setLoading(true)\n  //   setTimeout(() => {\n  //     setLoading(false)\n  //     setVisible(false)\n  //   }, 3000);\n  // };\n\n  return (\n    <Modal\n      visible={props.visible}\n      footer={props.footer}\n      destroyOnClose\n      onCancel={props.onCancel}\n      width={props.width ? props.width : 600}\n    >\n      {props.content}\n    </Modal>\n  );\n};\n\nexport default CModal;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"username\"\n            label=\"Username\"\n            placeholder=\"\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"fullname\"\n            label=\"Nama Lengkap\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"password\"\n            label=\"Password\"\n            component={CInput}\n            type=\"password\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AdminModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default AdminModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport AdminModalComponent from \"../Component/AdminModalComponent\";\n\nconst AdminModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    admins: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  return (\n    <AdminModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    AdminActions.saveAdminRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminModalContainer);\n\nexport default reduxForm({\n  form: \"editAdminForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport AdminModalContainer from \"../Container/AdminModalContainer\";\n\nconst { Search } = Input;\n\nconst AdminComponent = (props) => {\n  const {\n    headers,\n    listAdmin,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Admin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Admin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listAdmin}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AdminModalContainer />\n    </div>\n  );\n};\n\nexport default AdminComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport AdminComponent from \"../Component/AdminComponent\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListAdmin,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    admins: { listAdmin, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listAdmin.length > 0) {\n    listAdmin.map((item, index) => {\n      listAdmin[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"10%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Username\",\n      dataIndex: \"username\",\n      key: \"username\",\n      width: \"30%\",\n      sorter: (a, b) => a.username.length - b.username.length,\n    },\n    {\n      title: \"Nama Lengkap\",\n      dataIndex: \"fullname\",\n      key: \"fullname\",\n      width: \"30%\",\n      sorter: (a, b) => a.fullname.length - b.fullname.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListAdmin(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(AdminActions.setPagingAdmin(paging));\n    getListAdmin(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListAdmin(page, limit, val);\n  };\n\n  return (\n    <AdminComponent\n      headers={headers}\n      listAdmin={listAdmin}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListAdmin: (page, limit, keyword) =>\n    AdminActions.getListAdminRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(AdminActions.setSelectedAdminData({}));\n    await dispatch(AdminActions.setSelectedAdminId(\"\"));\n    dispatch(AdminActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    AdminActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(AdminActions.setFormStatus(\"edit\"));\n    await dispatch(AdminActions.setSelectedAdminId(record.id));\n    await dispatch(AdminActions.setSelectedAdminData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await AdminActions.mapDetailAdminToForm();\n  },\n  handlePressDelete: async (adminId) => {\n    await dispatch(AdminActions.setSelectedAdminId(adminId));\n    AdminActions.deleteAdminRequested(adminId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"adminForm\",\n})(EnhanceContainer);\n","import React from \"react\";\n\nconst NotFound = (props) => {\n  return (\n    // <div class=\"main-wrapper\">\n    //   <div class=\"page-wrapper full-page\">\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto d-flex flex-column align-items-center\">\n          <img\n            src=\"../../../assets/images/404.svg\"\n            class=\"img-fluid mb-2\"\n            alt=\"404\"\n          />\n          <h1 class=\"font-weight-bold mb-22 mt-2 tx-80 text-muted\">404</h1>\n          <h4 class=\"mb-2\">Page Not Found</h4>\n          <h6 class=\"text-muted mb-3 text-center\">\n            Oopps!! The page you were looking for doesn't exist.\n          </h6>\n          <a href=\"/dashboard\" class=\"btn btn-primary\">\n            Back to home\n          </a>\n        </div>\n      </div>\n    </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport history from \"./History\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as Selectors from \"../modules/Auth/Selector/AuthSelector\";\nimport ConfigAxios from \"./axios/ConfigAxios\";\nimport { navigate } from \"./Helpers\";\n\nconst AuthMiddleware = (ComposedComponent, menuPath, isSecureRoute) => {\n  const returnData = (props) => {\n    const { isAuthenticated, redirect, userMenus, redirectToServices } = props;\n\n    if (!isAuthenticated) {\n      redirect();\n    } else {\n      if (isSecureRoute) {\n        const isMenuCanAccess = userMenus.filter((x) => x.path === menuPath);\n\n        if (isMenuCanAccess.length <= 0) {\n          redirectToServices();\n        }\n      }\n      ConfigAxios.defaults.headers[\n        \"Authorization\"\n      ] = `Bearer ${isAuthenticated}`;\n    }\n\n    return (\n      <div>{isAuthenticated ? <ComposedComponent {...props} /> : null}</div>\n    );\n  };\n\n  const mapStateToProps = createStructuredSelector({\n    isAuthenticated: Selectors.Token(),\n    userRole: Selectors.UserRole(),\n    userMenus: Selectors.UserMenus(),\n  });\n  const mapDispatchToProps = (dispatch) => ({\n    redirect: () => history.push(\"/auth\"),\n    redirectToServices: () => navigate(\"/list_service\"),\n  });\n  return connect(mapStateToProps, mapDispatchToProps)(returnData);\n};\n\nexport default AuthMiddleware;\n","import React from \"react\";\n\ninterface IProps {\n  type:\n    | \"primary\"\n    | \"danger\"\n    | \"warning\"\n    | \"info\"\n    | \"success\"\n    | \"secondary\"\n    | \"light\"\n    | \"dark\";\n}\n\nconst CBadgeText: React.FC<IProps> = (props) => {\n  return <span className={`badge badge-${props.type}`}>{props.children}</span>;\n};\n\nexport default CBadgeText;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumEmployee }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Teknisi</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <CSelect\n            showSearch\n            data={enumEmployee}\n            name=\"employee\"\n            label=\"Pilih Teknisi\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AddEmployeeModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    handleCancel,\n    enumEmployee,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          enumEmployee={enumEmployee}\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n        />\n      }\n    />\n  );\n};\n\nexport default AddEmployeeModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateServiceEmployeeForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport AddEmployeeModalComponent from \"../Component/AddEmployeeModalComponent\";\n\nconst AddEmployeeModalContainer = (props) => {\n  const {\n    handleCancel,\n    services: { selectedJobService },\n    component: { isModalVisible },\n    employees: { listEmployees },\n    valid,\n  } = props;\n\n  const SelectEmployee = [];\n  listEmployees.map((item, index) => {\n    SelectEmployee.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      const employee = values.employee.split(\"|\");\n      DetailServiceTransactionAction.handleAddNewEmployeeService(\n        selectedJobService.id,\n        employee[0]\n      );\n    } else {\n    }\n  };\n\n  return (\n    <AddEmployeeModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      enumEmployee={SelectEmployee}\n      submitForm={submitForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddEmployeeModalContainer);\n\nexport default reduxForm({\n  form: \"serviceEmployeeForm\",\n  validate: validateServiceEmployeeForm,\n})(EnhanceContainer);\n","export const Themes = {\n  success: \"#17B794\",\n  error: \"#f50\",\n  warning: \"#FEC260\",\n  secondary: \"#A5A5A5\",\n};\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"reason\"\n            label=\"Alasan Reject\"\n            component={CInput}\n            typeComponent=\"textarea\"\n            placeholder=\"Masukan alasan reject\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst RejectedModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RejectedModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRejected, validateFormRoles } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionActions from \"../Store/DetailServiceTransactionAction\";\nimport RejectedModalComponent from \"../Component/RejectedModalComponent\";\n\nconst RejectedModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { rejectionsModal },\n    services: { selectedJobService },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(selectedJobService.id, values);\n    } else {\n    }\n  };\n\n  return (\n    <RejectedModalComponent\n      isModalVisible={rejectionsModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formName={\"Alasan Reject\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  detailService: state.detailService,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionActions.setRejectionsModal(false)),\n\n  handleSubmitForm: (jobId, values) => {\n    DetailServiceTransactionActions.handlePressRejectedRequested(jobId, values);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RejectedModalContainer);\n\nexport default reduxForm({\n  form: \"editRejecetdForm\",\n  validate: validateFormRejected,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, InputNumber, Row, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumWarranty, warrantyMonths } from \"../../../app/Helpers\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">Ubah Service</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={enumWarranty}\n              name=\"warranty\"\n              label=\"Warranty\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-7\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={warrantyMonths()}\n              name=\"warrantyMonths\"\n              label=\"Warranty Months\"\n            />\n          </div>\n          <div class=\"col-md-5\">\n            <Field\n              name=\"warrantyYears\"\n              label=\"Warranty Year\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"jobPerform\"\n              label=\"Job Perform\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalTransactionComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalTransactionComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTransaction } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport EditModalTransactionComponent from \"../Component/EditModalTransactionComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editTransactionModal },\n    masters: { listMenu },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      // handleSubmitForm(\"edit\", values, menuSelected);\n      DetailServiceTransactionAction.handlePressEditRequested(values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <EditModalTransactionComponent\n      isModalVisible={editTransactionModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditTransactionModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) => {},\n  // DetailServiceTransactionAction.saveRoleRequested(\n  //   type,\n  //   values,\n  //   menuSelected\n  // ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editTransactionForm\",\n  validate: validateFormTransaction,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, InputNumber, Row, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumWarranty, warrantyMonths } from \"../../../app/Helpers\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">Ubah Catatan Teknisi</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"title\"\n              label=\"Judul\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalDailiesComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTransaction } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\n\nimport EditModalDailiesComponent from \"../Component/EditModalDailiesComponent\";\n\nconst EditModalDailiesContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editDailiesModal },\n    masters: { listMenu },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      DetailServiceTransactionAction.handlePressEditDailiesRequested(values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <EditModalDailiesComponent\n      isModalVisible={editDailiesModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditDailiesModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditModalDailiesContainer);\n\nexport default reduxForm({\n  form: \"editDailiesForm\",\n  validate: validateFormTransaction,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Button, Tabs } from \"antd\";\nimport { Typography } from \"antd\";\nimport CBadgeText from \"../../../components/CBadgeText/CBadgeText\";\nimport moment from \"moment\";\nimport AddEmployeeModalContainer from \"../Container/AddEmployeeModalContainer\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Themes } from \"../../../property/colors\";\nimport RejectedModalContainer from \"../Container/RejectedModalContainer\";\nimport EditModalTransactionContainer from \"../Container/EditModalTransactionContainer\";\nimport EditModalDailiesContainer from \"../Container/EditModalDailiesContainer\";\n// import ReactToPrint from \"react-to-print\";\n// import ServiceReportPdfPrint from \"./ServiceReportPdfPrint\";\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\n// const pageStyle = `\n//   @page {\n//     size: 80mm 50mm;\n//   }\n\n//   @media all {\n//     .pagebreak {\n//       display: none;\n//     }\n//   }\n\n//   @media print {\n//     .pagebreak {\n//       page-break-before: always;\n//     }\n//   }\n// `;\n\nconst DetailServiceTransactionComponent = (props) => {\n  const {\n    data,\n    isBlockedRole,\n    TabPanel,\n    onChangeTab,\n    handlePressGeneratePdf,\n    goBack,\n    handlePressActions,\n    handlePressEdit,\n    // medias,\n    // checklist,\n    // employees,\n    // dailies,\n    // summary,\n  } = props;\n  // let componentRef = React.useRef();\n\n  const RenderButtonAction = ({ status }) => {\n    let button;\n    switch (status.toLowerCase()) {\n      case \"completed\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"approved\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Approve\n            </CButtonAntd>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"rejected\")}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"approved\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"finished\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Finished\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"finished\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              // onClick={handlePressAddNew}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n\n      default:\n        return <div />;\n    }\n    return button;\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"col-md-12 grid-margin stretch-card\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"row align-items-center justify-content-between\">\n                <div>\n                  <h6 class=\"card-title\">Detail Transaksi</h6>\n                </div>\n                <div class=\"row mb-3 ml-2 mr-2\">\n                  <CButtonAntd\n                    onClick={goBack}\n                    type=\"primary\"\n                    icon={<ArrowLeftOutlined />}\n                    size=\"middle\"\n                    danger\n                  >\n                    Kembali\n                  </CButtonAntd>\n                  <div class=\"ml-3\" />\n                  {data.status.toLowerCase() !== \"approved\" && !isBlockedRole && (\n                    <CButtonAntd\n                      onClick={handlePressEdit}\n                      type=\"primary\"\n                      icon={<EditOutlined />}\n                      size=\"middle\"\n                    >\n                      Ubah\n                    </CButtonAntd>\n                  )}\n                  <RenderButtonAction status={data.status} />\n                  <div class=\"mr-3\" />\n                  {/* button to trigger printing of target component */}\n                  <CButtonAntd\n                    onClick={handlePressGeneratePdf}\n                    type=\"primary\"\n                    icon={<FilePdfOutlined />}\n                    size=\"middle\"\n                  >\n                    Cetak Formulir\n                  </CButtonAntd>\n                  {/* <ReactToPrint\n                    fonts={[\n                      {\n                        name: \"'Courier Prime', monospace\",\n                        url: \"https://fonts.googleapis.com/css2?family=Courier+Prime&display=swap\",\n                      },\n                    ]}\n                    pageStyle={pageStyle}\n                    trigger={() => (\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Formulir\n                      </CButtonAntd>\n                    )}\n                    content={() => componentRef}\n                  /> */}\n                </div>\n              </div>\n              <div\n                id=\"header-detail-transaction\"\n                class=\"d-flex justify-content-between align-items-baseline\"\n              >\n                <div class=\"col-md-6\">\n                  <Text>Tipe : </Text>\n                  <CBadgeText type={data.is_external ? \"success\" : \"info\"}>\n                    {data.type ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Unit : </Text>\n                  <Text>{data.unit ?? \"-\"}</Text>\n                  <br />\n                  <Text>Model (SN) : </Text>\n                  <Text>{data.model ?? \"-\"}</Text>\n                  <br />\n                  <Text>Job Forms : </Text>\n                  <Text>{data.job_form_name ?? \"-\"}</Text>\n                  <br />\n                  <Text>Customer : </Text>\n                  <Text strong>{data.customer_name}</Text>\n                  <br />\n                  <Text>Warranty : </Text>\n                  <Text strong>\n                    {data.warranty ? \"Warranty\" : \"No Warranty\"}\n                  </Text>\n                  <br />\n                  <Text>PIC : </Text>\n                  <Text strong>{data.customer_pic_name ?? \"()\"}</Text>\n                </div>\n                <div class=\"col-md-6\">\n                  <Text>Status Transaksi : </Text>\n                  <CBadgeText\n                    type={\n                      data.status.toLowerCase() === \"draft\"\n                        ? \"warning\"\n                        : \"success\"\n                    }\n                  >\n                    {data.status ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Job Perform : </Text>\n                  <Text strong>{data.job_perform}</Text>\n                  <br />\n                  <Text>Start - Due : </Text>\n                  <Text strong>{`${moment(data.start).format(\n                    \"DD-MMM-YYYY\"\n                  )} - ${moment(data.due).format(\"DD-MMM-YYYY\")}`}</Text>\n\n                  <br />\n                  <Text>Dibuat : </Text>\n                  <Text strong>{data.created_date}</Text>\n                  <br />\n                  <Text>Lokasi : </Text>\n                  <Text strong>{data.location ?? \"-\"}</Text>\n                </div>\n                <div class=\"col-md-4\"></div>\n              </div>\n\n              <div class=\"ml-2 mt-3\">\n                <Tabs defaultActiveKey=\"1\" onChange={onChangeTab}>\n                  {TabPanel.map((item, index) => (\n                    <TabPane\n                      tab={\n                        <span>\n                          {item.icon}\n                          {item.title}\n                        </span>\n                      }\n                      key={item.key}\n                    >\n                      {item.component}\n                    </TabPane>\n                  ))}\n                </Tabs>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AddEmployeeModalContainer />\n      <RejectedModalContainer />\n      <EditModalTransactionContainer />\n      <EditModalDailiesContainer />\n      {/* component to be printed */}\n      {/* <div style={{ display: \"none\", width: \"100%\", flex: 1 }}>\n        <ServiceReportPdfPrint\n          ref={(el) => (componentRef = el)}\n          data={data}\n          medias={medias}\n          checklist={checklist}\n          employees={employees}\n          dailies={dailies}\n          summary={summary}\n        />\n      </div> */}\n    </div>\n  );\n};\n\nexport default DetailServiceTransactionComponent;\n","import React from \"react\";\nimport { Card, Typography, Col, Row, Image } from \"antd\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  CheckCircleOutlined,\n} from \"@ant-design/icons\";\n\nconst { Meta } = Card;\nconst { Text } = Typography;\n\nconst RenderDescription = ({\n  data,\n  handlePressNonactive,\n  handlePressActive,\n}) => {\n  return (\n    <div>\n      <hr />\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Nik</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.nik}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Telepon</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.phone}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Alamat</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong style={{ fontSize: 12 }}>\n            {data.address}\n          </Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Tanggal Mulai</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.created_date}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Status</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <CBadgeText type={data.active ? \"success\" : \"danger\"}>\n            {data.active ? \"Aktif\" : \"Tidak Aktif\"}\n          </CBadgeText>\n        </div>\n      </Row>\n      <div class=\"mt-3\">\n        {data.active ? (\n          <CButtonAntd\n            onClick={handlePressNonactive}\n            type=\"primary\"\n            icon={<DeleteOutlined />}\n            size=\"middle\"\n            danger\n          >\n            Non-Aktifkan Teknisi\n          </CButtonAntd>\n        ) : (\n          <CButtonAntd\n            onClick={handlePressActive}\n            type=\"primary\"\n            icon={<CheckCircleOutlined />}\n            size=\"middle\"\n          >\n            Aktifkan teknisi\n          </CButtonAntd>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst TabPanelEmployeeComponent = (props) => {\n  const {\n    employees,\n    handlePressAddNew,\n    handlePressNonactive,\n    jobId,\n    handlePressActive,\n  } = props;\n  return (\n    <div class=\"page-content\">\n      <Row style={{ marginLeft: 16 }}>\n        <CButtonAntd\n          onClick={handlePressAddNew}\n          type=\"primary\"\n          icon={<PlusOutlined />}\n          size=\"middle\"\n        >\n          Tambah Teknisi\n        </CButtonAntd>\n      </Row>\n      <Row>\n        {employees.map((item, index) => {\n          return (\n            <Col style={{ margin: 16 }} key={`employee-${index}`}>\n              <Text strong>{`Teknisi-${index + 1}`}</Text>\n              <Card\n                style={{ width: 350, marginTop: 8 }}\n                cover={\n                  <Image\n                    alt=\"example\"\n                    src={\n                      item.photo ??\n                      \"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                    }\n                    width=\"100%\"\n                    height={200}\n                  />\n                }\n              >\n                <Meta\n                  title={item.name}\n                  description={\n                    <RenderDescription\n                      data={item}\n                      handlePressNonactive={() =>\n                        handlePressNonactive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                      handlePressActive={() =>\n                        handlePressActive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                    />\n                  }\n                />\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </div>\n  );\n};\n\nexport default TabPanelEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TabPanelEmployeeComponent from \"../../Component/TabPanel/TabPanelEmployeeComponent\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionActions from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelEmployeeContainer = (props) => {\n  const {\n    services: { selectedJobService },\n  } = props;\n  return <TabPanelEmployeeComponent jobId={selectedJobService.id} {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n  detailService: state.detailService,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressAddNew: () => {\n    dispatch(ComponentActions.setGlobalModal(true));\n  },\n  handlePressNonactive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      false\n    ),\n  handlePressActive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      true\n    ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelEmployeeContainer);\n","import React from \"react\";\nimport { Typography, Row, Empty, Divider, Col } from \"antd\";\nimport { FileOutlined } from \"@ant-design/icons\";\n\nconst { Paragraph } = Typography;\n\nconst RenderItemSummary = ({ summary, index }) => {\n  return summary.length > 0 ? (\n    summary.map((item, indexText) => (\n      <Typography key={`item-summary${index}-text-${indexText}`}>\n        {item}\n      </Typography>\n    ))\n  ) : (\n    <Typography>Summary belum ada</Typography>\n  );\n};\n\nconst TabPanelSummaryComponent = (props) => {\n  const { summaryArr } = props;\n\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <FileOutlined />\n        <Typography style={{ marginLeft: 5 }}>Laporan Akhir</Typography>\n      </Row>\n      <hr />\n      <Row gutter={[16, 16]}>\n        {summaryArr.length > 0 ? (\n          summaryArr.map((item, index) => (\n            <Col key={`col-unit-${index}`} span={12}>\n              <div class=\"card p-2\">\n                <Divider\n                  style={{\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                    textTransform: \"uppercase\",\n                  }}\n                  plain\n                >{`Unit ${item.unitName}`}</Divider>\n                <RenderItemSummary index={index} summary={item.summary} />\n              </div>\n            </Col>\n          ))\n        ) : (\n          <div>\n            <Empty />\n          </div>\n        )}\n      </Row>\n    </div>\n  );\n};\n\nexport default TabPanelSummaryComponent;\n","import React from \"react\";\nimport TabPanelSummaryComponent from \"../../Component/TabPanel/TabPanelSummaryComponent\";\n\nconst TabPanelSummaryContainer = (props) => {\n  const { summary } = props;\n  const [summaryArr, setSummaryArr] = React.useState([]);\n\n  React.useEffect(() => {\n    const summaryMapping = [];\n\n    summary.map((item, index) => {\n      const summaryText = item.summary;\n      const splitSummary = summaryText.split(\"\\n\");\n      summaryMapping.push({ unitName: item.unitName, summary: splitSummary });\n    });\n    setSummaryArr(summaryMapping);\n  }, [summary]);\n\n  return <TabPanelSummaryComponent summaryArr={summaryArr} {...props} />;\n};\n\nexport default TabPanelSummaryContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Card, Col, Image, Divider } from \"antd\";\nimport { CameraOutlined } from \"@ant-design/icons\";\n\nconst { Meta } = Card;\n\nconst RenderImage = ({ medias, unit }) => {\n  return medias.map((item, index) => {\n    return (\n      <Col\n        style={{\n          marginLeft: 10,\n          marginRight: 10,\n        }}\n      >\n        <Card\n          hoverable\n          style={{ width: 240, height: 200 }}\n          cover={<Image width={\"100%\"} height={150} src={item.path} />}\n        >\n          <Meta\n            style={{ marginTop: -10 }}\n            title={`Gambar Penting ${index + 1}`}\n          />\n        </Card>\n      </Col>\n    );\n  });\n};\n\nconst TabPanelImagesComponent = (props) => {\n  const { medias } = props;\n\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <CameraOutlined />\n        <Typography style={{ marginLeft: 5 }}>Media</Typography>\n      </Row>\n      <hr />\n      {medias && medias.length > 0 ? (\n        medias.map((item, index) => (\n          <div>\n            <Divider\n              style={{\n                textTransform: \"uppercase\",\n                fontSize: 12,\n                fontWeight: \"bold\",\n              }}\n              plain\n            >{`Unit ${item.unitName}`}</Divider>\n            <Row>\n              <RenderImage medias={item.image} unit={item.unitName} />\n            </Row>\n          </div>\n        ))\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelImagesComponent;\n","import React from \"react\";\nimport TabPanelImagesComponent from \"../../Component/TabPanel/TabPanelImagesComponent\";\n\nconst TabPanelImagesContainer = (props) => {\n  return <TabPanelImagesComponent {...props} />;\n};\n\nexport default TabPanelImagesContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table, Space } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst RenderDailies = ({ dailies, handlePressEdit }) => {\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"karyawan\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"deskripsi\",\n    },\n    {\n      title: \"Mulai\",\n      dataIndex: \"mulai\",\n    },\n    {\n      title: \"Selesai\",\n      dataIndex: \"selesai\",\n    },\n    {\n      title: \"Jam\",\n      dataIndex: \"jam\",\n    },\n  ];\n  columns.push({\n    align: \"center\",\n    title: \"Aksi\",\n    key: \"action\",\n    width: \"10%\",\n    render: renderActionTable,\n  });\n  const data = [];\n  dailies.map((item, index) => {\n    data.push({\n      key: index,\n      id: item.id,\n      karyawan: item.employee_name,\n      title: item.title,\n      deskripsi: item.description,\n      mulai: moment(item.daily_start).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      selesai: moment(item.daily_end).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      jam: item.hours,\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelDailiesComponent = (props) => {\n  const { dailies, handlePressEdit } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Catatan</Typography>\n      </Row>\n      <hr />\n      {dailies && dailies.length > 0 ? (\n        <RenderDailies dailies={dailies} handlePressEdit={handlePressEdit} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport TabPanelDailiesComponent from \"../../Component/TabPanel/TabPanelDailiesComponent\";\nimport {\n  mapDailiesToForm,\n  setEditDailiesModal,\n  setSelectedEditDailiesData,\n} from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelDailiesContainer = (props) => {\n  return <TabPanelDailiesComponent {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  // dailies: state.dailies,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (values) => {\n    await dispatch(setSelectedEditDailiesData(values));\n    store.dispatch(setEditDailiesModal(true));\n    mapDailiesToForm();\n  },\n  handlePressCancel: () => {\n    store.dispatch(setEditDailiesModal(false));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelDailiesContainer);\n\nexport default EnhanceContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderHistories = ({ histories }) => {\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"user_name\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  histories.map((item, index) => {\n    data.push({\n      key: index,\n      user_name: item.user_name,\n      title: item.title,\n      description: item.description,\n      created_date: moment(item.created_date).format(\"DD-MMM-YYYY\"),\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelHistoriesComponent = (props) => {\n  const { histories } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Riwayat</Typography>\n      </Row>\n      <hr />\n      {histories.length > 0 ? (\n        <RenderHistories histories={histories} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelHistoriesComponent;\n","import React from \"react\";\nimport TabPanelHistoriesComponent from \"../../Component/TabPanel/TabPanelHistoriesComponent\";\n\nconst TabPanelHistoriesContainer = (props) => {\n  return <TabPanelHistoriesComponent {...props} />;\n};\n\nexport default TabPanelHistoriesContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderDailies = ({ rejections }) => {\n  const columns = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n    },\n    {\n      title: \"NIK\",\n      dataIndex: \"nik\",\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n    },\n    {\n      title: \"Alasan Reject\",\n      dataIndex: \"reason\",\n    },\n    {\n      title: \"Tanggal Di-Reject\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  rejections.map((item, index) => {\n    data.push({\n      no: index + 1,\n      nik: item.nik,\n      employee_name: item.employee_name,\n      reason: item.reason,\n      created_date: moment(item.created_date).format(\"DD-MMM-YYYY\"),\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelRejectionsComponent = (props) => {\n  const { rejections } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Alasan Reject</Typography>\n      </Row>\n      <hr />\n      {rejections.length > 0 ? (\n        <RenderDailies rejections={rejections} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelRejectionsComponent;\n","import React from \"react\";\nimport TabPanelRejectionsComponent from \"../../Component/TabPanel/TabPanelRejectionsComponent\";\n\nconst TabPanelRejectionsContainer = (props) => {\n  return <TabPanelRejectionsComponent {...props} />;\n};\n\nexport default TabPanelRejectionsContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Col, Checkbox, Divider, Spin } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Radio } from \"antd\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Themes } from \"../../../../property/colors\";\n\nconst TabPanelChecklistComponent = (props) => {\n  const { checklistArr, isLoaded } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Checklist</Typography>\n      </Row>\n      <hr />\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <div class=\"row d-flex flex-wrap col md-12\">\n          {checklistArr.length > 0 ? (\n            checklistArr.map((itemUnit, indexUnit) => (\n              <div key={`checklist-unit-${indexUnit}`}>\n                <Divider\n                  style={{\n                    textTransform: \"uppercase\",\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                  }}\n                  plain\n                >{`Unit ${itemUnit.unitName}`}</Divider>\n                <Row gutter={[16, 16]}>\n                  {itemUnit.checklist.map((itemChecklist, indexChecklist) => (\n                    <Col key={`item-unit-checklist-${indexChecklist}`} span={12}>\n                      <div style={{ width: \"100%\" }}>\n                        <div>\n                          <div class=\"mb-2 mt-2 pb-2\">\n                            <Row\n                              gutter={16}\n                              style={{\n                                alignItems: \"center\",\n                                padding: \"8px\",\n                                borderBottom: \"1px solid #020202\",\n                                marginRight: \"20px\",\n                                marginTop: \"20px\",\n                              }}\n                            >\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={7}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  {itemChecklist.category_form_name}\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  ADJUST\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  CHECK\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPAIR\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={5}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPLACE\n                                </Text>\n                              </Col>\n                            </Row>\n                          </div>\n\n                          <Radio.Group disabled>\n                            {itemChecklist.fields &&\n                              itemChecklist.fields.map(\n                                (itemFields, indexFields) => {\n                                  return (\n                                    <Row\n                                      key={`item-fields-${indexFields}`}\n                                      gutter={16}\n                                      style={{\n                                        alignItems: \"center\",\n                                        padding: \"8px\",\n                                        borderBottom: \"1px solid #020202\",\n                                        marginRight: \"30px\",\n                                      }}\n                                    >\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={8}\n                                      >\n                                        <div>\n                                          <Typography\n                                            style={{\n                                              fontSize: 12,\n                                              color: Themes.secondary,\n                                            }}\n                                          >\n                                            {itemFields.field_name}\n                                          </Typography>\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                    </Row>\n                                  );\n                                }\n                              )}\n                          </Radio.Group>\n                        </div>\n                        <div class=\"mr-3\" />\n                      </div>\n                    </Col>\n                  ))}\n                </Row>\n              </div>\n            ))\n          ) : (\n            <div class=\"page-content\">\n              <Empty />\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst style = {\n  width: \"200px\",\n  alignContent: \"center\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport default TabPanelChecklistComponent;\n","import React, { useState } from \"react\";\nimport TabPanelChecklistComponent from \"../../Component/TabPanel/TabPanelChecklistComponent\";\n\nconst TabPanelChecklistContainer = (props) => {\n  const { checklist, isLoaded } = props;\n  const [checklistArr, setchecklistArr] = useState([]);\n\n  React.useEffect(() => {\n    setchecklistArr(checklist);\n  }, [checklist]);\n\n  return (\n    <TabPanelChecklistComponent\n      isLoaded={isLoaded}\n      checklistArr={checklistArr}\n      {...props}\n    />\n  );\n};\n\nexport default TabPanelChecklistContainer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport DetailServiceTransactionComponent from \"../Component/DetailServiceTransactionComponent\";\nimport {\n  FileImageOutlined,\n  UsergroupAddOutlined,\n  CheckCircleOutlined,\n  EditOutlined,\n  FileTextOutlined,\n  CloseSquareOutlined,\n  HistoryOutlined,\n} from \"@ant-design/icons\";\nimport TabPanelEmployeeContainer from \"./TabPanel/TabPanelEmployeeContainer\";\nimport * as DetailServiceActions from \"../Store/DetailServiceTransactionAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport TabPanelSummaryContainer from \"./TabPanel/TabPanelSummaryContainer\";\nimport TabPanelImagesContainer from \"./TabPanel/TabPanelImagesContainer\";\nimport TabPanelDailiesContainer from \"./TabPanel/TabPanelDailiesContainer\";\nimport TabPanelHistoriesContainer from \"./TabPanel/TabPanelHistoriesContainer\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport TabPanelRejectionsContainer from \"./TabPanel/TabPanelRejectionsContainer\";\nimport TabPanelChecklistContainer from \"./TabPanel/TabPanelChecklistContainer\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { isBlockedRoleDetailService, navigate } from \"../../../app/Helpers\";\n\nconst DetailServiceTransactionContainer = (props) => {\n  const {\n    userRole,\n    services: { selectedJobService },\n    detailService: {\n      selectedServiceEmployeeList,\n      groupingSelectedServiceMedia,\n      groupingSelectedServiceSummary,\n      groupingSelectedServiceChecklist,\n      selectedServiceDailies,\n      selectedServiceHistories,\n      selectedServiceRejected,\n    },\n  } = props;\n  const { dispatch } = store;\n  const [isLoadedChecklist, setIsLoadedChecklist] = React.useState(false);\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const TabPanel = [\n    {\n      key: \"panel-gambar\",\n      title: \"Gambar\",\n      icon: <FileImageOutlined />,\n      component: (\n        <TabPanelImagesContainer medias={groupingSelectedServiceMedia} />\n      ),\n    },\n    {\n      key: \"panel-summary\",\n      title: \"Summary\",\n      icon: <FileTextOutlined />,\n      component: (\n        <TabPanelSummaryContainer summary={groupingSelectedServiceSummary} />\n      ),\n    },\n    {\n      key: \"panel-teknisi\",\n      title: \"Teknisi\",\n      icon: <UsergroupAddOutlined />,\n      component: (\n        <TabPanelEmployeeContainer employees={selectedServiceEmployeeList} />\n      ),\n    },\n    {\n      key: \"panel-rejected\",\n      title: \"Alasan Reject\",\n      icon: <CloseSquareOutlined />,\n      component: (\n        <TabPanelRejectionsContainer rejections={selectedServiceRejected} />\n      ),\n    },\n    {\n      key: \"panel-dailies\",\n      title: \"Catatan Teknisi\",\n      icon: <EditOutlined />,\n      component: <TabPanelDailiesContainer dailies={selectedServiceDailies} />,\n    },\n    {\n      key: \"panel-histories\",\n      title: \"History\",\n      icon: <HistoryOutlined />,\n      component: (\n        <TabPanelHistoriesContainer\n          title=\"History\"\n          histories={selectedServiceHistories}\n        />\n      ),\n    },\n  ];\n\n  if (selectedJobService.is_external) {\n    TabPanel.push({\n      key: \"panel-checklist\",\n      title: \"Checklist\",\n      icon: <CheckCircleOutlined />,\n      component: (\n        <TabPanelChecklistContainer\n          isLoaded={isLoadedChecklist}\n          checklist={groupingSelectedServiceChecklist}\n        />\n      ),\n    });\n\n    // Move content of checklist to index 0\n    const fromIndex = TabPanel.indexOf(\"panel-checklist\"); // 👉️ 0\n    const toIndex = 0;\n\n    const element = TabPanel.splice(fromIndex, 1)[0];\n    console.log(element); // ['panel-checklist']\n\n    TabPanel.splice(toIndex, 0, element);\n  }\n\n  const onChangeTab = (activeTab) => {\n    switch (activeTab.toLowerCase()) {\n      case \"panel-teknisi\":\n        DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n        break;\n\n      case \"panel-summary\":\n        // DetailServiceActions.getJobServiceSummary(selectedJobService.id);\n        break;\n\n      case \"panel-gambar\":\n        // DetailServiceActions.getJobServiceMedia(selectedJobService.id);\n        break;\n\n      case \"panel-dailies\":\n        DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n        break;\n\n      case \"panel-histories\":\n        DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n        break;\n\n      case \"panel-checklist\":\n        // DetailServiceActions.getChecklistData(selectedJobService.id);\n        break;\n\n      case \"panel-rejected\":\n        DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n        break;\n\n      default:\n        console.log(\"no panel selected...\");\n        break;\n    }\n  };\n\n  const callInitialize = async () => {\n    await EmployeesActions.loadEmployeeListData(1, 99999);\n    await DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n    await DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n    await DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n    await DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n    await getGroupingUnitData();\n  };\n\n  const getGroupingUnitData = async () => {\n    // Hit media api and grouping by units :\n    let groupingMediaList = [];\n    let groupingSummaryList = [];\n    let groupingChecklist = [];\n    if (selectedJobService.units) {\n      await selectedJobService.units.map(async (item, index) => {\n        const { data: dataMedia } = await Invoke.getJobServiceMedia(\n          selectedJobService.id,\n          item.id\n        );\n        const { data: dataSummary } = await Invoke.getJobServiceSummary(\n          selectedJobService.id,\n          item.id\n        );\n        Invoke.getChecklistData(item.id)\n          .then((dataChecklist) => {\n            console.log(\"=== dataChecklist : \", dataChecklist);\n            groupingChecklist.push({\n              unitName: item.unit_name,\n              checklist: dataChecklist.data.callback,\n            });\n            if (index + 1 === selectedJobService.units.length) {\n              setIsLoadedChecklist(true);\n            }\n          })\n          .catch(() => setIsLoadedChecklist(true));\n\n        // Push to tempporary array\n        groupingMediaList.push({\n          unitName: item.unit_name,\n          image: dataMedia.callback.data,\n        });\n        groupingSummaryList.push({\n          unitName: item.unit_name,\n          summary: dataSummary.callback.summary,\n        });\n      });\n\n      // Save to reducer\n      await dispatch(\n        DetailServiceActions.setGroupingSelectedServicesMediaData(\n          groupingMediaList\n        )\n      );\n      await dispatch(\n        DetailServiceActions.setGroupingSummaryData(groupingSummaryList)\n      );\n      await dispatch(\n        DetailServiceActions.setGroupingChecklistData(groupingChecklist)\n      );\n    }\n  };\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    callInitialize();\n    checkBlockedRole();\n  }, []);\n\n  const handlePressGeneratePdf = () => {\n    // exportDetailServicePdfRevision(printedData);\n    DetailServiceActions.downloadTransactionPdf();\n  };\n\n  const handleBackToListService = () => {\n    store.dispatch(DetailServiceActions.resetDetailService());\n    setTimeout(() => {\n      navigate(\"list_service\");\n    }, 500);\n  };\n\n  return (\n    <DetailServiceTransactionComponent\n      data={selectedJobService}\n      isBlockedRole={isBlockedRole}\n      TabPanel={TabPanel}\n      onChangeTab={onChangeTab}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      goBack={handleBackToListService}\n      medias={groupingSelectedServiceMedia}\n      checklist={groupingSelectedServiceChecklist}\n      employees={selectedServiceEmployeeList}\n      dailies={selectedServiceDailies}\n      summary={groupingSelectedServiceSummary}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  units: state.units,\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressDelete: (jobId) => {\n    ListServiceActions.deleteJobServiceRequested(jobId);\n  },\n  handlePressActions: (jobId, type) => {\n    ListServiceActions.handlePressActionsRequested(jobId, type);\n  },\n  handlePressEdit: async () => {\n    await dispatch(DetailServiceActions.setEditTransactionModal(true));\n    await DetailServiceActions.mapDetailTransactionToForm();\n    dispatch(DetailServiceActions.setEditTransactionModal(true));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DetailServiceTransactionContainer);\n\nexport default reduxForm({\n  form: \"detailJobServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Row } from \"antd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const {\n    data,\n    defaultValuesMenu,\n    onChangeRoleMenu,\n    // options,\n    // plainOptions,\n    // optionsWithDisabled,\n  } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"Role ID\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Role\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst RolesEditModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RolesEditModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport RolesEditModalComponent from \"../Component/RolesEditModalComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { formStatus, selectedRoleMenu },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n  const [menuSelected, setMenuSelected] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values, menuSelected);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  const onChangeRoleMenu = (menus) => {\n    setMenuSelected(menus);\n  };\n\n  return (\n    <RolesEditModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumMenu={SelectMenu}\n      menuChecked={selectedRoleMenu}\n      onChangeRoleMenu={onChangeRoleMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) =>\n    RolesActions.saveRoleRequested(type, values, menuSelected),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editRolesForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport RolesEditModalContainer from \"../Container/RolesEditModalContainer\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nconst RolesComponent = (props) => {\n  const { headers, listRoles, renderActionTable, handlePressAddNew } = props;\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Roles</h6>\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Roles\n                  </CButtonAntd>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <RolesEditModalContainer />\n    </div>\n  );\n};\n\nexport default RolesComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport RolesComponent from \"../Component/RolesComponent\";\nimport * as RolesActions from \"../Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RolesContainer = (props) => {\n  const {\n    getListRoles,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    roles: { listRoles },\n  } = props;\n\n  if (listRoles.length > 0) {\n    listRoles.map((item, index) => {\n      listRoles[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListRoles();\n  }, []);\n\n  return (\n    <RolesComponent\n      headers={headers}\n      listRoles={listRoles}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListRoles: () => RolesActions.getListRolesRequested(),\n  handlePressAddNew: async () => {\n    await dispatch(RolesActions.setSelectedRoleDetail({}));\n    await dispatch(RolesActions.setSelectedRoleId(\"\"));\n    dispatch(RolesActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    RolesActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(RolesActions.setFormStatus(\"edit\"));\n    await dispatch(RolesActions.setSelectedRoleId(record.id));\n    await dispatch(RolesActions.setSelectedRoleDetail(record));\n    await RolesActions.getMenuByRolesId(record.id);\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await RolesActions.mapDetailRoleToForm();\n  },\n  handlePressDelete: async (roleId) => {\n    await dispatch(RolesActions.setSelectedRoleId(roleId));\n    RolesActions.deleteRoleRequested(roleId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesContainer);\n\nexport default reduxForm({\n  form: \"rolesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst EmployeeListComponent = (props) => {\n  const {\n    headers,\n    listEmployees,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumRoles,\n    enumDivision,\n    employeeFormValues,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Karyawan</h6>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Karyawan\n                    </CButtonAntd>\n                  </div>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2\">\n                  {/* This Filter */}\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumRoles ?? []}\n                      name=\"role\"\n                      label=\"Filter Role\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Filter Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumDivision ?? []}\n                      name=\"division\"\n                      label=\"Filter Divisi\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployees}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeListComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as EmployeeActions from \"../Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ToolsActions from \"../../Tools/Store/ToolsActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport EmployeesListComponent from \"../Component/EmployeesListComponent\";\nimport {\n  enumSelectGenerator,\n  getIndex,\n  getRolesEnum,\n  navigate,\n} from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getDivisionListDataRequested } from \"../../Division/Store/DivisionActions\";\n\nconst EmployeesListContainer = (props) => {\n  const {\n    getListEmployees,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressEmployeeTools,\n    employees: { listEmployees, paging },\n    roles: { listRoles },\n    branch: { listBranch },\n    division: { listDivision },\n    employeesFormValues,\n    getListTools,\n  } = props;\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployees.length > 0) {\n    listEmployees.map((item, index) => {\n      listEmployees[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, name: item.title };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"NIK\",\n      dataIndex: \"nik\",\n      key: \"nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.nik - b.nik,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name - b.name,\n    },\n    {\n      title: \"Nomor Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => handlePressEdit(record)}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressEmployeeTools(record)}\n        type=\"primary\"\n        icon={<SettingOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployees(1, 10);\n    getDivisionListDataRequested(1, 100);\n    getListTools(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage ?? 1;\n    paging.limit = pageSize ?? 10;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeActions.setPagingEmployees(paging));\n    getListEmployees(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    EmployeeActions.handleSearch(keyword, employeesFormValues);\n  };\n\n  const SelectRoles = listRoles.length > 0 ? getRolesEnum(listRoles) : [];\n  const SelectBranch =\n    listBranch.length > 0 ? enumSelectGenerator(listBranch, \"branch\") : [];\n  const SelectDivision =\n    listDivision.length > 0\n      ? enumSelectGenerator(listDivision, \"division\")\n      : [];\n\n  return (\n    <EmployeesListComponent\n      headers={headers}\n      listEmployees={listEmployees}\n      renderActionTable={renderActionTable}\n      paging={paging}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      enumRoles={SelectRoles}\n      enumDivision={SelectDivision}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  roles: state.roles,\n  branch: state.branch,\n  division: state.division,\n  employeesFormValues: getFormValues(\"employeesForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployees: (page, limit, keyword) =>\n    EmployeeActions.loadEmployeeListData(page, limit, keyword),\n  getListTools: (page, limit) => {\n    ToolsActions.getToolsListDataRequested(page, limit);\n  },\n  handlePressEdit: async (employee) => {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    dispatch(EmployeeActions.setFormStatus(\"edit\"));\n    await EmployeesActions.getRolesByEmployeeId(employee.id);\n    await MasterDataActions.loadCityListData(employee.province_id);\n    await dispatch(EmployeeActions.setSelectedEmployeeId(employee.id));\n    await EmployeesActions.getEmployeeDataByIdRequested(employee.id);\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n      dispatch(ComponentActions.setGlobalLoading(false));\n    }, 500);\n  },\n  handlePressAddNew: async () => {\n    dispatch(EmployeesActions.setFormStatus(\"add\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeId(\"\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeData({}));\n    EmployeesActions.resetForm();\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n    }, 500);\n  },\n  handlePressDelete: async (employeeId) => {\n    await dispatch(EmployeesActions.setSelectedEmployeeId(employeeId));\n    EmployeesActions.deleteEmployeeRequested(employeeId);\n  },\n  handlePressEmployeeTools: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(EmployeeActions.setSelectedEmployeeId(record.id));\n    await dispatch(EmployeeActions.setSelectedEmployeeData(record));\n    setTimeout(() => {\n      navigate(\"employee-tools\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeesListContainer);\n\nexport default reduxForm({\n  form: \"employeesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  LoadingOutlined,\n  PlusOutlined,\n  ArrowLeftOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport { Checkbox, Col, message, Row, Typography, Upload } from \"antd\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst SelectRole = (props) => {\n  const { data, defaultValues, onChangeRoleEmployee } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        onChange={onChangeRoleEmployee}\n        defaultValue={defaultValues}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst EmployeeEditComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    enumBranch,\n    enumRole,\n    enumProvince,\n    enumCity,\n    selectedRoleEmployee,\n    onChangeRoleEmployee,\n    handleUploadPhoto,\n    defaultImage,\n    onChangeProvince,\n    onBackAction,\n    formStatus,\n  } = props;\n\n  const [loading, setLoading] = React.useState(false);\n  const [imageUrl, setImageUrl] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (defaultImage) {\n      setImageUrl(defaultImage);\n    }\n  }, [defaultImage]);\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error(\"Image must smaller than 2MB!\");\n    }\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h1 class=\"card-title\">Profil Karyawan</h1>\n                <p class=\"card-description\">\n                  Anda dapat mengelola role ataupun mengubah data karyawan pada\n                  halaman ini.\n                </p>\n                <Form>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name=\"nik\"\n                        label=\"NIK\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <CSelect\n                        data={enumProvince}\n                        name=\"province\"\n                        label=\"Nama Provinsi\"\n                        onChange={(val) => onChangeProvince(val)}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder=\"* Isi jika ingin merubah password\"\n                        component={CInput}\n                        type=\"password\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <CSelect\n                        name=\"city\"\n                        data={enumCity}\n                        label=\"Kota/Kabupaten\"\n                        disabled={enumCity.length <= 0}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name={\"name\"}\n                        label=\"Nama Karyawan\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <Typography style={{ textAlign: \"left\" }}>\n                        Foto Profil\n                      </Typography>\n                      <div\n                        class=\"card-body\"\n                        style={{\n                          marginLeft: -22,\n                          marginTop: -20,\n                        }}\n                      >\n                        <Upload\n                          name=\"avatar\"\n                          listType=\"picture-card\"\n                          className=\"avatar-uploader overflow-hidden\"\n                          showUploadList={false}\n                          beforeUpload={beforeUpload}\n                          onChange={handleChange}\n                        >\n                          {imageUrl || defaultImage ? (\n                            <>\n                              <img\n                                src={imageUrl}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                  height: \"100%\",\n                                  resizeMode: \"stretch\",\n                                  borderRadius: 5,\n                                }}\n                              />\n                              <div\n                                class=\"row\"\n                                style={{\n                                  backgroundColor: \"#F3F3F3\",\n                                  position: \"absolute\",\n                                  width: 80,\n                                  heigh: 30,\n                                  borderRadius: 50,\n                                  alignItems: \"center\",\n                                  justifyContent: \"center\",\n                                  opacity: 0.7,\n                                }}\n                              >\n                                <Typography style={{ fontSize: 10 }}>\n                                  Ubah\n                                </Typography>\n                                <EditOutlined\n                                  style={{\n                                    color: \"#020202\",\n                                    fontSize: 10,\n                                    marginLeft: 5,\n                                  }}\n                                />\n                              </div>\n                            </>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name={`phone`}\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n                      <Field\n                        name=\"address\"\n                        label=\"Alamat\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                      />\n                      <br />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <hr />\n                      {formStatus === \"edit\" && (\n                        <div class=\"card\">\n                          <div class=\"card-body\">\n                            <h6 class=\"card-title text-center\">Pilih Role</h6>\n                            <SelectRole\n                              data={enumRole}\n                              defaultValues={selectedRoleEmployee}\n                              onChangeRoleEmployee={onChangeRoleEmployee}\n                            />\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div class=\"row ml-2\">\n                    <CButtonAntd\n                      key=\"submit\"\n                      type=\"primary\"\n                      loading={false}\n                      onClick={onBackAction}\n                      danger\n                      icon={<ArrowLeftOutlined />}\n                    >\n                      Kembali\n                    </CButtonAntd>\n                    <div class=\"ml-3\" />\n                    <CButtonAntd\n                      key=\"submit\"\n                      type=\"primary\"\n                      loading={false}\n                      onClick={handleSubmit(submitForm)}\n                    >\n                      Simpan\n                    </CButtonAntd>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeEditComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport EmployeeEditComponent from \"../Component/EmployeeEditComponent\";\nimport { validateFormEmployee } from \"../../../app/validateForm\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getCitiesEnum, navigate } from \"../../../app/Helpers\";\nimport Invoke from \"../../../app/axios/Invoke\";\n\nconst EmployeeEditContainer = (props) => {\n  const {\n    valid,\n    getListRoles,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { listRoles },\n    branch: { listBranch, paging, keyword },\n    employees: { formStatus, selectedEmployeeData, selectedRoleEmployee },\n    masters: { listProvince, listCity },\n    handleClearSelectedEmployeeRole,\n  } = props;\n  const [listCityState, setListCityState] = React.useState([]);\n  const [roleSelected, setRoleSelected] = React.useState([]);\n  const [defaultImage, setDefaultImage] = React.useState(\"\");\n\n  const { page, limit } = paging;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      EmployeesActions.saveEmployeeRequested(formStatus, values, roleSelected);\n    } else {\n    }\n  };\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editEmployeeForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  const SelectEmployeeRole = [];\n  listRoles.map((item, index) => {\n    SelectEmployeeRole.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListRoles();\n\n    let subItem = [];\n    listCity.map((item, index) => {\n      subItem.push({\n        id: `city-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setListCityState(subItem);\n    // Mapping detail data employee when edit\n    if (formStatus === \"edit\") {\n      MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n      EmployeesActions.mapDetailEmployeeToForm();\n      // convert image url to base64\n      setDefaultImage(selectedEmployeeData.photo);\n      // set selected roles to redux-form\n      store.dispatch(\n        change(\"editEmployeeForm\", \"selectedRoles\", selectedRoleEmployee)\n      );\n    }\n    return () => {\n      handleClearSelectedEmployeeRole();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    setListCityState([]);\n    if (formStatus === \"edit\" && selectedEmployeeData.province_id) {\n      const provinceId =\n        selectedEmployeeData.province_id +\n        \"|\" +\n        selectedEmployeeData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedEmployeeData.province_id]);\n\n  const onChangeRoleEmployee = (roles) => {\n    console.log(\"=== roles : \", roles);\n    setRoleSelected(roles);\n    store.dispatch(change(\"editEmployeeForm\", \"selectedRoles\", roles));\n  };\n\n  const onChangeProvince = async (provinceId) => {\n    setListCityState([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setListCityState(provinceMapping);\n      } else {\n        store.dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n        setListCityState([]);\n      }\n    } catch (error) {\n      setListCityState([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onBackAction = async () => {\n    await handleClearSelectedEmployeeRole();\n    setTimeout(() => {\n      navigate(\"employees\");\n    }, 500);\n  };\n\n  return (\n    <EmployeeEditComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumBranch={SelectBranch}\n      enumRole={SelectEmployeeRole}\n      enumProvince={SelectProvince}\n      enumCity={listCityState}\n      detailEmployee={selectedEmployeeData}\n      handleUploadPhoto={handleUploadPhoto}\n      formStatus={formStatus}\n      selectedRoleEmployee={selectedRoleEmployee}\n      onChangeRoleEmployee={onChangeRoleEmployee}\n      defaultImage={defaultImage}\n      onChangeProvince={onChangeProvince}\n      onBackAction={onBackAction}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  employees: state.employees,\n  branch: state.branch,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListRoles: () => RolesActions.getListRolesRequested(),\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  getDetailEmployee: async (employeeId) =>\n    await EmployeesActions.getEmployeeDataByIdRequested(employeeId),\n  setAutoPopulateEmployee: () => EmployeesActions.setAutoPopulateEmployee(),\n  handleClearSelectedEmployeeRole: () => {\n    dispatch(EmployeesActions.setSelectedRoleEmployee([]));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeEditContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeForm\",\n  validate: validateFormEmployee,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"ID Cabang\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Cabang\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst BranchModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default BranchModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport BranchModalComponent from \"../Component/BranchModalComponent\";\n\nconst BranchModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values) =>\n    BranchActions.saveBranchRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchModalContainer);\n\nexport default reduxForm({\n  form: \"editBranchForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport BranchModalContainer from \"../Container/BranchModalContainer\";\n\nconst { Search } = Input;\n\nconst BranchComponent = (props) => {\n  const {\n    headers,\n    listRoles,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Cabang</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Branch\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <BranchModalContainer />\n    </div>\n  );\n};\n\nexport default BranchComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport BranchComponent from \"../Component/BranchComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListBranch,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    branch: { listBranch, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listBranch.length > 0) {\n    listBranch.map((item, index) => {\n      listBranch[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Cabang\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListBranch(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(BranchActions.setPagingBranch(paging));\n    getListBranch(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListBranch(page, limit, val);\n  };\n\n  return (\n    <BranchComponent\n      headers={headers}\n      listRoles={listBranch}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListBranch: (page, limit, keyword) =>\n    BranchActions.getBranchListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(BranchActions.setSelectedBranchData({}));\n    await dispatch(BranchActions.setSelectedBranchId(\"\"));\n    dispatch(BranchActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    BranchActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(BranchActions.setFormStatus(\"edit\"));\n    await dispatch(BranchActions.setSelectedBranchId(record.id));\n    await dispatch(BranchActions.setSelectedBranchData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await BranchActions.mapDetailBranchToForm();\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(BranchActions.setSelectedBranchId(branchId));\n    BranchActions.deleteBranchRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field name=\"name\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst JobFormsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default JobFormsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport JobFormsModalComponent from \"../Component/JobFormsModalComponent\";\n\nconst JobFormsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    jobForms: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <JobFormsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  jobForms: state.jobForms,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    JobFormsActions.saveJobFormsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsModalContainer);\n\nexport default reduxForm({\n  form: \"editJobForms\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport JobFormsModalContainer from \"../Container/JobFormsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst JobFormsComponent = (props) => {\n  const {\n    headers,\n    listJobForms,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Job Forms</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Job Forms\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listJobForms}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <JobFormsModalContainer />\n    </div>\n  );\n};\n\nexport default JobFormsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport JobFormsComponent from \"../Component/JobFormsComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst JobFormsContainer = (props) => {\n  const {\n    getListJobForms,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    jobForms: { listJobForms, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listJobForms.length > 0) {\n    listJobForms.map((item, index) => {\n      listJobForms[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"40%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListJobForms(page, limit);\n  }, []);\n\n  const onSearch = (val) => {\n    getListJobForms(page, limit, val);\n  };\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(JobFormsActions.setPagingJobForm(paging));\n    getListJobForms(nextPage, pageSize);\n  };\n\n  return (\n    <JobFormsComponent\n      headers={headers}\n      listJobForms={listJobForms}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onSearch={onSearch}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  jobForms: state.jobForms,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListJobForms: (page, limit, val) =>\n    JobFormsActions.getJobFormsListDataRequested(page, limit, val),\n  handlePressAddNew: async () => {\n    await dispatch(JobFormsActions.setSelectedJobFormsData({}));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(\"\"));\n    dispatch(JobFormsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    JobFormsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(JobFormsActions.setFormStatus(\"edit\"));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(record.id));\n    await dispatch(JobFormsActions.setSelectedJobFormsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await JobFormsActions.mapDetailJobFormsToForm();\n  },\n  handlePressDelete: async (jobFormsId) => {\n    await dispatch(JobFormsActions.setSelectedJobFormsId(jobFormsId));\n    JobFormsActions.deleteJobFormsRequested(jobFormsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect data={enumInstanceType} name=\"instanceType\" label=\"Tipe\" />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"riceTrademark\"\n            label=\"Merek Dagang Beras\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerAddress\"\n            label=\"Alamat\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"phone\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingCapacity\"\n            label=\"Kapasitas Penggilingan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingWorkCapacityPerDay\"\n            label=\"Kapasitas Kerja Penggilingan (Per Hari)\"\n            placeholder=\"-\"\n            component={CInput}\n            labelSize={12}\n            type=\"text\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentUnitComponent = () => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"serialNumber\"\n            label=\"Nomor Seri\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"engineNumber\"\n            label=\"Nomor Mesin\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"gearboxNumber\"\n            label=\"Nomor Gearbox\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"production_unit_year\"\n            label=\"Tahun Produksi Unit\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Jam Kerja</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>\n          (per Hari & Hour Meter )\n        </Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <Field\n            name=\"perHour\"\n            label=\"Per Hour\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"hourMeter\"\n            label=\"Hour Meter\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\"></div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Tanggal Transaksi Produk</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>(Bulan & Tahun)</Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Pembelian\" />\n        </div>\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Terima Bantuan\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentUnitComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentSparePartComponent = ({ onChangeServiced, isServiced }) => {\n  const [listServices] = React.useState([\n    {\n      id: `serviced-1`,\n      value: \"true\",\n      label: \"Pernah\",\n    },\n    {\n      id: `serviced-2`,\n      value: \"false\",\n      label: \"Tidak\",\n    },\n  ]);\n\n  const RenderServiceHistory = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_buy_place`}\n                    label=\"Tempat Pembelian Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartSelling = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_qty`}\n                    label=\"Qty\"\n                    placeholder=\"Jumlah Penjualan Spare Part\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartNeeded = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_name`}\n                    label=\"Nama Produk Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_code`}\n                    label=\"Kode Produk\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.part_number`}\n                    label=\"Part Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <CSelect\n            onChange={(val) => onChangeServiced(val)}\n            data={listServices}\n            label=\"Pernah Diservis\"\n            name=\"location\"\n          />\n        </div>\n      </div>\n      {isServiced && (\n        <div class=\"row m-2 text-left\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_place\"\n              label=\"Perbaikan Dilakukan Di\"\n              placeholder=\"cth: Blitar\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_type\"\n              label=\"Jenis Perbaikan\"\n              placeholder=\"cth: Service Sikring\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">Riwayat Penggantian Spare Part</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan service, maksimal 5 unit.\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_changing_histories\"\n          component={RenderServiceHistory}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Penjualan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>\n            (pada saat kunjuangan)\n          </Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan penjualan, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_selling_histories\"\n          component={(_props) => <RenderSparePartSelling {..._props} />}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Daftar Kebutuhan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>(per Quartal)</Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi apabila terdapat kebutuhan spare part, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_needs\"\n          component={(_props) => <RenderSparePartNeeded {..._props} />}\n        />\n        <hr />\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-12\">\n          <Field\n            name=\"note\"\n            label=\"Keterangan\"\n            placeholder=\"cth: Pernah dilakukan service namun tidak rampung\"\n            component={CInput}\n            typeComponent=\"textarea\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentSparePartComponent;\n","import React from \"react\";\n\nimport { Steps, Button, message } from \"antd\";\nimport { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\n\nconst { Text } = Typography;\n\nconst StepsContent = styled.div`\n  min-height: 200px;\n  margin-top: 16px;\n  padding-top: 22px;\n  text-align: center;\n  background-color: #fafafa;\n  border: 1px dashed #e9e9e9;\n  border-radius: 2px;\n`;\n\nconst StepsAction = styled.div`\n  margin-top: 24px;\n`;\n\nconst { Step } = Steps;\n\nconst FormWizardIdentificationComponent = (props) => {\n  const { data, steps, saveFormChanges } = props;\n  const [current, setCurrent] = React.useState(0);\n\n  const onClickNext = () => {\n    setCurrent(current + 1);\n    saveFormChanges(false);\n  };\n\n  const onClickPrevious = () => {\n    setCurrent(current - 1);\n  };\n\n  const onFinished = () => {\n    message.success(\"Processing complete!\");\n    saveFormChanges(true);\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">Form Identification</h4>\n            <h6 class=\"text-small\">\n              {data.milling ? \"(Penggilingan)\" : \"(Non Penggilingan)\"}\n            </h6>\n            <hr />\n            <div class=\"d-flex justify-content-between align-items-baseline\">\n              <div class=\"col-md-6 mb-3\">\n                <Text>Nama Customer : </Text>\n                <Text strong>{data.customer_name ?? \"-\"}</Text>\n                <br />\n                <Text>Tipe : </Text>\n                <Text strong>{data.type ?? \"-\"}</Text>\n                <br />\n                <Text>Cabang : </Text>\n                <Text strong>{data.branch_name ?? \"-\"}</Text>\n                <br />\n                <Text>Status : </Text>\n                <CBadgeText type=\"info\">{data.status ?? \"-\"}</CBadgeText>\n                <br />\n                <Text>Dibuat : </Text>\n                <Text strong>{data.created_date ?? \"-\"}</Text>\n              </div>\n            </div>\n            <Steps current={current}>\n              {steps.map((item) => (\n                <Step\n                  description={item.description}\n                  key={item.title}\n                  title={item.title}\n                />\n              ))}\n            </Steps>\n            <StepsContent>{steps[current].content}</StepsContent>\n            <StepsAction>\n              {current < steps.length - 1 && (\n                <Button type=\"primary\" onClick={onClickNext}>\n                  Next\n                </Button>\n              )}\n              {current === steps.length - 1 && (\n                <Button type=\"primary\" onClick={onFinished}>\n                  Done\n                </Button>\n              )}\n              {current > 0 && (\n                <Button style={{ margin: \"0 8px\" }} onClick={onClickPrevious}>\n                  Previous\n                </Button>\n              )}\n            </StepsAction>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormWizardIdentificationComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst ContentMachineConfigurationComponent = ({\n  machineConf,\n  onAddMachineConf,\n}) => {\n  const RenderBodyHusker = ({ fields, item }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 2) {\n                return;\n              }\n              fields.push({});\n              setTimeout(() => {\n                onAddMachineConf(item);\n              }, 500);\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`${item.type} ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.brand`}\n                    label=\"Merek\"\n                    placeholder=\"cth: merek_1, merek_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.type`}\n                    label=\"Tipe\"\n                    placeholder=\"cth: tipe_1, tipe_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-2\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"cth: 12, 5, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.buy_and_use_year`}\n                    label=\"Tahun Pembelian & Pemakaian\"\n                    placeholder=\"cth: 2015, 2017, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.serial_number`}\n                    label=\"Nomor Seri\"\n                    placeholder=\"cth: 77888, 66555, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return machineConf.map((item, index) => {\n    return (\n      <div key={`machine-conf-${index}`} className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">{item.type}</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Maksimal hanya input 2 field.\n          </p>\n        </div>\n        <FieldArray\n          name={`engine_confs.${item.name}.list`}\n          component={(_props) => <RenderBodyHusker item={item} {..._props} />}\n        />\n        <hr />\n      </div>\n    );\n  });\n};\n\nexport default ContentMachineConfigurationComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneRegularComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumInstanceType}\n            name=\"instanceType\"\n            label=\"Tipe Instansi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"productName\"\n            label=\"Nama Produk\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instancePhoneNumber\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-4\">\n        <h5 className=\"card-title\">Alamat Customer</h5>\n      </div>\n      <div class=\"row ml-2 mr-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"kelurahan\"\n            label=\"Kelurahan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"kecamatan\"\n            label=\"Kecamatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n          <Field\n            name=\"postalCode\"\n            label=\"Kode Pos\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneRegularComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, getFormValues, reduxForm } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport {\n  getCitiesEnum,\n  getMachineConf,\n  getProvinceEnum,\n  SelectInstanceType,\n  SelectInstanceTypeRegular,\n  SelectStatusMilling,\n} from \"../../../../app/Helpers\";\nimport ContentStepOneComponent from \"../../Component/Wizard/ContentStepOneComponent\";\nimport ContentUnitComponent from \"../../Component/Wizard/ContentUnitComponent\";\nimport ContentSparePartComponent from \"../../Component/Wizard/ContentSparePartComponent\";\nimport FormWizardIdentificationComponent from \"../../Component/Wizard/FormWizardIdentificationComponent\";\nimport ContentMachineConfigurationComponent from \"../../Component/Wizard/ContentMachineConfigurationComponent\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport ContentStepOneRegularComponent from \"../../Component/Wizard/ContentStepOneRegularComponent\";\nimport * as IdentificationActions from \"../../Store/IdentificationActions\";\n\nconst FormWizardIdentificationContainer = (props) => {\n  const [cities, setCities] = React.useState([]);\n  const [serviced, setServiced] = React.useState(false);\n  const {\n    identification: { selectedIdentificationData, formStatus },\n    masters: { listProvince },\n    machineConfiguration: { listMachine },\n    identificationFormValues,\n  } = props;\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"wizardIdentificationForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onChangeServiced = (val) => {\n    const isServiced = val.split(\"|\");\n    if (isServiced[0] === \"true\") {\n      setServiced(true);\n    } else {\n      setServiced(false);\n    }\n  };\n\n  const onAddMachineConf = (item) => {\n    store.dispatch(\n      change(\n        \"wizardIdentificationForm\",\n        `engine_confs.${item.name}.id`,\n        item.id\n      )\n    );\n  };\n\n  const saveFormChanges = (isLastStep) => {\n    IdentificationActions.saveIdentificationRequested(\n      formStatus,\n      identificationFormValues,\n      isLastStep\n    );\n  };\n\n  const steps = [];\n\n  if (selectedIdentificationData.milling) {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceType}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Konfigurasi Mesin\",\n      content: (\n        <ContentMachineConfigurationComponent\n          machineConf={getMachineConf(listMachine)}\n          onAddMachineConf={onAddMachineConf}\n        />\n      ),\n    });\n  } else {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneRegularComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceTypeRegular}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Unit\",\n      content: <ContentUnitComponent />,\n    });\n  }\n\n  steps.push({\n    title: \"Spare Part\",\n    content: (\n      <ContentSparePartComponent\n        onChangeServiced={onChangeServiced}\n        isServiced={serviced}\n      />\n    ),\n  });\n\n  return (\n    <FormWizardIdentificationComponent\n      data={selectedIdentificationData}\n      steps={steps}\n      saveFormChanges={saveFormChanges}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  identification: state.identification,\n  masters: state.masters,\n  machineConfiguration: state.machineConfiguration,\n  identificationFormValues: getFormValues(\"wizardIdentificationForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormWizardIdentificationContainer);\n\nexport default reduxForm({\n  form: \"wizardIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  formStatus,\n  listCustomer,\n  listType,\n  listBranch,\n  listLocation,\n  listMilling\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          {formStatus === \"edit\" && (\n            <Field\n              name=\"id\"\n              label=\"ID Cabang\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          )}\n        </div>\n        <div class=\"col-md-12\">\n          <CSelect\n            // onChange={(val) => handleAutoPopulateUnitModel(val, indexUnit)}\n            showSearch\n            data={listCustomer}\n            label=\"Nama Customer\"\n            name=\"customer\"\n          />\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <CSelect data={listBranch} label=\"Cabang\" name=\"branch\" />\n            </div>\n            <div class=\"col-md-6\">\n              <CSelect data={listLocation} label=\"Lokasi\" name=\"location\" />\n            </div>\n          </div>\n          <CSelect data={listType} label=\"Tipe Identifikasi\" name=\"type\" />\n          <CSelect data={listMilling} label=\"Milling\" name=\"milling\" />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst IdentificationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n    enumCustomers,\n    enumType,\n    enumBranch,\n    enumLocation,\n    enumMilling,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n          listCustomer={enumCustomers}\n          listType={enumType}\n          listBranch={enumBranch}\n          listLocation={enumLocation}\n          listMilling={enumMilling}\n        />\n      }\n    />\n  );\n};\n\nexport default IdentificationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as CustomersActions from \"../../Customers/Store/CustomersActions\";\nimport IdentificationModalComponent from \"../Component/IdentificationModalComponent\";\nimport {\n  SelectLocation,\n  SelectMilling,\n  SelectType,\n} from \"../../../app/Helpers\";\n\nconst IdentificationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    identification: { formStatus },\n    handleSubmitForm,\n    customers: { listCustomers },\n    branch: { listBranch },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomer = [];\n  listCustomers.map((item, index) => {\n    SelectCustomer.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    CustomersActions.getCustomerListDataByPaging(1, 300);\n  }, []);\n\n  return (\n    <IdentificationModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumCustomers={SelectCustomer}\n      enumType={SelectType}\n      enumBranch={SelectBranch}\n      enumLocation={SelectLocation}\n      enumMilling={SelectMilling}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  identification: state.identification,\n  component: state.component,\n  masters: state.masters,\n  customers: state.customers,\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    IdentificationActions.saveIdentificationRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IdentificationModalContainer);\n\nexport default reduxForm({\n  form: \"editIdentificationhForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport IdentificationModalContainer from \"../Container/IdentificationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ListIdentificationComponent = (props) => {\n  const {\n    headers,\n    listIdentification,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Identifikasi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Identifikasi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listIdentification}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    size=\"small\"\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <IdentificationModalContainer />\n    </div>\n  );\n};\n\nexport default ListIdentificationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListIdentificationComponent from \"../Component/ListIdentificationComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ListIdentificationContainer = (props) => {\n  const {\n    getListIdentification,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    identification: { listIdentification, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listIdentification.length > 0) {\n    listIdentification.map((item, index) => {\n      listIdentification[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_id\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_id.length - b.branch_id.length,\n    },\n    {\n      title: \"Tipe Identifikasi\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"20%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListIdentification(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(IdentificationActions.setPagingIdentification(paging));\n    getListIdentification(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListIdentification(page, limit, val);\n  };\n\n  return (\n    <ListIdentificationComponent\n      headers={headers}\n      listIdentification={listIdentification}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  identification: state.identification,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListIdentification: (page, limit, keyword) =>\n    IdentificationActions.getIdentificationListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(IdentificationActions.setSelectedIdentificationData({}));\n    await dispatch(IdentificationActions.setSelectedIdentificationId(\"\"));\n    dispatch(IdentificationActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    IdentificationActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(IdentificationActions.setFormStatus(\"edit\"));\n    await dispatch(\n      IdentificationActions.setSelectedIdentificationId(record.id)\n    );\n    await dispatch(IdentificationActions.setSelectedIdentificationData(record));\n    setTimeout(() => {\n      navigate(\"form-identification\");\n    }, 500);\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(IdentificationActions.setSelectedIdentificationId(branchId));\n    IdentificationActions.deleteIdentificationRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListIdentificationContainer);\n\nexport default reduxForm({\n  form: \"identificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, formStatus }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {formStatus === \"edit\" && (\n          <div class=\"col-md-12\">\n            <Field\n              name=\"id\"\n              label=\"ID Konfigurasi Mesin\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          </div>\n        )}\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Konfigurasi Mesin\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst MachineConfigurationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n        />\n      }\n    />\n  );\n};\n\nexport default MachineConfigurationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as MachineConfigurationActions from \"../Store/MachineConfigurationActions\";\nimport BranchModalComponent from \"../Component/MachineConfigurationModalComponent\";\n\nconst MachineConfigurationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    MachineConfigurationActions.saveMachineRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationModalContainer);\n\nexport default reduxForm({\n  form: \"editMachineConfigurationForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport MachineConfigurationModalContainer from \"../Container/MachineConfigurationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst MachineConfigurationComponent = (props) => {\n  const {\n    headers,\n    listMachine,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Konfigurasi Mesin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Konfigurasi Mesin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listMachine}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <MachineConfigurationModalContainer />\n    </div>\n  );\n};\n\nexport default MachineConfigurationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as MachineActions from \"../Store/MachineConfigurationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport MachineConfigurationComponent from \"../Component/MachineConfigurationComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst MachineConfigurationContainer = (props) => {\n  const {\n    getListMachine,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    machineConfiguration: { listMachine, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMachine.length > 0) {\n    listMachine.map((item, index) => {\n      listMachine[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Konfigurasi Mesin\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"50%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListMachine(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(MachineActions.setPagingMachineConf(paging));\n    getListMachine(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListMachine(page, limit, val);\n  };\n\n  return (\n    <MachineConfigurationComponent\n      headers={headers}\n      listMachine={listMachine}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  machineConfiguration: state.machineConfiguration,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMachine: (page, limit, keyword) =>\n    MachineActions.getMachineListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(MachineActions.setSelectedMachineData({}));\n    await dispatch(MachineActions.setSelectedMachineId(\"\"));\n    dispatch(MachineActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    MachineActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(MachineActions.setFormStatus(\"edit\"));\n    await dispatch(MachineActions.setSelectedMachineId(record.id));\n    await dispatch(MachineActions.setSelectedMachineData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await MachineActions.mapDetailMachineToForm();\n  },\n  handlePressDelete: async (machineId) => {\n    await dispatch(MachineActions.setSelectedMachineId(machineId));\n    MachineActions.deleteMachineRequested(machineId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationContainer);\n\nexport default reduxForm({\n  form: \"machineConfigurationForm\",\n})(EnhanceContainer);\n","import React, { useState } from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Upload, message, Typography } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\n\nconst beforeUpload = (file) => {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n  return isJpgOrPng && isLt2M;\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  handleUploadPhoto,\n  selectedUnitsData,\n}) => {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {/* <div class=\"col-md-12\">\n          <Text style={{ marginBottom: 10 }}>Foto Unit</Text>\n          <Upload\n            name=\"avatar\"\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n            // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            beforeUpload={beforeUpload}\n            onChange={handleChange}\n          >\n            {imageUrl ? (\n              <img\n                src={imageUrl}\n                alt=\"avatar\"\n                style={{ height: \"100%\", width: \"100%\" }}\n              />\n            ) : (\n              uploadButton\n            )}\n          </Upload>\n        </div> */}\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"name\" label=\"Nama Unit\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport UnitsModalComponent from \"../Component/UnitsModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    UnitsActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    UnitsActions.saveUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitForm\",\n  validate: validateFormUnit,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input, Table, Tooltip } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport UnitsModalContainer from \"../Container/UnitsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <Tooltip placement=\"top\" title=\"Edit unit\">\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </Tooltip>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    size=\"small\"\n                    columns={headers}\n                    dataSource={listUnits}\n                    // renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitsComponent;\n","import { Button, Space, Tooltip, Typography } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  BoxPlotOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/UnitsComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressUnitModel,\n    handlePressUnitFields,\n    handlePressLink,\n    units: { listUnits, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const tooltipText = <span>Unit Model</span>;\n\n  if (listUnits.length > 0) {\n    listUnits.map((item, index) => {\n      listUnits[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <Tooltip placement=\"topLeft\" title=\"Edit unit\">\n        <CButtonAntd\n          onClick={() => {\n            handlePressEdit(record);\n          }}\n          type=\"primary\"\n          icon={<EditOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n      <Tooltip placement=\"top\" title={tooltipText}>\n        <CButtonAntd\n          onClick={() => handlePressUnitModel(record.id)}\n          type=\"primary\"\n          icon={<BoxPlotOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n      <CButtonAntd\n        onClick={() => handlePressUnitFields(record)}\n        type=\"primary\"\n        icon={<FileAddOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n      render: (unit, record) => (\n        <Button\n          block\n          onClick={() => handlePressLink(record)}\n          type=\"link\"\n          style={{ whiteSpace: \"normal\", textAlign: \"left\" }}\n        >\n          <Typography\n            style={{ color: \"#1890ff\", fontWeight: \"bold\", fontSize: 11 }}\n          >\n            {unit}\n          </Typography>\n        </Button>\n      ),\n    },\n    {\n      title: \"Divisi\",\n      dataIndex: \"division\",\n      key: \"division\",\n      width: \"10%\",\n      sorter: (a, b) => a.division.length - b.division.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  React.useEffect(() => {\n    getListUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitsActions.setPagingUnit(paging));\n    getListUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnit(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listUnits}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnit: (page, limit, keyword) =>\n    UnitsActions.getUnitListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitsActions.setSelectedUnitData({}));\n    await dispatch(UnitsActions.setSelectedUnitId(\"\"));\n    dispatch(UnitsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitsActions.mapDetailUnitToForm();\n  },\n  handlePressDelete: async (unitId) => {\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    UnitsActions.deleteUnitRequested(unitId);\n  },\n  handlePressUnitModel: async (unitId) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    setTimeout(() => {\n      navigate(\"unit-models\");\n    }, 500);\n  },\n  handlePressUnitFields: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    setTimeout(() => {\n      navigate(\"unit-fields\");\n    }, 500);\n  },\n  handlePressLink: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    setTimeout(() => {\n      navigate(\"unit-job-forms\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"unitsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumProvince,\n  onChangeProvince,\n  cities,\n  enumBranch,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"name\"\n              label=\"Nama Customer\"\n              placeholder=\"Nama..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"picPhone\"\n              label=\"Telepon PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"username\"\n              label=\"Username\"\n              placeholder=\"Username..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              onChange={(val) => onChangeProvince(val)}\n              data={enumProvince}\n              name=\"province\"\n              label=\"Nama Provinsi\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"password\"\n              label=\"Password\"\n              placeholder=\"Password..\"\n              component={CInput}\n              type=\"password\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              data={cities}\n              name=\"city\"\n              label=\"Kota/Kabupaten\"\n              disabled={cities.length <= 0}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"phone\"\n              label=\"Telepon\"\n              placeholder=\"cth: 0821xxx\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"workHour\"\n              label=\"Jam Kerja\"\n              placeholder=\"cth : 08:00 - 15:20\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"pic\"\n              label=\"PIC\"\n              placeholder=\"PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"address\"\n              label=\"Alamat\"\n              component={CInput}\n              type=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst CustomerModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    enumProvince,\n    onChangeProvince,\n    cities,\n    enumBranch,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      width={900}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          enumProvince={enumProvince}\n          onChangeProvince={onChangeProvince}\n          cities={cities}\n          enumBranch={enumBranch}\n        />\n      }\n    />\n  );\n};\n\nexport default CustomerModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as CustomersActions from \"../Store/CustomersActions\";\nimport CustomerModalComponent from \"../Component/CustomerModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { getCitiesEnum } from \"../../../app/Helpers\";\n\nconst CustomerModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { listBranch },\n    masters: { listMenu, listProvince },\n    customers: { selectedCustomerData, formStatus },\n    handleSubmitForm,\n  } = props;\n  const [cities, setCities] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    setCities([]);\n    if (formStatus === \"edit\" && selectedCustomerData.province_id) {\n      const provinceId =\n        selectedCustomerData.province_id +\n        \"|\" +\n        selectedCustomerData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedCustomerData.province_id]);\n\n  React.useEffect(() => {\n    return () => {\n      CustomersActions.setFormStatus(\"add\");\n    };\n  });\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"editCustomerForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  return (\n    <CustomerModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumProvince={SelectProvince}\n      onChangeProvince={onChangeProvince}\n      cities={cities}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  customers: state.customers,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    CustomersActions.saveCustomerRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerModalContainer);\n\nexport default reduxForm({\n  form: \"editCustomerForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CustomerModalContainer from \"../Container/CustomerModalContainer\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst CustomerComponent = (props) => {\n  const {\n    headers,\n    listCustomers,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    isBlocked\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Customer</h6>\n                </div>\n                <div class=\"row align-items-center\">\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Customers\n                  </CButtonAntd>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2 mt-3\">\n                  {!isBlocked && <div class=\"col-md-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>}\n                  <div class=\"col-md-4 mt-4\">\n                    <div class=\"mt-2\" />\n                    <Search\n                      placeholder=\"Cari Customer\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listCustomers}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <CustomerModalContainer />\n    </div>\n  );\n};\n\nexport default CustomerComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { formValueSelector, reduxForm } from \"redux-form\";\nimport * as CustomerActions from \"../Store/CustomersActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CustomerComponent from \"../Component/CustomerComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex, isBlockedRoleCustomer } from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"customerForm\");\n\nconst CustomerContainer = (props) => {\n  const {\n    user: { roles, branchId },\n    getListCustomer,\n    getListBranch,\n    getListProvince,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    customerBranchValue,\n    customers: { listCustomers, paging, keyword },\n    branch: { listBranch },\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n  const { page, totalPage, limit } = paging;\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  if (listCustomers.length > 0) {\n    listCustomers.map((item, index) => {\n      listCustomers[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n    {\n      title: \"PIC | Phone\",\n      dataIndex: `phone`,\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const checkBlockedRole = () => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomer(roleId);\n\n    if (branchId) {\n      if (isBlockedRole) {\n        getListCustomer(1, 10, \"\", branchId);\n      } else {\n        getListCustomer(1, 10, \"\");\n      }\n    } else {\n      getListCustomer(1, 10, \"\");\n    }\n\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    getListBranch();\n    getListProvince();\n    checkBlockedRole();\n  }, []);\n\n  const onChangePagination = async (nextPage) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n    await store.dispatch(CustomerActions.setPagingCustomer(paging));\n    getListCustomer(nextPage, limit, keyword);\n  };\n\n  const onSearch = (val) => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomer(roleId);\n\n    if (branchId) {\n      if (isBlockedRole) {\n        getListCustomer(page, limit, val, branchId);\n      } else {\n        getListCustomer(page, limit, val, customerBranchValue);\n      }\n    } else {\n      getListCustomer(page, limit, val, customerBranchValue);\n    }\n  };\n\n  return (\n    <CustomerComponent\n      headers={headers}\n      paging={paging}\n      isBlocked={isBlocked}\n      listCustomers={listCustomers}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers,\n  branch: state.branch,\n  customerBranchValue: selector(state, \"branch\"),\n  user: state.auth.userDetail,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListCustomer: (page, limit, keyword, branchId) => {\n    const splitBranch = branchId ? branchId.split(\"|\") : [\"\"];\n    CustomerActions.getCustomerListDataByPaging(\n      page,\n      limit,\n      keyword,\n      splitBranch[0]\n    );\n  },\n  getListBranch: () => BranchActions.getBranchListDataRequested(1, 250),\n  getListProvince: () => MasterDataActions.loadProvinceListData(),\n  handlePressAddNew: async () => {\n    await dispatch(CustomerActions.setSelectedCustomerData({}));\n    await dispatch(CustomerActions.setSelectedCustomerId(\"\"));\n    dispatch(CustomerActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    CustomerActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(CustomerActions.setFormStatus(\"edit\"));\n    await dispatch(CustomerActions.setSelectedCustomerId(record.id));\n    await dispatch(CustomerActions.setSelectedCustomerData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await CustomerActions.mapDetailCustomerToForm();\n  },\n  handlePressDelete: async (customerId) => {\n    await dispatch(CustomerActions.setSelectedCustomerId(customerId));\n    CustomerActions.deleteCustomerRequested(customerId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerContainer);\n\nexport default reduxForm({\n  form: \"customerForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Peralatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default ToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTools } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport ToolsModalComponent from \"../Component/ToolsModalComponent\";\n\nconst ToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    tools: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <ToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    ToolsActions.saveToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editToolsForm\",\n  validate: validateFormTools,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ToolsModalContainer from \"../Container/ToolsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ToolsComponent = (props) => {\n  const {\n    headers,\n    listTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Peralatan</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Peralatan\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToolsModalContainer />\n    </div>\n  );\n};\n\nexport default ToolsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ToolsComponent from \"../Component/ToolsComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ToolsContainer = (props) => {\n  const {\n    getListTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    tools: { listTools, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listTools.length > 0) {\n    listTools.map((item, index) => {\n      listTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListTools(1, 10);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ToolsActions.setPagingTools(paging));\n    getListTools(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListTools(page, limit, val);\n  };\n\n  return (\n    <ToolsComponent\n      headers={headers}\n      listTools={listTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListTools: (page, limit, keyword) =>\n    ToolsActions.getToolsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(ToolsActions.setSelectedToolsData({}));\n    await dispatch(ToolsActions.setSelectedToolsId(\"\"));\n    dispatch(ToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    ToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(ToolsActions.setFormStatus(\"edit\"));\n    await dispatch(ToolsActions.setSelectedToolsId(record.id));\n    await dispatch(ToolsActions.setSelectedToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await ToolsActions.mapDetailToolsToForm();\n  },\n  handlePressDelete: async (toolsId) => {\n    await dispatch(ToolsActions.setSelectedToolsId(toolsId));\n    ToolsActions.deleteToolsRequested(toolsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsContainer);\n\nexport default reduxForm({\n  form: \"toolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Judul\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst FormCategoryModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default FormCategoryModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormCategory } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport BranchModalComponent from \"../Component/FormCategoryModalComponent\";\n\nconst FormCategoryModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    FormCategoryActions.saveFormCategoryRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryModalContainer);\n\nexport default reduxForm({\n  form: \"editFormCategory\",\n  validate: validateFormCategory,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport FormCategoryModalContainer from \"../Container/FormCategoryModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst FormCategoryComponent = (props) => {\n  const {\n    headers,\n    listFormCategory,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Kategori Form</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Kategori Form\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listFormCategory}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <FormCategoryModalContainer />\n    </div>\n  );\n};\n\nexport default FormCategoryComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport FormCategoryComponent from \"../Component/FormCategoryComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst FormCategoryContainer = (props) => {\n  const {\n    getListFormCategory,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    formCategory: { listFormCategory, paging, keyword },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listFormCategory.length > 0) {\n    listFormCategory.map((item, index) => {\n      listFormCategory[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListFormCategory(page, limit, keyword);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(FormCategoryActions.setPagingFormCategory(paging));\n    getListFormCategory(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListFormCategory(page, limit, val);\n  };\n\n  return (\n    <FormCategoryComponent\n      headers={headers}\n      listFormCategory={listFormCategory}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  formCategory: state.formCategory,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListFormCategory: (page, limit, keyword) =>\n    FormCategoryActions.getFormCatgeoryListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData({}));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(\"\"));\n    dispatch(FormCategoryActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    FormCategoryActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(FormCategoryActions.setFormStatus(\"edit\"));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(record.id));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await FormCategoryActions.mapDetailCategoryToForm();\n  },\n  handlePressDelete: async (formCategoryId) => {\n    await dispatch(\n      FormCategoryActions.setSelectedFormCategoryId(formCategoryId)\n    );\n    FormCategoryActions.deleteFormCategoryRequested(formCategoryId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryContainer);\n\nexport default reduxForm({\n  form: \"formCategory\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-12 mt-3\">\n            <Field\n              name=\"name\"\n              label=\"Nama Model\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModelsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModelsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit, validateFormUnitModel } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitsModelsModalComponent from \"../Component/UnitsModelsModalComponent\";\n\nconst UnitModelsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModelsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitModelActions.saveUnitModelsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitModelForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport UnitModelsModalContainer from \"../Container/UnitModelsModalContainer\";\nimport { navigate } from \"../../../app/Helpers\";\n\nconst { Search } = Input;\n\nconst UnitModelsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit Model</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Model\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitModelsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitModelsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FieldNumberOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitModelsComponent from \"../Component/UnitModelsComponent\";\n\nconst UnitModelsContainer = (props) => {\n  const {\n    getListUnitModels,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressSerialNumber,\n    unitModels: { listUnitModels, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitModels.length > 0) {\n    listUnitModels.map((item, index) => {\n      listUnitModels[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Model\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressSerialNumber(record)}\n        type=\"ghost\"\n        icon={<FieldNumberOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitModels(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitModelActions.setPagingUnitModel(paging));\n    getListUnitModels(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitModels(page, limit, val);\n  };\n\n  return (\n    <UnitModelsComponent\n      headers={headers}\n      listUnits={listUnitModels}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitModels: state.unitModels,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitModels: (page, limit, keyword) =>\n    UnitModelActions.getUnitModelListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitModelActions.setSelectedUnitModelData({}));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(\"\"));\n    dispatch(UnitModelActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitModelActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitModelActions.setFormStatus(\"edit\"));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitModelActions.mapDetailUnitModelToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(UnitModelActions.setSelectedUnitModelId(unitModelId));\n    UnitModelActions.deleteUnitModelRequested(unitModelId);\n  },\n  handlePressSerialNumber: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    setTimeout(() => {\n      navigate(\"unit-serial-number\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsContainer);\n\nexport default reduxForm({\n  form: \"unitsModelsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumFormCategory,\n  enumJobForm,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumFormCategory ?? []}\n              name=\"formCategory\"\n              label=\"Kategori\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"fieldName\"\n              label=\"Nama Field\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumJobForm ?? []}\n              name=\"jobForm\"\n              label=\"Jenis Form\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitFieldsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumFormCategory,\n    enumJobForm,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumFormCategory={enumFormCategory}\n          enumJobForm={enumJobForm}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitFieldsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsModalComponent from \"../../Component/UnitFields/UnitFieldsModalComponent\";\nimport Invoke from \"../../../../app/axios/Invoke\";\n\nconst UnitFieldsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    handleSubmitForm,\n  } = props;\n  const [formCategory, setFormCategory] = React.useState([]);\n  const [jobForm, setJobForm] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const loadOption = async () => {\n    const { data } = await Invoke.getFormCategory(1, 100, \"\");\n    const dataJobForm = await Invoke.getListJobForm(1, 100, \"\");\n    const listFormCategory = data.callback.data;\n    const listJobForm = dataJobForm.data.callback.data;\n\n    const SelectFormCategory = [];\n    listFormCategory.map((item, index) => {\n      SelectFormCategory.push({\n        id: `form-category-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    const SelectJobForm = [];\n    listJobForm.map((item, index) => {\n      SelectJobForm.push({\n        id: `job-form-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setFormCategory(SelectFormCategory);\n    setJobForm(SelectJobForm);\n  };\n\n  React.useEffect(() => {\n    loadOption();\n  }, []);\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitFieldsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      enumFormCategory={formCategory}\n      enumJobForm={jobForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitFieldsActions.saveUnitFieldsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitFieldsForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/UnitFields/UnitFieldsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitFieldsComponent = (props) => {\n  const {\n    headers,\n    listUnitFields,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitsData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Field Unit : ${selectedUnitsData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Field\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitFields}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitFieldsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsComponent from \"../../Component/UnitFields/UnitFieldsComponent\";\n\nconst UnitFieldsContainer = (props) => {\n  const {\n    getListUnitFields,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitFields: { listUnitFields, paging },\n    units: { selectedUnitsData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitFields.length > 0) {\n    listUnitFields.map((item, index) => {\n      listUnitFields[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Job Form\",\n      dataIndex: \"job_form_name\",\n      key: \"job_form_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\n    },\n    {\n      title: \"Nama Field\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Kategori\",\n      dataIndex: \"category_form_name\",\n      key: \"category_form_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.category_form_name.length - b.category_form_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"40%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitFields(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitFieldsActions.setPagingUnitFields(paging));\n    getListUnitFields(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitFields(page, limit, val);\n  };\n\n  return (\n    <UnitFieldsComponent\n      headers={headers}\n      listUnitFields={listUnitFields}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedUnitsData={selectedUnitsData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitFields: state.unitFields,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitFields: (page, limit, keyword) =>\n    UnitFieldsActions.getUnitFieldsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData({}));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(\"\"));\n    dispatch(UnitFieldsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitFieldsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitFieldsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(record.id));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitFieldsActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(unitFieldsId));\n    UnitFieldsActions.deleteUnitFieldRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsContainer);\n\nexport default reduxForm({\n  form: \"unitFieldsForm\",\n})(EnhanceContainer);\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_IDENTIFICATION_LIST_DATA =\n  \"SET_REPORT_IDENTIFICATION_LIST_DATA\";\nexport const SET_PAGING_REPORT_IDENTIFICATION =\n  \"SET_PAGING_REPORT_IDENTIFICATION\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportIdentificationListData = (payload) => {\n  return {\n    type: SET_REPORT_IDENTIFICATION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportIdentification = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportIdentificationListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportIdentification(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportIdentificationComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Identifikasi</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportIdentificationComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportIdentificationActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportIdentificationComponent\";\n\nconst ReportIdentificationContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportIdentificationContainer);\n\nexport default reduxForm({\n  form: \"reportIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Typography } from \"antd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumHeadDivision,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"title\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12 mt-3\">\n          <CSelect\n            showSearch\n            data={enumHeadDivision}\n            name=\"headDivision\"\n            label=\"Kepala Divisi\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumHeadDivision,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumHeadDivision={enumHeadDivision}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport DivisionModalComponent from \"../Component/DivisionModalComponent\";\nimport { enumSelectGenerator } from \"../../../app/Helpers\";\n\nconst DivisionModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    division: { formStatus },\n    masters: { listMenu },\n    employees: { listEmployees },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectEmployees = enumSelectGenerator(listEmployees, \"employee\");\n\n  return (\n    <DivisionModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumHeadDivision={SelectEmployees}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  division: state.division,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    DivisionActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    DivisionActions.saveDivisionRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionForm\",\n  validate: validateDivisionForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport DivisionModalContainer from \"../Container/DivisionModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Divisi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Divisi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <DivisionModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport * as DivisionUnitActions from \"../Store/DivisionUnitActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/DivisionComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListDivision,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressDivisionUnit,\n    division: { listDivision, paging },\n    getListEmlpoyee \n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n      key: \"title\",\n      width: \"30%\",\n      sorter: (a, b) => a.title.length - b.title.length,\n    },\n    {\n      title: \"Kepala Divisi\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDivisionUnit(record)}\n        type=\"primary\"\n        icon={<FileAddOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivision(page, limit);\n    getListEmlpoyee(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionActions.setPagingDivision(paging));\n    getListDivision(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivision(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listDivision}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivision: (page, limit, keyword) =>\n    DivisionActions.getDivisionListDataRequested(page, limit, keyword),\n  getListEmlpoyee: (page, limit) => {\n    EmployeeActions.loadEmployeeListData(page, limit);\n  },\n  handlePressAddNew: async () => {\n    await dispatch(DivisionActions.setSelectedDivisionData({}));\n    await dispatch(DivisionActions.setSelectedDivisionId(\"\"));\n    dispatch(DivisionActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionActions.mapDetailDivisionToForm();\n  },\n  handlePressDelete: async (divisionId) => {\n    await dispatch(DivisionActions.setSelectedDivisionId(divisionId));\n    DivisionActions.deleteDivisionRequested(divisionId);\n  },\n  handlePressDivisionUnit: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    setTimeout(() => {\n      navigate(\"division-unit\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"divisionForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumTools }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Peralatan Karyawan</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumTools}\n              name=\"tools\"\n              label=\"Peralatan\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst EmployeeToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    enumTools,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formStatus={formStatus}\n          enumTools={enumTools}\n        />\n      }\n    />\n  );\n};\n\nexport default EmployeeToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateEmployeeToolsForm, validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport EmployeeToolsModalComponent from \"../../Component/EmployeeTools/EmployeeToolsModalComponent\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\n\nconst EmployeeToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    employeeTools: { formStatus },\n    tools: { listTools },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectTools = enumSelectGenerator(listTools);\n\n  return (\n    <EmployeeToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      enumTools={SelectTools}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  employeeTools: state.employeeTools,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    EmployeeToolsActions.saveEmployeeToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeToolsForm\",\n  validate: validateEmployeeToolsForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport {\n  PlusOutlined,\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n} from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport EmployeeToolsModalContainer from \"../../Container/EmployeeTools/EmployeeToolsModalContainer\";\n\nconst { Search } = Input;\n\nconst EmployeeToolsComponent = (props) => {\n  const {\n    headers,\n    listEmployeeTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedEmployeeData,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Karyawan : ${selectedEmployeeData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-2 mb-2\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"employees\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Peralatan\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak PDF\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployeeTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <EmployeeToolsModalContainer />\n    </div>\n  );\n};\n\nexport default EmployeeToolsComponent;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nexport const generateEmployeeToolsReport = async (data) => {\n  const { selectedEmployeeData, listEmployeeTools } = data;\n  const newListData = [];\n\n  // eslint-disable-next-line array-callback-return\n  await listEmployeeTools.map((item, index) => {\n    newListData.push({ no: index + 1, name: item.name, check: \"-\" });\n  });\n\n  const doc = new jsPDF();\n\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Peralatan Karyawan\", 100, 20, \"center\");\n\n  doc.setFontSize(12);\n  doc.setFont(\"courier\");\n  //   Line 1\n  doc.text(15, 42, `Karyawan`);\n  doc.text(`: ${selectedEmployeeData.name.toUpperCase()}`, 50, 42);\n\n  doc.text(15, 49, `Cabang`);\n  doc.text(`: ${selectedEmployeeData.branch_name ?? \"-\"}`, 50, 49);\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    let docCell = dataCell.doc;\n\n    // --> Draw Circle shape for checklist\n    if (dataCell.cell.section === \"body\" && dataCell.column.index === 2) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 22, dataCell.cell.y + 4, 2, \"FD\");\n    } else if (\n      dataCell.cell.section === \"body\" &&\n      dataCell.column.index === 3\n    ) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 12, dataCell.cell.y + 4, 2, \"FD\");\n    }\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  doc.autoTable({\n    startY: 57,\n    body: newListData,\n    theme: \"plain\",\n    headStyles: { halign: \"center\" },\n    styles: { overflow: \"linebreak\" },\n    columns: [\n      { header: \"#\", dataKey: \"no\" },\n      { header: \"Nama Peralatan\", dataKey: \"name\" },\n      { header: \"Check\", dataKey: \"test1\" },\n      { header: \"NA\", dataKey: \"test2\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  // === Signature ===\n  doc.addPage();\n  doc.setFontSize(16);\n  doc.setFont(\"Times-Roman\", \"regular\");\n  //   Line 2\n  doc.setFontSize(12);\n\n  doc.setFontSize(16);\n  doc.text(80, 90, `MENGETAHUI`);\n\n  //   Line 1\n  doc.text(45, 120, `Karyawan`);\n  doc.text(130, 120, `Coordinator /`);\n  doc.text(130, 127, `Supervisor`);\n\n  doc.text(45, 163, `(...........................)`);\n  doc.text(130, 163, `(...........................)`);\n\n  //   Export\n  doc.save(\n    `Peralatan-Karyawan-${selectedEmployeeData.name.replace(\" \", \"-\")}.pdf`\n  );\n};\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport EmployeeToolsComponent from \"../../Component/EmployeeTools/EmployeeToolsComponent\";\nimport { generateEmployeeToolsReport } from \"../../Store/EmployeeTools/EmployeeToolsReport\";\n\nconst EmployeeToolsContainer = (props) => {\n  const {\n    getListEmployeeTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    employeeTools: { listEmployeeTools, paging },\n    employees: { selectedEmployeeData, selectedEmployeeId },\n    employeeToolsFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployeeTools.length > 0) {\n    listEmployeeTools.map((item, index) => {\n      listEmployeeTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployeeTools(selectedEmployeeId, page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeToolsActions.setPagingEmployeeTools(paging));\n    getListEmployeeTools(selectedEmployeeId, nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListEmployeeTools(selectedEmployeeId, page, limit, val);\n  };\n\n  const handlePressGeneratePdf = () => {\n    const dataPrinted = {\n      selectedEmployeeData,\n      listEmployeeTools,\n    };\n    generateEmployeeToolsReport(dataPrinted, employeeToolsFormValues);\n  };\n\n  return (\n    <EmployeeToolsComponent\n      headers={headers}\n      listEmployeeTools={listEmployeeTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedEmployeeData={selectedEmployeeData}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  employeeTools: state.employeeTools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployeeTools: (employeeId, page, limit, keyword) =>\n    EmployeeToolsActions.getEmployeeToolsRequested(\n      employeeId,\n      page,\n      limit,\n      keyword\n    ),\n  handlePressAddNew: async () => {\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData({}));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(\"\"));\n    dispatch(EmployeeToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    EmployeeToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(EmployeeToolsActions.setFormStatus(\"edit\"));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(record.id));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await EmployeeToolsActions.mapDetailEmployeeToolsToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(\n      EmployeeToolsActions.setSelectedEmployeeToolsId(unitFieldsId)\n    );\n    EmployeeToolsActions.deleteEmployeeToolsRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsContainer);\n\nexport default reduxForm({\n  form: \"employeeToolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, enumUnits }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect showSearch data={enumUnits} name=\"unit\" label=\"Unit\" />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionUnitModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumUnits,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumUnits={enumUnits}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionUnitModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionUnitForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\nimport DivisionUnitModalComponent from \"../../Component/DivisionUnit/DivisionUnitModalComponent\";\n\nconst DivisionUnitModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    divisionUnit: { formStatus, selectedDivisionUnitData },\n    units: { listUnits },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectUnits = enumSelectGenerator(listUnits, \"unit\");\n\n  return (\n    <DivisionUnitModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedDivisionUnitData={selectedDivisionUnitData}\n      enumUnits={SelectUnits}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    DivisionUnitActions.saveDivisionUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionUnitForm\",\n  validate: validateDivisionUnitForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/DivisionUnit/DivisionUnitModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionUnitComponent = (props) => {\n  const {\n    headers,\n    listDivisionUnit,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedDivisionData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Divisi : ${selectedDivisionData.title}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"division\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listDivisionUnit}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionUnitComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport DivisionUnitComponent from \"../../Component/DivisionUnit/DivisionUnitComponent\";\n\nconst DivisionUnitContainer = (props) => {\n  const {\n    getListDivisionUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    divisionUnit: { listDivisionUnit, paging },\n    division: { selectedDivisionData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivisionUnit.length > 0) {\n    listDivisionUnit.map((item, index) => {\n      listDivisionUnit[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"unit_name\",\n      key: \"unit_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.unit_name.length - b.unit_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"20%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivisionUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionUnitActions.setPagingDivisionUnit(paging));\n    getListDivisionUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivisionUnit(page, limit, val);\n  };\n\n  return (\n    <DivisionUnitComponent\n      headers={headers}\n      listDivisionUnit={listDivisionUnit}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedDivisionData={selectedDivisionData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivisionUnit: (page, limit, keyword) =>\n    DivisionUnitActions.getDivisionUnitListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData({}));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(\"\"));\n    dispatch(DivisionUnitActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionUnitActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionUnitActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(record.id));\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionUnitActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (divisionUnitId) => {\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(divisionUnitId));\n    DivisionUnitActions.deleteUnitFieldRequested(divisionUnitId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitContainer);\n\nexport default reduxForm({\n  form: \"divisionUnitForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  Image,\n} from \"@react-pdf/renderer\";\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#E4E4E4\",\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n});\n\nconst DetailServiceReportComponent = () => {\n  return (\n    <PDFViewer style={{ flex: 1 }}>\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>Section #1</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n          <View style={styles.section}>\n            <Image\n              style={{\n                width: 300,\n                height: 100,\n              }}\n              src=\"https://cors-anywhere.herokuapp.com/https://drive.google.com/file/d/1hwrQUgM6CvBwxIZUu1fRASxKQr0FxfsM/view\"\n            />\n          </View>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nexport default DetailServiceReportComponent;\n","import React from \"react\";\nimport DetailServiceReportComponent from \"../Components/DetailServiceReportComponent\";\n\nconst DetailServiceReportContainer = () => {\n  return <DetailServiceReportComponent />;\n};\n\nexport default DetailServiceReportContainer;\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumCustomer,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumCustomer ?? []}\n              name=\"customer\"\n              label=\"Pilih Customer\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"serialNumber\"\n              label=\"Serial Number\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              typeComponent=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ModalUnitSerialNumberComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumCustomer,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumCustomer={enumCustomer}\n        />\n      }\n    />\n  );\n};\n\nexport default ModalUnitSerialNumberComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormUnitModel, validateUnitSerialNumberForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport ModalUnitSerialNumberComponent from \"../../Component/UnitSerialNumber/ModalUnitSerialNumberComponent\";\n\nconst ModalUnitSerialNumber = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    customers: { listCustomersDropdown },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <ModalUnitSerialNumberComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedUnitsData={selectedUnitsData}\n      enumCustomer={SelectCustomerData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  customers: state.customers,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitSerialNumberActions.saveUnitSerialNumberRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModalUnitSerialNumber);\n\nexport default reduxForm({\n  form: \"editUnitSerialNumberForm\",\n  validate: validateUnitSerialNumberForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport ModalUnitSerialNumberContainer from \"../../Container/UnitSerialNumber/ModalUnitSerialNumberContainer\";\n\nconst { Search } = Input;\n\nconst UnitSerialNumberComponent = (props) => {\n  const {\n    headers,\n    listUnitSerialNumber,\n    listCustomer,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitModelsData,\n    onChangeCustomer,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <h6 class=\"ml-1 card-title\">{`Unit Serial Number : ${selectedUnitModelsData.name}`}</h6>\n                  <p class=\"card-description ml-1\">\n                    Silahkan pilih customer untuk menampilkan data serial number\n                  </p>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-1 mb-3\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit-models\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Serial Number\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-7\">\n                    <CSelect\n                      showSearch\n                      data={listCustomer}\n                      name=\"customer\"\n                      label=\"Pilih Customer\"\n                      onChange={(customer) => {\n                        onChangeCustomer(customer);\n                      }}\n                    />\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      name=\"keyword\"\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitSerialNumber}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ModalUnitSerialNumberContainer />\n    </div>\n  );\n};\n\nexport default UnitSerialNumberComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport * as CustomerActions from \"../../../Customers/Store/CustomersActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitSerialNumberComponent from \"../../Component/UnitSerialNumber/UnitSerialNumberComponent\";\n\nconst UnitSerialNumberContainer = (props) => {\n  const {\n    getUnitSerialNumber,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitSerialNumber: {\n      listUnitSerialNumber,\n      paging,\n      selectedtUnitSerialNumber,\n    },\n    unitModels: { selectedUnitModelsData },\n    customers: { listCustomersDropdown },\n    unitSerialNumberFormValues,\n  } = props;\n\n  const { dispatch } = store;\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitSerialNumber.length > 0) {\n    listUnitSerialNumber.map((item, index) => {\n      listUnitSerialNumber[index] = {\n        ...item,\n        no: getIndex(page, limit)[index],\n      };\n    });\n  }\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Serial Number\",\n      dataIndex: \"serial_number\",\n      key: \"serial_number\",\n      width: \"30%\",\n      sorter: (a, b) => a.serial_number.length - b.serial_number.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    // getUnitSerialNumber(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitSerialNumberActions.setPagingUnitModel(paging));\n    getUnitSerialNumber(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\n  };\n\n  const handleOnchangeCustomer = (customer) => {\n    if (!customer) {\n      dispatch(UnitSerialNumberActions.setUnitSerialNumberData([]));\n      return;\n    }\n\n    const splitCustomerId = customer.split(\"|\");\n    UnitSerialNumberActions.getUnitSerialNumber(\n      page,\n      limit,\n      \"\",\n      splitCustomerId[0]\n    );\n  };\n\n  return (\n    <UnitSerialNumberComponent\n      headers={headers}\n      listUnitSerialNumber={listUnitSerialNumber}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      listCustomer={SelectCustomerData}\n      selectedUnitModelsData={selectedUnitModelsData}\n      selectedtUnitSerialNumber={selectedtUnitSerialNumber}\n      onChangeCustomer={handleOnchangeCustomer}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitSerialNumber: state.unitSerialNumber,\n  unitModels: state.unitModels,\n  customers: state.customers,\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getUnitSerialNumber: (page, limit, keyword) =>\n    UnitSerialNumberActions.getUnitSerialNumber(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberData({}));\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberId(\"\"));\n    dispatch(UnitSerialNumberActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitSerialNumberActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitSerialNumberActions.setFormStatus(\"edit\"));\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(record.id)\n    );\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberData(record)\n    );\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitSerialNumberActions.mapDetailUnitSerialNumberToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(unitModelId)\n    );\n    UnitSerialNumberActions.deleteUnitModelRequested(unitModelId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitSerialNumberContainer);\n\nexport default reduxForm({\n  form: \"unitSerialNumberForm\",\n})(EnhanceContainer);\n","import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { navigate } from \"../../../app/Helpers\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst UnitJobFormsComponent = (props) => {\r\n  const {\r\n    headers,\r\n    listUnitJobForms,\r\n    renderActionTable,\r\n    onSearch,\r\n    selectedUnitsData,\r\n  } = props;\r\n\r\n  return (\r\n    <div class=\"page-content\">\r\n      <div class=\"mt-5\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 grid-margin stretch-card\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <div class=\"mb-2\">\r\n                  <h6 class=\"ml-1 card-title\">{`Unit : ${selectedUnitsData.name}`}</h6>\r\n                  {/* <p class=\"card-description ml-1\">\r\n                    Silahkan pilih customer untuk menampilkan data \r\n                  </p> */}\r\n                </div>\r\n                <div class=\"row d-flex justify-content-between mb-2\">\r\n                  <div class=\"col-md-7\">\r\n                    <div class=\"row ml-1 mb-3\">\r\n                      <CButtonAntd\r\n                        onClick={() => navigate(\"unit\")}\r\n                        type=\"primary\"\r\n                        icon={<ArrowLeftOutlined />}\r\n                        size=\"middle\"\r\n                        danger\r\n                      >\r\n                        Kembali\r\n                      </CButtonAntd>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4 mt-4\">\r\n                    <Search\r\n                      name=\"keyword\"\r\n                      placeholder=\"Cari\"\r\n                      onSearch={onSearch}\r\n                      enterButton\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <CTableAntd data={listUnitJobForms} headers={headers} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitJobFormsComponent;\r\n","import { Space } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFormValues, reduxForm } from \"redux-form\";\r\nimport * as UnitJobFormsActions from \"../../Units/Store/UnitJobFormActions\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport UnitJobFormsComponent from \"../Component/UnitJobFormsComponent\";\r\n\r\nconst UnitJobFormsContainer = (props) => {\r\n  const {\r\n    units: { selectedUnitsData },\r\n    unitJobForms: { listUnitJobForms },\r\n    handlePressEdit,\r\n    handlePressDelete,\r\n  } = props;\r\n\r\n  const { dispatch } = store;\r\n  //   const { page, limit, totalPage } = paging;\r\n\r\n  if (listUnitJobForms.length > 0) {\r\n    listUnitJobForms.map((item, index) => {\r\n      listUnitJobForms[index] = {\r\n        ...item,\r\n        no: index + 1,\r\n      };\r\n    });\r\n  }\r\n\r\n  const headers = [\r\n    {\r\n      title: \"No\",\r\n      dataIndex: \"no\",\r\n      key: \"no\",\r\n      width: \"7%\",\r\n      sorter: (a, b) => a.no - b.no,\r\n    },\r\n    {\r\n      title: \"Job Form\",\r\n      dataIndex: \"job_form_name\",\r\n      key: \"job_form_name\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\r\n    },\r\n    {\r\n      title: \"Deskripsi\",\r\n      dataIndex: \"descriptions\",\r\n      key: \"descriptions\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    UnitJobFormsActions.getUnitJobFormsListDataRequested(\"\");\r\n    // getUnitSerialNumber(page, limit);\r\n  }, []);\r\n\r\n  const onSearch = (keyword) => {\r\n    // UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\r\n  };\r\n\r\n  return (\r\n    <UnitJobFormsComponent\r\n      headers={headers}\r\n      selectedUnitsData={selectedUnitsData}\r\n      listUnitJobForms={listUnitJobForms}\r\n      onSearch={onSearch}\r\n      // {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  units: state.units,\r\n  unitJobForms: state.unitJobForms,\r\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UnitJobFormsContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"unitJobForms\",\r\n})(EnhanceContainer);\r\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst WorkingHoursComponent = (props) => {\n  const {\n    headers,\n    listMonitoringEmployee,\n    onChangePagination,\n    paging,\n    onSearch,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Jam Kerja Karyawan</h6>\n                </div>\n\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"No. Service\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Laporan\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listMonitoringEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkingHoursComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as WorkingHoursActions from \"../Store/WorkingHoursActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeMonitoringEmployee,\n  getStatusWorkingHours,\n} from \"../../../app/Helpers\";\nimport { Tag, Typography } from \"antd\";\nimport WorkingHoursComponent from \"../Component/WorkingHoursComponent\";\nimport { exportWorkingHoursReportPdf } from \"../Store/WorkingHoursReport\";\nimport moment from \"moment\";\n\nconst WorkingHoursContainer = (props) => {\n  const {\n    getListWorkingHours,\n    handlePressAddNew,\n    workingHours: { listWorkingHours, paging },\n    branch: { listBranchDropdown },\n    workingHoursFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const printedData = {\n    listWorkingHours,\n    from: moment(),\n    until: moment(),\n  };\n\n  if (listWorkingHours.length > 0) {\n    listWorkingHours.map((item, index) => {\n      listWorkingHours[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"No. Service\",\n      dataIndex: \"no_service\",\n      key: \"no_service\",\n      width: \"20%\",\n      sorter: (a, b) => a.no_service.length - b.no_service.length,\n      render: (no_service) => {\n        return (\n          <Tag style={{ width: 100, textAlign: \"center\" }} color={\"#f0f0f0\"}>\n            <Typography style={{ fontWeight: \"bold\" }}>\n              {no_service ? `${no_service}` : \"-\"}\n            </Typography>\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created\",\n      key: \"created\",\n      width: \"30%\",\n      sorter: (a, b) => a.created.length - b.created.length,\n    },\n    {\n      title: \"Jam Kerja\",\n      dataIndex: \"total_hours\",\n      key: \"total_hours\",\n      render: (total_hours) => {\n        return (\n          <Tag style={{ width: 80, textAlign: \"center\" }} color={\"#1890ff\"}>\n            {total_hours ? `${total_hours} Jam` : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.total_hours - b.total_hours,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n      render: (status) => {\n        let color = getStatusWorkingHours(status).color;\n        return (\n          <Tag style={{ width: 112, textAlign: \"center\" }} color={color}>\n            {status ? getStatusWorkingHours(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Tanggal Selesai\",\n      dataIndex: \"done\",\n      key: \"done\",\n      width: \"30%\",\n      sorter: (a, b) => a.done.length - b.done.length,\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranchDropdown.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListWorkingHours(page, limit);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      WorkingHoursActions.setPagingMonitoringEmployee(paging)\n    );\n    getListWorkingHours(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    WorkingHoursActions.handleSearch(workingHoursFormValues);\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportWorkingHoursReportPdf(printedData, workingHoursFormValues);\n  };\n\n  return (\n    <WorkingHoursComponent\n      headers={headers}\n      listMonitoringEmployee={listWorkingHours}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  workingHours: state.workingHours,\n  branch: state.branch,\n  workingHoursFormValues: getFormValues(\"workingHoursForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListWorkingHours: (page, limit, from, until, keyword) =>\n    WorkingHoursActions.getWorkingHoursListDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WorkingHoursContainer);\n\nexport default reduxForm({\n  form: \"workingHoursForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport moment from \"moment\";\r\nimport { getStatusWorkingHours } from \"../../../app/Helpers\";\r\n\r\nexport const exportWorkingHoursReportPdf = (data, values) => {\r\n  const { listWorkingHours, from, until } = data;\r\n  const startDate = moment(from).format(\"YYYY-MM-DD\");\r\n  const dueDate = moment(until).format(\"YYYY-MM-DD\");\r\n  const workingHoursList = [];\r\n\r\n  listWorkingHours.map((item, index) => {\r\n    workingHoursList.push({\r\n      no: index + 1,\r\n      employeeNik: item.employee_nik,\r\n      employeeName: item.employee_name,\r\n      noService: item.no_service,\r\n      customerName: item.customer_name,\r\n      type: item.job_type,\r\n      totalHours: item.total_hours,\r\n      status: item.status ? getStatusWorkingHours(item.status).value : \"-\",\r\n      createdDate: item.created,\r\n      doneDate: item.done,\r\n    });\r\n  });\r\n\r\n  const doc = new jsPDF();\r\n  // doc.text({from_left}, {from_top})\r\n  doc.setFontSize(20);\r\n  doc.setFont(\"courier\");\r\n  doc.text(\"Jam Kerja Karyawan\", 100, 20, \"center\");\r\n  doc.setFontSize(16);\r\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\r\n\r\n  doc.setFontSize(12);\r\n\r\n  //   Line 1\r\n  doc.text(15, 42, `Dari Tanggal`);\r\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\r\n  doc.text(15, 49, `Sampai Tanggal`);\r\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\r\n\r\n  // Check if filtered by branch\r\n  if (values) {\r\n    if (values.branch) {\r\n      const splitBranch = values.branch.split(\"|\");\r\n      doc.text(15, 56, `Cabang`);\r\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\r\n    }\r\n  }\r\n\r\n  // drawCell is function for styling font, color and add content to every cell\r\n  const drawCell = (dataCell) => {\r\n    // --> This for custom styling font too\r\n    // else if (dataCell.column.dataKey === \"no\") {\r\n    //   docCell.setFont(\"Verdana\", \"bold\");\r\n    //   docCell.setFontSize(12);\r\n    // }\r\n  };\r\n\r\n  // --> didParseCell is function for styling border, line, etc of every cell\r\n  const didParseCell = (dataCell) => {\r\n    let s = dataCell.cell.styles;\r\n    s.lineColor = [0, 0, 0];\r\n    s.lineWidth = 0.1;\r\n    s.font = \"courier\";\r\n\r\n    // --> This for spesific custom cell with spesific index\r\n    // if (dataCell.row.index === 1) {\r\n    //   s.lineColor = [0, 0, 0];\r\n    //   s.borders = \"t\";\r\n    // }\r\n  };\r\n\r\n  const headTable = [\r\n    [\r\n      \"No\",\r\n      \"NIK\",\r\n      \"Nama Karyawan\",\r\n      \"No. Service\",\r\n      \"Nama Customer\",\r\n      \"Dibuat\",\r\n      \"Jam Kerja\",\r\n      \"Status\",\r\n      \"Tanggal Selesai\",\r\n    ],\r\n  ];\r\n\r\n  doc.autoTable({\r\n    startY: values ? 65 : 60,\r\n    body: workingHoursList,\r\n    theme: \"plain\",\r\n    head: headTable,\r\n    headStyles: { halign: \"center\", valign: \"middle\" },\r\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\r\n    columns: [\r\n      { header: \"No\", dataKey: \"no\" },\r\n      { header: \"NIK\", dataKey: \"employeeNik\" },\r\n      { header: \"Nama Karyawan\", dataKey: \"employeeName\" },\r\n      { header: \"No. Service\", dataKey: \"noService\" },\r\n      { header: \"Nama Customer\", dataKey: \"customerName\" },\r\n      { header: \"Dibuat\", dataKey: \"createdDate\" },\r\n      { header: \"Jam Kerja\", dataKey: \"totalHours\" },\r\n      { header: \"Status\", dataKey: \"status\" },\r\n      { header: \"Tanggal Selesai\", dataKey: \"doneDate\" },\r\n    ],\r\n    willDrawCell: drawCell,\r\n    didParseCell: didParseCell,\r\n    columnStyles: {\r\n      0: { columnWidth: 28 },\r\n      1: { columnWidth: 20 },\r\n      // 2: { halign: \"center\" },\r\n      // 3: { halign: \"center\" },\r\n      // 4: { halign: \"center\" },\r\n      // 5: { halign: \"center\" },\r\n      // 6: { halign: \"center\" },\r\n    },\r\n    tableLineColor: [0, 0, 0],\r\n    tableLineWidth: 0.3,\r\n  });\r\n\r\n  //   Export\r\n  doc.save(\"working-hours.pdf\");\r\n};\r\n","import \"react-toastify/dist/ReactToastify.css\";\n\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer } from \"react-toastify\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport TemplateContainer from \"../modules/Template/Container/TemplateContainer\";\nimport withTemplate from \"./withTemplate\";\n\n// Pages\nimport DashboardContainer from \"../modules/Dashboard/Container/DashboardContainer\";\nimport LoginContainer from \"../modules/Auth/Container/LoginContainer\";\nimport InternalServiceContainer from \"../modules/InternalService/Container/InternalServiceContainer\";\nimport ExternalServiceContainer from \"../modules/ExternalService/Container/ExternalServiceContainer\";\nimport MonitoringEmployeeContainer from \"../modules/MonitoringEmployee/Container/MonitoringEmployeeContainer\";\nimport ReportServiceRepairContainer from \"../modules/ReportServiceRepair/Container/ReportServiceRepairContainer\";\nimport ReportEmployeeContainer from \"../modules/ReportEmployee/Container/ReportEmployeeContainer\";\nimport ListServicesContainer from \"../modules/ListServices/Container/ListServicesContainer\";\nimport AdminContainer from \"../modules/Admin/Container/AdminContainer\";\nimport NotFoundPage from \"../components/NotFound/NotFound\";\nimport AuthMiddleware from \"./AuthMiddleware\";\nimport DetailServiceTransactionContainer from \"../modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer\";\nimport RolesContainer from \"../modules/Roles/Container/RolesContainer\";\nimport EmployeesListContainer from \"../modules/Employees/Container/EmployeesListContainer\";\nimport EmployeeEditContainer from \"../modules/Employees/Container/EmployeeEditContainer\";\nimport BranchContainer from \"../modules/Branch/Container/BranchContainer\";\nimport JobFormsContainer from \"../modules/JobForms/Container/JobFormsContainer\";\nimport FormWizardIdentificationContainer from \"../modules/Identification/Container/Wizard/FormWizardIdentificationContainer\";\nimport ListIdentificationContainer from \"../modules/Identification/Container/ListIdentificationContainer\";\nimport MachineConfigurationContainer from \"../modules/MachineConfiguration/Container/MachineConfigurationContainer\";\nimport UnitsContainer from \"../modules/Units/Container/UnitsContainer\";\nimport CustomerContainer from \"../modules/Customers/Container/CustomerContainer\";\nimport ToolsContainer from \"../modules/Tools/Container/ToolsContainer\";\nimport FormCategoryContainer from \"../modules/FormCategory/Container/FormCategoryContainer\";\nimport UnitModelsContainer from \"../modules/Units/Container/UnitModelsContainer\";\nimport UnitFieldsContainer from \"../modules/Units/Container/UnitFields/UnitFieldsContainer\";\nimport ReportIdentificationContainer from \"../modules/ReportIdentification/Container/ReportIdentificationContainer\";\nimport DivisionContainer from \"../modules/Division/Container/DivisionContainer\";\nimport EmployeeToolsContainer from \"../modules/Employees/Container/EmployeeTools/EmployeeToolsContainer\";\nimport DivisionUnitContainer from \"../modules/Division/Container/DivisionUnit/DivisionUnitContainer\";\nimport DetailServiceReportContainer from \"../modules/ReportPdf/Containers/DetailServiceReportContainer\";\nimport UnitSerialNumberContainer from \"../modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer\";\nimport UnitJobFormsContainer from \"../modules/Units/Container/UnitJobFormsContainer\";\nimport WorkingHoursContainer from \"../modules/WorkingHours/Container/WorkingHoursContainer\";\n\nexport default function Navigation() {\n  const authenticatedPage = (\n    component,\n    footerImg,\n    menuPath = \"\",\n    isSecureRoute = false,\n    footer\n  ) => {\n    return AuthMiddleware(\n      withTemplate(TemplateContainer, component, footerImg, footer),\n      menuPath,\n      isSecureRoute\n    );\n  };\n\n  const templating = (component, isLandingPage) => {\n    return withTemplate(TemplateContainer, component, isLandingPage);\n  };\n\n  const Login = templating(LoginContainer, false);\n  const NotFound = templating(NotFoundPage, false);\n  const Admin = authenticatedPage(AdminContainer, true, \"/admin\", true);\n  const Roles = authenticatedPage(RolesContainer, true, \"/role\", true);\n  const JobForms = authenticatedPage(\n    JobFormsContainer,\n    true,\n    \"/jobforms\",\n    true\n  );\n  const Branches = authenticatedPage(BranchContainer, true, \"/cabang\", true);\n  const EmployeeList = authenticatedPage(\n    EmployeesListContainer,\n    true,\n    \"/employees\",\n    true\n  );\n  const EmployeeTools = authenticatedPage(\n    EmployeeToolsContainer,\n    true,\n    \"/employee-tool\",\n    true\n  );\n  const Division = authenticatedPage(\n    DivisionContainer,\n    true,\n    \"/division\",\n    true\n  );\n  const DivisionUnit = authenticatedPage(\n    DivisionUnitContainer,\n    true,\n    \"/division-unit\",\n  );\n  const EditEmployee = authenticatedPage(\n    EmployeeEditContainer,\n    true,\n    \"/edit-employee\"\n  );\n  const Dashboard = authenticatedPage(DashboardContainer, true, \"/dashboard\", true);\n  const Units = authenticatedPage(UnitsContainer, true, \"/unit\", true);\n  const UnitModels = authenticatedPage(\n    UnitModelsContainer,\n    true,\n    \"/unit-models\",\n  );\n  const UnitFields = authenticatedPage(\n    UnitFieldsContainer,\n    true,\n    \"/unit-fields\",\n  );\n  const UnitJobForms = authenticatedPage(\n    UnitJobFormsContainer,\n    true,\n    \"/unit-job-forms\",\n  );\n  const UnitSerialNumber = authenticatedPage(\n    UnitSerialNumberContainer,\n    true,\n    \"/unit-serial-number\"\n  );\n  const Tools = authenticatedPage(ToolsContainer, true, \"/tools\");\n  const Customers = authenticatedPage(CustomerContainer, true, \"/customer\");\n  const FormCategory = authenticatedPage(\n    FormCategoryContainer,\n    true,\n    \"/category\",\n    true\n  );\n  const MachineConfiguration = authenticatedPage(\n    MachineConfigurationContainer,\n    true,\n    \"/machine\",\n    true\n  );\n  const InternalService = authenticatedPage(\n    InternalServiceContainer,\n    true,\n    \"/internal-service\",\n    true\n  );\n  const ExternalService = authenticatedPage(\n    ExternalServiceContainer,\n    true,\n    \"/external-service\",\n    true\n  );\n  const MonitoringEmployee = authenticatedPage(\n    MonitoringEmployeeContainer,\n    true,\n    \"/monitoring-employee\",\n    true\n  );\n  const ReportServiceRepair = authenticatedPage(\n    ReportServiceRepairContainer,\n    true,\n    \"/report_trans\",\n    true\n  );\n  const ReportEmployee = authenticatedPage(\n    ReportEmployeeContainer,\n    true,\n    \"/report_employee\",\n    true\n  );\n  const WorkingHours = authenticatedPage(\n    WorkingHoursContainer,\n    true,\n    \"/working-hours\",\n    true\n  );\n  const ListServices = authenticatedPage(\n    ListServicesContainer,\n    true,\n    \"/list_service\",\n    true\n  );\n  const ReportIdentification = authenticatedPage(\n    ReportIdentificationContainer,\n    true,\n    \"/report_identification\",\n    true\n  );\n  const DetailService = authenticatedPage(\n    DetailServiceTransactionContainer,\n    true,\n    \"/detail-services\"\n  );\n  const FormWizardIdentification = authenticatedPage(\n    FormWizardIdentificationContainer,\n    true,\n    \"/form-identification\"\n  );\n  const ListIdentification = authenticatedPage(\n    ListIdentificationContainer,\n    true,\n    \"/identification\",\n    true\n  );\n\n  return (\n    <>\n      <Helmet titleTemplate=\"PT. Rutan - \" defaultTitle=\"PT. Rutan\"></Helmet>\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates={true}\n        position=\"top-right\"\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"\n        progressBar={true}\n        closeOnToastrClick={true}\n      />\n      <ToastContainer autoClose={2000} />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n        <Route exact path=\"/auth\" component={Login} />\n        <Route exact path=\"/admin\" component={Admin} />\n        <Route exact path=\"/role\" component={Roles} />\n        <Route exact path=\"/cabang\" component={Branches} />\n        <Route exact path=\"/machine\" component={MachineConfiguration} />\n        <Route exact path=\"/jobforms\" component={JobForms} />\n        <Route exact path=\"/unit\" component={Units} />\n        <Route exact path=\"/unit-models\" component={UnitModels} />\n        <Route exact path=\"/unit-fields\" component={UnitFields} />\n        <Route exact path=\"/unit-job-forms\" component={UnitJobForms} />\n        <Route exact path=\"/unit-serial-number\" component={UnitSerialNumber} />\n        <Route exact path=\"/tools\" component={Tools} />\n        <Route exact path=\"/customer\" component={Customers} />\n        <Route exact path=\"/category\" component={FormCategory} />\n        <Route exact path=\"/employees\" component={EmployeeList} />\n        <Route exact path=\"/division\" component={Division} />\n        <Route exact path=\"/division-unit\" component={DivisionUnit} />\n        <Route exact path=\"/edit-employee\" component={EditEmployee} />\n        <Route exact path=\"/internal-service\" component={InternalService} />\n        <Route exact path=\"/external-service\" component={ExternalService} />\n        <Route exact path=\"/employee-tools\" component={EmployeeTools} />\n        <Route\n          exact\n          path=\"/report-transaction\"\n          component={DetailServiceReportContainer}\n        />\n        <Route\n          exact\n          path=\"/monitoring-employee\"\n          component={MonitoringEmployee}\n        />\n        <Route exact path=\"/report_trans\" component={ReportServiceRepair} />\n        <Route exact path=\"/list_service\" component={ListServices} />\n        <Route exact path=\"/detail-services\" component={DetailService} />\n        <Route exact path=\"/report_employee\" component={ReportEmployee} />\n        <Route exact path=\"/working-hours\" component={WorkingHours} />\n        <Route\n          exact\n          path=\"/report_identification\"\n          component={ReportIdentification}\n        />\n        <Route\n          exact\n          path=\"/form-identification\"\n          component={FormWizardIdentification}\n        />\n        <Route exact path=\"/identification\" component={ListIdentification} />\n        <Route path={\"*\"} component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n","import \"react-redux-toastr/lib/css/react-redux-toastr.min.css\";\nimport \"antd/dist/antd.css\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport history from \"./app/History\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./app/ConfigureStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Navigation from \"./app/Navigation\";\n\nfunction App({ context }) {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ConnectedRouter history={history}>\n          <Navigation />\n        </ConnectedRouter>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}