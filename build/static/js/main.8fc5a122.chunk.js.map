{"version":3,"sources":["app/History.js","app/Saga/AppSaga.js","app/Saga/SagaMiddleware.js","app/axios/ConfigAxios.js","app/axios/Invoke.js","modules/App/Store/ComponentAction.js","modules/Auth/Store/AuthAction.js","modules/Auth/Store/AuthReducer.js","app/Helpers.js","modules/Roles/Store/RolesActions.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionAction.js","modules/ListServices/Store/ListServicesActions.js","modules/ListServices/Store/ListServicesReducer.js","modules/App/Store/ComponentReducer.js","modules/Customers/Store/CustomersActions.js","modules/Customers/Store/CustomersReducer.js","modules/Admin/Store/AdminActions.js","modules/Admin/Store/AdminReducer.js","modules/Roles/Store/RolesReducer.js","modules/MasterData/Store/MasterDataActions.js","modules/Employees/Store/EmployeesActions.js","modules/Employees/Store/EmployeesReducer.js","modules/Employees/Store/EmployeeTools/EmployeeToolsActions.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReducer.js","modules/MasterData/Store/MasterDataReducer.js","modules/Units/Store/UnitsActions.js","modules/Units/Store/UnitsReducer.js","modules/JobForms/Store/JobFormsActions.js","modules/JobForms/Store/JobFormsReducer.js","modules/Branch/Store/BranchActions.js","modules/Branch/Store/BranchReducer.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer.js","modules/Units/Store/UnitModelActions.js","modules/Units/Store/UnitModelReducer.js","modules/ExternalService/Store/ExternalServiceActions.js","modules/ExternalService/Store/ExternalServiceReducer.js","modules/Identification/Store/IdentificationActions.js","modules/Identification/Store/IdentificationReducer.js","modules/MachineConfiguration/Store/MachineConfigurationActions.js","modules/MachineConfiguration/Store/MachineConfigurationReducer.js","modules/Tools/Store/ToolsActions.js","modules/Tools/Store/ToolsReducer.js","modules/FormCategory/Store/FormCategoryActions.js","modules/FormCategory/Store/FormCategoryReducer.js","modules/Units/Store/UnitFieldsActions.js","modules/Units/Store/UnitFieldsReducer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeActions.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReducer.js","modules/ReportServiceRepair/Store/ReportServiceRepairActions.js","modules/ReportServiceRepair/Store/ReportServiceRepairReducer.js","modules/ReportEmployee/Store/ReportEmployeeActions.js","modules/ReportEmployee/Store/ReportEmployeeReducer.js","modules/Division/Store/DivisionActions.js","modules/Division/Store/DivisionReducer.js","modules/Division/Store/DivisionUnitActions.js","modules/Division/Store/DivisionUnitReducer.js","modules/Dashboard/Store/DashboardActions.js","modules/Dashboard/Store/DashboardReducer.js","modules/Units/Store/UnitSerialNumberActions.js","modules/Units/Store/UnitSerialNumberReducer.js","modules/Units/Store/UnitJobFormActions.js","modules/Units/Store/UnitJobFormsReducer.js","modules/WorkingHours/Store/WorkingHoursActions.js","modules/WorkingHours/Store/WorkingHoursReducer.js","app/RootReducers.js","app/ConfigureStore.js","app/FormHelpers.js","components/CGlobalOverlay/CGlobalOverlay.tsx","components/Sidebar/Sidebar.js","components/Footer/Footer.js","components/Navbar/Navbar.js","modules/Template/Component/TemplateComponent.js","modules/Auth/Selector/AuthSelector.js","modules/App/Selector/AppSelector.js","modules/Template/Container/TemplateContainer.js","app/withTemplate.js","components/CButton/CButtonAntd.tsx","modules/Dashboard/Component/DashboardComponent.js","app/InitializeApp.js","modules/Dashboard/Container/DashboardContainer.js","components/CInput/CInput.tsx","modules/Auth/Component/LoginComponent.js","app/validateForm.js","modules/Auth/Container/LoginContainer.js","components/CSelect/CSelect.js","components/CDatePicker/CDatePicker.js","components/CButton/CButton.tsx","modules/InternalService/Component/InternalServiceComponent.js","modules/InternalService/Store/InternalServiceActions.js","modules/InternalService/Container/InternalServiceContainer.js","modules/ExternalService/Component/ExternalServiceComponent.js","modules/ExternalService/Container/ExternalServiceContainer.js","modules/MonitoringEmployee/Component/MonitoringEmployeeComponent.js","modules/MonitoringEmployee/Container/MonitoringEmployeeContainer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReport.js","modules/ReportServiceRepair/Component/ReportServiceRepairComponent.js","modules/ReportServiceRepair/Container/ReportServiceRepairContainer.js","modules/ReportEmployee/Component/ReportEmployeeComponent.js","modules/ReportEmployee/Container/ReportEmployeeContainer.js","modules/ListServices/Component/ListServicesComponent.js","modules/ListServices/Container/ListServicesContainer.js","components/CTable/CTableAntd.js","components/CModal/CModal.tsx","modules/Admin/Component/AdminModalComponent.js","modules/Admin/Container/AdminModalContainer.js","modules/Admin/Component/AdminComponent.js","modules/Admin/Container/AdminContainer.js","components/NotFound/NotFound.js","app/AuthMiddleware.js","components/CBadgeText/CBadgeText.tsx","modules/DetailServiceTransaction/Component/AddEmployeeModalComponent.js","modules/DetailServiceTransaction/Container/AddEmployeeModalContainer.js","property/colors.js","modules/DetailServiceTransaction/Component/RejectedModalComponent.js","modules/DetailServiceTransaction/Container/RejectedModalContainer.js","modules/DetailServiceTransaction/Component/EditModalTransactionComponent.js","modules/DetailServiceTransaction/Container/EditModalTransactionContainer.js","modules/DetailServiceTransaction/Component/EditModalDailiesComponent.js","modules/DetailServiceTransaction/Container/EditModalDailiesContainer.js","modules/DetailServiceTransaction/Component/InsertImageModalComponent.js","modules/DetailServiceTransaction/Container/InsertImageModalContainer.js","modules/DetailServiceTransaction/Component/EditModalSummaryComponent.js","modules/DetailServiceTransaction/Container/EditModalSummaryContainer.js","modules/DetailServiceTransaction/Component/DetailServiceTransactionComponent.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelEmployeeComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelEmployeeContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelSummaryComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelSummaryContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelImagesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelImagesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelDailiesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelDailiesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelHistoriesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelHistoriesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelRejectionsComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelRejectionsContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelChecklistComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelChecklistContainer.js","modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer.js","modules/Roles/Component/RolesEditModalComponent.js","modules/Roles/Container/RolesEditModalContainer.js","modules/Roles/Component/RolesComponent.js","modules/Roles/Container/RolesContainer.js","modules/Employees/Component/EmployeesListComponent.js","modules/Employees/Container/EmployeesListContainer.js","modules/Employees/Component/EmployeeEditComponent.js","modules/Employees/Container/EmployeeEditContainer.js","modules/Branch/Component/BranchModalComponent.js","modules/Branch/Container/BranchModalContainer.js","modules/Branch/Component/BranchComponent.js","modules/Branch/Container/BranchContainer.js","modules/JobForms/Component/JobFormsModalComponent.js","modules/JobForms/Container/JobFormsModalContainer.js","modules/JobForms/Component/JobFormsComponent.js","modules/JobForms/Container/JobFormsContainer.js","modules/Identification/Component/Wizard/ContentStepOneComponent.js","modules/Identification/Component/Wizard/ContentUnitComponent.js","modules/Identification/Component/Wizard/ContentSparePartComponent.js","modules/Identification/Component/Wizard/FormWizardIdentificationComponent.js","modules/Identification/Component/Wizard/ContentMachineConfigurationComponent.js","modules/Identification/Component/Wizard/ContentStepOneRegularComponent.js","modules/Identification/Container/Wizard/FormWizardIdentificationContainer.js","modules/Identification/Component/IdentificationModalComponent.js","modules/Identification/Container/IdentificationModalContainer.js","modules/Identification/Component/ListIdentificationComponent.js","modules/Identification/Container/ListIdentificationContainer.js","modules/MachineConfiguration/Component/MachineConfigurationModalComponent.js","modules/MachineConfiguration/Container/MachineConfigurationModalContainer.js","modules/MachineConfiguration/Component/MachineConfigurationComponent.js","modules/MachineConfiguration/Container/MachineConfigurationContainer.js","modules/Units/Component/UnitsModalComponent.js","modules/Units/Container/UnitsModalContainer.js","modules/Units/Component/UnitsComponent.js","modules/Units/Container/UnitsContainer.js","modules/Customers/Component/CustomerModalComponent.js","modules/Customers/Container/CustomerModalContainer.js","modules/Customers/Component/CustomerComponent.js","modules/Customers/Container/CustomerContainer.js","modules/Tools/Component/ToolsModalComponent.js","modules/Tools/Container/ToolsModalContainer.js","modules/Tools/Component/ToolsComponent.js","modules/Tools/Container/ToolsContainer.js","modules/FormCategory/Component/FormCategoryModalComponent.js","modules/FormCategory/Container/FormCategoryModalContainer.js","modules/FormCategory/Component/FormCategoryComponent.js","modules/FormCategory/Container/FormCategoryContainer.js","modules/Units/Component/UnitsModelsModalComponent.js","modules/Units/Container/UnitModelsModalContainer.js","modules/Units/Component/UnitModelsComponent.js","modules/Units/Container/UnitModelsContainer.js","modules/Units/Component/UnitFields/UnitFieldsModalComponent.js","modules/Units/Container/UnitFields/UnitFieldsModalContainer.js","modules/Units/Component/UnitFields/UnitFieldsComponent.js","modules/Units/Container/UnitFields/UnitFieldsContainer.js","modules/ReportIdentification/Store/ReportIdentificationActions.js","modules/ReportIdentification/Component/ReportIdentificationComponent.js","modules/ReportIdentification/Container/ReportIdentificationContainer.js","modules/Division/Component/DivisionModalComponent.js","modules/Division/Container/DivisionModalContainer.js","modules/Division/Component/DivisionComponent.js","modules/Division/Container/DivisionContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsModalComponent.js","modules/Employees/Container/EmployeeTools/EmployeeToolsModalContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsComponent.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReport.js","modules/Employees/Container/EmployeeTools/EmployeeToolsContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitModalComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitModalContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitContainer.js","modules/ReportPdf/Components/DetailServiceReportComponent.js","modules/ReportPdf/Containers/DetailServiceReportContainer.js","modules/Units/Component/UnitSerialNumber/ModalUnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/ModalUnitSerialNumberContainer.js","modules/Units/Component/UnitSerialNumber/UnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer.js","modules/Units/Component/UnitJobFormsComponent.js","modules/Units/Container/UnitJobFormsContainer.js","modules/WorkingHours/Component/WorkingHoursComponent.js","modules/WorkingHours/Container/WorkingHoursContainer.js","modules/WorkingHours/Store/WorkingHoursReport.js","app/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["history","createBrowserHistory","basename","handleErrorProcess","handleErrorAction","action","errorData","response","undefined","toastrConfirmOptions","onOk","window","location","reload","okText","disableCancel","toastr","confirm","error","responseStatus","status","console","log","data","ErrorCode","toastMessage","class","id","MessageKey","dataErr","Data","Failures","ErrorKey","Message","toast","takeEvery","all","fork","ConfigAxios","axios","create","baseURL","headers","Accept","timeout","defaults","delete","interceptors","request","use","requestFulfilled","method","Promise","resolve","requestRejected","_","isEmpty","reject","responseFulfilled","responseRejected","warning","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Invoke","headersConfigDelete","submitLogin","post","submitLoginEmployee","getListServices","page","limit","keyword","type","employeeId","get","deleteJobServiceById","jobId","getOneServices","getListAdmin","getAdminById","adminId","addAdmin","updateAdmin","put","deleteAdminById","getListAdminRoles","getAdminRolesById","customerId","addAdminRoles","updateAdminRoles","deleteAdminRolesById","getEmployeeRoles","getEmployeeTools","addEmployeeRole","deleteEmployeeRole","getCustomerList","branchId","getCustomerById","addCustomer","updateCustomer","deleteCustomerById","getEmployeeList","roleId","divisionId","getEmployeeById","addEmployee","updateEmployee","deleteEmployeeById","getListEmployeeTools","getEmployeeToolsById","addEmployeeTools","updateEmployeeTools","deleteEmployeeToolsById","employeeToolsId","getListRole","getRoleById","addRole","updateRole","deleteRoleById","getProvinceList","getCityList","provinceId","getDashboardProgressData","addInternalService","updateJobService","setFinishedService","setApprovedService","setRejectedService","payload","getServicesEmployee","addNewEmployeeService","setStatusEmployeeService","getJobServiceSummary","unitId","getJobServiceMedia","getJobServiceDailies","updateJobServiceDailies","getChecklistData","unitModelId","getRejectedData","getJobServiceHistories","addJobServiceMedia","addJobServiceDaily","updateSummary","getUnitList","addUnit","updateUnit","deleteUnitById","getListUnitModel","addUnitSerialNumber","updateUnitSerialNumber","unitSerialNumberId","deleteUnitSerialNumber","getUnitSerialNumber","addUnitModel","updateUnitModel","deleteUnitModelById","getListUnitFields","getListUnitJobForms","jobFormId","addUnitFields","updateUnitFields","deleteUnitFieldsById","unitfieldsId","getListJobForm","keyowrd","addJobForms","updateJobForms","deleteJobForms","jobFormsId","getListBranch","deleteBranchById","addBranch","updateBranch","getListMenu","addMenuRole","getMenuByRoleId","deleteMenuByMenuRoleId","menuRoleId","getListEngine","addEngine","updateEngine","deleteEngine","machineId","getListTools","addTool","updateTool","deleteTool","toolId","getFormCategory","addFormCategory","updateFormCategory","deleteFormCategory","categoryFormId","getIdentificationList","addIdentification","updateIdentificationMilling","updateIdentificationRegular","deleteIdentificationById","identificationId","getDivisionList","addDivision","updateDivision","deleteDivision","getDivisionUnitList","addDivisionUnit","getReportMonitoringEmployee","from","until","getReportServiceRepair","getReportEmployee","getWorkingHours","getTransactionPdfUrl","downloadPdfFromUrl","url","responseType","PROCESS_GLOBAL_LOADING","PROCESS_FORM_GLOBAL_LOADING","SHOW_GLOBAL_MODAL","RESET_ALL_LOADING","setGlobalLoading","setGlobalModal","setGlobalFormLoading","resetAllGlobalLoadingProcess","dispatch","store","SET_ACCESS_TOKEN_DATA","SET_USER_DETAIL_DATA","SET_ERROR_LOGIN","setUserDetail","setErrorLogin","appendItem","a","callback","accessToken","handleSubmitLogin","values","username","password","then","setTimeout","push","catch","onRejected","dataResponseRejected","initialState","userDetail","avatar","navigate","path","getIndex","currentpage","pageNumbers","startIndex","endIndex","i","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","SelectLocation","value","label","SelectType","SelectInstanceType","SelectStatus","SelectStatusServices","SelectStatusMilling","SelectInstanceTypeRegular","SelectMilling","enumTypeInternalServices","enumTypeExternalServices","enumWarranty","warrantyMonths","toString","getProvinceEnum","SelectProvince","map","item","index","name","getCitiesEnum","SelectCities","enumSelectGenerator","enumName","SelectEnum","getUnitModelEnum","SelectUnitModel","getMachineConf","SelectMachines","replace","toLowerCase","getStatus","statusItem","toUpperCase","color","getStatusWorkingHours","categoryServices","categoryMonitoringServices","enumTypeMonitoringEmployee","isBlockedRoleDetailService","role","isBlocked","isBlockedRoleCustomer","SET_LIST_ROLES","SET_SELECTED_ROLE_ID","SET_SELECTED_ROLE_DETAIL","SET_FORM_STATUS","RESET_STATE","SET_SELECTED_ROLE_MENU","setSelectedRoleId","setFormStatus","setSelectedRoleDetail","setSelectedRoleMenu","showToast","success","getListRolesRequested","mapDetailRoleToForm","getState","roles","selectedRoleDetail","change","description","getMenuByRolesId","subItem","menu_id","resetForm","doAddRoleProcess","menuSelected","splitDescription","split","length","replaceAll","ComponentActions","doDeleteMenuRoleProcess","menuId","menuListApi","filter","x","menu","doAddMenuRoleProcess","role_id","view","insert","update","doSaveMenuRole","newMenuSelected","currentMenuSelected","selectedRoleMenu","selectedRoleId","newMenu","doEditRoleProcess","doDeleteRoleProcess","deleteRoleRequested","cancelText","saveRoleRequested","SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA","SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA","SET_GROUPING_SUMMARY_DATA","SET_GROUPING_CHECKLIST_DATA","SET_SELECTED_SERVICES_SUMMARY_DATA","SET_SELECTED_SERVICES_MEDIA_DATA","SET_SELECTED_SERVICES_DAILIES_DATA","SET_SELECTED_SERVICES_HISTORIES_DATA","SET_SELECTED_SERVICES_CHECKLIST_DATA","SET_SELECTED_SERVICES_REJECTED_DATA","SET_EDIT_TRANSACTION_MODAL","SET_REJECTIONS_MODAL","SET_EDIT_DAILIES_MODAL","SET_SELECTED_EDIT_DAILIES_DATA","SET_SELECTED_UNIT","RESET_DETAIL_SERVICE","SET_INSERT_MEDIA_MODAL","SET_TYPE_FORM_DAILIES","SET_EDIT_SUMMARY_MODAL","setRejectionsModal","setEditTransactionModal","setGroupingSummaryData","setGroupingChecklistData","setEditDailiesModal","setEditSummaryModal","setInsertMediaModal","setSelectedServicesEmployeeListData","setSelectedServiceDailiesData","setSelectedServiceHistoriesData","setSelectedEditDailiesData","setTypeFormDailies","getJobServiceEmployeeList","serviceEmployeeList","results","subIitem","active","employee_service_id","employee_id","employee","logs","getJobServiceRejections","handleAddNewEmployeeService","setStatusEmployee","employeeServiceId","isActive","doRejectServiceProcess","reason","doEditServiceProcess","warranty","warrantyYears","start","moment","startDate","format","due","dueDate","job_perform","jobPerform","warranty_month","warranty_year","setSelectedJobService","units","unit_models","handlePressEditRequested","handlePressRejectedRequested","doEditDailiesProcess","dataService","services","selectedJobService","typeForm","detailService","typeFormDailies","insertPayload","title","daily_start","daily_end","endDate","doEditSummaryProcess","summary","getUnitSummary","handlePressEditDailiesRequested","handlePressEditSummaryRequested","doInsertMedia","splitUnit","unit","base64","imageUrl","media","handlePressInsertMediaRequested","mapDetailTransactionToForm","end","mapDailiesToForm","selectedEditDailies","mulai","selesai","deskripsi","downloadTransactionPdf","dataTransactionPdf","downloadUrl","pdf","fileDownload","filename","resetFormModalImage","groupingSummaryList","sequence","setDispatch","dataSummary","unitName","unit_name","err","SET_LIST_SERVICES","SET_SELECTED_JOB_SERVICE","SET_PAGING_LIST_SERVICE","SET_SELECTED_JOB_SERVICE_ID","SET_DASHBOARD_LIST_SERVICES","setListServices","setPagingListService","setSelectedJobServiceId","getListServicesRequested","paging","totalPage","getTopTenService","handleSearch","filterValues","splitTypeService","typeService","splitStatusService","statusService","handlePressEdit","doDeleteJobServiceProcess","deleteJobServiceRequested","handlePressActionsRequested","doCallActionProcess","listServices","dashboardListServices","selectedJobServiceId","isLoadingGlobal","isLoadingFormGlobal","isModalVisible","SET_CUSTOMER_LIST_DATA","SET_PAGING_CUSTOMER","SET_SELECTED_CUSTOMER_DATA","SET_SELECTED_CUSTOMER_ID","SET_CUSTOMER_LIST_DATA_DROPDOWN","setCustomerListData","setCustomerListDataDropdown","setPagingCustomer","setSelectedCustomerData","setSelectedCustomerId","getCustomerListDataByPaging","isDropdownData","doDeleteCustomerProcess","branch","doAddCustomerProcess","customers","province","cityId","city","branch_id","province_id","city_id","phone","work_hour","workHour","pic","pic_phone","picPhone","address","doEditBranchProcess","saveCustomerRequested","mapDetailCustomerToForm","selectedCustomerData","province_name","city_name","branch_name","deleteCustomerRequested","listCustomers","listCustomersDropdown","formStatus","selectedCustomerId","SET_LIST_ADMIN","SET_PAGING_ADMIN","SET_SELECTED_ADMIN_ID","SET_SELECTED_ADMIN_DATA","setListAdmin","setPagingAdmin","setSelectedAdminId","setSelectedAdminData","getListAdminRequested","doAddAdminProcess","admins","fullname","doEditAdminProcess","doDeleteAdminProcess","saveAdminRequested","mapDetailAdminToForm","selectedAdminData","deleteAdminRequested","listAdmin","selectedAdminId","listRoles","SET_PROVINCE_LIST_DATA","SET_CITY_LIST_DATA","SET_MENU_LIST_DATA","setCityListData","loadProvinceListData","loadCityListData","loadMenuListData","SET_EMPLOYEE_LIST_DATA","SET_SELECTED_EMPLOYEE_ID","SET_SELECTED_EMPLOYEE_DATA","SET_SELECTED_ROLE_EMPLOYEE","SET_PAGING_EMPLOYEES","SET_EMPLOYEE_LIST_DROPDOWN","setEmployeeListData","setSelectedEmployeeId","setSelectedEmployeeData","setSelectedRoleEmployee","setPagingEmployees","loadEmployeeListData","loadEmployeeDataDropdown","getEmployeeDataByIdRequested","getRolesByEmployeeId","setAutoPopulateEmployee","selectedEmployeeData","employees","listBranch","defaultBranch","MasterDataActions","doAddEmployeeProcess","selectedRoles","nik","photo","doEditEmployeeProcess","roleSelected","doSaveEmployeeRole","doAddEmployeeRoleProcess","newRoleId","doDeleteAllEmployeeRoleProcess","roleListApi","doDeleteEmployeeProcess","newRoleSelected","currentRoleSelected","selectedRoleEmployee","selectedEmployeeId","saveEmployeeRequested","mapDetailEmployeeToForm","deleteEmployeeRequested","splitRole","splitBranch","splitDivision","division","listEmployees","listEmployeeDropdown","SET_EMPLOYEE_TOOL_LIST_DATA","SET_SELECTED_EMPLOYEE_TOOLS_ID","SET_SELECTED_EMPLOYEE_TOOLS_DATA","SET_PAGING_EMPLOYEE_TOOLS","setEmployeeToolsListData","setSelectedEmployeeToolsId","setSelectedEmployeeToolsData","setPagingEmployeeTools","getEmployeeToolsRequested","doAddEmployeeToolsProcess","slpitToolsId","tools","tool_id","doEditEmployeeToolsProcess","splitTools","doDeleteEmployeeToolsProcess","employeeTools","saveEmployeeToolsRequested","mapDetailEmployeeToolsToForm","selectedEmployeeToolsData","deleteEmployeeToolsRequested","listEmployeeTools","selectedEmployeeToolsId","listProvince","listCity","listMenu","SET_UNIT_LIST_DATA","SET_SELECTED_UNIT_ID","SET_SELECTED_UNIT_DATA","SET_PAGING_UNIT","setUnitListData","setPagingUnit","setSelectedUnitId","setSelectedUnitData","doDeleteUnitProcess","getUnitListDataRequested","doAddUnitProcess","doEditUnitProcess","mapDetailUnitToForm","selectedUnitsData","saveUnitRequested","deleteUnitRequested","listUnits","selectedUnitsId","SET_JOB_FORMS_LIST_DATA","SET_SELECTED_JOB_FORMS_ID","SET_SELECTED_JOB_FORMS_DATA","SET_PAGING_JOB_FORM","setJobFormsListData","setPagingJobForm","setSelectedJobFormsId","setSelectedJobFormsData","doDeleteBranchProcess","getJobFormsListDataRequested","doAddJobFormsProcess","doEditJobFormsProcess","mapDetailJobFormsToForm","jobForms","selectedJobFormsData","saveJobFormsRequested","deleteJobFormsRequested","listJobForms","selectedJobFormsId","SET_BRANCH_LIST_DATA","SET_SELECTED_BRANCH_ID","SET_SELECTED_BRANCH_DATA","SET_PAGING_BRANCH","SET_BRANCH_LIST_DATA_DROPDOWN","setBranchListData","setBranchListDataDropdown","setPagingBranch","setSelectedBranchId","setSelectedBranchData","getBranchListDataRequested","doAddBranchProcess","mapDetailBranchToForm","selectedBranchData","isDropdown","saveBranchRequested","deleteBranchRequested","listBranchDropdown","selectedBranchId","selectedServiceEmployeeList","selectedServiceSummary","selectedServiceMedia","groupingSelectedServiceMedia","groupingSelectedServiceSummary","groupingSelectedServiceChecklist","selectedServiceDailies","selectedServiceHistories","selectedServiceChecklist","selectedServiceRejected","rejectionsModal","editTransactionModal","editDailiesModal","editSummaryModal","insertMediaModal","selectedUnit","SET_UNIT_MODEL_LIST_DATA","SET_SELECTED_UNIT_MODEL_ID","SET_SELECTED_UNIT_MODEL_DATA","SET_PAGING_UNIT_MODEL","setUnitModelListData","setPagingUnitModel","setSelectedUnitModelId","setSelectedUnitModelData","getUnitModelListDataRequested","doAddUnitModelsProcess","unitModels","unit_id","descriptions","serial_number","serialNumber","machine_no","machineNo","engine_model","engineModel","engine_no","engineNo","chasis_no","chasisNo","transmission_no","transmissionNo","doEditUnitModelsProcess","doDeleteUnitModelsProcess","saveUnitModelsRequested","deleteUnitModelRequested","mapDetailUnitModelToForm","selectedUnitModelsData","listUnitModels","selectedUnitModelsId","SET_ENUM_UNIT_MODEL","getEmployeeByIdFromReducer","tempData","getProvinceByIdFromReducer","masters","setAutoPopulateUnitModel","fieldIndex","indexEmployee","employeeData","provinceData","cityData","filteredCity","citySelected","setAutoPopulateCustomer","customersData","handleSubmitForm","splitCustomerId","customer","splitTypeId","splitWarranty","splitEmployeeId","unitList","splitUnitModel","unit_model_id","customer_id","job_form_id","uuidv4","identification_id","is_external","customerLocation","functionThatReturnPromise","reset","promise","pending","enumUnitModel","SET_IDENTIFICATIONN_LIST_DATA","SET_SELECTED_IDENTIFICATION_ID","SET_PAGING_IDENTIFICATION","SET_SELECTED_IDENTIFICATION_DATA","setIdentificationListData","setSelectedIdentificationId","setSelectedIdentificationData","getIdentificationListRequested","branches","identificationList","newIdentificationList","doDeleteIdentificationProcess","identification","doAddIdentificationProcess","splitCustomer","splitLocation","splitMilling","milling","splitType","doUpdateIdentificationMilling","isLastStep","selectedIdentificationId","splitInstanceType","instanceType","splitMillingStatus","millingStatus","splitCity","splitProvince","engineConfs","engine_confs","list","engine_conf_id","instance_type","instance_name","instanceName","customerName","ktp_npwp","milling_capacity","millingCapacity","milling_work_capacity_perday","millingWorkCapacityPerDay","rice_trademark","riceTrademark","history_service_place","history_service_type","notes","note","spare_part_needs","spare_part_changing_histories","spare_part_selling_histories","doUpdateIdentificationRegular","isFinished","instance_address","instanceAddress","address_district","address_city","address_province","address_subdistrict","kelurahan","address_postal_code","postalCode","instancePhoneNumber","product_name","productName","buy_date","assistance_date","machine_number","gearbox_number","production_unit_year","work_hour_per_day","hour_meter","saveIdentificationRequested","isMilling","selectedIdentificationData","deleteIdentificationRequested","listIdentification","SET_MACHINE_LIST_DATA","SET_SELECTED_MACHINE_ID","SET_SELECTED_MACHINE_DATA","SET_PAGING_MACHINE_CONF","setMachineListData","setPagingMachineConf","setSelectedMachineId","setSelectedMachineData","doDeleteMachineProcess","getMachineListDataRequested","doAddMachineProcess","doEditMachineProcess","mapDetailMachineToForm","machineConfiguration","selectedMachineData","saveMachineRequested","deleteMachineRequested","listMachine","selectedMachineId","SET_TOOLS_LIST_DATA","SET_SELECTED_TOOLS_ID","SET_SELECTED_TOOLS_DATA","SET_PAGING_TOOLS","setToolsListData","setPagingTools","setSelectedToolsId","setSelectedToolsData","doDeleteToolsProcess","toolsId","getToolsListDataRequested","doAddToolsProcess","doEditToolsProcess","mapDetailToolsToForm","selectedToolsData","saveToolsRequested","deleteToolsRequested","listTools","selectedToolsId","SET_FORM_CATEGORY_LIST_DATA","SET_SELECTED_FORM_CATEGORY_ID","SET_SELECTED_FORM_CATEGORY_DATA","SET_PAGING_FORM_CATEGORY","setFormCategoryListData","setPagingFormCategory","setSelectedFormCategoryId","setSelectedFormCategoryData","doDeleteFormCategoryProcess","getFormCatgeoryListDataRequested","doAddFormCategoryProcess","doEditFormCategoryProcess","mapDetailCategoryToForm","formCategory","selectedFormCategoryData","saveFormCategoryRequested","deleteFormCategoryRequested","formCategoryId","listFormCategory","selectedFormCategoryId","SET_UNIT_FIELDS_LIST_DATA","SET_SELECTED_UNIT_FIELDS_ID","SET_SELECTED_UNIT_FIELDS_DATA","SET_PAGING_UNIT_FIELDS","setUnitFieldsListData","setPagingUnitFields","setSelectedUnitFieldsId","setSelectedUnitFieldsData","getUnitFieldsListDataRequested","doAddUnitFieldsProcess","unitFields","splitCategoryFormId","splitjobFormId","jobForm","fieldName","category_form_id","doEditUnitFieldsProcess","doDeleteUnitFieldsProcess","unitFieldId","saveUnitFieldsRequested","deleteUnitFieldRequested","mapDetailUnitFieldToForm","selectedUnitFieldsData","job_form_name","category_form_name","listUnitFields","selectedUnitFieldsId","SET_MONITORING_EMPLOYEE_LIST_DATA","SET_PAGING_MONITORING_EMPLOYEE","setMonitoringEmployeeListData","setPagingMonitoringEmployee","getMonitoringEmployeeListDataRequested","monitoringEmployee","newListMonitoringEmployee","itemData","indexData","created_date","date","listMonitoringEmployee","SET_SERVICE_REPAIR_LIST_DATA","SET_PAGING_SERVICE_REPAIR","setServiceRepairListData","setPagingServiceRepair","getServiceRepairListDataRequested","serviceRepair","newListServiceRepair","listServiceRepair","SET_REPORT_EMPLOYEE_LIST_DATA","SET_PAGING_REPORT_EMPLOYEE","setReportEmployeeListData","setPagingReportEmployee","getReportEmployeeDataRequested","reportEmployee","newReportEmployee","listReportEmployee","SET_DIVISION_LIST_DATA","SET_SELECTED_DIVISION_ID","SET_SELECTED_DIVISION_DATA","SET_PAGING_DIVISION","setDivisionListData","setPagingDivision","setSelectedDivisionId","setSelectedDivisionData","doDeleteDivisionProcess","getDivisionListDataRequested","doAddDivisionProcess","headDivision","doEditDivisionProcess","mapDetailDivisionToForm","selectedDivisionData","employee_name","saveDivisionRequested","deleteDivisionRequested","listDivision","selectedDivisionId","SET_DIVISION_UNIT_LIST_DATA","SET_SELECTED_DIVISION_UNIT_ID","SET_SELECTED_DIVISION_UNIT_DATA","SET_PAGING_DIVISION_UNIT","setDivisionUnitListData","setPagingDivisionUnit","setSelectedDivisonUnitId","setSelectedDivisionUnitData","getDivisionUnitListRequested","doAddDivisionUnitProcess","divisionUnit","splitUnitId","division_id","doEditDivisionUnitProcess","saveDivisionUnitRequested","listDivisionUnit","selectedDivisionUnitId","selectedDivisionUnitData","SET_DASHBOARD_DATA","dashboardData","SET_UNIT_SERIAL_NUMBER_DATA","SET_SELECTED_UNIT_SERIAL_NUMBER_ID","SET_SELECTED_UNIT_SERIAL_NUMBER_DATA","setUnitSerialNumberData","setSelectedUnitSerialNumberId","setSelectedUnitSerialNumberData","doAddUnitSerialNumberProcess","doEditUnitSerialNumberProcess","unitSerialNumber","selectedUnitSerialNumberId","serialNumberId","saveUnitSerialNumberRequested","mapDetailUnitSerialNumberToForm","selectedUnitSerialNumberData","customer_name","listUnitSerialNumber","SET_UNIT_JOB_FORMS_LIST_DATA","SET_PAGING_UNIT_JOB_FORMS","setUnitJobFormsListData","getUnitJobFormsListDataRequested","listUnitJobForms","SET_WORKING_HOURS_LIST_DATA","setWorkingHoursListData","getWorkingHoursListDataRequested","workingHours","newListWorkingHours","created","done","done_date","listWorkingHours","rootReducer","rootReducers","combineReducers","router","connectRouter","auth","state","newState","Object","assign","externalService","unitJobForms","component","dashboard","form","formReducer","toastrReducer","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","createStore","applyMiddleware","routerMiddleware","persistor","persistStore","run","Saga","Component","props","Overlay","styled","div","CGlobalOverlay","loading","height","width","radius","margin","Sidebar","mainMenu","masterDataMenu","reportMenu","serviceRepairMenu","reportDataMenu","href","icon","Footer","Date","getFullYear","Navbar","onLogout","placeholder","src","alt","onClick","TemplateComponent","children","isGlobalLoading","isLandingPage","logout","Fragment","className","selectorAuth","selectorComponent","mapStateToProps","createStructuredSelector","createSelector","withConnect","connect","authActions","React","useState","setRole","useEffect","menus","getIconName","withTemplate","Template","WrappedComponent","hoistNonReactStatics","CButtonAntd","isLoading","disabled","shape","size","danger","backgroundColor","style","borderColor","block","DashboardComponent","totalCustomer","totalInternalService","totalExternalService","totalIdentification","bordered","columns","dataSource","pagination","pageSizeOptions","showSizeChanger","initializeApp","AdminActions","RoleActions","BranchActions","UnitsActions","MachineConfigurationActions","ListServiceActions","handlePressDelete","jobServiceId","no","keys","toLocaleString","dataIndex","sorter","b","render","items","isExternal","borderRadius","textAlign","unit_model_name","align","text","record","EditOutlined","CInput","typeComponent","htmlFor","whiteSpace","linebreak","maxLength","rows","onChange","onKeyDown","input","meta","touched","fontSize","labelSize","LoginComponent","handleSubmit","submitForm","onSubmit","Field","validateFormRoles","errors","validateFormUnitModel","validateFormTransaction","EnhanceContainer","valid","AuthActions","reduxForm","validate","FormItem","Form","Item","Option","Select","ASelect","hasFeedback","rest","hasError","invalid","validateStatus","help","CSelect","showSearch","onBlur","e","preventDefault","RenderDatePicker","defaultValue","CDatePicker","CButton","InternalServiceComponent","listEmployee","enumType","handleAutoPopulateEmployee","handleAutoPopulateCustomer","InfoCircleTwoTone","FieldArray","fields","PlusOutlined","itemEmployee","DeleteOutlined","remove","getCityByIdFromReducer","arrVal","InternalServiceActions","ComponentAction","CustomerActions","EmployeeActions","SelectCustomerData","SelectEmployeeData","initialValues","ExternalServiceComponent","listUnit","enumJobForms","handleAutoPopulateUnitModel","externalValues","onChangeUnitModel","handleChangeType","isTroubleShoot","itemUnit","indexUnit","val","selector","formValueSelector","formValues","getFormValues","ExternalServiceActions","enumModel","enumUnit","selectedUnitModel","unitQty","setUnitQty","unitData","setUnitData","setIsTroubleShoot","SelectUnit","SelectJobFormsData","JobFormsActions","totalUnit","handleAddNewUnit","handleSubtractUnit","MonitoringEmployeeComponent","onChangePagination","onSearch","enumBranch","enumTypeReport","handlePressGeneratePdf","orientation","SearchOutlined","FilePdfOutlined","monitoringEmployeeFormValues","getListMonitoringEmployee","MonitoringEmployeeActions","handlePressAddNew","printedData","jd_date","employee_nik","jobType","job_type","models","SelectBranch","nextPage","pageSize","monitoringEmployeeList","job_status","createdDate","doc","jsPDF","setFontSize","setFont","autoTable","startY","body","theme","head","content","rowSpan","halign","colSpan","styles","fillColor","headStyles","valign","overflow","columnWidth","header","dataKey","willDrawCell","dataCell","didParseCell","s","cell","lineColor","lineWidth","font","columnStyles","tableLineColor","tableLineWidth","save","exportMonitoringEmployeePdf","ReportServiceRepairComponent","scroll","serviceRepairFormValues","getListServiceRepair","ReportServiceRepairActions","BookOutlined","fixed","ReportEmployeeComponent","reportEmployeeFormValues","ReportEmployeeActions","technition","Search","Input","ListServiceComponent","enumStatus","total","current","enterButton","listServiceFormValues","user","getListEmployeesDropdown","setisBlocked","renderActionTable","isBlockedRole","isBlockedRoleListService","checkBlockedRole","ListServicesComponent","CTableAntd","renderActions","searchText","searchedColumn","searchInput","useRef","sortDirections","filterIcon","filtered","onFilter","includes","onFilterDropdownVisibleChange","visible","select","highlightStyle","padding","searchWords","autoEscape","textToHighlight","CModal","footer","destroyOnClose","onCancel","RenderFooter","handleSaveForm","RenderContent","formName","AdminModalComponent","handleCancel","enumMenu","AdminComponent","NotFound","AuthMiddleware","ComposedComponent","menuPath","isSecureRoute","isAuthenticated","userRole","userMenus","redirect","redirectToServices","CBadgeText","enumEmployee","AddEmployeeModalComponent","SelectEmployee","DetailServiceTransactionAction","Themes","RejectedModalComponent","DetailServiceTransactionActions","reson","handleClose","CloseOutlined","CheckOutlined","SelectRole","defaultValuesMenu","onChangeRoleMenu","Group","span","typeComponents","EditModalTransactionComponent","menuChecked","handleClearModalContent","SelectMenu","EditModalDailiesComponent","beforeUpload","handleChange","defaultImage","uploadButton","marginLeft","marginTop","alignSelf","listType","showUploadList","resizeMode","heigh","alignItems","justifyContent","opacity","InsertImageModalComponent","handleUploadPhoto","setLoading","setImageUrl","LoadingOutlined","file","isJpgOrPng","isLt2M","info","originFileObj","handleKeyDown","EditModalSummaryComponent","Text","Typography","TabPane","Tabs","DetailServiceTransactionComponent","TabPanel","onChangeTab","goBack","handlePressActions","RenderButtonAction","button","CheckCircleOutlined","CloseCircleOutlined","ArrowLeftOutlined","model","strong","customer_pic_name","defaultActiveKey","tab","EditModalTransactionContainer","Meta","Card","RenderDescription","handlePressNonactive","handlePressActive","TabPanelEmployeeComponent","cover","RenderItemSummary","indexText","TabPanelSummaryComponent","summaryArr","isLoaded","FileOutlined","gutter","fontWeight","textTransform","plain","setSummaryArr","setIsBlockedRole","isBlock","summaryMapping","summaryText","splitSummary","RenderImage","medias","marginRight","hoverable","TabPanelImagesComponent","handlePressAdd","CameraOutlined","PlusCircleOutlined","image","RenderDailies","dailies","karyawan","jam","hours","TabPanelDailiesComponent","handlePressCancel","RenderHistories","histories","user_name","TabPanelHistoriesComponent","TabPanelHistoriesContainer","rejections","TabPanelRejectionsComponent","TabPanelRejectionsContainer","alignContent","TabPanelChecklistComponent","checklistArr","checklist","itemChecklist","indexChecklist","borderBottom","itemFields","indexFields","field_name","checked","is_check","TabPanelChecklistContainer","setchecklistArr","DetailServiceActions","setMediaList","setSummaryList","setChecklist","isLoadedChecklist","setIsLoadedChecklist","isCompleteLoadedMedia","setIsCompleteLoadedMedia","isCompleteLoadedSummary","setIsCompleteLoadedSummary","FileImageOutlined","FileTextOutlined","UsergroupAddOutlined","CloseSquareOutlined","HistoryOutlined","fromIndex","indexOf","element","splice","callInitialize","EmployeesActions","groupingUnitMedia","groupingUnitSummary","groupingUnitChecklist","groupingMediaList","dataMedia","imageList","isCompleted","groupingChecklist","dataChecklist","activeTab","RolesEditModalComponent","RolesActions","setMenuSelected","RolesComponent","getListRoles","EmployeeListComponent","enumRoles","enumDivision","employeeFormValues","employeesFormValues","getListEmployees","ToolsActions","handlePressEmployeeTools","SelectRoles","getRolesEnum","SelectDivision","EmployeesListComponent","SettingOutlined","defaultValues","onChangeRoleEmployee","EmployeeEditComponent","enumRole","enumProvince","enumCity","onChangeProvince","onBackAction","getDetailEmployee","handleClearSelectedEmployeeRole","listCityState","setListCityState","setRoleSelected","setDefaultImage","SelectEmployeeRole","provinceMapping","detailEmployee","BranchModalComponent","BranchComponent","JobFormsModalComponent","JobFormsComponent","getListJobForms","ContentStepOneComponent","provinces","cities","enumInstanceType","enumStatusMilling","ContentUnitComponent","ContentSparePartComponent","onChangeServiced","isServiced","RenderSparePartSelling","RenderSparePartNeeded","_props","StepsContent","StepsAction","Step","Steps","FormWizardIdentificationComponent","steps","saveFormChanges","setCurrent","ContentMachineConfigurationComponent","machineConf","onAddMachineConf","RenderBodyHusker","ContentStepOneRegularComponent","identificationFormValues","setCities","serviced","setServiced","IdentificationActions","listCustomer","listLocation","listMilling","IdentificationModalComponent","enumCustomers","enumLocation","enumMilling","SelectCustomer","CustomersActions","ListIdentificationComponent","getListIdentification","created_at","MachineConfigurationModalComponent","MachineConfigurationComponent","getListMachine","MachineActions","UnitsModalComponent","UnitsComponent","placement","getListUnit","handlePressUnitModel","handlePressUnitFields","handlePressLink","tooltipText","BoxPlotOutlined","FileAddOutlined","CustomerModalComponent","CustomerComponent","customerBranchValue","getListCustomer","getListProvince","ToolsModalComponent","ToolsComponent","FormCategoryModalComponent","FormCategoryActions","FormCategoryComponent","getListFormCategory","UnitsModelsModalComponent","UnitModelActions","UnitModelsComponent","getListUnitModels","handlePressSerialNumber","FieldNumberOutlined","enumFormCategory","enumJobForm","UnitFieldsModalComponent","UnitFieldsActions","setFormCategory","setJobForm","loadOption","dataJobForm","listJobForm","SelectFormCategory","SelectJobForm","UnitFieldsComponent","unitFieldsId","setReportIdentificationListData","setPagingReportIdentification","ReportIdentificationComponent","enumHeadDivision","DivisionModalComponent","DivisionActions","SelectEmployees","DivisionComponent","getListDivision","getListEmlpoyee","handlePressDivisionUnit","enumTools","EmployeeToolsModalComponent","EmployeeToolsActions","SelectTools","EmployeeToolsComponent","generateEmployeeToolsReport","newListData","check","drawCell","docCell","section","column","setLineWidth","setFillColor","circle","y","addPage","employeeToolsFormValues","enumUnits","DivisionUnitModalComponent","DivisionUnitActions","SelectUnits","DivisionUnitComponent","getListDivisionUnit","divisionUnitId","StyleSheet","flexDirection","flexGrow","DetailServiceReportComponent","flex","DetailServiceReportContainer","enumCustomer","ModalUnitSerialNumberComponent","UnitSerialNumberActions","UnitSerialNumberComponent","onChangeCustomer","ModalUnitSerialNumberContainer","unitSerialNumberFormValues","selectedtUnitSerialNumber","UnitJobFormsComponent","UnitJobFormsActions","WorkingHoursComponent","workingHoursFormValues","getListWorkingHours","WorkingHoursActions","no_service","total_hours","workingHoursList","employeeNik","employeeName","noService","totalHours","doneDate","exportWorkingHoursReportPdf","Navigation","authenticatedPage","footerImg","TemplateContainer","templating","Login","LoginContainer","NotFoundPage","Admin","AdminContainer","Roles","RolesContainer","JobForms","JobFormsContainer","Branches","BranchContainer","EmployeeList","EmployeesListContainer","EmployeeTools","EmployeeToolsContainer","Division","DivisionContainer","DivisionUnit","DivisionUnitContainer","EditEmployee","EmployeeEditContainer","Dashboard","DashboardContainer","Units","UnitsContainer","UnitModels","UnitModelsContainer","UnitFields","UnitFieldsContainer","UnitJobForms","UnitJobFormsContainer","UnitSerialNumber","UnitSerialNumberContainer","Tools","ToolsContainer","Customers","CustomerContainer","FormCategory","FormCategoryContainer","MachineConfiguration","MachineConfigurationContainer","InternalService","InternalServiceContainer","ExternalService","ExternalServiceContainer","MonitoringEmployee","MonitoringEmployeeContainer","ReportServiceRepair","ReportServiceRepairContainer","ReportEmployee","ReportEmployeeContainer","WorkingHours","WorkingHoursContainer","ListServices","ListServicesContainer","ReportIdentification","ReportIdentificationContainer","DetailService","DetailServiceTransactionContainer","FormWizardIdentification","FormWizardIdentificationContainer","ListIdentification","ListIdentificationContainer","Helmet","titleTemplate","defaultTitle","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","closeOnToastrClick","exact","App","context","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8fc5a122.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL || \"\",\n});\nexport default history;\n","// import * as ActionAuth from \"../../Auth/Store/AuthAction\";\n// import * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\n\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { toastr } from \"react-redux-toastr\";\n\n// function* getToken() {\n//   return yield select(AuthSelector.Token());\n// }\n\n// export function* getCommonConfigHeader() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n// }\n// export function* getCommonConfigHeaderFormData() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"multipart/form-data\",\n//     },\n//   };\n// }\n\nexport function* handleErrorProcess(action) {\n  let toastMessage;\n\n  if (!action.errorData.response || action.errorData.response === undefined) {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        window.location.reload();\n      },\n      okText: \"Ya\",\n      disableCancel: true,\n    };\n\n    toastr.confirm(\n      \"Koneksi terputus, cek koneksi anda dan dimuat ulang\",\n      toastrConfirmOptions\n    );\n  }\n\n  if (action.errorData.response) {\n    const error = action.errorData;\n    const responseStatus = error?.response.status;\n    if (responseStatus === 401) {\n      // yield put(ActionAuth.renewToken(action));\n      console.log(\"=== Token Expired!\");\n    } else if (responseStatus === 500) {\n      if (error.response.data.ErrorCode === \"4201\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      }\n      if (error.response.data.ErrorCode === \"5100\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      } else {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error.response.data.MessageKey} />\n          </span>\n        );\n      }\n    } else if (responseStatus === 403) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={\"forbiddenError\"} />\n        </span>\n      );\n    } else {\n      try {\n        const dataErr = error.response.data?.Data?.Failures[0]?.ErrorKey;\n        if (dataErr) {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id={dataErr} />\n            </span>\n          );\n        } else {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id=\"unknownError\" />\n            </span>\n          );\n        }\n      } catch (error) {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error} />\n          </span>\n        );\n      }\n    }\n  } else {\n    if (action.errorData.response.data.Message) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={action.errorData.response.data.Message} />\n        </span>\n      );\n    }\n  }\n  if (toastMessage) {\n    toast.error(toastMessage);\n  }\n}\n\nexport function* handleErrorAction() {\n  yield takeEvery(\"HANDLE_ERROR_SAGA\", handleErrorProcess);\n}\n","import { all, fork } from \"redux-saga/effects\";\n// import {\n//   getUserDetailAction,\n//   loginUserAction,\n//   registerUserAction,\n//   updateUserAction,\n// } from \"../../Auth/Saga/AuthSaga\";\nimport { handleErrorAction } from \"../../app/Saga/AppSaga\";\n\nexport default function* () {\n  yield all([\n    fork(handleErrorAction),\n    // fork(registerUserAction),\n    // fork(getUserDetailAction),\n    // fork(loginUserAction),\n    // fork(updateUserAction),\n  ]);\n}\n","// First we need to import axios.js\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\n\n// Next we make an 'instance' of it\nconst ConfigAxios = axios.create({\n  // .. where we make our configurations\n  baseURL: \"http://103.158.192.161:3000\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Authorization\",\n  },\n  timeout: 15000,\n});\nConfigAxios.defaults.headers.delete = {\n  \"Content-Type\": \"application/json\",\n};\n\n// Where you would set stuff like your 'Authorization' header, etc ...\n// ConfigAxios.defaults.headers.common[\"Authorization\"] =\n//   \"AUTH TOKEN FROM INSTANCE\";\n\n// Also add/ configure interceptors && all the other cool stuff\nConfigAxios.interceptors.request.use(\n  (requestFulfilled) => {\n    if (requestFulfilled.method === \"get\") {\n      requestFulfilled.data = true;\n    }\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(requestFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-request-fulfilled\",\n        JSON.parse(JSON.stringify(requestFulfilled))\n      );\n    }\n    return Promise.resolve(requestFulfilled);\n  },\n  (requestRejected) => {\n    if (!_.isEmpty(requestRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-request-rejected\",\n          JSON.parse(\n            JSON.stringify(requestRejected.response || requestRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(requestRejected);\n  }\n);\n\nConfigAxios.interceptors.response.use(\n  (responseFulfilled) => {\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(responseFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-response-fulfilled\",\n        JSON.parse(JSON.stringify(responseFulfilled))\n      );\n    }\n    return Promise.resolve(responseFulfilled);\n  },\n  (responseRejected) => {\n    if (responseRejected.response && responseRejected.response.data) {\n      if (responseRejected.response.data.status === 400) {\n        toast.warning(responseRejected.response.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      } else {\n        toast.error(\"Request Timeout!\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n    if (!_.isEmpty(responseRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-response-rejected\",\n          JSON.parse(\n            JSON.stringify(responseRejected.response || responseRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(responseRejected);\n  }\n);\n\nexport default ConfigAxios;\n","import ConfigAxios from \"./ConfigAxios\";\n\nconst Invoke = {};\nconst headersConfigDelete = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  data: {},\n};\n\nInvoke.submitLogin = (data) => {\n  return ConfigAxios.post(\"/login\", data);\n};\n\nInvoke.submitLoginEmployee = (data) => {\n  return ConfigAxios.post(\"/m_auth\", data);\n};\n\nInvoke.getListServices = (page, limit, keyword, type, status, employeeId) => {\n  return ConfigAxios.get(\n    `/services?page=${page}&limit=${limit}&q=${keyword}&type=${type}&status=${status}&employeeId=${employeeId}`\n  );\n};\n\nInvoke.deleteJobServiceById = (jobId) => {\n  return ConfigAxios.delete(`/services/${jobId}`, headersConfigDelete);\n};\n\nInvoke.getOneServices = (jobId) => {\n  return ConfigAxios.get(`/services/${jobId}`);\n};\n\n// === Admin API : ===\nInvoke.getListAdmin = (page, limit, keyword = \"\") => {\n  return ConfigAxios.get(`/admins?page=${page}&limit=${limit}&q=${keyword}`);\n};\n\nInvoke.getAdminById = (adminId) => {\n  return ConfigAxios.get(`/admins/${adminId}`);\n};\n\nInvoke.addAdmin = (data) => {\n  return ConfigAxios.post(\"/admins\", data);\n};\n\nInvoke.updateAdmin = (data) => {\n  return ConfigAxios.put(\"/admins\", data);\n};\n\nInvoke.deleteAdminById = (adminId) => {\n  return ConfigAxios.delete(`/admins/${adminId}`, headersConfigDelete);\n};\n// === End Admin API ===\n\n// === Admin - Roles API : ===\nInvoke.getListAdminRoles = (adminId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${adminId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getAdminRolesById = (customerId) => {\n  return ConfigAxios.get(`/admins/roles${customerId}`);\n};\n\nInvoke.addAdminRoles = (data) => {\n  return ConfigAxios.post(\"/admins/roles\", data);\n};\n\nInvoke.updateAdminRoles = (data) => {\n  return ConfigAxios.put(\"/admins/roles\", data);\n};\n\nInvoke.deleteAdminRolesById = (customerId) => {\n  return ConfigAxios.delete(`/admins/roles${customerId}`);\n};\n// === End Admin - Roles API ===\n\n// === Employee - Roles API : ===\nInvoke.getEmployeeRoles = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\n// === Employee - Tools API : ===\nInvoke.getEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/tools/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.addEmployeeRole = (data) => {\n  return ConfigAxios.post(`/employees/roles`, data);\n};\n\nInvoke.deleteEmployeeRole = (id) => {\n  return ConfigAxios.delete(`/employees/roles/${id}`, headersConfigDelete);\n};\n// === End Employee - Roles API ===\n\n// === Customers API ===\nInvoke.getCustomerList = (page, limit, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/customers?page=${page}&limit=${limit}&q=${keyword}&branchId=${branchId}`\n  );\n};\nInvoke.getCustomerById = (customerId) => {\n  return ConfigAxios.get(`/customers/${customerId}`);\n};\n\nInvoke.addCustomer = (data) => {\n  return ConfigAxios.post(\"/customers\", data);\n};\n\nInvoke.updateCustomer = (data) => {\n  return ConfigAxios.put(\"/customers\", data);\n};\n\nInvoke.deleteCustomerById = (customerId) => {\n  return ConfigAxios.delete(`/customers/${customerId}`, headersConfigDelete);\n};\n// === End Customers API ===\n\n// === Employee API === :\nInvoke.getEmployeeList = (\n  page,\n  limit,\n  keyword,\n  roleId,\n  branchId,\n  divisionId\n) => {\n  return ConfigAxios.get(\n    `/employees?page=${page}&limit=${limit}&q=${keyword}&role_id=${roleId}&branch_id=${branchId}&division_id=${divisionId}`\n  );\n};\n\nInvoke.getEmployeeById = (employeeId) => {\n  return ConfigAxios.get(`/employees/${employeeId}`);\n};\n\nInvoke.addEmployee = (data) => {\n  return ConfigAxios.post(\"/employees\", data);\n};\n\nInvoke.updateEmployee = (data) => {\n  return ConfigAxios.put(\"/employees\", data);\n};\n\nInvoke.deleteEmployeeById = (employeeId) => {\n  return ConfigAxios.delete(`/employees/${employeeId}`, headersConfigDelete);\n};\n// === End employee API ===\n\n// === Employee - Tools API : ===\nInvoke.getListEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getEmployeeToolsById = (employeeId) => {\n  return ConfigAxios.get(`/employees/tools${employeeId}`);\n};\n\nInvoke.addEmployeeTools = (data) => {\n  return ConfigAxios.post(\"/employees/tools\", data);\n};\n\nInvoke.updateEmployeeTools = (data) => {\n  return ConfigAxios.put(\"/employees/tools\", data);\n};\n\nInvoke.deleteEmployeeToolsById = (employeeToolsId) => {\n  return ConfigAxios.delete(\n    `/employees/tools/${employeeToolsId}`,\n    headersConfigDelete\n  );\n};\n// === End Employee - Tools API ===\n\n// === Roles API ===\nInvoke.getListRole = (page, limit) => {\n  return ConfigAxios.get(`/roles?page=${page}&limit=${limit}`);\n};\nInvoke.getRoleById = (customerId) => {\n  return ConfigAxios.get(`/roles/${customerId}`);\n};\n\nInvoke.addRole = (data) => {\n  return ConfigAxios.post(\"/roles\", data);\n};\n\nInvoke.updateRole = (data) => {\n  return ConfigAxios.put(\"/roles\", data);\n};\n\nInvoke.deleteRoleById = (roleId) => {\n  return ConfigAxios.delete(`/roles/${roleId}`, headersConfigDelete);\n};\n// === End Roles API ===\n\n// === Master Province API === :\nInvoke.getProvinceList = (page, limit) => {\n  return ConfigAxios.get(`/provinces?page=${page}&limit=${limit}`);\n};\n// === End Master Province API ===\n\n// === Master Cities API === :\nInvoke.getCityList = (page, limit, provinceId) => {\n  return ConfigAxios.get(\n    `/provinces/cities/${provinceId}?page=${page}&limit=${limit}`\n  );\n};\n// === End Master Cities API ===\n\n// === Dashboard API ===\nInvoke.getDashboardProgressData = (data) => {\n  return ConfigAxios.get(\"/dashboards\", data);\n};\n// === End Dashboard API ===\n\n// === Services API ===\nInvoke.addInternalService = (data) => {\n  return ConfigAxios.post(\"/services\", data);\n};\nInvoke.updateJobService = (data) => {\n  return ConfigAxios.put(\"/services\", data);\n};\nInvoke.setFinishedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/finish/${jobId}`);\n};\nInvoke.setApprovedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/approve/${jobId}`);\n};\nInvoke.setRejectedService = (jobId, payload) => {\n  return ConfigAxios.post(\n    `/m_services/reject/${jobId}?allowReject=true`,\n    payload\n  );\n};\n// === End Service API ===\n\n// Services - Employee API\nInvoke.getServicesEmployee = (jobId, page, limit) => {\n  return ConfigAxios.get(\n    `/services/employees/${jobId}?page=${page}&limit=${limit}`\n  );\n};\nInvoke.addNewEmployeeService = (jobId, payload) => {\n  return ConfigAxios.post(`/services/employees/${jobId}`, payload);\n};\nInvoke.setStatusEmployeeService = (jobId, payload) => {\n  return ConfigAxios.put(\n    `/services/employees/${jobId}`,\n    payload,\n    headersConfigDelete\n  );\n};\n// End Services - Employee API\n\n// === Service - Views API ===\nInvoke.getJobServiceSummary = (jobId, unitId) => {\n  return ConfigAxios.get(`/m_services/summary/${jobId}/${unitId}`);\n};\nInvoke.getJobServiceMedia = (jobId, unitId) => {\n  return ConfigAxios.get(\n    `/services/medias/${jobId}${unitId ? \"/\" + unitId : \"\"}`\n  );\n};\nInvoke.getJobServiceDailies = (jobId, unitId) => {\n  return ConfigAxios.get(`/services/dailies/${jobId}/${unitId}`);\n};\nInvoke.updateJobServiceDailies = (payload) => {\n  return ConfigAxios.put(`/services/dailies`, payload);\n};\nInvoke.getChecklistData = (unitModelId) => {\n  return ConfigAxios.get(`/m_services/checklist/${unitModelId}`);\n};\nInvoke.getRejectedData = (jobId) => {\n  return ConfigAxios.get(`/m_services/reject/${jobId}`);\n};\nInvoke.getJobServiceHistories = (jobId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/services/logs/${jobId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addJobServiceMedia = (payload, jobId, unitId) => {\n  return ConfigAxios.post(`/m_services/media/${jobId}/${unitId}`, payload);\n};\nInvoke.addJobServiceDaily = (payload, jobId) => {\n  return ConfigAxios.post(`/m_services/daily/${jobId}`, payload);\n};\nInvoke.updateSummary = (payload, jobId, unitId) => {\n  return ConfigAxios.put(`/m_services/summary/${jobId}/${unitId}`, payload);\n};\n\n// === End Service Views ===\n\n// === Master Unit API === :\nInvoke.getUnitList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/units?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addUnit = (payload) => {\n  return ConfigAxios.post(`/units`, payload);\n};\nInvoke.updateUnit = (payload) => {\n  return ConfigAxios.put(`/units`, payload);\n};\nInvoke.deleteUnitById = (unitId) => {\n  return ConfigAxios.delete(`units/${unitId}`, headersConfigDelete);\n};\n// === End Master Unit API ===\n\n// === Master unit-model API === :\nInvoke.getListUnitModel = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/models/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addUnitSerialNumber = (payload, unitModelId) => {\n  return ConfigAxios.post(`/units/serial/${unitModelId}`, payload);\n};\nInvoke.updateUnitSerialNumber = (payload, unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.put(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    payload\n  );\n};\nInvoke.deleteUnitSerialNumber = (unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.delete(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    headersConfigDelete\n  );\n};\nInvoke.getUnitSerialNumber = (\n  page,\n  limit,\n  keyword,\n  unitModelId,\n  customerId\n) => {\n  return ConfigAxios.get(\n    `/units/serial/${unitModelId}?page=${page}&limit=${limit}&q=${keyword}&customerId=${customerId}`\n  );\n};\nInvoke.addUnitModel = (payload) => {\n  return ConfigAxios.post(`/units/models`, payload);\n};\nInvoke.updateUnitModel = (payload) => {\n  return ConfigAxios.put(`/units/models`, payload);\n};\nInvoke.deleteUnitModelById = (unitModelId) => {\n  return ConfigAxios.delete(`units/models/${unitModelId}`, headersConfigDelete);\n};\n// === End Master Unit-Model API ===\n\n// === Master unit-fields API === :\nInvoke.getListUnitFields = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/fields/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.getListUnitJobForms = (unitId, jobFormId) => {\n  return ConfigAxios.get(`/units/job_forms/${unitId}?job_form_id=${jobFormId}`);\n};\nInvoke.addUnitFields = (payload) => {\n  return ConfigAxios.post(`/units/fields`, payload);\n};\nInvoke.updateUnitFields = (payload) => {\n  return ConfigAxios.put(`/units/fields`, payload);\n};\nInvoke.deleteUnitFieldsById = (unitfieldsId) => {\n  return ConfigAxios.delete(\n    `units/fields/${unitfieldsId}`,\n    headersConfigDelete\n  );\n};\n// === End Master Unit-Model API ===\n\n// === Master Job-Form API === :\nInvoke.getListJobForm = (page, limit, keyowrd) => {\n  return ConfigAxios.get(`job_forms?page=${page}&limit=${limit}&q=${keyowrd}`);\n};\nInvoke.addJobForms = (payload) => {\n  return ConfigAxios.post(`job_forms`, payload);\n};\nInvoke.updateJobForms = (payload) => {\n  return ConfigAxios.put(`job_forms`, payload);\n};\nInvoke.deleteJobForms = (jobFormsId) => {\n  return ConfigAxios.delete(`job_forms/${jobFormsId}`, headersConfigDelete);\n};\n// === End Job-Form API ===\n\n// === Master Branch API === :\nInvoke.getListBranch = (page, limit, keyword) => {\n  return ConfigAxios.get(`/branches?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.deleteBranchById = (branchId) => {\n  return ConfigAxios.delete(`/branches/${branchId}`, headersConfigDelete);\n};\nInvoke.addBranch = (payload) => {\n  return ConfigAxios.post(`/branches`, payload);\n};\nInvoke.updateBranch = (payload) => {\n  return ConfigAxios.put(`/branches`, payload);\n};\n// === End Branch API ===\n\n// === Master Menu API === :\nInvoke.getListMenu = (page, limit) => {\n  return ConfigAxios.get(`/menus?page=${page}&limit=${limit}`);\n};\n// === End Menu API ===\n\n// === Master Menu - Roles API === :\nInvoke.addMenuRole = (payload) => {\n  return ConfigAxios.post(`/menus/roles`, payload);\n};\n\nInvoke.getMenuByRoleId = (roleId) => {\n  return ConfigAxios.get(`/menus/menu_by_role/${roleId}`);\n};\n\nInvoke.deleteMenuByMenuRoleId = (menuRoleId) => {\n  return ConfigAxios.delete(`menus/roles/${menuRoleId}`, headersConfigDelete);\n};\n// === End Menu - Roles API ===\n\n// === Master Engines API === :\nInvoke.getListEngine = (page, limit, keyword) => {\n  return ConfigAxios.get(`/engines?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addEngine = (payload) => {\n  return ConfigAxios.post(`/engines`, payload);\n};\nInvoke.updateEngine = (payload) => {\n  return ConfigAxios.put(`/engines`, payload);\n};\nInvoke.deleteEngine = (machineId) => {\n  return ConfigAxios.delete(`/engines/${machineId}`, headersConfigDelete);\n};\n// === End Engines API ===\n\n// === Master Tools API === :\nInvoke.getListTools = (page, limit, keyword) => {\n  return ConfigAxios.get(`/tools?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addTool = (payload) => {\n  return ConfigAxios.post(`/tools`, payload);\n};\nInvoke.updateTool = (payload) => {\n  return ConfigAxios.put(`/tools`, payload);\n};\nInvoke.deleteTool = (toolId) => {\n  return ConfigAxios.delete(`/tools/${toolId}`, headersConfigDelete);\n};\n// === End Tools API ===\n\n// === Master FormCategory API === :\nInvoke.getFormCategory = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/category_forms?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addFormCategory = (payload) => {\n  return ConfigAxios.post(`/category_forms`, payload);\n};\nInvoke.updateFormCategory = (payload) => {\n  return ConfigAxios.put(`/category_forms`, payload);\n};\nInvoke.deleteFormCategory = (categoryFormId) => {\n  return ConfigAxios.delete(\n    `/category_forms/${categoryFormId}`,\n    headersConfigDelete\n  );\n};\n// === End FormCategory API ===\n\n// === Master Identification API === :\nInvoke.getIdentificationList = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/identifications?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\nInvoke.addIdentification = (payload) => {\n  return ConfigAxios.post(`/identifications`, payload);\n};\n\nInvoke.updateIdentificationMilling = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/milling\", payload);\n};\n\nInvoke.updateIdentificationRegular = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/regular\", payload);\n};\n\nInvoke.deleteIdentificationById = (identificationId) => {\n  return ConfigAxios.delete(\n    `/identifications/${identificationId}`,\n    headersConfigDelete\n  );\n};\n\n// === Master Dvision API === :\nInvoke.getDivisionList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/divisions?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addDivision = (payload) => {\n  return ConfigAxios.post(`/divisions`, payload);\n};\nInvoke.updateDivision = (payload) => {\n  return ConfigAxios.put(`/divisions`, payload);\n};\nInvoke.deleteDivision = (divisionId) => {\n  return ConfigAxios.delete(`/divisions/${divisionId}`, headersConfigDelete);\n};\n\n// === Master Dvision - Unit API === :\nInvoke.getDivisionUnitList = (divisionId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/units/divisions/${divisionId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addDivisionUnit = (payload) => {\n  return ConfigAxios.post(`/units/divisions`, payload);\n};\n\n// Monitoring Employee\nInvoke.getReportMonitoringEmployee = (\n  page,\n  limit,\n  from,\n  until,\n  type = \"all\",\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/monitoring?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&type=${type}&q=${keyword}`\n  );\n};\n\n// Report Service Repair\nInvoke.getReportServiceRepair = (\n  page,\n  limit,\n  from,\n  until,\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/report_services?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Report Employee\nInvoke.getReportEmployee = (page, limit, from, until, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/report/report_employee?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Working Hours\nInvoke.getWorkingHours = (page, limit, from, until, keyword) => {\n  return ConfigAxios.get(\n    `/services/monitor/hour?startDate=${from}&endDate=${until}&page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\n// Download pdf from server\nInvoke.getTransactionPdfUrl = (jobId) => {\n  return ConfigAxios.get(`/services/print_job/${jobId}`);\n};\n// Download pdf to BLOB\nInvoke.downloadPdfFromUrl = (url) => {\n  return ConfigAxios.get(url, { responseType: \"blob\" });\n};\n\nexport default Invoke;\n","import { store } from \"../../../app/ConfigureStore\";\n\nexport const PROCESS_GLOBAL_LOADING = \"PROCESS_GLOBAL_LOADING\";\nexport const PROCESS_FORM_GLOBAL_LOADING = \"PROCESS_FORM_GLOBAL_LOADING\";\nexport const SHOW_GLOBAL_MODAL = \"SHOW_GLOBAL_MODAL\";\nexport const RESET_ALL_LOADING = \"RESET_ALL_LOADING\";\n\nexport const setGlobalLoading = (payload) => {\n  return {\n    type: PROCESS_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const setGlobalModal = (payload) => {\n  return {\n    type: SHOW_GLOBAL_MODAL,\n    payload,\n  };\n};\n\nexport const setGlobalFormLoading = (payload) => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const resetAllProcessLoading = () => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n  };\n};\n\nexport const resetAllGlobalLoadingProcess = () => {\n  const { dispatch } = store;\n  dispatch(resetAllProcessLoading());\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport history from \"../../../app/History\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\n\nexport const SET_ACCESS_TOKEN_DATA = \"SET_ACCESS_TOKEN_DATA\";\nexport const SET_USER_DETAIL_DATA = \"SET_USER_DETAIL_DATA\";\nexport const SET_ERROR_LOGIN = \"SET_ERROR_LOGIN\";\n\nexport const setAccessToken = (payload) => {\n  return {\n    type: SET_ACCESS_TOKEN_DATA,\n    payload,\n  };\n};\nexport const setUserDetail = (payload) => {\n  return {\n    type: SET_USER_DETAIL_DATA,\n    payload,\n  };\n};\nexport const setErrorLogin = (payload) => {\n  return {\n    type: SET_ERROR_LOGIN,\n    payload,\n  };\n};\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\",\n  };\n};\n\nexport const doLogout = (dispatch) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      dispatch(logout());\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah Anda Yakin Ingin Keluar?\", toastrConfirmOptions);\n};\n\nconst appendItem = async (data) =>\n  new Promise((resolve, reject) => {\n    store.dispatch(setAccessToken(data.data.callback.accessToken));\n    delete data.data.callback.accessToken;\n    store.dispatch(setUserDetail(data.data.callback));\n    resolve();\n  });\n\nexport const handleSubmitLogin = async (values) => {\n  const { username, password } = values;\n  const payload = { username, password };\n\n  store.dispatch(setGlobalLoading(true));\n\n  Invoke.submitLogin(payload)\n    .then((data) => {\n      appendItem(data).then(() => {\n        setTimeout(() => {\n          history.push(\"/dashboard\");\n          window.location.reload();\n          store.dispatch(setGlobalLoading(false));\n        }, 5000);\n      });\n    })\n    .catch((onRejected) => {\n      store.dispatch(setGlobalLoading(false));\n      if (onRejected) {\n        const status = onRejected?.response?.data?.status;\n        const dataResponseRejected = onRejected?.response?.data ?? null;\n        if (dataResponseRejected) {\n          if (status === 400) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          } else if (status === 401) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          }\n        }\n      }\n    });\n};\n","import {\n  SET_ACCESS_TOKEN_DATA,\n  SET_USER_DETAIL_DATA,\n  SET_ERROR_LOGIN,\n} from \"./AuthAction\";\n\nexport const initialState = {\n  accessToken: \"\",\n  userDetail: null,\n  avatar: null,\n  error: {\n    status: false,\n    message: \"\",\n  },\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ACCESS_TOKEN_DATA:\n      newState.accessToken = action.payload;\n      return { ...newState };\n\n    case SET_USER_DETAIL_DATA:\n      newState.userDetail = action.payload;\n      return { ...newState };\n\n    case SET_ERROR_LOGIN:\n      newState.error = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import history from \"./History\";\n\nexport const navigate = (path) => {\n  history.push(path);\n  window.location.reload();\n};\n\nexport const getIndex = (currentpage, limit) => {\n  const pageNumbers = [];\n  const startIndex = currentpage * limit - limit + 1;\n  const endIndex = startIndex + limit;\n  for (let i = startIndex === 0 ? 1 : startIndex; i <= endIndex; i++) {\n    pageNumbers.push(i);\n  }\n  return pageNumbers;\n};\n\nexport const getBase64 = (img, callback) => {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\n\nexport const SelectLocation = [\n  {\n    id: `location-1`,\n    value: \"L1\",\n    label: \"Cabang\",\n  },\n  {\n    id: `location-2`,\n    value: \"L2\",\n    label: \"Depo PT Rutan\",\n  },\n];\n\nexport const SelectType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Project\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"PB\",\n  },\n  {\n    id: `type-3`,\n    value: \"T3\",\n    label: \"Komersil\",\n  },\n];\n\nexport const SelectInstanceType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"Kelompok Tani\",\n  },\n];\n\nexport const SelectStatus = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Finished\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusServices = [\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Completed\",\n  },\n  {\n    id: `status-2`,\n    value: \"S4\",\n    label: \"Approved\",\n  },\n  {\n    id: `status-3`,\n    value: \"S5\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusMilling = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n  {\n    id: `status-3`,\n    value: \"S4\",\n    label: \"Lain-lain\",\n  },\n];\n\nexport const SelectInstanceTypeRegular = [\n  {\n    id: `status-1`,\n    value: \"T1\",\n    label: \"Kepemilikan Pribadi\",\n  },\n  {\n    id: `status-2`,\n    value: \"T2\",\n    label: \"Perusahaan\",\n  },\n  {\n    id: `status-3`,\n    value: \"T3\",\n    label: \"Kelompok Tani\",\n  },\n  {\n    id: `status-3`,\n    value: \"T4\",\n    label: \"Dinas\",\n  },\n];\n\nexport const SelectStatusIdentification = [\n  {\n    id: `status-identification-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-identification-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-identification-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n];\n\nexport const SelectMilling = [\n  {\n    id: `milling-1`,\n    value: \"true\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `milling-2`,\n    value: \"false\",\n    label: \"non-Penggilingan\",\n  },\n];\n\nexport const enumTypeInternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T4\", label: \"Training\" },\n];\n\nexport const enumTypeExternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Training\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modification\" },\n];\n\nexport const enumWarranty = [\n  { id: `enum-warranty-1`, value: true, label: \"Warranty\" },\n  { id: `enum-warranty-2`, value: false, label: \"No Warranty\" },\n];\n\nexport const warrantyMonths = () => {\n  const warrantyMonths = [];\n  for (let i = 0; i <= 24; i++) {\n    warrantyMonths.push({\n      id: `enum-warranty-moths-${i}`,\n      value: i.toString(),\n      label: `${i} bulan`,\n    });\n  }\n  return warrantyMonths;\n};\n\nexport const getProvinceEnum = (data) => {\n  const SelectProvince = [];\n  data.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectProvince;\n};\n\nexport const getCitiesEnum = (data) => {\n  const SelectCities = [];\n  data.map((item, index) => {\n    SelectCities.push({\n      id: `city-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectCities;\n};\n\nexport const getRolesEnum = (data) => {\n  const SelectRoles = [];\n  data.map((item, index) => {\n    SelectRoles.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectRoles;\n};\n\nexport const enumSelectGenerator = (data, enumName) => {\n  const SelectEnum = [];\n  data.map((item, index) => {\n    SelectEnum.push({\n      id: `${enumName}-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectEnum;\n};\n\nexport const getUnitModelEnum = (data) => {\n  const SelectUnitModel = [];\n  data.map((item, index) => {\n    SelectUnitModel.push({\n      id: `unit-model-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectUnitModel;\n};\n\nexport const getMachineConf = (data) => {\n  const SelectMachines = [];\n  data.map((item, index) => {\n    SelectMachines.push({\n      id: item.id,\n      name: item.name.replace(/ /g, \"_\").toLowerCase(),\n      type: item.name,\n    });\n  });\n  return SelectMachines;\n};\n\nexport const getStatus = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S2\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Completed\", color: \"#87d068\" };\n      break;\n    case \"S4\":\n      statusItem = { value: \"Approved\", color: \"#87d068\" };\n      break;\n    case \"S5\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\nexport const getStatusWorkingHours = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S1\":\n      statusItem = { value: \"Draft\", color: \"#fff566\" };\n      break;\n    case \"S2\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Completed\", color: \"#95de64\" };\n      break;\n    case \"S4\":\n      statusItem = { value: \"Approved\", color: \"#95de64\" };\n      break;\n    case \"S5\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\n// This list not used\nexport const machineConf = [\n  {\n    name: \"dryer\",\n    type: \"dryer\",\n  },\n  {\n    name: \"cleaner\",\n    type: \"cleaner\",\n  },\n  {\n    name: \"head_husker\",\n    type: \"head husker\",\n  },\n  {\n    name: \"body_husker\",\n    type: \"body husker\",\n  },\n  {\n    name: \"separator\",\n    type: \"separator\",\n  },\n  {\n    name: \"destoner\",\n    type: \"destoner\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n\n  {\n    name: \"vertikal_abrasive\",\n    type: \"vertikal abrasive\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n  {\n    name: \"friction_abrasive\",\n    type: \"friction abrasive\",\n  },\n  {\n    name: \"rotary_rice_sifter\",\n    type: \"rotary rice sifter\",\n  },\n  {\n    name: \"non_rotary_rice_sifter\",\n    type: \"non rotary rice sifter\",\n  },\n\n  {\n    name: \"length_grader\",\n    type: \"length grader\",\n  },\n  {\n    name: \"milling_meter\",\n    type: \"milling meter\",\n  },\n  {\n    name: \"scale\",\n    type: \"scale\",\n  },\n];\n\nexport const monitoringType = {\n  all: \"all\",\n  external: \"T1\",\n  internal: \"T2\",\n  loss: \"T3\",\n};\n\nexport const categoryServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n];\n\nexport const categoryMonitoringServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n  {\n    name: \"Loss\",\n    status: \"error\",\n  },\n];\n\nexport const enumTypeMonitoringEmployee = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Pelatihan\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modifikasi\" },\n];\n\nexport const getBase64Image = (url) => {\n  const img = new Image();\n  img.setAttribute(\"crossOrigin\", \"anonymous\");\n  img.onload = () => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    const dataURL = canvas.toDataURL(\"image/png\");\n    console.log(dataURL);\n  };\n  img.src = url;\n};\n\n/**\n * This function calculate the width of a string based on its length\n * @param {String} text\n * @param {String} font\n */\nconst getTextWidth = (text, font = \"14px -apple-system\") => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n  return Math.round(metrics.width + 80);\n};\n\n/**\n * This function calculates the width of each column based in all CELL VALUES\n * @param {Array} columns\n * @param {Array} source\n * @param {Number} maxWidthPerCell\n */\nexport const calculateColumnsWidth = (\n  columns,\n  source,\n  maxWidthPerCell = 500\n) => {\n  const columnsParsed = JSON.parse(JSON.stringify(columns));\n\n  // First we calculate the width for each column\n  // The column width is based on its string length\n\n  const columnsWithWidth = columnsParsed.map((column) =>\n    Object.assign(column, {\n      width: getTextWidth(column.title),\n    })\n  );\n\n  // Since we have a minimum width (column's width already calculated),\n  // now we are going to verify if the cell value is bigger\n  // than the column width which is already set\n\n  source.map((entry) => {\n    columnsWithWidth.map((column, indexColumn) => {\n      const columnWidth = column.width;\n      const cellValue = Object.values(entry)[indexColumn];\n\n      // Get the string width based on chars length\n      let cellWidth = getTextWidth(cellValue);\n\n      // Verify if the cell value is smaller than column's width\n      if (cellWidth < columnWidth) cellWidth = columnWidth;\n\n      // Verify if the cell value width is bigger than our max width flag\n      if (cellWidth > maxWidthPerCell) cellWidth = maxWidthPerCell;\n\n      // Update the column width\n      columnsWithWidth[indexColumn].width = cellWidth;\n    });\n  });\n\n  // Sum of all columns width to determine the table max width\n  const tableWidth = columnsWithWidth\n    .map((column) => column.width)\n    .reduce((a, b) => {\n      return a + b;\n    });\n\n  return {\n    columns: columnsWithWidth,\n    source,\n    tableWidth,\n  };\n};\n\nexport const isBlockedRoleDetailService = (role) => {\n  let isBlocked;\n  switch (role) {\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\n// Check if roles is blocked on menu list service:\nexport const isBlockedRoleListService = (role) => {\n  let isBlocked;\n  switch (role) {\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    case \"7cf419b8-9275-479b-846a-cda27aa173eb\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\n// Check if roles is blocked on menu customer:\nexport const isBlockedRoleCustomer = (role) => {\n  let isBlocked = false;\n  switch (role) {\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"7cf419b8-9275-479b-846a-cda27aa173eb\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { toastr } from \"react-redux-toastr\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toast } from \"react-toastify\";\nimport { change } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ROLES = \"SET_LIST_ROLES\";\nexport const SET_SELECTED_ROLE_ID = \"SET_SELECTED_ROLE_ID\";\nexport const SET_SELECTED_ROLE_DETAIL = \"SET_SELECTED_ROLE_DETAIL\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const RESET_STATE = \"RESET_STATE\";\nexport const SET_SELECTED_ROLE_MENU = \"SET_SELECTED_ROLE_MENU\";\n\nexport const resetState = (payload) => {\n  return {\n    type: RESET_STATE,\n    payload,\n  };\n};\n\nexport const setListRoles = (payload) => {\n  return {\n    type: SET_LIST_ROLES,\n    payload,\n  };\n};\n\nexport const setSelectedRoleId = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_ID,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedRoleDetail = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_DETAIL,\n    payload,\n  };\n};\n\nexport const setSelectedRoleMenu = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_MENU,\n    payload,\n  };\n};\n\nexport const showToast = (message, type) => {\n  switch (type) {\n    case \"success\":\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n\n    case \"error\":\n      toast.error(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n    default:\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n  }\n};\n\nexport const getListRolesRequested = async () => {\n  const { data } = await Invoke.getListRole(1, 100);\n  store.dispatch(setListRoles(data.callback.data));\n};\n\nexport const mapDetailRoleToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().roles.selectedRoleDetail;\n  dispatch(change(\"editRolesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editRolesForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getMenuByRolesId = async (roleId) => {\n  const { data } = await Invoke.getMenuByRoleId(roleId);\n  let subItem = [];\n  data.callback.map((item, index) => {\n    subItem.push(item.menu_id);\n  });\n  store.dispatch(setSelectedRoleMenu(subItem));\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editRolesForm\", `id`, \"\"));\n  dispatch(change(\"editRolesForm\", `description`, \"\"));\n};\n\nconst doAddRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await Invoke.addRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteMenuRoleProcess = async (menuId, menuListApi) => {\n  const [menu] = menuListApi.filter((x) => x.menu_id === menuId);\n  await Invoke.deleteMenuByMenuRoleId(menu.id);\n};\n\nconst doAddMenuRoleProcess = async (menuId, roleId) => {\n  const payload = {\n    menu_id: menuId,\n    role_id: roleId,\n    view: true,\n    insert: true,\n    update: true,\n    delete: false,\n  };\n  await Invoke.addMenuRole(payload);\n};\n\nconst doSaveMenuRole = async (newMenuSelected) => {\n  const { getState } = store;\n  const currentMenuSelected = getState().roles.selectedRoleMenu;\n  const selectedRoleId = getState().roles.selectedRoleId;\n  const { data } = await Invoke.getMenuByRoleId(selectedRoleId);\n  const menuListApi = data.callback;\n\n  if (currentMenuSelected.length > 0) {\n    await currentMenuSelected.map((item, index) => {\n      doDeleteMenuRoleProcess(item, menuListApi);\n    });\n    setTimeout(() => {\n      newMenuSelected.map((newMenu, index) => {\n        doAddMenuRoleProcess(newMenu, selectedRoleId);\n      });\n    }, 1000);\n  } else {\n    newMenuSelected.map((item, index) => {\n      doAddMenuRoleProcess(item, selectedRoleId);\n    });\n  }\n};\n\nconst doEditRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.id = values.id;\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await doSaveMenuRole(menuSelected);\n    await Invoke.updateRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteRoleProcess = async (roleId) => {\n  try {\n    await Invoke.deleteRoleById(roleId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListRolesRequested();\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteRoleRequested = async (roleId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteRoleProcess(roleId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const saveRoleRequested = async (type, values, menuSelected) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddRoleProcess(values, menuSelected);\n      } else {\n        doEditRoleProcess(values, menuSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { change } from \"redux-form\";\nimport moment from \"moment\";\nimport { setSelectedJobService } from \"../../ListServices/Store/ListServicesActions\";\nimport fileDownload from \"js-file-download\";\n\nexport const SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA =\n  \"SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA\";\n\nexport const SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_GROUPING_SUMMARY_DATA = \"SET_GROUPING_SUMMARY_DATA\";\n\nexport const SET_GROUPING_CHECKLIST_DATA = \"SET_GROUPING_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_SUMMARY_DATA =\n  \"SET_SELECTED_SERVICES_SUMMARY_DATA\";\n\nexport const SET_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_SELECTED_SERVICES_DAILIES_DATA =\n  \"SET_SELECTED_SERVICES_DAILIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_HISTORIES_DATA =\n  \"SET_SELECTED_SERVICES_HISTORIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_CHECKLIST_DATA =\n  \"SET_SELECTED_SERVICES_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_REJECTED_DATA =\n  \"SET_SELECTED_SERVICES_REJECTED_DATA\";\n\nexport const SET_EDIT_TRANSACTION_MODAL = \"SET_EDIT_TRANSACTION_MODAL\";\n\nexport const SET_REJECTIONS_MODAL = \"SET_REJECTIONS_MODAL\";\n\nexport const SET_EDIT_DAILIES_MODAL = \"SET_EDIT_DAILIES_MODAL\";\n\nexport const SET_SELECTED_EDIT_DAILIES_DATA = \"SET_SELECTED_EDIT_DAILIES_DATA\";\n\nexport const SET_SELECTED_UNIT = \"SET_SELECTED_UNIT\";\n\nexport const RESET_DETAIL_SERVICE = \"RESET_DETAIL_SERVICE\";\n\nexport const SET_INSERT_MEDIA_MODAL = \"SET_INSERT_MEDIA_MODAL\";\n\nexport const SET_TYPE_FORM_DAILIES = \"SET_TYPE_FORM_DAILIES\";\n\nexport const SET_EDIT_SUMMARY_MODAL = \"SET_EDIT_SUMMARY_MODAL\";\n\nexport const setRejectionsModal = (payload) => {\n  return {\n    type: SET_REJECTIONS_MODAL,\n    payload,\n  };\n};\n\nexport const resetDetailService = () => {\n  return {\n    type: RESET_DETAIL_SERVICE,\n  };\n};\n\nexport const setSelectedUnit = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT,\n    payload,\n  };\n};\n\nexport const setEditTransactionModal = (payload) => {\n  return {\n    type: SET_EDIT_TRANSACTION_MODAL,\n    payload,\n  };\n};\n\nexport const setGroupingSelectedServicesMediaData = (payload) => {\n  return {\n    type: SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingSummaryData = (payload) => {\n  return {\n    type: SET_GROUPING_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingChecklistData = (payload) => {\n  return {\n    type: SET_GROUPING_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setEditDailiesModal = (payload) => {\n  return {\n    type: SET_EDIT_DAILIES_MODAL,\n    payload,\n  };\n};\n\nexport const setEditSummaryModal = (payload) => {\n  return {\n    type: SET_EDIT_SUMMARY_MODAL,\n    payload,\n  };\n};\n\nexport const setInsertMediaModal = (payload) => {\n  return {\n    type: SET_INSERT_MEDIA_MODAL,\n    payload,\n  };\n};\n\nexport const setSelectedServicesEmployeeListData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServicesChecklisttData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedSummaryData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceMediaData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceHistoriesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_HISTORIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceRejectedData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_REJECTED_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEditDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_EDIT_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const setTypeFormDailies = (payload) => {\n  return {\n    type: SET_TYPE_FORM_DAILIES,\n    payload,\n  };\n};\n\nexport const getJobServiceEmployeeList = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getServicesEmployee(jobId, 1, 100);\n  const serviceEmployeeList = data.callback.data;\n\n  const results = Promise.all(\n    serviceEmployeeList.map(async (item, index) => {\n      let subIitem = {};\n      subIitem.active = item.active;\n      subIitem.employee_service_id = item.id;\n      const employee = await Invoke.getEmployeeById(item.employee_id);\n      subIitem = { ...subIitem, ...employee.data.callback };\n      return subIitem;\n    })\n  );\n  dispatch(setSelectedServicesEmployeeListData(await results));\n};\n\nexport const getJobServiceSummary = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceSummary(jobId, unitId);\n    dispatch(setSelectedSummaryData(data.callback));\n  } catch (error) {\n    dispatch(setSelectedSummaryData({}));\n  }\n};\n\nexport const getJobServiceMedia = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceMedia(jobId, unitId);\n    dispatch(setSelectedServiceMediaData(data.callback.data));\n  } catch (error) {\n    dispatch(setSelectedServiceMediaData([]));\n  }\n};\n\nexport const getJobServiceDailies = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceDailies(jobId, unitId);\n    dispatch(\n      setSelectedServiceDailiesData(data.callback.data || data.callback)\n    );\n  } catch (error) {\n    dispatch(setSelectedServiceDailiesData([]));\n  }\n};\n\nexport const getJobServiceHistories = async (jobId, keyword = \"\") => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getJobServiceHistories(jobId, 1, 100, keyword);\n  dispatch(setSelectedServiceHistoriesData(data.callback.logs));\n};\n\nexport const getJobServiceRejections = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getRejectedData(jobId);\n  dispatch(setSelectedServiceRejectedData(data.callback));\n};\n\nexport const getChecklistData = async (unitModelId) => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getChecklistData(unitModelId);\n    dispatch(setSelectedServicesChecklisttData(data.callback));\n  } catch (e) {\n    console.log(e);\n    dispatch(setSelectedServicesChecklisttData([]));\n  }\n};\n\nexport const handleAddNewEmployeeService = async (jobId, employeeId) => {\n  const { dispatch } = store;\n  try {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.active = \"true\";\n    await Invoke.addNewEmployeeService(jobId, payload);\n    setTimeout(() => {\n      dispatch(ComponentActions.setGlobalModal(false));\n      dispatch(ComponentActions.setGlobalLoading(false));\n      getJobServiceEmployeeList(jobId);\n    }, 500);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nexport const setStatusEmployee = async (\n  jobId,\n  employeeServiceId,\n  employeeId,\n  isActive\n) => {\n  const payload = {};\n  payload.id = employeeServiceId;\n  payload.employee_id = employeeId;\n  payload.active = isActive;\n  await Invoke.setStatusEmployeeService(jobId, payload);\n  setTimeout(() => {\n    getJobServiceEmployeeList(jobId);\n  }, 500);\n};\n\nconst doRejectServiceProcess = async (jobId, values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.reason = values.reason;\n    await Invoke.setRejectedService(jobId, payload);\n    showToast(\"Berhasil melakukan reject\", \"success\");\n    navigate(\"/list_service\");\n    dispatch(setRejectionsModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setRejectionsModal(false));\n  }\n};\n\nconst doEditServiceProcess = async (values) => {\n  const { dispatch } = store;\n\n  const warranty = values.warranty.split(\"|\");\n  const warrantyYears = values.warrantyYears.split(\"|\");\n  const warrantyMonths = values.warrantyMonths.split(\"|\");\n\n  const payload = {};\n  payload.id = values.id;\n  payload.start = moment(values.startDate).format(\"YYYY-MM-DD\");\n  payload.due = moment(values.dueDate).format(\"YYYY-MM-DD\");\n  payload.job_perform = values.jobPerform;\n  payload.warranty = warranty[0];\n  payload.warranty_month = warrantyMonths[0] ?? 0;\n  payload.warranty_year = warrantyYears[0] ?? 0;\n\n  try {\n    await Invoke.updateJobService(payload);\n    showToast(\"Data berhasil disimpan\", \"success\");\n\n    const { data } = await Invoke.getOneServices(values.id);\n    await store.dispatch(\n      setSelectedJobService({ ...data.callback, units: values.unit_models })\n    );\n    dispatch(setEditTransactionModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nexport const handlePressEditRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditServiceProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah anda yakin menyimpan data ini?\", toastrConfirmOptions);\n};\n\nexport const handlePressRejectedRequested = async (jobId, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doRejectServiceProcess(jobId, values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin me me-reject data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nconst doEditDailiesProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n  const typeForm = getState().detailService.typeFormDailies;\n\n  const payload = {};\n  const insertPayload = {};\n\n  payload.id = values.id;\n  payload.title = values.title ?? \"\";\n  payload.daily_start = values.startDate\n    ? moment(values.startDate).format(\"YYYY-MM-DD\")\n    : moment().format(\"YYYY-MM-DD\");\n  payload.daily_end = values.endDate\n    ? moment(values.endDate).format(\"YYYY-MM-DD\")\n    : moment().format(\"YYYY-MM-DD\");\n  payload.description = values.description ?? \"\";\n\n  insertPayload.title = values.title ?? \"\";\n  insertPayload.daily_start = values.startDate\n    ? moment(values.startDate).format(\"YYYY-MM-DD\")\n    : moment().format(\"YYYY-MM-DD HH:mm:ss\");\n  insertPayload.daily_end = values.endDate\n    ? moment(values.endDate).format(\"YYYY-MM-DD\")\n    : moment().format(\"YYYY-MM-DD HH:mm:ss\");\n  insertPayload.description = values.description ?? \"\";\n  insertPayload.type = values.type ?? \"Perjalanan\";\n\n  try {\n    if (typeForm === \"add\") {\n      await Invoke.addJobServiceDaily(insertPayload, dataService.id);\n    } else {\n      await Invoke.updateJobServiceDailies(payload);\n    }\n\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    await getJobServiceDailies(dataService.id);\n    dispatch(setEditDailiesModal(false));\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nconst doEditSummaryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const payload = {};\n\n  payload.summary = values.summary ?? \"\";\n\n  try {\n    await Invoke.updateSummary(payload, dataService.id, values.unitId);\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    dispatch(setEditSummaryModal(false));\n    // Call function to referesh summary unit group\n    getUnitSummary()\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditSummaryModal(false));\n  }\n};\n\nexport const handlePressEditDailiesRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditDailiesProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handlePressEditSummaryRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditSummaryProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nconst doInsertMedia = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const payload = {};\n\n  const splitUnit = values.unit.split(\"|\");\n  const unitId = splitUnit[0] ?? \"\";\n\n  payload.title = values.title ?? \"\";\n  payload.description = values.description ?? \"\";\n  payload.type = \"image\";\n  payload.base64 = values.imageUrl ?? \"\";\n\n  const media = { media: [payload] };\n  try {\n    await Invoke.addJobServiceMedia(media, dataService.id, unitId);\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    await getJobServiceDailies(dataService.id);\n    dispatch(setInsertMediaModal(false));\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setInsertMediaModal(false));\n  }\n};\n\nexport const handlePressInsertMediaRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doInsertMedia(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailTransactionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().services.selectedJobService;\n  dispatch(change(\"editTransactionForm\", `id`, data.id ?? \"\"));\n  dispatch(\n    change(\"editTransactionForm\", `startDate`, moment(data.start) ?? \"\")\n  );\n  dispatch(change(\"editTransactionForm\", `endDate`, moment(data.end) ?? \"\"));\n  dispatch(change(\"editTransactionForm\", `jobPerform`, data.job_perform ?? \"\"));\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warranty`,\n      `${data.warranty}|${data.warranty ? \"Warranty\" : \"No Warranty\"}`\n    )\n  );\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warrantyMonths`,\n      `${data.warranty_month}|${data.warranty_month} bulan` ?? \"0\"\n    )\n  );\n  dispatch(\n    change(\"editTransactionForm\", `warrantyYears`, data.warranty_year ?? \"\")\n  );\n};\n\nexport const mapDailiesToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().detailService.selectedEditDailies;\n  dispatch(change(\"editDailiesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `startDate`, moment(data.mulai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `endDate`, moment(data.selesai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `description`, data.deskripsi ?? \"\"));\n};\n\nexport const downloadTransactionPdf = async () => {\n  const { dispatch, getState } = store;\n  const jobId = getState().services.selectedJobService.id;\n  dispatch(ComponentActions.setGlobalLoading(true));\n\n  try {\n    const { data: dataTransactionPdf } = await Invoke.getTransactionPdfUrl(\n      jobId\n    );\n    const downloadUrl = dataTransactionPdf.callback.pdf.url.replace(\n      \"103.158.192.161:3000\",\n      \"\"\n    );\n    const { data } = await Invoke.downloadPdfFromUrl(downloadUrl);\n    dispatch(ComponentActions.setGlobalLoading(false));\n    fileDownload(data, `${dataTransactionPdf.callback.pdf.filename}.pdf`);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n    showToast(\"Gagal mengunduh report!\", \"error\");\n  }\n};\n\nexport const resetFormModalImage = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editMediaForm\", `imageUrl`, \"\"));\n  dispatch(change(\"editMediaForm\", `title`, \"\"));\n  dispatch(change(\"editMediaForm\", `description`, \"\"));\n  dispatch(change(\"editMediaForm\", `unit`, \"\"));\n};\n\nexport const getUnitSummary = async (callback) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  // setIsCompleteLoadedSummary(false);\n  const groupingSummaryList = [];\n  let sequence = 0;\n\n  const setDispatch = (responseStatus) => {\n    if (sequence === dataService.units.length) {\n      if (responseStatus === \"error\") {\n        setTimeout(() => {\n          dispatch(setGroupingSummaryData(groupingSummaryList));\n          // setIsCompleteLoadedSummary(true);\n          callback(true);\n        }, 1000);\n      } else {\n        setTimeout(() => {\n          dispatch(setGroupingSummaryData(groupingSummaryList));\n          // setIsCompleteLoadedSummary(true);\n          callback(true);\n        }, 1000);\n      }\n    }\n  };\n\n  if (dataService.units.length > 0) {\n    await dataService.units.map(async (item, index) => {\n      await Invoke.getJobServiceSummary(dataService.id, item.id)\n        .then((dataSummary) => {\n          groupingSummaryList.push({\n            id: item.id,\n            unitName: item.unit_name,\n            summary: dataSummary.data.callback.summary,\n          });\n\n          sequence += 1;\n          setDispatch(dataSummary.status);\n        })\n        .catch((err) => {\n          groupingSummaryList.push({\n            id: item.id,\n            unitName: item.unit_name,\n            summary: [],\n          });\n          sequence += 1;\n          setDispatch(\"error\");\n          callback(true);\n          console.log(err);\n        });\n    });\n  } else {\n    callback(true);\n  }\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { setRejectionsModal } from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\nimport * as DetailServiceActions from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\n\nexport const SET_LIST_SERVICES = \"SET_LIST_SERVICES\";\nexport const SET_SELECTED_JOB_SERVICE = \"SET_SELECTED_JOB_SERVICE\";\nexport const SET_PAGING_LIST_SERVICE = \"SET_PAGING_LIST_SERVICE\";\nexport const SET_SELECTED_JOB_SERVICE_ID = \"SET_SELECTED_JOB_SERVICE_ID\";\nexport const SET_DASHBOARD_LIST_SERVICES = \"SET_DASHBOARD_LIST_SERVICES\";\n\nexport const setListServices = (payload) => {\n  return {\n    type: SET_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setDashboardListService = (payload) => {\n  return {\n    type: SET_DASHBOARD_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setPagingListService = (payload) => {\n  return {\n    type: SET_PAGING_LIST_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobService = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobServiceId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE_ID,\n    payload,\n  };\n};\n\nexport const getListServicesRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  type = \"\",\n  status = \"\",\n  employeeId = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListServices(\n      page,\n      limit,\n      keyword,\n      type,\n      status,\n      employeeId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListServices(data.callback.data));\n    store.dispatch(setPagingListService(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTopTenService = async () => {\n  try {\n    const { data } = await Invoke.getListServices(1, 10, \"\", \"\", \"\", \"\");\n    store.dispatch(setDashboardListService(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (page, limit, keyword, filterValues) => {\n  if (!filterValues) {\n    getListServicesRequested(page, limit, keyword);\n    return;\n  }\n\n  const splitTypeService = filterValues.typeService\n    ? filterValues.typeService.split(\"|\")\n    : \"\";\n  const splitStatusService = filterValues.statusService\n    ? filterValues.statusService.split(\"|\")\n    : \"\";\n\n  const typeService = filterValues.typeService ? splitTypeService[0] : \"\";\n  const statusService = filterValues.statusService ? splitStatusService[0] : \"\";\n\n  try {\n    await getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      typeService,\n      statusService\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getDetailServicePerUnit = async (service) => {\n  console.log(\"=== service : \", service);\n\n  const { dispatch } = store;\n  // Hit media api and grouping by units :\n  let groupingChecklist = [];\n  if (service.units) {\n    await service.units.map(async (item, index) => {\n      const { data: dataChecklist } = await Invoke.getChecklistData(item.id);\n\n      console.log(\"=== dataChecklist : \", dataChecklist);\n      // Push to tempporary array\n      groupingChecklist.push({\n        unitName: item.unit_name,\n        checklist: dataChecklist.callback,\n      });\n    });\n\n    // Save to reducer\n    await dispatch(\n      DetailServiceActions.setGroupingChecklistData(groupingChecklist)\n    );\n  }\n};\n\nexport const handlePressEdit = async (values) => {\n  store.dispatch(setGlobalLoading(true));\n  try {\n    const { data } = await Invoke.getOneServices(values.id);\n    const dataService = { ...data.callback, units: values.unit_models };\n    await store.dispatch(setSelectedJobService(dataService));\n    // await getDetailServicePerUnit(dataService);\n    setTimeout(() => {\n      store.dispatch(setGlobalLoading(false));\n      navigate(\"detail-services\");\n    }, 1500);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteJobServiceProcess = async (jobId) => {\n  const { getState } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteJobServiceById(jobId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListServicesRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteJobServiceRequested = async (jobId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteJobServiceProcess(jobId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handlePressActionsRequested = async (jobId, type) => {\n  const { dispatch } = store;\n  type = type.toLowerCase();\n  let message;\n\n  switch (type) {\n    case \"approved\":\n      message = \"Apakah anda yakin ingin meng-approve data ini?\";\n      break;\n\n    case \"finished\":\n      message = \"Apakah anda yakin ingin mem-finishing data ini?\";\n      break;\n\n    case \"rejected\":\n      message = \"Apakah anda yakin ingin me me-reject data ini?\";\n      await dispatch(setRejectionsModal(true));\n      break;\n  }\n\n  if (type.toLowerCase() !== \"rejected\") {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        doCallActionProcess(jobId, type);\n      },\n      okText: \"Ya\",\n      cancelText: \"Tidak\",\n    };\n\n    toastr.confirm(message, toastrConfirmOptions);\n  }\n};\n\nexport const doCallActionProcess = async (jobId, type) => {\n  const { getState, dispatch } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n  dispatch(setGlobalLoading(true));\n  try {\n    if (type === \"approved\") {\n      await Invoke.setApprovedService(jobId);\n    }\n    if (type === \"finished\") {\n      await Invoke.setFinishedService(jobId);\n    }\n    await getListServicesRequested(page, limit);\n    showToast(\"Data berhasil di approved\", \"success\");\n    setTimeout(() => {\n      navigate(\"/list_service\");\n      dispatch(setGlobalLoading(false));\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(setGlobalLoading(false));\n    console.log(\"error : \", error);\n  }\n};\n","import {\n  SET_LIST_SERVICES,\n  SET_SELECTED_JOB_SERVICE,\n  SET_PAGING_LIST_SERVICE,\n  SET_SELECTED_JOB_SERVICE_ID,\n  SET_DASHBOARD_LIST_SERVICES,\n} from \"./ListServicesActions\";\n\nexport const initialState = {\n  listServices: [],\n  dashboardListServices: [],\n  selectedJobService: {},\n  selectedJobServiceId: {},\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function listServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_SERVICES:\n      newState.listServices = action.payload;\n      return { ...newState };\n\n    case SET_DASHBOARD_LIST_SERVICES:\n      newState.dashboardListServices = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE:\n      newState.selectedJobService = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE_ID:\n      newState.selectedJobServiceId = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_LIST_SERVICE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  PROCESS_GLOBAL_LOADING,\n  PROCESS_FORM_GLOBAL_LOADING,\n  RESET_ALL_LOADING,\n  SHOW_GLOBAL_MODAL,\n} from \"./ComponentAction\";\n\nexport const initialState = {\n  isLoadingGlobal: false,\n  isLoadingFormGlobal: false,\n  isModalVisible: false,\n};\n\nexport default function ComponentReducer(state = initialState, action) {\n  if (!action) {\n    return state;\n  }\n  const newState = Object.assign({}, state);\n\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case PROCESS_GLOBAL_LOADING:\n      newState.isLoadingGlobal = action.payload;\n      return { ...newState };\n    case PROCESS_FORM_GLOBAL_LOADING:\n      newState.isLoadingFormGlobal = action.payload;\n      return { ...newState };\n    case SHOW_GLOBAL_MODAL:\n      newState.isModalVisible = action.payload;\n      return { ...newState };\n    case RESET_ALL_LOADING:\n      newState.isLoadingGlobal = false;\n      newState.isLoadingFormGlobal = false;\n      return { ...newState };\n  }\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_CUSTOMER_LIST_DATA = \"SET_CUSTOMER_LIST_DATA\";\nexport const SET_PAGING_CUSTOMER = \"SET_PAGING_CUSTOMER\";\nexport const SET_SELECTED_CUSTOMER_DATA = \"SET_SELECTED_CUSTOMER_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_CUSTOMER_ID = \"SET_SELECTED_CUSTOMER_ID\";\nexport const SET_CUSTOMER_LIST_DATA_DROPDOWN =\n  \"SET_CUSTOMER_LIST_DATA_DROPDOWN\";\n\nexport const setCustomerListData = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCustomerListDataDropdown = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingCustomer = (payload) => {\n  return {\n    type: SET_PAGING_CUSTOMER,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerData = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerId = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_ID,\n    payload,\n  };\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editCustomerForm\", `id`, \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, \"\"));\n};\n\nexport const loadCustomerListData = async () => {\n  try {\n    const { data } = await Invoke.getCustomerList(1, 100);\n    store.dispatch(setCustomerListData(data.callback.data));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getCustomerListDataByPaging = async (\n  page,\n  limit,\n  keyword = \"\",\n  branchId = \"\",\n  isDropdownData = false\n) => {\n  try {\n    const { data } = await Invoke.getCustomerList(\n      page,\n      limit,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdownData) {\n      store.dispatch(setCustomerListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setCustomerListData(data.callback.data));\n    }\n    store.dispatch(setPagingCustomer(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteCustomerProcess = async (customerId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteCustomerById(customerId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddCustomerProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n\n    await Invoke.addCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n    await Invoke.updateCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveCustomerRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddCustomerProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailCustomerToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().customers.selectedCustomerData;\n  const provinceId = data.province_id + \"|\" + data.province_name;\n  const cityId = data.city_id + \"|\" + data.city_name;\n  const branchId = data.branch_id + \"|\" + data.branch_name;\n\n  dispatch(change(\"editCustomerForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, data.pic_phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, data.pic ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, data.work_hour ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, provinceId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, cityId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, branchId ?? \"\"));\n};\n\nexport const deleteCustomerRequested = async (customerId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteCustomerProcess(customerId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_CUSTOMER_LIST_DATA,\n  SET_PAGING_CUSTOMER,\n  SET_FORM_STATUS,\n  SET_SELECTED_CUSTOMER_DATA,\n  SET_SELECTED_CUSTOMER_ID,\n  SET_CUSTOMER_LIST_DATA_DROPDOWN,\n} from \"./CustomersActions\";\n\nexport const initialState = {\n  listCustomers: [],\n  listCustomersDropdown: [],\n  formStatus: \"add\",\n  selectedCustomerData: {},\n  selectedCustomerId: \"\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_CUSTOMER_LIST_DATA:\n      newState.listCustomers = action.payload;\n      return { ...newState };\n\n    case SET_CUSTOMER_LIST_DATA_DROPDOWN:\n      newState.listCustomersDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_CUSTOMER:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_DATA:\n      newState.selectedCustomerData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_ID:\n      newState.selectedCustomerId = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ADMIN = \"SET_LIST_ADMIN\";\nexport const SET_PAGING_ADMIN = \"SET_PAGING_ADMIN\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ADMIN_ID = \"SET_SELECTED_ADMIN_ID\";\nexport const SET_SELECTED_ADMIN_DATA = \"SET_SELECTED_ADMIN_DATA\";\n\nexport const setListAdmin = (payload) => {\n  return {\n    type: SET_LIST_ADMIN,\n    payload,\n  };\n};\n\nexport const setPagingAdmin = (payload) => {\n  return {\n    type: SET_PAGING_ADMIN,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedAdminId = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_ID,\n    payload,\n  };\n};\n\nexport const setSelectedAdminData = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_DATA,\n    payload,\n  };\n};\n\nexport const getListAdminRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListAdmin(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListAdmin(data.callback.data));\n    store.dispatch(setPagingAdmin(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editAdminForm\", `id`, \"\"));\n  dispatch(change(\"editAdminForm\", `username`, \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, \"\"));\n  dispatch(change(\"editAdminForm\", `password`, \"\"));\n};\n\nconst doAddAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.addAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.updateAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteAdminProcess = async (adminId) => {\n  const { getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteAdminById(adminId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListAdminRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveAdminRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddAdminProcess(values);\n      } else {\n        doEditAdminProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailAdminToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().admins.selectedAdminData;\n  dispatch(change(\"editAdminForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editAdminForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, data.fullname ?? \"\"));\n};\n\nexport const deleteAdminRequested = async (adminId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteAdminProcess(adminId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_LIST_ADMIN,\n  SET_FORM_STATUS,\n  SET_PAGING_ADMIN,\n  SET_SELECTED_ADMIN_ID,\n  SET_SELECTED_ADMIN_DATA,\n} from \"./AdminActions\";\n\nexport const initialState = {\n  listAdmin: [],\n  selectedAdminId: \"\",\n  selectedAdminData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ADMIN:\n      newState.listAdmin = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_ID:\n      newState.selectedAdminId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_DATA:\n      newState.selectedAdminData = action.payload;\n      return { ...newState };\n    case SET_PAGING_ADMIN:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_LIST_ROLES,\n  SET_SELECTED_ROLE_ID,\n  SET_SELECTED_ROLE_DETAIL,\n  SET_FORM_STATUS,\n  RESET_STATE,\n  SET_SELECTED_ROLE_MENU\n} from \"./RolesActions\";\n\nexport const initialState = {\n  listRoles: [],\n  selectedRoleId: \"\",\n  selectedRoleDetail: {},\n  selectedRoleMenu: [],\n  formStatus: \"add\",\n};\n\nexport default function rolesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ROLES:\n      newState.listRoles = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_ID:\n      newState.selectedRoleId = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_DETAIL:\n      newState.selectedRoleDetail = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_MENU:\n      newState.selectedRoleMenu = action.payload;\n      return { ...newState };\n\n    case RESET_STATE:\n      newState.listRoles = [];\n      newState.selectedRoleId = \"\";\n      newState.selectedRoleDetail = {};\n      newState.formStatus = \"add\";\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_PROVINCE_LIST_DATA = \"SET_PROVINCE_LIST_DATA\";\nexport const SET_CITY_LIST_DATA = \"SET_CITY_LIST_DATA\";\nexport const SET_MENU_LIST_DATA = \"SET_MENU_LIST_DATA\";\n\nexport const setProvinceListData = (payload) => {\n  return {\n    type: SET_PROVINCE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setMenuListData = (payload) => {\n  return {\n    type: SET_MENU_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCityListData = (payload) => {\n  return {\n    type: SET_CITY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const loadProvinceListData = async () => {\n  try {\n    const { data } = await Invoke.getProvinceList(1, 100);\n    store.dispatch(setProvinceListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadCityListData = async (provinceId) => {\n  try {\n    const { data } = await Invoke.getCityList(1, 200, provinceId);\n    store.dispatch(setCityListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadMenuListData = async () => {\n  try {\n    const { data } = await Invoke.getListMenu(1, 100);\n    store.dispatch(setMenuListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_LIST_DATA = \"SET_EMPLOYEE_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_ID = \"SET_SELECTED_EMPLOYEE_ID\";\nexport const SET_SELECTED_EMPLOYEE_DATA = \"SET_SELECTED_EMPLOYEE_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEES = \"SET_PAGING_EMPLOYEES\";\nexport const SET_EMPLOYEE_LIST_DROPDOWN = \"SET_EMPLOYEE_LIST_DROPDOWN\";\n\nexport const setEmployeeListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setEmployeeListDropdown = (payload) => {\n  return {\n    type: SET_EMPLOYEE_LIST_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedRoleEmployee = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployees = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEES,\n    payload,\n  };\n};\n\nexport const loadEmployeeListData = async (\n  page,\n  limit,\n  keyword = \"\",\n  roleId = \"\",\n  branchId = \"\",\n  divisionId = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeList(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setEmployeeListData(data.callback.data));\n    store.dispatch(setPagingEmployees(paging));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const loadEmployeeDataDropdown = async () => {\n  try {\n    const { data } = await Invoke.getEmployeeList(1, 99999999, \"\", \"\", \"\", \"\");\n\n    store.dispatch(setEmployeeListDropdown(data.callback.data));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getEmployeeToolsRequested = (employeeId, page, limit) => {\n  try {\n    const { data } = Invoke.getEmployeeTools(employeeId, page, limit);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployees(paging));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getRolesByEmployeeId = async (employeeId) => {\n  const { data } = await Invoke.getEmployeeRoles(employeeId, 1, 100);\n  let subItem = [];\n  data.callback.data.map((item, index) => {\n    subItem.push(item.role_id);\n  });\n  store.dispatch(setSelectedRoleEmployee(subItem));\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeProcess = async (values, selectedRoles) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.nik = values.nik;\n    payload.password = values.password ?? \"\";\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n\n    await Invoke.addEmployee(payload);\n    // await doSaveEmployeeRole(selectedRoles, \"add\");\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    loadEmployeeListData(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employees\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeProcess = async (values, roleSelected) => {\n  const { dispatch } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.nik = values.nik;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n    // Save Employee - roles actions\n    if (values.selectedRoles.length > 0) {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-and-add\");\n    } else {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-all\");\n    }\n    // Save Employee data actions\n    await Invoke.updateEmployee(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    setTimeout(() => {\n      navigate(\"/employees\");\n    }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doAddEmployeeRoleProcess = async (newRoleId, employeeId) => {\n  const payload = {\n    employee_id: employeeId,\n    role_id: newRoleId,\n  };\n  await Invoke.addEmployeeRole(payload);\n};\n\nconst doDeleteAllEmployeeRoleProcess = async (roleListApi) => {\n  roleListApi.data.map(async (item, index) => {\n    await Invoke.deleteEmployeeRole(item.id);\n  });\n};\n\nconst doDeleteEmployeeProcess = async (employeeId) => {\n  const { getState } = store;\n  const paging = getState().employees.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeById(employeeId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    loadEmployeeListData(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doSaveEmployeeRole = async (newRoleSelected, type) => {\n  const { getState } = store;\n  try {\n    const currentRoleSelected = getState().employees.selectedRoleEmployee;\n    const selectedEmployeeId = getState().employees.selectedEmployeeId;\n    const { data } = await Invoke.getEmployeeRoles(selectedEmployeeId, 1, 100);\n    const roleListApi = data.callback;\n\n    if (type === \"delete-all\") {\n      await currentRoleSelected.map(async (item, index) => {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n      });\n    } else if (type === \"add\") {\n      await newRoleSelected.map(async (item, index) => {\n        await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n      });\n    } else {\n      // Check if the user is has been have roles or not\n      if (currentRoleSelected.length > 0) {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      } else {\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveEmployeeRequested = async (\n  formStatus,\n  values,\n  roleSelected\n) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeProcess(values, roleSelected);\n      } else {\n        doEditEmployeeProcess(values, roleSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employees.selectedEmployeeData;\n  const branch = `${data.branch_id}|${data.branch_name}`;\n  const province = `${data.province_id}|${data.province_name}`;\n  const city = `${data.city_id}|${data.city_name}`;\n\n  dispatch(change(\"editEmployeeForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `nik`, data.nik ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, branch ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, province ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, city ?? \"\"));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(MasterDataActions.setCityListData([]));\n  dispatch(change(\"editEmployeeForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n};\n\nexport const deleteEmployeeRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n\n  if (!values) {\n    await loadEmployeeListData(page, limit, keyword);\n    return;\n  }\n\n  const splitRole = values.role ? values.role.split(\"|\") : \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const splitDivision = values.division ? values.division.split(\"|\") : \"\";\n\n  const roleId = values.role ? splitRole[0] : \"\";\n  const branchId = values.branch ? splitBranch[0] : \"\";\n  const divisionId = values.division ? splitDivision[0] : \"\";\n\n  try {\n    await loadEmployeeListData(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_ID,\n  SET_SELECTED_EMPLOYEE_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_ROLE_EMPLOYEE,\n  SET_PAGING_EMPLOYEES,\n  SET_EMPLOYEE_LIST_DROPDOWN\n} from \"./EmployeesActions\";\n\nexport const initialState = {\n  listEmployees: [],\n  listEmployeeDropdown: [],\n  selectedEmployeeId: \"\",\n  selectedEmployeeData: {},\n  selectedRoleEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_LIST_DATA:\n      newState.listEmployees = action.payload;\n      return { ...newState };\n\n      case SET_EMPLOYEE_LIST_DROPDOWN:\n      newState.listEmployeeDropdown = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_ID:\n      newState.selectedEmployeeId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_DATA:\n      newState.selectedEmployeeData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_EMPLOYEE:\n      newState.selectedRoleEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEES:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_TOOL_LIST_DATA = \"SET_EMPLOYEE_TOOL_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_ID = \"SET_SELECTED_EMPLOYEE_TOOLS_ID\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_DATA =\n  \"SET_SELECTED_EMPLOYEE_TOOLS_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEE_TOOLS = \"SET_PAGING_EMPLOYEE_TOOLS\";\n\nexport const setEmployeeToolsListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_TOOL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployeeTools = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEE_TOOLS,\n    payload,\n  };\n};\n\nexport const getEmployeeToolsRequested = async (\n  employeeId,\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeTools(employeeId, page, limit);\n    console.log(\"=== data : \", data);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployeeTools(paging));\n    store.dispatch(setEmployeeToolsListData(data.callback.data));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeToolsData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const slpitToolsId = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.tool_id = slpitToolsId[0];\n\n    await Invoke.addEmployeeTools(payload);\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const employeeId = getState().employees.selectedEmployeeId;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const splitTools = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.employee_id = employeeId;\n    payload.tool_id = splitTools[0];\n\n    // Save Employee data actions\n    await Invoke.updateEmployeeTools(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doDeleteEmployeeToolsProcess = async (employeeToolsId) => {\n  const { getState } = store;\n  const paging = getState().employeeTools.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeToolsById(employeeToolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveEmployeeToolsRequested = async (formStatus, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeToolsProcess(values);\n      } else {\n        doEditEmployeeToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employeeTools.selectedEmployeeToolsData;\n  // const splitTools = data;\n  const tools = `${data.tool_id}|${data.name}`;\n\n  dispatch(change(\"editEmployeeToolsForm\", `id`, data.id));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, tools));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(change(\"editEmployeeToolsForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, \"\"));\n};\n\nexport const deleteEmployeeToolsRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeToolsProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n\n  if (!values) {\n    getEmployeeToolsRequested(employeeId, page, limit, keyword);\n    return;\n  }\n\n  try {\n    await getEmployeeToolsRequested(employeeId, page, limit, keyword);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_TOOL_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_TOOLS_ID,\n  SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_EMPLOYEE_TOOLS,\n} from \"./EmployeeToolsActions\";\n\nexport const initialState = {\n  listEmployeeTools: [],\n  selectedEmployeeToolsId: \"\",\n  selectedEmployeeToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeeToolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_TOOL_LIST_DATA:\n      newState.listEmployeeTools = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_ID:\n      newState.selectedEmployeeToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_DATA:\n      newState.selectedEmployeeToolsData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEE_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_PROVINCE_LIST_DATA,\n  SET_MENU_LIST_DATA,\n  SET_CITY_LIST_DATA\n} from \"./MasterDataActions\";\n\nexport const initialState = {\n  listProvince: [],\n  listCity: [],\n  listMenu: [],\n};\n\nexport default function masterDataReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_PROVINCE_LIST_DATA:\n      newState.listProvince = action.payload;\n      return { ...newState };\n    case SET_CITY_LIST_DATA:\n      newState.listCity = action.payload;\n      return { ...newState };\n    case SET_MENU_LIST_DATA:\n      newState.listMenu = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_ID = \"SET_SELECTED_UNIT_ID\";\nexport const SET_SELECTED_UNIT_DATA = \"SET_SELECTED_UNIT_DATA\";\nexport const SET_PAGING_UNIT = \"SET_PAGING_UNIT\";\n\nexport const setUnitListData = (payload) => {\n  return {\n    type: SET_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnit = (payload) => {\n  return {\n    type: SET_PAGING_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteUnitProcess = async (unitId) => {\n  const { getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitById(unitId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    payload.photo = values.imageUrl ?? \"\";\n    await Invoke.addUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.photo = values.imageUrl ?? \"\";\n    payload.description = values.description;\n    await Invoke.updateUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitForm\", `id`, \"\"));\n  dispatch(change(\"editUnitForm\", `name`, \"\"));\n  dispatch(change(\"editUnitForm\", `description`, \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, \"\"));\n};\n\nexport const mapDetailUnitToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().units.selectedUnitsData;\n\n  dispatch(change(\"editUnitForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitForm\", `description`, data.description ?? \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, data.photo ?? \"\"));\n};\n\nexport const getUnitListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getUnitList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitListData(data.callback.data));\n    store.dispatch(setPagingUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitProcess(values);\n      } else {\n        doEditUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitRequested = async (unitId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitProcess(unitId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_ID,\n  SET_SELECTED_UNIT_DATA,\n  SET_PAGING_UNIT\n} from \"./UnitsActions\";\n\nexport const initialState = {\n  listUnits: [],\n  selectedUnitsId: \"\",\n  selectedUnitsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_LIST_DATA:\n      newState.listUnits = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_ID:\n      newState.selectedUnitsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_DATA:\n      newState.selectedUnitsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_JOB_FORMS_LIST_DATA = \"SET_JOB_FORMS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_JOB_FORMS_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_JOB_FORMS_DATA = \"SET_SELECTED_JOB_FORMS_DATA\";\nexport const SET_PAGING_JOB_FORM = \"SET_PAGING_JOB_FORM\";\n\nexport const setJobFormsListData = (payload) => {\n  return {\n    type: SET_JOB_FORMS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingJobForm = (payload) => {\n  return {\n    type: SET_PAGING_JOB_FORM,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsData = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (jobFormsId) => {\n  try {\n    await Invoke.deleteJobForms(jobFormsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getJobFormsListDataRequested();\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editJobForms\", `id`, \"\"));\n  dispatch(change(\"editJobForms\", `name`, \"\"));\n  dispatch(change(\"editJobForms\", `description`, \"\"));\n};\n\nexport const mapDetailJobFormsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().jobForms.selectedJobFormsData;\n  dispatch(change(\"editJobForms\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editJobForms\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editJobForms\", `description`, data.description ?? \"\"));\n};\n\nexport const getJobFormsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListJobForm(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setJobFormsListData(data.callback.data));\n    store.dispatch(setPagingJobForm(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveJobFormsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddJobFormsProcess(values);\n      } else {\n        doEditJobFormsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteJobFormsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_JOB_FORMS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_JOB_FORMS_ID,\n  SET_SELECTED_JOB_FORMS_DATA,\n  SET_PAGING_JOB_FORM,\n} from \"./JobFormsActions\";\n\nexport const initialState = {\n  listJobForms: [],\n  selectedJobFormsId: \"\",\n  selectedJobFormsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function jobFormsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_JOB_FORMS_LIST_DATA:\n      newState.listJobForms = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_ID:\n      newState.selectedJobFormsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_DATA:\n      newState.selectedJobFormsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_JOB_FORM:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_BRANCH_LIST_DATA = \"SET_BRANCH_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_BRANCH_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_BRANCH_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_BRANCH = \"SET_PAGING_BRANCH\";\nexport const SET_BRANCH_LIST_DATA_DROPDOWN = \"SET_BRANCH_LIST_DATA_DROPDOWN\";\n\nexport const setBranchListData = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setBranchListDataDropdown = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingBranch = (payload) => {\n  return {\n    type: SET_PAGING_BRANCH,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedBranchId = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_ID,\n    payload,\n  };\n};\n\nexport const setSelectedBranchData = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteBranchById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getBranchListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.addBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.updateBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editBranchForm\", `id`, \"\"));\n  dispatch(change(\"editBranchForm\", `description`, \"\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().branch.selectedBranchData;\n  dispatch(change(\"editBranchForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editBranchForm\", `description`, data.name ?? \"\"));\n};\n\nexport const getBranchListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  isDropdown = false\n) => {\n  try {\n    const { data } = await Invoke.getListBranch(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdown) {\n      store.dispatch(setBranchListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setBranchListData(data.callback.data));\n    }\n    store.dispatch(setPagingBranch(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveBranchRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddBranchProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteBranchRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_BRANCH_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_BRANCH,\n  SET_SELECTED_BRANCH_ID,\n  SET_SELECTED_BRANCH_DATA,\n  SET_BRANCH_LIST_DATA_DROPDOWN\n} from \"./BranchActions\";\n\nexport const initialState = {\n  listBranch: [],\n  listBranchDropdown: [],\n  selectedBranchId: \"\",\n  selectedBranchData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_BRANCH_LIST_DATA:\n      newState.listBranch = action.payload;\n      return { ...newState };\n\n    case SET_BRANCH_LIST_DATA_DROPDOWN:\n      newState.listBranchDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_ID:\n      newState.selectedBranchId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_DATA:\n      newState.selectedBranchData = action.payload;\n      return { ...newState };\n    case SET_PAGING_BRANCH:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_SERVICES_SUMMARY_DATA,\n  SET_SELECTED_SERVICES_MEDIA_DATA,\n  SET_SELECTED_SERVICES_DAILIES_DATA,\n  SET_SELECTED_SERVICES_HISTORIES_DATA,\n  SET_SELECTED_SERVICES_CHECKLIST_DATA,\n  SET_SELECTED_SERVICES_REJECTED_DATA,\n  SET_REJECTIONS_MODAL,\n  SET_EDIT_TRANSACTION_MODAL,\n  SET_EDIT_DAILIES_MODAL,\n  SET_SELECTED_EDIT_DAILIES_DATA,\n  SET_SELECTED_UNIT,\n  RESET_DETAIL_SERVICE,\n  SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n  SET_GROUPING_SUMMARY_DATA,\n  SET_GROUPING_CHECKLIST_DATA,\n  SET_INSERT_MEDIA_MODAL,\n  SET_TYPE_FORM_DAILIES,\n  SET_EDIT_SUMMARY_MODAL,\n} from \"./DetailServiceTransactionAction\";\n\nexport const initialState = {\n  selectedServiceEmployeeList: [],\n  selectedServiceSummary: {},\n  selectedServiceMedia: [],\n  groupingSelectedServiceMedia: [],\n  groupingSelectedServiceSummary: [],\n  groupingSelectedServiceChecklist: [],\n  selectedServiceDailies: [],\n  selectedServiceHistories: [],\n  selectedServiceChecklist: [],\n  selectedServiceRejected: [],\n  rejectionsModal: false,\n  editTransactionModal: false,\n  editDailiesModal: false,\n  editSummaryModal: false,\n  insertMediaModal: false,\n  typeFormDailies: \"add\",\n  selectedEditDailies: {},\n  selectedUnit: \"Seluruh Unit\",\n};\n\nexport default function detailServiceTransactionReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA:\n      newState.selectedServiceEmployeeList = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_SUMMARY_DATA:\n      newState.selectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_MEDIA_DATA:\n      newState.selectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA:\n      newState.groupingSelectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SUMMARY_DATA:\n      newState.groupingSelectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_GROUPING_CHECKLIST_DATA:\n      newState.groupingSelectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_DAILIES_DATA:\n      newState.selectedServiceDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_HISTORIES_DATA:\n      newState.selectedServiceHistories = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_CHECKLIST_DATA:\n      newState.selectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_REJECTED_DATA:\n      newState.selectedServiceRejected = action.payload;\n      return { ...newState };\n    case SET_REJECTIONS_MODAL:\n      newState.rejectionsModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_TRANSACTION_MODAL:\n      newState.editTransactionModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_DAILIES_MODAL:\n      newState.editDailiesModal = action.payload;\n      return { ...newState };\n    case SET_SELECTED_EDIT_DAILIES_DATA:\n      newState.selectedEditDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      return { ...newState };\n    case SET_INSERT_MEDIA_MODAL:\n      newState.insertMediaModal = action.payload;\n      return { ...newState };\n    case SET_TYPE_FORM_DAILIES:\n      newState.typeFormDailies = action.payload;\n      return { ...newState };\n    case SET_EDIT_SUMMARY_MODAL:\n      newState.editSummaryModal = action.payload;\n      return { ...newState };\n    case RESET_DETAIL_SERVICE:\n      return initialState;\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_MODEL_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_MODEL_ID = \"SET_SELECTED_UNIT_MODEL_ID\";\nexport const SET_SELECTED_UNIT_MODEL_DATA = \"SET_SELECTED_UNIT_MODEL_DATA\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\n\nexport const setUnitModelListData = (payload) => {\n  return {\n    type: SET_UNIT_MODEL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_DATA,\n    payload,\n  };\n};\n\nexport const getUnitModelListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitModel(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitModelListData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitModelsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.addUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitModelsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = values.unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.updateUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (unitModelId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitModelById(unitModelId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitModelsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitModelsProcess(values);\n      } else {\n        doEditUnitModelsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitModelToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitModels.selectedUnitModelsData;\n\n  dispatch(change(\"editUnitModelForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, data.descriptions ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(change(\"editUnitModelForm\", `machineNo`, data.machine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, data.engine_model ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, data.engine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, data.chasis_no ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `transmissionNo`, data.transmission_no ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitModelForm\", `id`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `machineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `transmissionNo`, \"\"));\n};\n","import {\n  SET_UNIT_MODEL_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_MODEL_ID,\n  SET_SELECTED_UNIT_MODEL_DATA,\n  SET_PAGING_UNIT_MODEL\n} from \"./UnitModelActions\";\n\nexport const initialState = {\n  listUnitModels: [],\n  selectedUnitModelsId: \"\",\n  selectedUnitModelsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitModelReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_MODEL_LIST_DATA:\n      newState.listUnitModels = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_ID:\n      newState.selectedUnitModelsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_DATA:\n      newState.selectedUnitModelsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_ENUM_UNIT_MODEL = \"SET_ENUM_UNIT_MODEL\";\n\nexport const setEnumUnintModel = (payload) => {\n  return {\n    type: SET_ENUM_UNIT_MODEL,\n    payload,\n  };\n};\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateUnitModel = async (unitId, fieldIndex) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getListUnitModel(1, 100, unitId, \"\");\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${fieldIndex}].enumUnitModel`,\n      data.callback.data ?? []\n    )\n  );\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"externalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(1, 200, employeeData.province_id);\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === employeeData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        citySelected.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        citySelected\n      )\n    );\n    // store.dispatch(\n    //   change(\"externalServiceForm\", \"employeeCityName\", detailEmployee.nik)\n    // );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"externalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"externalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const onChangeUnitModel = (val, index, enumUnit) => {\n  const { dispatch } = store;\n\n  const splitUnitModel = val.split(\"|\");\n\n  const [selectedUnitModel] = enumUnit.filter(\n    (x) => x.id === splitUnitModel[0]\n  );\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${index}].unitModelSerialNumber`,\n      selectedUnitModel.serial_number ?? \"\"\n    )\n  );\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  const splitWarranty = values.warranty.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const unitList = [];\n  values.units.map((item, index) => {\n    const splitUnitModel = item.unitModelId.split(\"|\");\n    unitList.push({\n      unit_model_id: splitUnitModel[0],\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"true\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: splitWarranty[0],\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: unitList ?? [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              resolve();\n            }, 1000);\n            setTimeout(() => {\n              navigate(\"list_service\");\n            }, 1500);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import { SET_ENUM_UNIT_MODEL } from \"./ExternalServiceActions\";\n\nexport const initialState = {\n  enumUnitModel: [],\n};\n\nexport default function externalServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ENUM_UNIT_MODEL:\n      newState.enumUnitModel = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change, reset } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { message } from \"antd\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_IDENTIFICATIONN_LIST_DATA = \"SET_IDENTIFICATIONN_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_IDENTIFICATION_ID = \"SET_SELECTED_IDENTIFICATION_ID\";\nexport const SET_PAGING_IDENTIFICATION = \"SET_PAGING_IDENTIFICATION\";\nexport const SET_SELECTED_IDENTIFICATION_DATA =\n  \"SET_SELECTED_IDENTIFICATION_DATA\";\n\nexport const setIdentificationListData = (payload) => {\n  return {\n    type: SET_IDENTIFICATIONN_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingIdentification = (payload) => {\n  return {\n    type: SET_PAGING_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationId = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationData = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_DATA,\n    payload,\n  };\n};\n\nexport const getIdentificationListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState, dispatch } = store;\n  try {\n    const branches = getState().branch.listBranch;\n    const { data } = await Invoke.getIdentificationList(page, limit, keyword);\n    const identificationList = data.callback.data;\n\n    const newIdentificationList = [];\n    if (identificationList.length > 0) {\n      identificationList.map((item, index) => {\n        const [defaultBranch] = branches.filter((x) => x.id === item.branch_id);\n        item.branch_name = defaultBranch ? defaultBranch.name : \"-\";\n\n        newIdentificationList.push(item);\n      });\n    }\n\n    dispatch(setIdentificationListData(newIdentificationList));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteIdentificationProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteIdentificationById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddIdentificationProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const splitCustomer = values.customer.split(\"|\");\n    const splitBranch = values.branch.split(\"|\");\n    const splitLocation = values.location.split(\"|\");\n    const splitMilling = values.milling.split(\"|\");\n    const splitType = values.type.split(\"|\");\n\n    const payload = {};\n    payload.customer_id = splitCustomer[0];\n    payload.branch_id = splitBranch[0];\n    payload.location = splitLocation[0];\n    payload.type = splitType[0];\n    payload.status = SelectStatus[0].value;\n    payload.milling = splitMilling[0];\n\n    await Invoke.addIdentification(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationMilling = async (values, isLastStep) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = !values.instanceType\n      ? \"\"\n      : values.instanceType.split(\"|\");\n    const splitMillingStatus = !values.millingStatus\n      ? \"\"\n      : values.millingStatus.split(\"|\");\n    const splitCity = !values.city ? \"\" : values.city.split(\"|\") ?? [];\n    const splitProvince = !values.province\n      ? \"\"\n      : values.province.split(\"|\") ?? [];\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0],\n      instance_name: values.instanceName ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0] ?? \"\",\n      city: splitCity[1] ?? \"\",\n      province: splitProvince[1] ?? \"\",\n      phone: values.phone ?? \"\",\n      milling_capacity: values.millingCapacity ?? \"\",\n      milling_work_capacity_perday: values.millingWorkCapacityPerDay ?? \"\",\n      rice_trademark: values.riceTrademark ?? \"\",\n      history_service_place: values.history_service_place ?? \"\",\n      history_service_type: values.history_service_type ?? \"\",\n      notes: values.note ?? \"\",\n      engine_confs: engineConfs,\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    if (isLastStep) {\n      showToast(\"Menyimpan perubahan\", \"success\");\n      setTimeout(() => {\n        navigate(\"identification\");\n      }, 1000);\n    }\n    // return;\n    await Invoke.updateIdentificationMilling(payload);\n    // showToast(\"Pembaruan Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationRegular = async (values, isFinished) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    if (!values || values === undefined) {\n      // showToast(\"Harap lengkapi form untuk melanjutkan\", \"error\");\n      return;\n    }\n\n    console.log(\"=== values : \", values);\n\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = values?.instanceType.split(\"|\");\n    const splitMillingStatus = values.millingStatus\n      ? values?.millingStatus.split(\"|\")\n      : [\"\"];\n    const splitCity = values?.city.split(\"|\");\n    const splitProvince = values?.province.split(\"|\");\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0] ?? \"\",\n      instance_name: values.instanceName ?? \"\",\n      instance_address: values.instanceAddress ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0],\n      address_district: \"\",\n      address_city: splitCity[1] ?? \"\",\n      address_province: splitProvince[1] ?? \"\",\n      address_subdistrict: values.kelurahan ?? \"\",\n      address_postal_code: values.postalCode ?? \"\",\n      phone: values.instancePhoneNumber ?? \"\",\n      product_name: values.productName,\n      buy_date: \"2021-09-22\",\n      assistance_date: \"2021-09-25\",\n      serial_number: \"SN1231\",\n      machine_number: \"MCN1231\",\n      gearbox_number: \"GB1231\",\n      production_unit_year: \"2021\",\n      work_hour_per_day: \"8 Hours\",\n      hour_meter: 1233,\n      history_service_place: \"Fee Text\",\n      history_service_type: \"Fee Text\",\n      notes: \"Test Regular Identification\",\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    // return;\n    await Invoke.updateIdentificationRegular(payload);\n    if (isFinished) {\n      showToast(\"Data berhasil disimpan\", \"success\");\n      getIdentificationListRequested(page, limit);\n      navigate(\"/identification\");\n    }\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n// === END INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(reset(\"editIdentificationhForm\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().identification.setSelectedIdentificationData;\n  dispatch(change(\"editIdentificationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editIdentificationForm\", `description`, data.name ?? \"\"));\n};\n\nexport const saveIdentificationRequested = async (\n  type,\n  values,\n  isLastStep = false\n) => {\n  const { getState } = store;\n  const isMilling =\n    getState().identification.selectedIdentificationData.milling;\n\n  if (type === \"add\") {\n    doAddIdentificationProcess(values);\n  } else {\n    if (isMilling) {\n      doUpdateIdentificationMilling(values, isLastStep);\n    } else {\n      doUpdateIdentificationRegular(values, isLastStep);\n    }\n  }\n};\n\nexport const deleteIdentificationRequested = async (identificationId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteIdentificationProcess(identificationId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_IDENTIFICATIONN_LIST_DATA,\n  SET_SELECTED_IDENTIFICATION_DATA,\n  SET_SELECTED_IDENTIFICATION_ID,\n  SET_FORM_STATUS,\n  SET_PAGING_IDENTIFICATION\n} from \"./IdentificationActions\";\n\nexport const initialState = {\n  listIdentification: [],\n  selectedIdentificationId: \"\",\n  selectedIdentificationData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function identificationReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_IDENTIFICATIONN_LIST_DATA:\n      newState.listIdentification = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_ID:\n      newState.selectedIdentificationId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_DATA:\n      newState.selectedIdentificationData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_IDENTIFICATION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_MACHINE_LIST_DATA = \"SET_MACHINE_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_MACHINE_ID = \"SET_SELECTED_MACHINE_ID\";\nexport const SET_SELECTED_MACHINE_DATA = \"SET_SELECTED_MACHINE_DATA\";\nexport const SET_PAGING_MACHINE_CONF = \"SET_PAGING_MACHINE_CONF\";\n\nexport const setMachineListData = (payload) => {\n  return {\n    type: SET_MACHINE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMachineConf = (payload) => {\n  return {\n    type: SET_PAGING_MACHINE_CONF,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedMachineId = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedMachineData = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteMachineProcess = async (machineId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteEngine(machineId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getMachineListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editMachineConfigurationForm\", `name`, \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `description`, \"\"));\n};\n\nexport const mapDetailMachineToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().machineConfiguration.selectedMachineData;\n  dispatch(change(\"editMachineConfigurationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `name`, data.name ?? \"\"));\n  dispatch(\n    change(\n      \"editMachineConfigurationForm\",\n      `description`,\n      data.description ?? \"\"\n    )\n  );\n};\n\nexport const getMachineListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListEngine(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setMachineListData(data.callback.data));\n    store.dispatch(setPagingMachineConf(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveMachineRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddMachineProcess(values);\n      } else {\n        doEditMachineProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteMachineRequested = async (machineId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteMachineProcess(machineId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_MACHINE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_MACHINE_ID,\n  SET_SELECTED_MACHINE_DATA,\n  SET_PAGING_MACHINE_CONF,\n} from \"./MachineConfigurationActions\";\n\nexport const initialState = {\n  listMachine: [],\n  selectedMachineId: \"\",\n  selectedMachineData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function machineConfigurationReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MACHINE_LIST_DATA:\n      newState.listMachine = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_ID:\n      newState.selectedMachineId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_DATA:\n      newState.selectedMachineData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MACHINE_CONF:\n      newState.paging = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_TOOLS_LIST_DATA = \"SET_TOOLS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_TOOLS_ID = \"SET_SELECTED_TOOLS_ID\";\nexport const SET_SELECTED_TOOLS_DATA = \"SET_SELECTED_TOOLS_DATA\";\nexport const SET_PAGING_TOOLS = \"SET_PAGING_TOOLS\";\n\nexport const setToolsListData = (payload) => {\n  return {\n    type: SET_TOOLS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingTools = (payload) => {\n  return {\n    type: SET_PAGING_TOOLS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteToolsProcess = async (toolsId) => {\n  const { getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteTool(toolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getToolsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.addTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.updateTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editToolsForm\", `id`, \"\"));\n  dispatch(change(\"editToolsForm\", `name`, \"\"));\n  dispatch(change(\"editToolsForm\", `description`, \"\"));\n};\n\nexport const mapDetailToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().tools.selectedToolsData;\n  dispatch(change(\"editToolsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editToolsForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editToolsForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getToolsListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListTools(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setToolsListData(data.callback.data));\n    store.dispatch(setPagingTools(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveToolsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddToolsProcess(values);\n      } else {\n        doEditToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteToolsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteToolsProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_TOOLS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_TOOLS_ID,\n  SET_SELECTED_TOOLS_DATA,\n  SET_PAGING_TOOLS,\n} from \"./ToolsActions\";\n\nexport const initialState = {\n  listTools: [],\n  selectedToolsId: \"\",\n  selectedToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function toolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_TOOLS_LIST_DATA:\n      newState.listTools = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_ID:\n      newState.selectedToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_DATA:\n      newState.selectedToolsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_FORM_CATEGORY_LIST_DATA = \"SET_FORM_CATEGORY_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_FORM_CATEGORY_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_FORM_CATEGORY_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_FORM_CATEGORY = \"SET_PAGING_FORM_CATEGORY\";\n\nexport const setFormCategoryListData = (payload) => {\n  return {\n    type: SET_FORM_CATEGORY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingFormCategory = (payload) => {\n  return {\n    type: SET_PAGING_FORM_CATEGORY,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryId = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_ID,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryData = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteFormCategoryProcess = async (categoryFormId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteFormCategory(categoryFormId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"Nones\";\n    await Invoke.updateFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editFormCategory\", `id`, \"\"));\n  dispatch(change(\"editFormCategory\", `name`, \"\"));\n  dispatch(change(\"editFormCategory\", `description`, \"\"));\n};\n\nexport const mapDetailCategoryToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().formCategory.selectedFormCategoryData;\n  dispatch(change(\"editFormCategory\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editFormCategory\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editFormCategory\", `description`, data.description ?? \"\"));\n};\n\nexport const getFormCatgeoryListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getFormCategory(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setFormCategoryListData(data.callback.data));\n    store.dispatch(setPagingFormCategory(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveFormCategoryRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddFormCategoryProcess(values);\n      } else {\n        doEditFormCategoryProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteFormCategoryRequested = async (formCategoryId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteFormCategoryProcess(formCategoryId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_FORM_CATEGORY_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_FORM_CATEGORY_ID,\n  SET_SELECTED_FORM_CATEGORY_DATA,\n  SET_PAGING_FORM_CATEGORY\n} from \"./FormCategoryActions\";\n\nexport const initialState = {\n  listFormCategory: [],\n  selectedFormCategoryId: \"\",\n  selectedFormCategoryData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function formCategoryReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_FORM_CATEGORY_LIST_DATA:\n      newState.listFormCategory = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_ID:\n      newState.selectedFormCategoryId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_DATA:\n      newState.selectedFormCategoryData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_FORM_CATEGORY:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_FIELDS_LIST_DATA = \"SET_UNIT_FIELDS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_FIELDS_ID = \"SET_SELECTED_UNIT_FIELDS_ID\";\nexport const SET_SELECTED_UNIT_FIELDS_DATA = \"SET_SELECTED_UNIT_FIELDS_DATA\";\nexport const SET_PAGING_UNIT_FIELDS = \"SET_PAGING_UNIT_FIELDS\";\n\nexport const setUnitFieldsListData = (payload) => {\n  return {\n    type: SET_UNIT_FIELDS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitFields = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_FIELDS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_DATA,\n    payload,\n  };\n};\n\nexport const getUnitFieldsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitFields(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitFieldsListData(data.callback.data));\n    store.dispatch(setPagingUnitFields(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddUnitFieldsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.addUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitFieldsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitFieldsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitFieldsProcess(values);\n      } else {\n        doEditUnitFieldsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_UNIT_FIELDS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_FIELDS_ID,\n  SET_SELECTED_UNIT_FIELDS_DATA,\n  SET_PAGING_UNIT_FIELDS,\n} from \"./UnitFieldsActions\";\n\nexport const initialState = {\n  listUnitFields: [],\n  selectedUnitFieldsId: \"\",\n  selectedUnitFieldsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitFieldsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_FIELDS_LIST_DATA:\n      newState.listUnitFields = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_ID:\n      newState.selectedUnitFieldsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_DATA:\n      newState.selectedUnitFieldsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_FIELDS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_MONITORING_EMPLOYEE_LIST_DATA =\n  \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setMonitoringEmployeeListData = (payload) => {\n  return {\n    type: SET_MONITORING_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getMonitoringEmployeeListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().monitoringEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportMonitoringEmployee(\n      page,\n      limit,\n      from,\n      until,\n      type,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListMonitoringEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newListMonitoringEmployee.push({\n            created_date: item.date,\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(\n      setMonitoringEmployeeListData(newListMonitoringEmployee ?? [])\n    );\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n\n  if (!values) {\n    await getMonitoringEmployeeListDataRequested(page, limit);\n    return;\n  }\n  const splitType = values.type ? values.type.split(\"|\") : \"\";\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const type = values.type ? splitType[0] : \"all\";\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_MONITORING_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./MonitoringEmployeeActions\";\n\nexport const initialState = {\n  listMonitoringEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function monitoringEmployeeReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MONITORING_EMPLOYEE_LIST_DATA:\n      newState.listMonitoringEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_SERVICE_REPAIR_LIST_DATA = \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_SERVICE_REPAIR = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setServiceRepairListData = (payload) => {\n  return {\n    type: SET_SERVICE_REPAIR_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingServiceRepair = (payload) => {\n  return {\n    type: SET_PAGING_SERVICE_REPAIR,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getServiceRepairListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().serviceRepair.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportServiceRepair(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListServiceRepair = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        newListServiceRepair.push({\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setServiceRepairListData(newListServiceRepair ?? []));\n    store.dispatch(setPagingServiceRepair(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().serviceRepair.paging;\n\n  if (!values) {\n    await getServiceRepairListDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_SERVICE_REPAIR_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_SERVICE_REPAIR,\n} from \"./ReportServiceRepairActions\";\n\nexport const initialState = {\n  listServiceRepair: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportServiceRepairReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SERVICE_REPAIR_LIST_DATA:\n      newState.listServiceRepair = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_SERVICE_REPAIR:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_EMPLOYEE_LIST_DATA = \"SET_REPORT_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_REPORT_EMPLOYEE = \"SET_PAGING_REPORT_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportEmployeeListData = (payload) => {\n  return {\n    type: SET_REPORT_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportEmployee = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportEmployeeListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee.paging;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/* eslint-disable default-case */\nimport {\n  SET_REPORT_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_REPORT_EMPLOYEE,\n} from \"./ReportEmployeeActions\";\n\nexport const initialState = {\n  listReportEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportEmployeeReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  switch (action.type) {\n    case SET_REPORT_EMPLOYEE_LIST_DATA:\n      newState.listReportEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_REPORT_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_LIST_DATA = \"SET_DIVISION_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_ID = \"SET_SELECTED_DIVISION_ID\";\nexport const SET_SELECTED_DIVISION_DATA = \"SET_SELECTED_DIVISION_DATA\";\nexport const SET_PAGING_DIVISION = \"SET_PAGING_DIVISION\";\n\nexport const setDivisionListData = (payload) => {\n  return {\n    type: SET_DIVISION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivision = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteDivisionProcess = async (divisionId) => {\n  const { getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteDivision(divisionId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddDivisionProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = headDivision[0];\n    payload.title = values.title;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.title = values.title;\n    payload.employee_id = headDivision[0];\n    payload.description = values.description ?? \"none\";\n    await Invoke.updateDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editDivisionForm\", `id`, \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, \"\"));\n  dispatch(change(\"editDivisionForm\", `headDivision`, \"\"));\n};\n\nexport const mapDetailDivisionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().division.selectedDivisionData;\n\n  dispatch(change(\"editDivisionForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, data.description ?? \"\"));\n  dispatch(\n    change(\n      \"editDivisionForm\",\n      `headDivision`,\n      `${data.employee_id}|${data.employee_name}`\n    )\n  );\n};\n\nexport const getDivisionListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getDivisionList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionListData(data.callback.data));\n    store.dispatch(setPagingDivision(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveDivisionRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionProcess(values);\n      } else {\n        doEditDivisionProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteDivisionRequested = async (divisionId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteDivisionProcess(divisionId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_DIVISION_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_ID,\n  SET_SELECTED_DIVISION_DATA,\n  SET_PAGING_DIVISION\n} from \"./DivisionActions\";\n\nexport const initialState = {\n  listDivision: [],\n  selectedDivisionId: \"\",\n  selectedDivisionData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_LIST_DATA:\n      newState.listDivision = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_ID:\n      newState.selectedDivisionId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_DATA:\n      newState.selectedDivisionData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_UNIT_LIST_DATA = \"SET_DIVISION_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_UNIT_ID = \"SET_SELECTED_DIVISION_UNIT_ID\";\nexport const SET_SELECTED_DIVISION_UNIT_DATA =\n  \"SET_SELECTED_DIVISION_UNIT_DATA\";\nexport const SET_PAGING_DIVISION_UNIT = \"SET_PAGING_DIVISION_UNIT\";\n\nexport const setDivisionUnitListData = (payload) => {\n  return {\n    type: SET_DIVISION_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivisionUnit = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisonUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_DATA,\n    payload,\n  };\n};\n\nexport const getDivisionUnitListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const divisionId = getState().division.selectedDivisionId;\n  try {\n    const { data } = await Invoke.getDivisionUnitList(\n      divisionId,\n      page,\n      limit,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionUnitListData(data.callback.data));\n    store.dispatch(setPagingDivisionUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddDivisionUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const divisionId = getState().division.selectedDivisionId;\n  const { page, limit } = paging;\n  const splitUnitId = values.unit.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = splitUnitId[0];\n    payload.division_id = divisionId;\n\n    await Invoke.addDivisionUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const unitId = getState().division.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveDivisionUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionUnitProcess(values);\n      } else {\n        doEditDivisionUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_DIVISION_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_UNIT_ID,\n  SET_SELECTED_DIVISION_UNIT_DATA,\n  SET_PAGING_DIVISION_UNIT,\n} from \"./DivisionUnitActions\";\n\nexport const initialState = {\n  listDivisionUnit: [],\n  selectedDivisionUnitId: \"\",\n  selectedDivisionUnitData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionUnitReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_UNIT_LIST_DATA:\n      newState.listDivisionUnit = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_ID:\n      newState.selectedDivisionUnitId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_DATA:\n      newState.selectedDivisionUnitData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_DASHBOARD_DATA = \"SET_DASHBOARD_DATA\";\n\nexport const setDashboardData = (payload) => {\n  return {\n    type: SET_DASHBOARD_DATA,\n    payload,\n  };\n};\n\nexport const getDashboardProgressData = async () => {\n  try {\n    const { dispatch } = store;\n    const { data } = await Invoke.getDashboardProgressData();\n    dispatch(setDashboardData(data.callback));\n  } catch (e) {\n    console.log(\"error : \", e);\n  }\n};\n","import { SET_DASHBOARD_DATA } from \"./DashboardActions\";\n\nexport const initialState = {\n  dashboardData: {},\n};\n\nexport default function dashboardReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DASHBOARD_DATA:\n      newState.dashboardData = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\n\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_UNIT_SERIAL_NUMBER_DATA = \"SET_UNIT_SERIAL_NUMBER_DATA\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_ID =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_ID\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_DATA =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_DATA\";\n\nexport const setUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const handleSearch = (val, keyword) => {\n  const { getState, dispatch } = store;\n  const { page, limit } = getState().unitSerialNumber.paging;\n  try {\n    if (!val) {\n      toast.warning(\n        \"Wajib memilih customer untuk menampilkan data serial number\",\n        {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n      dispatch(setUnitSerialNumberData([]));\n      return;\n    }\n    const splitCustomerId = val.customer.split(\"|\");\n    getUnitSerialNumber(page, limit, keyword, splitCustomerId[0]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUnitSerialNumber = async (\n  page,\n  limit,\n  keyword = \"\",\n  customerId\n) => {\n  // If customerId is null or undefined return this\n  if (!customerId) {\n    store.dispatch(setUnitSerialNumberData([]));\n    return;\n  }\n\n  const { getState } = store;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  try {\n    const { data } = await Invoke.getUnitSerialNumber(\n      page,\n      limit,\n      keyword,\n      unitModelId,\n      customerId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitSerialNumberData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitSerialNumberProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const customerId = values.customer.split(\"|\");\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.customer_id = customerId[0];\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.description ?? \"None\";\n\n    await Invoke.addUnitSerialNumber(payload, unitModelId);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitSerialNumberProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const unitSerialNumberId =\n    getState().unitSerialNumber.selectedUnitSerialNumberId;\n\n  try {\n    const payload = {};\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.descriptions ?? \"None\";\n\n    await Invoke.updateUnitSerialNumber(\n      payload,\n      unitModelId,\n      unitSerialNumberId\n    );\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (serialNumberId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitSerialNumber(unitModelId, serialNumberId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitSerialNumber(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitSerialNumberRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitSerialNumberProcess(values);\n      } else {\n        doEditUnitSerialNumberProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitSerialNumberToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitSerialNumber.selectedUnitSerialNumberData;\n\n  dispatch(\n    change(\n      \"editUnitSerialNumberForm\",\n      `customer`,\n      `${data.customer_id}|${data.customer_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `description`, data.descriptions ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitSerialNumberForm\", `customer`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `description`, \"\"));\n};\n","import {\n  SET_UNIT_SERIAL_NUMBER_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n  SET_PAGING_UNIT_MODEL,\n} from \"./UnitSerialNumberActions\";\n\nexport const initialState = {\n  listUnitSerialNumber: [],\n  selectedUnitSerialNumberId: \"\",\n  selectedUnitSerialNumberData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitSerialNumberReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_SERIAL_NUMBER_DATA:\n      newState.listUnitSerialNumber = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_ID:\n      newState.selectedUnitSerialNumberId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_DATA:\n      newState.selectedUnitSerialNumberData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\r\nimport Invoke from \"../../../app/axios/Invoke\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport { showToast } from \"../../Roles/Store/RolesActions\";\r\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\r\n\r\nexport const SET_UNIT_JOB_FORMS_LIST_DATA = \"SET_UNIT_JOB_FORMS_LIST_DATA\";\r\nexport const SET_PAGING_UNIT_JOB_FORMS = \"SET_PAGING_UNIT_JOB_FORMS\";\r\n\r\nexport const setUnitJobFormsListData = (payload) => {\r\n  return {\r\n    type: SET_UNIT_JOB_FORMS_LIST_DATA,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setPagingUnitJobForms = (payload) => {\r\n  return {\r\n    type: SET_PAGING_UNIT_JOB_FORMS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getUnitJobFormsListDataRequested = async (jobFormId = \"\") => {\r\n  const { getState } = store;\r\n  const unitId = getState().units.selectedUnitsId;\r\n  try {\r\n    // Get data unit jobforms from API\r\n    const { data } = await Invoke.getListUnitJobForms(unitId, jobFormId);\r\n\r\n    // Store data to reducer\r\n    store.dispatch(setUnitJobFormsListData(data.callback));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import {\r\n  SET_UNIT_JOB_FORMS_LIST_DATA,\r\n  SET_PAGING_UNIT_JOB_FORMS,\r\n} from \"./UnitJobFormActions\";\r\n\r\nexport const initialState = {\r\n  listUnitJobForms: [],\r\n  paging: {\r\n    page: 1,\r\n    limit: 10,\r\n    totalPage: 0,\r\n  },\r\n};\r\n\r\nexport default function unitJobFormsReducer(state = initialState, action) {\r\n  const newState = Object.assign({}, state);\r\n\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case SET_UNIT_JOB_FORMS_LIST_DATA:\r\n      newState.listUnitJobForms = action.payload;\r\n      return { ...newState };\r\n\r\n    case SET_PAGING_UNIT_JOB_FORMS:\r\n      newState.paging = { ...state.paging, ...action.payload };\r\n      return { ...newState };\r\n  }\r\n\r\n  return state;\r\n}\r\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_WORKING_HOURS_LIST_DATA = \"SET_WORKING_HOURS_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setWorkingHoursListData = (payload) => {\n  return {\n    type: SET_WORKING_HOURS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getWorkingHoursListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().workingHours.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getWorkingHours(\n      page,\n      limit,\n      from,\n      until,\n      keyword\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListWorkingHours = [];\n\n    if (data.callback.data.length > 0) {\n      data.callback.data.map((item, index) => {\n        newListWorkingHours.push({\n          created: moment(item.created_date).format(\"YYYY-MM-DD\"),\n          done: moment(item.done_date).format(\"YYYY-MM-DD\"),\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setWorkingHoursListData(newListWorkingHours ?? []));\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n\n  if (!values) {\n    await getWorkingHoursListDataRequested(page, limit);\n    return;\n  }\n  const keyword = values.keyword ?? \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  try {\n    await getWorkingHoursListDataRequested(\n      page,\n      limit,\n      keyword,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_WORKING_HOURS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./WorkingHoursActions\";\n\nexport const initialState = {\n  listWorkingHours: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function workingHoursReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_WORKING_HOURS_LIST_DATA:\n      newState.listWorkingHours = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { combineReducers } from \"redux\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport { connectRouter } from \"connected-react-router\";\nimport { reducer as formReducer } from \"redux-form\";\nimport history from \"./History\";\nimport authReducer from \"../modules/Auth/Store/AuthReducer\";\nimport listServicesReducer from \"../modules/ListServices/Store/ListServicesReducer\";\nimport ComponentReducer from \"../modules/App/Store/ComponentReducer\";\nimport customersReducer from \"../modules/Customers/Store/CustomersReducer\";\nimport adminReducer from \"../modules/Admin/Store/AdminReducer\";\nimport rolesReducer from \"../modules/Roles/Store/RolesReducer\";\nimport employeesReducer from \"../modules/Employees/Store/EmployeesReducer\";\nimport employeeToolsReducer from \"../modules/Employees/Store/EmployeeTools/EmployeeToolsReducer\";\nimport masterDataReducer from \"../modules/MasterData/Store/MasterDataReducer\";\nimport unitReducer from \"../modules/Units/Store/UnitsReducer\";\nimport jobFormsReducer from \"../modules/JobForms/Store/JobFormsReducer\";\nimport branchReducer from \"../modules/Branch/Store/BranchReducer\";\nimport detailServiceTransactionReducer from \"../modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer\";\nimport unitModelReducer from \"../modules/Units/Store/UnitModelReducer\";\nimport externalServiceReducer from \"../modules/ExternalService/Store/ExternalServiceReducer\";\nimport identificationReducer from \"../modules/Identification/Store/IdentificationReducer\";\nimport machineConfigurationReducer from \"../modules/MachineConfiguration/Store/MachineConfigurationReducer\";\nimport toolsReducer from \"../modules/Tools/Store/ToolsReducer\";\nimport formCategoryReducer from \"../modules/FormCategory/Store/FormCategoryReducer\";\nimport unitFieldsReducer from \"../modules/Units/Store/UnitFieldsReducer\";\nimport monitoringEmployeeReducer from \"../modules/MonitoringEmployee/Store/MonitoringEmployeeReducer\";\nimport reportServiceRepairReducer from \"../modules/ReportServiceRepair/Store/ReportServiceRepairReducer\";\nimport reportEmployeeReducer from \"../modules/ReportEmployee/Store/ReportEmployeeReducer\";\nimport divisionReducer from \"../modules/Division/Store/DivisionReducer\";\nimport divisionUnitReducer from \"../modules/Division/Store/DivisionUnitReducer\";\nimport dashboardReducer from \"../modules/Dashboard/Store/DashboardReducer\";\nimport unitSerialNumberReducer from \"../modules/Units/Store/UnitSerialNumberReducer\";\nimport unitJobFormsReducer from \"../modules/Units/Store/UnitJobFormsReducer\";\nimport workingHoursReducer from \"../modules/WorkingHours/Store/WorkingHoursReducer\";\n\nconst rootReducers = combineReducers({\n  router: connectRouter(history),\n  auth: authReducer,\n  services: listServicesReducer,\n  externalService: externalServiceReducer,\n  admins: adminReducer,\n  roles: rolesReducer,\n  units: unitReducer,\n  unitModels: unitModelReducer,\n  unitFields: unitFieldsReducer,\n  unitSerialNumber: unitSerialNumberReducer,\n  unitJobForms: unitJobFormsReducer,\n  jobForms: jobFormsReducer,\n  customers: customersReducer,\n  employees: employeesReducer,\n  employeeTools: employeeToolsReducer,\n  component: ComponentReducer,\n  identification: identificationReducer,\n  workingHours: workingHoursReducer,\n  masters: masterDataReducer,\n  branch: branchReducer,\n  formCategory: formCategoryReducer,\n  tools: toolsReducer,\n  machineConfiguration: machineConfigurationReducer,\n  detailService: detailServiceTransactionReducer,\n  monitoringEmployee: monitoringEmployeeReducer,\n  serviceRepair: reportServiceRepairReducer,\n  reportEmployee: reportEmployeeReducer,\n  division: divisionReducer,\n  divisionUnit: divisionUnitReducer,\n  dashboard: dashboardReducer,\n  form: formReducer,\n  toastr: toastrReducer,\n});\n\nexport default rootReducers;\n","import * as _ from \"lodash\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport Saga from \"./Saga/SagaMiddleware\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport history from \"../app/History\";\nimport rootReducers from \"./RootReducers\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"form\", \"component\"],\n};\n\nconst resetEnhancer = (rootReducer) => (state, action) => {\n  if (action.type !== \"LOGOUT\") {\n    return rootReducer(state, action);\n  } else {\n    const newState = rootReducer(undefined, {});\n    newState.router = state.router;\n    return newState;\n  }\n};\n\nconst persistedReducer = persistReducer(\n  persistConfig,\n  resetEnhancer(rootReducers)\n);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== \"production\" &&\n  typeof window === \"object\" &&\n  _.has(window, \"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\")\n    ? composeWithDevTools({ trace: true, traceLimit: 1000 })\n    : compose;\n\nexport const store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n);\nexport const persistor = persistStore(store);\nsagaMiddleware.run(Saga);\n","import { Form } from \"antd\";\nconst FormItem = Form.Item;\n\nexport const makeField =\n  (Component, props) =>\n  ({ style, input, meta, children, hasFeedback, label, ...rest }) => {\n    const hasError = meta.touched && meta.invalid;\n    return (\n      <FormItem\n        validateStatus={hasError ? \"error\" : \"success\"}\n        hasFeedback={hasFeedback && hasError}\n        help={hasError && meta.error}\n      >\n        <Component {...props} {...input} {...rest} children={children} />\n      </FormItem>\n    );\n  };\n","import React from \"react\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport styled from \"styled-components\";\ninterface IProps {\n  loading: boolean;\n}\n\nconst Overlay = styled.div`\n  position: fixed;\n  display: block;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 99999;\n  padding-top: 23vh;\n  text-align: center;\n  margin: auto;\n  display: block;\n`;\n\nconst CGlobalOverlay: React.FC<IProps> = (props) => {\n  const { loading } = props;\n  if (loading) {\n    return (\n      <Overlay>\n        <ScaleLoader\n          height={120}\n          width={18}\n          radius={12}\n          margin={5}\n          color={\"#faad14\"}\n          loading={true}\n        />\n      </Overlay>\n    );\n  }\n  return null;\n};\n\nexport default CGlobalOverlay;\n","import React from \"react\";\n\nconst Sidebar = ({\n  role,\n  mainMenu,\n  masterDataMenu,\n  reportMenu,\n  serviceRepairMenu,\n  reportDataMenu,\n}) => {\n  return (\n    <div>\n      <nav class=\"sidebar\">\n        <div class=\"sidebar-header\">\n          <a href=\"#\" class=\"sidebar-brand\">\n            Rutan<span>Admin</span>\n          </a>\n          <div class=\"sidebar-toggler not-active\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </div>\n        <div class=\"sidebar-body\">\n          <ul class=\"nav\">\n            {mainMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Main</li>\n            )}\n            {mainMenu?.length > 0 &&\n              mainMenu.map((item, index) => (\n                <li key={`sidebar-main-menu-${index}`} class=\"nav-item\">\n                  <a href={item.path} class=\"nav-link\">\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {masterDataMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Master Data</li>\n            )}\n            {masterDataMenu?.length > 0 &&\n              masterDataMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {serviceRepairMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Service Repair</li>\n            )}\n            {serviceRepairMenu?.length > 0 &&\n              serviceRepairMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {reportMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Monitoring</li>\n            )}\n            {reportMenu?.length > 0 &&\n              reportMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {reportDataMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Laporan</li>\n            )}\n            {reportDataMenu?.length > 0 &&\n              reportDataMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer class=\"footer d-flex flex-column flex-md-row align-items-center justify-content-between\">\n      <p class=\"text-muted text-center text-md-left\">\n        Copyright © {new Date().getFullYear() + \" \"}\n        <a href=\"#\">Rutan Team</a>. All rights reserved\n      </p>\n      <p class=\"text-muted text-center text-md-left mb-0 d-none d-md-block\">\n        Handcrafted With{\" \"}\n        <i class=\"mb-1 text-primary ml-1 icon-small\" data-feather=\"heart\"></i>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Navbar = (props) => {\n  const { onLogout, userDetail } = props;\n  return (\n    <nav class=\"navbar\">\n      <a href=\"#\" class=\"sidebar-toggler\">\n        <i data-feather=\"menu\"></i>\n      </a>\n      <div class=\"navbar-content\">\n        <form class=\"search-form\">\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <div class=\"input-group-text\">\n                <i data-feather=\"search\"></i>\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"navbarForm\"\n              placeholder=\"Search here...\"\n            />\n          </div>\n        </form>\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item dropdown nav-messages\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"messageDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"mail\"></i>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"messageDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">9 New Messages</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Leonardo Payne</p>\n                      <p class=\"sub-text text-muted\">2 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project status</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Carl Henson</p>\n                      <p class=\"sub-text text-muted\">30 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Client meeting</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Jensen Combs</p>\n                      <p class=\"sub-text text-muted\">1 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project updates</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>{userDetail.fullname}</p>\n                      <p class=\"sub-text text-muted\">2 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project deadline</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Yaretzi Mayo</p>\n                      <p class=\"sub-text text-muted\">5 hr ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">New record</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-notifications\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"notificationDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"bell\"></i>\n              <div class=\"indicator\">\n                <div class=\"circle\"></div>\n              </div>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"notificationDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">6 New Notifications</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"user-plus\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New customer registered</p>\n                    <p class=\"sub-text text-muted\">2 sec ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"gift\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New Order Recieved</p>\n                    <p class=\"sub-text text-muted\">30 min ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"alert-circle\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Server Limit Reached!</p>\n                    <p class=\"sub-text text-muted\">1 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"layers\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Apps are ready for update</p>\n                    <p class=\"sub-text text-muted\">5 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"download\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Download completed</p>\n                    <p class=\"sub-text text-muted\">6 hrs ago</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-profile\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"profileDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"https://via.placeholder.com/30x30\" alt=\"profile\" />\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"profileDropdown\">\n              <div class=\"dropdown-header d-flex flex-column align-items-center\">\n                {/* <div class=\"figure mb-3\">\n                  <img src=\"https://via.placeholder.com/80x80\" alt=\"\" />\n                </div> */}\n                <div class=\"info text-center\">\n                  <p class=\"name font-weight-bold mb-0\">\n                    {userDetail.fullname\n                      ? userDetail.fullname.toUpperCase()\n                      : \"Anonym\"}\n                  </p>\n                  <p class=\"email text-muted mb-3\">\n                    {userDetail.roles.map((item) => {\n                      if (userDetail.roles.length > 1) {\n                        return `${item.name},`;\n                      }\n                      return item.name;\n                    })}\n                  </p>\n                </div>\n              </div>\n              <div class=\"dropdown-body\">\n                <ul class=\"profile-nav p-0 pt-3\">\n                  <li class=\"nav-item\">\n                    <a href=\"pages/general/profile.html\" class=\"nav-link\">\n                      <i data-feather=\"user\"></i>\n                      <span>Profile</span>\n                    </a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a onClick={onLogout} class=\"nav-link cursor-pointer\">\n                      <i data-feather=\"log-out\"></i>\n                      <span>Log Out</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport CGlobalOverlay from \"../../../components/CGlobalOverlay/CGlobalOverlay\";\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport Navbar from \"../../../components/Navbar/Navbar\";\n\nconst TemplateComponent = (props) => {\n  const {\n    children,\n    isGlobalLoading,\n    isLandingPage,\n    logout,\n    userDetail,\n    role,\n    mainMenu,\n    masterDataMenu,\n    reportMenu,\n    serviceRepairMenu,\n    reportDataMenu,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <CGlobalOverlay loading={isGlobalLoading} />\n      {isLandingPage && (\n        <Sidebar\n          role={role}\n          masterDataMenu={masterDataMenu}\n          mainMenu={mainMenu}\n          reportMenu={reportMenu}\n          serviceRepairMenu={serviceRepairMenu}\n          reportDataMenu={reportDataMenu}\n        />\n      )}\n      <div className={`page-wrapper ${!isLandingPage ? \"full-page\" : \"\"}`}>\n        {isLandingPage && <Navbar onLogout={logout} userDetail={userDetail} />}\n        {children}\n        {isLandingPage && <Footer />}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TemplateComponent;\n","import { createSelector } from \"reselect\";\n\nconst selectorAuth = (state) => state.auth;\n\n// SELECTOR FOR AUTH\nexport const AllAuthData = () => createSelector(selectorAuth, (state) => state);\nexport const Token = () =>\n  createSelector(selectorAuth, (state) => state.accessToken);\nexport const UserDetail = () =>\n  createSelector(selectorAuth, (state) => state.userDetail);\nexport const ErrorData = () =>\n  createSelector(selectorAuth, (state) => state.error);\nexport const UserRole = () =>\n  createSelector(selectorAuth, (state) => state?.userDetail?.roles);\n  export const UserMenus = () =>\n  createSelector(selectorAuth, (state) => state?.userDetail?.menus);\n","import { createSelector } from \"reselect\";\n\nconst selectorComponent = (state) => state.component;\n\nexport const IsGlobalLoading = () =>\n  createSelector(selectorComponent, (state) => state.isLoadingGlobal);\n","import React from \"react\";\nimport { compose } from \"redux\";\n\nimport TemplateComponent from \"../Component/TemplateComponent\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as authActions from \"../../Auth/Store/AuthAction\";\nimport * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\nimport * as AppSelector from \"../../App/Selector/AppSelector\";\n\nconst TemplateContainer = (props) => {\n  const [role, setRole] = React.useState(\"\");\n  const { userDetail } = props;\n\n  React.useEffect(() => {\n    if (userDetail && userDetail.role) {\n      setRole(userDetail.role[0].name);\n    }\n  }, [userDetail]);\n\n  const getIconName = (menu) => {\n    switch (menu) {\n      case \"/dashboard\":\n        return \"command\";\n\n      case \"/admin\":\n        return \"user\";\n\n      case \"/cabang\":\n        return \"link\";\n\n      case \"/employees\":\n        return \"users\";\n\n      case \"/customer\":\n        return \"users\";\n\n      case \"/division\":\n        return \"briefcase\";\n\n      case \"/role\":\n        return \"key\";\n\n      case \"/tools\":\n        return \"tool\";\n\n      case \"/machine\":\n        return \"settings\";\n\n      case \"/jobforms\":\n        return \"file-text\";\n\n      case \"/category\":\n        return \"file-text\";\n\n      case \"/unit\":\n        return \"box\";\n\n      case \"/internal-service\":\n        return \"file-plus\";\n\n      case \"/external-service\":\n        return \"file-plus\";\n\n      case \"/list_service\":\n        return \"list\";\n\n      case \"/monitoring-employee\":\n        return \"monitor\";\n\n      case \"/identification\":\n        return \"list\";\n\n      case \"/report_trans\":\n        return \"list\";\n\n      case \"/report_identification\":\n        return \"list\";\n\n      case \"/report_employee\":\n        return \"list\";\n\n      case \"/working-hours\":\n        return \"clock\";\n\n      default:\n        return \"command\";\n    }\n  };\n\n  const mainMenu = [];\n  const masterDataMenu = [];\n  const reportMenu = [];\n  const serviceRepairMenu = [];\n  const reportDataMenu = [];\n\n  if (userDetail) {\n    userDetail.menus.map((item, index) => {\n      let menu = {};\n      menu.icon = getIconName(item.path);\n      menu.name = item.menu;\n      menu.path = item.path;\n\n      if (\n        item.path === \"/admin\" ||\n        item.path === \"/cabang\" ||\n        item.path === \"/employees\" ||\n        item.path === \"/customer\" ||\n        item.path === \"/division\" ||\n        item.path === \"/role\" ||\n        item.path === \"/tools\" ||\n        item.path === \"/machine\" ||\n        item.path === \"/jobforms\" ||\n        item.path === \"/category\" ||\n        item.path === \"/unit\" ||\n        item.path === \"/identification\"\n      ) {\n        masterDataMenu.push(menu);\n      } else if (\n        item.path === \"/internal-service\" ||\n        item.path === \"/external-service\" ||\n        item.path === \"/list_service\"\n      ) {\n        serviceRepairMenu.push(menu);\n      } else if (item.path === \"/monitoring-employee\") {\n        reportMenu.push(menu);\n      } else if (\n        item.path === \"/report_trans\" ||\n        item.path === \"/report_employee\" ||\n        item.path === \"/report_identification\" ||\n        item.path === \"/working-hours\"\n      ) {\n        reportDataMenu.push(menu);\n      } else {\n        mainMenu.push(menu);\n      }\n    });\n  }\n\n  return (\n    <TemplateComponent\n      role={role}\n      mainMenu={mainMenu}\n      masterDataMenu={masterDataMenu}\n      reportMenu={reportMenu}\n      serviceRepairMenu={serviceRepairMenu}\n      reportDataMenu={reportDataMenu}\n      {...props}\n    />\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  isGlobalLoading: AppSelector.IsGlobalLoading(),\n  userDetail: AuthSelector.UserDetail(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => {\n    authActions.doLogout(dispatch);\n  },\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(TemplateContainer);\n","import * as React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\n\nconst withTemplate = (Template, WrappedComponent, isLandingPage) => {\n  const AddedTemplate = (props) => {\n    return (\n      <Template {...props} isLandingPage={isLandingPage}>\n        <WrappedComponent {...props} />\n      </Template>\n    );\n  };\n\n  return hoistNonReactStatics(AddedTemplate, WrappedComponent);\n};\n\nexport default withTemplate;\n","import React from \"react\";\nimport { Button } from \"antd\";\n\ninterface IProps {\n  onClick: any;\n  disabled: boolean;\n  isLoading: boolean;\n  backgroundColor: string;\n  icon: any;\n  shape: \"default\" | \"circle\" | \"round\";\n  type: \"primary\" | \"dashed\" | \"default\" | \"ghost\" | \"link\" | \"text\";\n  size: \"middle\" | \"small\" | \"large\";\n  danger: boolean;\n  block: boolean;\n}\n\nconst CButtonAntd: React.FC<IProps> = (props) => {\n  const {\n    onClick,\n    children,\n    isLoading,\n    disabled,\n    icon,\n    shape,\n    type,\n    size,\n    danger,\n    backgroundColor,\n  } = props;\n  return (\n    <Button\n      style={{\n        backgroundColor: backgroundColor,\n        borderColor: backgroundColor,\n      }}\n      block={props.block ?? false}\n      icon={icon ?? null}\n      type={type ?? \"default\"}\n      shape={shape ?? \"default\"}\n      onClick={onClick}\n      disabled={disabled}\n      loading={isLoading}\n      size={size ?? \"middle\"}\n      danger={danger}\n    >\n      {isLoading ? \"Loading\" : children}\n    </Button>\n  );\n};\n\nexport default CButtonAntd;\n","import { Table } from \"antd\";\nimport React from \"react\";\nimport '../../../app/style/tableStyle.css'\n\nconst DashboardComponent = (props) => {\n  const { userDetail, headers, listServices, dashboard } = props;\n  return (\n    <div>\n      <div class=\"page-content\">\n        <div class=\"d-flex justify-content-between align-items-center flex-wrap grid-margin\">\n          <h4 class=\"mt-5 ml-2\">{`Hallo, ${\n            userDetail.fullname ?? \"Anonym\"\n          }`}</h4>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12 col-xl-12 stretch-card\">\n            <div class=\"row flex-grow\">\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Customer</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-12 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalCustomer}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Service Internal</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-6 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalInternalService}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Service External</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-6 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalExternalService}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Identifikasi</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-6 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalIdentification}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12 col-xl-12 grid-margin stretch-card\"></div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-lg-12 col-xl-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between align-items-baseline mb-2\">\n                  <h6 class=\"card-title mb-0\">10 Service Terbaru</h6>\n                </div>\n                <p class=\"text-muted mb-4\">\n                  Menampilkan 10 service berdasarkan tanggal terbaru\n                </p>\n                {/* <div class=\"monthly-sales-chart-wrapper\"> */}\n                {/* <canvas id=\"monthly-sales-chart\"></canvas> */}\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      // ...pagination,\n                    }}\n                  />\n                </div>\n                {/* </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardComponent;\n","import * as AdminActions from \"../modules/Admin/Store/AdminActions\";\nimport * as RoleActions from \"../modules/Roles/Store/RolesActions\";\nimport * as MasterDataActions from \"../modules/MasterData/Store/MasterDataActions\";\nimport * as BranchActions from \"../modules/Branch/Store/BranchActions\";\nimport * as UnitsActions from \"../modules/Units/Store/UnitsActions\";\nimport * as MachineConfigurationActions from \"../modules/MachineConfiguration/Store/MachineConfigurationActions\";\n\nexport const initializeApp = async () => {\n  await AdminActions.getListAdminRequested(1, 10);\n  await RoleActions.getListRolesRequested();\n  await MasterDataActions.loadMenuListData();\n  await MasterDataActions.loadProvinceListData();\n  await BranchActions.getBranchListDataRequested(1, 10);\n  await UnitsActions.getUnitListDataRequested(1, 10);\n  await MachineConfigurationActions.getMachineListDataRequested(1, 10);\n};\n","import { Space, Tag } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport DashboardComponent from \"../Component/DashboardComponent\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\nimport { getDashboardProgressData } from \"../Store/DashboardActions\";\nimport { initializeApp } from \"../../../app/InitializeApp\";\n\nconst DashboardContainer = (props) => {\n  const {\n    handlePressEdit,\n    auth: { userDetail },\n    services: { dashboardListServices },\n    dashboard: { dashboardData },\n  } = props;\n  if (dashboardListServices.length > 0) {\n    dashboardListServices.map((item, index) => {\n      dashboardListServices[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  React.useEffect(() => {\n    initializeApp();\n    store.dispatch(setGlobalLoading(false));\n    ListServiceActions.getTopTenService();\n    getDashboardProgressData();\n  }, []);\n\n  if (Object.keys(dashboardData).length > 0) {\n    dashboardData.totalCustomer = dashboardData.totalCustomer\n      ? dashboardData.totalCustomer.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalInternalService = dashboardData.totalCustomer\n      ? dashboardData.totalInternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalExternalService = dashboardData.totalExternalService\n      ? dashboardData.totalExternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalIdentification = dashboardData.totalIdentification\n      ? dashboardData.totalIdentification.toLocaleString(\"en-US\")\n      : 0;\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"15%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"40%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: \"15%\",\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: \"15%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  return (\n    <DashboardComponent\n      userDetail={userDetail}\n      headers={headers}\n      listServices={dashboardListServices}\n      dashboard={dashboardData}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  services: state.services,\n  dashboard: state.dashboard,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContainer);\n","import React from \"react\";\n\ninterface IProps {\n  onChange: any;\n  value: string;\n  label: string;\n  name: string;\n  placeholder: string;\n  type: string;\n  typeComponent: string;\n  input: any;\n  error: boolean;\n  message: string;\n  meta: { error: any; touched: any };\n  disabled: boolean;\n  maxLength: number;\n  rows: number;\n  key: string;\n  labelSize: number;\n  linebreak: boolean;\n  onKeyDown: any;\n}\n\nconst CInput: React.FC<IProps> = (props) => {\n  switch (props.typeComponent) {\n    case \"textarea\":\n      return (\n        <div className=\"form-group\">\n          <label htmlFor={props.name}>{props.label}</label>\n          <textarea\n            style={{ whiteSpace: props.linebreak ? \"pre-line\" : \"normal\" }}\n            key={props.key ?? \"\"}\n            id={props.name}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            maxLength={props.maxLength ?? 250}\n            rows={props.rows ?? 8}\n            name={props.name}\n            onChange={props.onChange}\n            onKeyDown={props.onKeyDown}\n            placeholder={props.placeholder ?? \"\"}\n            value={props.value}\n            {...props.input}\n          ></textarea>\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n    default:\n      return (\n        <div className=\"form-group\">\n          <label\n            htmlFor={props.name}\n            style={{ fontSize: props.labelSize ?? 14 }}\n          >\n            {props.label}\n          </label>\n          <input\n            id={props.name}\n            maxLength={props.maxLength ?? 250}\n            value={props.value}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            name={props.name}\n            type={props.type}\n            onChange={props.onChange}\n            placeholder={props.placeholder ?? \"\"}\n            disabled={props.disabled ?? false}\n            {...props.input}\n          />\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n  }\n};\n\nexport default CInput;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\n\nconst LoginComponent = (props) => {\n  const { handleSubmit, submitForm, error } = props;\n\n  return (\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto\">\n          <div class=\"card\">\n            <div class=\"row\">\n              <div class=\"col-md-4 pr-md-0\">\n                <div class=\"auth-left-wrapper\"></div>\n              </div>\n              <div class=\"col-md-8 pl-md-0\">\n                <div class=\"auth-form-wrapper px-4 py-5\">\n                  <a href=\"#\" class=\"noble-ui-logo d-block mb-2\">\n                    Rutan<span>Admin</span>\n                  </a>\n                  <h5 class=\"text-muted font-weight-normal mb-4\">\n                    Selamat datang! Silahkan login dengan akun anda.\n                  </h5>\n                  <form\n                    class=\"forms-sample\"\n                    onSubmit={handleSubmit(submitForm)}\n                  >\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"username\"\n                        label=\"Username\"\n                        placeholder=\"Username\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder=\"Password\"\n                        component={CInput}\n                        type=\"password\"\n                      />\n                    </div>\n\n                    {error.status && (\n                      <span className=\"mt-2 text-danger\">{error.message}</span>\n                    )}\n\n                    <div class=\"mt-3\">\n                      <button\n                        type=\"submit\"\n                        class=\"btn btn-primary mr-2 mb-2 mb-md-0 text-white\"\n                      >\n                        Login\n                      </button>\n                    </div>\n                    <a href=\"register.html\" class=\"d-block mt-3 text-muted\">\n                      Belum punya akun? Daftar\n                    </a>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginComponent;\n","export const validateFormLogin = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Username wajib diisi!\";\n  } else if (values.username.length < 4) {\n    errors.username = \"Minimal 4 karakter atau lebih\";\n  }\n  if (!values.password) {\n    errors.password = \"Password wajib diisi!\";\n  } else if (values.password.length < 5) {\n    errors.password = \"Minimal 5 karakter atau lebih\";\n  }\n  return errors;\n};\n\nexport const validateFormInternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n};\n\nexport const validateFormExternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.jobForm) {\n    errors.jobForm = \"Job Form wajib diisi!\";\n  }\n  if (!values.warranty) {\n    errors.warranty = \"Job Form wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n  return errors;\n};\n\nexport const validateFormRoles = (values) => {\n  const errors = {};\n  if (!values.description) {\n    errors.description = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormCategory = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Judul wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnit = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Unit wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnitModel = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Model wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTools = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama peralatan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormEmployee = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama wajib diisi!\";\n  }\n  if (!values.phone) {\n    errors.phone = \"No. Telpon wajib diisi!\";\n  }\n  if (!values.province) {\n    errors.province = \"Wajib pilih provinsi!\";\n  }\n  if (!values.city) {\n    errors.city = \"Wajib pilih kota!\";\n  }\n  if (!values.branch) {\n    errors.branch = \"Wajib pilih cabang!\";\n  }\n  if (!values.address) {\n    errors.address = \"Wajib isi alamat!\";\n  }\n  return errors;\n};\n\nexport const validateServiceEmployeeForm = (values) => {\n  const errors = {};\n  if (!values.employee) {\n    errors.employee = \"Karyawan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionForm = (values) => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = \"Judul wajib diisi!\";\n  }\n  if (!values.headDivision) {\n    errors.headDivision = \"Kepala divisi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionUnitForm = (values) => {\n  const errors = {};\n  if (!values.unit) {\n    errors.unit = \"Unit wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateEmployeeToolsForm = (values) => {\n  const errors = {};\n  if (!values.tools) {\n    errors.tools = \"Peralatan wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateFormRejected = (values) => {\n  const errors = {};\n  if (!values.reson) {\n    errors.reson = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTransaction = (values) => {\n  const errors = {};\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormEditMedia = (values) => {\n  const errors = {};\n  if (!values.imageUrl) {\n    errors.imageUrl = \"Field ini wajib diisi!\";\n  }\n  if (!values.title) {\n    errors.title = \"Field ini wajib diisi!\";\n  }\n  if (!values.unit) {\n    errors.unit = \"Wajib pilih unit!\";\n  }\n\n  return errors;\n};\n\nexport const validateUnitSerialNumberForm = (values) => {\n  const errors = {};\n  if (!values.customer) {\n    errors.customer = \"Wajib memilih customer!\";\n  }\n  if (!values.serialNumber) {\n    errors.serialNumber = \"Serial number wajib diisi!\";\n  }\n  if (!values.descriptions) {\n    errors.descriptions = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n","import React from \"react\";\nimport LoginComponent from \"../Component/LoginComponent\";\nimport { reduxForm, reset } from \"redux-form\"; // imported Field\nimport { connect } from \"react-redux\";\nimport * as AuthActions from \"../Store/AuthAction\";\nimport * as AuthSelector from \"../Selector/AuthSelector\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport { createStructuredSelector } from \"reselect\";\nimport { navigate } from \"../../../app/Helpers\";\n\nconst LoginContainer = (props) => {\n  const { valid } = props;\n\n  const submitForm = (values) => {\n    // navigate(\"/preview-pdf\");\n    if (valid) {\n      AuthActions.handleSubmitLogin(values);\n    }\n  };\n\n  return <LoginComponent submitForm={submitForm} {...props} />;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  auth: AuthSelector.AllAuthData(),\n  error: AuthSelector.ErrorData(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"loginForm\"));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginContainer);\n\nexport default reduxForm({\n  form: \"loginForm\",\n  validate: validateForm.validateFormLogin,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport { Field } from \"redux-form\";\nimport { makeField } from \"../../app/FormHelpers\";\n\nconst { Option } = Select;\nconst ASelect = makeField(Select);\n\nconst CSelect = (props) => {\n  return (\n    <div>\n      <label htmlFor={props.name}>{props.label}</label>\n      <br />\n      <Field\n        style={{ width: \"100%\" }}\n        showSearch={props.showSearch ?? false}\n        name={props.name}\n        component={ASelect}\n        onChange={props.onChange}\n        onBlur={(e) => {\n          if (props.onBlur) {\n            props.onBlur();\n          }\n          e.preventDefault();\n        }}\n        {...props}\n      >\n        <Option disabled={props.disabled ?? false} value=\"\">\n          {props.placeholder ?? \"- Pilih -\"}\n        </Option>\n        {props.data.length > 0 &&\n          props.data.map((item, index) => {\n            return (\n              <Option\n                value={`${item.value}|${item.label}`}\n                key={`option-${index}`}\n              >\n                {item.label}\n              </Option>\n            );\n          })}\n      </Field>\n    </div>\n  );\n};\n\nexport default CSelect;\n","import React from \"react\";\nimport { DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { Field } from \"redux-form\";\n\nconst RenderDatePicker = (props) => {\n  const { name, input, label, meta } = props;\n\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n      <br />\n      <DatePicker\n        placeholder=\"Pilih Tanggal\"\n        style={{ width: \"100%\" }}\n        name={name}\n        onBlur={(e) => {\n          e.preventDefault();\n        }}\n        defaultValue={moment()}\n        {...input}\n      />\n      {meta.touched && meta.error && (\n        <span className=\"mt-2 text-danger\">\n          {meta.error ?? \"This field required\"}\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst CDatePicker = (props) => {\n  return (\n    <Field\n      component={RenderDatePicker}\n      onBlur={(e) => {\n        e.preventDefault();\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default CDatePicker;\n","import React from \"react\";\n\ninterface IProps {\n  type: \"submit\" | \"button\" | \"reset\";\n  onClick: any;\n  isLoading: boolean;\n}\n\nconst CButton: React.FC<IProps> = (props) => {\n  const { type, isLoading, onClick, children } = props;\n  return (\n    <button\n      onClick={onClick}\n      className=\"btn btn-primary\"\n      type={type}\n      disabled={isLoading}\n    >\n      {isLoading && (\n        <span\n          className=\"spinner-grow spinner-grow-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        ></span>\n      )}\n      {isLoading ? \"Loading...\" : children}\n    </button>\n  );\n};\n\nexport default CButton;\n","import React from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\n\nconst InternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    isLoadingFormGlobal,\n  } = props;\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({ employee: \"\" })}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah Internal Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan internal service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-4 mt-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                      />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12 mt-2\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      {/* <input\n                        class=\"btn btn-primary\"\n                        type=\"submit\"\n                        value=\"Simpan\"\n                      /> */}\n                      <CButton type=\"submit\" isLoading={isLoadingFormGlobal}>\n                        Simpan\n                      </CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InternalServiceComponent;\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nconst getCityByIdFromReducer = async (cityId) => {\n  const { getState } = store;\n  const { listCity } = getState().masters;\n  const result = listCity.filter((x) => x.id === cityId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"internalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n    return;\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    await MasterDataActions.loadCityListData(employeeData.province_id);\n\n    const cityData = await getCityByIdFromReducer(employeeData.city_id);\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        cityData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        cityData\n      )\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"internalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"internalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    console.log(\"=== City : \", cityData);\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"false\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: \"false\",\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              navigate(\"list_service\");\n              resolve();\n            }, 1000);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, reset } from \"redux-form\";\nimport InternalServiceComponent from \"../Component/InternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as InternalServiceActions from \"../Store/InternalServiceActions\";\nimport * as ComponentAction from \"../../App/Store/ComponentAction\";\nimport { enumTypeInternalServices } from \"../../../app/Helpers\";\n\nconst InternalServiceContainer = (props) => {\n  const {\n    valid,\n    customers: { listCustomersDropdown, paging, keyowrd },\n    employees: { listEmployees },\n    component: { isLoadingFormGlobal },\n  } = props;\n\n  const { page, limit } = paging;\n\n  const submitForm = (values) => {\n    if (valid) {\n      InternalServiceActions.handleSubmitForm(values);\n    } else {\n    }\n  };\n\n  React.useEffect(() => {\n    // Reset all form data and loading when first load data\n    ComponentAction.resetAllGlobalLoadingProcess();\n    // resetForm();\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    EmployeeActions.loadEmployeeListData(1, 999999);\n    MasterDataActions.loadProvinceListData();\n    // MasterDataActions.loadCityListData();\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <InternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      enumType={enumTypeInternalServices}\n      submitForm={submitForm}\n      isLoadingFormGlobal={isLoadingFormGlobal}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"internalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      InternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    InternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n    if (!customerId) {\n      InternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    InternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InternalServiceContainer);\n\nexport default reduxForm({\n  form: \"internalServiceForm\",\n  validate: validateForm.validateFormInternalService,\n  initialValues: {\n    employees: [],\n  },\n})(EnhanceContainer);\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport { getUnitModelEnum } from \"../../../app/Helpers\";\n\nconst ExternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    enumWarranty,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    listUnit,\n    enumJobForms,\n    handleAutoPopulateUnitModel,\n    externalValues,\n    onChangeUnitModel,\n    handleChangeType,\n    isTroubleShoot,\n  } = props;\n\n  const renderUnits = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Unit\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Unit ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-units-${indexUnit}`}\n                    onChange={(val) =>\n                      handleAutoPopulateUnitModel(val, indexUnit)\n                    }\n                    data={listUnit}\n                    name={`${itemUnit}.id`}\n                    label=\"Pilih Unit\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-model-${indexUnit}`}\n                    data={\n                      externalValues[indexUnit].enumUnitModel\n                        ? getUnitModelEnum(\n                            externalValues[indexUnit].enumUnitModel\n                          )\n                        : []\n                    }\n                    name={`${itemUnit}.unitModelId`}\n                    onChange={(val) => {\n                      if (externalValues[indexUnit].enumUnitModel.length > 0) {\n                        onChangeUnitModel(\n                          val,\n                          indexUnit,\n                          externalValues[indexUnit].enumUnitModel\n                        );\n                      }\n                    }}\n                    label=\"Model\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    key={`serial-number-${indexUnit}`}\n                    name={`${itemUnit}.unitModelSerialNumber`}\n                    label=\"Serial Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah External Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan external service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                        onChange={handleChangeType}\n                      />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                    <div class=\"col-md-2\">\n                      {!isTroubleShoot && (\n                        <CSelect\n                          data={enumJobForms}\n                          name=\"jobForm\"\n                          label=\"Job Form\"\n                        />\n                      )}\n                    </div>\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumWarranty}\n                        name=\"warranty\"\n                        label=\"Warranty\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu unit.\n                    </p>\n                  </div>\n                  <FieldArray name=\"units\" component={renderUnits} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      <CButton type=\"submit\">Simpan</CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExternalServiceComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  change,\n  formValueSelector,\n  getFormValues,\n  reduxForm,\n  reset,\n} from \"redux-form\";\nimport ExternalServiceComponent from \"../Component/ExternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ExternalServiceActions from \"../Store/ExternalServiceActions\";\nimport * as UnitsActions from \"../../Units/Store/UnitsActions\";\nimport * as JobFormsActions from \"../../JobForms/Store/JobFormsActions\";\nimport { enumTypeExternalServices, enumWarranty } from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"externalServiceForm\");\n\nconst ExternalServiceContainer = (props) => {\n  const [unitQty, setUnitQty] = React.useState(1);\n  const [unitData, setUnitData] = React.useState([]);\n  const [isTroubleShoot, setIsTroubleShoot] = React.useState(false);\n\n  const {\n    valid,\n    customers: { listCustomersDropdown },\n    employees: { listEmployees },\n    units: { listUnits },\n    jobForms: { listJobForms },\n    resetForm,\n    // form: { externalServiceForm },\n  } = props;\n\n  const submitForm = (values) => {\n    ExternalServiceActions.handleSubmitForm(values);\n    if (valid) {\n      console.log(\"success\");\n    }\n  };\n\n  const handleAddNewUnit = () => {\n    if (unitQty === 5) {\n      return;\n    }\n    setUnitQty(unitQty + 1);\n  };\n\n  const handleSubtractUnit = () => {\n    if (unitQty === 0) {\n      return;\n    }\n    setUnitQty(unitQty - 1);\n  };\n\n  const SelectUnit = [];\n  listUnits.map((item, index) => {\n    SelectUnit.push({\n      id: `unit-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    EmployeeActions.loadEmployeeListData(1, 99999);\n    MasterDataActions.loadProvinceListData();\n    return () => {\n      resetForm();\n    };\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectJobFormsData = [];\n  listJobForms.map((item, index) => {\n    SelectJobFormsData.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const handleChangeType = (val) => {\n    const type = val.split(\"|\");\n    if (\n      type[0] === \"T2\" ||\n      type[0] === \"T4\" ||\n      type[0] === \"T5\" ||\n      type[0] === \"T6\"\n    ) {\n      setIsTroubleShoot(true);\n    } else {\n      setIsTroubleShoot(false);\n    }\n  };\n\n  React.useEffect(() => {\n    UnitsActions.getUnitListDataRequested(1, 100);\n    JobFormsActions.getJobFormsListDataRequested(1, 100);\n    let totalUnit = [];\n    for (let i = 0; i < unitQty; i++) {\n      totalUnit.push(i);\n    }\n    setUnitData(totalUnit);\n  }, [unitQty]);\n\n  return (\n    <ExternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      listUnit={SelectUnit}\n      enumJobForms={SelectJobFormsData}\n      enumType={enumTypeExternalServices}\n      enumWarranty={enumWarranty}\n      submitForm={submitForm}\n      handleAddNewUnit={handleAddNewUnit}\n      handleSubtractUnit={handleSubtractUnit}\n      unitData={unitData}\n      handleChangeType={handleChangeType}\n      isTroubleShoot={isTroubleShoot}\n      // selectedUnitModelList={selectedUnitModelList}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  units: state.units,\n  jobForms: state.jobForms,\n  formValues: getFormValues(\"externalServiceForm\")(state),\n  externalValues: selector(state, \"units\"),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"externalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      ExternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n\n    if (!customerId) {\n      ExternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n  handleAutoPopulateUnitModel: (unitId, fieldIndex) => {\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].enumUnitModel`, [])\n    );\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].unitModelId`, \"\")\n    );\n    if (unitId) {\n      const arrVal = unitId.split(\"|\");\n      ExternalServiceActions.setAutoPopulateUnitModel(arrVal[0], fieldIndex);\n    }\n  },\n  onChangeUnitModel: (val, index, enumModel) => {\n    if (val) {\n      ExternalServiceActions.onChangeUnitModel(val, index, enumModel);\n    }\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExternalServiceContainer);\n\nexport default reduxForm({\n  form: \"externalServiceForm\",\n  validate: validateForm.validateFormExternalService,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryMonitoringServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst MonitoringEmployeeComponent = (props) => {\n  const {\n    headers,\n    listMonitoringEmployee,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumTypeReport,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Monitoring Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryMonitoringServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumTypeReport ?? []}\n                      name=\"type\"\n                      label=\"Tipe\"\n                    />\n                  </div>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                      placeholder=\"-Pilih Semua-\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Laporan\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listMonitoringEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MonitoringEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as MonitoringEmployeeActions from \"../Store/MonitoringEmployeeActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport MonitoringEmployeeComponent from \"../Component/MonitoringEmployeeComponent\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Tag } from \"antd\";\nimport { exportMonitoringEmployeePdf } from \"../Store/MonitoringEmployeeReport\";\nimport moment from \"moment\";\n\nconst MonitoringEmployeeContainer = (props) => {\n  const {\n    getListMonitoringEmployee,\n    handlePressAddNew,\n    monitoringEmployee: { listMonitoringEmployee, paging },\n    branch: { listBranchDropdown },\n    monitoringEmployeeFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMonitoringEmployee.length > 0) {\n    listMonitoringEmployee.map((item, index) => {\n      listMonitoringEmployee[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const printedData = {\n    listMonitoringEmployee,\n    from: moment(),\n    until: moment(),\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"job_type\",\n      key: \"job_type\",\n      render: (jobType) => {\n        let color = jobType === \"loss\" ? \"#f50\" : \"#f50\";\n        return (\n          <Tag style={{ width: 115, textAlign: \"center\" }} color={color}>\n            {jobType ? jobType.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.job_type.length - b.job_type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n      sorter: (a, b) => a.models.length - b.models.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranchDropdown.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListMonitoringEmployee(page, limit);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      MonitoringEmployeeActions.setPagingMonitoringEmployee(paging)\n    );\n    getListMonitoringEmployee(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    MonitoringEmployeeActions.handleSearch(monitoringEmployeeFormValues);\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportMonitoringEmployeePdf(printedData, monitoringEmployeeFormValues);\n  };\n\n  return (\n    <MonitoringEmployeeComponent\n      headers={headers}\n      listMonitoringEmployee={listMonitoringEmployee}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  monitoringEmployee: state.monitoringEmployee,\n  branch: state.branch,\n  monitoringEmployeeFormValues: getFormValues(\"monitoringEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMonitoringEmployee: (page, limit, keyword, type, from, until) =>\n    MonitoringEmployeeActions.getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MonitoringEmployeeContainer);\n\nexport default reduxForm({\n  form: \"monitoringEmployeeForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport moment from \"moment\";\n\nexport const exportMonitoringEmployeePdf = (data, values) => {\n  const { listMonitoringEmployee, from, until } = data;\n  const startDate = moment(from).format(\"YYYY-MM-DD\");\n  const dueDate = moment(until).format(\"YYYY-MM-DD\");\n  const monitoringEmployeeList = [];\n\n  listMonitoringEmployee.map((item, index) => {\n    monitoringEmployeeList.push({\n      no: index + 1,\n      nik: item.employee_nik,\n      name: item.employee_name,\n      phone: item.phone,\n      address: item.address,\n      type: item.job_type,\n      status: item.job_status,\n      branch: item.branch_name,\n      customer: item.customer_name,\n      createdDate: item.created_date,\n    });\n  });\n\n  const doc = new jsPDF();\n  // doc.text({from_left}, {from_top})\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Monitoring Karyawan\", 100, 20, \"center\");\n  doc.setFontSize(16);\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\n\n  doc.setFontSize(12);\n\n  //   Line 1\n  doc.text(15, 42, `Dari Tanggal`);\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\n  doc.text(15, 49, `Sampai Tanggal`);\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\n\n  // Check if filtered by branch\n  if (values) {\n    if (values.branch) {\n      const splitBranch = values.branch.split(\"|\");\n      doc.text(15, 56, `Cabang`);\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\n    }\n  }\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  const headTable = [\n    [\n      { content: \"Tanggal\", rowSpan: 2, halign: \"center\" },\n      {\n        content: \"Karyawan\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n      {\n        content: \"Service\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n    ],\n    [\n      \"NIK\",\n      \"Nama Karyawan\",\n      \"Cabang\",\n      \"Tipe\",\n      \"Customer\",\n      \"Unit\",\n      \"Model\",\n      \"Status\",\n    ],\n  ];\n\n  doc.autoTable({\n    startY: values ? 65 : 60,\n    body: monitoringEmployeeList,\n    theme: \"plain\",\n    head: headTable,\n    headStyles: { halign: \"center\", valign: \"middle\" },\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\n    columns: [\n      { header: \"Tanggal\", dataKey: \"createdDate\" },\n      { header: \"NIK\", dataKey: \"nik\" },\n      { header: \"Nama Karyawan\", dataKey: \"name\" },\n      { header: \"Cabang\", dataKey: \"branch\" },\n      { header: \"Tipe\", dataKey: \"type\" },\n      { header: \"Customer\", dataKey: \"customer\" },\n      { header: \"Unit\", dataKey: \"units\" },\n      { header: \"Model\", dataKey: \"unit_models\" },\n      { header: \"Status\", dataKey: \"status\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { columnWidth: 28 },\n      1: { columnWidth: 20 },\n      // 2: { halign: \"center\" },\n      // 3: { halign: \"center\" },\n      // 4: { halign: \"center\" },\n      // 5: { halign: \"center\" },\n      // 6: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  //   Export\n  doc.save(\"monitoring-employee.pdf\");\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportServiceRepairComponent = (props) => {\n  const { headers, listServiceRepair, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Service Repair</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServiceRepair}\n                    size={\"small\"}\n                    // scroll={{ x: 50, y: 50, scrollToFirstRowOnChange }}#108ee9\n                    scroll\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportServiceRepairComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { BookOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee, getStatus } from \"../../../app/Helpers\";\nimport * as ReportServiceRepairActions from \"../Store/ReportServiceRepairActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport ReportServiceRepairComponent from \"../Component/ReportServiceRepairComponent\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport moment from \"moment\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\n\n\nconst ReportServiceRepairContainer = (props) => {\n  const {\n    handlePressAddNew,\n    serviceRepair: { listServiceRepair, paging },\n    branch: { listBranch },\n    serviceRepairFormValues,\n    getListServiceRepair,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listServiceRepair.length > 0) {\n    listServiceRepair.map((item, index) => {\n      listServiceRepair[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<BookOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type ? type.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_model_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due.length - b.due.length,\n      render: (due) => (\n        <Text>{due ? moment(due).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = getStatus(status).color;\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status ? getStatus(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"start\",\n      key: \"start\",\n      width: 500,\n      render: (start) => (\n        <Text>{start ? moment(start).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: 200,\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListServiceRepair(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportServiceRepairActions.handleSearch(serviceRepairFormValues);\n  };\n\n  return (\n    <ReportServiceRepairComponent\n      headers={headers}\n      listServiceRepair={listServiceRepair}\n      handlePressAddNew={handlePressAddNew}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  serviceRepair: state.serviceRepair,\n  branch: state.branch,\n  serviceRepairFormValues: getFormValues(\"serviceRepairForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServiceRepair: (page, limit, keyword, branch, from, until) =>\n    ReportServiceRepairActions.getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      from,\n      until\n    ),\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportServiceRepairContainer);\n\nexport default reduxForm({\n  form: \"serviceRepairForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportEmployeeComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportEmployeeActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportEmployeeComponent\";\n\nconst ReportEmployeeContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportEmployeeContainer);\n\nexport default reduxForm({\n  form: \"reportEmployeeForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Input, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst ListServiceComponent = (props) => {\n  const {\n    headers,\n    listServices,\n    enumType,\n    enumStatus,\n    onChangePagination,\n    paging,\n    onSearch,\n    listEmployee,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">List Service</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row d-flex mb-2\">\n                      {/* This Filter */}\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumType ?? []}\n                          name=\"typeService\"\n                          label=\"Filter Tipe\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumStatus ?? []}\n                          name=\"statusService\"\n                          label=\"Filter Status\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      ...pagination,\n                    }}\n                    // scroll={{ x: dataTable.tableWidth, y: tableHeight }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListServiceComponent;\n","import React from \"react\";\nimport { Space, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeExternalServices,\n  getIndex,\n  isBlockedRoleListService,\n  SelectStatusServices,\n} from \"../../../app/Helpers\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListServicesComponent from \"../Component/ListServicesComponent\";\nimport * as ListServiceActions from \"../Store/ListServicesActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\n\nconst ListServicesContainer = (props) => {\n  const {\n    user: { roles },\n    getListServices,\n    handlePressEdit,\n    handlePressDelete,\n    services: { listServices, paging },\n    listServiceFormValues,\n    getListEmployeesDropdown,\n    listEmployee,\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n  const { page, limit, totalPage } = paging;\n\n  if (listServices.length > 0) {\n    listServices.map((item, index) => {\n      listServices[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      {roles[0].name === \"Administrator\" && (\n        <CButtonAntd\n          onClick={() => handlePressDelete(record.id)}\n          type=\"primary\"\n          icon={<DeleteOutlined />}\n          size=\"middle\"\n          danger\n        />\n      )}\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"15%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: \"15%\",\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: \"15%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const checkBlockedRole = () => {\n    getListServices(page, limit);\n\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleListService(roleId);\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    getListEmployeesDropdown();\n    checkBlockedRole();\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ListServiceActions.setPagingListService(paging));\n    getListServices(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    ListServiceActions.handleSearch(1, 10, val, listServiceFormValues);\n  };\n\n  const SelectEmployeeData = [];\n  listEmployee.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <ListServicesComponent\n      headers={headers}\n      listServices={listServices}\n      renderActionTable={renderActionTable}\n      handlePressEdit={handlePressEdit}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      enumType={enumTypeExternalServices}\n      enumStatus={SelectStatusServices}\n      listEmployee={SelectEmployeeData}\n      // columns={columns}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  listServiceFormValues: getFormValues(\"listServices\")(state),\n  user: state.auth.userDetail,\n  listEmployee: state.employees.listEmployeeDropdown,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServices: (page, limit, keyword, filterValues) => {\n    ListServiceActions.getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      filterValues\n    );\n  },\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n  getListEmployeesDropdown: () => {\n    EmployeeActions.loadEmployeeDataDropdown();\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListServicesContainer);\n\nexport default reduxForm({\n  form: \"listServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst CTableAntd = (props) => {\n  const { data, headers, renderActions, size, pagination, id } = props;\n\n  const [searchText, setSearchText] = React.useState(\"\");\n  const [searchedColumn, setSearchedColumn] = React.useState(\"\");\n  const searchInput = React.useRef();\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.current.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const columns = [];\n  headers.map((item, index) => {\n    columns.push({\n      title: item.title,\n      dataIndex: item.dataIndex,\n      key: item.dataIndex,\n      width: item.width ?? \"30%\",\n      sorter: item.sorter,\n      render: item.render,\n      sortDirections: [\"descend\", \"ascend\"],\n      ...getColumnSearchProps(item.dataIndex),\n    });\n  });\n\n  if (renderActions) {\n    columns.push({\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActions,\n    });\n  }\n\n  return (\n    <Table\n      bordered\n      id={id ?? \"my-table-customize\"}\n      columns={columns}\n      dataSource={data}\n      size={size ?? \"middle\"}\n      pagination={{\n        size: 3,\n        pageSizeOptions: [\"10\", \"20\", \"50\"],\n        showSizeChanger: true,\n        ...pagination,\n      }}\n      // {...props}\n    />\n  );\n};\n\nCTableAntd.propTypes = {\n  data: PropTypes.array,\n  headers: PropTypes.array,\n  renderActions: PropTypes.any,\n};\n\nexport default CTableAntd;\n","import { Modal } from \"antd\";\nimport React from \"react\";\n\ninterface IProps {\n  visible: boolean;\n  content: any;\n  footer: any;\n  onCancel: any;\n  width: any;\n}\n\nconst CModal: React.FC<IProps> = (props) => {\n  // const showModal = () => {\n  //   setVisible(true)\n  // };\n\n  // const handleOk = () => {\n  //   setLoading(true)\n  //   setTimeout(() => {\n  //     setLoading(false)\n  //     setVisible(false)\n  //   }, 3000);\n  // };\n\n  return (\n    <Modal\n      visible={props.visible}\n      footer={props.footer}\n      destroyOnClose\n      onCancel={props.onCancel}\n      width={props.width ? props.width : 600}\n    >\n      {props.content}\n    </Modal>\n  );\n};\n\nexport default CModal;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"username\"\n            label=\"Username\"\n            placeholder=\"\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"fullname\"\n            label=\"Nama Lengkap\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"password\"\n            label=\"Password\"\n            component={CInput}\n            type=\"password\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AdminModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default AdminModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport AdminModalComponent from \"../Component/AdminModalComponent\";\n\nconst AdminModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    admins: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  return (\n    <AdminModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    AdminActions.saveAdminRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminModalContainer);\n\nexport default reduxForm({\n  form: \"editAdminForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport AdminModalContainer from \"../Container/AdminModalContainer\";\n\nconst { Search } = Input;\n\nconst AdminComponent = (props) => {\n  const {\n    headers,\n    listAdmin,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Admin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Admin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listAdmin}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AdminModalContainer />\n    </div>\n  );\n};\n\nexport default AdminComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport AdminComponent from \"../Component/AdminComponent\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListAdmin,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    admins: { listAdmin, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listAdmin.length > 0) {\n    listAdmin.map((item, index) => {\n      listAdmin[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"10%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Username\",\n      dataIndex: \"username\",\n      key: \"username\",\n      width: \"30%\",\n      sorter: (a, b) => a.username.length - b.username.length,\n    },\n    {\n      title: \"Nama Lengkap\",\n      dataIndex: \"fullname\",\n      key: \"fullname\",\n      width: \"30%\",\n      sorter: (a, b) => a.fullname.length - b.fullname.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListAdmin(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(AdminActions.setPagingAdmin(paging));\n    getListAdmin(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListAdmin(page, limit, val);\n  };\n\n  return (\n    <AdminComponent\n      headers={headers}\n      listAdmin={listAdmin}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListAdmin: (page, limit, keyword) =>\n    AdminActions.getListAdminRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(AdminActions.setSelectedAdminData({}));\n    await dispatch(AdminActions.setSelectedAdminId(\"\"));\n    dispatch(AdminActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    AdminActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(AdminActions.setFormStatus(\"edit\"));\n    await dispatch(AdminActions.setSelectedAdminId(record.id));\n    await dispatch(AdminActions.setSelectedAdminData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await AdminActions.mapDetailAdminToForm();\n  },\n  handlePressDelete: async (adminId) => {\n    await dispatch(AdminActions.setSelectedAdminId(adminId));\n    AdminActions.deleteAdminRequested(adminId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"adminForm\",\n})(EnhanceContainer);\n","import React from \"react\";\n\nconst NotFound = (props) => {\n  return (\n    // <div class=\"main-wrapper\">\n    //   <div class=\"page-wrapper full-page\">\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto d-flex flex-column align-items-center\">\n          <img\n            src=\"../../../assets/images/404.svg\"\n            class=\"img-fluid mb-2\"\n            alt=\"404\"\n          />\n          <h1 class=\"font-weight-bold mb-22 mt-2 tx-80 text-muted\">404</h1>\n          <h4 class=\"mb-2\">Page Not Found</h4>\n          <h6 class=\"text-muted mb-3 text-center\">\n            Oopps!! The page you were looking for doesn't exist.\n          </h6>\n          <a href=\"/dashboard\" class=\"btn btn-primary\">\n            Back to home\n          </a>\n        </div>\n      </div>\n    </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport history from \"./History\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as Selectors from \"../modules/Auth/Selector/AuthSelector\";\nimport ConfigAxios from \"./axios/ConfigAxios\";\nimport { navigate } from \"./Helpers\";\n\nconst AuthMiddleware = (ComposedComponent, menuPath, isSecureRoute) => {\n  const returnData = (props) => {\n    const { isAuthenticated, redirect, userMenus, redirectToServices } = props;\n\n    if (!isAuthenticated) {\n      redirect();\n    } else {\n      if (isSecureRoute) {\n        const isMenuCanAccess = userMenus.filter((x) => x.path === menuPath);\n\n        if (isMenuCanAccess.length <= 0) {\n          redirectToServices();\n        }\n      }\n      ConfigAxios.defaults.headers[\n        \"Authorization\"\n      ] = `Bearer ${isAuthenticated}`;\n    }\n\n    return (\n      <div>{isAuthenticated ? <ComposedComponent {...props} /> : null}</div>\n    );\n  };\n\n  const mapStateToProps = createStructuredSelector({\n    isAuthenticated: Selectors.Token(),\n    userRole: Selectors.UserRole(),\n    userMenus: Selectors.UserMenus(),\n  });\n  const mapDispatchToProps = (dispatch) => ({\n    redirect: () => history.push(\"/auth\"),\n    redirectToServices: () => navigate(\"/list_service\"),\n  });\n  return connect(mapStateToProps, mapDispatchToProps)(returnData);\n};\n\nexport default AuthMiddleware;\n","import React from \"react\";\n\ninterface IProps {\n  type:\n    | \"primary\"\n    | \"danger\"\n    | \"warning\"\n    | \"info\"\n    | \"success\"\n    | \"secondary\"\n    | \"light\"\n    | \"dark\";\n}\n\nconst CBadgeText: React.FC<IProps> = (props) => {\n  return <span className={`badge badge-${props.type}`}>{props.children}</span>;\n};\n\nexport default CBadgeText;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumEmployee }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Teknisi</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <CSelect\n            showSearch\n            data={enumEmployee}\n            name=\"employee\"\n            label=\"Pilih Teknisi\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AddEmployeeModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    handleCancel,\n    enumEmployee,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          enumEmployee={enumEmployee}\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n        />\n      }\n    />\n  );\n};\n\nexport default AddEmployeeModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateServiceEmployeeForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport AddEmployeeModalComponent from \"../Component/AddEmployeeModalComponent\";\n\nconst AddEmployeeModalContainer = (props) => {\n  const {\n    handleCancel,\n    services: { selectedJobService },\n    component: { isModalVisible },\n    employees: { listEmployees },\n    valid,\n  } = props;\n\n  const SelectEmployee = [];\n  listEmployees.map((item, index) => {\n    SelectEmployee.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      const employee = values.employee.split(\"|\");\n      DetailServiceTransactionAction.handleAddNewEmployeeService(\n        selectedJobService.id,\n        employee[0]\n      );\n    } else {\n    }\n  };\n\n  return (\n    <AddEmployeeModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      enumEmployee={SelectEmployee}\n      submitForm={submitForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddEmployeeModalContainer);\n\nexport default reduxForm({\n  form: \"serviceEmployeeForm\",\n  validate: validateServiceEmployeeForm,\n})(EnhanceContainer);\n","export const Themes = {\n  success: \"#17B794\",\n  error: \"#f50\",\n  warning: \"#FEC260\",\n  secondary: \"#A5A5A5\",\n};\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"reason\"\n            label=\"Alasan Reject\"\n            component={CInput}\n            typeComponent=\"textarea\"\n            placeholder=\"Masukan alasan reject\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst RejectedModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RejectedModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRejected, validateFormRoles } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionActions from \"../Store/DetailServiceTransactionAction\";\nimport RejectedModalComponent from \"../Component/RejectedModalComponent\";\n\nconst RejectedModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { rejectionsModal },\n    services: { selectedJobService },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(selectedJobService.id, values);\n    } else {\n    }\n  };\n\n  return (\n    <RejectedModalComponent\n      isModalVisible={rejectionsModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formName={\"Alasan Reject\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  detailService: state.detailService,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionActions.setRejectionsModal(false)),\n\n  handleSubmitForm: (jobId, values) => {\n    DetailServiceTransactionActions.handlePressRejectedRequested(jobId, values);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RejectedModalContainer);\n\nexport default reduxForm({\n  form: \"editRejecetdForm\",\n  validate: validateFormRejected,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, InputNumber, Row, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumWarranty, warrantyMonths } from \"../../../app/Helpers\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">Ubah Service</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={enumWarranty}\n              name=\"warranty\"\n              label=\"Warranty\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-7\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={warrantyMonths()}\n              name=\"warrantyMonths\"\n              label=\"Warranty Months\"\n            />\n          </div>\n          <div class=\"col-md-5\">\n            <Field\n              name=\"warrantyYears\"\n              label=\"Warranty Year\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"jobPerform\"\n              label=\"Job Perform\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalTransactionComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalTransactionComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTransaction } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport EditModalTransactionComponent from \"../Component/EditModalTransactionComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editTransactionModal },\n    masters: { listMenu },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      // handleSubmitForm(\"edit\", values, menuSelected);\n      DetailServiceTransactionAction.handlePressEditRequested(values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <EditModalTransactionComponent\n      isModalVisible={editTransactionModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditTransactionModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) => {},\n  // DetailServiceTransactionAction.saveRoleRequested(\n  //   type,\n  //   values,\n  //   menuSelected\n  // ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editTransactionForm\",\n  validate: validateFormTransaction,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, InputNumber, Row, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumWarranty, warrantyMonths } from \"../../../app/Helpers\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n  typeFormDailies,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">{`${\n        typeFormDailies === \"add\" ? \"Tambah\" : \"Ubah\"\n      } Catatan Teknisi`}</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"title\"\n              label=\"Judul\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalDailiesComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n    typeFormDailies,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n          typeFormDailies={typeFormDailies}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTransaction } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\n\nimport EditModalDailiesComponent from \"../Component/EditModalDailiesComponent\";\n\nconst EditModalDailiesContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editDailiesModal, typeFormDailies },\n    masters: { listMenu },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      DetailServiceTransactionAction.handlePressEditDailiesRequested(values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <EditModalDailiesComponent\n      isModalVisible={editDailiesModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      typeFormDailies={typeFormDailies}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditDailiesModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditModalDailiesContainer);\n\nexport default reduxForm({\n  form: \"editDailiesForm\",\n  validate: validateFormTransaction,\n})(EnhanceContainer);\n","import React from \"react\";\r\nimport CModal from \"../../../components/CModal/CModal\";\r\nimport { Field, Form } from \"redux-form\";\r\nimport CInput from \"../../../components/CInput/CInput\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { Checkbox, Col, Divider, message, Row, Typography, Upload } from \"antd\";\r\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\r\nimport {\r\n  CheckOutlined,\r\n  CloseOutlined,\r\n  EditOutlined,\r\n  LoadingOutlined,\r\n  PlusOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { getBase64 } from \"../../../app/Helpers\";\r\nimport CSelect from \"../../../components/CSelect/CSelect\";\r\n\r\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\r\n  return [\r\n    <CButtonAntd\r\n      icon={<CloseOutlined />}\r\n      key=\"submit\"\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleClose}\r\n      danger\r\n    >\r\n      Tutup\r\n    </CButtonAntd>,\r\n    <CButtonAntd\r\n      key=\"submit\"\r\n      icon={<CheckOutlined />}\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleSaveForm}\r\n    >\r\n      Simpan\r\n    </CButtonAntd>,\r\n  ];\r\n};\r\n\r\nconst RenderContent = ({\r\n  handleSubmit,\r\n  submitForm,\r\n  beforeUpload,\r\n  handleChange,\r\n  imageUrl,\r\n  defaultImage,\r\n  uploadButton,\r\n  enumUnit,\r\n}) => {\r\n  return (\r\n    <div class=\"page-content\">\r\n      <Divider orientation=\"left\">Tambah Media</Divider>\r\n      <Form onSubmit={handleSubmit(submitForm)}>\r\n        <Row>\r\n          <div\r\n            class=\"card-body\"\r\n            style={{\r\n              marginLeft: -22,\r\n              marginTop: -20,\r\n              alignSelf: \"center\",\r\n            }}\r\n          >\r\n            <Upload\r\n              name=\"avatar\"\r\n              listType=\"picture-card\"\r\n              className=\"avatar-uploader overflow-hidden\"\r\n              showUploadList={false}\r\n              beforeUpload={beforeUpload}\r\n              onChange={handleChange}\r\n            >\r\n              {imageUrl || defaultImage ? (\r\n                <>\r\n                  {<img\r\n                    src={imageUrl}\r\n                    alt=\"avatar\"\r\n                    style={{\r\n                      width: \"100%\",\r\n                      height: \"100%\",\r\n                      resizeMode: \"stretch\",\r\n                      borderRadius: 5,\r\n                    }}\r\n                  />}\r\n                  <div\r\n                    class=\"row\"\r\n                    style={{\r\n                      backgroundColor: \"#F3F3F3\",\r\n                      position: \"absolute\",\r\n                      width: 80,\r\n                      heigh: 30,\r\n                      borderRadius: 50,\r\n                      alignItems: \"center\",\r\n                      justifyContent: \"center\",\r\n                      opacity: 0.7,\r\n                    }}\r\n                  >\r\n                    <Typography style={{ fontSize: 10 }}>Ubah</Typography>\r\n                    <EditOutlined\r\n                      style={{\r\n                        color: \"#020202\",\r\n                        fontSize: 10,\r\n                        marginLeft: 5,\r\n                      }}\r\n                    />\r\n                  </div>\r\n                </>\r\n              ) : (\r\n                uploadButton\r\n              )}\r\n            </Upload>\r\n          </div>\r\n        </Row>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <Field\r\n              name=\"title\"\r\n              label=\"Judul\"\r\n              component={CInput}\r\n              typeComponents=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <Field\r\n              name=\"description\"\r\n              label=\"Deskripsi\"\r\n              component={CInput}\r\n              typeComponents=\"text\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <CSelect\r\n              showSearch\r\n              data={enumUnit}\r\n              name=\"unit\"\r\n              label=\"Pilih Unit\"\r\n              // onChange={(customer) => {\r\n              //   onChangeUnit(customer);\r\n              // }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst InsertImageModalComponent = (props) => {\r\n  const {\r\n    isModalVisible,\r\n    handleSubmit,\r\n    submitForm,\r\n    isLoadingFormGlobal,\r\n    handleCancel,\r\n    formName,\r\n    enumUnit,\r\n    menuChecked,\r\n    formStatus,\r\n    onChangeRoleMenu,\r\n    defaultImage,\r\n    handleUploadPhoto,\r\n  } = props;\r\n  const [loading, setLoading] = React.useState(false);\r\n  const [imageUrl, setImageUrl] = React.useState(\"\");\r\n\r\n  React.useEffect(() => {\r\n    if (defaultImage) {\r\n      setImageUrl(defaultImage);\r\n    }\r\n  }, [defaultImage]);\r\n\r\n  const beforeUpload = (file) => {\r\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\r\n    if (!isJpgOrPng) {\r\n      message.error(\"You can only upload JPG/PNG file!\");\r\n    }\r\n    const isLt2M = file.size / 1024 / 1024 < 2;\r\n    if (!isLt2M) {\r\n      message.error(\"Image must smaller than 2MB!\");\r\n    }\r\n    return isJpgOrPng && isLt2M;\r\n  };\r\n\r\n  const handleChange = (info) => {\r\n    if (info.file.status === \"uploading\") {\r\n      setLoading(true);\r\n      info.file.status = \"done\";\r\n    }\r\n    if (info.file.status === \"done\") {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) => {\r\n        setImageUrl(imageUrl);\r\n        setLoading(false);\r\n        handleUploadPhoto(imageUrl);\r\n      });\r\n    }\r\n  };\r\n\r\n  const uploadButton = (\r\n    <div>\r\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\r\n      <div style={{ marginTop: 8 }}>Upload</div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <CModal\r\n      visible={isModalVisible}\r\n      onCancel={handleCancel}\r\n      footer={\r\n        <RenderFooter\r\n          handleSaveForm={handleSubmit}\r\n          handleClose={handleCancel}\r\n        />\r\n      }\r\n      content={\r\n        <RenderContent\r\n          handleSubmit={handleSubmit}\r\n          submitForm={submitForm}\r\n          isLoadingFormGlobal={isLoadingFormGlobal}\r\n          formName={formName}\r\n          enumUnit={enumUnit}\r\n          defaultValuesMenu={menuChecked}\r\n          formStatus={formStatus}\r\n          onChangeRoleMenu={onChangeRoleMenu}\r\n          setImageUrl={setImageUrl}\r\n          setLoading={setLoading}\r\n          beforeUpload={beforeUpload}\r\n          handleChange={handleChange}\r\n          uploadButton={uploadButton}\r\n          imageUrl={imageUrl}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default InsertImageModalComponent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { change, getFormValues, reduxForm } from \"redux-form\";\r\nimport { validateFormEditMedia } from \"../../../app/validateForm\";\r\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\r\n\r\nimport InsertImageModalComponent from \"../Component/InsertImageModalComponent\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport { showToast } from \"../../Roles/Store/RolesActions\";\r\n\r\nconst InsertImageModalContainer = (props) => {\r\n  const {\r\n    valid,\r\n    handleCancel,\r\n    detailService: { insertMediaModal },\r\n    formValues,\r\n    services: { selectedJobService },\r\n  } = props;\r\n\r\n  const submitForm = (values) => {\r\n    if (valid && formValues.imageUrl) {\r\n      DetailServiceTransactionAction.handlePressInsertMediaRequested(values);\r\n    } else {\r\n      showToast(\"Harap lengkapi form!\", \"error\");\r\n    }\r\n  };\r\n\r\n  const SelectUnit = [];\r\n  if (selectedJobService.units && selectedJobService.units.length > 0) {\r\n    selectedJobService.units.map((item, index) => {\r\n      SelectUnit.push({\r\n        id: `unit-${index}`,\r\n        value: item.id,\r\n        label: item.unit_name,\r\n      });\r\n    });\r\n  }\r\n\r\n  const handleUploadPhoto = (base64) => {\r\n    store.dispatch(change(\"editMediaForm\", `imageUrl`, base64 ?? \"\"));\r\n  };\r\n\r\n  return (\r\n    <InsertImageModalComponent\r\n      isModalVisible={insertMediaModal}\r\n      handleCancel={handleCancel}\r\n      submitForm={submitForm}\r\n      enumUnit={SelectUnit}\r\n      handleUploadPhoto={handleUploadPhoto}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  admins: state.admins,\r\n  roles: state.roles,\r\n  component: state.component,\r\n  masters: state.masters,\r\n  detailService: state.detailService,\r\n  services: state.services,\r\n  formValues: getFormValues(\"editMediaForm\")(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleCancel: () =>\r\n    dispatch(DetailServiceTransactionAction.setInsertMediaModal(false)),\r\n  handleClearModalContent: () => {\r\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\r\n  },\r\n});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(InsertImageModalContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"editMediaForm\",\r\n  validate: validateFormEditMedia,\r\n})(EnhanceContainer);\r\n","import React from \"react\";\r\nimport CModal from \"../../../components/CModal/CModal\";\r\nimport { Field, Form } from \"redux-form\";\r\nimport CInput from \"../../../components/CInput/CInput\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { Checkbox, Col, Divider, Row } from \"antd\";\r\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\r\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\r\n\r\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\r\n  return [\r\n    <CButtonAntd\r\n      icon={<CloseOutlined />}\r\n      key=\"submit\"\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleClose}\r\n      danger\r\n    >\r\n      Tutup\r\n    </CButtonAntd>,\r\n    <CButtonAntd\r\n      key=\"submit\"\r\n      icon={<CheckOutlined />}\r\n      type=\"primary\"\r\n      loading={false}\r\n      onClick={handleSaveForm}\r\n    >\r\n      Simpan\r\n    </CButtonAntd>,\r\n  ];\r\n};\r\n\r\nconst SelectRole = (props) => {\r\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\r\n\r\n  const Item = ({ item }) => {\r\n    return (\r\n      <Checkbox name={`item.${item.value}`} value={item.value}>\r\n        {item.label}\r\n      </Checkbox>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Checkbox.Group\r\n        {...props.input}\r\n        style={{ width: \"100%\" }}\r\n        defaultValue={defaultValuesMenu}\r\n        onChange={onChangeRoleMenu}\r\n      >\r\n        <Row>\r\n          {data.map((item, index) => {\r\n            return (\r\n              <Col span={8}>\r\n                <Field\r\n                  item={item}\r\n                  name={`item.${item.value}`}\r\n                  component={Item}\r\n                />\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Checkbox.Group>\r\n    </>\r\n  );\r\n};\r\n\r\nconst RenderContent = ({ handleSubmit, submitForm, handleKeyDown }) => {\r\n  return (\r\n    <div class=\"page-content\">\r\n      <Divider orientation=\"left\">Ubah laporan</Divider>\r\n      <Form onSubmit={handleSubmit(submitForm)}>\r\n        <div class=\"row mt-2\">\r\n          <div class=\"col-md-12\">\r\n            <Field\r\n              name=\"summary\"\r\n              label=\"Detail Laporan\"\r\n              component={CInput}\r\n              typeComponent=\"textarea\"\r\n              linebreak\r\n              onKeyDown={handleKeyDown}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst EditModalSummaryComponent = (props) => {\r\n  const {\r\n    isModalVisible,\r\n    handleSubmit,\r\n    submitForm,\r\n    isLoadingFormGlobal,\r\n    handleCancel,\r\n    formName,\r\n    enumMenu,\r\n    menuChecked,\r\n    formStatus,\r\n    onChangeRoleMenu,\r\n    typeFormDailies,\r\n  } = props;\r\n\r\n  return (\r\n    <CModal\r\n      visible={isModalVisible}\r\n      onCancel={handleCancel}\r\n      footer={\r\n        <RenderFooter\r\n          handleSaveForm={handleSubmit}\r\n          handleClose={handleCancel}\r\n        />\r\n      }\r\n      content={\r\n        <RenderContent\r\n          handleSubmit={handleSubmit}\r\n          submitForm={submitForm}\r\n          isLoadingFormGlobal={isLoadingFormGlobal}\r\n          formName={formName}\r\n          enumMenu={enumMenu}\r\n          defaultValuesMenu={menuChecked}\r\n          formStatus={formStatus}\r\n          onChangeRoleMenu={onChangeRoleMenu}\r\n          typeFormDailies={typeFormDailies}\r\n        />\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default EditModalSummaryComponent;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { reduxForm } from \"redux-form\";\r\nimport { validateFormTransaction } from \"../../../app/validateForm\";\r\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\r\nimport EditModalSummaryComponent from \"../Component/EditModalSummaryComponent\";\r\n\r\nconst EditModalSummaryContainer = (props) => {\r\n  const {\r\n    valid,\r\n    handleCancel,\r\n    detailService: { editSummaryModal, typeFormDailies },\r\n    masters: { listMenu },\r\n  } = props;\r\n\r\n  const submitForm = (values) => {\r\n    if (valid) {\r\n      DetailServiceTransactionAction.handlePressEditSummaryRequested(values);\r\n    } else {\r\n    }\r\n  };\r\n\r\n  const SelectMenu = [];\r\n  listMenu.map((item, index) => {\r\n    SelectMenu.push({\r\n      id: `role-${index}`,\r\n      value: item.id,\r\n      label: item.menu,\r\n    });\r\n  });\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === \"Enter\") {\r\n        \r\n    }\r\n  };\r\n\r\n  return (\r\n    <EditModalSummaryComponent\r\n      isModalVisible={editSummaryModal}\r\n      handleCancel={handleCancel}\r\n      submitForm={submitForm}\r\n      enumMenu={SelectMenu}\r\n      typeFormDailies={typeFormDailies}\r\n      handleKeyDown={handleKeyDown}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  admins: state.admins,\r\n  roles: state.roles,\r\n  component: state.component,\r\n  masters: state.masters,\r\n  detailService: state.detailService,\r\n  services: state.services,\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  handleCancel: () =>\r\n    dispatch(DetailServiceTransactionAction.setEditSummaryModal(false)),\r\n  handleClearModalContent: () => {},\r\n});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(EditModalSummaryContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"editSummaryForm\",\r\n  validate: validateFormTransaction,\r\n})(EnhanceContainer);\r\n","import React from \"react\";\nimport { Tabs } from \"antd\";\nimport { Typography } from \"antd\";\nimport CBadgeText from \"../../../components/CBadgeText/CBadgeText\";\nimport moment from \"moment\";\nimport AddEmployeeModalContainer from \"../Container/AddEmployeeModalContainer\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Themes } from \"../../../property/colors\";\nimport RejectedModalContainer from \"../Container/RejectedModalContainer\";\nimport EditModalTransactionContainer from \"../Container/EditModalTransactionContainer\";\nimport EditModalDailiesContainer from \"../Container/EditModalDailiesContainer\";\nimport InsertImageModalContainer from \"../Container/InsertImageModalContainer\";\nimport EditModalSummaryContainer from \"../Container/EditModalSummaryContainer\";\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\nconst DetailServiceTransactionComponent = (props) => {\n  const {\n    data,\n    isBlockedRole,\n    TabPanel,\n    onChangeTab,\n    handlePressGeneratePdf,\n    goBack,\n    handlePressActions,\n    handlePressEdit,\n  } = props;\n\n  const RenderButtonAction = ({ status, role }) => {\n    let button;\n    switch (status.toLowerCase()) {\n      case \"completed\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"approved\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Approve\n            </CButtonAntd>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"rejected\")}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"progress\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"finished\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Complete\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"finished\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              // onClick={handlePressAddNew}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n\n      default:\n        return <div />;\n    }\n    return button;\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"col-md-12 grid-margin stretch-card\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"row align-items-center justify-content-between\">\n                <div>\n                  <h6 class=\"card-title\">Detail Transaksi</h6>\n                </div>\n                <div class=\"row mb-3 ml-2 mr-2\">\n                  <CButtonAntd\n                    onClick={goBack}\n                    type=\"primary\"\n                    icon={<ArrowLeftOutlined />}\n                    size=\"middle\"\n                    danger\n                  >\n                    Kembali\n                  </CButtonAntd>\n                  <div class=\"ml-3\" />\n                  {data.status.toLowerCase() !== \"approved\" && !isBlockedRole && (\n                    <CButtonAntd\n                      onClick={handlePressEdit}\n                      type=\"primary\"\n                      icon={<EditOutlined />}\n                      size=\"middle\"\n                    >\n                      Ubah\n                    </CButtonAntd>\n                  )}\n                  <RenderButtonAction status={data.status} />\n                  <div class=\"mr-3\" />\n                  {/* button to trigger printing of target component */}\n                  <CButtonAntd\n                    onClick={handlePressGeneratePdf}\n                    type=\"primary\"\n                    icon={<FilePdfOutlined />}\n                    size=\"middle\"\n                  >\n                    Cetak Formulir\n                  </CButtonAntd>\n                </div>\n              </div>\n              <div\n                id=\"header-detail-transaction\"\n                class=\"d-flex justify-content-between align-items-baseline\"\n              >\n                <div class=\"col-md-6\">\n                  <Text>Tipe : </Text>\n                  <CBadgeText type={data.is_external ? \"success\" : \"info\"}>\n                    {data.type ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Unit : </Text>\n                  <Text>{data.unit ?? \"-\"}</Text>\n                  <br />\n                  <Text>Model (SN) : </Text>\n                  <Text>{data.model ?? \"-\"}</Text>\n                  <br />\n                  <Text>Job Forms : </Text>\n                  <Text>{data.job_form_name ?? \"-\"}</Text>\n                  <br />\n                  <Text>Customer : </Text>\n                  <Text strong>{data.customer_name}</Text>\n                  <br />\n                  <Text>Warranty : </Text>\n                  <Text strong>\n                    {data.warranty ? \"Warranty\" : \"No Warranty\"}\n                  </Text>\n                  <br />\n                  <Text>PIC : </Text>\n                  <Text strong>{data.customer_pic_name ?? \"()\"}</Text>\n                </div>\n                <div class=\"col-md-6\">\n                  <Text>Status Transaksi : </Text>\n                  <CBadgeText\n                    type={\n                      data.status.toLowerCase() === \"draft\"\n                        ? \"warning\"\n                        : \"success\"\n                    }\n                  >\n                    {data.status ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Job Perform : </Text>\n                  <Text strong>{data.job_perform}</Text>\n                  <br />\n                  <Text>Start - Due : </Text>\n                  <Text strong>{`${moment(data.start).format(\n                    \"DD-MMM-YYYY\"\n                  )} - ${moment(data.due).format(\"DD-MMM-YYYY\")}`}</Text>\n\n                  <br />\n                  <Text>Dibuat : </Text>\n                  <Text strong>{data.created_date}</Text>\n                  <br />\n                  <Text>Lokasi : </Text>\n                  <Text strong>{data.location ?? \"-\"}</Text>\n                </div>\n                <div class=\"col-md-4\"></div>\n              </div>\n\n              <div class=\"ml-2 mt-3\">\n                <Tabs defaultActiveKey=\"1\" onChange={onChangeTab}>\n                  {TabPanel.map((item, index) => (\n                    <TabPane\n                      tab={\n                        <span>\n                          {item.icon}\n                          {item.title}\n                        </span>\n                      }\n                      key={item.key}\n                    >\n                      {item.component}\n                    </TabPane>\n                  ))}\n                </Tabs>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AddEmployeeModalContainer />\n      <RejectedModalContainer />\n      <EditModalTransactionContainer />\n      <EditModalDailiesContainer />\n      <InsertImageModalContainer />\n      <EditModalSummaryContainer />\n    </div>\n  );\n};\n\nexport default DetailServiceTransactionComponent;\n","import React from \"react\";\nimport { Card, Typography, Col, Row, Image } from \"antd\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  CheckCircleOutlined,\n} from \"@ant-design/icons\";\n\nconst { Meta } = Card;\nconst { Text } = Typography;\n\nconst RenderDescription = ({\n  data,\n  handlePressNonactive,\n  handlePressActive,\n}) => {\n  return (\n    <div>\n      <hr />\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Nik</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.nik}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Telepon</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.phone}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Alamat</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong style={{ fontSize: 12 }}>\n            {data.address}\n          </Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Tanggal Mulai</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.created_date}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Status</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <CBadgeText type={data.active ? \"success\" : \"danger\"}>\n            {data.active ? \"Aktif\" : \"Tidak Aktif\"}\n          </CBadgeText>\n        </div>\n      </Row>\n      <div class=\"mt-3\">\n        {data.active ? (\n          <CButtonAntd\n            onClick={handlePressNonactive}\n            type=\"primary\"\n            icon={<DeleteOutlined />}\n            size=\"middle\"\n            danger\n          >\n            Non-Aktifkan Teknisi\n          </CButtonAntd>\n        ) : (\n          <CButtonAntd\n            onClick={handlePressActive}\n            type=\"primary\"\n            icon={<CheckCircleOutlined />}\n            size=\"middle\"\n          >\n            Aktifkan teknisi\n          </CButtonAntd>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst TabPanelEmployeeComponent = (props) => {\n  const {\n    employees,\n    handlePressAddNew,\n    handlePressNonactive,\n    jobId,\n    handlePressActive,\n  } = props;\n  return (\n    <div class=\"page-content\">\n      <Row style={{ marginLeft: 16 }}>\n        <CButtonAntd\n          onClick={handlePressAddNew}\n          type=\"primary\"\n          icon={<PlusOutlined />}\n          size=\"middle\"\n        >\n          Tambah Teknisi\n        </CButtonAntd>\n      </Row>\n      <Row>\n        {employees.map((item, index) => {\n          return (\n            <Col style={{ margin: 16 }} key={`employee-${index}`}>\n              <Text strong>{`Teknisi-${index + 1}`}</Text>\n              <Card\n                style={{ width: 350, marginTop: 8 }}\n                cover={\n                  <Image\n                    alt=\"example\"\n                    src={\n                      item.photo ??\n                      \"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                    }\n                    width=\"100%\"\n                    height={200}\n                  />\n                }\n              >\n                <Meta\n                  title={item.name}\n                  description={\n                    <RenderDescription\n                      data={item}\n                      handlePressNonactive={() =>\n                        handlePressNonactive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                      handlePressActive={() =>\n                        handlePressActive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                    />\n                  }\n                />\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </div>\n  );\n};\n\nexport default TabPanelEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TabPanelEmployeeComponent from \"../../Component/TabPanel/TabPanelEmployeeComponent\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionActions from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelEmployeeContainer = (props) => {\n  const {\n    services: { selectedJobService },\n  } = props;\n  return <TabPanelEmployeeComponent jobId={selectedJobService.id} {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n  detailService: state.detailService,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressAddNew: () => {\n    dispatch(ComponentActions.setGlobalModal(true));\n  },\n  handlePressNonactive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      false\n    ),\n  handlePressActive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      true\n    ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelEmployeeContainer);\n","import React, { Fragment } from \"react\";\nimport { Typography, Row, Empty, Divider, Col, Spin } from \"antd\";\nimport { FileOutlined, EditOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst RenderItemSummary = ({ summary, index }) => {\n  return summary.length > 0 ? (\n    summary.map((item, indexText) => (\n      <Typography key={`item-summary${index}-text-${indexText}`}>\n        {item}\n      </Typography>\n    ))\n  ) : (\n    <Typography>Summary belum ada</Typography>\n  );\n};\n\nconst TabPanelSummaryComponent = (props) => {\n  const { summaryArr, isLoaded, handlePressEdit, isBlockedRole } = props;\n\n  return (\n    <div class=\"page-content\">\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <Fragment>\n          <Row\n            style={{\n              alignItems: \"center\",\n            }}\n          >\n            <FileOutlined />\n            <Typography style={{ marginLeft: 5 }}>Laporan Akhir</Typography>\n          </Row>\n          <hr />\n          <Row gutter={[16, 16]}>\n            {summaryArr.length > 0 ? (\n              summaryArr.map((item, index) => (\n                <Col key={`col-unit-${index}`} span={12}>\n                  <div class=\"card p-2\">\n                    {isBlockedRole && (\n                      <CButtonAntd\n                        onClick={() => handlePressEdit(item.id)}\n                        type=\"primary\"\n                        icon={<EditOutlined />}\n                        size=\"middle\"\n                      >\n                        Ubah Summary\n                      </CButtonAntd>\n                    )}\n                    <Divider\n                      style={{\n                        fontSize: 12,\n                        fontWeight: \"bold\",\n                        textTransform: \"uppercase\",\n                      }}\n                      plain\n                    >{`Unit ${item.unitName}`}</Divider>\n                    {<RenderItemSummary index={index} summary={item.summary} />}\n                  </div>\n                </Col>\n              ))\n            ) : (\n              <div>\n                <Empty />\n              </div>\n            )}\n          </Row>\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelSummaryComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change } from \"redux-form\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport TabPanelSummaryComponent from \"../../Component/TabPanel/TabPanelSummaryComponent\";\nimport { setEditSummaryModal } from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelSummaryContainer = (props) => {\n  const { summary, userRole } = props;\n  const [summaryArr, setSummaryArr] = React.useState([]);\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  React.useEffect(() => {\n    const summaryMapping = [];\n\n    summary.map((item, index) => {\n      const summaryText = item.summary ?? \"\";\n      const checkBreakLine = summaryText.includes(\"\\n\");\n\n      if (checkBreakLine) {\n        const splitSummary = summaryText.split(\"\\n\");\n        summaryMapping.push({\n          id: item.id,\n          unitName: item.unitName,\n          summary: splitSummary,\n        });\n      } else {\n        summaryMapping.push({\n          id: item.id,\n          unitName: item.unitName,\n          summary: [summaryText],\n        });\n      }\n    });\n    setSummaryArr(summaryMapping);\n  }, [summary]);\n\n  return (\n    <TabPanelSummaryComponent\n      summaryArr={summaryArr}\n      isBlockedRole={isBlockedRole}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (unitId) => {\n    dispatch(change(\"editSummaryForm\", `unitId`, unitId));\n    await dispatch(setEditSummaryModal(true));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelSummaryContainer);\n\nexport default EnhanceContainer;\n","import React, { Fragment } from \"react\";\nimport { Typography, Row, Empty, Card, Col, Image, Divider, Spin } from \"antd\";\nimport { CameraOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { PlusCircleOutlined } from \"@ant-design/icons\";\n\nconst { Meta } = Card;\n\nconst RenderImage = ({ medias, unit }) => {\n  return medias.map((item, index) => {\n    return (\n      <Col\n        style={{\n          marginLeft: 10,\n          marginRight: 10,\n        }}\n      >\n        <Card\n          hoverable\n          style={{ width: 240, height: 200 }}\n          cover={<Image width={\"100%\"} height={150} src={item.path} />}\n        >\n          <Meta\n            style={{ marginTop: -10 }}\n            title={`Gambar Penting ${index + 1}`}\n          />\n        </Card>\n      </Col>\n    );\n  });\n};\n\nconst TabPanelImagesComponent = (props) => {\n  const { medias, handlePressAdd, isLoaded, isBlockedRole } = props;\n\n  return (\n    <div class=\"page-content\">\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <Fragment>\n          <Row\n            style={{\n              alignItems: \"center\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <Row\n              style={{\n                alignItems: \"center\",\n              }}\n            >\n              <CameraOutlined />\n              <Typography style={{ marginLeft: 5 }}>Media</Typography>\n            </Row>\n            {isBlockedRole && (\n              <CButtonAntd\n                onClick={handlePressAdd}\n                type=\"primary\"\n                icon={<PlusCircleOutlined />}\n                size=\"middle\"\n              >\n                Tambah Gambar\n              </CButtonAntd>\n            )}\n          </Row>\n          <hr />\n          {medias && medias.length > 0 ? (\n            medias.map((item, index) => (\n              <div>\n                <Divider\n                  style={{\n                    textTransform: \"uppercase\",\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                  }}\n                  plain\n                >{`Unit ${item.unitName}`}</Divider>\n                <Row>\n                  <RenderImage medias={item.image} unit={item.unitName} />\n                </Row>\n              </div>\n            ))\n          ) : (\n            <div>\n              <Empty />\n            </div>\n          )}\n        </Fragment>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelImagesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport TabPanelImagesComponent from \"../../Component/TabPanel/TabPanelImagesComponent\";\nimport {\n  resetFormModalImage,\n  setInsertMediaModal,\n} from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelImagesContainer = (props) => {\n  const { userRole } = props;\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    console.log(\"=== blocked : \", isBlock);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  return <TabPanelImagesComponent isBlockedRole={isBlockedRole} {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressAdd: async (values) => {\n    await dispatch(setInsertMediaModal(true));\n    resetFormModalImage();\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelImagesContainer);\n\nexport default EnhanceContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table, Space } from \"antd\";\nimport { EditOutlined, PlusCircleOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst RenderDailies = ({ dailies, handlePressEdit }) => {\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"karyawan\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"deskripsi\",\n    },\n    {\n      title: \"Mulai\",\n      dataIndex: \"mulai\",\n    },\n    {\n      title: \"Selesai\",\n      dataIndex: \"selesai\",\n    },\n    {\n      title: \"Jam\",\n      dataIndex: \"jam\",\n    },\n  ];\n  columns.push({\n    align: \"center\",\n    title: \"Aksi\",\n    key: \"action\",\n    width: \"10%\",\n    render: renderActionTable,\n  });\n  const data = [];\n  dailies.map((item, index) => {\n    data.push({\n      key: index,\n      id: item.id,\n      karyawan: item.employee_name,\n      title: item.title,\n      deskripsi: item.description,\n      mulai: moment(item.daily_start).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      selesai: moment(item.daily_end).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      jam: item.hours,\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelDailiesComponent = (props) => {\n  const { dailies, handlePressEdit, handlePressAdd, isBlockedRole } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n          justifyContent: \"space-between\",\n        }}\n      >\n        <Row>\n          <EditOutlined />\n          <Typography style={{ marginLeft: 5 }}>Catatan</Typography>\n        </Row>\n        {isBlockedRole && (\n          <CButtonAntd\n            onClick={handlePressAdd}\n            type=\"primary\"\n            icon={<PlusCircleOutlined />}\n            size=\"middle\"\n          >\n            Tambah Catatan\n          </CButtonAntd>\n        )}\n      </Row>\n      <hr />\n      {dailies && dailies.length > 0 ? (\n        <RenderDailies dailies={dailies} handlePressEdit={handlePressEdit} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change } from \"redux-form\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { isBlockedRoleDetailService } from \"../../../../app/Helpers\";\nimport TabPanelDailiesComponent from \"../../Component/TabPanel/TabPanelDailiesComponent\";\nimport {\n  mapDailiesToForm,\n  setEditDailiesModal,\n  setSelectedEditDailiesData,\n  setTypeFormDailies,\n} from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelDailiesContainer = (props) => {\n  const {\n    userRole,\n    detailService: { typeFormDailies },\n  } = props;\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  return (\n    <TabPanelDailiesComponent\n      isBlockedRole={isBlockedRole}\n      typeFormDailies={typeFormDailies}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  detailService: state.detailService,\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (values) => {\n    await dispatch(setTypeFormDailies(\"edit\"));\n    await dispatch(setSelectedEditDailiesData(values));\n    store.dispatch(setEditDailiesModal(true));\n    mapDailiesToForm();\n  },\n  handlePressAdd: async () => {\n    dispatch(change(\"editDailiesForm\", `id`, \"\"));\n    dispatch(change(\"editDailiesForm\", `startDate`, \"\"));\n    dispatch(change(\"editDailiesForm\", `endDate`, \"\"));\n    dispatch(change(\"editDailiesForm\", `title`, \"\"));\n    dispatch(change(\"editDailiesForm\", `description`, \"\"));\n    await dispatch(setSelectedEditDailiesData({}));\n    await dispatch(setTypeFormDailies(\"add\"));\n    store.dispatch(setEditDailiesModal(true));\n  },\n  handlePressCancel: () => {\n    store.dispatch(setEditDailiesModal(false));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelDailiesContainer);\n\nexport default EnhanceContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderHistories = ({ histories }) => {\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"user_name\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  histories.map((item, index) => {\n    data.push({\n      key: index,\n      user_name: item.user_name,\n      title: item.title,\n      description: item.description,\n      created_date: moment(item.created_date).format(\"DD-MMM-YYYY\"),\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelHistoriesComponent = (props) => {\n  const { histories } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Riwayat</Typography>\n      </Row>\n      <hr />\n      {histories.length > 0 ? (\n        <RenderHistories histories={histories} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelHistoriesComponent;\n","import React from \"react\";\nimport TabPanelHistoriesComponent from \"../../Component/TabPanel/TabPanelHistoriesComponent\";\n\nconst TabPanelHistoriesContainer = (props) => {\n  return <TabPanelHistoriesComponent {...props} />;\n};\n\nexport default TabPanelHistoriesContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderDailies = ({ rejections }) => {\n  const columns = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n    },\n    {\n      title: \"NIK\",\n      dataIndex: \"nik\",\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n    },\n    {\n      title: \"Alasan Reject\",\n      dataIndex: \"reason\",\n    },\n    {\n      title: \"Tanggal Di-Reject\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  rejections.map((item, index) => {\n    data.push({\n      no: index + 1,\n      nik: item.nik,\n      employee_name: item.employee_name,\n      reason: item.reason,\n      created_date: moment(item.created_date).format(\"DD-MMM-YYYY\"),\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelRejectionsComponent = (props) => {\n  const { rejections } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Alasan Reject</Typography>\n      </Row>\n      <hr />\n      {rejections.length > 0 ? (\n        <RenderDailies rejections={rejections} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelRejectionsComponent;\n","import React from \"react\";\nimport TabPanelRejectionsComponent from \"../../Component/TabPanel/TabPanelRejectionsComponent\";\n\nconst TabPanelRejectionsContainer = (props) => {\n  return <TabPanelRejectionsComponent {...props} />;\n};\n\nexport default TabPanelRejectionsContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Col, Checkbox, Divider, Spin } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Radio } from \"antd\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Themes } from \"../../../../property/colors\";\n\nconst TabPanelChecklistComponent = (props) => {\n  const { checklistArr, isLoaded } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Checklist</Typography>\n      </Row>\n      <hr />\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <div class=\"row d-flex flex-wrap col md-12\">\n          {checklistArr.length > 0 ? (\n            checklistArr.map((itemUnit, indexUnit) => (\n              <div key={`checklist-unit-${indexUnit}`}>\n                <Divider\n                  style={{\n                    textTransform: \"uppercase\",\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                  }}\n                  plain\n                >{`Unit ${itemUnit.unitName}`}</Divider>\n                <Row gutter={[16, 16]}>\n                  {itemUnit.checklist.map((itemChecklist, indexChecklist) => (\n                    <Col key={`item-unit-checklist-${indexChecklist}`} span={12}>\n                      <div style={{ width: \"100%\" }}>\n                        <div>\n                          <div class=\"mb-2 mt-2 pb-2\">\n                            <Row\n                              gutter={16}\n                              style={{\n                                alignItems: \"center\",\n                                padding: \"8px\",\n                                borderBottom: \"1px solid #020202\",\n                                marginRight: \"20px\",\n                                marginTop: \"20px\",\n                              }}\n                            >\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={7}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  {itemChecklist.category_form_name}\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  ADJUST\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  CHECK\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPAIR\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={5}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPLACE\n                                </Text>\n                              </Col>\n                            </Row>\n                          </div>\n\n                          <Radio.Group disabled>\n                            {itemChecklist.fields &&\n                              itemChecklist.fields.map(\n                                (itemFields, indexFields) => {\n                                  return (\n                                    <Row\n                                      key={`item-fields-${indexFields}`}\n                                      gutter={16}\n                                      style={{\n                                        alignItems: \"center\",\n                                        padding: \"8px\",\n                                        borderBottom: \"1px solid #020202\",\n                                        marginRight: \"30px\",\n                                      }}\n                                    >\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={8}\n                                      >\n                                        <div>\n                                          <Typography\n                                            style={{\n                                              fontSize: 12,\n                                              color: Themes.secondary,\n                                            }}\n                                          >\n                                            {itemFields.field_name}\n                                          </Typography>\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                    </Row>\n                                  );\n                                }\n                              )}\n                          </Radio.Group>\n                        </div>\n                        <div class=\"mr-3\" />\n                      </div>\n                    </Col>\n                  ))}\n                </Row>\n              </div>\n            ))\n          ) : (\n            <div class=\"page-content\">\n              <Empty />\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst style = {\n  width: \"200px\",\n  alignContent: \"center\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport default TabPanelChecklistComponent;\n","import React, { useState } from \"react\";\nimport TabPanelChecklistComponent from \"../../Component/TabPanel/TabPanelChecklistComponent\";\n\nconst TabPanelChecklistContainer = (props) => {\n  const { checklist, isLoaded } = props;\n  const [checklistArr, setchecklistArr] = useState([]);\n\n  React.useEffect(() => {\n    setchecklistArr(checklist);\n  }, [checklist]);\n\n  return (\n    <TabPanelChecklistComponent\n      isLoaded={isLoaded}\n      checklistArr={checklistArr}\n      {...props}\n    />\n  );\n};\n\nexport default TabPanelChecklistContainer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport DetailServiceTransactionComponent from \"../Component/DetailServiceTransactionComponent\";\nimport {\n  FileImageOutlined,\n  UsergroupAddOutlined,\n  CheckCircleOutlined,\n  EditOutlined,\n  FileTextOutlined,\n  CloseSquareOutlined,\n  HistoryOutlined,\n} from \"@ant-design/icons\";\nimport TabPanelEmployeeContainer from \"./TabPanel/TabPanelEmployeeContainer\";\nimport * as DetailServiceActions from \"../Store/DetailServiceTransactionAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport TabPanelSummaryContainer from \"./TabPanel/TabPanelSummaryContainer\";\nimport TabPanelImagesContainer from \"./TabPanel/TabPanelImagesContainer\";\nimport TabPanelDailiesContainer from \"./TabPanel/TabPanelDailiesContainer\";\nimport TabPanelHistoriesContainer from \"./TabPanel/TabPanelHistoriesContainer\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport TabPanelRejectionsContainer from \"./TabPanel/TabPanelRejectionsContainer\";\nimport TabPanelChecklistContainer from \"./TabPanel/TabPanelChecklistContainer\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { isBlockedRoleDetailService, navigate } from \"../../../app/Helpers\";\n\nconst DetailServiceTransactionContainer = (props) => {\n  const {\n    userRole,\n    setMediaList,\n    setChecklist,\n    setSummaryList,\n    services: { selectedJobService },\n    detailService: {\n      selectedServiceEmployeeList,\n      groupingSelectedServiceMedia,\n      groupingSelectedServiceSummary,\n      groupingSelectedServiceChecklist,\n      selectedServiceDailies,\n      selectedServiceHistories,\n      selectedServiceRejected,\n    },\n  } = props;\n  const [isLoadedChecklist, setIsLoadedChecklist] = React.useState(false);\n  const [isBlockedRole, setIsBlockedRole] = React.useState(false);\n  const [isCompleteLoadedMedia, setIsCompleteLoadedMedia] =\n    React.useState(false);\n  const [isCompleteLoadedSummary, setIsCompleteLoadedSummary] =\n    React.useState(false);\n\n  const TabPanel = [\n    {\n      key: \"panel-gambar\",\n      title: \"Gambar\",\n      icon: <FileImageOutlined />,\n      component: (\n        <TabPanelImagesContainer\n          medias={groupingSelectedServiceMedia}\n          isLoaded={isCompleteLoadedMedia}\n        />\n      ),\n    },\n    {\n      key: \"panel-summary\",\n      title: \"Summary\",\n      icon: <FileTextOutlined />,\n      component: (\n        <TabPanelSummaryContainer\n          summary={groupingSelectedServiceSummary}\n          isLoaded={isCompleteLoadedSummary}\n        />\n      ),\n    },\n    {\n      key: \"panel-teknisi\",\n      title: \"Teknisi\",\n      icon: <UsergroupAddOutlined />,\n      component: (\n        <TabPanelEmployeeContainer employees={selectedServiceEmployeeList} />\n      ),\n    },\n    {\n      key: \"panel-rejected\",\n      title: \"Alasan Reject\",\n      icon: <CloseSquareOutlined />,\n      component: (\n        <TabPanelRejectionsContainer rejections={selectedServiceRejected} />\n      ),\n    },\n    {\n      key: \"panel-dailies\",\n      title: \"Catatan Teknisi\",\n      icon: <EditOutlined />,\n      component: <TabPanelDailiesContainer dailies={selectedServiceDailies} />,\n    },\n    {\n      key: \"panel-histories\",\n      title: \"History\",\n      icon: <HistoryOutlined />,\n      component: (\n        <TabPanelHistoriesContainer\n          title=\"History\"\n          histories={selectedServiceHistories}\n        />\n      ),\n    },\n  ];\n\n  if (selectedJobService.is_external) {\n    TabPanel.push({\n      key: \"panel-checklist\",\n      title: \"Checklist\",\n      icon: <CheckCircleOutlined />,\n      component: (\n        <TabPanelChecklistContainer\n          isLoaded={isLoadedChecklist}\n          checklist={groupingSelectedServiceChecklist}\n        />\n      ),\n    });\n\n    // Move content of checklist to index 0\n    const fromIndex = TabPanel.indexOf(\"panel-checklist\"); // 👉️ 0\n    const toIndex = 0;\n\n    const element = TabPanel.splice(fromIndex, 1)[0];\n    console.log(element); // ['panel-checklist']\n\n    TabPanel.splice(toIndex, 0, element);\n  }\n\n  const onChangeTab = (activeTab) => {\n    switch (activeTab.toLowerCase()) {\n      case \"panel-teknisi\":\n        DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n        break;\n\n      case \"panel-summary\":\n        groupingUnitSummary();\n        break;\n\n      case \"panel-gambar\":\n        groupingUnitMedia();\n        break;\n\n      case \"panel-dailies\":\n        DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n        break;\n\n      case \"panel-histories\":\n        DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n        break;\n\n      case \"panel-checklist\":\n        groupingUnitChecklist();\n        break;\n\n      case \"panel-rejected\":\n        DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n        break;\n\n      default:\n        console.log(\"no panel selected...\");\n        break;\n    }\n  };\n\n  const callInitialize = async () => {\n    await EmployeesActions.loadEmployeeListData(1, 99999);\n    await DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n    await DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n    await DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n    await DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n    await groupingUnitMedia();\n    await groupingUnitSummary();\n    await groupingUnitChecklist();\n  };\n\n  const groupingUnitMedia = async () => {\n    setIsCompleteLoadedMedia(false);\n    const groupingMediaList = [];\n    let sequence = 0;\n\n    const setDispatch = () => {\n      if (sequence === selectedJobService.units.length) {\n        setTimeout(() => {\n          setMediaList(groupingMediaList);\n          setIsCompleteLoadedMedia(true);\n        }, 1000);\n      }\n    };\n\n    if (selectedJobService.units.length > 0) {\n      await selectedJobService.units.map(async (item, index) => {\n        await Invoke.getJobServiceMedia(selectedJobService.id, item.id)\n          .then((dataMedia) => {\n            const imageList = dataMedia.data.callback.data ?? [];\n            // Push to tempporary array\n            groupingMediaList.push({\n              unitName: item.unit_name,\n              image: imageList ?? [],\n            });\n            sequence += 1;\n            setDispatch();\n          })\n          .catch((err) => {\n            groupingMediaList.push({\n              unitName: item.unit_name,\n              image: [],\n            });\n\n            sequence += 1;\n            setDispatch();\n          });\n      });\n    } else {\n      try {\n        // Get media without unitId\n        const { data: dataMedia } = await Invoke.getJobServiceMedia(\n          selectedJobService.id\n        );\n        // Push to tempporary array\n        groupingMediaList.push({\n          unitName: \"All\",\n          image: dataMedia.callback.data ?? [],\n        });\n        setIsCompleteLoadedMedia(true);\n      } catch (error) {\n        setMediaList([]);\n        setIsCompleteLoadedMedia(true);\n      }\n\n      setTimeout(() => {\n        setMediaList(groupingMediaList);\n        setIsCompleteLoadedMedia(true);\n      }, 1000);\n    }\n  };\n\n  const groupingUnitSummary = async () => {\n    setIsCompleteLoadedSummary(false);\n    await DetailServiceActions.getUnitSummary((isCompleted) => {\n      console.log(\"=== isCompleted : \", isCompleted);\n      setIsCompleteLoadedSummary(isCompleted);\n    });\n\n    // const groupingSummaryList = [];\n    // let sequence = 0;\n\n    // const setDispatch = (responseStatus) => {\n    //   if (sequence === selectedJobService.units.length) {\n    //     if (responseStatus === \"error\") {\n    //       setTimeout(() => {\n    //         setSummaryList(groupingSummaryList);\n    //         setIsCompleteLoadedSummary(true);\n    //       }, 1000);\n    //     } else {\n    //       setTimeout(() => {\n    //         setSummaryList(groupingSummaryList);\n    //         setIsCompleteLoadedSummary(true);\n    //       }, 1000);\n    //     }\n    //   }\n    // };\n\n    // if (selectedJobService.units) {\n    //   await selectedJobService.units.map(async (item, index) => {\n    //     await Invoke.getJobServiceSummary(selectedJobService.id, item.id)\n    //       .then((dataSummary) => {\n    //         groupingSummaryList.push({\n    //           id: item.id,\n    //           unitName: item.unit_name,\n    //           summary: dataSummary.data.callback.summary,\n    //         });\n\n    //         sequence += 1;\n    //         setDispatch(dataSummary.status);\n    //       })\n    //       .catch((err) => {\n    //         groupingSummaryList.push({\n    //           id: item.id,\n    //           unitName: item.unit_name,\n    //           summary: [],\n    //         });\n    //         sequence += 1;\n    //         setDispatch(\"error\");\n    //         console.log(err);\n    //       });\n    //   });\n    // }\n  };\n\n  const groupingUnitChecklist = async () => {\n    const groupingChecklist = [];\n\n    if (selectedJobService.units) {\n      await selectedJobService.units.map(async (item, index) => {\n        Invoke.getChecklistData(item.id)\n          .then((dataChecklist) => {\n            groupingChecklist.push({\n              unitName: item.unit_name,\n              checklist: dataChecklist.data.callback,\n            });\n            if (index + 1 === selectedJobService.units.length) {\n              setIsLoadedChecklist(true);\n            }\n          })\n          .catch(() => setIsLoadedChecklist(true));\n      });\n\n      setTimeout(() => {\n        setChecklist(groupingChecklist);\n      }, 1000);\n    }\n  };\n\n  const checkBlockedRole = () => {\n    const isBlock = isBlockedRoleDetailService(userRole[0].role_id);\n    setIsBlockedRole(isBlock);\n  };\n\n  React.useEffect(() => {\n    callInitialize();\n    checkBlockedRole();\n  }, []);\n\n  const handlePressGeneratePdf = () => {\n    // exportDetailServicePdfRevision(printedData);\n    DetailServiceActions.downloadTransactionPdf();\n  };\n\n  const handleBackToListService = () => {\n    store.dispatch(DetailServiceActions.resetDetailService());\n    setTimeout(() => {\n      navigate(\"list_service\");\n    }, 500);\n  };\n\n  return (\n    <DetailServiceTransactionComponent\n      data={selectedJobService}\n      isBlockedRole={isBlockedRole}\n      TabPanel={TabPanel}\n      onChangeTab={onChangeTab}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      goBack={handleBackToListService}\n      medias={groupingSelectedServiceMedia}\n      checklist={groupingSelectedServiceChecklist}\n      employees={selectedServiceEmployeeList}\n      dailies={selectedServiceDailies}\n      summary={groupingSelectedServiceSummary}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  units: state.units,\n  userRole: state.auth.userDetail.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressDelete: (jobId) => {\n    ListServiceActions.deleteJobServiceRequested(jobId);\n  },\n  handlePressActions: (jobId, type) => {\n    ListServiceActions.handlePressActionsRequested(jobId, type);\n  },\n  handlePressEdit: async () => {\n    await dispatch(DetailServiceActions.setEditTransactionModal(true));\n    await DetailServiceActions.mapDetailTransactionToForm();\n    dispatch(DetailServiceActions.setEditTransactionModal(true));\n  },\n  setMediaList: (list) => {\n    dispatch(DetailServiceActions.setGroupingSelectedServicesMediaData(list));\n  },\n  setSummaryList: (list) => {\n    dispatch(DetailServiceActions.setGroupingSummaryData(list));\n  },\n  setChecklist: (list) => {\n    dispatch(DetailServiceActions.setGroupingChecklistData(list));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DetailServiceTransactionContainer);\n\nexport default reduxForm({\n  form: \"detailJobServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Row } from \"antd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const {\n    data,\n    defaultValuesMenu,\n    onChangeRoleMenu,\n    // options,\n    // plainOptions,\n    // optionsWithDisabled,\n  } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"Role ID\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Role\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst RolesEditModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RolesEditModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport RolesEditModalComponent from \"../Component/RolesEditModalComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { formStatus, selectedRoleMenu },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n  const [menuSelected, setMenuSelected] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values, menuSelected);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  const onChangeRoleMenu = (menus) => {\n    setMenuSelected(menus);\n  };\n\n  return (\n    <RolesEditModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumMenu={SelectMenu}\n      menuChecked={selectedRoleMenu}\n      onChangeRoleMenu={onChangeRoleMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) =>\n    RolesActions.saveRoleRequested(type, values, menuSelected),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editRolesForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport RolesEditModalContainer from \"../Container/RolesEditModalContainer\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nconst RolesComponent = (props) => {\n  const { headers, listRoles, renderActionTable, handlePressAddNew } = props;\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Roles</h6>\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Roles\n                  </CButtonAntd>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <RolesEditModalContainer />\n    </div>\n  );\n};\n\nexport default RolesComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport RolesComponent from \"../Component/RolesComponent\";\nimport * as RolesActions from \"../Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RolesContainer = (props) => {\n  const {\n    getListRoles,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    roles: { listRoles },\n  } = props;\n\n  if (listRoles.length > 0) {\n    listRoles.map((item, index) => {\n      listRoles[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListRoles();\n  }, []);\n\n  return (\n    <RolesComponent\n      headers={headers}\n      listRoles={listRoles}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListRoles: () => RolesActions.getListRolesRequested(),\n  handlePressAddNew: async () => {\n    await dispatch(RolesActions.setSelectedRoleDetail({}));\n    await dispatch(RolesActions.setSelectedRoleId(\"\"));\n    dispatch(RolesActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    RolesActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(RolesActions.setFormStatus(\"edit\"));\n    await dispatch(RolesActions.setSelectedRoleId(record.id));\n    await dispatch(RolesActions.setSelectedRoleDetail(record));\n    await RolesActions.getMenuByRolesId(record.id);\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await RolesActions.mapDetailRoleToForm();\n  },\n  handlePressDelete: async (roleId) => {\n    await dispatch(RolesActions.setSelectedRoleId(roleId));\n    RolesActions.deleteRoleRequested(roleId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesContainer);\n\nexport default reduxForm({\n  form: \"rolesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst EmployeeListComponent = (props) => {\n  const {\n    headers,\n    listEmployees,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumRoles,\n    enumDivision,\n    employeeFormValues,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Karyawan</h6>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Karyawan\n                    </CButtonAntd>\n                  </div>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2\">\n                  {/* This Filter */}\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumRoles ?? []}\n                      name=\"role\"\n                      label=\"Filter Role\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Filter Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumDivision ?? []}\n                      name=\"division\"\n                      label=\"Filter Divisi\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployees}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeListComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as EmployeeActions from \"../Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ToolsActions from \"../../Tools/Store/ToolsActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport EmployeesListComponent from \"../Component/EmployeesListComponent\";\nimport {\n  enumSelectGenerator,\n  getIndex,\n  getRolesEnum,\n  navigate,\n} from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getDivisionListDataRequested } from \"../../Division/Store/DivisionActions\";\n\nconst EmployeesListContainer = (props) => {\n  const {\n    getListEmployees,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressEmployeeTools,\n    employees: { listEmployees, paging },\n    roles: { listRoles },\n    branch: { listBranch },\n    division: { listDivision },\n    employeesFormValues,\n    getListTools,\n  } = props;\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployees.length > 0) {\n    listEmployees.map((item, index) => {\n      listEmployees[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, name: item.title };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"NIK\",\n      dataIndex: \"nik\",\n      key: \"nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.nik - b.nik,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name - b.name,\n    },\n    {\n      title: \"Nomor Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => handlePressEdit(record)}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressEmployeeTools(record)}\n        type=\"primary\"\n        icon={<SettingOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployees(1, 10);\n    getDivisionListDataRequested(1, 100);\n    getListTools(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage ?? 1;\n    paging.limit = pageSize ?? 10;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeActions.setPagingEmployees(paging));\n    getListEmployees(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    EmployeeActions.handleSearch(keyword, employeesFormValues);\n  };\n\n  const SelectRoles = listRoles.length > 0 ? getRolesEnum(listRoles) : [];\n  const SelectBranch =\n    listBranch.length > 0 ? enumSelectGenerator(listBranch, \"branch\") : [];\n  const SelectDivision =\n    listDivision.length > 0\n      ? enumSelectGenerator(listDivision, \"division\")\n      : [];\n\n  return (\n    <EmployeesListComponent\n      headers={headers}\n      listEmployees={listEmployees}\n      renderActionTable={renderActionTable}\n      paging={paging}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      enumRoles={SelectRoles}\n      enumDivision={SelectDivision}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  roles: state.roles,\n  branch: state.branch,\n  division: state.division,\n  employeesFormValues: getFormValues(\"employeesForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployees: (page, limit, keyword) =>\n    EmployeeActions.loadEmployeeListData(page, limit, keyword),\n  getListTools: (page, limit) => {\n    ToolsActions.getToolsListDataRequested(page, limit);\n  },\n  handlePressEdit: async (employee) => {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    dispatch(EmployeeActions.setFormStatus(\"edit\"));\n    await EmployeesActions.getRolesByEmployeeId(employee.id);\n    await MasterDataActions.loadCityListData(employee.province_id);\n    await dispatch(EmployeeActions.setSelectedEmployeeId(employee.id));\n    await EmployeesActions.getEmployeeDataByIdRequested(employee.id);\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n      dispatch(ComponentActions.setGlobalLoading(false));\n    }, 500);\n  },\n  handlePressAddNew: async () => {\n    dispatch(EmployeesActions.setFormStatus(\"add\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeId(\"\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeData({}));\n    EmployeesActions.resetForm();\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n    }, 500);\n  },\n  handlePressDelete: async (employeeId) => {\n    await dispatch(EmployeesActions.setSelectedEmployeeId(employeeId));\n    EmployeesActions.deleteEmployeeRequested(employeeId);\n  },\n  handlePressEmployeeTools: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(EmployeeActions.setSelectedEmployeeId(record.id));\n    await dispatch(EmployeeActions.setSelectedEmployeeData(record));\n    setTimeout(() => {\n      navigate(\"employee-tools\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeesListContainer);\n\nexport default reduxForm({\n  form: \"employeesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  LoadingOutlined,\n  PlusOutlined,\n  ArrowLeftOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport { Checkbox, Col, message, Row, Typography, Upload } from \"antd\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst SelectRole = (props) => {\n  const { data, defaultValues, onChangeRoleEmployee } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        onChange={onChangeRoleEmployee}\n        defaultValue={defaultValues}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst EmployeeEditComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    enumBranch,\n    enumRole,\n    enumProvince,\n    enumCity,\n    selectedRoleEmployee,\n    onChangeRoleEmployee,\n    handleUploadPhoto,\n    defaultImage,\n    onChangeProvince,\n    onBackAction,\n    formStatus,\n  } = props;\n\n  const [loading, setLoading] = React.useState(false);\n  const [imageUrl, setImageUrl] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (defaultImage) {\n      setImageUrl(defaultImage);\n    }\n  }, [defaultImage]);\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error(\"Image must smaller than 2MB!\");\n    }\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h1 class=\"card-title\">Profil Karyawan</h1>\n                <p class=\"card-description\">\n                  Anda dapat mengelola role ataupun mengubah data karyawan pada\n                  halaman ini.\n                </p>\n                <Form>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name=\"nik\"\n                        label=\"NIK\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <CSelect\n                        data={enumProvince}\n                        name=\"province\"\n                        label=\"Nama Provinsi\"\n                        onChange={(val) => onChangeProvince(val)}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder=\"* Isi jika ingin merubah password\"\n                        component={CInput}\n                        type=\"password\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <CSelect\n                        name=\"city\"\n                        data={enumCity}\n                        label=\"Kota/Kabupaten\"\n                        disabled={enumCity.length <= 0}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name={\"name\"}\n                        label=\"Nama Karyawan\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <Typography style={{ textAlign: \"left\" }}>\n                        Foto Profil\n                      </Typography>\n                      <div\n                        class=\"card-body\"\n                        style={{\n                          marginLeft: -22,\n                          marginTop: -20,\n                        }}\n                      >\n                        <Upload\n                          name=\"avatar\"\n                          listType=\"picture-card\"\n                          className=\"avatar-uploader overflow-hidden\"\n                          showUploadList={false}\n                          beforeUpload={beforeUpload}\n                          onChange={handleChange}\n                        >\n                          {imageUrl || defaultImage ? (\n                            <>\n                              <img\n                                src={imageUrl}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                  height: \"100%\",\n                                  resizeMode: \"stretch\",\n                                  borderRadius: 5,\n                                }}\n                              />\n                              <div\n                                class=\"row\"\n                                style={{\n                                  backgroundColor: \"#F3F3F3\",\n                                  position: \"absolute\",\n                                  width: 80,\n                                  heigh: 30,\n                                  borderRadius: 50,\n                                  alignItems: \"center\",\n                                  justifyContent: \"center\",\n                                  opacity: 0.7,\n                                }}\n                              >\n                                <Typography style={{ fontSize: 10 }}>\n                                  Ubah\n                                </Typography>\n                                <EditOutlined\n                                  style={{\n                                    color: \"#020202\",\n                                    fontSize: 10,\n                                    marginLeft: 5,\n                                  }}\n                                />\n                              </div>\n                            </>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name={`phone`}\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n                      <Field\n                        name=\"address\"\n                        label=\"Alamat\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                      />\n                      <br />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <hr />\n                      {formStatus === \"edit\" && (\n                        <div class=\"card\">\n                          <div class=\"card-body\">\n                            <h6 class=\"card-title text-center\">Pilih Role</h6>\n                            <SelectRole\n                              data={enumRole}\n                              defaultValues={selectedRoleEmployee}\n                              onChangeRoleEmployee={onChangeRoleEmployee}\n                            />\n                          </div>\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                  <div class=\"row ml-2\">\n                    <CButtonAntd\n                      key=\"submit\"\n                      type=\"primary\"\n                      loading={false}\n                      onClick={onBackAction}\n                      danger\n                      icon={<ArrowLeftOutlined />}\n                    >\n                      Kembali\n                    </CButtonAntd>\n                    <div class=\"ml-3\" />\n                    <CButtonAntd\n                      key=\"submit\"\n                      type=\"primary\"\n                      loading={false}\n                      onClick={handleSubmit(submitForm)}\n                    >\n                      Simpan\n                    </CButtonAntd>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeEditComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport EmployeeEditComponent from \"../Component/EmployeeEditComponent\";\nimport { validateFormEmployee } from \"../../../app/validateForm\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getCitiesEnum, navigate } from \"../../../app/Helpers\";\nimport Invoke from \"../../../app/axios/Invoke\";\n\nconst EmployeeEditContainer = (props) => {\n  const {\n    valid,\n    getListRoles,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { listRoles },\n    branch: { listBranch, paging, keyword },\n    employees: { formStatus, selectedEmployeeData, selectedRoleEmployee },\n    masters: { listProvince, listCity },\n    handleClearSelectedEmployeeRole,\n  } = props;\n  const [listCityState, setListCityState] = React.useState([]);\n  const [roleSelected, setRoleSelected] = React.useState([]);\n  const [defaultImage, setDefaultImage] = React.useState(\"\");\n\n  const { page, limit } = paging;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      EmployeesActions.saveEmployeeRequested(formStatus, values, roleSelected);\n    } else {\n    }\n  };\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editEmployeeForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  const SelectEmployeeRole = [];\n  listRoles.map((item, index) => {\n    SelectEmployeeRole.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListRoles();\n\n    let subItem = [];\n    listCity.map((item, index) => {\n      subItem.push({\n        id: `city-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setListCityState(subItem);\n    // Mapping detail data employee when edit\n    if (formStatus === \"edit\") {\n      MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n      EmployeesActions.mapDetailEmployeeToForm();\n      // convert image url to base64\n      setDefaultImage(selectedEmployeeData.photo);\n      // set selected roles to redux-form\n      store.dispatch(\n        change(\"editEmployeeForm\", \"selectedRoles\", selectedRoleEmployee)\n      );\n    }\n    return () => {\n      handleClearSelectedEmployeeRole();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    setListCityState([]);\n    if (formStatus === \"edit\" && selectedEmployeeData.province_id) {\n      const provinceId =\n        selectedEmployeeData.province_id +\n        \"|\" +\n        selectedEmployeeData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedEmployeeData.province_id]);\n\n  const onChangeRoleEmployee = (roles) => {\n    console.log(\"=== roles : \", roles);\n    setRoleSelected(roles);\n    store.dispatch(change(\"editEmployeeForm\", \"selectedRoles\", roles));\n  };\n\n  const onChangeProvince = async (provinceId) => {\n    setListCityState([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setListCityState(provinceMapping);\n      } else {\n        store.dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n        setListCityState([]);\n      }\n    } catch (error) {\n      setListCityState([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onBackAction = async () => {\n    await handleClearSelectedEmployeeRole();\n    setTimeout(() => {\n      navigate(\"employees\");\n    }, 500);\n  };\n\n  return (\n    <EmployeeEditComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumBranch={SelectBranch}\n      enumRole={SelectEmployeeRole}\n      enumProvince={SelectProvince}\n      enumCity={listCityState}\n      detailEmployee={selectedEmployeeData}\n      handleUploadPhoto={handleUploadPhoto}\n      formStatus={formStatus}\n      selectedRoleEmployee={selectedRoleEmployee}\n      onChangeRoleEmployee={onChangeRoleEmployee}\n      defaultImage={defaultImage}\n      onChangeProvince={onChangeProvince}\n      onBackAction={onBackAction}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  employees: state.employees,\n  branch: state.branch,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListRoles: () => RolesActions.getListRolesRequested(),\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  getDetailEmployee: async (employeeId) =>\n    await EmployeesActions.getEmployeeDataByIdRequested(employeeId),\n  setAutoPopulateEmployee: () => EmployeesActions.setAutoPopulateEmployee(),\n  handleClearSelectedEmployeeRole: () => {\n    dispatch(EmployeesActions.setSelectedRoleEmployee([]));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeEditContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeForm\",\n  validate: validateFormEmployee,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"ID Cabang\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Cabang\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst BranchModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default BranchModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport BranchModalComponent from \"../Component/BranchModalComponent\";\n\nconst BranchModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values) =>\n    BranchActions.saveBranchRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchModalContainer);\n\nexport default reduxForm({\n  form: \"editBranchForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport BranchModalContainer from \"../Container/BranchModalContainer\";\n\nconst { Search } = Input;\n\nconst BranchComponent = (props) => {\n  const {\n    headers,\n    listRoles,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Cabang</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Branch\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <BranchModalContainer />\n    </div>\n  );\n};\n\nexport default BranchComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport BranchComponent from \"../Component/BranchComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListBranch,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    branch: { listBranch, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listBranch.length > 0) {\n    listBranch.map((item, index) => {\n      listBranch[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Cabang\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListBranch(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(BranchActions.setPagingBranch(paging));\n    getListBranch(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListBranch(page, limit, val);\n  };\n\n  return (\n    <BranchComponent\n      headers={headers}\n      listRoles={listBranch}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListBranch: (page, limit, keyword) =>\n    BranchActions.getBranchListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(BranchActions.setSelectedBranchData({}));\n    await dispatch(BranchActions.setSelectedBranchId(\"\"));\n    dispatch(BranchActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    BranchActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(BranchActions.setFormStatus(\"edit\"));\n    await dispatch(BranchActions.setSelectedBranchId(record.id));\n    await dispatch(BranchActions.setSelectedBranchData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await BranchActions.mapDetailBranchToForm();\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(BranchActions.setSelectedBranchId(branchId));\n    BranchActions.deleteBranchRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field name=\"name\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst JobFormsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default JobFormsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport JobFormsModalComponent from \"../Component/JobFormsModalComponent\";\n\nconst JobFormsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    jobForms: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <JobFormsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  jobForms: state.jobForms,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    JobFormsActions.saveJobFormsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsModalContainer);\n\nexport default reduxForm({\n  form: \"editJobForms\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport JobFormsModalContainer from \"../Container/JobFormsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst JobFormsComponent = (props) => {\n  const {\n    headers,\n    listJobForms,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Job Forms</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Job Forms\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listJobForms}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <JobFormsModalContainer />\n    </div>\n  );\n};\n\nexport default JobFormsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport JobFormsComponent from \"../Component/JobFormsComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst JobFormsContainer = (props) => {\n  const {\n    getListJobForms,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    jobForms: { listJobForms, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listJobForms.length > 0) {\n    listJobForms.map((item, index) => {\n      listJobForms[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"40%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListJobForms(page, limit);\n  }, []);\n\n  const onSearch = (val) => {\n    getListJobForms(page, limit, val);\n  };\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(JobFormsActions.setPagingJobForm(paging));\n    getListJobForms(nextPage, pageSize);\n  };\n\n  return (\n    <JobFormsComponent\n      headers={headers}\n      listJobForms={listJobForms}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onSearch={onSearch}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  jobForms: state.jobForms,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListJobForms: (page, limit, val) =>\n    JobFormsActions.getJobFormsListDataRequested(page, limit, val),\n  handlePressAddNew: async () => {\n    await dispatch(JobFormsActions.setSelectedJobFormsData({}));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(\"\"));\n    dispatch(JobFormsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    JobFormsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(JobFormsActions.setFormStatus(\"edit\"));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(record.id));\n    await dispatch(JobFormsActions.setSelectedJobFormsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await JobFormsActions.mapDetailJobFormsToForm();\n  },\n  handlePressDelete: async (jobFormsId) => {\n    await dispatch(JobFormsActions.setSelectedJobFormsId(jobFormsId));\n    JobFormsActions.deleteJobFormsRequested(jobFormsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect data={enumInstanceType} name=\"instanceType\" label=\"Tipe\" />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"riceTrademark\"\n            label=\"Merek Dagang Beras\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerAddress\"\n            label=\"Alamat\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"phone\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingCapacity\"\n            label=\"Kapasitas Penggilingan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingWorkCapacityPerDay\"\n            label=\"Kapasitas Kerja Penggilingan (Per Hari)\"\n            placeholder=\"-\"\n            component={CInput}\n            labelSize={12}\n            type=\"text\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentUnitComponent = () => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"serialNumber\"\n            label=\"Nomor Seri\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"engineNumber\"\n            label=\"Nomor Mesin\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"gearboxNumber\"\n            label=\"Nomor Gearbox\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"production_unit_year\"\n            label=\"Tahun Produksi Unit\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Jam Kerja</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>\n          (per Hari & Hour Meter )\n        </Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <Field\n            name=\"perHour\"\n            label=\"Per Hour\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"hourMeter\"\n            label=\"Hour Meter\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\"></div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Tanggal Transaksi Produk</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>(Bulan & Tahun)</Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Pembelian\" />\n        </div>\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Terima Bantuan\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentUnitComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentSparePartComponent = ({ onChangeServiced, isServiced }) => {\n  const [listServices] = React.useState([\n    {\n      id: `serviced-1`,\n      value: \"true\",\n      label: \"Pernah\",\n    },\n    {\n      id: `serviced-2`,\n      value: \"false\",\n      label: \"Tidak\",\n    },\n  ]);\n\n  const RenderServiceHistory = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_buy_place`}\n                    label=\"Tempat Pembelian Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartSelling = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_qty`}\n                    label=\"Qty\"\n                    placeholder=\"Jumlah Penjualan Spare Part\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartNeeded = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_name`}\n                    label=\"Nama Produk Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_code`}\n                    label=\"Kode Produk\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.part_number`}\n                    label=\"Part Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <CSelect\n            onChange={(val) => onChangeServiced(val)}\n            data={listServices}\n            label=\"Pernah Diservis\"\n            name=\"location\"\n          />\n        </div>\n      </div>\n      {isServiced && (\n        <div class=\"row m-2 text-left\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_place\"\n              label=\"Perbaikan Dilakukan Di\"\n              placeholder=\"cth: Blitar\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_type\"\n              label=\"Jenis Perbaikan\"\n              placeholder=\"cth: Service Sikring\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">Riwayat Penggantian Spare Part</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan service, maksimal 5 unit.\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_changing_histories\"\n          component={RenderServiceHistory}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Penjualan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>\n            (pada saat kunjuangan)\n          </Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan penjualan, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_selling_histories\"\n          component={(_props) => <RenderSparePartSelling {..._props} />}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Daftar Kebutuhan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>(per Quartal)</Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi apabila terdapat kebutuhan spare part, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_needs\"\n          component={(_props) => <RenderSparePartNeeded {..._props} />}\n        />\n        <hr />\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-12\">\n          <Field\n            name=\"note\"\n            label=\"Keterangan\"\n            placeholder=\"cth: Pernah dilakukan service namun tidak rampung\"\n            component={CInput}\n            typeComponent=\"textarea\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentSparePartComponent;\n","import React from \"react\";\n\nimport { Steps, Button, message } from \"antd\";\nimport { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\n\nconst { Text } = Typography;\n\nconst StepsContent = styled.div`\n  min-height: 200px;\n  margin-top: 16px;\n  padding-top: 22px;\n  text-align: center;\n  background-color: #fafafa;\n  border: 1px dashed #e9e9e9;\n  border-radius: 2px;\n`;\n\nconst StepsAction = styled.div`\n  margin-top: 24px;\n`;\n\nconst { Step } = Steps;\n\nconst FormWizardIdentificationComponent = (props) => {\n  const { data, steps, saveFormChanges } = props;\n  const [current, setCurrent] = React.useState(0);\n\n  const onClickNext = () => {\n    setCurrent(current + 1);\n    saveFormChanges(false);\n  };\n\n  const onClickPrevious = () => {\n    setCurrent(current - 1);\n  };\n\n  const onFinished = () => {\n    message.success(\"Processing complete!\");\n    saveFormChanges(true);\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">Form Identification</h4>\n            <h6 class=\"text-small\">\n              {data.milling ? \"(Penggilingan)\" : \"(Non Penggilingan)\"}\n            </h6>\n            <hr />\n            <div class=\"d-flex justify-content-between align-items-baseline\">\n              <div class=\"col-md-6 mb-3\">\n                <Text>Nama Customer : </Text>\n                <Text strong>{data.customer_name ?? \"-\"}</Text>\n                <br />\n                <Text>Tipe : </Text>\n                <Text strong>{data.type ?? \"-\"}</Text>\n                <br />\n                <Text>Cabang : </Text>\n                <Text strong>{data.branch_name ?? \"-\"}</Text>\n                <br />\n                <Text>Status : </Text>\n                <CBadgeText type=\"info\">{data.status ?? \"-\"}</CBadgeText>\n                <br />\n                <Text>Dibuat : </Text>\n                <Text strong>{data.created_date ?? \"-\"}</Text>\n              </div>\n            </div>\n            <Steps current={current}>\n              {steps.map((item) => (\n                <Step\n                  description={item.description}\n                  key={item.title}\n                  title={item.title}\n                />\n              ))}\n            </Steps>\n            <StepsContent>{steps[current].content}</StepsContent>\n            <StepsAction>\n              {current < steps.length - 1 && (\n                <Button type=\"primary\" onClick={onClickNext}>\n                  Next\n                </Button>\n              )}\n              {current === steps.length - 1 && (\n                <Button type=\"primary\" onClick={onFinished}>\n                  Done\n                </Button>\n              )}\n              {current > 0 && (\n                <Button style={{ margin: \"0 8px\" }} onClick={onClickPrevious}>\n                  Previous\n                </Button>\n              )}\n            </StepsAction>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormWizardIdentificationComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst ContentMachineConfigurationComponent = ({\n  machineConf,\n  onAddMachineConf,\n}) => {\n  const RenderBodyHusker = ({ fields, item }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 2) {\n                return;\n              }\n              fields.push({});\n              setTimeout(() => {\n                onAddMachineConf(item);\n              }, 500);\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`${item.type} ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.brand`}\n                    label=\"Merek\"\n                    placeholder=\"cth: merek_1, merek_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.type`}\n                    label=\"Tipe\"\n                    placeholder=\"cth: tipe_1, tipe_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-2\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"cth: 12, 5, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.buy_and_use_year`}\n                    label=\"Tahun Pembelian & Pemakaian\"\n                    placeholder=\"cth: 2015, 2017, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.serial_number`}\n                    label=\"Nomor Seri\"\n                    placeholder=\"cth: 77888, 66555, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return machineConf.map((item, index) => {\n    return (\n      <div key={`machine-conf-${index}`} className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">{item.type}</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Maksimal hanya input 2 field.\n          </p>\n        </div>\n        <FieldArray\n          name={`engine_confs.${item.name}.list`}\n          component={(_props) => <RenderBodyHusker item={item} {..._props} />}\n        />\n        <hr />\n      </div>\n    );\n  });\n};\n\nexport default ContentMachineConfigurationComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneRegularComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumInstanceType}\n            name=\"instanceType\"\n            label=\"Tipe Instansi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"productName\"\n            label=\"Nama Produk\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instancePhoneNumber\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-4\">\n        <h5 className=\"card-title\">Alamat Customer</h5>\n      </div>\n      <div class=\"row ml-2 mr-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"kelurahan\"\n            label=\"Kelurahan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"kecamatan\"\n            label=\"Kecamatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n          <Field\n            name=\"postalCode\"\n            label=\"Kode Pos\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneRegularComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, getFormValues, reduxForm } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport {\n  getCitiesEnum,\n  getMachineConf,\n  getProvinceEnum,\n  SelectInstanceType,\n  SelectInstanceTypeRegular,\n  SelectStatusMilling,\n} from \"../../../../app/Helpers\";\nimport ContentStepOneComponent from \"../../Component/Wizard/ContentStepOneComponent\";\nimport ContentUnitComponent from \"../../Component/Wizard/ContentUnitComponent\";\nimport ContentSparePartComponent from \"../../Component/Wizard/ContentSparePartComponent\";\nimport FormWizardIdentificationComponent from \"../../Component/Wizard/FormWizardIdentificationComponent\";\nimport ContentMachineConfigurationComponent from \"../../Component/Wizard/ContentMachineConfigurationComponent\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport ContentStepOneRegularComponent from \"../../Component/Wizard/ContentStepOneRegularComponent\";\nimport * as IdentificationActions from \"../../Store/IdentificationActions\";\n\nconst FormWizardIdentificationContainer = (props) => {\n  const [cities, setCities] = React.useState([]);\n  const [serviced, setServiced] = React.useState(false);\n  const {\n    identification: { selectedIdentificationData, formStatus },\n    masters: { listProvince },\n    machineConfiguration: { listMachine },\n    identificationFormValues,\n  } = props;\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"wizardIdentificationForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onChangeServiced = (val) => {\n    const isServiced = val.split(\"|\");\n    if (isServiced[0] === \"true\") {\n      setServiced(true);\n    } else {\n      setServiced(false);\n    }\n  };\n\n  const onAddMachineConf = (item) => {\n    store.dispatch(\n      change(\n        \"wizardIdentificationForm\",\n        `engine_confs.${item.name}.id`,\n        item.id\n      )\n    );\n  };\n\n  const saveFormChanges = (isLastStep) => {\n    IdentificationActions.saveIdentificationRequested(\n      formStatus,\n      identificationFormValues,\n      isLastStep\n    );\n  };\n\n  const steps = [];\n\n  if (selectedIdentificationData.milling) {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceType}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Konfigurasi Mesin\",\n      content: (\n        <ContentMachineConfigurationComponent\n          machineConf={getMachineConf(listMachine)}\n          onAddMachineConf={onAddMachineConf}\n        />\n      ),\n    });\n  } else {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneRegularComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceTypeRegular}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Unit\",\n      content: <ContentUnitComponent />,\n    });\n  }\n\n  steps.push({\n    title: \"Spare Part\",\n    content: (\n      <ContentSparePartComponent\n        onChangeServiced={onChangeServiced}\n        isServiced={serviced}\n      />\n    ),\n  });\n\n  return (\n    <FormWizardIdentificationComponent\n      data={selectedIdentificationData}\n      steps={steps}\n      saveFormChanges={saveFormChanges}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  identification: state.identification,\n  masters: state.masters,\n  machineConfiguration: state.machineConfiguration,\n  identificationFormValues: getFormValues(\"wizardIdentificationForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormWizardIdentificationContainer);\n\nexport default reduxForm({\n  form: \"wizardIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  formStatus,\n  listCustomer,\n  listType,\n  listBranch,\n  listLocation,\n  listMilling\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          {formStatus === \"edit\" && (\n            <Field\n              name=\"id\"\n              label=\"ID Cabang\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          )}\n        </div>\n        <div class=\"col-md-12\">\n          <CSelect\n            // onChange={(val) => handleAutoPopulateUnitModel(val, indexUnit)}\n            showSearch\n            data={listCustomer}\n            label=\"Nama Customer\"\n            name=\"customer\"\n          />\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <CSelect data={listBranch} label=\"Cabang\" name=\"branch\" />\n            </div>\n            <div class=\"col-md-6\">\n              <CSelect data={listLocation} label=\"Lokasi\" name=\"location\" />\n            </div>\n          </div>\n          <CSelect data={listType} label=\"Tipe Identifikasi\" name=\"type\" />\n          <CSelect data={listMilling} label=\"Milling\" name=\"milling\" />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst IdentificationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n    enumCustomers,\n    enumType,\n    enumBranch,\n    enumLocation,\n    enumMilling,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n          listCustomer={enumCustomers}\n          listType={enumType}\n          listBranch={enumBranch}\n          listLocation={enumLocation}\n          listMilling={enumMilling}\n        />\n      }\n    />\n  );\n};\n\nexport default IdentificationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as CustomersActions from \"../../Customers/Store/CustomersActions\";\nimport IdentificationModalComponent from \"../Component/IdentificationModalComponent\";\nimport {\n  SelectLocation,\n  SelectMilling,\n  SelectType,\n} from \"../../../app/Helpers\";\n\nconst IdentificationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    identification: { formStatus },\n    handleSubmitForm,\n    customers: { listCustomers },\n    branch: { listBranch },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomer = [];\n  listCustomers.map((item, index) => {\n    SelectCustomer.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    CustomersActions.getCustomerListDataByPaging(1, 300);\n  }, []);\n\n  return (\n    <IdentificationModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumCustomers={SelectCustomer}\n      enumType={SelectType}\n      enumBranch={SelectBranch}\n      enumLocation={SelectLocation}\n      enumMilling={SelectMilling}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  identification: state.identification,\n  component: state.component,\n  masters: state.masters,\n  customers: state.customers,\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    IdentificationActions.saveIdentificationRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IdentificationModalContainer);\n\nexport default reduxForm({\n  form: \"editIdentificationhForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport IdentificationModalContainer from \"../Container/IdentificationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ListIdentificationComponent = (props) => {\n  const {\n    headers,\n    listIdentification,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Identifikasi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Identifikasi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listIdentification}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    size=\"small\"\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <IdentificationModalContainer />\n    </div>\n  );\n};\n\nexport default ListIdentificationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListIdentificationComponent from \"../Component/ListIdentificationComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ListIdentificationContainer = (props) => {\n  const {\n    getListIdentification,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    identification: { listIdentification, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listIdentification.length > 0) {\n    listIdentification.map((item, index) => {\n      listIdentification[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_id\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_id.length - b.branch_id.length,\n    },\n    {\n      title: \"Tipe Identifikasi\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"20%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListIdentification(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(IdentificationActions.setPagingIdentification(paging));\n    getListIdentification(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListIdentification(page, limit, val);\n  };\n\n  return (\n    <ListIdentificationComponent\n      headers={headers}\n      listIdentification={listIdentification}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  identification: state.identification,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListIdentification: (page, limit, keyword) =>\n    IdentificationActions.getIdentificationListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(IdentificationActions.setSelectedIdentificationData({}));\n    await dispatch(IdentificationActions.setSelectedIdentificationId(\"\"));\n    dispatch(IdentificationActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    IdentificationActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(IdentificationActions.setFormStatus(\"edit\"));\n    await dispatch(\n      IdentificationActions.setSelectedIdentificationId(record.id)\n    );\n    await dispatch(IdentificationActions.setSelectedIdentificationData(record));\n    setTimeout(() => {\n      navigate(\"form-identification\");\n    }, 500);\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(IdentificationActions.setSelectedIdentificationId(branchId));\n    IdentificationActions.deleteIdentificationRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListIdentificationContainer);\n\nexport default reduxForm({\n  form: \"identificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, formStatus }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {formStatus === \"edit\" && (\n          <div class=\"col-md-12\">\n            <Field\n              name=\"id\"\n              label=\"ID Konfigurasi Mesin\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          </div>\n        )}\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Konfigurasi Mesin\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst MachineConfigurationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n        />\n      }\n    />\n  );\n};\n\nexport default MachineConfigurationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as MachineConfigurationActions from \"../Store/MachineConfigurationActions\";\nimport BranchModalComponent from \"../Component/MachineConfigurationModalComponent\";\n\nconst MachineConfigurationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    MachineConfigurationActions.saveMachineRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationModalContainer);\n\nexport default reduxForm({\n  form: \"editMachineConfigurationForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport MachineConfigurationModalContainer from \"../Container/MachineConfigurationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst MachineConfigurationComponent = (props) => {\n  const {\n    headers,\n    listMachine,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Konfigurasi Mesin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Konfigurasi Mesin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listMachine}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <MachineConfigurationModalContainer />\n    </div>\n  );\n};\n\nexport default MachineConfigurationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as MachineActions from \"../Store/MachineConfigurationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport MachineConfigurationComponent from \"../Component/MachineConfigurationComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst MachineConfigurationContainer = (props) => {\n  const {\n    getListMachine,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    machineConfiguration: { listMachine, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMachine.length > 0) {\n    listMachine.map((item, index) => {\n      listMachine[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Konfigurasi Mesin\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"50%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListMachine(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(MachineActions.setPagingMachineConf(paging));\n    getListMachine(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListMachine(page, limit, val);\n  };\n\n  return (\n    <MachineConfigurationComponent\n      headers={headers}\n      listMachine={listMachine}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  machineConfiguration: state.machineConfiguration,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMachine: (page, limit, keyword) =>\n    MachineActions.getMachineListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(MachineActions.setSelectedMachineData({}));\n    await dispatch(MachineActions.setSelectedMachineId(\"\"));\n    dispatch(MachineActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    MachineActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(MachineActions.setFormStatus(\"edit\"));\n    await dispatch(MachineActions.setSelectedMachineId(record.id));\n    await dispatch(MachineActions.setSelectedMachineData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await MachineActions.mapDetailMachineToForm();\n  },\n  handlePressDelete: async (machineId) => {\n    await dispatch(MachineActions.setSelectedMachineId(machineId));\n    MachineActions.deleteMachineRequested(machineId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationContainer);\n\nexport default reduxForm({\n  form: \"machineConfigurationForm\",\n})(EnhanceContainer);\n","import React, { useState } from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Upload, message, Typography } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\n\nconst beforeUpload = (file) => {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n  return isJpgOrPng && isLt2M;\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  handleUploadPhoto,\n  selectedUnitsData,\n}) => {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {/* <div class=\"col-md-12\">\n          <Text style={{ marginBottom: 10 }}>Foto Unit</Text>\n          <Upload\n            name=\"avatar\"\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n            // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            beforeUpload={beforeUpload}\n            onChange={handleChange}\n          >\n            {imageUrl ? (\n              <img\n                src={imageUrl}\n                alt=\"avatar\"\n                style={{ height: \"100%\", width: \"100%\" }}\n              />\n            ) : (\n              uploadButton\n            )}\n          </Upload>\n        </div> */}\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"name\" label=\"Nama Unit\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport UnitsModalComponent from \"../Component/UnitsModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    UnitsActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    UnitsActions.saveUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitForm\",\n  validate: validateFormUnit,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input, Table, Tooltip } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport UnitsModalContainer from \"../Container/UnitsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <Tooltip placement=\"top\" title=\"Edit unit\">\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </Tooltip>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    size=\"small\"\n                    columns={headers}\n                    dataSource={listUnits}\n                    // renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitsComponent;\n","import { Button, Space, Tooltip, Typography } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  BoxPlotOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/UnitsComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressUnitModel,\n    handlePressUnitFields,\n    handlePressLink,\n    units: { listUnits, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const tooltipText = <span>Unit Model</span>;\n\n  if (listUnits.length > 0) {\n    listUnits.map((item, index) => {\n      listUnits[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <Tooltip placement=\"topLeft\" title=\"Edit unit\">\n        <CButtonAntd\n          onClick={() => {\n            handlePressEdit(record);\n          }}\n          type=\"primary\"\n          icon={<EditOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n      <Tooltip placement=\"top\" title={tooltipText}>\n        <CButtonAntd\n          onClick={() => handlePressUnitModel(record.id)}\n          type=\"primary\"\n          icon={<BoxPlotOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n      <CButtonAntd\n        onClick={() => handlePressUnitFields(record)}\n        type=\"primary\"\n        icon={<FileAddOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n      render: (unit, record) => (\n        <Button\n          block\n          onClick={() => handlePressLink(record)}\n          type=\"link\"\n          style={{ whiteSpace: \"normal\", textAlign: \"left\" }}\n        >\n          <Typography\n            style={{ color: \"#1890ff\", fontWeight: \"bold\", fontSize: 11 }}\n          >\n            {unit}\n          </Typography>\n        </Button>\n      ),\n    },\n    {\n      title: \"Divisi\",\n      dataIndex: \"division\",\n      key: \"division\",\n      width: \"10%\",\n      sorter: (a, b) => a.division.length - b.division.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  React.useEffect(() => {\n    getListUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitsActions.setPagingUnit(paging));\n    getListUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnit(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listUnits}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnit: (page, limit, keyword) =>\n    UnitsActions.getUnitListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitsActions.setSelectedUnitData({}));\n    await dispatch(UnitsActions.setSelectedUnitId(\"\"));\n    dispatch(UnitsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitsActions.mapDetailUnitToForm();\n  },\n  handlePressDelete: async (unitId) => {\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    UnitsActions.deleteUnitRequested(unitId);\n  },\n  handlePressUnitModel: async (unitId) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    setTimeout(() => {\n      navigate(\"unit-models\");\n    }, 500);\n  },\n  handlePressUnitFields: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    setTimeout(() => {\n      navigate(\"unit-fields\");\n    }, 500);\n  },\n  handlePressLink: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    setTimeout(() => {\n      navigate(\"unit-job-forms\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"unitsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumProvince,\n  onChangeProvince,\n  cities,\n  enumBranch,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"name\"\n              label=\"Nama Customer\"\n              placeholder=\"Nama..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"picPhone\"\n              label=\"Telepon PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"username\"\n              label=\"Username\"\n              placeholder=\"Username..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              onChange={(val) => onChangeProvince(val)}\n              data={enumProvince}\n              name=\"province\"\n              label=\"Nama Provinsi\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"password\"\n              label=\"Password\"\n              placeholder=\"Password..\"\n              component={CInput}\n              type=\"password\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              data={cities}\n              name=\"city\"\n              label=\"Kota/Kabupaten\"\n              disabled={cities.length <= 0}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"phone\"\n              label=\"Telepon\"\n              placeholder=\"cth: 0821xxx\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"workHour\"\n              label=\"Jam Kerja\"\n              placeholder=\"cth : 08:00 - 15:20\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"pic\"\n              label=\"PIC\"\n              placeholder=\"PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"address\"\n              label=\"Alamat\"\n              component={CInput}\n              type=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst CustomerModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    enumProvince,\n    onChangeProvince,\n    cities,\n    enumBranch,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      width={900}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          enumProvince={enumProvince}\n          onChangeProvince={onChangeProvince}\n          cities={cities}\n          enumBranch={enumBranch}\n        />\n      }\n    />\n  );\n};\n\nexport default CustomerModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as CustomersActions from \"../Store/CustomersActions\";\nimport CustomerModalComponent from \"../Component/CustomerModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { getCitiesEnum } from \"../../../app/Helpers\";\n\nconst CustomerModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { listBranch },\n    masters: { listMenu, listProvince },\n    customers: { selectedCustomerData, formStatus },\n    handleSubmitForm,\n  } = props;\n  const [cities, setCities] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    setCities([]);\n    if (formStatus === \"edit\" && selectedCustomerData.province_id) {\n      const provinceId =\n        selectedCustomerData.province_id +\n        \"|\" +\n        selectedCustomerData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedCustomerData.province_id]);\n\n  React.useEffect(() => {\n    return () => {\n      CustomersActions.setFormStatus(\"add\");\n    };\n  });\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"editCustomerForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  return (\n    <CustomerModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumProvince={SelectProvince}\n      onChangeProvince={onChangeProvince}\n      cities={cities}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  customers: state.customers,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    CustomersActions.saveCustomerRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerModalContainer);\n\nexport default reduxForm({\n  form: \"editCustomerForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CustomerModalContainer from \"../Container/CustomerModalContainer\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst CustomerComponent = (props) => {\n  const {\n    headers,\n    listCustomers,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    isBlocked\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Customer</h6>\n                </div>\n                <div class=\"row align-items-center\">\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Customers\n                  </CButtonAntd>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2 mt-3\">\n                  {!isBlocked && <div class=\"col-md-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>}\n                  <div class=\"col-md-4 mt-4\">\n                    <div class=\"mt-2\" />\n                    <Search\n                      placeholder=\"Cari Customer\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listCustomers}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <CustomerModalContainer />\n    </div>\n  );\n};\n\nexport default CustomerComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { formValueSelector, reduxForm } from \"redux-form\";\nimport * as CustomerActions from \"../Store/CustomersActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CustomerComponent from \"../Component/CustomerComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex, isBlockedRoleCustomer } from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"customerForm\");\n\nconst CustomerContainer = (props) => {\n  const {\n    user: { roles, branchId },\n    getListCustomer,\n    getListBranch,\n    getListProvince,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    customerBranchValue,\n    customers: { listCustomers, paging, keyword },\n    branch: { listBranch },\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n  const { page, totalPage, limit } = paging;\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  if (listCustomers.length > 0) {\n    listCustomers.map((item, index) => {\n      listCustomers[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n    {\n      title: \"PIC | Phone\",\n      dataIndex: `phone`,\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const checkBlockedRole = () => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomer(roleId);\n\n    if (branchId) {\n      if (isBlockedRole) {\n        getListCustomer(1, 10, \"\", branchId);\n      } else {\n        getListCustomer(1, 10, \"\");\n      }\n    } else {\n      getListCustomer(1, 10, \"\");\n    }\n\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    getListBranch();\n    getListProvince();\n    checkBlockedRole();\n  }, []);\n\n  const onChangePagination = async (nextPage) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n    await store.dispatch(CustomerActions.setPagingCustomer(paging));\n    getListCustomer(nextPage, limit, keyword);\n  };\n\n  const onSearch = (val) => {\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomer(roleId);\n\n    if (branchId) {\n      if (isBlockedRole) {\n        getListCustomer(page, limit, val, branchId);\n      } else {\n        getListCustomer(page, limit, val, customerBranchValue);\n      }\n    } else {\n      getListCustomer(page, limit, val, customerBranchValue);\n    }\n  };\n\n  return (\n    <CustomerComponent\n      headers={headers}\n      paging={paging}\n      isBlocked={isBlocked}\n      listCustomers={listCustomers}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers,\n  branch: state.branch,\n  customerBranchValue: selector(state, \"branch\"),\n  user: state.auth.userDetail,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListCustomer: (page, limit, keyword, branchId) => {\n    const splitBranch = branchId ? branchId.split(\"|\") : [\"\"];\n    CustomerActions.getCustomerListDataByPaging(\n      page,\n      limit,\n      keyword,\n      splitBranch[0]\n    );\n  },\n  getListBranch: () => BranchActions.getBranchListDataRequested(1, 250),\n  getListProvince: () => MasterDataActions.loadProvinceListData(),\n  handlePressAddNew: async () => {\n    await dispatch(CustomerActions.setSelectedCustomerData({}));\n    await dispatch(CustomerActions.setSelectedCustomerId(\"\"));\n    dispatch(CustomerActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    CustomerActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(CustomerActions.setFormStatus(\"edit\"));\n    await dispatch(CustomerActions.setSelectedCustomerId(record.id));\n    await dispatch(CustomerActions.setSelectedCustomerData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await CustomerActions.mapDetailCustomerToForm();\n  },\n  handlePressDelete: async (customerId) => {\n    await dispatch(CustomerActions.setSelectedCustomerId(customerId));\n    CustomerActions.deleteCustomerRequested(customerId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerContainer);\n\nexport default reduxForm({\n  form: \"customerForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Peralatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default ToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTools } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport ToolsModalComponent from \"../Component/ToolsModalComponent\";\n\nconst ToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    tools: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <ToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    ToolsActions.saveToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editToolsForm\",\n  validate: validateFormTools,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ToolsModalContainer from \"../Container/ToolsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ToolsComponent = (props) => {\n  const {\n    headers,\n    listTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Peralatan</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Peralatan\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToolsModalContainer />\n    </div>\n  );\n};\n\nexport default ToolsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ToolsComponent from \"../Component/ToolsComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ToolsContainer = (props) => {\n  const {\n    getListTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    tools: { listTools, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listTools.length > 0) {\n    listTools.map((item, index) => {\n      listTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListTools(1, 10);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ToolsActions.setPagingTools(paging));\n    getListTools(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListTools(page, limit, val);\n  };\n\n  return (\n    <ToolsComponent\n      headers={headers}\n      listTools={listTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListTools: (page, limit, keyword) =>\n    ToolsActions.getToolsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(ToolsActions.setSelectedToolsData({}));\n    await dispatch(ToolsActions.setSelectedToolsId(\"\"));\n    dispatch(ToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    ToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(ToolsActions.setFormStatus(\"edit\"));\n    await dispatch(ToolsActions.setSelectedToolsId(record.id));\n    await dispatch(ToolsActions.setSelectedToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await ToolsActions.mapDetailToolsToForm();\n  },\n  handlePressDelete: async (toolsId) => {\n    await dispatch(ToolsActions.setSelectedToolsId(toolsId));\n    ToolsActions.deleteToolsRequested(toolsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsContainer);\n\nexport default reduxForm({\n  form: \"toolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Judul\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst FormCategoryModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default FormCategoryModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormCategory } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport BranchModalComponent from \"../Component/FormCategoryModalComponent\";\n\nconst FormCategoryModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    FormCategoryActions.saveFormCategoryRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryModalContainer);\n\nexport default reduxForm({\n  form: \"editFormCategory\",\n  validate: validateFormCategory,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport FormCategoryModalContainer from \"../Container/FormCategoryModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst FormCategoryComponent = (props) => {\n  const {\n    headers,\n    listFormCategory,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Kategori Form</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Kategori Form\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listFormCategory}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <FormCategoryModalContainer />\n    </div>\n  );\n};\n\nexport default FormCategoryComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport FormCategoryComponent from \"../Component/FormCategoryComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst FormCategoryContainer = (props) => {\n  const {\n    getListFormCategory,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    formCategory: { listFormCategory, paging, keyword },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listFormCategory.length > 0) {\n    listFormCategory.map((item, index) => {\n      listFormCategory[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListFormCategory(page, limit, keyword);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(FormCategoryActions.setPagingFormCategory(paging));\n    getListFormCategory(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListFormCategory(page, limit, val);\n  };\n\n  return (\n    <FormCategoryComponent\n      headers={headers}\n      listFormCategory={listFormCategory}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  formCategory: state.formCategory,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListFormCategory: (page, limit, keyword) =>\n    FormCategoryActions.getFormCatgeoryListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData({}));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(\"\"));\n    dispatch(FormCategoryActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    FormCategoryActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(FormCategoryActions.setFormStatus(\"edit\"));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(record.id));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await FormCategoryActions.mapDetailCategoryToForm();\n  },\n  handlePressDelete: async (formCategoryId) => {\n    await dispatch(\n      FormCategoryActions.setSelectedFormCategoryId(formCategoryId)\n    );\n    FormCategoryActions.deleteFormCategoryRequested(formCategoryId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryContainer);\n\nexport default reduxForm({\n  form: \"formCategory\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-12 mt-3\">\n            <Field\n              name=\"name\"\n              label=\"Nama Model\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModelsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModelsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit, validateFormUnitModel } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitsModelsModalComponent from \"../Component/UnitsModelsModalComponent\";\n\nconst UnitModelsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModelsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitModelActions.saveUnitModelsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitModelForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport UnitModelsModalContainer from \"../Container/UnitModelsModalContainer\";\nimport { navigate } from \"../../../app/Helpers\";\n\nconst { Search } = Input;\n\nconst UnitModelsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit Model</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Model\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitModelsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitModelsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FieldNumberOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitModelsComponent from \"../Component/UnitModelsComponent\";\n\nconst UnitModelsContainer = (props) => {\n  const {\n    getListUnitModels,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressSerialNumber,\n    unitModels: { listUnitModels, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitModels.length > 0) {\n    listUnitModels.map((item, index) => {\n      listUnitModels[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Model\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressSerialNumber(record)}\n        type=\"ghost\"\n        icon={<FieldNumberOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitModels(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitModelActions.setPagingUnitModel(paging));\n    getListUnitModels(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitModels(page, limit, val);\n  };\n\n  return (\n    <UnitModelsComponent\n      headers={headers}\n      listUnits={listUnitModels}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitModels: state.unitModels,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitModels: (page, limit, keyword) =>\n    UnitModelActions.getUnitModelListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitModelActions.setSelectedUnitModelData({}));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(\"\"));\n    dispatch(UnitModelActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitModelActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitModelActions.setFormStatus(\"edit\"));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitModelActions.mapDetailUnitModelToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(UnitModelActions.setSelectedUnitModelId(unitModelId));\n    UnitModelActions.deleteUnitModelRequested(unitModelId);\n  },\n  handlePressSerialNumber: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    setTimeout(() => {\n      navigate(\"unit-serial-number\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsContainer);\n\nexport default reduxForm({\n  form: \"unitsModelsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumFormCategory,\n  enumJobForm,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumFormCategory ?? []}\n              name=\"formCategory\"\n              label=\"Kategori\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"fieldName\"\n              label=\"Nama Field\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumJobForm ?? []}\n              name=\"jobForm\"\n              label=\"Jenis Form\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitFieldsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumFormCategory,\n    enumJobForm,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumFormCategory={enumFormCategory}\n          enumJobForm={enumJobForm}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitFieldsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsModalComponent from \"../../Component/UnitFields/UnitFieldsModalComponent\";\nimport Invoke from \"../../../../app/axios/Invoke\";\n\nconst UnitFieldsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    handleSubmitForm,\n  } = props;\n  const [formCategory, setFormCategory] = React.useState([]);\n  const [jobForm, setJobForm] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const loadOption = async () => {\n    const { data } = await Invoke.getFormCategory(1, 100, \"\");\n    const dataJobForm = await Invoke.getListJobForm(1, 100, \"\");\n    const listFormCategory = data.callback.data;\n    const listJobForm = dataJobForm.data.callback.data;\n\n    const SelectFormCategory = [];\n    listFormCategory.map((item, index) => {\n      SelectFormCategory.push({\n        id: `form-category-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    const SelectJobForm = [];\n    listJobForm.map((item, index) => {\n      SelectJobForm.push({\n        id: `job-form-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setFormCategory(SelectFormCategory);\n    setJobForm(SelectJobForm);\n  };\n\n  React.useEffect(() => {\n    loadOption();\n  }, []);\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitFieldsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      enumFormCategory={formCategory}\n      enumJobForm={jobForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitFieldsActions.saveUnitFieldsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitFieldsForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/UnitFields/UnitFieldsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitFieldsComponent = (props) => {\n  const {\n    headers,\n    listUnitFields,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitsData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Field Unit : ${selectedUnitsData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Field\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitFields}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitFieldsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsComponent from \"../../Component/UnitFields/UnitFieldsComponent\";\n\nconst UnitFieldsContainer = (props) => {\n  const {\n    getListUnitFields,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitFields: { listUnitFields, paging },\n    units: { selectedUnitsData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitFields.length > 0) {\n    listUnitFields.map((item, index) => {\n      listUnitFields[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Job Form\",\n      dataIndex: \"job_form_name\",\n      key: \"job_form_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\n    },\n    {\n      title: \"Nama Field\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Kategori\",\n      dataIndex: \"category_form_name\",\n      key: \"category_form_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.category_form_name.length - b.category_form_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"40%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitFields(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitFieldsActions.setPagingUnitFields(paging));\n    getListUnitFields(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitFields(page, limit, val);\n  };\n\n  return (\n    <UnitFieldsComponent\n      headers={headers}\n      listUnitFields={listUnitFields}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedUnitsData={selectedUnitsData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitFields: state.unitFields,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitFields: (page, limit, keyword) =>\n    UnitFieldsActions.getUnitFieldsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData({}));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(\"\"));\n    dispatch(UnitFieldsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitFieldsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitFieldsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(record.id));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitFieldsActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(unitFieldsId));\n    UnitFieldsActions.deleteUnitFieldRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsContainer);\n\nexport default reduxForm({\n  form: \"unitFieldsForm\",\n})(EnhanceContainer);\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_IDENTIFICATION_LIST_DATA =\n  \"SET_REPORT_IDENTIFICATION_LIST_DATA\";\nexport const SET_PAGING_REPORT_IDENTIFICATION =\n  \"SET_PAGING_REPORT_IDENTIFICATION\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportIdentificationListData = (payload) => {\n  return {\n    type: SET_REPORT_IDENTIFICATION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportIdentification = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportIdentificationListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportIdentification(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportIdentificationComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Identifikasi</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportIdentificationComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportIdentificationActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportIdentificationComponent\";\n\nconst ReportIdentificationContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportIdentificationContainer);\n\nexport default reduxForm({\n  form: \"reportIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Typography } from \"antd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumHeadDivision,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"title\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12 mt-3\">\n          <CSelect\n            showSearch\n            data={enumHeadDivision}\n            name=\"headDivision\"\n            label=\"Kepala Divisi\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumHeadDivision,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumHeadDivision={enumHeadDivision}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport DivisionModalComponent from \"../Component/DivisionModalComponent\";\nimport { enumSelectGenerator } from \"../../../app/Helpers\";\n\nconst DivisionModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    division: { formStatus },\n    masters: { listMenu },\n    employees: { listEmployees },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectEmployees = enumSelectGenerator(listEmployees, \"employee\");\n\n  return (\n    <DivisionModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumHeadDivision={SelectEmployees}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  division: state.division,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    DivisionActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    DivisionActions.saveDivisionRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionForm\",\n  validate: validateDivisionForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport DivisionModalContainer from \"../Container/DivisionModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Divisi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Divisi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <DivisionModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport * as DivisionUnitActions from \"../Store/DivisionUnitActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/DivisionComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListDivision,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressDivisionUnit,\n    division: { listDivision, paging },\n    getListEmlpoyee \n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n      key: \"title\",\n      width: \"30%\",\n      sorter: (a, b) => a.title.length - b.title.length,\n    },\n    {\n      title: \"Kepala Divisi\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDivisionUnit(record)}\n        type=\"primary\"\n        icon={<FileAddOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivision(page, limit);\n    getListEmlpoyee(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionActions.setPagingDivision(paging));\n    getListDivision(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivision(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listDivision}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivision: (page, limit, keyword) =>\n    DivisionActions.getDivisionListDataRequested(page, limit, keyword),\n  getListEmlpoyee: (page, limit) => {\n    EmployeeActions.loadEmployeeListData(page, limit);\n  },\n  handlePressAddNew: async () => {\n    await dispatch(DivisionActions.setSelectedDivisionData({}));\n    await dispatch(DivisionActions.setSelectedDivisionId(\"\"));\n    dispatch(DivisionActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionActions.mapDetailDivisionToForm();\n  },\n  handlePressDelete: async (divisionId) => {\n    await dispatch(DivisionActions.setSelectedDivisionId(divisionId));\n    DivisionActions.deleteDivisionRequested(divisionId);\n  },\n  handlePressDivisionUnit: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    setTimeout(() => {\n      navigate(\"division-unit\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"divisionForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumTools }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Peralatan Karyawan</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumTools}\n              name=\"tools\"\n              label=\"Peralatan\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst EmployeeToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    enumTools,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formStatus={formStatus}\n          enumTools={enumTools}\n        />\n      }\n    />\n  );\n};\n\nexport default EmployeeToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateEmployeeToolsForm, validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport EmployeeToolsModalComponent from \"../../Component/EmployeeTools/EmployeeToolsModalComponent\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\n\nconst EmployeeToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    employeeTools: { formStatus },\n    tools: { listTools },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectTools = enumSelectGenerator(listTools);\n\n  return (\n    <EmployeeToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      enumTools={SelectTools}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  employeeTools: state.employeeTools,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    EmployeeToolsActions.saveEmployeeToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeToolsForm\",\n  validate: validateEmployeeToolsForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport {\n  PlusOutlined,\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n} from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport EmployeeToolsModalContainer from \"../../Container/EmployeeTools/EmployeeToolsModalContainer\";\n\nconst { Search } = Input;\n\nconst EmployeeToolsComponent = (props) => {\n  const {\n    headers,\n    listEmployeeTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedEmployeeData,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Karyawan : ${selectedEmployeeData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-2 mb-2\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"employees\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Peralatan\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak PDF\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployeeTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <EmployeeToolsModalContainer />\n    </div>\n  );\n};\n\nexport default EmployeeToolsComponent;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nexport const generateEmployeeToolsReport = async (data) => {\n  const { selectedEmployeeData, listEmployeeTools } = data;\n  const newListData = [];\n\n  // eslint-disable-next-line array-callback-return\n  await listEmployeeTools.map((item, index) => {\n    newListData.push({ no: index + 1, name: item.name, check: \"-\" });\n  });\n\n  const doc = new jsPDF();\n\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Peralatan Karyawan\", 100, 20, \"center\");\n\n  doc.setFontSize(12);\n  doc.setFont(\"courier\");\n  //   Line 1\n  doc.text(15, 42, `Karyawan`);\n  doc.text(`: ${selectedEmployeeData.name.toUpperCase()}`, 50, 42);\n\n  doc.text(15, 49, `Cabang`);\n  doc.text(`: ${selectedEmployeeData.branch_name ?? \"-\"}`, 50, 49);\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    let docCell = dataCell.doc;\n\n    // --> Draw Circle shape for checklist\n    if (dataCell.cell.section === \"body\" && dataCell.column.index === 2) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 22, dataCell.cell.y + 4, 2, \"FD\");\n    } else if (\n      dataCell.cell.section === \"body\" &&\n      dataCell.column.index === 3\n    ) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 12, dataCell.cell.y + 4, 2, \"FD\");\n    }\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  doc.autoTable({\n    startY: 57,\n    body: newListData,\n    theme: \"plain\",\n    headStyles: { halign: \"center\" },\n    styles: { overflow: \"linebreak\" },\n    columns: [\n      { header: \"#\", dataKey: \"no\" },\n      { header: \"Nama Peralatan\", dataKey: \"name\" },\n      { header: \"Check\", dataKey: \"test1\" },\n      { header: \"NA\", dataKey: \"test2\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  // === Signature ===\n  doc.addPage();\n  doc.setFontSize(16);\n  doc.setFont(\"Times-Roman\", \"regular\");\n  //   Line 2\n  doc.setFontSize(12);\n\n  doc.setFontSize(16);\n  doc.text(80, 90, `MENGETAHUI`);\n\n  //   Line 1\n  doc.text(45, 120, `Karyawan`);\n  doc.text(130, 120, `Coordinator /`);\n  doc.text(130, 127, `Supervisor`);\n\n  doc.text(45, 163, `(...........................)`);\n  doc.text(130, 163, `(...........................)`);\n\n  //   Export\n  doc.save(\n    `Peralatan-Karyawan-${selectedEmployeeData.name.replace(\" \", \"-\")}.pdf`\n  );\n};\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport EmployeeToolsComponent from \"../../Component/EmployeeTools/EmployeeToolsComponent\";\nimport { generateEmployeeToolsReport } from \"../../Store/EmployeeTools/EmployeeToolsReport\";\n\nconst EmployeeToolsContainer = (props) => {\n  const {\n    getListEmployeeTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    employeeTools: { listEmployeeTools, paging },\n    employees: { selectedEmployeeData, selectedEmployeeId },\n    employeeToolsFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployeeTools.length > 0) {\n    listEmployeeTools.map((item, index) => {\n      listEmployeeTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployeeTools(selectedEmployeeId, page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeToolsActions.setPagingEmployeeTools(paging));\n    getListEmployeeTools(selectedEmployeeId, nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListEmployeeTools(selectedEmployeeId, page, limit, val);\n  };\n\n  const handlePressGeneratePdf = () => {\n    const dataPrinted = {\n      selectedEmployeeData,\n      listEmployeeTools,\n    };\n    generateEmployeeToolsReport(dataPrinted, employeeToolsFormValues);\n  };\n\n  return (\n    <EmployeeToolsComponent\n      headers={headers}\n      listEmployeeTools={listEmployeeTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedEmployeeData={selectedEmployeeData}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  employeeTools: state.employeeTools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployeeTools: (employeeId, page, limit, keyword) =>\n    EmployeeToolsActions.getEmployeeToolsRequested(\n      employeeId,\n      page,\n      limit,\n      keyword\n    ),\n  handlePressAddNew: async () => {\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData({}));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(\"\"));\n    dispatch(EmployeeToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    EmployeeToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(EmployeeToolsActions.setFormStatus(\"edit\"));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(record.id));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await EmployeeToolsActions.mapDetailEmployeeToolsToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(\n      EmployeeToolsActions.setSelectedEmployeeToolsId(unitFieldsId)\n    );\n    EmployeeToolsActions.deleteEmployeeToolsRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsContainer);\n\nexport default reduxForm({\n  form: \"employeeToolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, enumUnits }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect showSearch data={enumUnits} name=\"unit\" label=\"Unit\" />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionUnitModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumUnits,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumUnits={enumUnits}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionUnitModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionUnitForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\nimport DivisionUnitModalComponent from \"../../Component/DivisionUnit/DivisionUnitModalComponent\";\n\nconst DivisionUnitModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    divisionUnit: { formStatus, selectedDivisionUnitData },\n    units: { listUnits },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectUnits = enumSelectGenerator(listUnits, \"unit\");\n\n  return (\n    <DivisionUnitModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedDivisionUnitData={selectedDivisionUnitData}\n      enumUnits={SelectUnits}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    DivisionUnitActions.saveDivisionUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionUnitForm\",\n  validate: validateDivisionUnitForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/DivisionUnit/DivisionUnitModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionUnitComponent = (props) => {\n  const {\n    headers,\n    listDivisionUnit,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedDivisionData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Divisi : ${selectedDivisionData.title}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"division\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listDivisionUnit}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionUnitComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport DivisionUnitComponent from \"../../Component/DivisionUnit/DivisionUnitComponent\";\n\nconst DivisionUnitContainer = (props) => {\n  const {\n    getListDivisionUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    divisionUnit: { listDivisionUnit, paging },\n    division: { selectedDivisionData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivisionUnit.length > 0) {\n    listDivisionUnit.map((item, index) => {\n      listDivisionUnit[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"unit_name\",\n      key: \"unit_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.unit_name.length - b.unit_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"20%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivisionUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionUnitActions.setPagingDivisionUnit(paging));\n    getListDivisionUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivisionUnit(page, limit, val);\n  };\n\n  return (\n    <DivisionUnitComponent\n      headers={headers}\n      listDivisionUnit={listDivisionUnit}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedDivisionData={selectedDivisionData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivisionUnit: (page, limit, keyword) =>\n    DivisionUnitActions.getDivisionUnitListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData({}));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(\"\"));\n    dispatch(DivisionUnitActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionUnitActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionUnitActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(record.id));\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionUnitActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (divisionUnitId) => {\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(divisionUnitId));\n    DivisionUnitActions.deleteUnitFieldRequested(divisionUnitId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitContainer);\n\nexport default reduxForm({\n  form: \"divisionUnitForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  Image,\n} from \"@react-pdf/renderer\";\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#E4E4E4\",\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n});\n\nconst DetailServiceReportComponent = () => {\n  return (\n    <PDFViewer style={{ flex: 1 }}>\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>Section #1</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n          <View style={styles.section}>\n            <Image\n              style={{\n                width: 300,\n                height: 100,\n              }}\n              src=\"https://cors-anywhere.herokuapp.com/https://drive.google.com/file/d/1hwrQUgM6CvBwxIZUu1fRASxKQr0FxfsM/view\"\n            />\n          </View>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nexport default DetailServiceReportComponent;\n","import React from \"react\";\nimport DetailServiceReportComponent from \"../Components/DetailServiceReportComponent\";\n\nconst DetailServiceReportContainer = () => {\n  return <DetailServiceReportComponent />;\n};\n\nexport default DetailServiceReportContainer;\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumCustomer,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumCustomer ?? []}\n              name=\"customer\"\n              label=\"Pilih Customer\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"serialNumber\"\n              label=\"Serial Number\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              typeComponent=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ModalUnitSerialNumberComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumCustomer,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumCustomer={enumCustomer}\n        />\n      }\n    />\n  );\n};\n\nexport default ModalUnitSerialNumberComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormUnitModel, validateUnitSerialNumberForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport ModalUnitSerialNumberComponent from \"../../Component/UnitSerialNumber/ModalUnitSerialNumberComponent\";\n\nconst ModalUnitSerialNumber = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    customers: { listCustomersDropdown },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <ModalUnitSerialNumberComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedUnitsData={selectedUnitsData}\n      enumCustomer={SelectCustomerData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  customers: state.customers,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitSerialNumberActions.saveUnitSerialNumberRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModalUnitSerialNumber);\n\nexport default reduxForm({\n  form: \"editUnitSerialNumberForm\",\n  validate: validateUnitSerialNumberForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport ModalUnitSerialNumberContainer from \"../../Container/UnitSerialNumber/ModalUnitSerialNumberContainer\";\n\nconst { Search } = Input;\n\nconst UnitSerialNumberComponent = (props) => {\n  const {\n    headers,\n    listUnitSerialNumber,\n    listCustomer,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitModelsData,\n    onChangeCustomer,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <h6 class=\"ml-1 card-title\">{`Unit Serial Number : ${selectedUnitModelsData.name}`}</h6>\n                  <p class=\"card-description ml-1\">\n                    Silahkan pilih customer untuk menampilkan data serial number\n                  </p>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-1 mb-3\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit-models\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Serial Number\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-7\">\n                    <CSelect\n                      showSearch\n                      data={listCustomer}\n                      name=\"customer\"\n                      label=\"Pilih Customer\"\n                      onChange={(customer) => {\n                        onChangeCustomer(customer);\n                      }}\n                    />\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      name=\"keyword\"\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitSerialNumber}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ModalUnitSerialNumberContainer />\n    </div>\n  );\n};\n\nexport default UnitSerialNumberComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport * as CustomerActions from \"../../../Customers/Store/CustomersActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitSerialNumberComponent from \"../../Component/UnitSerialNumber/UnitSerialNumberComponent\";\n\nconst UnitSerialNumberContainer = (props) => {\n  const {\n    getUnitSerialNumber,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitSerialNumber: {\n      listUnitSerialNumber,\n      paging,\n      selectedtUnitSerialNumber,\n    },\n    unitModels: { selectedUnitModelsData },\n    customers: { listCustomersDropdown },\n    unitSerialNumberFormValues,\n  } = props;\n\n  const { dispatch } = store;\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitSerialNumber.length > 0) {\n    listUnitSerialNumber.map((item, index) => {\n      listUnitSerialNumber[index] = {\n        ...item,\n        no: getIndex(page, limit)[index],\n      };\n    });\n  }\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Serial Number\",\n      dataIndex: \"serial_number\",\n      key: \"serial_number\",\n      width: \"30%\",\n      sorter: (a, b) => a.serial_number.length - b.serial_number.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    // getUnitSerialNumber(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitSerialNumberActions.setPagingUnitModel(paging));\n    getUnitSerialNumber(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\n  };\n\n  const handleOnchangeCustomer = (customer) => {\n    if (!customer) {\n      dispatch(UnitSerialNumberActions.setUnitSerialNumberData([]));\n      return;\n    }\n\n    const splitCustomerId = customer.split(\"|\");\n    UnitSerialNumberActions.getUnitSerialNumber(\n      page,\n      limit,\n      \"\",\n      splitCustomerId[0]\n    );\n  };\n\n  return (\n    <UnitSerialNumberComponent\n      headers={headers}\n      listUnitSerialNumber={listUnitSerialNumber}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      listCustomer={SelectCustomerData}\n      selectedUnitModelsData={selectedUnitModelsData}\n      selectedtUnitSerialNumber={selectedtUnitSerialNumber}\n      onChangeCustomer={handleOnchangeCustomer}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitSerialNumber: state.unitSerialNumber,\n  unitModels: state.unitModels,\n  customers: state.customers,\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getUnitSerialNumber: (page, limit, keyword) =>\n    UnitSerialNumberActions.getUnitSerialNumber(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberData({}));\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberId(\"\"));\n    dispatch(UnitSerialNumberActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitSerialNumberActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitSerialNumberActions.setFormStatus(\"edit\"));\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(record.id)\n    );\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberData(record)\n    );\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitSerialNumberActions.mapDetailUnitSerialNumberToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(unitModelId)\n    );\n    UnitSerialNumberActions.deleteUnitModelRequested(unitModelId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitSerialNumberContainer);\n\nexport default reduxForm({\n  form: \"unitSerialNumberForm\",\n})(EnhanceContainer);\n","import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { navigate } from \"../../../app/Helpers\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst UnitJobFormsComponent = (props) => {\r\n  const {\r\n    headers,\r\n    listUnitJobForms,\r\n    renderActionTable,\r\n    onSearch,\r\n    selectedUnitsData,\r\n  } = props;\r\n\r\n  return (\r\n    <div class=\"page-content\">\r\n      <div class=\"mt-5\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 grid-margin stretch-card\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <div class=\"mb-2\">\r\n                  <h6 class=\"ml-1 card-title\">{`Unit : ${selectedUnitsData.name}`}</h6>\r\n                  {/* <p class=\"card-description ml-1\">\r\n                    Silahkan pilih customer untuk menampilkan data \r\n                  </p> */}\r\n                </div>\r\n                <div class=\"row d-flex justify-content-between mb-2\">\r\n                  <div class=\"col-md-7\">\r\n                    <div class=\"row ml-1 mb-3\">\r\n                      <CButtonAntd\r\n                        onClick={() => navigate(\"unit\")}\r\n                        type=\"primary\"\r\n                        icon={<ArrowLeftOutlined />}\r\n                        size=\"middle\"\r\n                        danger\r\n                      >\r\n                        Kembali\r\n                      </CButtonAntd>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4 mt-4\">\r\n                    <Search\r\n                      name=\"keyword\"\r\n                      placeholder=\"Cari\"\r\n                      onSearch={onSearch}\r\n                      enterButton\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <CTableAntd data={listUnitJobForms} headers={headers} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitJobFormsComponent;\r\n","import { Space } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFormValues, reduxForm } from \"redux-form\";\r\nimport * as UnitJobFormsActions from \"../../Units/Store/UnitJobFormActions\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport UnitJobFormsComponent from \"../Component/UnitJobFormsComponent\";\r\n\r\nconst UnitJobFormsContainer = (props) => {\r\n  const {\r\n    units: { selectedUnitsData },\r\n    unitJobForms: { listUnitJobForms },\r\n    handlePressEdit,\r\n    handlePressDelete,\r\n  } = props;\r\n\r\n  const { dispatch } = store;\r\n  //   const { page, limit, totalPage } = paging;\r\n\r\n  if (listUnitJobForms.length > 0) {\r\n    listUnitJobForms.map((item, index) => {\r\n      listUnitJobForms[index] = {\r\n        ...item,\r\n        no: index + 1,\r\n      };\r\n    });\r\n  }\r\n\r\n  const headers = [\r\n    {\r\n      title: \"No\",\r\n      dataIndex: \"no\",\r\n      key: \"no\",\r\n      width: \"7%\",\r\n      sorter: (a, b) => a.no - b.no,\r\n    },\r\n    {\r\n      title: \"Job Form\",\r\n      dataIndex: \"job_form_name\",\r\n      key: \"job_form_name\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\r\n    },\r\n    {\r\n      title: \"Deskripsi\",\r\n      dataIndex: \"descriptions\",\r\n      key: \"descriptions\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    UnitJobFormsActions.getUnitJobFormsListDataRequested(\"\");\r\n    // getUnitSerialNumber(page, limit);\r\n  }, []);\r\n\r\n  const onSearch = (keyword) => {\r\n    // UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\r\n  };\r\n\r\n  return (\r\n    <UnitJobFormsComponent\r\n      headers={headers}\r\n      selectedUnitsData={selectedUnitsData}\r\n      listUnitJobForms={listUnitJobForms}\r\n      onSearch={onSearch}\r\n      // {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  units: state.units,\r\n  unitJobForms: state.unitJobForms,\r\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UnitJobFormsContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"unitJobForms\",\r\n})(EnhanceContainer);\r\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst WorkingHoursComponent = (props) => {\n  const {\n    headers,\n    listMonitoringEmployee,\n    onChangePagination,\n    paging,\n    onSearch,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Jam Kerja Karyawan</h6>\n                </div>\n\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"No. Service\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Laporan\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listMonitoringEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkingHoursComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as WorkingHoursActions from \"../Store/WorkingHoursActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeMonitoringEmployee,\n  getStatusWorkingHours,\n} from \"../../../app/Helpers\";\nimport { Tag, Typography } from \"antd\";\nimport WorkingHoursComponent from \"../Component/WorkingHoursComponent\";\nimport { exportWorkingHoursReportPdf } from \"../Store/WorkingHoursReport\";\nimport moment from \"moment\";\n\nconst WorkingHoursContainer = (props) => {\n  const {\n    getListWorkingHours,\n    handlePressAddNew,\n    workingHours: { listWorkingHours, paging },\n    branch: { listBranchDropdown },\n    workingHoursFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const printedData = {\n    listWorkingHours,\n    from: moment(),\n    until: moment(),\n  };\n\n  if (listWorkingHours.length > 0) {\n    listWorkingHours.map((item, index) => {\n      listWorkingHours[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"No. Service\",\n      dataIndex: \"no_service\",\n      key: \"no_service\",\n      width: \"20%\",\n      sorter: (a, b) => a.no_service.length - b.no_service.length,\n      render: (no_service) => {\n        return (\n          <Tag style={{ width: 100, textAlign: \"center\" }} color={\"#f0f0f0\"}>\n            <Typography style={{ fontWeight: \"bold\" }}>\n              {no_service ? `${no_service}` : \"-\"}\n            </Typography>\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created\",\n      key: \"created\",\n      width: \"30%\",\n      sorter: (a, b) => a.created.length - b.created.length,\n    },\n    {\n      title: \"Jam Kerja\",\n      dataIndex: \"total_hours\",\n      key: \"total_hours\",\n      render: (total_hours) => {\n        return (\n          <Tag style={{ width: 80, textAlign: \"center\" }} color={\"#1890ff\"}>\n            {total_hours ? `${total_hours} Jam` : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.total_hours - b.total_hours,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n      render: (status) => {\n        let color = getStatusWorkingHours(status).color;\n        return (\n          <Tag style={{ width: 112, textAlign: \"center\" }} color={color}>\n            {status ? getStatusWorkingHours(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Tanggal Selesai\",\n      dataIndex: \"done\",\n      key: \"done\",\n      width: \"30%\",\n      sorter: (a, b) => a.done.length - b.done.length,\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranchDropdown.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListWorkingHours(page, limit);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      WorkingHoursActions.setPagingMonitoringEmployee(paging)\n    );\n    getListWorkingHours(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    WorkingHoursActions.handleSearch(workingHoursFormValues);\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportWorkingHoursReportPdf(printedData, workingHoursFormValues);\n  };\n\n  return (\n    <WorkingHoursComponent\n      headers={headers}\n      listMonitoringEmployee={listWorkingHours}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  workingHours: state.workingHours,\n  branch: state.branch,\n  workingHoursFormValues: getFormValues(\"workingHoursForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListWorkingHours: (page, limit, from, until, keyword) =>\n    WorkingHoursActions.getWorkingHoursListDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WorkingHoursContainer);\n\nexport default reduxForm({\n  form: \"workingHoursForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport moment from \"moment\";\r\nimport { getStatusWorkingHours } from \"../../../app/Helpers\";\r\n\r\nexport const exportWorkingHoursReportPdf = (data, values) => {\r\n  const { listWorkingHours, from, until } = data;\r\n  const startDate = moment(from).format(\"YYYY-MM-DD\");\r\n  const dueDate = moment(until).format(\"YYYY-MM-DD\");\r\n  const workingHoursList = [];\r\n\r\n  listWorkingHours.map((item, index) => {\r\n    workingHoursList.push({\r\n      no: index + 1,\r\n      employeeNik: item.employee_nik,\r\n      employeeName: item.employee_name,\r\n      noService: item.no_service,\r\n      customerName: item.customer_name,\r\n      type: item.job_type,\r\n      totalHours: item.total_hours,\r\n      status: item.status ? getStatusWorkingHours(item.status).value : \"-\",\r\n      createdDate: item.created,\r\n      doneDate: item.done,\r\n    });\r\n  });\r\n\r\n  const doc = new jsPDF();\r\n  // doc.text({from_left}, {from_top})\r\n  doc.setFontSize(20);\r\n  doc.setFont(\"courier\");\r\n  doc.text(\"Jam Kerja Karyawan\", 100, 20, \"center\");\r\n  doc.setFontSize(16);\r\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\r\n\r\n  doc.setFontSize(12);\r\n\r\n  //   Line 1\r\n  doc.text(15, 42, `Dari Tanggal`);\r\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\r\n  doc.text(15, 49, `Sampai Tanggal`);\r\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\r\n\r\n  // Check if filtered by branch\r\n  if (values) {\r\n    if (values.branch) {\r\n      const splitBranch = values.branch.split(\"|\");\r\n      doc.text(15, 56, `Cabang`);\r\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\r\n    }\r\n  }\r\n\r\n  // drawCell is function for styling font, color and add content to every cell\r\n  const drawCell = (dataCell) => {\r\n    // --> This for custom styling font too\r\n    // else if (dataCell.column.dataKey === \"no\") {\r\n    //   docCell.setFont(\"Verdana\", \"bold\");\r\n    //   docCell.setFontSize(12);\r\n    // }\r\n  };\r\n\r\n  // --> didParseCell is function for styling border, line, etc of every cell\r\n  const didParseCell = (dataCell) => {\r\n    let s = dataCell.cell.styles;\r\n    s.lineColor = [0, 0, 0];\r\n    s.lineWidth = 0.1;\r\n    s.font = \"courier\";\r\n\r\n    // --> This for spesific custom cell with spesific index\r\n    // if (dataCell.row.index === 1) {\r\n    //   s.lineColor = [0, 0, 0];\r\n    //   s.borders = \"t\";\r\n    // }\r\n  };\r\n\r\n  const headTable = [\r\n    [\r\n      \"No\",\r\n      \"NIK\",\r\n      \"Nama Karyawan\",\r\n      \"No. Service\",\r\n      \"Nama Customer\",\r\n      \"Dibuat\",\r\n      \"Jam Kerja\",\r\n      \"Status\",\r\n      \"Tanggal Selesai\",\r\n    ],\r\n  ];\r\n\r\n  doc.autoTable({\r\n    startY: values ? 65 : 60,\r\n    body: workingHoursList,\r\n    theme: \"plain\",\r\n    head: headTable,\r\n    headStyles: { halign: \"center\", valign: \"middle\" },\r\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\r\n    columns: [\r\n      { header: \"No\", dataKey: \"no\" },\r\n      { header: \"NIK\", dataKey: \"employeeNik\" },\r\n      { header: \"Nama Karyawan\", dataKey: \"employeeName\" },\r\n      { header: \"No. Service\", dataKey: \"noService\" },\r\n      { header: \"Nama Customer\", dataKey: \"customerName\" },\r\n      { header: \"Dibuat\", dataKey: \"createdDate\" },\r\n      { header: \"Jam Kerja\", dataKey: \"totalHours\" },\r\n      { header: \"Status\", dataKey: \"status\" },\r\n      { header: \"Tanggal Selesai\", dataKey: \"doneDate\" },\r\n    ],\r\n    willDrawCell: drawCell,\r\n    didParseCell: didParseCell,\r\n    columnStyles: {\r\n      0: { columnWidth: 28 },\r\n      1: { columnWidth: 20 },\r\n      // 2: { halign: \"center\" },\r\n      // 3: { halign: \"center\" },\r\n      // 4: { halign: \"center\" },\r\n      // 5: { halign: \"center\" },\r\n      // 6: { halign: \"center\" },\r\n    },\r\n    tableLineColor: [0, 0, 0],\r\n    tableLineWidth: 0.3,\r\n  });\r\n\r\n  //   Export\r\n  doc.save(\"working-hours.pdf\");\r\n};\r\n","import \"react-toastify/dist/ReactToastify.css\";\n\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer } from \"react-toastify\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport TemplateContainer from \"../modules/Template/Container/TemplateContainer\";\nimport withTemplate from \"./withTemplate\";\n\n// Pages\nimport DashboardContainer from \"../modules/Dashboard/Container/DashboardContainer\";\nimport LoginContainer from \"../modules/Auth/Container/LoginContainer\";\nimport InternalServiceContainer from \"../modules/InternalService/Container/InternalServiceContainer\";\nimport ExternalServiceContainer from \"../modules/ExternalService/Container/ExternalServiceContainer\";\nimport MonitoringEmployeeContainer from \"../modules/MonitoringEmployee/Container/MonitoringEmployeeContainer\";\nimport ReportServiceRepairContainer from \"../modules/ReportServiceRepair/Container/ReportServiceRepairContainer\";\nimport ReportEmployeeContainer from \"../modules/ReportEmployee/Container/ReportEmployeeContainer\";\nimport ListServicesContainer from \"../modules/ListServices/Container/ListServicesContainer\";\nimport AdminContainer from \"../modules/Admin/Container/AdminContainer\";\nimport NotFoundPage from \"../components/NotFound/NotFound\";\nimport AuthMiddleware from \"./AuthMiddleware\";\nimport DetailServiceTransactionContainer from \"../modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer\";\nimport RolesContainer from \"../modules/Roles/Container/RolesContainer\";\nimport EmployeesListContainer from \"../modules/Employees/Container/EmployeesListContainer\";\nimport EmployeeEditContainer from \"../modules/Employees/Container/EmployeeEditContainer\";\nimport BranchContainer from \"../modules/Branch/Container/BranchContainer\";\nimport JobFormsContainer from \"../modules/JobForms/Container/JobFormsContainer\";\nimport FormWizardIdentificationContainer from \"../modules/Identification/Container/Wizard/FormWizardIdentificationContainer\";\nimport ListIdentificationContainer from \"../modules/Identification/Container/ListIdentificationContainer\";\nimport MachineConfigurationContainer from \"../modules/MachineConfiguration/Container/MachineConfigurationContainer\";\nimport UnitsContainer from \"../modules/Units/Container/UnitsContainer\";\nimport CustomerContainer from \"../modules/Customers/Container/CustomerContainer\";\nimport ToolsContainer from \"../modules/Tools/Container/ToolsContainer\";\nimport FormCategoryContainer from \"../modules/FormCategory/Container/FormCategoryContainer\";\nimport UnitModelsContainer from \"../modules/Units/Container/UnitModelsContainer\";\nimport UnitFieldsContainer from \"../modules/Units/Container/UnitFields/UnitFieldsContainer\";\nimport ReportIdentificationContainer from \"../modules/ReportIdentification/Container/ReportIdentificationContainer\";\nimport DivisionContainer from \"../modules/Division/Container/DivisionContainer\";\nimport EmployeeToolsContainer from \"../modules/Employees/Container/EmployeeTools/EmployeeToolsContainer\";\nimport DivisionUnitContainer from \"../modules/Division/Container/DivisionUnit/DivisionUnitContainer\";\nimport DetailServiceReportContainer from \"../modules/ReportPdf/Containers/DetailServiceReportContainer\";\nimport UnitSerialNumberContainer from \"../modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer\";\nimport UnitJobFormsContainer from \"../modules/Units/Container/UnitJobFormsContainer\";\nimport WorkingHoursContainer from \"../modules/WorkingHours/Container/WorkingHoursContainer\";\n\nexport default function Navigation() {\n  const authenticatedPage = (\n    component,\n    footerImg,\n    menuPath = \"\",\n    isSecureRoute = false,\n    footer\n  ) => {\n    return AuthMiddleware(\n      withTemplate(TemplateContainer, component, footerImg, footer),\n      menuPath,\n      isSecureRoute\n    );\n  };\n\n  const templating = (component, isLandingPage) => {\n    return withTemplate(TemplateContainer, component, isLandingPage);\n  };\n\n  const Login = templating(LoginContainer, false);\n  const NotFound = templating(NotFoundPage, false);\n  const Admin = authenticatedPage(AdminContainer, true, \"/admin\", true);\n  const Roles = authenticatedPage(RolesContainer, true, \"/role\", true);\n  const JobForms = authenticatedPage(\n    JobFormsContainer,\n    true,\n    \"/jobforms\",\n    true\n  );\n  const Branches = authenticatedPage(BranchContainer, true, \"/cabang\", true);\n  const EmployeeList = authenticatedPage(\n    EmployeesListContainer,\n    true,\n    \"/employees\",\n    true\n  );\n  const EmployeeTools = authenticatedPage(\n    EmployeeToolsContainer,\n    true,\n    \"/employee-tool\",\n    true\n  );\n  const Division = authenticatedPage(\n    DivisionContainer,\n    true,\n    \"/division\",\n    true\n  );\n  const DivisionUnit = authenticatedPage(\n    DivisionUnitContainer,\n    true,\n    \"/division-unit\",\n  );\n  const EditEmployee = authenticatedPage(\n    EmployeeEditContainer,\n    true,\n    \"/edit-employee\"\n  );\n  const Dashboard = authenticatedPage(DashboardContainer, true, \"/dashboard\", true);\n  const Units = authenticatedPage(UnitsContainer, true, \"/unit\", true);\n  const UnitModels = authenticatedPage(\n    UnitModelsContainer,\n    true,\n    \"/unit-models\",\n  );\n  const UnitFields = authenticatedPage(\n    UnitFieldsContainer,\n    true,\n    \"/unit-fields\",\n  );\n  const UnitJobForms = authenticatedPage(\n    UnitJobFormsContainer,\n    true,\n    \"/unit-job-forms\",\n  );\n  const UnitSerialNumber = authenticatedPage(\n    UnitSerialNumberContainer,\n    true,\n    \"/unit-serial-number\"\n  );\n  const Tools = authenticatedPage(ToolsContainer, true, \"/tools\");\n  const Customers = authenticatedPage(CustomerContainer, true, \"/customer\");\n  const FormCategory = authenticatedPage(\n    FormCategoryContainer,\n    true,\n    \"/category\",\n    true\n  );\n  const MachineConfiguration = authenticatedPage(\n    MachineConfigurationContainer,\n    true,\n    \"/machine\",\n    true\n  );\n  const InternalService = authenticatedPage(\n    InternalServiceContainer,\n    true,\n    \"/internal-service\",\n    true\n  );\n  const ExternalService = authenticatedPage(\n    ExternalServiceContainer,\n    true,\n    \"/external-service\",\n    true\n  );\n  const MonitoringEmployee = authenticatedPage(\n    MonitoringEmployeeContainer,\n    true,\n    \"/monitoring-employee\",\n    true\n  );\n  const ReportServiceRepair = authenticatedPage(\n    ReportServiceRepairContainer,\n    true,\n    \"/report_trans\",\n    true\n  );\n  const ReportEmployee = authenticatedPage(\n    ReportEmployeeContainer,\n    true,\n    \"/report_employee\",\n    true\n  );\n  const WorkingHours = authenticatedPage(\n    WorkingHoursContainer,\n    true,\n    \"/working-hours\",\n    true\n  );\n  const ListServices = authenticatedPage(\n    ListServicesContainer,\n    true,\n    \"/list_service\",\n    true\n  );\n  const ReportIdentification = authenticatedPage(\n    ReportIdentificationContainer,\n    true,\n    \"/report_identification\",\n    true\n  );\n  const DetailService = authenticatedPage(\n    DetailServiceTransactionContainer,\n    true,\n    \"/detail-services\"\n  );\n  const FormWizardIdentification = authenticatedPage(\n    FormWizardIdentificationContainer,\n    true,\n    \"/form-identification\"\n  );\n  const ListIdentification = authenticatedPage(\n    ListIdentificationContainer,\n    true,\n    \"/identification\",\n    true\n  );\n\n  return (\n    <>\n      <Helmet titleTemplate=\"PT. Rutan - \" defaultTitle=\"PT. Rutan\"></Helmet>\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates={true}\n        position=\"top-right\"\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"\n        progressBar={true}\n        closeOnToastrClick={true}\n      />\n      <ToastContainer autoClose={2000} />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n        <Route exact path=\"/auth\" component={Login} />\n        <Route exact path=\"/admin\" component={Admin} />\n        <Route exact path=\"/role\" component={Roles} />\n        <Route exact path=\"/cabang\" component={Branches} />\n        <Route exact path=\"/machine\" component={MachineConfiguration} />\n        <Route exact path=\"/jobforms\" component={JobForms} />\n        <Route exact path=\"/unit\" component={Units} />\n        <Route exact path=\"/unit-models\" component={UnitModels} />\n        <Route exact path=\"/unit-fields\" component={UnitFields} />\n        <Route exact path=\"/unit-job-forms\" component={UnitJobForms} />\n        <Route exact path=\"/unit-serial-number\" component={UnitSerialNumber} />\n        <Route exact path=\"/tools\" component={Tools} />\n        <Route exact path=\"/customer\" component={Customers} />\n        <Route exact path=\"/category\" component={FormCategory} />\n        <Route exact path=\"/employees\" component={EmployeeList} />\n        <Route exact path=\"/division\" component={Division} />\n        <Route exact path=\"/division-unit\" component={DivisionUnit} />\n        <Route exact path=\"/edit-employee\" component={EditEmployee} />\n        <Route exact path=\"/internal-service\" component={InternalService} />\n        <Route exact path=\"/external-service\" component={ExternalService} />\n        <Route exact path=\"/employee-tools\" component={EmployeeTools} />\n        <Route\n          exact\n          path=\"/report-transaction\"\n          component={DetailServiceReportContainer}\n        />\n        <Route\n          exact\n          path=\"/monitoring-employee\"\n          component={MonitoringEmployee}\n        />\n        <Route exact path=\"/report_trans\" component={ReportServiceRepair} />\n        <Route exact path=\"/list_service\" component={ListServices} />\n        <Route exact path=\"/detail-services\" component={DetailService} />\n        <Route exact path=\"/report_employee\" component={ReportEmployee} />\n        <Route exact path=\"/working-hours\" component={WorkingHours} />\n        <Route\n          exact\n          path=\"/report_identification\"\n          component={ReportIdentification}\n        />\n        <Route\n          exact\n          path=\"/form-identification\"\n          component={FormWizardIdentification}\n        />\n        <Route exact path=\"/identification\" component={ListIdentification} />\n        <Route path={\"*\"} component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n","import \"react-redux-toastr/lib/css/react-redux-toastr.min.css\";\nimport \"antd/dist/antd.css\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport history from \"./app/History\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./app/ConfigureStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Navigation from \"./app/Navigation\";\n\nfunction App({ context }) {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ConnectedRouter history={history}>\n          <Navigation />\n        </ConnectedRouter>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}