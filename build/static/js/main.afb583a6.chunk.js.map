{"version":3,"sources":["app/History.js","app/Saga/AppSaga.js","app/Saga/SagaMiddleware.js","app/axios/ConfigAxios.js","app/axios/Invoke.js","modules/App/Store/ComponentAction.js","modules/Roles/Store/RolesActions.js","modules/Admin/Store/AdminActions.js","modules/MasterData/Store/MasterDataActions.js","modules/Branch/Store/BranchActions.js","modules/Units/Store/UnitsActions.js","modules/MachineConfiguration/Store/MachineConfigurationActions.js","app/InitializeApp.js","modules/Auth/Store/AuthAction.js","modules/Auth/Store/AuthReducer.js","app/Helpers.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionAction.js","modules/ListServices/Store/ListServicesActions.js","modules/ListServices/Store/ListServicesReducer.js","modules/App/Store/ComponentReducer.js","modules/Customers/Store/CustomersActions.js","modules/Customers/Store/CustomersReducer.js","modules/Admin/Store/AdminReducer.js","modules/Roles/Store/RolesReducer.js","modules/Employees/Store/EmployeesActions.js","modules/Employees/Store/EmployeesReducer.js","modules/Employees/Store/EmployeeTools/EmployeeToolsActions.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReducer.js","modules/MasterData/Store/MasterDataReducer.js","modules/Units/Store/UnitsReducer.js","modules/JobForms/Store/JobFormsActions.js","modules/JobForms/Store/JobFormsReducer.js","modules/Branch/Store/BranchReducer.js","modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer.js","modules/Units/Store/UnitModelActions.js","modules/Units/Store/UnitModelReducer.js","modules/ExternalService/Store/ExternalServiceActions.js","modules/ExternalService/Store/ExternalServiceReducer.js","modules/Identification/Store/IdentificationActions.js","modules/Identification/Store/IdentificationReducer.js","modules/MachineConfiguration/Store/MachineConfigurationReducer.js","modules/Tools/Store/ToolsActions.js","modules/Tools/Store/ToolsReducer.js","modules/FormCategory/Store/FormCategoryActions.js","modules/FormCategory/Store/FormCategoryReducer.js","modules/Units/Store/UnitFieldsActions.js","modules/Units/Store/UnitFieldsReducer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeActions.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReducer.js","modules/ReportServiceRepair/Store/ReportServiceRepairActions.js","modules/ReportServiceRepair/Store/ReportServiceRepairReducer.js","modules/ReportEmployee/Store/ReportEmployeeActions.js","modules/ReportEmployee/Store/ReportEmployeeReducer.js","modules/Division/Store/DivisionActions.js","modules/Division/Store/DivisionReducer.js","modules/Division/Store/DivisionUnitActions.js","modules/Division/Store/DivisionUnitReducer.js","modules/Dashboard/Store/DashboardActions.js","modules/Dashboard/Store/DashboardReducer.js","modules/Units/Store/UnitSerialNumberActions.js","modules/Units/Store/UnitSerialNumberReducer.js","modules/Units/Store/UnitJobFormActions.js","modules/Units/Store/UnitJobFormsReducer.js","modules/WorkingHours/Store/WorkingHoursActions.js","modules/WorkingHours/Store/WorkingHoursReducer.js","app/RootReducers.js","app/ConfigureStore.js","app/FormHelpers.js","components/CGlobalOverlay/CGlobalOverlay.tsx","components/Sidebar/Sidebar.js","components/Footer/Footer.js","components/Navbar/Navbar.js","modules/Template/Component/TemplateComponent.js","modules/Auth/Selector/AuthSelector.js","modules/App/Selector/AppSelector.js","modules/Template/Container/TemplateContainer.js","app/withTemplate.js","components/CButton/CButtonAntd.tsx","modules/Dashboard/Component/DashboardComponent.js","modules/Dashboard/Container/DashboardContainer.js","components/CInput/CInput.tsx","modules/Auth/Component/LoginComponent.js","app/validateForm.js","modules/Auth/Container/LoginContainer.js","components/CSelect/CSelect.js","components/CDatePicker/CDatePicker.js","components/CButton/CButton.tsx","modules/InternalService/Component/InternalServiceComponent.js","modules/InternalService/Store/InternalServiceActions.js","modules/InternalService/Container/InternalServiceContainer.js","modules/ExternalService/Component/ExternalServiceComponent.js","modules/ExternalService/Container/ExternalServiceContainer.js","modules/MonitoringEmployee/Component/MonitoringEmployeeComponent.js","modules/MonitoringEmployee/Container/MonitoringEmployeeContainer.js","modules/MonitoringEmployee/Store/MonitoringEmployeeReport.js","modules/ReportServiceRepair/Component/ReportServiceRepairComponent.js","modules/ReportServiceRepair/Container/ReportServiceRepairContainer.js","modules/ReportEmployee/Component/ReportEmployeeComponent.js","modules/ReportEmployee/Container/ReportEmployeeContainer.js","modules/ListServices/Component/ListServicesComponent.js","modules/ListServices/Container/ListServicesContainer.js","components/CTable/CTableAntd.js","components/CModal/CModal.tsx","modules/Admin/Component/AdminModalComponent.js","modules/Admin/Container/AdminModalContainer.js","modules/Admin/Component/AdminComponent.js","modules/Admin/Container/AdminContainer.js","components/NotFound/NotFound.js","app/AuthMiddleware.js","components/CBadgeText/CBadgeText.tsx","modules/DetailServiceTransaction/Component/AddEmployeeModalComponent.js","modules/DetailServiceTransaction/Container/AddEmployeeModalContainer.js","property/colors.js","modules/DetailServiceTransaction/Component/RejectedModalComponent.js","modules/DetailServiceTransaction/Container/RejectedModalContainer.js","modules/DetailServiceTransaction/Component/EditModalTransactionComponent.js","modules/DetailServiceTransaction/Container/EditModalTransactionContainer.js","modules/DetailServiceTransaction/Component/EditModalDailiesComponent.js","modules/DetailServiceTransaction/Container/EditModalDailiesContainer.js","modules/DetailServiceTransaction/Component/DetailServiceTransactionComponent.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelEmployeeComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelEmployeeContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelSummaryComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelSummaryContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelImagesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelImagesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelDailiesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelDailiesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelHistoriesComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelHistoriesContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelRejectionsComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelRejectionsContainer.js","modules/DetailServiceTransaction/Component/TabPanel/TabPanelChecklistComponent.js","modules/DetailServiceTransaction/Container/TabPanel/TabPanelChecklistContainer.js","modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer.js","modules/Roles/Component/RolesEditModalComponent.js","modules/Roles/Container/RolesEditModalContainer.js","modules/Roles/Component/RolesComponent.js","modules/Roles/Container/RolesContainer.js","modules/Employees/Component/EmployeesListComponent.js","modules/Employees/Container/EmployeesListContainer.js","modules/Employees/Component/EmployeeEditComponent.js","modules/Employees/Container/EmployeeEditContainer.js","modules/Branch/Component/BranchModalComponent.js","modules/Branch/Container/BranchModalContainer.js","modules/Branch/Component/BranchComponent.js","modules/Branch/Container/BranchContainer.js","modules/JobForms/Component/JobFormsModalComponent.js","modules/JobForms/Container/JobFormsModalContainer.js","modules/JobForms/Component/JobFormsComponent.js","modules/JobForms/Container/JobFormsContainer.js","modules/Identification/Component/Wizard/ContentStepOneComponent.js","modules/Identification/Component/Wizard/ContentUnitComponent.js","modules/Identification/Component/Wizard/ContentSparePartComponent.js","modules/Identification/Component/Wizard/FormWizardIdentificationComponent.js","modules/Identification/Component/Wizard/ContentMachineConfigurationComponent.js","modules/Identification/Component/Wizard/ContentStepOneRegularComponent.js","modules/Identification/Container/Wizard/FormWizardIdentificationContainer.js","modules/Identification/Component/IdentificationModalComponent.js","modules/Identification/Container/IdentificationModalContainer.js","modules/Identification/Component/ListIdentificationComponent.js","modules/Identification/Container/ListIdentificationContainer.js","modules/MachineConfiguration/Component/MachineConfigurationModalComponent.js","modules/MachineConfiguration/Container/MachineConfigurationModalContainer.js","modules/MachineConfiguration/Component/MachineConfigurationComponent.js","modules/MachineConfiguration/Container/MachineConfigurationContainer.js","modules/Units/Component/UnitsModalComponent.js","modules/Units/Container/UnitsModalContainer.js","modules/Units/Component/UnitsComponent.js","modules/Units/Container/UnitsContainer.js","modules/Customers/Component/CustomerModalComponent.js","modules/Customers/Container/CustomerModalContainer.js","modules/Customers/Component/CustomerComponent.js","modules/Customers/Container/CustomerContainer.js","modules/Tools/Component/ToolsModalComponent.js","modules/Tools/Container/ToolsModalContainer.js","modules/Tools/Component/ToolsComponent.js","modules/Tools/Container/ToolsContainer.js","modules/FormCategory/Component/FormCategoryModalComponent.js","modules/FormCategory/Container/FormCategoryModalContainer.js","modules/FormCategory/Component/FormCategoryComponent.js","modules/FormCategory/Container/FormCategoryContainer.js","modules/Units/Component/UnitsModelsModalComponent.js","modules/Units/Container/UnitModelsModalContainer.js","modules/Units/Component/UnitModelsComponent.js","modules/Units/Container/UnitModelsContainer.js","modules/Units/Component/UnitFields/UnitFieldsModalComponent.js","modules/Units/Container/UnitFields/UnitFieldsModalContainer.js","modules/Units/Component/UnitFields/UnitFieldsComponent.js","modules/Units/Container/UnitFields/UnitFieldsContainer.js","modules/ReportIdentification/Store/ReportIdentificationActions.js","modules/ReportIdentification/Component/ReportIdentificationComponent.js","modules/ReportIdentification/Container/ReportIdentificationContainer.js","modules/Division/Component/DivisionModalComponent.js","modules/Division/Container/DivisionModalContainer.js","modules/Division/Component/DivisionComponent.js","modules/Division/Container/DivisionContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsModalComponent.js","modules/Employees/Container/EmployeeTools/EmployeeToolsModalContainer.js","modules/Employees/Component/EmployeeTools/EmployeeToolsComponent.js","modules/Employees/Store/EmployeeTools/EmployeeToolsReport.js","modules/Employees/Container/EmployeeTools/EmployeeToolsContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitModalComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitModalContainer.js","modules/Division/Component/DivisionUnit/DivisionUnitComponent.js","modules/Division/Container/DivisionUnit/DivisionUnitContainer.js","modules/ReportPdf/Components/DetailServiceReportComponent.js","modules/ReportPdf/Containers/DetailServiceReportContainer.js","modules/Units/Component/UnitSerialNumber/ModalUnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/ModalUnitSerialNumberContainer.js","modules/Units/Component/UnitSerialNumber/UnitSerialNumberComponent.js","modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer.js","modules/Units/Component/UnitJobFormsComponent.js","modules/Units/Container/UnitJobFormsContainer.js","modules/WorkingHours/Component/WorkingHoursComponent.js","modules/WorkingHours/Container/WorkingHoursContainer.js","modules/WorkingHours/Store/WorkingHoursReport.js","app/Navigation.js","App.js","reportWebVitals.js","index.js"],"names":["history","createBrowserHistory","basename","handleErrorProcess","handleErrorAction","action","errorData","response","undefined","toastrConfirmOptions","onOk","window","location","reload","okText","disableCancel","toastr","confirm","error","responseStatus","status","console","log","data","ErrorCode","toastMessage","class","id","MessageKey","dataErr","Data","Failures","ErrorKey","Message","toast","takeEvery","all","fork","ConfigAxios","axios","create","baseURL","headers","Accept","timeout","defaults","delete","interceptors","request","use","requestFulfilled","method","Promise","resolve","requestRejected","_","isEmpty","reject","responseFulfilled","responseRejected","warning","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","Invoke","headersConfigDelete","submitLogin","post","submitLoginEmployee","getListServices","page","limit","keyword","type","get","deleteJobServiceById","jobId","getOneServices","getListAdmin","getAdminById","adminId","addAdmin","updateAdmin","put","deleteAdminById","getListAdminRoles","getAdminRolesById","customerId","addAdminRoles","updateAdminRoles","deleteAdminRolesById","getEmployeeRoles","employeeId","getEmployeeTools","addEmployeeRole","deleteEmployeeRole","getCustomerList","branchId","getCustomerById","addCustomer","updateCustomer","deleteCustomerById","getEmployeeList","roleId","divisionId","getEmployeeById","addEmployee","updateEmployee","deleteEmployeeById","getListEmployeeTools","getEmployeeToolsById","addEmployeeTools","updateEmployeeTools","deleteEmployeeToolsById","employeeToolsId","getListRole","getRoleById","addRole","updateRole","deleteRoleById","getProvinceList","getCityList","provinceId","getDashboardProgressData","addInternalService","updateJobService","setFinishedService","setApprovedService","setRejectedService","payload","getServicesEmployee","addNewEmployeeService","setStatusEmployeeService","getJobServiceSummary","unitId","getJobServiceMedia","getJobServiceDailies","updateJobServiceDailies","getChecklistData","unitModelId","getRejectedData","getJobServiceHistories","getUnitList","addUnit","updateUnit","deleteUnitById","getListUnitModel","addUnitSerialNumber","updateUnitSerialNumber","unitSerialNumberId","deleteUnitSerialNumber","getUnitSerialNumber","addUnitModel","updateUnitModel","deleteUnitModelById","getListUnitFields","getListUnitJobForms","jobFormId","addUnitFields","updateUnitFields","deleteUnitFieldsById","unitfieldsId","getListJobForm","keyowrd","addJobForms","updateJobForms","deleteJobForms","jobFormsId","getListBranch","deleteBranchById","addBranch","updateBranch","getListMenu","addMenuRole","getMenuByRoleId","deleteMenuByMenuRoleId","menuRoleId","getListEngine","addEngine","updateEngine","deleteEngine","machineId","getListTools","addTool","updateTool","deleteTool","toolId","getFormCategory","addFormCategory","updateFormCategory","deleteFormCategory","categoryFormId","getIdentificationList","addIdentification","updateIdentificationMilling","updateIdentificationRegular","deleteIdentificationById","identificationId","getDivisionList","addDivision","updateDivision","deleteDivision","getDivisionUnitList","addDivisionUnit","getReportMonitoringEmployee","from","until","getReportServiceRepair","getReportEmployee","getWorkingHours","getTransactionPdfUrl","downloadPdfFromUrl","url","responseType","PROCESS_GLOBAL_LOADING","PROCESS_FORM_GLOBAL_LOADING","SHOW_GLOBAL_MODAL","RESET_ALL_LOADING","setGlobalLoading","setGlobalModal","setGlobalFormLoading","resetAllGlobalLoadingProcess","dispatch","store","SET_LIST_ROLES","SET_SELECTED_ROLE_ID","SET_SELECTED_ROLE_DETAIL","SET_FORM_STATUS","RESET_STATE","SET_SELECTED_ROLE_MENU","setSelectedRoleId","setFormStatus","setSelectedRoleDetail","setSelectedRoleMenu","showToast","success","getListRolesRequested","a","callback","mapDetailRoleToForm","getState","roles","selectedRoleDetail","change","description","getMenuByRolesId","subItem","map","item","index","push","menu_id","resetForm","doAddRoleProcess","values","menuSelected","splitDescription","split","name","length","replaceAll","ComponentActions","doDeleteMenuRoleProcess","menuId","menuListApi","filter","x","menu","doAddMenuRoleProcess","role_id","view","insert","update","doSaveMenuRole","newMenuSelected","currentMenuSelected","selectedRoleMenu","selectedRoleId","setTimeout","newMenu","doEditRoleProcess","doDeleteRoleProcess","deleteRoleRequested","cancelText","saveRoleRequested","SET_LIST_ADMIN","SET_PAGING_ADMIN","SET_SELECTED_ADMIN_ID","SET_SELECTED_ADMIN_DATA","setListAdmin","setPagingAdmin","setSelectedAdminId","setSelectedAdminData","getListAdminRequested","paging","totalPage","doAddAdminProcess","admins","username","fullname","password","doEditAdminProcess","doDeleteAdminProcess","saveAdminRequested","mapDetailAdminToForm","selectedAdminData","deleteAdminRequested","SET_PROVINCE_LIST_DATA","SET_CITY_LIST_DATA","SET_MENU_LIST_DATA","setCityListData","loadProvinceListData","loadCityListData","loadMenuListData","SET_BRANCH_LIST_DATA","SET_SELECTED_BRANCH_ID","SET_SELECTED_BRANCH_DATA","SET_PAGING_BRANCH","SET_BRANCH_LIST_DATA_DROPDOWN","setBranchListData","setBranchListDataDropdown","setPagingBranch","setSelectedBranchId","setSelectedBranchData","doDeleteBranchProcess","branch","getBranchListDataRequested","doAddBranchProcess","doEditBranchProcess","mapDetailBranchToForm","selectedBranchData","isDropdown","saveBranchRequested","deleteBranchRequested","SET_UNIT_LIST_DATA","SET_SELECTED_UNIT_ID","SET_SELECTED_UNIT_DATA","SET_PAGING_UNIT","setUnitListData","setPagingUnit","setSelectedUnitId","setSelectedUnitData","doDeleteUnitProcess","units","getUnitListDataRequested","doAddUnitProcess","photo","imageUrl","doEditUnitProcess","mapDetailUnitToForm","selectedUnitsData","saveUnitRequested","deleteUnitRequested","SET_MACHINE_LIST_DATA","SET_SELECTED_MACHINE_ID","SET_SELECTED_MACHINE_DATA","SET_PAGING_MACHINE_CONF","setMachineListData","setPagingMachineConf","setSelectedMachineId","setSelectedMachineData","doDeleteMachineProcess","getMachineListDataRequested","doAddMachineProcess","doEditMachineProcess","mapDetailMachineToForm","machineConfiguration","selectedMachineData","saveMachineRequested","deleteMachineRequested","initializeApp","AdminActions","RoleActions","MasterDataActions","BranchActions","UnitsActions","MachineConfigurationActions","SET_ACCESS_TOKEN_DATA","SET_USER_DETAIL_DATA","SET_ERROR_LOGIN","setUserDetail","setErrorLogin","appendItem","accessToken","handleSubmitLogin","then","catch","onRejected","dataResponseRejected","initialState","userDetail","avatar","navigate","path","getIndex","currentpage","pageNumbers","startIndex","endIndex","i","getBase64","img","reader","FileReader","addEventListener","result","readAsDataURL","SelectLocation","value","label","SelectType","SelectInstanceType","SelectStatus","SelectStatusServices","SelectStatusMilling","SelectInstanceTypeRegular","SelectMilling","enumTypeInternalServices","enumTypeExternalServices","enumWarranty","warrantyMonths","toString","getProvinceEnum","SelectProvince","getCitiesEnum","SelectCities","enumSelectGenerator","enumName","SelectEnum","getUnitModelEnum","SelectUnitModel","getMachineConf","SelectMachines","replace","toLowerCase","getStatus","statusItem","toUpperCase","color","getStatusWorkingHours","categoryServices","categoryMonitoringServices","enumTypeMonitoringEmployee","SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA","SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA","SET_GROUPING_SUMMARY_DATA","SET_GROUPING_CHECKLIST_DATA","SET_SELECTED_SERVICES_SUMMARY_DATA","SET_SELECTED_SERVICES_MEDIA_DATA","SET_SELECTED_SERVICES_DAILIES_DATA","SET_SELECTED_SERVICES_HISTORIES_DATA","SET_SELECTED_SERVICES_CHECKLIST_DATA","SET_SELECTED_SERVICES_REJECTED_DATA","SET_EDIT_TRANSACTION_MODAL","SET_REJECTIONS_MODAL","SET_EDIT_DAILIES_MODAL","SET_SELECTED_EDIT_DAILIES_DATA","SET_SELECTED_UNIT","RESET_DETAIL_SERVICE","setRejectionsModal","setEditTransactionModal","setGroupingSummaryData","setGroupingChecklistData","setEditDailiesModal","setSelectedServicesEmployeeListData","setSelectedServiceDailiesData","setSelectedServiceHistoriesData","getJobServiceEmployeeList","serviceEmployeeList","results","subIitem","active","employee_service_id","employee_id","employee","logs","getJobServiceRejections","handleAddNewEmployeeService","setStatusEmployee","employeeServiceId","isActive","doRejectServiceProcess","reason","doEditServiceProcess","warranty","warrantyYears","start","moment","startDate","format","due","dueDate","job_perform","jobPerform","warranty_month","warranty_year","setSelectedJobService","unit_models","handlePressEditRequested","handlePressRejectedRequested","doEditDailiesProcess","dataService","services","selectedJobService","title","daily_start","daily_end","endDate","handlePressEditDailiesRequested","mapDetailTransactionToForm","end","mapDailiesToForm","detailService","selectedEditDailies","mulai","selesai","deskripsi","downloadTransactionPdf","dataTransactionPdf","downloadUrl","pdf","fileDownload","filename","SET_LIST_SERVICES","SET_SELECTED_JOB_SERVICE","SET_PAGING_LIST_SERVICE","SET_SELECTED_JOB_SERVICE_ID","SET_DASHBOARD_LIST_SERVICES","setListServices","setPagingListService","setSelectedJobServiceId","getListServicesRequested","getTopTenService","handleSearch","filterValues","splitTypeService","typeService","splitStatusService","statusService","handlePressEdit","doDeleteJobServiceProcess","deleteJobServiceRequested","handlePressActionsRequested","doCallActionProcess","listServices","dashboardListServices","selectedJobServiceId","isLoadingGlobal","isLoadingFormGlobal","isModalVisible","SET_CUSTOMER_LIST_DATA","SET_PAGING_CUSTOMER","SET_SELECTED_CUSTOMER_DATA","SET_SELECTED_CUSTOMER_ID","SET_CUSTOMER_LIST_DATA_DROPDOWN","setCustomerListData","setCustomerListDataDropdown","setPagingCustomer","setSelectedCustomerData","setSelectedCustomerId","getCustomerListDataByPaging","isDropdownData","doDeleteCustomerProcess","doAddCustomerProcess","customers","province","cityId","city","branch_id","province_id","city_id","phone","work_hour","workHour","pic","pic_phone","picPhone","address","saveCustomerRequested","mapDetailCustomerToForm","selectedCustomerData","province_name","city_name","branch_name","deleteCustomerRequested","listCustomers","listCustomersDropdown","formStatus","selectedCustomerId","listAdmin","selectedAdminId","listRoles","SET_EMPLOYEE_LIST_DATA","SET_SELECTED_EMPLOYEE_ID","SET_SELECTED_EMPLOYEE_DATA","SET_SELECTED_ROLE_EMPLOYEE","SET_PAGING_EMPLOYEES","setEmployeeListData","setSelectedEmployeeId","setSelectedEmployeeData","setSelectedRoleEmployee","setPagingEmployees","loadEmployeeListData","getEmployeeDataByIdRequested","getRolesByEmployeeId","setAutoPopulateEmployee","selectedEmployeeData","employees","listBranch","defaultBranch","doAddEmployeeProcess","selectedRoles","nik","doEditEmployeeProcess","roleSelected","doSaveEmployeeRole","doAddEmployeeRoleProcess","newRoleId","doDeleteAllEmployeeRoleProcess","roleListApi","doDeleteEmployeeProcess","newRoleSelected","currentRoleSelected","selectedRoleEmployee","selectedEmployeeId","saveEmployeeRequested","mapDetailEmployeeToForm","deleteEmployeeRequested","splitRole","role","splitBranch","splitDivision","division","listEmployees","SET_EMPLOYEE_TOOL_LIST_DATA","SET_SELECTED_EMPLOYEE_TOOLS_ID","SET_SELECTED_EMPLOYEE_TOOLS_DATA","SET_PAGING_EMPLOYEE_TOOLS","setEmployeeToolsListData","setSelectedEmployeeToolsId","setSelectedEmployeeToolsData","setPagingEmployeeTools","getEmployeeToolsRequested","doAddEmployeeToolsProcess","slpitToolsId","tools","tool_id","doEditEmployeeToolsProcess","splitTools","doDeleteEmployeeToolsProcess","employeeTools","saveEmployeeToolsRequested","mapDetailEmployeeToolsToForm","selectedEmployeeToolsData","deleteEmployeeToolsRequested","listEmployeeTools","selectedEmployeeToolsId","listProvince","listCity","listMenu","listUnits","selectedUnitsId","SET_JOB_FORMS_LIST_DATA","SET_SELECTED_JOB_FORMS_ID","SET_SELECTED_JOB_FORMS_DATA","SET_PAGING_JOB_FORM","setJobFormsListData","setPagingJobForm","setSelectedJobFormsId","setSelectedJobFormsData","getJobFormsListDataRequested","doAddJobFormsProcess","doEditJobFormsProcess","mapDetailJobFormsToForm","jobForms","selectedJobFormsData","saveJobFormsRequested","deleteJobFormsRequested","listJobForms","selectedJobFormsId","listBranchDropdown","selectedBranchId","selectedServiceEmployeeList","selectedServiceSummary","selectedServiceMedia","groupingSelectedServiceMedia","groupingSelectedServiceSummary","groupingSelectedServiceChecklist","selectedServiceDailies","selectedServiceHistories","selectedServiceChecklist","selectedServiceRejected","rejectionsModal","editTransactionModal","editDailiesModal","selectedUnit","SET_UNIT_MODEL_LIST_DATA","SET_SELECTED_UNIT_MODEL_ID","SET_SELECTED_UNIT_MODEL_DATA","SET_PAGING_UNIT_MODEL","setUnitModelListData","setPagingUnitModel","setSelectedUnitModelId","setSelectedUnitModelData","getUnitModelListDataRequested","doAddUnitModelsProcess","unitModels","unit_id","descriptions","serial_number","serialNumber","machine_no","machineNo","engine_model","engineModel","engine_no","engineNo","chasis_no","chasisNo","transmission_no","transmissionNo","doEditUnitModelsProcess","doDeleteUnitModelsProcess","saveUnitModelsRequested","deleteUnitModelRequested","mapDetailUnitModelToForm","selectedUnitModelsData","listUnitModels","selectedUnitModelsId","SET_ENUM_UNIT_MODEL","getEmployeeByIdFromReducer","tempData","getProvinceByIdFromReducer","masters","setAutoPopulateUnitModel","fieldIndex","indexEmployee","employeeData","provinceData","cityData","filteredCity","citySelected","setAutoPopulateCustomer","customersData","handleSubmitForm","splitCustomerId","customer","splitTypeId","splitWarranty","splitEmployeeId","unitList","splitUnitModel","unit_model_id","customer_id","job_form_id","uuidv4","identification_id","is_external","customerLocation","functionThatReturnPromise","reset","promise","pending","enumUnitModel","SET_IDENTIFICATIONN_LIST_DATA","SET_SELECTED_IDENTIFICATION_ID","SET_PAGING_IDENTIFICATION","SET_SELECTED_IDENTIFICATION_DATA","setIdentificationListData","setSelectedIdentificationId","setSelectedIdentificationData","getIdentificationListRequested","branches","identificationList","newIdentificationList","doDeleteIdentificationProcess","identification","doAddIdentificationProcess","splitCustomer","splitLocation","splitMilling","milling","splitType","doUpdateIdentificationMilling","isLastStep","selectedIdentificationId","splitInstanceType","instanceType","splitMillingStatus","millingStatus","splitCity","splitProvince","engineConfs","engine_confs","list","engine_conf_id","instance_type","instance_name","instanceName","customerName","ktp_npwp","milling_capacity","millingCapacity","milling_work_capacity_perday","millingWorkCapacityPerDay","rice_trademark","riceTrademark","history_service_place","history_service_type","notes","note","spare_part_needs","spare_part_changing_histories","spare_part_selling_histories","doUpdateIdentificationRegular","isFinished","instance_address","instanceAddress","address_district","address_city","address_province","address_subdistrict","kelurahan","address_postal_code","postalCode","instancePhoneNumber","product_name","productName","buy_date","assistance_date","machine_number","gearbox_number","production_unit_year","work_hour_per_day","hour_meter","saveIdentificationRequested","isMilling","selectedIdentificationData","deleteIdentificationRequested","listIdentification","listMachine","selectedMachineId","SET_TOOLS_LIST_DATA","SET_SELECTED_TOOLS_ID","SET_SELECTED_TOOLS_DATA","SET_PAGING_TOOLS","setToolsListData","setPagingTools","setSelectedToolsId","setSelectedToolsData","doDeleteToolsProcess","toolsId","getToolsListDataRequested","doAddToolsProcess","doEditToolsProcess","mapDetailToolsToForm","selectedToolsData","saveToolsRequested","deleteToolsRequested","listTools","selectedToolsId","SET_FORM_CATEGORY_LIST_DATA","SET_SELECTED_FORM_CATEGORY_ID","SET_SELECTED_FORM_CATEGORY_DATA","SET_PAGING_FORM_CATEGORY","setFormCategoryListData","setPagingFormCategory","setSelectedFormCategoryId","setSelectedFormCategoryData","doDeleteFormCategoryProcess","getFormCatgeoryListDataRequested","doAddFormCategoryProcess","doEditFormCategoryProcess","mapDetailCategoryToForm","formCategory","selectedFormCategoryData","saveFormCategoryRequested","deleteFormCategoryRequested","formCategoryId","listFormCategory","selectedFormCategoryId","SET_UNIT_FIELDS_LIST_DATA","SET_SELECTED_UNIT_FIELDS_ID","SET_SELECTED_UNIT_FIELDS_DATA","SET_PAGING_UNIT_FIELDS","setUnitFieldsListData","setPagingUnitFields","setSelectedUnitFieldsId","setSelectedUnitFieldsData","getUnitFieldsListDataRequested","doAddUnitFieldsProcess","unitFields","splitCategoryFormId","splitjobFormId","jobForm","fieldName","category_form_id","doEditUnitFieldsProcess","doDeleteUnitFieldsProcess","unitFieldId","saveUnitFieldsRequested","deleteUnitFieldRequested","mapDetailUnitFieldToForm","selectedUnitFieldsData","job_form_name","category_form_name","listUnitFields","selectedUnitFieldsId","SET_MONITORING_EMPLOYEE_LIST_DATA","SET_PAGING_MONITORING_EMPLOYEE","setMonitoringEmployeeListData","setPagingMonitoringEmployee","getMonitoringEmployeeListDataRequested","monitoringEmployee","newListMonitoringEmployee","itemData","indexData","created_date","date","listMonitoringEmployee","SET_SERVICE_REPAIR_LIST_DATA","SET_PAGING_SERVICE_REPAIR","setServiceRepairListData","setPagingServiceRepair","getServiceRepairListDataRequested","serviceRepair","newListServiceRepair","listServiceRepair","SET_REPORT_EMPLOYEE_LIST_DATA","SET_PAGING_REPORT_EMPLOYEE","setReportEmployeeListData","setPagingReportEmployee","getReportEmployeeDataRequested","reportEmployee","newReportEmployee","listReportEmployee","SET_DIVISION_LIST_DATA","SET_SELECTED_DIVISION_ID","SET_SELECTED_DIVISION_DATA","SET_PAGING_DIVISION","setDivisionListData","setPagingDivision","setSelectedDivisionId","setSelectedDivisionData","doDeleteDivisionProcess","getDivisionListDataRequested","doAddDivisionProcess","headDivision","doEditDivisionProcess","mapDetailDivisionToForm","selectedDivisionData","employee_name","saveDivisionRequested","deleteDivisionRequested","listDivision","selectedDivisionId","SET_DIVISION_UNIT_LIST_DATA","SET_SELECTED_DIVISION_UNIT_ID","SET_SELECTED_DIVISION_UNIT_DATA","SET_PAGING_DIVISION_UNIT","setDivisionUnitListData","setPagingDivisionUnit","setSelectedDivisonUnitId","setSelectedDivisionUnitData","getDivisionUnitListRequested","doAddDivisionUnitProcess","divisionUnit","splitUnitId","unit","division_id","doEditDivisionUnitProcess","saveDivisionUnitRequested","listDivisionUnit","selectedDivisionUnitId","selectedDivisionUnitData","SET_DASHBOARD_DATA","dashboardData","SET_UNIT_SERIAL_NUMBER_DATA","SET_SELECTED_UNIT_SERIAL_NUMBER_ID","SET_SELECTED_UNIT_SERIAL_NUMBER_DATA","setUnitSerialNumberData","setSelectedUnitSerialNumberId","setSelectedUnitSerialNumberData","doAddUnitSerialNumberProcess","doEditUnitSerialNumberProcess","unitSerialNumber","selectedUnitSerialNumberId","serialNumberId","saveUnitSerialNumberRequested","mapDetailUnitSerialNumberToForm","selectedUnitSerialNumberData","customer_name","listUnitSerialNumber","SET_UNIT_JOB_FORMS_LIST_DATA","SET_PAGING_UNIT_JOB_FORMS","setUnitJobFormsListData","getUnitJobFormsListDataRequested","listUnitJobForms","SET_WORKING_HOURS_LIST_DATA","setWorkingHoursListData","getWorkingHoursListDataRequested","workingHours","newListWorkingHours","created","done","done_date","listWorkingHours","rootReducer","rootReducers","combineReducers","router","connectRouter","auth","state","newState","Object","assign","externalService","unitJobForms","component","dashboard","form","formReducer","toastrReducer","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","sagaMiddleware","createSagaMiddleware","composeEnhancers","compose","createStore","applyMiddleware","routerMiddleware","persistor","persistStore","run","Saga","Component","props","Overlay","styled","div","CGlobalOverlay","loading","height","width","radius","margin","Sidebar","mainMenu","masterDataMenu","reportMenu","serviceRepairMenu","reportDataMenu","href","icon","Footer","Date","getFullYear","Navbar","onLogout","placeholder","src","alt","onClick","TemplateComponent","children","isGlobalLoading","isLandingPage","logout","Fragment","className","selectorAuth","selectorComponent","mapStateToProps","createStructuredSelector","createSelector","withConnect","connect","authActions","React","useState","setRole","useEffect","menus","getIconName","withTemplate","Template","WrappedComponent","hoistNonReactStatics","CButtonAntd","isLoading","disabled","shape","size","danger","backgroundColor","style","borderColor","block","DashboardComponent","totalCustomer","totalInternalService","totalExternalService","totalIdentification","bordered","columns","dataSource","pagination","pageSizeOptions","showSizeChanger","ListServiceActions","handlePressDelete","jobServiceId","no","keys","toLocaleString","dataIndex","sorter","b","render","items","isExternal","borderRadius","textAlign","unit_name","unit_model_name","align","text","record","EditOutlined","CInput","typeComponent","htmlFor","maxLength","rows","onChange","input","meta","touched","fontSize","labelSize","LoginComponent","handleSubmit","submitForm","onSubmit","Field","validateFormRoles","errors","validateFormUnitModel","validateFormTransaction","EnhanceContainer","valid","AuthActions","reduxForm","validate","FormItem","Form","Item","Option","Select","ASelect","hasFeedback","rest","hasError","invalid","validateStatus","help","CSelect","showSearch","onBlur","e","preventDefault","RenderDatePicker","defaultValue","CDatePicker","CButton","InternalServiceComponent","listEmployee","enumType","handleAutoPopulateEmployee","handleAutoPopulateCustomer","InfoCircleTwoTone","FieldArray","fields","PlusOutlined","itemEmployee","DeleteOutlined","remove","getCityByIdFromReducer","arrVal","InternalServiceActions","ComponentAction","CustomerActions","EmployeeActions","SelectCustomerData","SelectEmployeeData","initialValues","ExternalServiceComponent","listUnit","enumJobForms","handleAutoPopulateUnitModel","externalValues","onChangeUnitModel","handleChangeType","isTroubleShoot","itemUnit","indexUnit","val","selector","formValueSelector","formValues","getFormValues","ExternalServiceActions","enumModel","enumUnit","selectedUnitModel","unitQty","setUnitQty","unitData","setUnitData","setIsTroubleShoot","SelectUnit","SelectJobFormsData","JobFormsActions","totalUnit","handleAddNewUnit","handleSubtractUnit","MonitoringEmployeeComponent","onChangePagination","onSearch","enumBranch","enumTypeReport","handlePressGeneratePdf","orientation","SearchOutlined","FilePdfOutlined","monitoringEmployeeFormValues","getListMonitoringEmployee","MonitoringEmployeeActions","handlePressAddNew","printedData","jd_date","employee_nik","jobType","job_type","models","SelectBranch","nextPage","pageSize","monitoringEmployeeList","job_status","createdDate","doc","jsPDF","setFontSize","setFont","autoTable","startY","body","theme","head","content","rowSpan","halign","colSpan","styles","fillColor","headStyles","valign","overflow","columnWidth","header","dataKey","willDrawCell","dataCell","didParseCell","s","cell","lineColor","lineWidth","font","columnStyles","tableLineColor","tableLineWidth","save","exportMonitoringEmployeePdf","ReportServiceRepairComponent","scroll","serviceRepairFormValues","getListServiceRepair","ReportServiceRepairActions","BookOutlined","fixed","ReportEmployeeComponent","reportEmployeeFormValues","ReportEmployeeActions","technition","Search","Input","ListServiceComponent","enumStatus","total","current","enterButton","listServiceFormValues","user","setisBlocked","renderActionTable","isBlockedRole","isBlocked","isBlockedRoleListService","checkBlockedRole","ListServicesComponent","CTableAntd","renderActions","searchText","searchedColumn","searchInput","useRef","sortDirections","filterIcon","filtered","onFilter","includes","onFilterDropdownVisibleChange","visible","select","highlightStyle","padding","searchWords","autoEscape","textToHighlight","CModal","footer","destroyOnClose","onCancel","RenderFooter","handleSaveForm","RenderContent","formName","AdminModalComponent","handleCancel","enumMenu","AdminComponent","NotFound","AuthMiddleware","ComposedComponent","isAuthenticated","redirect","CBadgeText","enumEmployee","AddEmployeeModalComponent","SelectEmployee","DetailServiceTransactionAction","Themes","RejectedModalComponent","DetailServiceTransactionActions","reson","handleClose","CloseOutlined","CheckOutlined","SelectRole","defaultValuesMenu","onChangeRoleMenu","Group","span","typeComponents","EditModalTransactionComponent","menuChecked","handleClearModalContent","SelectMenu","EditModalDailiesComponent","Text","Typography","TabPane","Tabs","DetailServiceTransactionComponent","TabPanel","onChangeTab","goBack","handlePressActions","RenderButtonAction","button","CheckCircleOutlined","CloseCircleOutlined","ArrowLeftOutlined","model","strong","customer_pic_name","defaultActiveKey","tab","EditModalTransactionContainer","Meta","Card","RenderDescription","handlePressNonactive","handlePressActive","TabPanelEmployeeComponent","marginLeft","marginTop","cover","RenderItemSummary","Paragraph","summary","indexText","TabPanelSummaryComponent","summaryArr","alignItems","FileOutlined","gutter","fontWeight","textTransform","plain","unitName","TabPanelSummaryContainer","setSummaryArr","summaryMapping","splitSummary","RenderImage","medias","marginRight","hoverable","TabPanelImagesComponent","CameraOutlined","image","TabPanelImagesContainer","RenderDailies","dailies","karyawan","jam","hours","TabPanelDailiesComponent","handlePressCancel","RenderHistories","histories","user_name","TabPanelHistoriesComponent","TabPanelHistoriesContainer","rejections","TabPanelRejectionsComponent","TabPanelRejectionsContainer","alignContent","justifyContent","TabPanelChecklistComponent","checklistArr","isLoaded","checklist","itemChecklist","indexChecklist","borderBottom","itemFields","indexFields","field_name","checked","is_check","TabPanelChecklistContainer","setchecklistArr","DetailServiceActions","isLoadedChecklist","setIsLoadedChecklist","FileImageOutlined","FileTextOutlined","UsergroupAddOutlined","CloseSquareOutlined","HistoryOutlined","fromIndex","indexOf","element","splice","callInitialize","EmployeesActions","getGroupingUnitData","groupingMediaList","groupingSummaryList","groupingChecklist","dataMedia","dataSummary","dataChecklist","activeTab","RolesEditModalComponent","RolesActions","setMenuSelected","RolesComponent","getListRoles","EmployeeListComponent","enumRoles","enumDivision","employeeFormValues","employeesFormValues","getListEmployees","ToolsActions","handlePressEmployeeTools","SelectRoles","getRolesEnum","SelectDivision","EmployeesListComponent","SettingOutlined","defaultValues","onChangeRoleEmployee","EmployeeEditComponent","enumRole","enumProvince","enumCity","handleUploadPhoto","defaultImage","onChangeProvince","onBackAction","setLoading","setImageUrl","uploadButton","LoadingOutlined","listType","showUploadList","beforeUpload","file","isJpgOrPng","isLt2M","info","originFileObj","resizeMode","heigh","opacity","getDetailEmployee","handleClearSelectedEmployeeRole","listCityState","setListCityState","setRoleSelected","setDefaultImage","SelectEmployeeRole","provinceMapping","detailEmployee","base64","BranchModalComponent","BranchComponent","JobFormsModalComponent","JobFormsComponent","getListJobForms","ContentStepOneComponent","provinces","cities","enumInstanceType","enumStatusMilling","ContentUnitComponent","ContentSparePartComponent","onChangeServiced","isServiced","RenderSparePartSelling","RenderSparePartNeeded","_props","StepsContent","StepsAction","Step","Steps","FormWizardIdentificationComponent","steps","saveFormChanges","setCurrent","ContentMachineConfigurationComponent","machineConf","onAddMachineConf","RenderBodyHusker","ContentStepOneRegularComponent","identificationFormValues","setCities","serviced","setServiced","IdentificationActions","listCustomer","listLocation","listMilling","IdentificationModalComponent","enumCustomers","enumLocation","enumMilling","SelectCustomer","CustomersActions","ListIdentificationComponent","getListIdentification","created_at","MachineConfigurationModalComponent","MachineConfigurationComponent","getListMachine","MachineActions","UnitsModalComponent","UnitsComponent","placement","getListUnit","handlePressUnitModel","handlePressUnitFields","handlePressLink","tooltipText","BoxPlotOutlined","FileAddOutlined","whiteSpace","CustomerModalComponent","CustomerComponent","customerBranchValue","getListCustomer","getListProvince","isBlockedRoleCustomer","ToolsModalComponent","ToolsComponent","FormCategoryModalComponent","FormCategoryActions","FormCategoryComponent","getListFormCategory","UnitsModelsModalComponent","UnitModelActions","UnitModelsComponent","getListUnitModels","handlePressSerialNumber","FieldNumberOutlined","enumFormCategory","enumJobForm","UnitFieldsModalComponent","UnitFieldsActions","setFormCategory","setJobForm","loadOption","dataJobForm","listJobForm","SelectFormCategory","SelectJobForm","UnitFieldsComponent","unitFieldsId","setReportIdentificationListData","setPagingReportIdentification","ReportIdentificationComponent","enumHeadDivision","DivisionModalComponent","DivisionActions","SelectEmployees","DivisionComponent","getListDivision","getListEmlpoyee","handlePressDivisionUnit","enumTools","EmployeeToolsModalComponent","EmployeeToolsActions","SelectTools","EmployeeToolsComponent","generateEmployeeToolsReport","newListData","check","drawCell","docCell","section","column","setLineWidth","setFillColor","circle","y","addPage","employeeToolsFormValues","enumUnits","DivisionUnitModalComponent","DivisionUnitActions","SelectUnits","DivisionUnitComponent","getListDivisionUnit","divisionUnitId","StyleSheet","flexDirection","flexGrow","DetailServiceReportComponent","flex","DetailServiceReportContainer","enumCustomer","ModalUnitSerialNumberComponent","UnitSerialNumberActions","UnitSerialNumberComponent","onChangeCustomer","ModalUnitSerialNumberContainer","unitSerialNumberFormValues","selectedtUnitSerialNumber","UnitJobFormsComponent","UnitJobFormsActions","WorkingHoursComponent","workingHoursFormValues","getListWorkingHours","WorkingHoursActions","no_service","total_hours","workingHoursList","employeeNik","employeeName","noService","totalHours","doneDate","exportWorkingHoursReportPdf","Navigation","authenticatedPage","footerImg","TemplateContainer","templating","Login","LoginContainer","NotFoundPage","Admin","AdminContainer","Roles","RolesContainer","JobForms","JobFormsContainer","Branches","BranchContainer","EmployeeList","EmployeesListContainer","EmployeeTools","EmployeeToolsContainer","Division","DivisionContainer","DivisionUnit","DivisionUnitContainer","EditEmployee","EmployeeEditContainer","Dashboard","DashboardContainer","Units","UnitsContainer","UnitModels","UnitModelsContainer","UnitFields","UnitFieldsContainer","UnitJobForms","UnitJobFormsContainer","UnitSerialNumber","UnitSerialNumberContainer","Tools","ToolsContainer","Customers","CustomerContainer","FormCategory","FormCategoryContainer","MachineConfiguration","MachineConfigurationContainer","InternalService","InternalServiceContainer","ExternalService","ExternalServiceContainer","MonitoringEmployee","MonitoringEmployeeContainer","ReportServiceRepair","ReportServiceRepairContainer","ReportEmployee","ReportEmployeeContainer","WorkingHours","WorkingHoursContainer","ListServices","ListServicesContainer","ReportIdentification","ReportIdentificationContainer","DetailService","DetailServiceTransactionContainer","FormWizardIdentification","FormWizardIdentificationContainer","ListIdentification","ListIdentificationContainer","Helmet","titleTemplate","defaultTitle","timeOut","newestOnTop","preventDuplicates","transitionIn","transitionOut","progressBar","closeOnToastrClick","exact","App","context","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.afb583a6.chunk.js","sourcesContent":["import { createBrowserHistory } from \"history\";\n\nconst history = createBrowserHistory({\n  basename: process.env.PUBLIC_URL || \"\",\n});\nexport default history;\n","// import * as ActionAuth from \"../../Auth/Store/AuthAction\";\n// import * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\n\nimport { call, put, select, takeEvery } from \"redux-saga/effects\";\n\nimport { FormattedMessage } from \"react-intl\";\nimport React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { toastr } from \"react-redux-toastr\";\n\n// function* getToken() {\n//   return yield select(AuthSelector.Token());\n// }\n\n// export function* getCommonConfigHeader() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n// }\n// export function* getCommonConfigHeaderFormData() {\n//   const token = yield call(getToken);\n//   return {\n//     headers: {\n//       Authorization: `Bearer ${token}`,\n//       \"Content-Type\": \"multipart/form-data\",\n//     },\n//   };\n// }\n\nexport function* handleErrorProcess(action) {\n  let toastMessage;\n\n  if (!action.errorData.response || action.errorData.response === undefined) {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        window.location.reload();\n      },\n      okText: \"Ya\",\n      disableCancel: true,\n    };\n\n    toastr.confirm(\n      \"Koneksi terputus, cek koneksi anda dan dimuat ulang\",\n      toastrConfirmOptions\n    );\n  }\n\n  if (action.errorData.response) {\n    const error = action.errorData;\n    const responseStatus = error?.response.status;\n    if (responseStatus === 401) {\n      // yield put(ActionAuth.renewToken(action));\n      console.log(\"=== Token Expired!\");\n    } else if (responseStatus === 500) {\n      if (error.response.data.ErrorCode === \"4201\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      }\n      if (error.response.data.ErrorCode === \"5100\") {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id=\"authentication.credential.invalid\" />\n          </span>\n        );\n      } else {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error.response.data.MessageKey} />\n          </span>\n        );\n      }\n    } else if (responseStatus === 403) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={\"forbiddenError\"} />\n        </span>\n      );\n    } else {\n      try {\n        const dataErr = error.response.data?.Data?.Failures[0]?.ErrorKey;\n        if (dataErr) {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id={dataErr} />\n            </span>\n          );\n        } else {\n          toastMessage = (\n            <span class=\"capitalFirst\">\n              <FormattedMessage id=\"unknownError\" />\n            </span>\n          );\n        }\n      } catch (error) {\n        toastMessage = (\n          <span class=\"capitalFirst\">\n            <FormattedMessage id={error} />\n          </span>\n        );\n      }\n    }\n  } else {\n    if (action.errorData.response.data.Message) {\n      toastMessage = (\n        <span class=\"capitalFirst\">\n          <FormattedMessage id={action.errorData.response.data.Message} />\n        </span>\n      );\n    }\n  }\n  if (toastMessage) {\n    toast.error(toastMessage);\n  }\n}\n\nexport function* handleErrorAction() {\n  yield takeEvery(\"HANDLE_ERROR_SAGA\", handleErrorProcess);\n}\n","import { all, fork } from \"redux-saga/effects\";\n// import {\n//   getUserDetailAction,\n//   loginUserAction,\n//   registerUserAction,\n//   updateUserAction,\n// } from \"../../Auth/Saga/AuthSaga\";\nimport { handleErrorAction } from \"../../app/Saga/AppSaga\";\n\nexport default function* () {\n  yield all([\n    fork(handleErrorAction),\n    // fork(registerUserAction),\n    // fork(getUserDetailAction),\n    // fork(loginUserAction),\n    // fork(updateUserAction),\n  ]);\n}\n","// First we need to import axios.js\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { toast } from \"react-toastify\";\n\n// Next we make an 'instance' of it\nconst ConfigAxios = axios.create({\n  // .. where we make our configurations\n  baseURL: \"http://103.158.192.161:3000\",\n  headers: {\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\",\n    \"Access-Control-Allow-Origin\": \"*\",\n    \"Access-Control-Allow-Methods\": \"GET, POST, PUT, DELETE, OPTIONS\",\n    \"Access-Control-Allow-Headers\": \"Authorization\",\n  },\n  timeout: 15000,\n});\nConfigAxios.defaults.headers.delete = {\n  \"Content-Type\": \"application/json\",\n};\n\n// Where you would set stuff like your 'Authorization' header, etc ...\n// ConfigAxios.defaults.headers.common[\"Authorization\"] =\n//   \"AUTH TOKEN FROM INSTANCE\";\n\n// Also add/ configure interceptors && all the other cool stuff\nConfigAxios.interceptors.request.use(\n  (requestFulfilled) => {\n    if (requestFulfilled.method === \"get\") {\n      requestFulfilled.data = true;\n    }\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(requestFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-request-fulfilled\",\n        JSON.parse(JSON.stringify(requestFulfilled))\n      );\n    }\n    return Promise.resolve(requestFulfilled);\n  },\n  (requestRejected) => {\n    if (!_.isEmpty(requestRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-request-rejected\",\n          JSON.parse(\n            JSON.stringify(requestRejected.response || requestRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(requestRejected);\n  }\n);\n\nConfigAxios.interceptors.response.use(\n  (responseFulfilled) => {\n    if (\n      process.env.NODE_ENV === \"development\" &&\n      !_.isEmpty(responseFulfilled)\n    ) {\n      console.log(\n        \"axios-debug-response-fulfilled\",\n        JSON.parse(JSON.stringify(responseFulfilled))\n      );\n    }\n    return Promise.resolve(responseFulfilled);\n  },\n  (responseRejected) => {\n    if (responseRejected.response && responseRejected.response.data) {\n      if (responseRejected.response.data.status === 400) {\n        toast.warning(responseRejected.response.data.message, {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      } else {\n        toast.error(\"Request Timeout!\", {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        });\n      }\n    }\n    if (!_.isEmpty(responseRejected)) {\n      if (process.env.NODE_ENV === \"development\") {\n        console.log(\n          \"axios-debug-response-rejected\",\n          JSON.parse(\n            JSON.stringify(responseRejected.response || responseRejected)\n          )\n        );\n      }\n    }\n    return Promise.reject(responseRejected);\n  }\n);\n\nexport default ConfigAxios;\n","import ConfigAxios from \"./ConfigAxios\";\n\nconst Invoke = {};\nconst headersConfigDelete = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n  data: {},\n};\n\nInvoke.submitLogin = (data) => {\n  return ConfigAxios.post(\"/login\", data);\n};\n\nInvoke.submitLoginEmployee = (data) => {\n  return ConfigAxios.post(\"/m_auth\", data);\n};\n\nInvoke.getListServices = (page, limit, keyword, type, status) => {\n  return ConfigAxios.get(\n    `/services?page=${page}&limit=${limit}&q=${keyword}&type=${type}&status=${status}`\n  );\n};\n\nInvoke.deleteJobServiceById = (jobId) => {\n  return ConfigAxios.delete(`/services/${jobId}`, headersConfigDelete);\n};\n\nInvoke.getOneServices = (jobId) => {\n  return ConfigAxios.get(`/services/${jobId}`);\n};\n\n// === Admin API : ===\nInvoke.getListAdmin = (page, limit, keyword = \"\") => {\n  return ConfigAxios.get(`/admins?page=${page}&limit=${limit}&q=${keyword}`);\n};\n\nInvoke.getAdminById = (adminId) => {\n  return ConfigAxios.get(`/admins/${adminId}`);\n};\n\nInvoke.addAdmin = (data) => {\n  return ConfigAxios.post(\"/admins\", data);\n};\n\nInvoke.updateAdmin = (data) => {\n  return ConfigAxios.put(\"/admins\", data);\n};\n\nInvoke.deleteAdminById = (adminId) => {\n  return ConfigAxios.delete(`/admins/${adminId}`, headersConfigDelete);\n};\n// === End Admin API ===\n\n// === Admin - Roles API : ===\nInvoke.getListAdminRoles = (adminId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${adminId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getAdminRolesById = (customerId) => {\n  return ConfigAxios.get(`/admins/roles${customerId}`);\n};\n\nInvoke.addAdminRoles = (data) => {\n  return ConfigAxios.post(\"/admins/roles\", data);\n};\n\nInvoke.updateAdminRoles = (data) => {\n  return ConfigAxios.put(\"/admins/roles\", data);\n};\n\nInvoke.deleteAdminRolesById = (customerId) => {\n  return ConfigAxios.delete(`/admins/roles${customerId}`);\n};\n// === End Admin - Roles API ===\n\n// === Employee - Roles API : ===\nInvoke.getEmployeeRoles = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\n// === Employee - Tools API : ===\nInvoke.getEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/employees/tools/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.addEmployeeRole = (data) => {\n  return ConfigAxios.post(`/employees/roles`, data);\n};\n\nInvoke.deleteEmployeeRole = (id) => {\n  return ConfigAxios.delete(`/employees/roles/${id}`, headersConfigDelete);\n};\n// === End Employee - Roles API ===\n\n// === Customers API ===\nInvoke.getCustomerList = (page, limit, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/customers?page=${page}&limit=${limit}&q=${keyword}&branchId=${branchId}`\n  );\n};\nInvoke.getCustomerById = (customerId) => {\n  return ConfigAxios.get(`/customers/${customerId}`);\n};\n\nInvoke.addCustomer = (data) => {\n  return ConfigAxios.post(\"/customers\", data);\n};\n\nInvoke.updateCustomer = (data) => {\n  return ConfigAxios.put(\"/customers\", data);\n};\n\nInvoke.deleteCustomerById = (customerId) => {\n  return ConfigAxios.delete(`/customers/${customerId}`, headersConfigDelete);\n};\n// === End Customers API ===\n\n// === Employee API === :\nInvoke.getEmployeeList = (\n  page,\n  limit,\n  keyword,\n  roleId,\n  branchId,\n  divisionId\n) => {\n  return ConfigAxios.get(\n    `/employees?page=${page}&limit=${limit}&q=${keyword}&role_id=${roleId}&branch_id=${branchId}&division_id=${divisionId}`\n  );\n};\n\nInvoke.getEmployeeById = (employeeId) => {\n  return ConfigAxios.get(`/employees/${employeeId}`);\n};\n\nInvoke.addEmployee = (data) => {\n  return ConfigAxios.post(\"/employees\", data);\n};\n\nInvoke.updateEmployee = (data) => {\n  return ConfigAxios.put(\"/employees\", data);\n};\n\nInvoke.deleteEmployeeById = (employeeId) => {\n  return ConfigAxios.delete(`/employees/${employeeId}`, headersConfigDelete);\n};\n// === End employee API ===\n\n// === Employee - Tools API : ===\nInvoke.getListEmployeeTools = (employeeId, page, limit) => {\n  return ConfigAxios.get(\n    `/admins/roles/${employeeId}?page=${page}&limit=${limit}`\n  );\n};\n\nInvoke.getEmployeeToolsById = (employeeId) => {\n  return ConfigAxios.get(`/employees/tools${employeeId}`);\n};\n\nInvoke.addEmployeeTools = (data) => {\n  return ConfigAxios.post(\"/employees/tools\", data);\n};\n\nInvoke.updateEmployeeTools = (data) => {\n  return ConfigAxios.put(\"/employees/tools\", data);\n};\n\nInvoke.deleteEmployeeToolsById = (employeeToolsId) => {\n  return ConfigAxios.delete(\n    `/employees/tools/${employeeToolsId}`,\n    headersConfigDelete\n  );\n};\n// === End Employee - Tools API ===\n\n// === Roles API ===\nInvoke.getListRole = (page, limit) => {\n  return ConfigAxios.get(`/roles?page=${page}&limit=${limit}`);\n};\nInvoke.getRoleById = (customerId) => {\n  return ConfigAxios.get(`/roles/${customerId}`);\n};\n\nInvoke.addRole = (data) => {\n  return ConfigAxios.post(\"/roles\", data);\n};\n\nInvoke.updateRole = (data) => {\n  return ConfigAxios.put(\"/roles\", data);\n};\n\nInvoke.deleteRoleById = (roleId) => {\n  return ConfigAxios.delete(`/roles/${roleId}`, headersConfigDelete);\n};\n// === End Roles API ===\n\n// === Master Province API === :\nInvoke.getProvinceList = (page, limit) => {\n  return ConfigAxios.get(`/provinces?page=${page}&limit=${limit}`);\n};\n// === End Master Province API ===\n\n// === Master Cities API === :\nInvoke.getCityList = (page, limit, provinceId) => {\n  return ConfigAxios.get(\n    `/provinces/cities/${provinceId}?page=${page}&limit=${limit}`\n  );\n};\n// === End Master Cities API ===\n\n// === Dashboard API ===\nInvoke.getDashboardProgressData = (data) => {\n  return ConfigAxios.get(\"/dashboards\", data);\n};\n// === End Dashboard API ===\n\n// === Services API ===\nInvoke.addInternalService = (data) => {\n  return ConfigAxios.post(\"/services\", data);\n};\nInvoke.updateJobService = (data) => {\n  return ConfigAxios.put(\"/services\", data);\n};\nInvoke.setFinishedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/finish/${jobId}`);\n};\nInvoke.setApprovedService = (jobId) => {\n  return ConfigAxios.get(`/m_services/approve/${jobId}`);\n};\nInvoke.setRejectedService = (jobId, payload) => {\n  return ConfigAxios.post(\n    `/m_services/reject/${jobId}?allowReject=true`,\n    payload\n  );\n};\n// === End Service API ===\n\n// Services - Employee API\nInvoke.getServicesEmployee = (jobId, page, limit) => {\n  return ConfigAxios.get(\n    `/services/employees/${jobId}?page=${page}&limit=${limit}`\n  );\n};\nInvoke.addNewEmployeeService = (jobId, payload) => {\n  return ConfigAxios.post(`/services/employees/${jobId}`, payload);\n};\nInvoke.setStatusEmployeeService = (jobId, payload) => {\n  return ConfigAxios.put(\n    `/services/employees/${jobId}`,\n    payload,\n    headersConfigDelete\n  );\n};\n// End Services - Employee API\n\n// === Service - Views API ===\nInvoke.getJobServiceSummary = (jobId, unitId) => {\n  return ConfigAxios.get(`/m_services/summary/${jobId}/${unitId}`);\n};\nInvoke.getJobServiceMedia = (jobId, unitId) => {\n  return ConfigAxios.get(`/services/medias/${jobId}/${unitId}`);\n};\nInvoke.getJobServiceDailies = (jobId, unitId) => {\n  return ConfigAxios.get(`/services/dailies/${jobId}/${unitId}`);\n};\nInvoke.updateJobServiceDailies = (payload) => {\n  return ConfigAxios.put(`/services/dailies`, payload);\n};\nInvoke.getChecklistData = (unitModelId) => {\n  return ConfigAxios.get(`/m_services/checklist/${unitModelId}`);\n};\nInvoke.getRejectedData = (jobId) => {\n  return ConfigAxios.get(`/m_services/reject/${jobId}`);\n};\nInvoke.getJobServiceHistories = (jobId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/services/logs/${jobId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\n// === End Service Views ===\n\n// === Master Unit API === :\nInvoke.getUnitList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/units?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addUnit = (payload) => {\n  return ConfigAxios.post(`/units`, payload);\n};\nInvoke.updateUnit = (payload) => {\n  return ConfigAxios.put(`/units`, payload);\n};\nInvoke.deleteUnitById = (unitId) => {\n  return ConfigAxios.delete(`units/${unitId}`, headersConfigDelete);\n};\n// === End Master Unit API ===\n\n// === Master unit-model API === :\nInvoke.getListUnitModel = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/models/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addUnitSerialNumber = (payload, unitModelId) => {\n  return ConfigAxios.post(`/units/serial/${unitModelId}`, payload);\n};\nInvoke.updateUnitSerialNumber = (payload, unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.put(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    payload\n  );\n};\nInvoke.deleteUnitSerialNumber = (unitModelId, unitSerialNumberId) => {\n  return ConfigAxios.delete(\n    `/units/serial/${unitModelId}/${unitSerialNumberId}`,\n    headersConfigDelete\n  );\n};\nInvoke.getUnitSerialNumber = (\n  page,\n  limit,\n  keyword,\n  unitModelId,\n  customerId\n) => {\n  return ConfigAxios.get(\n    `/units/serial/${unitModelId}?page=${page}&limit=${limit}&q=${keyword}&customerId=${customerId}`\n  );\n};\nInvoke.addUnitModel = (payload) => {\n  return ConfigAxios.post(`/units/models`, payload);\n};\nInvoke.updateUnitModel = (payload) => {\n  return ConfigAxios.put(`/units/models`, payload);\n};\nInvoke.deleteUnitModelById = (unitModelId) => {\n  return ConfigAxios.delete(`units/models/${unitModelId}`, headersConfigDelete);\n};\n// === End Master Unit-Model API ===\n\n// === Master unit-fields API === :\nInvoke.getListUnitFields = (page, limit, unitId, keyword) => {\n  return ConfigAxios.get(\n    `/units/fields/${unitId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.getListUnitJobForms = (unitId, jobFormId) => {\n  return ConfigAxios.get(`/units/job_forms/${unitId}?job_form_id=${jobFormId}`);\n};\nInvoke.addUnitFields = (payload) => {\n  return ConfigAxios.post(`/units/fields`, payload);\n};\nInvoke.updateUnitFields = (payload) => {\n  return ConfigAxios.put(`/units/fields`, payload);\n};\nInvoke.deleteUnitFieldsById = (unitfieldsId) => {\n  return ConfigAxios.delete(\n    `units/fields/${unitfieldsId}`,\n    headersConfigDelete\n  );\n};\n// === End Master Unit-Model API ===\n\n// === Master Job-Form API === :\nInvoke.getListJobForm = (page, limit, keyowrd) => {\n  return ConfigAxios.get(`job_forms?page=${page}&limit=${limit}&q=${keyowrd}`);\n};\nInvoke.addJobForms = (payload) => {\n  return ConfigAxios.post(`job_forms`, payload);\n};\nInvoke.updateJobForms = (payload) => {\n  return ConfigAxios.put(`job_forms`, payload);\n};\nInvoke.deleteJobForms = (jobFormsId) => {\n  return ConfigAxios.delete(`job_forms/${jobFormsId}`, headersConfigDelete);\n};\n// === End Job-Form API ===\n\n// === Master Branch API === :\nInvoke.getListBranch = (page, limit, keyword) => {\n  return ConfigAxios.get(`/branches?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.deleteBranchById = (branchId) => {\n  return ConfigAxios.delete(`/branches/${branchId}`, headersConfigDelete);\n};\nInvoke.addBranch = (payload) => {\n  return ConfigAxios.post(`/branches`, payload);\n};\nInvoke.updateBranch = (payload) => {\n  return ConfigAxios.put(`/branches`, payload);\n};\n// === End Branch API ===\n\n// === Master Menu API === :\nInvoke.getListMenu = (page, limit) => {\n  return ConfigAxios.get(`/menus?page=${page}&limit=${limit}`);\n};\n// === End Menu API ===\n\n// === Master Menu - Roles API === :\nInvoke.addMenuRole = (payload) => {\n  return ConfigAxios.post(`/menus/roles`, payload);\n};\n\nInvoke.getMenuByRoleId = (roleId) => {\n  return ConfigAxios.get(`/menus/menu_by_role/${roleId}`);\n};\n\nInvoke.deleteMenuByMenuRoleId = (menuRoleId) => {\n  return ConfigAxios.delete(`menus/roles/${menuRoleId}`, headersConfigDelete);\n};\n// === End Menu - Roles API ===\n\n// === Master Engines API === :\nInvoke.getListEngine = (page, limit, keyword) => {\n  return ConfigAxios.get(`/engines?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addEngine = (payload) => {\n  return ConfigAxios.post(`/engines`, payload);\n};\nInvoke.updateEngine = (payload) => {\n  return ConfigAxios.put(`/engines`, payload);\n};\nInvoke.deleteEngine = (machineId) => {\n  return ConfigAxios.delete(`/engines/${machineId}`, headersConfigDelete);\n};\n// === End Engines API ===\n\n// === Master Tools API === :\nInvoke.getListTools = (page, limit, keyword) => {\n  return ConfigAxios.get(`/tools?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addTool = (payload) => {\n  return ConfigAxios.post(`/tools`, payload);\n};\nInvoke.updateTool = (payload) => {\n  return ConfigAxios.put(`/tools`, payload);\n};\nInvoke.deleteTool = (toolId) => {\n  return ConfigAxios.delete(`/tools/${toolId}`, headersConfigDelete);\n};\n// === End Tools API ===\n\n// === Master FormCategory API === :\nInvoke.getFormCategory = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/category_forms?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addFormCategory = (payload) => {\n  return ConfigAxios.post(`/category_forms`, payload);\n};\nInvoke.updateFormCategory = (payload) => {\n  return ConfigAxios.put(`/category_forms`, payload);\n};\nInvoke.deleteFormCategory = (categoryFormId) => {\n  return ConfigAxios.delete(\n    `/category_forms/${categoryFormId}`,\n    headersConfigDelete\n  );\n};\n// === End FormCategory API ===\n\n// === Master Identification API === :\nInvoke.getIdentificationList = (page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/identifications?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\nInvoke.addIdentification = (payload) => {\n  return ConfigAxios.post(`/identifications`, payload);\n};\n\nInvoke.updateIdentificationMilling = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/milling\", payload);\n};\n\nInvoke.updateIdentificationRegular = (payload) => {\n  return ConfigAxios.put(\"/m_identifications/regular\", payload);\n};\n\nInvoke.deleteIdentificationById = (identificationId) => {\n  return ConfigAxios.delete(\n    `/identifications/${identificationId}`,\n    headersConfigDelete\n  );\n};\n\n// === Master Dvision API === :\nInvoke.getDivisionList = (page, limit, keyword) => {\n  return ConfigAxios.get(`/divisions?page=${page}&limit=${limit}&q=${keyword}`);\n};\nInvoke.addDivision = (payload) => {\n  return ConfigAxios.post(`/divisions`, payload);\n};\nInvoke.updateDivision = (payload) => {\n  return ConfigAxios.put(`/divisions`, payload);\n};\nInvoke.deleteDivision = (divisionId) => {\n  return ConfigAxios.delete(`/divisions/${divisionId}`, headersConfigDelete);\n};\n\n// === Master Dvision - Unit API === :\nInvoke.getDivisionUnitList = (divisionId, page, limit, keyword) => {\n  return ConfigAxios.get(\n    `/units/divisions/${divisionId}?page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\nInvoke.addDivisionUnit = (payload) => {\n  return ConfigAxios.post(`/units/divisions`, payload);\n};\n\n// Monitoring Employee\nInvoke.getReportMonitoringEmployee = (\n  page,\n  limit,\n  from,\n  until,\n  type = \"all\",\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/monitoring?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&type=${type}&q=${keyword}`\n  );\n};\n\n// Report Service Repair\nInvoke.getReportServiceRepair = (\n  page,\n  limit,\n  from,\n  until,\n  keyword,\n  branchId\n) => {\n  return ConfigAxios.get(\n    `/report/report_services?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Report Employee\nInvoke.getReportEmployee = (page, limit, from, until, keyword, branchId) => {\n  return ConfigAxios.get(\n    `/report/report_employee?from=${from}&until=${until}&page=${page}&limit=${limit}&branchId=${branchId}&q=${keyword}`\n  );\n};\n\n// Working Hours\nInvoke.getWorkingHours = (page, limit, from, until, keyword) => {\n  return ConfigAxios.get(\n    `/services/monitor/hour?startDate=${from}&endDate=${until}&page=${page}&limit=${limit}&q=${keyword}`\n  );\n};\n\n// Download pdf from server\nInvoke.getTransactionPdfUrl = (jobId) => {\n  return ConfigAxios.get(`/services/print_job/${jobId}`);\n};\n// Download pdf to BLOB\nInvoke.downloadPdfFromUrl = (url) => {\n  return ConfigAxios.get(url, { responseType: \"blob\" });\n};\n\nexport default Invoke;\n","import { store } from \"../../../app/ConfigureStore\";\n\nexport const PROCESS_GLOBAL_LOADING = \"PROCESS_GLOBAL_LOADING\";\nexport const PROCESS_FORM_GLOBAL_LOADING = \"PROCESS_FORM_GLOBAL_LOADING\";\nexport const SHOW_GLOBAL_MODAL = \"SHOW_GLOBAL_MODAL\";\nexport const RESET_ALL_LOADING = \"RESET_ALL_LOADING\";\n\nexport const setGlobalLoading = (payload) => {\n  return {\n    type: PROCESS_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const setGlobalModal = (payload) => {\n  return {\n    type: SHOW_GLOBAL_MODAL,\n    payload,\n  };\n};\n\nexport const setGlobalFormLoading = (payload) => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n    payload,\n  };\n};\n\nexport const resetAllProcessLoading = () => {\n  return {\n    type: PROCESS_FORM_GLOBAL_LOADING,\n  };\n};\n\nexport const resetAllGlobalLoadingProcess = () => {\n  const { dispatch } = store;\n  dispatch(resetAllProcessLoading());\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { toastr } from \"react-redux-toastr\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toast } from \"react-toastify\";\nimport { change } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ROLES = \"SET_LIST_ROLES\";\nexport const SET_SELECTED_ROLE_ID = \"SET_SELECTED_ROLE_ID\";\nexport const SET_SELECTED_ROLE_DETAIL = \"SET_SELECTED_ROLE_DETAIL\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const RESET_STATE = \"RESET_STATE\";\nexport const SET_SELECTED_ROLE_MENU = \"SET_SELECTED_ROLE_MENU\";\n\nexport const resetState = (payload) => {\n  return {\n    type: RESET_STATE,\n    payload,\n  };\n};\n\nexport const setListRoles = (payload) => {\n  return {\n    type: SET_LIST_ROLES,\n    payload,\n  };\n};\n\nexport const setSelectedRoleId = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_ID,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedRoleDetail = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_DETAIL,\n    payload,\n  };\n};\n\nexport const setSelectedRoleMenu = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_MENU,\n    payload,\n  };\n};\n\nexport const showToast = (message, type) => {\n  switch (type) {\n    case \"success\":\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n\n    case \"error\":\n      toast.error(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n    default:\n      toast.success(message, {\n        position: \"top-right\",\n        autoClose: 5000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n        progress: undefined,\n      });\n      break;\n  }\n};\n\nexport const getListRolesRequested = async () => {\n  const { data } = await Invoke.getListRole(1, 100);\n  store.dispatch(setListRoles(data.callback.data));\n};\n\nexport const mapDetailRoleToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().roles.selectedRoleDetail;\n  dispatch(change(\"editRolesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editRolesForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getMenuByRolesId = async (roleId) => {\n  const { data } = await Invoke.getMenuByRoleId(roleId);\n  let subItem = [];\n  data.callback.map((item, index) => {\n    subItem.push(item.menu_id);\n  });\n  store.dispatch(setSelectedRoleMenu(subItem));\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editRolesForm\", `id`, \"\"));\n  dispatch(change(\"editRolesForm\", `description`, \"\"));\n};\n\nconst doAddRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await Invoke.addRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteMenuRoleProcess = async (menuId, menuListApi) => {\n  const [menu] = menuListApi.filter((x) => x.menu_id === menuId);\n  await Invoke.deleteMenuByMenuRoleId(menu.id);\n};\n\nconst doAddMenuRoleProcess = async (menuId, roleId) => {\n  const payload = {\n    menu_id: menuId,\n    role_id: roleId,\n    view: true,\n    insert: true,\n    update: true,\n    delete: false,\n  };\n  await Invoke.addMenuRole(payload);\n};\n\nconst doSaveMenuRole = async (newMenuSelected) => {\n  const { getState } = store;\n  const currentMenuSelected = getState().roles.selectedRoleMenu;\n  const selectedRoleId = getState().roles.selectedRoleId;\n  const { data } = await Invoke.getMenuByRoleId(selectedRoleId);\n  const menuListApi = data.callback;\n\n  if (currentMenuSelected.length > 0) {\n    await currentMenuSelected.map((item, index) => {\n      doDeleteMenuRoleProcess(item, menuListApi);\n    });\n    setTimeout(() => {\n      newMenuSelected.map((newMenu, index) => {\n        doAddMenuRoleProcess(newMenu, selectedRoleId);\n      });\n    }, 1000);\n  } else {\n    newMenuSelected.map((item, index) => {\n      doAddMenuRoleProcess(item, selectedRoleId);\n    });\n  }\n};\n\nconst doEditRoleProcess = async (values, menuSelected) => {\n  const { dispatch } = store;\n  try {\n    const splitDescription = values.description.split(\" \");\n    const payload = {};\n    payload.id = values.id;\n    payload.name =\n      splitDescription.length > 0\n        ? values.description.replaceAll(\" \", \"_\")\n        : values.description;\n    payload.description = values.description;\n    await doSaveMenuRole(menuSelected);\n    await Invoke.updateRole(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListRolesRequested();\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteRoleProcess = async (roleId) => {\n  try {\n    await Invoke.deleteRoleById(roleId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListRolesRequested();\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteRoleRequested = async (roleId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteRoleProcess(roleId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const saveRoleRequested = async (type, values, menuSelected) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddRoleProcess(values, menuSelected);\n      } else {\n        doEditRoleProcess(values, menuSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_LIST_ADMIN = \"SET_LIST_ADMIN\";\nexport const SET_PAGING_ADMIN = \"SET_PAGING_ADMIN\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ADMIN_ID = \"SET_SELECTED_ADMIN_ID\";\nexport const SET_SELECTED_ADMIN_DATA = \"SET_SELECTED_ADMIN_DATA\";\n\nexport const setListAdmin = (payload) => {\n  return {\n    type: SET_LIST_ADMIN,\n    payload,\n  };\n};\n\nexport const setPagingAdmin = (payload) => {\n  return {\n    type: SET_PAGING_ADMIN,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedAdminId = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_ID,\n    payload,\n  };\n};\n\nexport const setSelectedAdminData = (payload) => {\n  return {\n    type: SET_SELECTED_ADMIN_DATA,\n    payload,\n  };\n};\n\nexport const getListAdminRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListAdmin(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListAdmin(data.callback.data));\n    store.dispatch(setPagingAdmin(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editAdminForm\", `id`, \"\"));\n  dispatch(change(\"editAdminForm\", `username`, \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, \"\"));\n  dispatch(change(\"editAdminForm\", `password`, \"\"));\n};\n\nconst doAddAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.addAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditAdminProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.fullname = values.fullname;\n    payload.password = values.password;\n    await Invoke.updateAdmin(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getListAdminRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteAdminProcess = async (adminId) => {\n  const { getState } = store;\n  const paging = getState().admins.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteAdminById(adminId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListAdminRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveAdminRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddAdminProcess(values);\n      } else {\n        doEditAdminProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailAdminToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().admins.selectedAdminData;\n  dispatch(change(\"editAdminForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editAdminForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editAdminForm\", `fullname`, data.fullname ?? \"\"));\n};\n\nexport const deleteAdminRequested = async (adminId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteAdminProcess(adminId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_PROVINCE_LIST_DATA = \"SET_PROVINCE_LIST_DATA\";\nexport const SET_CITY_LIST_DATA = \"SET_CITY_LIST_DATA\";\nexport const SET_MENU_LIST_DATA = \"SET_MENU_LIST_DATA\";\n\nexport const setProvinceListData = (payload) => {\n  return {\n    type: SET_PROVINCE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setMenuListData = (payload) => {\n  return {\n    type: SET_MENU_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCityListData = (payload) => {\n  return {\n    type: SET_CITY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const loadProvinceListData = async () => {\n  try {\n    const { data } = await Invoke.getProvinceList(1, 100);\n    store.dispatch(setProvinceListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadCityListData = async (provinceId) => {\n  try {\n    const { data } = await Invoke.getCityList(1, 200, provinceId);\n    store.dispatch(setCityListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const loadMenuListData = async () => {\n  try {\n    const { data } = await Invoke.getListMenu(1, 100);\n    store.dispatch(setMenuListData(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_BRANCH_LIST_DATA = \"SET_BRANCH_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_BRANCH_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_BRANCH_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_BRANCH = \"SET_PAGING_BRANCH\";\nexport const SET_BRANCH_LIST_DATA_DROPDOWN = \"SET_BRANCH_LIST_DATA_DROPDOWN\";\n\nexport const setBranchListData = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setBranchListDataDropdown = (payload) => {\n  return {\n    type: SET_BRANCH_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingBranch = (payload) => {\n  return {\n    type: SET_PAGING_BRANCH,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedBranchId = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_ID,\n    payload,\n  };\n};\n\nexport const setSelectedBranchData = (payload) => {\n  return {\n    type: SET_SELECTED_BRANCH_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteBranchById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getBranchListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.addBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.description;\n    payload.description = values.description;\n    await Invoke.updateBranch(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getBranchListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editBranchForm\", `id`, \"\"));\n  dispatch(change(\"editBranchForm\", `description`, \"\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().branch.selectedBranchData;\n  dispatch(change(\"editBranchForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editBranchForm\", `description`, data.name ?? \"\"));\n};\n\nexport const getBranchListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  isDropdown = false\n) => {\n  try {\n    const { data } = await Invoke.getListBranch(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdown) {\n      store.dispatch(setBranchListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setBranchListData(data.callback.data));\n    }\n    store.dispatch(setPagingBranch(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveBranchRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddBranchProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteBranchRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_ID = \"SET_SELECTED_UNIT_ID\";\nexport const SET_SELECTED_UNIT_DATA = \"SET_SELECTED_UNIT_DATA\";\nexport const SET_PAGING_UNIT = \"SET_PAGING_UNIT\";\n\nexport const setUnitListData = (payload) => {\n  return {\n    type: SET_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnit = (payload) => {\n  return {\n    type: SET_PAGING_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteUnitProcess = async (unitId) => {\n  const { getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitById(unitId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    payload.photo = values.imageUrl ?? \"\";\n    await Invoke.addUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().units.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.photo = values.imageUrl ?? \"\";\n    payload.description = values.description;\n    await Invoke.updateUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitForm\", `id`, \"\"));\n  dispatch(change(\"editUnitForm\", `name`, \"\"));\n  dispatch(change(\"editUnitForm\", `description`, \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, \"\"));\n};\n\nexport const mapDetailUnitToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().units.selectedUnitsData;\n\n  dispatch(change(\"editUnitForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitForm\", `description`, data.description ?? \"\"));\n  dispatch(change(\"editUnitForm\", `imageUrl`, data.photo ?? \"\"));\n};\n\nexport const getUnitListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getUnitList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitListData(data.callback.data));\n    store.dispatch(setPagingUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitProcess(values);\n      } else {\n        doEditUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitRequested = async (unitId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitProcess(unitId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_MACHINE_LIST_DATA = \"SET_MACHINE_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_MACHINE_ID = \"SET_SELECTED_MACHINE_ID\";\nexport const SET_SELECTED_MACHINE_DATA = \"SET_SELECTED_MACHINE_DATA\";\nexport const SET_PAGING_MACHINE_CONF = \"SET_PAGING_MACHINE_CONF\";\n\nexport const setMachineListData = (payload) => {\n  return {\n    type: SET_MACHINE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMachineConf = (payload) => {\n  return {\n    type: SET_PAGING_MACHINE_CONF,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedMachineId = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedMachineData = (payload) => {\n  return {\n    type: SET_SELECTED_MACHINE_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteMachineProcess = async (machineId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteEngine(machineId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getMachineListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditMachineProcess = async (values) => {\n  const { getState, dispatch } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateEngine(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getMachineListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editMachineConfigurationForm\", `name`, \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `description`, \"\"));\n};\n\nexport const mapDetailMachineToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().machineConfiguration.selectedMachineData;\n  dispatch(change(\"editMachineConfigurationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editMachineConfigurationForm\", `name`, data.name ?? \"\"));\n  dispatch(\n    change(\n      \"editMachineConfigurationForm\",\n      `description`,\n      data.description ?? \"\"\n    )\n  );\n};\n\nexport const getMachineListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListEngine(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setMachineListData(data.callback.data));\n    store.dispatch(setPagingMachineConf(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveMachineRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddMachineProcess(values);\n      } else {\n        doEditMachineProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteMachineRequested = async (machineId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteMachineProcess(machineId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import * as AdminActions from \"../modules/Admin/Store/AdminActions\";\nimport * as RoleActions from \"../modules/Roles/Store/RolesActions\";\nimport * as MasterDataActions from \"../modules/MasterData/Store/MasterDataActions\";\nimport * as BranchActions from \"../modules/Branch/Store/BranchActions\";\nimport * as UnitsActions from \"../modules/Units/Store/UnitsActions\";\nimport * as MachineConfigurationActions from \"../modules/MachineConfiguration/Store/MachineConfigurationActions\";\n\nexport const initializeApp = async () => {\n  await AdminActions.getListAdminRequested(1, 10);\n  await RoleActions.getListRolesRequested();\n  await MasterDataActions.loadMenuListData();\n  await MasterDataActions.loadProvinceListData();\n  await BranchActions.getBranchListDataRequested(1, 10);\n  await UnitsActions.getUnitListDataRequested(1, 10);\n  await MachineConfigurationActions.getMachineListDataRequested(1, 10);\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport history from \"../../../app/History\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { initializeApp } from \"../../../app/InitializeApp\";\n\nexport const SET_ACCESS_TOKEN_DATA = \"SET_ACCESS_TOKEN_DATA\";\nexport const SET_USER_DETAIL_DATA = \"SET_USER_DETAIL_DATA\";\nexport const SET_ERROR_LOGIN = \"SET_ERROR_LOGIN\";\n\nexport const setAccessToken = (payload) => {\n  return {\n    type: SET_ACCESS_TOKEN_DATA,\n    payload,\n  };\n};\nexport const setUserDetail = (payload) => {\n  return {\n    type: SET_USER_DETAIL_DATA,\n    payload,\n  };\n};\nexport const setErrorLogin = (payload) => {\n  return {\n    type: SET_ERROR_LOGIN,\n    payload,\n  };\n};\nexport const logout = () => {\n  return {\n    type: \"LOGOUT\",\n  };\n};\n\nexport const doLogout = (dispatch) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      dispatch(logout());\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah Anda Yakin Ingin Keluar?\", toastrConfirmOptions);\n};\n\nconst appendItem = async (data) =>\n  new Promise((resolve, reject) => {\n    store.dispatch(setAccessToken(data.data.callback.accessToken));\n    delete data.data.callback.accessToken;\n    store.dispatch(setUserDetail(data.data.callback));\n    resolve();\n  });\n\nexport const handleSubmitLogin = async (values) => {\n  const { username, password } = values;\n  const payload = { username, password };\n\n  console.log(\"=== user pass : \", username, password);\n\n  store.dispatch(setGlobalLoading(true));\n\n  Invoke.submitLogin(payload)\n    .then((data) => {\n      appendItem(data).then(() => {\n        setTimeout(() => {\n          history.push(\"/dashboard\");\n          window.location.reload();\n          store.dispatch(setGlobalLoading(false));\n        }, 5000);\n      });\n    })\n    .catch((onRejected) => {\n      store.dispatch(setGlobalLoading(false));\n      if (onRejected) {\n        const status = onRejected?.response?.data?.status;\n        const dataResponseRejected = onRejected?.response?.data ?? null;\n        if (dataResponseRejected) {\n          if (status === 400) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          } else if (status === 401) {\n            const error = {};\n            error.status = true;\n            error.message = dataResponseRejected.message;\n            store.dispatch(setErrorLogin(error));\n          }\n        }\n      }\n    });\n};\n","import {\n  SET_ACCESS_TOKEN_DATA,\n  SET_USER_DETAIL_DATA,\n  SET_ERROR_LOGIN,\n} from \"./AuthAction\";\n\nexport const initialState = {\n  accessToken: \"\",\n  userDetail: null,\n  avatar: null,\n  error: {\n    status: false,\n    message: \"\",\n  },\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ACCESS_TOKEN_DATA:\n      newState.accessToken = action.payload;\n      return { ...newState };\n\n    case SET_USER_DETAIL_DATA:\n      newState.userDetail = action.payload;\n      return { ...newState };\n\n    case SET_ERROR_LOGIN:\n      newState.error = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import history from \"./History\";\n\nexport const navigate = (path) => {\n  history.push(path);\n  window.location.reload();\n};\n\nexport const getIndex = (currentpage, limit) => {\n  const pageNumbers = [];\n  const startIndex = currentpage * limit - limit + 1;\n  const endIndex = startIndex + limit;\n  for (let i = startIndex === 0 ? 1 : startIndex; i <= endIndex; i++) {\n    pageNumbers.push(i);\n  }\n  return pageNumbers;\n};\n\nexport const getBase64 = (img, callback) => {\n  const reader = new FileReader();\n  reader.addEventListener(\"load\", () => callback(reader.result));\n  reader.readAsDataURL(img);\n};\n\nexport const SelectLocation = [\n  {\n    id: `location-1`,\n    value: \"L1\",\n    label: \"Cabang\",\n  },\n  {\n    id: `location-2`,\n    value: \"L2\",\n    label: \"Depo PT Rutan\",\n  },\n];\n\nexport const SelectType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Project\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"PB\",\n  },\n  {\n    id: `type-3`,\n    value: \"T3\",\n    label: \"Komersil\",\n  },\n];\n\nexport const SelectInstanceType = [\n  {\n    id: `type-1`,\n    value: \"T1\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `type-2`,\n    value: \"T2\",\n    label: \"Kelompok Tani\",\n  },\n];\n\nexport const SelectStatus = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Finished\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusServices = [\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Progress\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Completed\",\n  },\n  {\n    id: `status-2`,\n    value: \"S4\",\n    label: \"Approved\",\n  },\n  {\n    id: `status-3`,\n    value: \"S5\",\n    label: \"Rejected\",\n  },\n];\n\nexport const SelectStatusMilling = [\n  {\n    id: `status-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n  {\n    id: `status-3`,\n    value: \"S4\",\n    label: \"Lain-lain\",\n  },\n];\n\nexport const SelectInstanceTypeRegular = [\n  {\n    id: `status-1`,\n    value: \"T1\",\n    label: \"Kepemilikan Pribadi\",\n  },\n  {\n    id: `status-2`,\n    value: \"T2\",\n    label: \"Perusahaan\",\n  },\n  {\n    id: `status-3`,\n    value: \"T3\",\n    label: \"Kelompok Tani\",\n  },\n  {\n    id: `status-3`,\n    value: \"T4\",\n    label: \"Dinas\",\n  },\n];\n\nexport const SelectStatusIdentification = [\n  {\n    id: `status-identification-1`,\n    value: \"S1\",\n    label: \"Pemilik\",\n  },\n  {\n    id: `status-identification-2`,\n    value: \"S2\",\n    label: \"Operator\",\n  },\n  {\n    id: `status-identification-3`,\n    value: \"S3\",\n    label: \"Penanggung Jawab\",\n  },\n];\n\nexport const SelectMilling = [\n  {\n    id: `milling-1`,\n    value: \"true\",\n    label: \"Penggilingan\",\n  },\n  {\n    id: `milling-2`,\n    value: \"false\",\n    label: \"non-Penggilingan\",\n  },\n];\n\nexport const enumTypeInternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Training\" },\n];\n\nexport const enumTypeExternalServices = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Training\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modification\" },\n];\n\nexport const enumWarranty = [\n  { id: `enum-warranty-1`, value: true, label: \"Warranty\" },\n  { id: `enum-warranty-2`, value: false, label: \"No Warranty\" },\n];\n\nexport const warrantyMonths = () => {\n  const warrantyMonths = [];\n  for (let i = 0; i <= 24; i++) {\n    warrantyMonths.push({\n      id: `enum-warranty-moths-${i}`,\n      value: i.toString(),\n      label: `${i} bulan`,\n    });\n  }\n  return warrantyMonths;\n};\n\nexport const getProvinceEnum = (data) => {\n  const SelectProvince = [];\n  data.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectProvince;\n};\n\nexport const getCitiesEnum = (data) => {\n  const SelectCities = [];\n  data.map((item, index) => {\n    SelectCities.push({\n      id: `city-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectCities;\n};\n\nexport const getRolesEnum = (data) => {\n  const SelectRoles = [];\n  data.map((item, index) => {\n    SelectRoles.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectRoles;\n};\n\nexport const enumSelectGenerator = (data, enumName) => {\n  const SelectEnum = [];\n  data.map((item, index) => {\n    SelectEnum.push({\n      id: `${enumName}-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectEnum;\n};\n\nexport const getUnitModelEnum = (data) => {\n  const SelectUnitModel = [];\n  data.map((item, index) => {\n    SelectUnitModel.push({\n      id: `unit-model-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n  return SelectUnitModel;\n};\n\nexport const getMachineConf = (data) => {\n  const SelectMachines = [];\n  data.map((item, index) => {\n    SelectMachines.push({\n      id: item.id,\n      name: item.name.replace(/ /g, \"_\").toLowerCase(),\n      type: item.name,\n    });\n  });\n  return SelectMachines;\n};\n\nexport const getStatus = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S2\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Completed\", color: \"#87d068\" };\n      break;\n    case \"S4\":\n      statusItem = { value: \"Approved\", color: \"#87d068\" };\n      break;\n    case \"S5\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\nexport const getStatusWorkingHours = (status = \"\") => {\n  let statusItem = {};\n  switch (status.toUpperCase()) {\n    case \"S1\":\n      statusItem = { value: \"Draft\", color: \"#fff566\" };\n      break;\n    case \"S2\":\n      statusItem = { value: \"Progress\", color: \"#108ee9\" };\n      break;\n    case \"S3\":\n      statusItem = { value: \"Completed\", color: \"#95de64\" };\n      break;\n    case \"S4\":\n      statusItem = { value: \"Approved\", color: \"#95de64\" };\n      break;\n    case \"S5\":\n      statusItem = { value: \"Rejected\", color: \"#f50\" };\n      break;\n    default:\n      statusItem = { value: \"-\", color: \"#f50\" };\n      break;\n  }\n\n  return statusItem;\n};\n\n// This list not used\nexport const machineConf = [\n  {\n    name: \"dryer\",\n    type: \"dryer\",\n  },\n  {\n    name: \"cleaner\",\n    type: \"cleaner\",\n  },\n  {\n    name: \"head_husker\",\n    type: \"head husker\",\n  },\n  {\n    name: \"body_husker\",\n    type: \"body husker\",\n  },\n  {\n    name: \"separator\",\n    type: \"separator\",\n  },\n  {\n    name: \"destoner\",\n    type: \"destoner\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n\n  {\n    name: \"vertikal_abrasive\",\n    type: \"vertikal abrasive\",\n  },\n  {\n    name: \"horizontal_abrasive\",\n    type: \"horizontal abrasive\",\n  },\n  {\n    name: \"friction_abrasive\",\n    type: \"friction abrasive\",\n  },\n  {\n    name: \"rotary_rice_sifter\",\n    type: \"rotary rice sifter\",\n  },\n  {\n    name: \"non_rotary_rice_sifter\",\n    type: \"non rotary rice sifter\",\n  },\n\n  {\n    name: \"length_grader\",\n    type: \"length grader\",\n  },\n  {\n    name: \"milling_meter\",\n    type: \"milling meter\",\n  },\n  {\n    name: \"scale\",\n    type: \"scale\",\n  },\n];\n\nexport const monitoringType = {\n  all: \"all\",\n  external: \"T1\",\n  internal: \"T2\",\n  loss: \"T3\",\n};\n\nexport const categoryServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n];\n\nexport const categoryMonitoringServices = [\n  {\n    name: \"Internal Service\",\n    status: \"processing\",\n  },\n  {\n    name: \"External Service\",\n    status: \"success\",\n  },\n  {\n    name: \"Service With Warranty\",\n    status: \"warning\",\n  },\n  {\n    name: \"Loss\",\n    status: \"error\",\n  },\n];\n\nexport const enumTypeMonitoringEmployee = [\n  { id: `enum-type-1`, value: \"T1\", label: \"Repair\" },\n  { id: `enum-type-2`, value: \"T2\", label: \"TroubleShoot\" },\n  { id: `enum-type-3`, value: \"T3\", label: \"Identification\" },\n  { id: `enum-type-4`, value: \"T4\", label: \"Pelatihan\" },\n  { id: `enum-type-5`, value: \"T5\", label: \"Demo\" },\n  { id: `enum-type-6`, value: \"T6\", label: \"Modifikasi\" },\n];\n\nexport const getBase64Image = (url) => {\n  const img = new Image();\n  img.setAttribute(\"crossOrigin\", \"anonymous\");\n  img.onload = () => {\n    const canvas = document.createElement(\"canvas\");\n    canvas.width = img.width;\n    canvas.height = img.height;\n    const ctx = canvas.getContext(\"2d\");\n    ctx.drawImage(img, 0, 0);\n    const dataURL = canvas.toDataURL(\"image/png\");\n    console.log(dataURL);\n  };\n  img.src = url;\n};\n\n/**\n * This function calculate the width of a string based on its length\n * @param {String} text\n * @param {String} font\n */\nconst getTextWidth = (text, font = \"14px -apple-system\") => {\n  const canvas = document.createElement(\"canvas\");\n  const context = canvas.getContext(\"2d\");\n  context.font = font;\n  const metrics = context.measureText(text);\n  return Math.round(metrics.width + 80);\n};\n\n/**\n * This function calculates the width of each column based in all CELL VALUES\n * @param {Array} columns\n * @param {Array} source\n * @param {Number} maxWidthPerCell\n */\nexport const calculateColumnsWidth = (\n  columns,\n  source,\n  maxWidthPerCell = 500\n) => {\n  const columnsParsed = JSON.parse(JSON.stringify(columns));\n  console.log(\"=== columnsParsed : \", columnsParsed);\n\n  // First we calculate the width for each column\n  // The column width is based on its string length\n\n  const columnsWithWidth = columnsParsed.map((column) =>\n    Object.assign(column, {\n      width: getTextWidth(column.title),\n    })\n  );\n  console.log(\"=== columnsWithWidth : \", columnsWithWidth);\n\n  // Since we have a minimum width (column's width already calculated),\n  // now we are going to verify if the cell value is bigger\n  // than the column width which is already set\n\n  source.map((entry) => {\n    columnsWithWidth.map((column, indexColumn) => {\n      const columnWidth = column.width;\n      const cellValue = Object.values(entry)[indexColumn];\n\n      // Get the string width based on chars length\n      let cellWidth = getTextWidth(cellValue);\n\n      // Verify if the cell value is smaller than column's width\n      if (cellWidth < columnWidth) cellWidth = columnWidth;\n\n      // Verify if the cell value width is bigger than our max width flag\n      if (cellWidth > maxWidthPerCell) cellWidth = maxWidthPerCell;\n\n      // Update the column width\n      columnsWithWidth[indexColumn].width = cellWidth;\n    });\n  });\n\n  // Sum of all columns width to determine the table max width\n  const tableWidth = columnsWithWidth\n    .map((column) => column.width)\n    .reduce((a, b) => {\n      return a + b;\n    });\n  console.log(\"=== tableWidth : \", tableWidth);\n  console.log(\"=== source : \", source);\n\n  return {\n    columns: columnsWithWidth,\n    source,\n    tableWidth,\n  };\n};\n\n// Check if roles is blocked on menu list service:\nexport const isBlockedRoleListService = (role) => {\n  let isBlocked;\n  switch (role) {\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"b7e003a1-5574-4a03-96fa-c71e6714d269\":\n      isBlocked = true;\n      break;\n\n    case \"7cf419b8-9275-479b-846a-cda27aa173eb\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n\n// Check if roles is blocked on menu customer:\nexport const isBlockedRoleCustomer = (role) => {\n  let isBlocked = false;\n  switch (role) {\n    case \"b58df788-26e0-4d41-a3af-39ac1005a2bc\":\n      isBlocked = true;\n      break;\n\n    case \"1b775fda-6798-4769-b31b-b0eecacb3381\":\n      isBlocked = true;\n      break;\n\n    case \"7cf419b8-9275-479b-846a-cda27aa173eb\":\n      isBlocked = true;\n      break;\n\n    default:\n      isBlocked = false;\n      break;\n  }\n\n  return isBlocked;\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { change } from \"redux-form\";\nimport moment from \"moment\";\nimport { setSelectedJobService } from \"../../ListServices/Store/ListServicesActions\";\nimport fileDownload from \"js-file-download\";\n\nexport const SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA =\n  \"SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA\";\n\nexport const SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_GROUPING_SUMMARY_DATA = \"SET_GROUPING_SUMMARY_DATA\";\n\nexport const SET_GROUPING_CHECKLIST_DATA = \"SET_GROUPING_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_SUMMARY_DATA =\n  \"SET_SELECTED_SERVICES_SUMMARY_DATA\";\n\nexport const SET_SELECTED_SERVICES_MEDIA_DATA =\n  \"SET_SELECTED_SERVICES_MEDIA_DATA\";\n\nexport const SET_SELECTED_SERVICES_DAILIES_DATA =\n  \"SET_SELECTED_SERVICES_DAILIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_HISTORIES_DATA =\n  \"SET_SELECTED_SERVICES_HISTORIES_DATA\";\n\nexport const SET_SELECTED_SERVICES_CHECKLIST_DATA =\n  \"SET_SELECTED_SERVICES_CHECKLIST_DATA\";\n\nexport const SET_SELECTED_SERVICES_REJECTED_DATA =\n  \"SET_SELECTED_SERVICES_REJECTED_DATA\";\n\nexport const SET_EDIT_TRANSACTION_MODAL = \"SET_EDIT_TRANSACTION_MODAL\";\n\nexport const SET_REJECTIONS_MODAL = \"SET_REJECTIONS_MODAL\";\n\nexport const SET_EDIT_DAILIES_MODAL = \"SET_EDIT_DAILIES_MODAL\";\n\nexport const SET_SELECTED_EDIT_DAILIES_DATA = \"SET_SELECTED_EDIT_DAILIES_DATA\";\n\nexport const SET_SELECTED_UNIT = \"SET_SELECTED_UNIT\";\n\nexport const RESET_DETAIL_SERVICE = \"RESET_DETAIL_SERVICE\";\n\nexport const setRejectionsModal = (payload) => {\n  return {\n    type: SET_REJECTIONS_MODAL,\n    payload,\n  };\n};\n\nexport const resetDetailService = () => {\n  return {\n    type: RESET_DETAIL_SERVICE,\n  };\n};\n\nexport const setSelectedUnit = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT,\n    payload,\n  };\n};\n\nexport const setEditTransactionModal = (payload) => {\n  return {\n    type: SET_EDIT_TRANSACTION_MODAL,\n    payload,\n  };\n};\n\nexport const setGroupingSelectedServicesMediaData = (payload) => {\n  return {\n    type: SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingSummaryData = (payload) => {\n  return {\n    type: SET_GROUPING_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setGroupingChecklistData = (payload) => {\n  return {\n    type: SET_GROUPING_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setEditDailiesModal = (payload) => {\n  return {\n    type: SET_EDIT_DAILIES_MODAL,\n    payload,\n  };\n};\n\nexport const setSelectedServicesEmployeeListData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServicesChecklisttData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_CHECKLIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedSummaryData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_SUMMARY_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceMediaData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_MEDIA_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceHistoriesData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_HISTORIES_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedServiceRejectedData = (payload) => {\n  return {\n    type: SET_SELECTED_SERVICES_REJECTED_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEditDailiesData = (payload) => {\n  return {\n    type: SET_SELECTED_EDIT_DAILIES_DATA,\n    payload,\n  };\n};\n\nexport const getJobServiceEmployeeList = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getServicesEmployee(jobId, 1, 100);\n  const serviceEmployeeList = data.callback.data;\n\n  const results = Promise.all(\n    serviceEmployeeList.map(async (item, index) => {\n      let subIitem = {};\n      subIitem.active = item.active;\n      subIitem.employee_service_id = item.id;\n      const employee = await Invoke.getEmployeeById(item.employee_id);\n      subIitem = { ...subIitem, ...employee.data.callback };\n      return subIitem;\n    })\n  );\n  dispatch(setSelectedServicesEmployeeListData(await results));\n};\n\nexport const getJobServiceSummary = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceSummary(jobId, unitId);\n    dispatch(setSelectedSummaryData(data.callback));\n  } catch (error) {\n    dispatch(setSelectedSummaryData({}));\n  }\n};\n\nexport const getJobServiceMedia = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceMedia(jobId, unitId);\n    dispatch(setSelectedServiceMediaData(data.callback.data));\n  } catch (error) {\n    dispatch(setSelectedServiceMediaData([]));\n  }\n};\n\nexport const getJobServiceDailies = async (jobId, unitId = \"\") => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getJobServiceDailies(jobId, unitId);\n    dispatch(\n      setSelectedServiceDailiesData(data.callback.data || data.callback)\n    );\n  } catch (error) {\n    dispatch(setSelectedServiceDailiesData([]));\n  }\n};\n\nexport const getJobServiceHistories = async (jobId, keyword = \"\") => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getJobServiceHistories(jobId, 1, 100, keyword);\n  dispatch(setSelectedServiceHistoriesData(data.callback.logs));\n};\n\nexport const getJobServiceRejections = async (jobId) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getRejectedData(jobId);\n  dispatch(setSelectedServiceRejectedData(data.callback));\n};\n\nexport const getChecklistData = async (unitModelId) => {\n  const { dispatch } = store;\n  try {\n    const { data } = await Invoke.getChecklistData(unitModelId);\n    dispatch(setSelectedServicesChecklisttData(data.callback));\n  } catch (e) {\n    console.log(e);\n    dispatch(setSelectedServicesChecklisttData([]));\n  }\n};\n\nexport const handleAddNewEmployeeService = async (jobId, employeeId) => {\n  const { dispatch } = store;\n  try {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.active = \"true\";\n    await Invoke.addNewEmployeeService(jobId, payload);\n    setTimeout(() => {\n      dispatch(ComponentActions.setGlobalModal(false));\n      dispatch(ComponentActions.setGlobalLoading(false));\n      getJobServiceEmployeeList(jobId);\n    }, 500);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nexport const setStatusEmployee = async (\n  jobId,\n  employeeServiceId,\n  employeeId,\n  isActive\n) => {\n  const payload = {};\n  payload.id = employeeServiceId;\n  payload.employee_id = employeeId;\n  payload.active = isActive;\n  await Invoke.setStatusEmployeeService(jobId, payload);\n  setTimeout(() => {\n    getJobServiceEmployeeList(jobId);\n  }, 500);\n};\n\nconst doRejectServiceProcess = async (jobId, values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.reason = values.reason;\n    await Invoke.setRejectedService(jobId, payload);\n    showToast(\"Berhasil melakukan reject\", \"success\");\n    navigate(\"/list_service\");\n    dispatch(setRejectionsModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setRejectionsModal(false));\n  }\n};\n\nconst doEditServiceProcess = async (values) => {\n  const { dispatch } = store;\n\n  const warranty = values.warranty.split(\"|\");\n  const warrantyYears = values.warrantyYears.split(\"|\");\n  const warrantyMonths = values.warrantyMonths.split(\"|\");\n\n  const payload = {};\n  payload.id = values.id;\n  payload.start = moment(values.startDate).format(\"YYYY-MM-DD\");\n  payload.due = moment(values.dueDate).format(\"YYYY-MM-DD\");\n  payload.job_perform = values.jobPerform;\n  payload.warranty = warranty[0];\n  payload.warranty_month = warrantyMonths[0] ?? 0;\n  payload.warranty_year = warrantyYears[0] ?? 0;\n\n  try {\n    await Invoke.updateJobService(payload);\n    showToast(\"Data berhasil disimpan\", \"success\");\n\n    const { data } = await Invoke.getOneServices(values.id);\n    await store.dispatch(\n      setSelectedJobService({ ...data.callback, units: values.unit_models })\n    );\n    dispatch(setEditTransactionModal(false));\n  } catch (error) {\n    showToast(\"Proses reject gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nexport const handlePressEditRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditServiceProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\"Apakah anda yakin menyimpan data ini?\", toastrConfirmOptions);\n};\n\nexport const handlePressRejectedRequested = async (jobId, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doRejectServiceProcess(jobId, values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin me me-reject data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nconst doEditDailiesProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const dataService = getState().services.selectedJobService;\n\n  const payload = {};\n  payload.id = values.id;\n  payload.title = values.title ?? \"\";\n  payload.daily_start = moment(values.startDate).format(\"YYYY-MM-DD\");\n  payload.daily_end = moment(values.endDate).format(\"YYYY-MM-DD\");\n  payload.description = values.description ?? \"\";\n  try {\n    await Invoke.updateJobServiceDailies(payload);\n    showToast(\"Berhasil menyimpan data\", \"success\");\n    await getJobServiceDailies(dataService.id);\n    dispatch(setEditDailiesModal(false));\n  } catch (error) {\n    showToast(\"Proses manyimpan gagal, silahkan coba lagi\", \"error\");\n    dispatch(setEditTransactionModal(false));\n  }\n};\n\nexport const handlePressEditDailiesRequested = async (values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doEditDailiesProcess(values);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah anda yakin ingin menyimpan data ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailTransactionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().services.selectedJobService;\n  dispatch(change(\"editTransactionForm\", `id`, data.id ?? \"\"));\n  dispatch(\n    change(\"editTransactionForm\", `startDate`, moment(data.start) ?? \"\")\n  );\n  dispatch(change(\"editTransactionForm\", `endDate`, moment(data.end) ?? \"\"));\n  dispatch(change(\"editTransactionForm\", `jobPerform`, data.job_perform ?? \"\"));\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warranty`,\n      `${data.warranty}|${data.warranty ? \"Warranty\" : \"No Warranty\"}`\n    )\n  );\n  dispatch(\n    change(\n      \"editTransactionForm\",\n      `warrantyMonths`,\n      `${data.warranty_month}|${data.warranty_month} bulan` ?? \"0\"\n    )\n  );\n  dispatch(\n    change(\"editTransactionForm\", `warrantyYears`, data.warranty_year ?? \"\")\n  );\n};\n\nexport const mapDailiesToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().detailService.selectedEditDailies;\n  dispatch(change(\"editDailiesForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `startDate`, moment(data.mulai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `endDate`, moment(data.selesai) ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDailiesForm\", `description`, data.deskripsi ?? \"\"));\n};\n\nexport const downloadTransactionPdf = async () => {\n  const { dispatch, getState } = store;\n  const jobId = getState().services.selectedJobService.id;\n  dispatch(ComponentActions.setGlobalLoading(true));\n\n  try {\n    const { data: dataTransactionPdf } = await Invoke.getTransactionPdfUrl(\n      jobId\n    );\n    const downloadUrl = dataTransactionPdf.callback.pdf.url.replace(\n      \"103.158.192.161:3000\",\n      \"\"\n    );\n    const { data } = await Invoke.downloadPdfFromUrl(downloadUrl);\n    dispatch(ComponentActions.setGlobalLoading(false));\n    fileDownload(data, `${dataTransactionPdf.callback.pdf.filename}.pdf`);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n    showToast(\"Gagal mengunduh report!\", \"error\");\n  }\n};\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { setRejectionsModal } from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\nimport * as DetailServiceActions from \"../../DetailServiceTransaction/Store/DetailServiceTransactionAction\";\n\nexport const SET_LIST_SERVICES = \"SET_LIST_SERVICES\";\nexport const SET_SELECTED_JOB_SERVICE = \"SET_SELECTED_JOB_SERVICE\";\nexport const SET_PAGING_LIST_SERVICE = \"SET_PAGING_LIST_SERVICE\";\nexport const SET_SELECTED_JOB_SERVICE_ID = \"SET_SELECTED_JOB_SERVICE_ID\";\nexport const SET_DASHBOARD_LIST_SERVICES = \"SET_DASHBOARD_LIST_SERVICES\";\n\nexport const setListServices = (payload) => {\n  return {\n    type: SET_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setDashboardListService = (payload) => {\n  return {\n    type: SET_DASHBOARD_LIST_SERVICES,\n    payload,\n  };\n};\n\nexport const setPagingListService = (payload) => {\n  return {\n    type: SET_PAGING_LIST_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobService = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE,\n    payload,\n  };\n};\n\nexport const setSelectedJobServiceId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_SERVICE_ID,\n    payload,\n  };\n};\n\nexport const getListServicesRequested = async (\n  page,\n  limit,\n  keyword = \"\",\n  type = \"\",\n  status = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListServices(\n      page,\n      limit,\n      keyword,\n      type,\n      status\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setListServices(data.callback.data));\n    store.dispatch(setPagingListService(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getTopTenService = async () => {\n  try {\n    const { data } = await Invoke.getListServices(1, 10, \"\", \"\", \"\");\n    store.dispatch(setDashboardListService(data.callback.data));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (page, limit, keyword, filterValues) => {\n  if (!filterValues) {\n    getListServicesRequested(page, limit, keyword);\n    return;\n  }\n\n  const splitTypeService = filterValues.typeService\n    ? filterValues.typeService.split(\"|\")\n    : \"\";\n  const splitStatusService = filterValues.statusService\n    ? filterValues.statusService.split(\"|\")\n    : \"\";\n\n  const typeService = filterValues.typeService ? splitTypeService[0] : \"\";\n  const statusService = filterValues.statusService ? splitStatusService[0] : \"\";\n\n  try {\n    await getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      typeService,\n      statusService\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst getDetailServicePerUnit = async (service) => {\n  console.log(\"=== service : \", service);\n\n  const { dispatch } = store;\n  // Hit media api and grouping by units :\n  let groupingChecklist = [];\n  if (service.units) {\n    await service.units.map(async (item, index) => {\n      const { data: dataChecklist } = await Invoke.getChecklistData(item.id);\n\n      console.log(\"=== dataChecklist : \", dataChecklist);\n      // Push to tempporary array\n      groupingChecklist.push({\n        unitName: item.unit_name,\n        checklist: dataChecklist.callback,\n      });\n    });\n\n    // Save to reducer\n    await dispatch(\n      DetailServiceActions.setGroupingChecklistData(groupingChecklist)\n    );\n  }\n};\n\nexport const handlePressEdit = async (values) => {\n  store.dispatch(setGlobalLoading(true));\n  try {\n    const { data } = await Invoke.getOneServices(values.id);\n    const dataService = { ...data.callback, units: values.unit_models };\n    await store.dispatch(setSelectedJobService(dataService));\n    // await getDetailServicePerUnit(dataService);\n    setTimeout(() => {\n      store.dispatch(setGlobalLoading(false));\n      navigate(\"detail-services\");\n    }, 1500);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteJobServiceProcess = async (jobId) => {\n  const { getState } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteJobServiceById(jobId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getListServicesRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const deleteJobServiceRequested = async (jobId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteJobServiceProcess(jobId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handlePressActionsRequested = async (jobId, type) => {\n  const { dispatch } = store;\n  type = type.toLowerCase();\n  let message;\n\n  switch (type) {\n    case \"approved\":\n      message = \"Apakah anda yakin ingin meng-approve data ini?\";\n      break;\n\n    case \"finished\":\n      message = \"Apakah anda yakin ingin mem-finishing data ini?\";\n      break;\n\n    case \"rejected\":\n      message = \"Apakah anda yakin ingin me me-reject data ini?\";\n      await dispatch(setRejectionsModal(true));\n      break;\n  }\n\n  if (type.toLowerCase() !== \"rejected\") {\n    const toastrConfirmOptions = {\n      onOk: () => {\n        doCallActionProcess(jobId, type);\n      },\n      okText: \"Ya\",\n      cancelText: \"Tidak\",\n    };\n\n    toastr.confirm(message, toastrConfirmOptions);\n  }\n};\n\nexport const doCallActionProcess = async (jobId, type) => {\n  const { getState, dispatch } = store;\n  const paging = getState().services.paging;\n  const { page, limit } = paging;\n  dispatch(setGlobalLoading(true));\n  try {\n    if (type === \"approved\") {\n      await Invoke.setApprovedService(jobId);\n    }\n    if (type === \"finished\") {\n      await Invoke.setFinishedService(jobId);\n    }\n    await getListServicesRequested(page, limit);\n    showToast(\"Data berhasil di approved\", \"success\");\n    setTimeout(() => {\n      navigate(\"/list_service\");\n      dispatch(setGlobalLoading(false));\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(setGlobalLoading(false));\n    console.log(\"error : \", error);\n  }\n};\n","import {\n  SET_LIST_SERVICES,\n  SET_SELECTED_JOB_SERVICE,\n  SET_PAGING_LIST_SERVICE,\n  SET_SELECTED_JOB_SERVICE_ID,\n  SET_DASHBOARD_LIST_SERVICES,\n} from \"./ListServicesActions\";\n\nexport const initialState = {\n  listServices: [],\n  dashboardListServices: [],\n  selectedJobService: {},\n  selectedJobServiceId: {},\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function listServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_SERVICES:\n      newState.listServices = action.payload;\n      return { ...newState };\n\n    case SET_DASHBOARD_LIST_SERVICES:\n      newState.dashboardListServices = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE:\n      newState.selectedJobService = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_SERVICE_ID:\n      newState.selectedJobServiceId = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_LIST_SERVICE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  PROCESS_GLOBAL_LOADING,\n  PROCESS_FORM_GLOBAL_LOADING,\n  RESET_ALL_LOADING,\n  SHOW_GLOBAL_MODAL,\n} from \"./ComponentAction\";\n\nexport const initialState = {\n  isLoadingGlobal: false,\n  isLoadingFormGlobal: false,\n  isModalVisible: false,\n};\n\nexport default function ComponentReducer(state = initialState, action) {\n  if (!action) {\n    return state;\n  }\n  const newState = Object.assign({}, state);\n\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case PROCESS_GLOBAL_LOADING:\n      newState.isLoadingGlobal = action.payload;\n      return { ...newState };\n    case PROCESS_FORM_GLOBAL_LOADING:\n      newState.isLoadingFormGlobal = action.payload;\n      return { ...newState };\n    case SHOW_GLOBAL_MODAL:\n      newState.isModalVisible = action.payload;\n      return { ...newState };\n    case RESET_ALL_LOADING:\n      newState.isLoadingGlobal = false;\n      newState.isLoadingFormGlobal = false;\n      return { ...newState };\n  }\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport { toastr } from \"react-redux-toastr\";\nimport { change } from \"redux-form\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_CUSTOMER_LIST_DATA = \"SET_CUSTOMER_LIST_DATA\";\nexport const SET_PAGING_CUSTOMER = \"SET_PAGING_CUSTOMER\";\nexport const SET_SELECTED_CUSTOMER_DATA = \"SET_SELECTED_CUSTOMER_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_CUSTOMER_ID = \"SET_SELECTED_CUSTOMER_ID\";\nexport const SET_CUSTOMER_LIST_DATA_DROPDOWN =\n  \"SET_CUSTOMER_LIST_DATA_DROPDOWN\";\n\nexport const setCustomerListData = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setCustomerListDataDropdown = (payload) => {\n  return {\n    type: SET_CUSTOMER_LIST_DATA_DROPDOWN,\n    payload,\n  };\n};\n\nexport const setPagingCustomer = (payload) => {\n  return {\n    type: SET_PAGING_CUSTOMER,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerData = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedCustomerId = (payload) => {\n  return {\n    type: SET_SELECTED_CUSTOMER_ID,\n    payload,\n  };\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editCustomerForm\", `id`, \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, \"\"));\n};\n\nexport const loadCustomerListData = async () => {\n  try {\n    const { data } = await Invoke.getCustomerList(1, 100);\n    store.dispatch(setCustomerListData(data.callback.data));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getCustomerListDataByPaging = async (\n  page,\n  limit,\n  keyword = \"\",\n  branchId = \"\",\n  isDropdownData = false\n) => {\n  try {\n    const { data } = await Invoke.getCustomerList(\n      page,\n      limit,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    if (isDropdownData) {\n      store.dispatch(setCustomerListDataDropdown(data.callback.data));\n    } else {\n      store.dispatch(setCustomerListData(data.callback.data));\n    }\n    store.dispatch(setPagingCustomer(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doDeleteCustomerProcess = async (customerId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteCustomerById(customerId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddCustomerProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n\n    await Invoke.addCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditBranchProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().customers.paging;\n  const { page, limit } = paging;\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n  const branchId = values.branch.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.username = values.username;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone ?? \"\";\n    payload.work_hour = values.workHour ?? \"\";\n    payload.pic = values.pic;\n    payload.pic_phone = values.picPhone;\n    payload.address = values.address;\n    await Invoke.updateCustomer(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getCustomerListDataByPaging(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveCustomerRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddCustomerProcess(values);\n      } else {\n        doEditBranchProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailCustomerToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().customers.selectedCustomerData;\n  const provinceId = data.province_id + \"|\" + data.province_name;\n  const cityId = data.city_id + \"|\" + data.city_name;\n  const branchId = data.branch_id + \"|\" + data.branch_name;\n\n  dispatch(change(\"editCustomerForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `username`, data.username ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `picPhone`, data.pic_phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `pic`, data.pic ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `workHour`, data.work_hour ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `province`, provinceId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `city`, cityId ?? \"\"));\n  dispatch(change(\"editCustomerForm\", `branch`, branchId ?? \"\"));\n};\n\nexport const deleteCustomerRequested = async (customerId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteCustomerProcess(customerId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_CUSTOMER_LIST_DATA,\n  SET_PAGING_CUSTOMER,\n  SET_FORM_STATUS,\n  SET_SELECTED_CUSTOMER_DATA,\n  SET_SELECTED_CUSTOMER_ID,\n  SET_CUSTOMER_LIST_DATA_DROPDOWN,\n} from \"./CustomersActions\";\n\nexport const initialState = {\n  listCustomers: [],\n  listCustomersDropdown: [],\n  formStatus: \"add\",\n  selectedCustomerData: {},\n  selectedCustomerId: \"\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function authReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_CUSTOMER_LIST_DATA:\n      newState.listCustomers = action.payload;\n      return { ...newState };\n\n    case SET_CUSTOMER_LIST_DATA_DROPDOWN:\n      newState.listCustomersDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_CUSTOMER:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_DATA:\n      newState.selectedCustomerData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_CUSTOMER_ID:\n      newState.selectedCustomerId = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_LIST_ADMIN,\n  SET_FORM_STATUS,\n  SET_PAGING_ADMIN,\n  SET_SELECTED_ADMIN_ID,\n  SET_SELECTED_ADMIN_DATA,\n} from \"./AdminActions\";\n\nexport const initialState = {\n  listAdmin: [],\n  selectedAdminId: \"\",\n  selectedAdminData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ADMIN:\n      newState.listAdmin = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_ID:\n      newState.selectedAdminId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ADMIN_DATA:\n      newState.selectedAdminData = action.payload;\n      return { ...newState };\n    case SET_PAGING_ADMIN:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_LIST_ROLES,\n  SET_SELECTED_ROLE_ID,\n  SET_SELECTED_ROLE_DETAIL,\n  SET_FORM_STATUS,\n  RESET_STATE,\n  SET_SELECTED_ROLE_MENU\n} from \"./RolesActions\";\n\nexport const initialState = {\n  listRoles: [],\n  selectedRoleId: \"\",\n  selectedRoleDetail: {},\n  selectedRoleMenu: [],\n  formStatus: \"add\",\n};\n\nexport default function rolesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_LIST_ROLES:\n      newState.listRoles = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_ID:\n      newState.selectedRoleId = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_DETAIL:\n      newState.selectedRoleDetail = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_MENU:\n      newState.selectedRoleMenu = action.payload;\n      return { ...newState };\n\n    case RESET_STATE:\n      newState.listRoles = [];\n      newState.selectedRoleId = \"\";\n      newState.selectedRoleDetail = {};\n      newState.formStatus = \"add\";\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_LIST_DATA = \"SET_EMPLOYEE_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_ID = \"SET_SELECTED_EMPLOYEE_ID\";\nexport const SET_SELECTED_EMPLOYEE_DATA = \"SET_SELECTED_EMPLOYEE_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEES = \"SET_PAGING_EMPLOYEES\";\n\nexport const setEmployeeListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedRoleEmployee = (payload) => {\n  return {\n    type: SET_SELECTED_ROLE_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployees = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEES,\n    payload,\n  };\n};\n\nexport const loadEmployeeListData = async (\n  page,\n  limit,\n  keyword = \"\",\n  roleId = \"\",\n  branchId = \"\",\n  divisionId = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeList(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setEmployeeListData(data.callback.data));\n    store.dispatch(setPagingEmployees(paging));\n    store.dispatch(setGlobalLoading(false));\n  } catch (error) {\n    store.dispatch(setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nexport const getEmployeeToolsRequested = (employeeId, page, limit) => {\n  try {\n    const { data } = Invoke.getEmployeeTools(employeeId, page, limit);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployees(paging));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getRolesByEmployeeId = async (employeeId) => {\n  const { data } = await Invoke.getEmployeeRoles(employeeId, 1, 100);\n  let subItem = [];\n  data.callback.data.map((item, index) => {\n    subItem.push(item.role_id);\n  });\n  store.dispatch(setSelectedRoleEmployee(subItem));\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeProcess = async (values, selectedRoles) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.nik = values.nik;\n    payload.password = values.password ?? \"\";\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n\n    await Invoke.addEmployee(payload);\n    // await doSaveEmployeeRole(selectedRoles, \"add\");\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    loadEmployeeListData(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employees\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeProcess = async (values, roleSelected) => {\n  const { dispatch } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const branchId = values.branch.split(\"|\");\n  const provinceId = values.province.split(\"|\");\n  const cityId = values.city.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.nik = values.nik;\n    payload.password = values.password;\n    payload.name = values.name;\n    payload.branch_id = branchId[0] ?? \"\";\n    payload.province_id = provinceId[0] ?? \"\";\n    payload.city_id = cityId[0] ?? \"\";\n    payload.phone = values.phone;\n    payload.address = values.address;\n    payload.photo = values.imageUrl ?? \"\";\n    // Save Employee - roles actions\n    if (values.selectedRoles.length > 0) {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-and-add\");\n    } else {\n      await doSaveEmployeeRole(values.selectedRoles, \"delete-all\");\n    }\n    // Save Employee data actions\n    await Invoke.updateEmployee(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    setTimeout(() => {\n      navigate(\"/employees\");\n    }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doAddEmployeeRoleProcess = async (newRoleId, employeeId) => {\n  const payload = {\n    employee_id: employeeId,\n    role_id: newRoleId,\n  };\n  await Invoke.addEmployeeRole(payload);\n};\n\nconst doDeleteAllEmployeeRoleProcess = async (roleListApi) => {\n  roleListApi.data.map(async (item, index) => {\n    await Invoke.deleteEmployeeRole(item.id);\n  });\n};\n\nconst doDeleteEmployeeProcess = async (employeeId) => {\n  const { getState } = store;\n  const paging = getState().employees.paging;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeById(employeeId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    loadEmployeeListData(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doSaveEmployeeRole = async (newRoleSelected, type) => {\n  const { getState } = store;\n  try {\n    const currentRoleSelected = getState().employees.selectedRoleEmployee;\n    const selectedEmployeeId = getState().employees.selectedEmployeeId;\n    const { data } = await Invoke.getEmployeeRoles(selectedEmployeeId, 1, 100);\n    const roleListApi = data.callback;\n\n    if (type === \"delete-all\") {\n      await currentRoleSelected.map(async (item, index) => {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n      });\n    } else if (type === \"add\") {\n      await newRoleSelected.map(async (item, index) => {\n        await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n      });\n    } else {\n      // Check if the user is has been have roles or not\n      if (currentRoleSelected.length > 0) {\n        await doDeleteAllEmployeeRoleProcess(roleListApi);\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      } else {\n        await newRoleSelected.map(async (item, index) => {\n          await doAddEmployeeRoleProcess(item, selectedEmployeeId);\n        });\n      }\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveEmployeeRequested = async (\n  formStatus,\n  values,\n  roleSelected\n) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeProcess(values, roleSelected);\n      } else {\n        doEditEmployeeProcess(values, roleSelected);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employees.selectedEmployeeData;\n  const branch = `${data.branch_id}|${data.branch_name}`;\n  const province = `${data.province_id}|${data.province_name}`;\n  const city = `${data.city_id}|${data.city_name}`;\n\n  dispatch(change(\"editEmployeeForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `nik`, data.nik ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, data.phone ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, data.address ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, branch ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, province ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, city ?? \"\"));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(MasterDataActions.setCityListData([]));\n  dispatch(change(\"editEmployeeForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `name`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `phone`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `address`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `branch`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `province`, \"\"));\n  dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n};\n\nexport const deleteEmployeeRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n\n  if (!values) {\n    await loadEmployeeListData(page, limit, keyword);\n    return;\n  }\n\n  const splitRole = values.role ? values.role.split(\"|\") : \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const splitDivision = values.division ? values.division.split(\"|\") : \"\";\n\n  const roleId = values.role ? splitRole[0] : \"\";\n  const branchId = values.branch ? splitBranch[0] : \"\";\n  const divisionId = values.division ? splitDivision[0] : \"\";\n\n  try {\n    await loadEmployeeListData(\n      page,\n      limit,\n      keyword,\n      roleId,\n      branchId,\n      divisionId\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_ID,\n  SET_SELECTED_EMPLOYEE_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_ROLE_EMPLOYEE,\n  SET_PAGING_EMPLOYEES,\n} from \"./EmployeesActions\";\n\nexport const initialState = {\n  listEmployees: [],\n  selectedEmployeeId: \"\",\n  selectedEmployeeData: {},\n  selectedRoleEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeesReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_LIST_DATA:\n      newState.listEmployees = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_ID:\n      newState.selectedEmployeeId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_DATA:\n      newState.selectedEmployeeData = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_ROLE_EMPLOYEE:\n      newState.selectedRoleEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEES:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { setGlobalLoading } from \"../../../App/Store/ComponentAction\";\nimport * as MasterDataActions from \"../../../MasterData/Store/MasterDataActions\";\nimport { showToast } from \"../../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { navigate } from \"../../../../app/Helpers\";\n\nexport const SET_EMPLOYEE_TOOL_LIST_DATA = \"SET_EMPLOYEE_TOOL_LIST_DATA\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_ID = \"SET_SELECTED_EMPLOYEE_TOOLS_ID\";\nexport const SET_SELECTED_EMPLOYEE_TOOLS_DATA =\n  \"SET_SELECTED_EMPLOYEE_TOOLS_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_ROLE_EMPLOYEE = \"SET_SELECTED_ROLE_EMPLOYEE\";\nexport const SET_PAGING_EMPLOYEE_TOOLS = \"SET_PAGING_EMPLOYEE_TOOLS\";\n\nexport const setEmployeeToolsListData = (payload) => {\n  return {\n    type: SET_EMPLOYEE_TOOL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedEmployeeToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setPagingEmployeeTools = (payload) => {\n  return {\n    type: SET_PAGING_EMPLOYEE_TOOLS,\n    payload,\n  };\n};\n\nexport const getEmployeeToolsRequested = async (\n  employeeId,\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getEmployeeTools(employeeId, page, limit);\n    console.log(\"=== data : \", data);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setPagingEmployeeTools(paging));\n    store.dispatch(setEmployeeToolsListData(data.callback.data));\n  } catch (error) {\n    console.log(\"error : \", error);\n  }\n};\n\nexport const getEmployeeDataByIdRequested = async (employeeId) => {\n  try {\n    const { data } = await Invoke.getEmployeeById(employeeId);\n    store.dispatch(setSelectedEmployeeToolsData(data.callback));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateEmployee = async () => {\n  const { getState, dispatch } = store;\n  const selectedEmployeeData = getState().employees.selectedEmployeeData;\n  const listBranch = getState().branch.listBranch;\n  const [defaultBranch] = listBranch.filter(\n    (x) => x.id === selectedEmployeeData.branch_id\n  );\n  await MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n\n  dispatch(change(\"editEmployeeForm\", \"id\", selectedEmployeeData.id ?? \"\"));\n  dispatch(change(\"editEmployeeForm\", \"name\", selectedEmployeeData.name ?? \"\"));\n  dispatch(\n    change(\"editEmployeeForm\", \"address\", selectedEmployeeData.address ?? \"\")\n  );\n  dispatch(\n    change(\"editEmployeeForm\", \"phone\", selectedEmployeeData.phone ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"branch\",\n      `${selectedEmployeeData.branch_id}|${defaultBranch.name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"province\",\n      selectedEmployeeData[\"province_name\"] ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editEmployeeForm\",\n      \"city\",\n      `${selectedEmployeeData.city_id}|${selectedEmployeeData.city_name}` ?? \"\"\n    )\n  );\n};\n\nconst doAddEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalModal(true));\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const slpitToolsId = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = employeeId;\n    payload.tool_id = slpitToolsId[0];\n\n    await Invoke.addEmployeeTools(payload);\n\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 500);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n  }\n};\n\nconst doEditEmployeeToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const employeeId = getState().employees.selectedEmployeeId;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const splitTools = values.tools.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.employee_id = employeeId;\n    payload.tool_id = splitTools[0];\n\n    // Save Employee data actions\n    await Invoke.updateEmployeeTools(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    setTimeout(() => {\n      navigate(\"/employee-tools\");\n    }, 1000);\n  } catch (error) {\n    dispatch(ComponentActions.setGlobalLoading(false));\n  }\n};\n\nconst doDeleteEmployeeToolsProcess = async (employeeToolsId) => {\n  const { getState } = store;\n  const paging = getState().employeeTools.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n  const { page, limit } = paging;\n\n  try {\n    await Invoke.deleteEmployeeToolsById(employeeToolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getEmployeeToolsRequested(employeeId, page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveEmployeeToolsRequested = async (formStatus, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (formStatus === \"add\") {\n        doAddEmployeeToolsProcess(values);\n      } else {\n        doEditEmployeeToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailEmployeeToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().employeeTools.selectedEmployeeToolsData;\n  // const splitTools = data;\n  const tools = `${data.tool_id}|${data.name}`;\n\n  dispatch(change(\"editEmployeeToolsForm\", `id`, data.id));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, tools));\n};\n\nexport const resetForm = () => {\n  const { dispatch } = store;\n  dispatch(change(\"editEmployeeToolsForm\", `id`, \"\"));\n  dispatch(change(\"editEmployeeToolsForm\", `tools`, \"\"));\n};\n\nexport const deleteEmployeeToolsRequested = async (employeeId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteEmployeeToolsProcess(employeeId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const handleSearch = async (keyword, values) => {\n  const { getState } = store;\n  const { page, limit } = getState().employees.paging;\n  const employeeId = getState().employees.selectedEmployeeId;\n\n  if (!values) {\n    getEmployeeToolsRequested(employeeId, page, limit, keyword);\n    return;\n  }\n\n  try {\n    await getEmployeeToolsRequested(employeeId, page, limit, keyword);\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_EMPLOYEE_TOOL_LIST_DATA,\n  SET_SELECTED_EMPLOYEE_TOOLS_ID,\n  SET_SELECTED_EMPLOYEE_TOOLS_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_EMPLOYEE_TOOLS,\n} from \"./EmployeeToolsActions\";\n\nexport const initialState = {\n  listEmployeeTools: [],\n  selectedEmployeeToolsId: \"\",\n  selectedEmployeeToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function employeeToolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_EMPLOYEE_TOOL_LIST_DATA:\n      newState.listEmployeeTools = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_ID:\n      newState.selectedEmployeeToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_EMPLOYEE_TOOLS_DATA:\n      newState.selectedEmployeeToolsData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_EMPLOYEE_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_PROVINCE_LIST_DATA,\n  SET_MENU_LIST_DATA,\n  SET_CITY_LIST_DATA\n} from \"./MasterDataActions\";\n\nexport const initialState = {\n  listProvince: [],\n  listCity: [],\n  listMenu: [],\n};\n\nexport default function masterDataReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_PROVINCE_LIST_DATA:\n      newState.listProvince = action.payload;\n      return { ...newState };\n    case SET_CITY_LIST_DATA:\n      newState.listCity = action.payload;\n      return { ...newState };\n    case SET_MENU_LIST_DATA:\n      newState.listMenu = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_ID,\n  SET_SELECTED_UNIT_DATA,\n  SET_PAGING_UNIT\n} from \"./UnitsActions\";\n\nexport const initialState = {\n  listUnits: [],\n  selectedUnitsId: \"\",\n  selectedUnitsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_LIST_DATA:\n      newState.listUnits = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_ID:\n      newState.selectedUnitsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_DATA:\n      newState.selectedUnitsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_JOB_FORMS_LIST_DATA = \"SET_JOB_FORMS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_JOB_FORMS_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_JOB_FORMS_DATA = \"SET_SELECTED_JOB_FORMS_DATA\";\nexport const SET_PAGING_JOB_FORM = \"SET_PAGING_JOB_FORM\";\n\nexport const setJobFormsListData = (payload) => {\n  return {\n    type: SET_JOB_FORMS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingJobForm = (payload) => {\n  return {\n    type: SET_PAGING_JOB_FORM,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsId = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedJobFormsData = (payload) => {\n  return {\n    type: SET_SELECTED_JOB_FORMS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteBranchProcess = async (jobFormsId) => {\n  try {\n    await Invoke.deleteJobForms(jobFormsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getJobFormsListDataRequested();\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.addJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditJobFormsProcess = async (values) => {\n  const { dispatch } = store;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description;\n    await Invoke.updateJobForms(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getJobFormsListDataRequested(1, 10);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editJobForms\", `id`, \"\"));\n  dispatch(change(\"editJobForms\", `name`, \"\"));\n  dispatch(change(\"editJobForms\", `description`, \"\"));\n};\n\nexport const mapDetailJobFormsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().jobForms.selectedJobFormsData;\n  dispatch(change(\"editJobForms\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editJobForms\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editJobForms\", `description`, data.description ?? \"\"));\n};\n\nexport const getJobFormsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getListJobForm(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setJobFormsListData(data.callback.data));\n    store.dispatch(setPagingJobForm(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveJobFormsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddJobFormsProcess(values);\n      } else {\n        doEditJobFormsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteJobFormsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteBranchProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_JOB_FORMS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_JOB_FORMS_ID,\n  SET_SELECTED_JOB_FORMS_DATA,\n  SET_PAGING_JOB_FORM,\n} from \"./JobFormsActions\";\n\nexport const initialState = {\n  listJobForms: [],\n  selectedJobFormsId: \"\",\n  selectedJobFormsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function jobFormsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_JOB_FORMS_LIST_DATA:\n      newState.listJobForms = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_ID:\n      newState.selectedJobFormsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_JOB_FORMS_DATA:\n      newState.selectedJobFormsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_JOB_FORM:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_BRANCH_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_BRANCH,\n  SET_SELECTED_BRANCH_ID,\n  SET_SELECTED_BRANCH_DATA,\n  SET_BRANCH_LIST_DATA_DROPDOWN\n} from \"./BranchActions\";\n\nexport const initialState = {\n  listBranch: [],\n  listBranchDropdown: [],\n  selectedBranchId: \"\",\n  selectedBranchData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n  keyword: \"\",\n};\n\nexport default function branchReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_BRANCH_LIST_DATA:\n      newState.listBranch = action.payload;\n      return { ...newState };\n\n    case SET_BRANCH_LIST_DATA_DROPDOWN:\n      newState.listBranchDropdown = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_ID:\n      newState.selectedBranchId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_BRANCH_DATA:\n      newState.selectedBranchData = action.payload;\n      return { ...newState };\n    case SET_PAGING_BRANCH:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA,\n  SET_SELECTED_SERVICES_SUMMARY_DATA,\n  SET_SELECTED_SERVICES_MEDIA_DATA,\n  SET_SELECTED_SERVICES_DAILIES_DATA,\n  SET_SELECTED_SERVICES_HISTORIES_DATA,\n  SET_SELECTED_SERVICES_CHECKLIST_DATA,\n  SET_SELECTED_SERVICES_REJECTED_DATA,\n  SET_REJECTIONS_MODAL,\n  SET_EDIT_TRANSACTION_MODAL,\n  SET_EDIT_DAILIES_MODAL,\n  SET_SELECTED_EDIT_DAILIES_DATA,\n  SET_SELECTED_UNIT,\n  RESET_DETAIL_SERVICE,\n  SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA,\n  SET_GROUPING_SUMMARY_DATA,\n  SET_GROUPING_CHECKLIST_DATA,\n} from \"./DetailServiceTransactionAction\";\n\nexport const initialState = {\n  selectedServiceEmployeeList: [],\n  selectedServiceSummary: {},\n  selectedServiceMedia: [],\n  groupingSelectedServiceMedia: [],\n  groupingSelectedServiceSummary: [],\n  groupingSelectedServiceChecklist: [],\n  selectedServiceDailies: [],\n  selectedServiceHistories: [],\n  selectedServiceChecklist: [],\n  selectedServiceRejected: [],\n  rejectionsModal: false,\n  editTransactionModal: false,\n  editDailiesModal: false,\n  selectedEditDailies: {},\n  selectedUnit: \"Seluruh Unit\",\n};\n\nexport default function detailServiceTransactionReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SELECTED_SERVICES_EMPLOYEE_LIST_DATA:\n      newState.selectedServiceEmployeeList = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_SUMMARY_DATA:\n      newState.selectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_MEDIA_DATA:\n      newState.selectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SELECTED_SERVICES_MEDIA_DATA:\n      newState.groupingSelectedServiceMedia = action.payload;\n      return { ...newState };\n    case SET_GROUPING_SUMMARY_DATA:\n      newState.groupingSelectedServiceSummary = action.payload;\n      return { ...newState };\n    case SET_GROUPING_CHECKLIST_DATA:\n      newState.groupingSelectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_DAILIES_DATA:\n      newState.selectedServiceDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_HISTORIES_DATA:\n      newState.selectedServiceHistories = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_CHECKLIST_DATA:\n      newState.selectedServiceChecklist = action.payload;\n      return { ...newState };\n    case SET_SELECTED_SERVICES_REJECTED_DATA:\n      newState.selectedServiceRejected = action.payload;\n      return { ...newState };\n    case SET_REJECTIONS_MODAL:\n      newState.rejectionsModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_TRANSACTION_MODAL:\n      newState.editTransactionModal = action.payload;\n      return { ...newState };\n    case SET_EDIT_DAILIES_MODAL:\n      newState.editDailiesModal = action.payload;\n      return { ...newState };\n    case SET_SELECTED_EDIT_DAILIES_DATA:\n      newState.selectedEditDailies = action.payload;\n      return { ...newState };\n    case SET_SELECTED_UNIT:\n      newState.selectedUnit = action.payload;\n      return { ...newState };\n    case RESET_DETAIL_SERVICE:\n      return initialState;\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_MODEL_LIST_DATA = \"SET_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_MODEL_ID = \"SET_SELECTED_UNIT_MODEL_ID\";\nexport const SET_SELECTED_UNIT_MODEL_DATA = \"SET_SELECTED_UNIT_MODEL_DATA\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\n\nexport const setUnitModelListData = (payload) => {\n  return {\n    type: SET_UNIT_MODEL_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitModelData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_MODEL_DATA,\n    payload,\n  };\n};\n\nexport const getUnitModelListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitModel(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitModelListData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitModelsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.addUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitModelsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = values.unitId;\n    payload.name = values.name;\n    payload.descriptions = values.description ?? \"None\";\n    payload.serial_number = values.serialNumber ?? \"\";\n    payload.machine_no = values.machineNo ?? \"\";\n    payload.engine_model = values.engineModel ?? \"\";\n    payload.engine_no = values.engineNo ?? \"\";\n    payload.chasis_no = values.chasisNo ?? \"\";\n    payload.transmission_no = values.transmissionNo ?? \"\";\n\n    await Invoke.updateUnitModel(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (unitModelId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitModelById(unitModelId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitModelListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitModelsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitModelsProcess(values);\n      } else {\n        doEditUnitModelsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitModelToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitModels.selectedUnitModelsData;\n\n  dispatch(change(\"editUnitModelForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, data.descriptions ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(change(\"editUnitModelForm\", `machineNo`, data.machine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, data.engine_model ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, data.engine_no ?? \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, data.chasis_no ?? \"\"));\n  dispatch(\n    change(\"editUnitModelForm\", `transmissionNo`, data.transmission_no ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitModelForm\", `id`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `name`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `description`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `machineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineModel`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `engineNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `chasisNo`, \"\"));\n  dispatch(change(\"editUnitModelForm\", `transmissionNo`, \"\"));\n};\n","import {\n  SET_UNIT_MODEL_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_MODEL_ID,\n  SET_SELECTED_UNIT_MODEL_DATA,\n  SET_PAGING_UNIT_MODEL\n} from \"./UnitModelActions\";\n\nexport const initialState = {\n  listUnitModels: [],\n  selectedUnitModelsId: \"\",\n  selectedUnitModelsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitModelReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_MODEL_LIST_DATA:\n      newState.listUnitModels = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_ID:\n      newState.selectedUnitModelsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_MODEL_DATA:\n      newState.selectedUnitModelsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_ENUM_UNIT_MODEL = \"SET_ENUM_UNIT_MODEL\";\n\nexport const setEnumUnintModel = (payload) => {\n  return {\n    type: SET_ENUM_UNIT_MODEL,\n    payload,\n  };\n};\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateUnitModel = async (unitId, fieldIndex) => {\n  const { dispatch } = store;\n  const { data } = await Invoke.getListUnitModel(1, 100, unitId, \"\");\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${fieldIndex}].enumUnitModel`,\n      data.callback.data ?? []\n    )\n  );\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"externalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(1, 200, employeeData.province_id);\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === employeeData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        citySelected.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        citySelected\n      )\n    );\n    // store.dispatch(\n    //   change(\"externalServiceForm\", \"employeeCityName\", detailEmployee.nik)\n    // );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"externalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"externalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"externalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"externalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"externalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const onChangeUnitModel = (val, index, enumUnit) => {\n  const { dispatch } = store;\n\n  const splitUnitModel = val.split(\"|\");\n\n  const [selectedUnitModel] = enumUnit.filter(\n    (x) => x.id === splitUnitModel[0]\n  );\n\n  dispatch(\n    change(\n      \"externalServiceForm\",\n      `units[${index}].unitModelSerialNumber`,\n      selectedUnitModel.serial_number ?? \"\"\n    )\n  );\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  const splitWarranty = values.warranty.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const unitList = [];\n  values.units.map((item, index) => {\n    const splitUnitModel = item.unitModelId.split(\"|\");\n    unitList.push({\n      unit_model_id: splitUnitModel[0],\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"true\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: splitWarranty[0],\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: unitList ?? [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              resolve();\n            }, 1000);\n            setTimeout(() => {\n              navigate(\"list_service\");\n            }, 1500);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import { SET_ENUM_UNIT_MODEL } from \"./ExternalServiceActions\";\n\nexport const initialState = {\n  enumUnitModel: [],\n};\n\nexport default function externalServiceReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_ENUM_UNIT_MODEL:\n      newState.enumUnitModel = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change, reset } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { message } from \"antd\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\n\nexport const SET_IDENTIFICATIONN_LIST_DATA = \"SET_IDENTIFICATIONN_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_IDENTIFICATION_ID = \"SET_SELECTED_IDENTIFICATION_ID\";\nexport const SET_PAGING_IDENTIFICATION = \"SET_PAGING_IDENTIFICATION\";\nexport const SET_SELECTED_IDENTIFICATION_DATA =\n  \"SET_SELECTED_IDENTIFICATION_DATA\";\n\nexport const setIdentificationListData = (payload) => {\n  return {\n    type: SET_IDENTIFICATIONN_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingIdentification = (payload) => {\n  return {\n    type: SET_PAGING_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationId = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedIdentificationData = (payload) => {\n  return {\n    type: SET_SELECTED_IDENTIFICATION_DATA,\n    payload,\n  };\n};\n\nexport const getIdentificationListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState, dispatch } = store;\n  try {\n    const branches = getState().branch.listBranch;\n    const { data } = await Invoke.getIdentificationList(page, limit, keyword);\n    const identificationList = data.callback.data;\n\n    const newIdentificationList = [];\n    if (identificationList.length > 0) {\n      identificationList.map((item, index) => {\n        const [defaultBranch] = branches.filter((x) => x.id === item.branch_id);\n        item.branch_name = defaultBranch ? defaultBranch.name : \"-\";\n\n        newIdentificationList.push(item);\n      });\n    }\n\n    dispatch(setIdentificationListData(newIdentificationList));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteIdentificationProcess = async (branchId) => {\n  const { getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteIdentificationById(branchId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddIdentificationProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const splitCustomer = values.customer.split(\"|\");\n    const splitBranch = values.branch.split(\"|\");\n    const splitLocation = values.location.split(\"|\");\n    const splitMilling = values.milling.split(\"|\");\n    const splitType = values.type.split(\"|\");\n\n    const payload = {};\n    payload.customer_id = splitCustomer[0];\n    payload.branch_id = splitBranch[0];\n    payload.location = splitLocation[0];\n    payload.type = splitType[0];\n    payload.status = SelectStatus[0].value;\n    payload.milling = splitMilling[0];\n\n    await Invoke.addIdentification(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationMilling = async (values, isLastStep) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = !values.instanceType\n      ? \"\"\n      : values.instanceType.split(\"|\");\n    const splitMillingStatus = !values.millingStatus\n      ? \"\"\n      : values.millingStatus.split(\"|\");\n    const splitCity = !values.city ? \"\" : values.city.split(\"|\") ?? [];\n    const splitProvince = !values.province\n      ? \"\"\n      : values.province.split(\"|\") ?? [];\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0],\n      instance_name: values.instanceName ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0] ?? \"\",\n      city: splitCity[1] ?? \"\",\n      province: splitProvince[1] ?? \"\",\n      phone: values.phone ?? \"\",\n      milling_capacity: values.millingCapacity ?? \"\",\n      milling_work_capacity_perday: values.millingWorkCapacityPerDay ?? \"\",\n      rice_trademark: values.riceTrademark ?? \"\",\n      history_service_place: values.history_service_place ?? \"\",\n      history_service_type: values.history_service_type ?? \"\",\n      notes: values.note ?? \"\",\n      engine_confs: engineConfs,\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    if (isLastStep) {\n      showToast(\"Menyimpan perubahan\", \"success\");\n      setTimeout(() => {\n        navigate(\"identification\");\n      }, 1000);\n    }\n    // return;\n    await Invoke.updateIdentificationMilling(payload);\n    // showToast(\"Pembaruan Berhasil Disimpan\", \"success\");\n    getIdentificationListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doUpdateIdentificationRegular = async (values, isFinished) => {\n  const { dispatch, getState } = store;\n  const paging = getState().identification.paging;\n  const { page, limit } = paging;\n  try {\n    if (!values || values === undefined) {\n      // showToast(\"Harap lengkapi form untuk melanjutkan\", \"error\");\n      return;\n    }\n\n    console.log(\"=== values : \", values);\n\n    const identificationId = getState().identification.selectedIdentificationId;\n    const splitInstanceType = values?.instanceType.split(\"|\");\n    const splitMillingStatus = values.millingStatus\n      ? values?.millingStatus.split(\"|\")\n      : [\"\"];\n    const splitCity = values?.city.split(\"|\");\n    const splitProvince = values?.province.split(\"|\");\n\n    const engineConfs = [];\n    if (values.engine_confs && values.engine_confs.length > 0) {\n      values.engine_confs.map((item, index) => {\n        const subItem = item.list;\n        subItem.engine_conf_id = item.id;\n        engineConfs.push(subItem);\n      });\n    }\n\n    const payload = {\n      identification_id: identificationId,\n      instance_type: splitInstanceType[0] ?? \"\",\n      instance_name: values.instanceName ?? \"\",\n      instance_address: values.instanceAddress ?? \"\",\n      name: values.customerName ?? \"\",\n      ktp_npwp: values.ktp_npwp ?? \"\",\n      status: splitMillingStatus[0],\n      address_district: \"\",\n      address_city: splitCity[1] ?? \"\",\n      address_province: splitProvince[1] ?? \"\",\n      address_subdistrict: values.kelurahan ?? \"\",\n      address_postal_code: values.postalCode ?? \"\",\n      phone: values.instancePhoneNumber ?? \"\",\n      product_name: values.productName,\n      buy_date: \"2021-09-22\",\n      assistance_date: \"2021-09-25\",\n      serial_number: \"SN1231\",\n      machine_number: \"MCN1231\",\n      gearbox_number: \"GB1231\",\n      production_unit_year: \"2021\",\n      work_hour_per_day: \"8 Hours\",\n      hour_meter: 1233,\n      history_service_place: \"Fee Text\",\n      history_service_type: \"Fee Text\",\n      notes: \"Test Regular Identification\",\n      spare_part_needs: values.spare_part_needs ?? [],\n      spare_part_changing_histories: values.spare_part_changing_histories ?? [],\n      spare_part_selling_histories: values.spare_part_selling_histories ?? [],\n    };\n\n    // return;\n    await Invoke.updateIdentificationRegular(payload);\n    if (isFinished) {\n      showToast(\"Data berhasil disimpan\", \"success\");\n      getIdentificationListRequested(page, limit);\n      navigate(\"/identification\");\n    }\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n// === END INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(reset(\"editIdentificationhForm\"));\n};\n\nexport const mapDetailBranchToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().identification.setSelectedIdentificationData;\n  dispatch(change(\"editIdentificationForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editIdentificationForm\", `description`, data.name ?? \"\"));\n};\n\nexport const saveIdentificationRequested = async (\n  type,\n  values,\n  isLastStep = false\n) => {\n  const { getState } = store;\n  const isMilling =\n    getState().identification.selectedIdentificationData.milling;\n\n  if (type === \"add\") {\n    doAddIdentificationProcess(values);\n  } else {\n    if (isMilling) {\n      doUpdateIdentificationMilling(values, isLastStep);\n    } else {\n      doUpdateIdentificationRegular(values, isLastStep);\n    }\n  }\n};\n\nexport const deleteIdentificationRequested = async (identificationId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteIdentificationProcess(identificationId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_IDENTIFICATIONN_LIST_DATA,\n  SET_SELECTED_IDENTIFICATION_DATA,\n  SET_SELECTED_IDENTIFICATION_ID,\n  SET_FORM_STATUS,\n  SET_PAGING_IDENTIFICATION\n} from \"./IdentificationActions\";\n\nexport const initialState = {\n  listIdentification: [],\n  selectedIdentificationId: \"\",\n  selectedIdentificationData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function identificationReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_IDENTIFICATIONN_LIST_DATA:\n      newState.listIdentification = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_ID:\n      newState.selectedIdentificationId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_IDENTIFICATION_DATA:\n      newState.selectedIdentificationData = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_IDENTIFICATION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import {\n  SET_MACHINE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_MACHINE_ID,\n  SET_SELECTED_MACHINE_DATA,\n  SET_PAGING_MACHINE_CONF,\n} from \"./MachineConfigurationActions\";\n\nexport const initialState = {\n  listMachine: [],\n  selectedMachineId: \"\",\n  selectedMachineData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function machineConfigurationReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MACHINE_LIST_DATA:\n      newState.listMachine = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_ID:\n      newState.selectedMachineId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_MACHINE_DATA:\n      newState.selectedMachineData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MACHINE_CONF:\n      newState.paging = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_TOOLS_LIST_DATA = \"SET_TOOLS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_TOOLS_ID = \"SET_SELECTED_TOOLS_ID\";\nexport const SET_SELECTED_TOOLS_DATA = \"SET_SELECTED_TOOLS_DATA\";\nexport const SET_PAGING_TOOLS = \"SET_PAGING_TOOLS\";\n\nexport const setToolsListData = (payload) => {\n  return {\n    type: SET_TOOLS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingTools = (payload) => {\n  return {\n    type: SET_PAGING_TOOLS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedToolsId = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedToolsData = (payload) => {\n  return {\n    type: SET_SELECTED_TOOLS_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteToolsProcess = async (toolsId) => {\n  const { getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteTool(toolsId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getToolsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.addTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditToolsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().tools.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"None\";\n    await Invoke.updateTool(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getToolsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editToolsForm\", `id`, \"\"));\n  dispatch(change(\"editToolsForm\", `name`, \"\"));\n  dispatch(change(\"editToolsForm\", `description`, \"\"));\n};\n\nexport const mapDetailToolsToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().tools.selectedToolsData;\n  dispatch(change(\"editToolsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editToolsForm\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editToolsForm\", `description`, data.description ?? \"\"));\n};\n\nexport const getToolsListDataRequested = async (page, limit, keyword = \"\") => {\n  try {\n    const { data } = await Invoke.getListTools(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setToolsListData(data.callback.data));\n    store.dispatch(setPagingTools(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveToolsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddToolsProcess(values);\n      } else {\n        doEditToolsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteToolsRequested = async (branchId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteToolsProcess(branchId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_TOOLS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_TOOLS_ID,\n  SET_SELECTED_TOOLS_DATA,\n  SET_PAGING_TOOLS,\n} from \"./ToolsActions\";\n\nexport const initialState = {\n  listTools: [],\n  selectedToolsId: \"\",\n  selectedToolsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function toolsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_TOOLS_LIST_DATA:\n      newState.listTools = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_ID:\n      newState.selectedToolsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_TOOLS_DATA:\n      newState.selectedToolsData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_TOOLS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_FORM_CATEGORY_LIST_DATA = \"SET_FORM_CATEGORY_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_FORM_CATEGORY_ID = \"SET_SELECTED_BRANCH_ID\";\nexport const SET_SELECTED_FORM_CATEGORY_DATA = \"SET_SELECTED_BRANCH_DATA\";\nexport const SET_PAGING_FORM_CATEGORY = \"SET_PAGING_FORM_CATEGORY\";\n\nexport const setFormCategoryListData = (payload) => {\n  return {\n    type: SET_FORM_CATEGORY_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingFormCategory = (payload) => {\n  return {\n    type: SET_PAGING_FORM_CATEGORY,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryId = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_ID,\n    payload,\n  };\n};\n\nexport const setSelectedFormCategoryData = (payload) => {\n  return {\n    type: SET_SELECTED_FORM_CATEGORY_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteFormCategoryProcess = async (categoryFormId) => {\n  const { getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteFormCategory(categoryFormId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.name = values.name;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditFormCategoryProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().branch.paging;\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.name = values.name;\n    payload.description = values.description ?? \"Nones\";\n    await Invoke.updateFormCategory(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getFormCatgeoryListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editFormCategory\", `id`, \"\"));\n  dispatch(change(\"editFormCategory\", `name`, \"\"));\n  dispatch(change(\"editFormCategory\", `description`, \"\"));\n};\n\nexport const mapDetailCategoryToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().formCategory.selectedFormCategoryData;\n  dispatch(change(\"editFormCategory\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editFormCategory\", `name`, data.name ?? \"\"));\n  dispatch(change(\"editFormCategory\", `description`, data.description ?? \"\"));\n};\n\nexport const getFormCatgeoryListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getFormCategory(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setFormCategoryListData(data.callback.data));\n    store.dispatch(setPagingFormCategory(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveFormCategoryRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddFormCategoryProcess(values);\n      } else {\n        doEditFormCategoryProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteFormCategoryRequested = async (formCategoryId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteFormCategoryProcess(formCategoryId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_FORM_CATEGORY_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_FORM_CATEGORY_ID,\n  SET_SELECTED_FORM_CATEGORY_DATA,\n  SET_PAGING_FORM_CATEGORY\n} from \"./FormCategoryActions\";\n\nexport const initialState = {\n  listFormCategory: [],\n  selectedFormCategoryId: \"\",\n  selectedFormCategoryData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function formCategoryReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_FORM_CATEGORY_LIST_DATA:\n      newState.listFormCategory = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_ID:\n      newState.selectedFormCategoryId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_FORM_CATEGORY_DATA:\n      newState.selectedFormCategoryData = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_FORM_CATEGORY:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_UNIT_FIELDS_LIST_DATA = \"SET_UNIT_FIELDS_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_UNIT_FIELDS_ID = \"SET_SELECTED_UNIT_FIELDS_ID\";\nexport const SET_SELECTED_UNIT_FIELDS_DATA = \"SET_SELECTED_UNIT_FIELDS_DATA\";\nexport const SET_PAGING_UNIT_FIELDS = \"SET_PAGING_UNIT_FIELDS\";\n\nexport const setUnitFieldsListData = (payload) => {\n  return {\n    type: SET_UNIT_FIELDS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitFields = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_FIELDS,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitFieldsData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_FIELDS_DATA,\n    payload,\n  };\n};\n\nexport const getUnitFieldsListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const unitId = getState().units.selectedUnitsId;\n  try {\n    const { data } = await Invoke.getListUnitFields(\n      page,\n      limit,\n      unitId,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitFieldsListData(data.callback.data));\n    store.dispatch(setPagingUnitFields(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddUnitFieldsProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.addUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitFieldsProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitFields.paging;\n  const unitId = getState().units.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitFieldsListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitFieldsRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitFieldsProcess(values);\n      } else {\n        doEditUnitFieldsProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_UNIT_FIELDS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_FIELDS_ID,\n  SET_SELECTED_UNIT_FIELDS_DATA,\n  SET_PAGING_UNIT_FIELDS,\n} from \"./UnitFieldsActions\";\n\nexport const initialState = {\n  listUnitFields: [],\n  selectedUnitFieldsId: \"\",\n  selectedUnitFieldsData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitFieldsReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_FIELDS_LIST_DATA:\n      newState.listUnitFields = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_ID:\n      newState.selectedUnitFieldsId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_FIELDS_DATA:\n      newState.selectedUnitFieldsData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_FIELDS:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_MONITORING_EMPLOYEE_LIST_DATA =\n  \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setMonitoringEmployeeListData = (payload) => {\n  return {\n    type: SET_MONITORING_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getMonitoringEmployeeListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().monitoringEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportMonitoringEmployee(\n      page,\n      limit,\n      from,\n      until,\n      type,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListMonitoringEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newListMonitoringEmployee.push({\n            created_date: item.date,\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(\n      setMonitoringEmployeeListData(newListMonitoringEmployee ?? [])\n    );\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n\n  if (!values) {\n    await getMonitoringEmployeeListDataRequested(page, limit);\n    return;\n  }\n  const splitType = values.type ? values.type.split(\"|\") : \"\";\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const type = values.type ? splitType[0] : \"all\";\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_MONITORING_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./MonitoringEmployeeActions\";\n\nexport const initialState = {\n  listMonitoringEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function monitoringEmployeeReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_MONITORING_EMPLOYEE_LIST_DATA:\n      newState.listMonitoringEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_SERVICE_REPAIR_LIST_DATA = \"SET_MONITORING_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_SERVICE_REPAIR = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setServiceRepairListData = (payload) => {\n  return {\n    type: SET_SERVICE_REPAIR_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingServiceRepair = (payload) => {\n  return {\n    type: SET_PAGING_SERVICE_REPAIR,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getServiceRepairListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().serviceRepair.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportServiceRepair(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListServiceRepair = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        newListServiceRepair.push({\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setServiceRepairListData(newListServiceRepair ?? []));\n    store.dispatch(setPagingServiceRepair(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().serviceRepair.paging;\n\n  if (!values) {\n    await getServiceRepairListDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_SERVICE_REPAIR_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_SERVICE_REPAIR,\n} from \"./ReportServiceRepairActions\";\n\nexport const initialState = {\n  listServiceRepair: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportServiceRepairReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_SERVICE_REPAIR_LIST_DATA:\n      newState.listServiceRepair = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_SERVICE_REPAIR:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_EMPLOYEE_LIST_DATA = \"SET_REPORT_EMPLOYEE_LIST_DATA\";\nexport const SET_PAGING_REPORT_EMPLOYEE = \"SET_PAGING_REPORT_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportEmployeeListData = (payload) => {\n  return {\n    type: SET_REPORT_EMPLOYEE_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportEmployee = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.callback.length > 0) {\n      data.callback.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportEmployeeListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee.paging;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","/* eslint-disable default-case */\nimport {\n  SET_REPORT_EMPLOYEE_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_REPORT_EMPLOYEE,\n} from \"./ReportEmployeeActions\";\n\nexport const initialState = {\n  listReportEmployee: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function reportEmployeeReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  switch (action.type) {\n    case SET_REPORT_EMPLOYEE_LIST_DATA:\n      newState.listReportEmployee = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_REPORT_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_LIST_DATA = \"SET_DIVISION_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_ID = \"SET_SELECTED_DIVISION_ID\";\nexport const SET_SELECTED_DIVISION_DATA = \"SET_SELECTED_DIVISION_DATA\";\nexport const SET_PAGING_DIVISION = \"SET_PAGING_DIVISION\";\n\nexport const setDivisionListData = (payload) => {\n  return {\n    type: SET_DIVISION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivision = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_DATA,\n    payload,\n  };\n};\n\n// === INTERNAL FUNCTION ===\nconst doDeleteDivisionProcess = async (divisionId) => {\n  const { getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteDivision(divisionId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionListDataRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nconst doAddDivisionProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.employee_id = headDivision[0];\n    payload.title = values.title;\n    payload.description = values.description ?? \"none\";\n    await Invoke.addDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().division.paging;\n  const { page, limit } = paging;\n  const headDivision = values.headDivision.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.title = values.title;\n    payload.employee_id = headDivision[0];\n    payload.description = values.description ?? \"none\";\n    await Invoke.updateDivision(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionListDataRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n// === INTERNAL FUNCTION ===\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editDivisionForm\", `id`, \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, \"\"));\n  dispatch(change(\"editDivisionForm\", `headDivision`, \"\"));\n};\n\nexport const mapDetailDivisionToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().division.selectedDivisionData;\n\n  dispatch(change(\"editDivisionForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `title`, data.title ?? \"\"));\n  dispatch(change(\"editDivisionForm\", `description`, data.description ?? \"\"));\n  dispatch(\n    change(\n      \"editDivisionForm\",\n      `headDivision`,\n      `${data.employee_id}|${data.employee_name}`\n    )\n  );\n};\n\nexport const getDivisionListDataRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  try {\n    const { data } = await Invoke.getDivisionList(page, limit, keyword);\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionListData(data.callback.data));\n    store.dispatch(setPagingDivision(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const saveDivisionRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionProcess(values);\n      } else {\n        doEditDivisionProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteDivisionRequested = async (divisionId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteDivisionProcess(divisionId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n","import {\n  SET_DIVISION_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_ID,\n  SET_SELECTED_DIVISION_DATA,\n  SET_PAGING_DIVISION\n} from \"./DivisionActions\";\n\nexport const initialState = {\n  listDivision: [],\n  selectedDivisionId: \"\",\n  selectedDivisionData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_LIST_DATA:\n      newState.listDivision = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_ID:\n      newState.selectedDivisionId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_DATA:\n      newState.selectedDivisionData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\n\nexport const SET_DIVISION_UNIT_LIST_DATA = \"SET_DIVISION_UNIT_LIST_DATA\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_SELECTED_DIVISION_UNIT_ID = \"SET_SELECTED_DIVISION_UNIT_ID\";\nexport const SET_SELECTED_DIVISION_UNIT_DATA =\n  \"SET_SELECTED_DIVISION_UNIT_DATA\";\nexport const SET_PAGING_DIVISION_UNIT = \"SET_PAGING_DIVISION_UNIT\";\n\nexport const setDivisionUnitListData = (payload) => {\n  return {\n    type: SET_DIVISION_UNIT_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingDivisionUnit = (payload) => {\n  return {\n    type: SET_PAGING_DIVISION_UNIT,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedDivisonUnitId = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_ID,\n    payload,\n  };\n};\n\nexport const setSelectedDivisionUnitData = (payload) => {\n  return {\n    type: SET_SELECTED_DIVISION_UNIT_DATA,\n    payload,\n  };\n};\n\nexport const getDivisionUnitListRequested = async (\n  page,\n  limit,\n  keyword = \"\"\n) => {\n  const { getState } = store;\n  const divisionId = getState().division.selectedDivisionId;\n  try {\n    const { data } = await Invoke.getDivisionUnitList(\n      divisionId,\n      page,\n      limit,\n      keyword\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setDivisionUnitListData(data.callback.data));\n    store.dispatch(setPagingDivisionUnit(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst doAddDivisionUnitProcess = async (values) => {\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const divisionId = getState().division.selectedDivisionId;\n  const { page, limit } = paging;\n  const splitUnitId = values.unit.split(\"|\");\n\n  try {\n    const payload = {};\n    payload.unit_id = splitUnitId[0];\n    payload.division_id = divisionId;\n\n    await Invoke.addDivisionUnit(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditDivisionUnitProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().divisionUnit.paging;\n  const unitId = getState().division.selectedUnitsId;\n  const { page, limit } = paging;\n  const splitCategoryFormId = values.formCategory.split(\"|\");\n  const splitjobFormId = values.jobForm.split(\"|\");\n  try {\n    const payload = {};\n    payload.id = values.id;\n    payload.unit_id = unitId;\n    payload.name = values.fieldName;\n    payload.descriptions = values.description ?? \"None\";\n    payload.category_form_id = splitCategoryFormId[0] ?? \"\";\n    payload.job_form_id = splitjobFormId[0] ?? \"\";\n\n    await Invoke.updateUnitFields(payload);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitFieldsProcess = async (unitFieldId) => {\n  const { getState } = store;\n  const paging = getState().unitFields.paging;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitFieldsById(unitFieldId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getDivisionUnitListRequested(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveDivisionUnitRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddDivisionUnitProcess(values);\n      } else {\n        doEditDivisionUnitProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitFieldRequested = async (unitFieldId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitFieldsProcess(unitFieldId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitFieldToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitFields.selectedUnitFieldsData;\n\n  dispatch(change(\"editUnitFieldsForm\", `id`, data.id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, data.unit_id ?? \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, data.name ?? \"\"));\n  dispatch(\n    change(\"editUnitFieldsForm\", `description`, data.descriptions ?? \"\")\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `jobForm`,\n      `${data.job_form_id}|${data.job_form_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\n      \"editUnitFieldsForm\",\n      `formCategory`,\n      `${data.category_form_id}|${data.category_form_name}` ?? \"\"\n    )\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitFieldsForm\", `id`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `unitId`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `fieldName`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `description`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `jobForm`, \"\"));\n  dispatch(change(\"editUnitFieldsForm\", `formCategory`, \"\"));\n};\n","import {\n  SET_DIVISION_UNIT_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_DIVISION_UNIT_ID,\n  SET_SELECTED_DIVISION_UNIT_DATA,\n  SET_PAGING_DIVISION_UNIT,\n} from \"./DivisionUnitActions\";\n\nexport const initialState = {\n  listDivisionUnit: [],\n  selectedDivisionUnitId: \"\",\n  selectedDivisionUnitData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function divisionUnitReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DIVISION_UNIT_LIST_DATA:\n      newState.listDivisionUnit = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_ID:\n      newState.selectedDivisionUnitId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_DIVISION_UNIT_DATA:\n      newState.selectedDivisionUnitData = action.payload;\n      return { ...newState };\n    case SET_PAGING_DIVISION_UNIT:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nexport const SET_DASHBOARD_DATA = \"SET_DASHBOARD_DATA\";\n\nexport const setDashboardData = (payload) => {\n  return {\n    type: SET_DASHBOARD_DATA,\n    payload,\n  };\n};\n\nexport const getDashboardProgressData = async () => {\n  try {\n    const { dispatch } = store;\n    const { data } = await Invoke.getDashboardProgressData();\n    dispatch(setDashboardData(data.callback));\n  } catch (e) {\n    console.log(\"error : \", e);\n  }\n};\n","import { SET_DASHBOARD_DATA } from \"./DashboardActions\";\n\nexport const initialState = {\n  dashboardData: {},\n};\n\nexport default function dashboardReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_DASHBOARD_DATA:\n      newState.dashboardData = action.payload;\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { toastr } from \"react-redux-toastr\";\nimport { showToast } from \"../../Roles/Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\n\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\nexport const SET_UNIT_SERIAL_NUMBER_DATA = \"SET_UNIT_SERIAL_NUMBER_DATA\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_ID =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_ID\";\nexport const SET_PAGING_UNIT_MODEL = \"SET_PAGING_UNIT_MODEL\";\nexport const SET_SELECTED_UNIT_SERIAL_NUMBER_DATA =\n  \"SET_SELECTED_UNIT_SERIAL_NUMBER_DATA\";\n\nexport const setUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const setPagingUnitModel = (payload) => {\n  return {\n    type: SET_PAGING_UNIT_MODEL,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberId = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n    payload,\n  };\n};\n\nexport const setSelectedUnitSerialNumberData = (payload) => {\n  return {\n    type: SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n    payload,\n  };\n};\n\nexport const handleSearch = (val, keyword) => {\n  const { getState, dispatch } = store;\n  const { page, limit } = getState().unitSerialNumber.paging;\n  try {\n    if (!val) {\n      toast.warning(\n        \"Wajib memilih customer untuk menampilkan data serial number\",\n        {\n          position: \"top-right\",\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n        }\n      );\n      dispatch(setUnitSerialNumberData([]));\n      return;\n    }\n    const splitCustomerId = val.customer.split(\"|\");\n    getUnitSerialNumber(page, limit, keyword, splitCustomerId[0]);\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const getUnitSerialNumber = async (\n  page,\n  limit,\n  keyword = \"\",\n  customerId\n) => {\n  // If customerId is null or undefined return this\n  if (!customerId) {\n    store.dispatch(setUnitSerialNumberData([]));\n    return;\n  }\n\n  const { getState } = store;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  try {\n    const { data } = await Invoke.getUnitSerialNumber(\n      page,\n      limit,\n      keyword,\n      unitModelId,\n      customerId\n    );\n    const paging = {};\n    paging.page = data.callback.page;\n    paging.limit = data.callback.limit;\n    paging.totalPage = data.callback.totalPage;\n    store.dispatch(setUnitSerialNumberData(data.callback.data));\n    store.dispatch(setPagingUnitModel(paging));\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    await store.dispatch(ComponentActions.setGlobalLoading(false));\n    console.log(error);\n  }\n};\n\nconst doAddUnitSerialNumberProcess = async (values) => {\n  const { dispatch, getState } = store;\n  dispatch(ComponentActions.setGlobalLoading(true));\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const customerId = values.customer.split(\"|\");\n  const { page, limit } = paging;\n  try {\n    const payload = {};\n    payload.customer_id = customerId[0];\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.description ?? \"None\";\n\n    await Invoke.addUnitSerialNumber(payload, unitModelId);\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    dispatch(ComponentActions.setGlobalModal(false));\n    dispatch(ComponentActions.setGlobalLoading(false));\n\n    console.log(\"error : \", error);\n  }\n};\n\nconst doEditUnitSerialNumberProcess = async (values) => {\n  store.dispatch(ComponentActions.setGlobalLoading(true));\n  const { dispatch, getState } = store;\n  const paging = getState().unitModels.paging;\n  const { page, limit } = paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const unitSerialNumberId =\n    getState().unitSerialNumber.selectedUnitSerialNumberId;\n\n  try {\n    const payload = {};\n    payload.serial_number = values.serialNumber;\n    payload.descriptions = values.descriptions ?? \"None\";\n\n    await Invoke.updateUnitSerialNumber(\n      payload,\n      unitModelId,\n      unitSerialNumberId\n    );\n    showToast(\"Data Berhasil Disimpan\", \"success\");\n    getUnitSerialNumber(page, limit);\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    store.dispatch(ComponentActions.setGlobalLoading(false));\n    dispatch(ComponentActions.setGlobalModal(false));\n    console.log(\"error : \", error);\n  }\n};\n\nconst doDeleteUnitModelsProcess = async (serialNumberId) => {\n  const { getState } = store;\n  const paging = getState().unitModels.paging;\n  const unitModelId = getState().unitModels.selectedUnitModelsId;\n  const { page, limit } = paging;\n  try {\n    await Invoke.deleteUnitSerialNumber(unitModelId, serialNumberId);\n    showToast(\"Data berhasil dihapus\", \"success\");\n    getUnitSerialNumber(page, limit);\n  } catch (error) {\n    showToast(\"Internal Server Error!\", \"error\");\n    console.log(\"error : \", error);\n  }\n};\n\nexport const saveUnitSerialNumberRequested = async (type, values) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      if (type === \"add\") {\n        doAddUnitSerialNumberProcess(values);\n      } else {\n        doEditUnitSerialNumberProcess(values);\n      }\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menyimpan Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const deleteUnitModelRequested = async (unitModelId) => {\n  const toastrConfirmOptions = {\n    onOk: () => {\n      doDeleteUnitModelsProcess(unitModelId);\n    },\n    okText: \"Ya\",\n    cancelText: \"Tidak\",\n  };\n\n  toastr.confirm(\n    \"Apakah Anda Yakin Ingin Menghapus Data Ini?\",\n    toastrConfirmOptions\n  );\n};\n\nexport const mapDetailUnitSerialNumberToForm = async () => {\n  const { dispatch, getState } = store;\n  const data = getState().unitSerialNumber.selectedUnitSerialNumberData;\n\n  dispatch(\n    change(\n      \"editUnitSerialNumberForm\",\n      `customer`,\n      `${data.customer_id}|${data.customer_name}` ?? \"\"\n    )\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `serialNumber`, data.serial_number ?? \"\")\n  );\n  dispatch(\n    change(\"editUnitSerialNumberForm\", `description`, data.descriptions ?? \"\")\n  );\n};\n\nexport const resetForm = async () => {\n  const { dispatch } = store;\n  dispatch(change(\"editUnitSerialNumberForm\", `customer`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `serialNumber`, \"\"));\n  dispatch(change(\"editUnitSerialNumberForm\", `description`, \"\"));\n};\n","import {\n  SET_UNIT_SERIAL_NUMBER_DATA,\n  SET_FORM_STATUS,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_ID,\n  SET_SELECTED_UNIT_SERIAL_NUMBER_DATA,\n  SET_PAGING_UNIT_MODEL,\n} from \"./UnitSerialNumberActions\";\n\nexport const initialState = {\n  listUnitSerialNumber: [],\n  selectedUnitSerialNumberId: \"\",\n  selectedUnitSerialNumberData: {},\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 10,\n    totalPage: 0,\n  },\n};\n\nexport default function unitSerialNumberReducer(state = initialState, action) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_UNIT_SERIAL_NUMBER_DATA:\n      newState.listUnitSerialNumber = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_ID:\n      newState.selectedUnitSerialNumberId = action.payload;\n      return { ...newState };\n\n    case SET_SELECTED_UNIT_SERIAL_NUMBER_DATA:\n      newState.selectedUnitSerialNumberData = action.payload;\n      return { ...newState };\n    case SET_PAGING_UNIT_MODEL:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { change } from \"redux-form\";\r\nimport Invoke from \"../../../app/axios/Invoke\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport { toastr } from \"react-redux-toastr\";\r\nimport { showToast } from \"../../Roles/Store/RolesActions\";\r\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\r\n\r\nexport const SET_UNIT_JOB_FORMS_LIST_DATA = \"SET_UNIT_JOB_FORMS_LIST_DATA\";\r\nexport const SET_PAGING_UNIT_JOB_FORMS = \"SET_PAGING_UNIT_JOB_FORMS\";\r\n\r\nexport const setUnitJobFormsListData = (payload) => {\r\n  return {\r\n    type: SET_UNIT_JOB_FORMS_LIST_DATA,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setPagingUnitJobForms = (payload) => {\r\n  return {\r\n    type: SET_PAGING_UNIT_JOB_FORMS,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getUnitJobFormsListDataRequested = async (jobFormId = \"\") => {\r\n  const { getState } = store;\r\n  const unitId = getState().units.selectedUnitsId;\r\n  try {\r\n    // Get data unit jobforms from API\r\n    const { data } = await Invoke.getListUnitJobForms(unitId, jobFormId);\r\n\r\n    // Store data to reducer\r\n    store.dispatch(setUnitJobFormsListData(data.callback));\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import {\r\n  SET_UNIT_JOB_FORMS_LIST_DATA,\r\n  SET_PAGING_UNIT_JOB_FORMS,\r\n} from \"./UnitJobFormActions\";\r\n\r\nexport const initialState = {\r\n  listUnitJobForms: [],\r\n  paging: {\r\n    page: 1,\r\n    limit: 10,\r\n    totalPage: 0,\r\n  },\r\n};\r\n\r\nexport default function unitJobFormsReducer(state = initialState, action) {\r\n  const newState = Object.assign({}, state);\r\n\r\n  // eslint-disable-next-line default-case\r\n  switch (action.type) {\r\n    case SET_UNIT_JOB_FORMS_LIST_DATA:\r\n      newState.listUnitJobForms = action.payload;\r\n      return { ...newState };\r\n\r\n    case SET_PAGING_UNIT_JOB_FORMS:\r\n      newState.paging = { ...state.paging, ...action.payload };\r\n      return { ...newState };\r\n  }\r\n\r\n  return state;\r\n}\r\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_WORKING_HOURS_LIST_DATA = \"SET_WORKING_HOURS_LIST_DATA\";\nexport const SET_PAGING_MONITORING_EMPLOYEE = \"SET_PAGING_MONITORING_EMPLOYEE\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setWorkingHoursListData = (payload) => {\n  return {\n    type: SET_WORKING_HOURS_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingMonitoringEmployee = (payload) => {\n  return {\n    type: SET_PAGING_MONITORING_EMPLOYEE,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getWorkingHoursListDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().workingHours.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getWorkingHours(\n      page,\n      limit,\n      from,\n      until,\n      keyword\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newListWorkingHours = [];\n\n    if (data.callback.data.length > 0) {\n      data.callback.data.map((item, index) => {\n        newListWorkingHours.push({\n          created: moment(item.created_date).format(\"YYYY-MM-DD\"),\n          done: moment(item.done_date).format(\"YYYY-MM-DD\"),\n          ...item,\n        });\n      });\n    }\n\n    store.dispatch(setWorkingHoursListData(newListWorkingHours ?? []));\n    store.dispatch(setPagingMonitoringEmployee(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().monitoringEmployee.paging;\n\n  if (!values) {\n    await getWorkingHoursListDataRequested(page, limit);\n    return;\n  }\n  const keyword = values.keyword ?? \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  try {\n    await getWorkingHoursListDataRequested(\n      page,\n      limit,\n      keyword,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import {\n  SET_WORKING_HOURS_LIST_DATA,\n  SET_FORM_STATUS,\n  SET_PAGING_MONITORING_EMPLOYEE,\n} from \"./WorkingHoursActions\";\n\nexport const initialState = {\n  listWorkingHours: [],\n  formStatus: \"add\",\n  paging: {\n    page: 1,\n    limit: 999999999,\n    totalPage: 1,\n  },\n};\n\nexport default function workingHoursReducer(\n  state = initialState,\n  action\n) {\n  const newState = Object.assign({}, state);\n  // eslint-disable-next-line default-case\n  switch (action.type) {\n    case SET_WORKING_HOURS_LIST_DATA:\n      newState.listWorkingHours = action.payload;\n      return { ...newState };\n\n    case SET_FORM_STATUS:\n      newState.formStatus = action.payload;\n      return { ...newState };\n\n    case SET_PAGING_MONITORING_EMPLOYEE:\n      newState.paging = { ...state.paging, ...action.payload };\n      return { ...newState };\n  }\n\n  return state;\n}\n","import { combineReducers } from \"redux\";\nimport { reducer as toastrReducer } from \"react-redux-toastr\";\nimport { connectRouter } from \"connected-react-router\";\nimport { reducer as formReducer } from \"redux-form\";\nimport history from \"./History\";\nimport authReducer from \"../modules/Auth/Store/AuthReducer\";\nimport listServicesReducer from \"../modules/ListServices/Store/ListServicesReducer\";\nimport ComponentReducer from \"../modules/App/Store/ComponentReducer\";\nimport customersReducer from \"../modules/Customers/Store/CustomersReducer\";\nimport adminReducer from \"../modules/Admin/Store/AdminReducer\";\nimport rolesReducer from \"../modules/Roles/Store/RolesReducer\";\nimport employeesReducer from \"../modules/Employees/Store/EmployeesReducer\";\nimport employeeToolsReducer from \"../modules/Employees/Store/EmployeeTools/EmployeeToolsReducer\";\nimport masterDataReducer from \"../modules/MasterData/Store/MasterDataReducer\";\nimport unitReducer from \"../modules/Units/Store/UnitsReducer\";\nimport jobFormsReducer from \"../modules/JobForms/Store/JobFormsReducer\";\nimport branchReducer from \"../modules/Branch/Store/BranchReducer\";\nimport detailServiceTransactionReducer from \"../modules/DetailServiceTransaction/Store/DetailServiceTransactionReducer\";\nimport unitModelReducer from \"../modules/Units/Store/UnitModelReducer\";\nimport externalServiceReducer from \"../modules/ExternalService/Store/ExternalServiceReducer\";\nimport identificationReducer from \"../modules/Identification/Store/IdentificationReducer\";\nimport machineConfigurationReducer from \"../modules/MachineConfiguration/Store/MachineConfigurationReducer\";\nimport toolsReducer from \"../modules/Tools/Store/ToolsReducer\";\nimport formCategoryReducer from \"../modules/FormCategory/Store/FormCategoryReducer\";\nimport unitFieldsReducer from \"../modules/Units/Store/UnitFieldsReducer\";\nimport monitoringEmployeeReducer from \"../modules/MonitoringEmployee/Store/MonitoringEmployeeReducer\";\nimport reportServiceRepairReducer from \"../modules/ReportServiceRepair/Store/ReportServiceRepairReducer\";\nimport reportEmployeeReducer from \"../modules/ReportEmployee/Store/ReportEmployeeReducer\";\nimport divisionReducer from \"../modules/Division/Store/DivisionReducer\";\nimport divisionUnitReducer from \"../modules/Division/Store/DivisionUnitReducer\";\nimport dashboardReducer from \"../modules/Dashboard/Store/DashboardReducer\";\nimport unitSerialNumberReducer from \"../modules/Units/Store/UnitSerialNumberReducer\";\nimport unitJobFormsReducer from \"../modules/Units/Store/UnitJobFormsReducer\";\nimport workingHoursReducer from \"../modules/WorkingHours/Store/WorkingHoursReducer\";\n\nconst rootReducers = combineReducers({\n  router: connectRouter(history),\n  auth: authReducer,\n  services: listServicesReducer,\n  externalService: externalServiceReducer,\n  admins: adminReducer,\n  roles: rolesReducer,\n  units: unitReducer,\n  unitModels: unitModelReducer,\n  unitFields: unitFieldsReducer,\n  unitSerialNumber: unitSerialNumberReducer,\n  unitJobForms: unitJobFormsReducer,\n  jobForms: jobFormsReducer,\n  customers: customersReducer,\n  employees: employeesReducer,\n  employeeTools: employeeToolsReducer,\n  component: ComponentReducer,\n  identification: identificationReducer,\n  workingHours: workingHoursReducer,\n  masters: masterDataReducer,\n  branch: branchReducer,\n  formCategory: formCategoryReducer,\n  tools: toolsReducer,\n  machineConfiguration: machineConfigurationReducer,\n  detailService: detailServiceTransactionReducer,\n  monitoringEmployee: monitoringEmployeeReducer,\n  serviceRepair: reportServiceRepairReducer,\n  reportEmployee: reportEmployeeReducer,\n  division: divisionReducer,\n  divisionUnit: divisionUnitReducer,\n  dashboard: dashboardReducer,\n  form: formReducer,\n  toastr: toastrReducer,\n});\n\nexport default rootReducers;\n","import * as _ from \"lodash\";\nimport { applyMiddleware, compose, createStore } from \"redux\";\nimport { persistReducer, persistStore } from \"redux-persist\";\nimport Saga from \"./Saga/SagaMiddleware\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport createSagaMiddleware from \"redux-saga\";\nimport history from \"../app/History\";\nimport rootReducers from \"./RootReducers\";\nimport { routerMiddleware } from \"connected-react-router\";\nimport storage from \"redux-persist/lib/storage\";\n\nconst persistConfig = {\n  key: \"root\",\n  storage,\n  blacklist: [\"form\", \"component\"],\n};\n\nconst resetEnhancer = (rootReducer) => (state, action) => {\n  if (action.type !== \"LOGOUT\") {\n    return rootReducer(state, action);\n  } else {\n    const newState = rootReducer(undefined, {});\n    newState.router = state.router;\n    return newState;\n  }\n};\n\nconst persistedReducer = persistReducer(\n  persistConfig,\n  resetEnhancer(rootReducers)\n);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst composeEnhancers =\n  process.env.NODE_ENV !== \"production\" &&\n  typeof window === \"object\" &&\n  _.has(window, \"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\")\n    ? composeWithDevTools({ trace: true, traceLimit: 1000 })\n    : compose;\n\nexport const store = createStore(\n  persistedReducer,\n  composeEnhancers(applyMiddleware(sagaMiddleware, routerMiddleware(history)))\n);\nexport const persistor = persistStore(store);\nsagaMiddleware.run(Saga);\n","import { Form } from \"antd\";\nconst FormItem = Form.Item;\n\nexport const makeField =\n  (Component, props) =>\n  ({ style, input, meta, children, hasFeedback, label, ...rest }) => {\n    const hasError = meta.touched && meta.invalid;\n    return (\n      <FormItem\n        validateStatus={hasError ? \"error\" : \"success\"}\n        hasFeedback={hasFeedback && hasError}\n        help={hasError && meta.error}\n      >\n        <Component {...props} {...input} {...rest} children={children} />\n      </FormItem>\n    );\n  };\n","import React from \"react\";\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\nimport styled from \"styled-components\";\ninterface IProps {\n  loading: boolean;\n}\n\nconst Overlay = styled.div`\n  position: fixed;\n  display: block;\n  width: 100vw;\n  height: 100vh;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.8);\n  z-index: 99999;\n  padding-top: 23vh;\n  text-align: center;\n  margin: auto;\n  display: block;\n`;\n\nconst CGlobalOverlay: React.FC<IProps> = (props) => {\n  const { loading } = props;\n  if (loading) {\n    return (\n      <Overlay>\n        <ScaleLoader\n          height={120}\n          width={18}\n          radius={12}\n          margin={5}\n          color={\"#faad14\"}\n          loading={true}\n        />\n      </Overlay>\n    );\n  }\n  return null;\n};\n\nexport default CGlobalOverlay;\n","import React from \"react\";\n\nconst Sidebar = ({\n  role,\n  mainMenu,\n  masterDataMenu,\n  reportMenu,\n  serviceRepairMenu,\n  reportDataMenu,\n}) => {\n  return (\n    <div>\n      <nav class=\"sidebar\">\n        <div class=\"sidebar-header\">\n          <a href=\"#\" class=\"sidebar-brand\">\n            Rutan<span>Admin</span>\n          </a>\n          <div class=\"sidebar-toggler not-active\">\n            <span></span>\n            <span></span>\n            <span></span>\n          </div>\n        </div>\n        <div class=\"sidebar-body\">\n          <ul class=\"nav\">\n            {mainMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Main</li>\n            )}\n            {mainMenu?.length > 0 &&\n              mainMenu.map((item, index) => (\n                <li key={`sidebar-main-menu-${index}`} class=\"nav-item\">\n                  <a href={item.path} class=\"nav-link\">\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {masterDataMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Master Data</li>\n            )}\n            {masterDataMenu?.length > 0 &&\n              masterDataMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {serviceRepairMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Service Repair</li>\n            )}\n            {serviceRepairMenu?.length > 0 &&\n              serviceRepairMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {reportMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Monitoring</li>\n            )}\n            {reportMenu?.length > 0 &&\n              reportMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n            {reportDataMenu?.length > 0 && (\n              <li class=\"nav-item nav-category\">Laporan</li>\n            )}\n            {reportDataMenu?.length > 0 &&\n              reportDataMenu.map((item, index) => (\n                <li key={`sidebar-master-data-${index}`} class=\"nav-item\">\n                  <a class=\"nav-link\" href={item.path}>\n                    <i class=\"link-icon\" data-feather={item.icon}></i>\n                    <span class=\"link-title\">{item.name}</span>\n                  </a>\n                </li>\n              ))}\n          </ul>\n        </div>\n      </nav>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer class=\"footer d-flex flex-column flex-md-row align-items-center justify-content-between\">\n      <p class=\"text-muted text-center text-md-left\">\n        Copyright © {new Date().getFullYear() + \" \"}\n        <a href=\"#\">Rutan Team</a>. All rights reserved\n      </p>\n      <p class=\"text-muted text-center text-md-left mb-0 d-none d-md-block\">\n        Handcrafted With{\" \"}\n        <i class=\"mb-1 text-primary ml-1 icon-small\" data-feather=\"heart\"></i>\n      </p>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Navbar = (props) => {\n  const { onLogout, userDetail } = props;\n  return (\n    <nav class=\"navbar\">\n      <a href=\"#\" class=\"sidebar-toggler\">\n        <i data-feather=\"menu\"></i>\n      </a>\n      <div class=\"navbar-content\">\n        <form class=\"search-form\">\n          <div class=\"input-group\">\n            <div class=\"input-group-prepend\">\n              <div class=\"input-group-text\">\n                <i data-feather=\"search\"></i>\n              </div>\n            </div>\n            <input\n              type=\"text\"\n              class=\"form-control\"\n              id=\"navbarForm\"\n              placeholder=\"Search here...\"\n            />\n          </div>\n        </form>\n        <ul class=\"navbar-nav\">\n          <li class=\"nav-item dropdown nav-messages\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"messageDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"mail\"></i>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"messageDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">9 New Messages</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Leonardo Payne</p>\n                      <p class=\"sub-text text-muted\">2 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project status</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Carl Henson</p>\n                      <p class=\"sub-text text-muted\">30 min ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Client meeting</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Jensen Combs</p>\n                      <p class=\"sub-text text-muted\">1 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project updates</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>{userDetail.fullname}</p>\n                      <p class=\"sub-text text-muted\">2 hrs ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">Project deadline</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"figure\">\n                    <img src=\"https://via.placeholder.com/30x30\" alt=\"userr\" />\n                  </div>\n                  <div class=\"content\">\n                    <div class=\"d-flex justify-content-between align-items-center\">\n                      <p>Yaretzi Mayo</p>\n                      <p class=\"sub-text text-muted\">5 hr ago</p>\n                    </div>\n                    <p class=\"sub-text text-muted\">New record</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-notifications\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"notificationDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <i data-feather=\"bell\"></i>\n              <div class=\"indicator\">\n                <div class=\"circle\"></div>\n              </div>\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"notificationDropdown\">\n              <div class=\"dropdown-header d-flex align-items-center justify-content-between\">\n                <p class=\"mb-0 font-weight-medium\">6 New Notifications</p>\n                <a href=\"javascript:;\" class=\"text-muted\">\n                  Clear all\n                </a>\n              </div>\n              <div class=\"dropdown-body\">\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"user-plus\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New customer registered</p>\n                    <p class=\"sub-text text-muted\">2 sec ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"gift\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>New Order Recieved</p>\n                    <p class=\"sub-text text-muted\">30 min ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"alert-circle\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Server Limit Reached!</p>\n                    <p class=\"sub-text text-muted\">1 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"layers\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Apps are ready for update</p>\n                    <p class=\"sub-text text-muted\">5 hrs ago</p>\n                  </div>\n                </a>\n                <a href=\"javascript:;\" class=\"dropdown-item\">\n                  <div class=\"icon\">\n                    <i data-feather=\"download\"></i>\n                  </div>\n                  <div class=\"content\">\n                    <p>Download completed</p>\n                    <p class=\"sub-text text-muted\">6 hrs ago</p>\n                  </div>\n                </a>\n              </div>\n              <div class=\"dropdown-footer d-flex align-items-center justify-content-center\">\n                <a href=\"javascript:;\">View all</a>\n              </div>\n            </div>\n          </li>\n          <li class=\"nav-item dropdown nav-profile\">\n            <a\n              class=\"nav-link dropdown-toggle\"\n              href=\"#\"\n              id=\"profileDropdown\"\n              role=\"button\"\n              data-toggle=\"dropdown\"\n              aria-haspopup=\"true\"\n              aria-expanded=\"false\"\n            >\n              <img src=\"https://via.placeholder.com/30x30\" alt=\"profile\" />\n            </a>\n            <div class=\"dropdown-menu\" aria-labelledby=\"profileDropdown\">\n              <div class=\"dropdown-header d-flex flex-column align-items-center\">\n                {/* <div class=\"figure mb-3\">\n                  <img src=\"https://via.placeholder.com/80x80\" alt=\"\" />\n                </div> */}\n                <div class=\"info text-center\">\n                  <p class=\"name font-weight-bold mb-0\">\n                    {userDetail.fullname\n                      ? userDetail.fullname.toUpperCase()\n                      : \"Anonym\"}\n                  </p>\n                  <p class=\"email text-muted mb-3\">\n                    {userDetail.roles.map((item) => {\n                      if (userDetail.roles.length > 1) {\n                        return `${item.name},`;\n                      }\n                      return item.name;\n                    })}\n                  </p>\n                </div>\n              </div>\n              <div class=\"dropdown-body\">\n                <ul class=\"profile-nav p-0 pt-3\">\n                  <li class=\"nav-item\">\n                    <a href=\"pages/general/profile.html\" class=\"nav-link\">\n                      <i data-feather=\"user\"></i>\n                      <span>Profile</span>\n                    </a>\n                  </li>\n                  <li class=\"nav-item\">\n                    <a onClick={onLogout} class=\"nav-link cursor-pointer\">\n                      <i data-feather=\"log-out\"></i>\n                      <span>Log Out</span>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n};\n\nexport default Navbar;\n","import React from \"react\";\nimport CGlobalOverlay from \"../../../components/CGlobalOverlay/CGlobalOverlay\";\nimport Sidebar from \"../../../components/Sidebar/Sidebar\";\nimport Footer from \"../../../components/Footer/Footer\";\nimport Navbar from \"../../../components/Navbar/Navbar\";\n\nconst TemplateComponent = (props) => {\n  const {\n    children,\n    isGlobalLoading,\n    isLandingPage,\n    logout,\n    userDetail,\n    role,\n    mainMenu,\n    masterDataMenu,\n    reportMenu,\n    serviceRepairMenu,\n    reportDataMenu,\n  } = props;\n\n  return (\n    <React.Fragment>\n      <CGlobalOverlay loading={isGlobalLoading} />\n      {isLandingPage && (\n        <Sidebar\n          role={role}\n          masterDataMenu={masterDataMenu}\n          mainMenu={mainMenu}\n          reportMenu={reportMenu}\n          serviceRepairMenu={serviceRepairMenu}\n          reportDataMenu={reportDataMenu}\n        />\n      )}\n      <div className={`page-wrapper ${!isLandingPage ? \"full-page\" : \"\"}`}>\n        {isLandingPage && <Navbar onLogout={logout} userDetail={userDetail} />}\n        {children}\n        {isLandingPage && <Footer />}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default TemplateComponent;\n","import { createSelector } from \"reselect\";\n\nconst selectorAuth = (state) => state.auth;\n\n// SELECTOR FOR AUTH\nexport const AllAuthData = () => createSelector(selectorAuth, (state) => state);\nexport const Token = () =>\n  createSelector(selectorAuth, (state) => state.accessToken);\nexport const UserDetail = () =>\n  createSelector(selectorAuth, (state) => state.userDetail);\nexport const ErrorData = () =>\n  createSelector(selectorAuth, (state) => state.error);\n","import { createSelector } from \"reselect\";\n\nconst selectorComponent = (state) => state.component;\n\nexport const IsGlobalLoading = () =>\n  createSelector(selectorComponent, (state) => state.isLoadingGlobal);\n","import React from \"react\";\nimport { compose } from \"redux\";\n\nimport TemplateComponent from \"../Component/TemplateComponent\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as authActions from \"../../Auth/Store/AuthAction\";\nimport * as AuthSelector from \"../../Auth/Selector/AuthSelector\";\nimport * as AppSelector from \"../../App/Selector/AppSelector\";\n\nconst TemplateContainer = (props) => {\n  const [role, setRole] = React.useState(\"\");\n  const { userDetail } = props;\n\n  React.useEffect(() => {\n    if (userDetail && userDetail.role) {\n      setRole(userDetail.role[0].name);\n    }\n  }, [userDetail]);\n\n  const getIconName = (menu) => {\n    switch (menu) {\n      case \"/dashboard\":\n        return \"command\";\n\n      case \"/admin\":\n        return \"user\";\n\n      case \"/cabang\":\n        return \"link\";\n\n      case \"/employees\":\n        return \"users\";\n\n      case \"/customer\":\n        return \"users\";\n\n      case \"/division\":\n        return \"briefcase\";\n\n      case \"/role\":\n        return \"key\";\n\n      case \"/tools\":\n        return \"tool\";\n\n      case \"/machine\":\n        return \"settings\";\n\n      case \"/jobforms\":\n        return \"file-text\";\n\n      case \"/category\":\n        return \"file-text\";\n\n      case \"/unit\":\n        return \"box\";\n\n      case \"/internal-service\":\n        return \"file-plus\";\n\n      case \"/external-service\":\n        return \"file-plus\";\n\n      case \"/list_service\":\n        return \"list\";\n\n      case \"/monitoring-employee\":\n        return \"monitor\";\n\n      case \"/identification\":\n        return \"list\";\n\n      case \"/report_trans\":\n        return \"list\";\n\n      case \"/report_identification\":\n        return \"list\";\n\n      case \"/report_employee\":\n        return \"list\";\n\n      case \"/working-hours\":\n        return \"clock\";\n\n      default:\n        return \"command\";\n    }\n  };\n\n  const mainMenu = [];\n  const masterDataMenu = [];\n  const reportMenu = [];\n  const serviceRepairMenu = [];\n  const reportDataMenu = [];\n\n  if (userDetail) {\n    userDetail.menus.map((item, index) => {\n      let menu = {};\n      menu.icon = getIconName(item.path);\n      menu.name = item.menu;\n      menu.path = item.path;\n\n      if (\n        item.path === \"/admin\" ||\n        item.path === \"/cabang\" ||\n        item.path === \"/employees\" ||\n        item.path === \"/customer\" ||\n        item.path === \"/division\" ||\n        item.path === \"/role\" ||\n        item.path === \"/tools\" ||\n        item.path === \"/machine\" ||\n        item.path === \"/jobforms\" ||\n        item.path === \"/category\" ||\n        item.path === \"/unit\" ||\n        item.path === \"/identification\"\n      ) {\n        masterDataMenu.push(menu);\n      } else if (\n        item.path === \"/internal-service\" ||\n        item.path === \"/external-service\" ||\n        item.path === \"/list_service\"\n      ) {\n        serviceRepairMenu.push(menu);\n      } else if (item.path === \"/monitoring-employee\") {\n        reportMenu.push(menu);\n      } else if (\n        item.path === \"/report_trans\" ||\n        item.path === \"/report_employee\" ||\n        item.path === \"/report_identification\" ||\n        item.path === \"/working-hours\"\n      ) {\n        reportDataMenu.push(menu);\n      } else {\n        mainMenu.push(menu);\n      }\n    });\n  }\n\n  return (\n    <TemplateComponent\n      role={role}\n      mainMenu={mainMenu}\n      masterDataMenu={masterDataMenu}\n      reportMenu={reportMenu}\n      serviceRepairMenu={serviceRepairMenu}\n      reportDataMenu={reportDataMenu}\n      {...props}\n    />\n  );\n};\nconst mapStateToProps = createStructuredSelector({\n  isGlobalLoading: AppSelector.IsGlobalLoading(),\n  userDetail: AuthSelector.UserDetail(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  logout: () => {\n    authActions.doLogout(dispatch);\n  },\n});\n\nconst withConnect = connect(mapStateToProps, mapDispatchToProps);\n\nexport default compose(withConnect)(TemplateContainer);\n","import * as React from \"react\";\nimport hoistNonReactStatics from \"hoist-non-react-statics\";\n\nconst withTemplate = (Template, WrappedComponent, isLandingPage) => {\n  const AddedTemplate = (props) => {\n    return (\n      <Template {...props} isLandingPage={isLandingPage}>\n        <WrappedComponent {...props} />\n      </Template>\n    );\n  };\n\n  return hoistNonReactStatics(AddedTemplate, WrappedComponent);\n};\n\nexport default withTemplate;\n","import React from \"react\";\nimport { Button } from \"antd\";\n\ninterface IProps {\n  onClick: any;\n  disabled: boolean;\n  isLoading: boolean;\n  backgroundColor: string;\n  icon: any;\n  shape: \"default\" | \"circle\" | \"round\";\n  type: \"primary\" | \"dashed\" | \"default\" | \"ghost\" | \"link\" | \"text\";\n  size: \"middle\" | \"small\" | \"large\";\n  danger: boolean;\n  block: boolean;\n}\n\nconst CButtonAntd: React.FC<IProps> = (props) => {\n  const {\n    onClick,\n    children,\n    isLoading,\n    disabled,\n    icon,\n    shape,\n    type,\n    size,\n    danger,\n    backgroundColor\n  } = props;\n  return (\n    <Button\n      style={{backgroundColor: backgroundColor, borderColor: backgroundColor}}\n      block={props.block ?? false}\n      icon={icon ?? null}\n      type={type ?? \"default\"}\n      shape={shape ?? \"default\"}\n      onClick={onClick}\n      disabled={disabled}\n      loading={isLoading}\n      size={size ?? \"middle\"}\n      danger={danger}\n    >\n      {isLoading ? \"Loading\" : children}\n    </Button>\n  );\n};\n\nexport default CButtonAntd;\n","import { Table } from \"antd\";\nimport React from \"react\";\nimport '../../../app/style/tableStyle.css'\n\nconst DashboardComponent = (props) => {\n  const { userDetail, headers, listServices, dashboard } = props;\n  return (\n    <div>\n      <div class=\"page-content\">\n        <div class=\"d-flex justify-content-between align-items-center flex-wrap grid-margin\">\n          <h4 class=\"mt-5 ml-2\">{`Hallo, ${\n            userDetail.fullname ?? \"Anonym\"\n          }`}</h4>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-12 col-xl-12 stretch-card\">\n            <div class=\"row flex-grow\">\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Customer</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-12 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalCustomer}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Service Internal</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-6 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalInternalService}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Service External</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-6 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalExternalService}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-md-3 grid-margin stretch-card\">\n                <div class=\"card\">\n                  <div class=\"card-body\">\n                    <div class=\"d-flex justify-content-between align-items-baseline\">\n                      <h6 class=\"card-title mb-0\">Total Identifikasi</h6>\n                    </div>\n                    <div class=\"row\">\n                      <div class=\"col-6 col-md-12 col-xl-8\">\n                        <h3 class=\"mb-2\">{dashboard.totalIdentification}</h3>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-12 col-xl-12 grid-margin stretch-card\"></div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"col-lg-12 col-xl-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"d-flex justify-content-between align-items-baseline mb-2\">\n                  <h6 class=\"card-title mb-0\">10 Service Terbaru</h6>\n                </div>\n                <p class=\"text-muted mb-4\">\n                  Menampilkan 10 service berdasarkan tanggal terbaru\n                </p>\n                {/* <div class=\"monthly-sales-chart-wrapper\"> */}\n                {/* <canvas id=\"monthly-sales-chart\"></canvas> */}\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      // ...pagination,\n                    }}\n                  />\n                </div>\n                {/* </div> */}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardComponent;\n","import { Space, Tag } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as AdminActions from \"../../Admin/Store/AdminActions\";\nimport * as RoleActions from \"../../Roles/Store/RolesActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { setGlobalLoading } from \"../../App/Store/ComponentAction\";\nimport DashboardComponent from \"../Component/DashboardComponent\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\nimport { getDashboardProgressData } from \"../Store/DashboardActions\";\nimport { initializeApp } from \"../../../app/InitializeApp\";\n\nconst DashboardContainer = (props) => {\n  const {\n    handlePressEdit,\n    auth: { userDetail },\n    services: { dashboardListServices },\n    dashboard: { dashboardData },\n  } = props;\n  if (dashboardListServices.length > 0) {\n    dashboardListServices.map((item, index) => {\n      dashboardListServices[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  React.useEffect(() => {\n    store.dispatch(setGlobalLoading(false));\n    ListServiceActions.getTopTenService();\n    getDashboardProgressData();\n    initializeApp();\n  }, []);\n\n  if (Object.keys(dashboardData).length > 0) {\n    dashboardData.totalCustomer = dashboardData.totalCustomer\n      ? dashboardData.totalCustomer.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalInternalService = dashboardData.totalCustomer\n      ? dashboardData.totalInternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalExternalService = dashboardData.totalExternalService\n      ? dashboardData.totalExternalService.toLocaleString(\"en-US\")\n      : 0;\n    dashboardData.totalIdentification = dashboardData.totalIdentification\n      ? dashboardData.totalIdentification.toLocaleString(\"en-US\")\n      : 0;\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"15%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"40%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: \"15%\",\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: \"15%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  return (\n    <DashboardComponent\n      userDetail={userDetail}\n      headers={headers}\n      listServices={dashboardListServices}\n      dashboard={dashboardData}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  services: state.services,\n  dashboard: state.dashboard,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DashboardContainer);\n","import React from \"react\";\n\ninterface IProps {\n  onChange: any;\n  value: string;\n  label: string;\n  name: string;\n  placeholder: string;\n  type: string;\n  typeComponent: string;\n  input: any;\n  error: boolean;\n  message: string;\n  meta: { error: any; touched: any };\n  disabled: boolean;\n  maxLength: number;\n  rows: number;\n  key: string;\n  labelSize: number;\n}\n\nconst CInput: React.FC<IProps> = (props) => {\n  switch (props.typeComponent) {\n    case \"textarea\":\n      return (\n        <div className=\"form-group\">\n          <label htmlFor={props.name}>{props.label}</label>\n          <textarea\n            key={props.key ?? \"\"}\n            id={props.name}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            maxLength={props.maxLength ?? 250}\n            rows={props.rows ?? 8}\n            name={props.name}\n            onChange={props.onChange}\n            placeholder={props.placeholder ?? \"\"}\n            value={props.value}\n            {...props.input}\n          ></textarea>\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n    default:\n      return (\n        <div className=\"form-group\">\n          <label\n            htmlFor={props.name}\n            style={{ fontSize: props.labelSize ?? 14 }}\n          >\n            {props.label}\n          </label>\n          <input\n            id={props.name}\n            maxLength={props.maxLength ?? 250}\n            value={props.value}\n            className={`form-control ${props.error && \"is-invalid\"}`}\n            name={props.name}\n            type={props.type}\n            onChange={props.onChange}\n            placeholder={props.placeholder ?? \"\"}\n            disabled={props.disabled ?? false}\n            {...props.input}\n          />\n          {props.meta.touched && props.meta.error && (\n            <span className=\"mt-2 text-danger\">\n              {props.meta.error ?? \"This field required\"}\n            </span>\n          )}\n        </div>\n      );\n  }\n};\n\nexport default CInput;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\n\nconst LoginComponent = (props) => {\n  const { handleSubmit, submitForm, error } = props;\n\n  return (\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto\">\n          <div class=\"card\">\n            <div class=\"row\">\n              <div class=\"col-md-4 pr-md-0\">\n                <div class=\"auth-left-wrapper\"></div>\n              </div>\n              <div class=\"col-md-8 pl-md-0\">\n                <div class=\"auth-form-wrapper px-4 py-5\">\n                  <a href=\"#\" class=\"noble-ui-logo d-block mb-2\">\n                    Rutan<span>Admin</span>\n                  </a>\n                  <h5 class=\"text-muted font-weight-normal mb-4\">\n                    Selamat datang! Silahkan login dengan akun anda.\n                  </h5>\n                  <form\n                    class=\"forms-sample\"\n                    onSubmit={handleSubmit(submitForm)}\n                  >\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"username\"\n                        label=\"Username\"\n                        placeholder=\"Username\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"form-group\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder=\"Password\"\n                        component={CInput}\n                        type=\"password\"\n                      />\n                    </div>\n\n                    {error.status && (\n                      <span className=\"mt-2 text-danger\">{error.message}</span>\n                    )}\n\n                    <div class=\"mt-3\">\n                      <button\n                        type=\"submit\"\n                        class=\"btn btn-primary mr-2 mb-2 mb-md-0 text-white\"\n                      >\n                        Login\n                      </button>\n                    </div>\n                    <a href=\"register.html\" class=\"d-block mt-3 text-muted\">\n                      Belum punya akun? Daftar\n                    </a>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginComponent;\n","export const validateFormLogin = (values) => {\n  const errors = {};\n  if (!values.username) {\n    errors.username = \"Username wajib diisi!\";\n  } else if (values.username.length < 4) {\n    errors.username = \"Minimal 4 karakter atau lebih\";\n  }\n  if (!values.password) {\n    errors.password = \"Password wajib diisi!\";\n  } else if (values.password.length < 5) {\n    errors.password = \"Minimal 5 karakter atau lebih\";\n  }\n  return errors;\n};\n\nexport const validateFormInternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n};\n\nexport const validateFormExternalService = (values) => {\n  const errors = {};\n  if (!values.typeService) {\n    errors.typeService = \"Tipe service wajib diisi!\";\n  }\n  if (!values.startDate) {\n    errors.startDate = \"Tanggal Mulai wajib diisi!\";\n  }\n  if (!values.endDate) {\n    errors.endDate = \"Tanggal Akhir wajib diisi!\";\n  }\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Job Perform wajib diisi!\";\n  }\n  if (!values.jobForm) {\n    errors.jobForm = \"Job Form wajib diisi!\";\n  }\n  if (!values.warranty) {\n    errors.warranty = \"Job Form wajib diisi!\";\n  }\n  if (!values.customer) {\n    errors.customer = \"Wajib pilih customer\";\n  }\n  if (!values.customerLocation) {\n    errors.customerLocation = \"Lokasi wajib diisi!\";\n  }\n  // ========== Field Array Valdiation ===========\n  if (!values.employees) {\n    errors.employees = \"Wajib pilih karyawan!\";\n  }\n  return errors;\n  return errors;\n};\n\nexport const validateFormRoles = (values) => {\n  const errors = {};\n  if (!values.description) {\n    errors.description = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormCategory = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Judul wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnit = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Unit wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormUnitModel = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama Model wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTools = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama peralatan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormEmployee = (values) => {\n  const errors = {};\n  if (!values.name) {\n    errors.name = \"Nama wajib diisi!\";\n  }\n  if (!values.phone) {\n    errors.phone = \"No. Telpon wajib diisi!\";\n  }\n  if (!values.province) {\n    errors.province = \"Wajib pilih provinsi!\";\n  }\n  if (!values.city) {\n    errors.city = \"Wajib pilih kota!\";\n  }\n  if (!values.branch) {\n    errors.branch = \"Wajib pilih cabang!\";\n  }\n  if (!values.address) {\n    errors.address = \"Wajib isi alamat!\";\n  }\n  return errors;\n};\n\nexport const validateServiceEmployeeForm = (values) => {\n  const errors = {};\n  if (!values.employee) {\n    errors.employee = \"Karyawan wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionForm = (values) => {\n  const errors = {};\n  if (!values.title) {\n    errors.title = \"Judul wajib diisi!\";\n  }\n  if (!values.headDivision) {\n    errors.headDivision = \"Kepala divisi wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateDivisionUnitForm = (values) => {\n  const errors = {};\n  if (!values.unit) {\n    errors.unit = \"Unit wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateEmployeeToolsForm = (values) => {\n  const errors = {};\n  if (!values.tools) {\n    errors.tools = \"Peralatan wajib dipilih!\";\n  }\n  return errors;\n};\n\nexport const validateFormRejected = (values) => {\n  const errors = {};\n  if (!values.reson) {\n    errors.reson = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateFormTransaction = (values) => {\n  const errors = {};\n  if (!values.jobPerform) {\n    errors.jobPerform = \"Field ini wajib diisi!\";\n  }\n  return errors;\n};\n\nexport const validateUnitSerialNumberForm = (values) => {\n  const errors = {};\n  if (!values.customer) {\n    errors.customer = \"Wajib memilih customer!\";\n  }\n  if (!values.serialNumber) {\n    errors.serialNumber = \"Serial number wajib diisi!\";\n  }\n  if (!values.descriptions) {\n    errors.descriptions = \"Deskripsi wajib diisi!\";\n  }\n  return errors;\n};\n","import React from \"react\";\nimport LoginComponent from \"../Component/LoginComponent\";\nimport { reduxForm, reset } from \"redux-form\"; // imported Field\nimport { connect } from \"react-redux\";\nimport * as AuthActions from \"../Store/AuthAction\";\nimport * as AuthSelector from \"../Selector/AuthSelector\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport { createStructuredSelector } from \"reselect\";\nimport { navigate } from \"../../../app/Helpers\";\n\nconst LoginContainer = (props) => {\n  const { valid } = props;\n\n  const submitForm = (values) => {\n    // navigate(\"/preview-pdf\");\n    if (valid) {\n      AuthActions.handleSubmitLogin(values);\n    }\n  };\n\n  return <LoginComponent submitForm={submitForm} {...props} />;\n};\n\nconst mapStateToProps = createStructuredSelector({\n  auth: AuthSelector.AllAuthData(),\n  error: AuthSelector.ErrorData(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"loginForm\"));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginContainer);\n\nexport default reduxForm({\n  form: \"loginForm\",\n  validate: validateForm.validateFormLogin,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Select } from \"antd\";\nimport { Field } from \"redux-form\";\nimport { makeField } from \"../../app/FormHelpers\";\n\nconst { Option } = Select;\nconst ASelect = makeField(Select);\n\nconst CSelect = (props) => {\n  return (\n    <div>\n      <label htmlFor={props.name}>{props.label}</label>\n      <br />\n      <Field\n        style={{ width: \"100%\" }}\n        showSearch={props.showSearch ?? false}\n        name={props.name}\n        component={ASelect}\n        onChange={props.onChange}\n        onBlur={(e) => {\n          if (props.onBlur) {\n            props.onBlur();\n          }\n          e.preventDefault();\n        }}\n        {...props}\n      >\n        <Option disabled={props.disabled ?? false} value=\"\">\n          {props.placeholder ?? \"- Pilih -\"}\n        </Option>\n        {props.data.length > 0 &&\n          props.data.map((item, index) => {\n            return (\n              <Option\n                value={`${item.value}|${item.label}`}\n                key={`option-${index}`}\n              >\n                {item.label}\n              </Option>\n            );\n          })}\n      </Field>\n    </div>\n  );\n};\n\nexport default CSelect;\n","import React from \"react\";\nimport { DatePicker } from \"antd\";\nimport moment from \"moment\";\nimport { Field } from \"redux-form\";\n\nconst RenderDatePicker = (props) => {\n  const { name, input, label, meta } = props;\n\n  return (\n    <div>\n      <label htmlFor={name}>{label}</label>\n      <br />\n      <DatePicker\n        placeholder=\"Pilih Tanggal\"\n        style={{ width: \"100%\" }}\n        name={name}\n        onBlur={(e) => {\n          e.preventDefault();\n        }}\n        defaultValue={moment()}\n        {...input}\n      />\n      {meta.touched && meta.error && (\n        <span className=\"mt-2 text-danger\">\n          {meta.error ?? \"This field required\"}\n        </span>\n      )}\n    </div>\n  );\n};\n\nconst CDatePicker = (props) => {\n  return (\n    <Field\n      component={RenderDatePicker}\n      onBlur={(e) => {\n        e.preventDefault();\n      }}\n      {...props}\n    />\n  );\n};\n\nexport default CDatePicker;\n","import React from \"react\";\n\ninterface IProps {\n  type: \"submit\" | \"button\" | \"reset\";\n  onClick: any;\n  isLoading: boolean;\n}\n\nconst CButton: React.FC<IProps> = (props) => {\n  const { type, isLoading, onClick, children } = props;\n  return (\n    <button\n      onClick={onClick}\n      className=\"btn btn-primary\"\n      type={type}\n      disabled={isLoading}\n    >\n      {isLoading && (\n        <span\n          className=\"spinner-grow spinner-grow-sm\"\n          role=\"status\"\n          aria-hidden=\"true\"\n        ></span>\n      )}\n      {isLoading ? \"Loading...\" : children}\n    </button>\n  );\n};\n\nexport default CButton;\n","import React from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\n\nconst InternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    isLoadingFormGlobal,\n  } = props;\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({ employee: \"\" })}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah Internal Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan internal service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-4 mt-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                      />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-4 mt-2\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12 mt-2\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      {/* <input\n                        class=\"btn btn-primary\"\n                        type=\"submit\"\n                        value=\"Simpan\"\n                      /> */}\n                      <CButton type=\"submit\" isLoading={isLoadingFormGlobal}>\n                        Simpan\n                      </CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default InternalServiceComponent;\n","import moment from \"moment\";\nimport { change, reset } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { setGlobalFormLoading } from \"../../App/Store/ComponentAction\";\nimport { toast } from \"react-toastify\";\nimport { navigate, SelectStatus } from \"../../../app/Helpers\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\n\nconst getEmployeeByIdFromReducer = async (employeeId, type) => {\n  const { getState } = store;\n  let tempData;\n  if (type === \"employee\") {\n    const { listEmployees } = getState().employees;\n    tempData = listEmployees.filter((x) => x.id === employeeId);\n  } else {\n    const { listCustomersDropdown } = getState().customers;\n    tempData = listCustomersDropdown.filter((x) => x.id === employeeId);\n  }\n  return tempData[0] ?? {};\n};\n\nconst getProvinceByIdFromReducer = async (provinceId) => {\n  const { getState } = store;\n  const { listProvince } = getState().masters;\n  const result = listProvince.filter((x) => x.id === provinceId);\n  return result[0] ?? {};\n};\n\nconst getCityByIdFromReducer = async (cityId) => {\n  const { getState } = store;\n  const { listCity } = getState().masters;\n  const result = listCity.filter((x) => x.id === cityId);\n  return result[0] ?? {};\n};\n\nexport const setAutoPopulateEmployee = async (\n  employeeId,\n  indexEmployee,\n  isReset = false\n) => {\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\"internalServiceForm\", `employees[${indexEmployee}].nik`, \"\")\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        {}\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        {}\n      )\n    );\n    return;\n  }\n\n  try {\n    const employeeData = await getEmployeeByIdFromReducer(\n      employeeId,\n      \"employee\"\n    );\n    const provinceData = await getProvinceByIdFromReducer(\n      employeeData.province_id\n    );\n\n    await MasterDataActions.loadCityListData(employeeData.province_id);\n\n    const cityData = await getCityByIdFromReducer(employeeData.city_id);\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].nik`,\n        employeeData.nik ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeePhoneNumber`,\n        employeeData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeProvinceName`,\n        provinceData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailProvince`,\n        provinceData\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeCityName`,\n        cityData.name\n      )\n    );\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        `employees[${indexEmployee}].employeeDetailCity`,\n        cityData\n      )\n    );\n  } catch (error) {\n    console.log(\"process error\");\n    console.log(error);\n  }\n};\n\nexport const setAutoPopulateCustomer = async (customerId, isReset = false) => {\n  let citySelected;\n  if (isReset) {\n    // Mapping data to redux-form\n    store.dispatch(change(\"internalServiceForm\", \"customerPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picCustomer\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerAddress\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"picPhoneNumber\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerProvinceName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailProvince\", {}));\n    store.dispatch(change(\"internalServiceForm\", \"customerCityName\", \"\"));\n    store.dispatch(change(\"internalServiceForm\", \"customerDetailCity\", {}));\n    return;\n  }\n\n  try {\n    const customersData = await getEmployeeByIdFromReducer(\n      customerId,\n      \"customers\"\n    );\n\n    const provinceData = await getProvinceByIdFromReducer(\n      customersData.province_id\n    );\n\n    const cityData = await Invoke.getCityList(\n      1,\n      200,\n      customersData.province_id\n    );\n\n    if (cityData.data.callback.data.length > 0) {\n      const [filteredCity] = cityData.data.callback.data.filter(\n        (x) => x.id === customersData.city_id\n      );\n      citySelected = filteredCity;\n    }\n\n    console.log(\"=== City : \", cityData);\n\n    // Mapping data to redux-form\n    store.dispatch(\n      change(\n        \"internalServiceForm\",\n        \"customerPhoneNumber\",\n        customersData.phone ?? \"\"\n      )\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picCustomer\", customersData.pic)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerAddress\", customersData.address)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"picPhoneNumber\", customersData.pic_phone)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerProvinceName\", provinceData.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailProvince\", provinceData)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerCityName\", citySelected.name)\n    );\n    store.dispatch(\n      change(\"internalServiceForm\", \"customerDetailCity\", citySelected)\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSubmitForm = async (values) => {\n  const { dispatch } = store;\n  dispatch(setGlobalFormLoading(true));\n  const splitCustomerId = values.customer.split(\"|\");\n  const splitTypeId = values.typeService.split(\"|\");\n  let employees = [];\n\n  values.employees.map((item, index) => {\n    const splitEmployeeId = item.employee.split(\"|\");\n    employees.push({\n      employee_id: splitEmployeeId[0],\n      active: \"true\",\n    });\n  });\n\n  const payload = {\n    customer_id: splitCustomerId[0],\n    job_form_id: uuidv4(),\n    identification_id: null,\n    type: splitTypeId[0],\n    status: SelectStatus[0].value,\n    is_external: \"false\",\n    location: values.customerLocation ?? \"\",\n    start: moment(values.startDate).format(\"YYYY-MM-DD\"),\n    due: moment(values.endDate).format(\"YYYY-MM-DD\"),\n    job_perform: values.jobPerform,\n    warranty: \"false\",\n    warranty_month: \"\", // null because internal services\n    warranty_year: \"\", // null because internal services\n    units: [], // empty array because internal services\n    employees: employees,\n  };\n\n  try {\n    const functionThatReturnPromise = () =>\n      new Promise((resolve, reject) => {\n        Invoke.addInternalService(payload)\n          .then(() => {\n            setTimeout(() => {\n              dispatch(setGlobalFormLoading(false));\n              dispatch(reset(\"internalServiceForm\"));\n              navigate(\"list_service\");\n              resolve();\n            }, 1000);\n          })\n          .catch(() => {\n            setTimeout(reject, 1000);\n            dispatch(setGlobalFormLoading(false));\n          });\n      });\n    toast.promise(functionThatReturnPromise, {\n      pending: \"Proses menyimpan data...\",\n      success: \"Data berhasil disimpan 👌\",\n      error: \"Data gagal disimpan, harap coba lagi 🤯\",\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch(setGlobalFormLoading(false));\n  }\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm, reset } from \"redux-form\";\nimport InternalServiceComponent from \"../Component/InternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as InternalServiceActions from \"../Store/InternalServiceActions\";\nimport * as ComponentAction from \"../../App/Store/ComponentAction\";\nimport { enumTypeInternalServices } from \"../../../app/Helpers\";\n\nconst InternalServiceContainer = (props) => {\n  const {\n    valid,\n    customers: { listCustomersDropdown, paging, keyowrd },\n    employees: { listEmployees },\n    component: { isLoadingFormGlobal },\n  } = props;\n\n  const { page, limit } = paging;\n\n  const submitForm = (values) => {\n    if (valid) {\n      InternalServiceActions.handleSubmitForm(values);\n    } else {\n    }\n  };\n\n  React.useEffect(() => {\n    // Reset all form data and loading when first load data\n    ComponentAction.resetAllGlobalLoadingProcess();\n    // resetForm();\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    EmployeeActions.loadEmployeeListData(1, 999999);\n    MasterDataActions.loadProvinceListData();\n    // MasterDataActions.loadCityListData();\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <InternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      enumType={enumTypeInternalServices}\n      submitForm={submitForm}\n      isLoadingFormGlobal={isLoadingFormGlobal}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"internalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      InternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    InternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n    if (!customerId) {\n      InternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    InternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InternalServiceContainer);\n\nexport default reduxForm({\n  form: \"internalServiceForm\",\n  validate: validateForm.validateFormInternalService,\n  initialValues: {\n    employees: [],\n  },\n})(EnhanceContainer);\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButton from \"../../../components/CButton/CButton\";\nimport { getUnitModelEnum } from \"../../../app/Helpers\";\n\nconst ExternalServiceComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    listCustomers,\n    listEmployee,\n    enumType,\n    enumWarranty,\n    handleAutoPopulateEmployee,\n    handleAutoPopulateCustomer,\n    listUnit,\n    enumJobForms,\n    handleAutoPopulateUnitModel,\n    externalValues,\n    onChangeUnitModel,\n    handleChangeType,\n    isTroubleShoot,\n  } = props;\n\n  const renderUnits = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Unit\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Unit ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-units-${indexUnit}`}\n                    onChange={(val) =>\n                      handleAutoPopulateUnitModel(val, indexUnit)\n                    }\n                    data={listUnit}\n                    name={`${itemUnit}.id`}\n                    label=\"Pilih Unit\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <CSelect\n                    key={`enum-model-${indexUnit}`}\n                    data={\n                      externalValues[indexUnit].enumUnitModel\n                        ? getUnitModelEnum(\n                            externalValues[indexUnit].enumUnitModel\n                          )\n                        : []\n                    }\n                    name={`${itemUnit}.unitModelId`}\n                    onChange={(val) => {\n                      if (externalValues[indexUnit].enumUnitModel.length > 0) {\n                        onChangeUnitModel(\n                          val,\n                          indexUnit,\n                          externalValues[indexUnit].enumUnitModel\n                        );\n                      }\n                    }}\n                    label=\"Model\"\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    key={`serial-number-${indexUnit}`}\n                    name={`${itemUnit}.unitModelSerialNumber`}\n                    label=\"Serial Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const renderEmployee = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => fields.push({})}\n          >\n            Tambah Karyawan\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemEmployee, indexEmployee) => {\n          return (\n            <div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Karyawan ${indexEmployee + 1}`}</h5>\n                </div>\n\n                <CButtonAntd\n                  key={`removeEmployee-${indexEmployee}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexEmployee)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\">\n                  <CSelect\n                    showSearch\n                    data={listEmployee}\n                    name={`${itemEmployee}.employee`}\n                    label=\"Pilih Karyawan\"\n                    onChange={(employee) => {\n                      handleAutoPopulateEmployee(employee, indexEmployee);\n                    }}\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.nik`}\n                    label=\"NIK\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeePhoneNumber`}\n                    label=\"No. Telepon\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n              <div class=\"row\">\n                <div class=\"col-md-4\"></div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeProvinceName`}\n                    label=\"Nama Provinsi\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n                <div class=\"col-md-4\">\n                  <Field\n                    name={`${itemEmployee}.employeeCityName`}\n                    label=\"Nama Kota/Kabupaten\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </>\n    );\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h6 class=\"card-title\">Tambah External Service</h6>\n                <p class=\"card-description\">\n                  Form yang ditujukan untuk pembuatan external service baru yang\n                  akan dikerjakan oleh teknisi.\n                </p>\n                <Form onSubmit={handleSubmit(submitForm)}>\n                  <div class=\"row\">\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumType}\n                        name=\"typeService\"\n                        label=\"Tipe\"\n                        onChange={handleChangeType}\n                      />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n                    </div>\n                    <div class=\"col-md-3\">\n                      <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n                    </div>\n                    <div class=\"col-md-2\">\n                      {!isTroubleShoot && (\n                        <CSelect\n                          data={enumJobForms}\n                          name=\"jobForm\"\n                          label=\"Job Form\"\n                        />\n                      )}\n                    </div>\n                    <div class=\"col-md-2\">\n                      <CSelect\n                        data={enumWarranty}\n                        name=\"warranty\"\n                        label=\"Warranty\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"jobPerform\"\n                        label=\"Job Perform\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan job perform teknisi\"\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  {/* This render employee */}\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu karyawan.\n                    </p>\n                  </div>\n                  <FieldArray name=\"employees\" component={renderEmployee} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-4\">\n                      <CSelect\n                        showSearch\n                        data={listCustomers}\n                        name=\"customer\"\n                        label=\"Pilih Customer\"\n                        onChange={(employee) => {\n                          handleAutoPopulateCustomer(employee);\n                        }}\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerPhoneNumber\"\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picCustomer\"\n                        label=\"PIC\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerAddress\"\n                        label=\"Alamat\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-4\"></div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"picPhoneNumber\"\n                        label=\"PIC Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-2\">\n                      <Field\n                        name=\"customerProvinceName\"\n                        label=\"Nama Provinsi\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                    <div class=\"col-md-4\">\n                      <Field\n                        name=\"customerCityName\"\n                        label=\"Nama Kota/Kabupaten\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <hr />\n                  <div className=\"row\">\n                    <InfoCircleTwoTone />\n                    <p className=\"text-small ml-2\">\n                      Tips : Bisa menambahkan lebih dari satu unit.\n                    </p>\n                  </div>\n                  <FieldArray name=\"units\" component={renderUnits} />\n                  <hr />\n                  <div class=\"row\">\n                    <div class=\"col-md-12\">\n                      <Field\n                        name=\"customerLocation\"\n                        label=\"Lokasi\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                        placeholder=\"Masukan Lokasi Customer\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"mt-4 row\">\n                    <div class=\"col-md-12\">\n                      <CButton type=\"submit\">Simpan</CButton>\n                    </div>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ExternalServiceComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  change,\n  formValueSelector,\n  getFormValues,\n  reduxForm,\n  reset,\n} from \"redux-form\";\nimport ExternalServiceComponent from \"../Component/ExternalServiceComponent\";\nimport * as validateForm from \"../../../app/validateForm\";\nimport * as CustomerActions from \"../../Customers/Store/CustomersActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ExternalServiceActions from \"../Store/ExternalServiceActions\";\nimport * as UnitsActions from \"../../Units/Store/UnitsActions\";\nimport * as JobFormsActions from \"../../JobForms/Store/JobFormsActions\";\nimport { enumTypeExternalServices, enumWarranty } from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"externalServiceForm\");\n\nconst ExternalServiceContainer = (props) => {\n  const [unitQty, setUnitQty] = React.useState(1);\n  const [unitData, setUnitData] = React.useState([]);\n  const [isTroubleShoot, setIsTroubleShoot] = React.useState(false);\n\n  const {\n    valid,\n    customers: { listCustomersDropdown },\n    employees: { listEmployees },\n    units: { listUnits },\n    jobForms: { listJobForms },\n    resetForm,\n    // form: { externalServiceForm },\n  } = props;\n\n  const submitForm = (values) => {\n    ExternalServiceActions.handleSubmitForm(values);\n    if (valid) {\n      console.log(\"success\");\n    }\n  };\n\n  const handleAddNewUnit = () => {\n    if (unitQty === 5) {\n      return;\n    }\n    setUnitQty(unitQty + 1);\n  };\n\n  const handleSubtractUnit = () => {\n    if (unitQty === 0) {\n      return;\n    }\n    setUnitQty(unitQty - 1);\n  };\n\n  const SelectUnit = [];\n  listUnits.map((item, index) => {\n    SelectUnit.push({\n      id: `unit-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    EmployeeActions.loadEmployeeListData(1, 99999);\n    MasterDataActions.loadProvinceListData();\n    return () => {\n      resetForm();\n    };\n  }, []);\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectEmployeeData = [];\n  listEmployees.map((item, index) => {\n    SelectEmployeeData.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectJobFormsData = [];\n  listJobForms.map((item, index) => {\n    SelectJobFormsData.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const handleChangeType = (val) => {\n    const type = val.split(\"|\");\n    if (\n      type[0] === \"T2\" ||\n      type[0] === \"T4\" ||\n      type[0] === \"T5\" ||\n      type[0] === \"T6\"\n    ) {\n      setIsTroubleShoot(true);\n    } else {\n      setIsTroubleShoot(false);\n    }\n  };\n\n  React.useEffect(() => {\n    UnitsActions.getUnitListDataRequested(1, 100);\n    JobFormsActions.getJobFormsListDataRequested(1, 100);\n    let totalUnit = [];\n    for (let i = 0; i < unitQty; i++) {\n      totalUnit.push(i);\n    }\n    setUnitData(totalUnit);\n  }, [unitQty]);\n\n  return (\n    <ExternalServiceComponent\n      listCustomers={SelectCustomerData}\n      listEmployee={SelectEmployeeData}\n      listUnit={SelectUnit}\n      enumJobForms={SelectJobFormsData}\n      enumType={enumTypeExternalServices}\n      enumWarranty={enumWarranty}\n      submitForm={submitForm}\n      handleAddNewUnit={handleAddNewUnit}\n      handleSubtractUnit={handleSubtractUnit}\n      unitData={unitData}\n      handleChangeType={handleChangeType}\n      isTroubleShoot={isTroubleShoot}\n      // selectedUnitModelList={selectedUnitModelList}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  auth: state.auth,\n  customers: state.customers,\n  employees: state.employees,\n  units: state.units,\n  jobForms: state.jobForms,\n  formValues: getFormValues(\"externalServiceForm\")(state),\n  externalValues: selector(state, \"units\"),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  resetForm: () => {\n    dispatch(reset(\"externalServiceForm\"));\n  },\n  handleAutoPopulateEmployee: (employeeId, indexEmployee) => {\n    const arrVal = employeeId.split(\"|\");\n    if (!employeeId) {\n      ExternalServiceActions.setAutoPopulateEmployee(\n        arrVal[0],\n        indexEmployee,\n        true\n      );\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateEmployee(arrVal[0], indexEmployee);\n  },\n  handleAutoPopulateCustomer: (customerId) => {\n    const arrVal = customerId.split(\"|\");\n\n    if (!customerId) {\n      ExternalServiceActions.setAutoPopulateCustomer(arrVal[0], true);\n      return;\n    }\n    ExternalServiceActions.setAutoPopulateCustomer(arrVal[0]);\n  },\n  handleAutoPopulateUnitModel: (unitId, fieldIndex) => {\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].enumUnitModel`, [])\n    );\n    dispatch(\n      change(\"externalServiceForm\", `units[${fieldIndex}].unitModelId`, \"\")\n    );\n    if (unitId) {\n      const arrVal = unitId.split(\"|\");\n      ExternalServiceActions.setAutoPopulateUnitModel(arrVal[0], fieldIndex);\n    }\n  },\n  onChangeUnitModel: (val, index, enumModel) => {\n    if (val) {\n      ExternalServiceActions.onChangeUnitModel(val, index, enumModel);\n    }\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ExternalServiceContainer);\n\nexport default reduxForm({\n  form: \"externalServiceForm\",\n  validate: validateForm.validateFormExternalService,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryMonitoringServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst MonitoringEmployeeComponent = (props) => {\n  const {\n    headers,\n    listMonitoringEmployee,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumTypeReport,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Monitoring Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryMonitoringServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumTypeReport ?? []}\n                      name=\"type\"\n                      label=\"Tipe\"\n                    />\n                  </div>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      // onChange={(val) => onChangeProvince(val)}\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                      placeholder=\"-Pilih Semua-\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Laporan\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listMonitoringEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MonitoringEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as MonitoringEmployeeActions from \"../Store/MonitoringEmployeeActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport MonitoringEmployeeComponent from \"../Component/MonitoringEmployeeComponent\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Tag } from \"antd\";\nimport { exportMonitoringEmployeePdf } from \"../Store/MonitoringEmployeeReport\";\nimport moment from \"moment\";\n\nconst MonitoringEmployeeContainer = (props) => {\n  const {\n    getListMonitoringEmployee,\n    handlePressAddNew,\n    monitoringEmployee: { listMonitoringEmployee, paging },\n    branch: { listBranchDropdown },\n    monitoringEmployeeFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMonitoringEmployee.length > 0) {\n    listMonitoringEmployee.map((item, index) => {\n      listMonitoringEmployee[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const printedData = {\n    listMonitoringEmployee,\n    from: moment(),\n    until: moment(),\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"job_type\",\n      key: \"job_type\",\n      render: (jobType) => {\n        let color = jobType === \"loss\" ? \"#f50\" : \"#f50\";\n        return (\n          <Tag style={{ width: 115, textAlign: \"center\" }} color={color}>\n            {jobType ? jobType.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.job_type.length - b.job_type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"units\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"30%\",\n      sorter: (a, b) => a.models.length - b.models.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranchDropdown.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListMonitoringEmployee(page, limit);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      MonitoringEmployeeActions.setPagingMonitoringEmployee(paging)\n    );\n    getListMonitoringEmployee(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    MonitoringEmployeeActions.handleSearch(monitoringEmployeeFormValues);\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportMonitoringEmployeePdf(printedData, monitoringEmployeeFormValues);\n  };\n\n  return (\n    <MonitoringEmployeeComponent\n      headers={headers}\n      listMonitoringEmployee={listMonitoringEmployee}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  monitoringEmployee: state.monitoringEmployee,\n  branch: state.branch,\n  monitoringEmployeeFormValues: getFormValues(\"monitoringEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMonitoringEmployee: (page, limit, keyword, type, from, until) =>\n    MonitoringEmployeeActions.getMonitoringEmployeeListDataRequested(\n      page,\n      limit,\n      keyword,\n      type,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MonitoringEmployeeContainer);\n\nexport default reduxForm({\n  form: \"monitoringEmployeeForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport moment from \"moment\";\n\nexport const exportMonitoringEmployeePdf = (data, values) => {\n  const { listMonitoringEmployee, from, until } = data;\n  const startDate = moment(from).format(\"YYYY-MM-DD\");\n  const dueDate = moment(until).format(\"YYYY-MM-DD\");\n  const monitoringEmployeeList = [];\n\n  listMonitoringEmployee.map((item, index) => {\n    monitoringEmployeeList.push({\n      no: index + 1,\n      nik: item.employee_nik,\n      name: item.employee_name,\n      phone: item.phone,\n      address: item.address,\n      type: item.job_type,\n      status: item.job_status,\n      branch: item.branch_name,\n      customer: item.customer_name,\n      createdDate: item.created_date,\n    });\n  });\n\n  const doc = new jsPDF();\n  // doc.text({from_left}, {from_top})\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Monitoring Karyawan\", 100, 20, \"center\");\n  doc.setFontSize(16);\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\n\n  doc.setFontSize(12);\n\n  //   Line 1\n  doc.text(15, 42, `Dari Tanggal`);\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\n  doc.text(15, 49, `Sampai Tanggal`);\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\n\n  // Check if filtered by branch\n  if (values) {\n    if (values.branch) {\n      const splitBranch = values.branch.split(\"|\");\n      doc.text(15, 56, `Cabang`);\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\n    }\n  }\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  const headTable = [\n    [\n      { content: \"Tanggal\", rowSpan: 2, halign: \"center\" },\n      {\n        content: \"Karyawan\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n      {\n        content: \"Service\",\n        colSpan: 4,\n        styles: { halign: \"center\", fillColor: [255, 255, 255] },\n      },\n    ],\n    [\n      \"NIK\",\n      \"Nama Karyawan\",\n      \"Cabang\",\n      \"Tipe\",\n      \"Customer\",\n      \"Unit\",\n      \"Model\",\n      \"Status\",\n    ],\n  ];\n\n  doc.autoTable({\n    startY: values ? 65 : 60,\n    body: monitoringEmployeeList,\n    theme: \"plain\",\n    head: headTable,\n    headStyles: { halign: \"center\", valign: \"middle\" },\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\n    columns: [\n      { header: \"Tanggal\", dataKey: \"createdDate\" },\n      { header: \"NIK\", dataKey: \"nik\" },\n      { header: \"Nama Karyawan\", dataKey: \"name\" },\n      { header: \"Cabang\", dataKey: \"branch\" },\n      { header: \"Tipe\", dataKey: \"type\" },\n      { header: \"Customer\", dataKey: \"customer\" },\n      { header: \"Unit\", dataKey: \"units\" },\n      { header: \"Model\", dataKey: \"unit_models\" },\n      { header: \"Status\", dataKey: \"status\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { columnWidth: 28 },\n      1: { columnWidth: 20 },\n      // 2: { halign: \"center\" },\n      // 3: { halign: \"center\" },\n      // 4: { halign: \"center\" },\n      // 5: { halign: \"center\" },\n      // 6: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  //   Export\n  doc.save(\"monitoring-employee.pdf\");\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportServiceRepairComponent = (props) => {\n  const { headers, listServiceRepair, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Service Repair</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServiceRepair}\n                    size={\"small\"}\n                    // scroll={{ x: 50, y: 50, scrollToFirstRowOnChange }}#108ee9\n                    scroll\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportServiceRepairComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { BookOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee, getStatus } from \"../../../app/Helpers\";\nimport * as ReportServiceRepairActions from \"../Store/ReportServiceRepairActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport ReportServiceRepairComponent from \"../Component/ReportServiceRepairComponent\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport moment from \"moment\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\n\n\nconst ReportServiceRepairContainer = (props) => {\n  const {\n    handlePressAddNew,\n    serviceRepair: { listServiceRepair, paging },\n    branch: { listBranch },\n    serviceRepairFormValues,\n    getListServiceRepair,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listServiceRepair.length > 0) {\n    listServiceRepair.map((item, index) => {\n      listServiceRepair[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<BookOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type ? type.toUpperCase() : \"-\"}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) => {\n        if (units) {\n          return units.map((unit) => (\n            <Text>\n              {unit.unit_model_name}\n              {units.length <= 1 ? \"\" : \", \"}\n            </Text>\n          ));\n        }\n        return <Text>{\"-\"}</Text>;\n      },\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due.length - b.due.length,\n      render: (due) => (\n        <Text>{due ? moment(due).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = getStatus(status).color;\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status ? getStatus(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"start\",\n      key: \"start\",\n      width: 500,\n      render: (start) => (\n        <Text>{start ? moment(start).format(\"YYYY-MM-DD\") : \"0000-00-00\"}</Text>\n      ),\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: 200,\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListServiceRepair(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportServiceRepairActions.handleSearch(serviceRepairFormValues);\n  };\n\n  return (\n    <ReportServiceRepairComponent\n      headers={headers}\n      listServiceRepair={listServiceRepair}\n      handlePressAddNew={handlePressAddNew}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  serviceRepair: state.serviceRepair,\n  branch: state.branch,\n  serviceRepairFormValues: getFormValues(\"serviceRepairForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServiceRepair: (page, limit, keyword, branch, from, until) =>\n    ReportServiceRepairActions.getServiceRepairListDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      from,\n      until\n    ),\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportServiceRepairContainer);\n\nexport default reduxForm({\n  form: \"serviceRepairForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportEmployeeComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Karyawan</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportEmployeeActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportEmployeeComponent\";\n\nconst ReportEmployeeContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportEmployeeContainer);\n\nexport default reduxForm({\n  form: \"reportEmployeeForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Badge, Divider, Input, Table } from \"antd\";\nimport { calculateColumnsWidth, categoryServices } from \"../../../app/Helpers\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst ListServiceComponent = (props) => {\n  const {\n    headers,\n    listServices,\n    enumType,\n    enumStatus,\n    onChangePagination,\n    paging,\n    onSearch,\n    columns,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  // const tableHeight = 500;\n  // const maxWidthPerCell = 600;\n\n  // This helper function helps to calculate the width for each column\n  // based on all table cells - column cell and source cell\n  // const dataTable = calculateColumnsWidth(\n  //   columns,\n  //   listServices,\n  //   maxWidthPerCell\n  // );\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">List Service</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row d-flex mb-2\">\n                      {/* This Filter */}\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumType ?? []}\n                          name=\"typeService\"\n                          label=\"Filter Tipe\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                      <div class=\"col-md-6\">\n                        <CSelect\n                          data={enumStatus ?? []}\n                          name=\"statusService\"\n                          label=\"Filter Status\"\n                          placeholder=\"- Tampilkan Semua -\"\n                        />\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listServices}\n                    size={\"middle\"}\n                    pagination={{\n                      size: 3,\n                      pageSizeOptions: [\"10\", \"20\", \"50\"],\n                      showSizeChanger: true,\n                      ...pagination,\n                    }}\n                    // scroll={{ x: dataTable.tableWidth, y: tableHeight }}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ListServiceComponent;\n","import React from \"react\";\nimport { Space, Tag } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeExternalServices,\n  getIndex,\n  isBlockedRoleListService,\n  SelectStatusServices,\n} from \"../../../app/Helpers\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListServicesComponent from \"../Component/ListServicesComponent\";\nimport * as ListServiceActions from \"../Store/ListServicesActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport moment from \"moment\";\n\nconst ListServicesContainer = (props) => {\n  const {\n    user: { roles },\n    getListServices,\n    handlePressEdit,\n    handlePressDelete,\n    services: { listServices, paging },\n    listServiceFormValues,\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n  const { page, limit, totalPage } = paging;\n\n  if (listServices.length > 0) {\n    listServices.map((item, index) => {\n      listServices[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      {roles[0].name === \"Administrator\" && (\n        <CButtonAntd\n          onClick={() => handlePressDelete(record.id)}\n          type=\"primary\"\n          icon={<DeleteOutlined />}\n          size=\"middle\"\n          danger\n        />\n      )}\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  // const columns = [\n  //   { dataIndex: \"no\", title: \"No\" },\n  //   { dataIndex: \"type\", title: \"Tipe\" },\n  //   { dataIndex: \"customer_name\", title: \"Customer\" },\n  //   { dataIndex: \"employees\", title: \"Teknisi\" },\n  //   { dataIndex: \"unit_models\", title: \"Unit\" },\n  //   { dataIndex: \"due\", title: \"Due Date\" },\n  //   { dataIndex: \"status\", title: \"Status\" },\n  //   { dataIndex: \"created_date\", title: \"Dibuat\" },\n  //   { dataIndex: \"action\", title: \"Aksi\", fixed: \"right\" },\n  // ];\n\n  // const source = listServices.map((service) => ({\n  //   no: service.no,\n  //   type: service.type,\n  //   customer_name: service.customer_name,\n  //   unit_models: service.unit_models,\n  //   due: service.due,\n  //   status: service.status,\n  //   created_date: service.created_date,\n  //   action: service.actions,\n  // }));\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"15%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"employees\",\n      render: (employees) =>\n        employees.map((employee) => (\n          <Text>\n            {employee.employee_name}\n            {employees.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"employees\",\n      width: \"15%\",\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Due Date\",\n      dataIndex: \"due\",\n      key: \"due\",\n      width: \"15%\",\n      sorter: (a, b) => a.due - b.due,\n      render: (due) => {\n        return <Text>{moment(due).format(\"YYYY-MM-DD\")}</Text>;\n      },\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#54BAB9\";\n        return (\n          <Tag\n            style={{ width: 90, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n      width: \"15%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n      fixed: \"right\",\n    },\n  ];\n\n  const checkBlockedRole = () => {\n    getListServices(page, limit);\n\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleListService(roleId);\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    checkBlockedRole();\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ListServiceActions.setPagingListService(paging));\n    getListServices(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    ListServiceActions.handleSearch(1, 10, val, listServiceFormValues);\n  };\n\n  return (\n    <ListServicesComponent\n      headers={headers}\n      listServices={listServices}\n      renderActionTable={renderActionTable}\n      handlePressEdit={handlePressEdit}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      enumType={enumTypeExternalServices}\n      enumStatus={SelectStatusServices}\n      // columns={columns}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  listServiceFormValues: getFormValues(\"listServices\")(state),\n  user: state.auth.userDetail,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListServices: (page, limit, keyword, filterValues) => {\n    ListServiceActions.getListServicesRequested(\n      page,\n      limit,\n      keyword,\n      filterValues\n    );\n  },\n  handlePressEdit: async (value) => ListServiceActions.handlePressEdit(value),\n  handlePressDelete: async (jobServiceId) => {\n    await dispatch(ListServiceActions.setSelectedJobServiceId(jobServiceId));\n    ListServiceActions.deleteJobServiceRequested(jobServiceId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListServicesContainer);\n\nexport default reduxForm({\n  form: \"listServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Table } from \"antd\";\nimport Highlighter from \"react-highlight-words\";\nimport { SearchOutlined } from \"@ant-design/icons\";\n\nconst CTableAntd = (props) => {\n  const { data, headers, renderActions, size, pagination, id } = props;\n\n  const [searchText, setSearchText] = React.useState(\"\");\n  const [searchedColumn, setSearchedColumn] = React.useState(\"\");\n  const searchInput = React.useRef();\n\n  const getColumnSearchProps = (dataIndex) => ({\n    filterIcon: (filtered) => (\n      <SearchOutlined style={{ color: filtered ? \"#1890ff\" : undefined }} />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ? record[dataIndex]\n            .toString()\n            .toLowerCase()\n            .includes(value.toLowerCase())\n        : \"\",\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => searchInput.current.select(), 100);\n      }\n    },\n    render: (text) =>\n      searchedColumn === dataIndex ? (\n        <Highlighter\n          highlightStyle={{ backgroundColor: \"#ffc069\", padding: 0 }}\n          searchWords={[searchText]}\n          autoEscape\n          textToHighlight={text ? text.toString() : \"\"}\n        />\n      ) : (\n        text\n      ),\n  });\n\n  const handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    setSearchText(selectedKeys[0]);\n    setSearchedColumn(dataIndex);\n  };\n\n  const handleReset = (clearFilters) => {\n    clearFilters();\n    setSearchText(\"\");\n  };\n\n  const columns = [];\n  headers.map((item, index) => {\n    columns.push({\n      title: item.title,\n      dataIndex: item.dataIndex,\n      key: item.dataIndex,\n      width: item.width ?? \"30%\",\n      sorter: item.sorter,\n      render: item.render,\n      sortDirections: [\"descend\", \"ascend\"],\n      ...getColumnSearchProps(item.dataIndex),\n    });\n  });\n\n  if (renderActions) {\n    columns.push({\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActions,\n    });\n  }\n\n  return (\n    <Table\n      bordered\n      id={id ?? \"my-table-customize\"}\n      columns={columns}\n      dataSource={data}\n      size={size ?? \"middle\"}\n      pagination={{\n        size: 3,\n        pageSizeOptions: [\"10\", \"20\", \"50\"],\n        showSizeChanger: true,\n        ...pagination,\n      }}\n      // {...props}\n    />\n  );\n};\n\nCTableAntd.propTypes = {\n  data: PropTypes.array,\n  headers: PropTypes.array,\n  renderActions: PropTypes.any,\n};\n\nexport default CTableAntd;\n","import { Modal } from \"antd\";\nimport React from \"react\";\n\ninterface IProps {\n  visible: boolean;\n  content: any;\n  footer: any;\n  onCancel: any;\n  width: any;\n}\n\nconst CModal: React.FC<IProps> = (props) => {\n  // const showModal = () => {\n  //   setVisible(true)\n  // };\n\n  // const handleOk = () => {\n  //   setLoading(true)\n  //   setTimeout(() => {\n  //     setLoading(false)\n  //     setVisible(false)\n  //   }, 3000);\n  // };\n\n  return (\n    <Modal\n      visible={props.visible}\n      footer={props.footer}\n      destroyOnClose\n      onCancel={props.onCancel}\n      width={props.width ? props.width : 600}\n    >\n      {props.content}\n    </Modal>\n  );\n};\n\nexport default CModal;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"username\"\n            label=\"Username\"\n            placeholder=\"\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"fullname\"\n            label=\"Nama Lengkap\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"password\"\n            label=\"Password\"\n            component={CInput}\n            type=\"password\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AdminModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default AdminModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport AdminModalComponent from \"../Component/AdminModalComponent\";\n\nconst AdminModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    admins: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  return (\n    <AdminModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    AdminActions.saveAdminRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AdminModalContainer);\n\nexport default reduxForm({\n  form: \"editAdminForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport AdminModalContainer from \"../Container/AdminModalContainer\";\n\nconst { Search } = Input;\n\nconst AdminComponent = (props) => {\n  const {\n    headers,\n    listAdmin,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Admin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Admin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listAdmin}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AdminModalContainer />\n    </div>\n  );\n};\n\nexport default AdminComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as AdminActions from \"../Store/AdminActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport AdminComponent from \"../Component/AdminComponent\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListAdmin,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    admins: { listAdmin, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listAdmin.length > 0) {\n    listAdmin.map((item, index) => {\n      listAdmin[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"10%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Username\",\n      dataIndex: \"username\",\n      key: \"username\",\n      width: \"30%\",\n      sorter: (a, b) => a.username.length - b.username.length,\n    },\n    {\n      title: \"Nama Lengkap\",\n      dataIndex: \"fullname\",\n      key: \"fullname\",\n      width: \"30%\",\n      sorter: (a, b) => a.fullname.length - b.fullname.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListAdmin(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(AdminActions.setPagingAdmin(paging));\n    getListAdmin(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListAdmin(page, limit, val);\n  };\n\n  return (\n    <AdminComponent\n      headers={headers}\n      listAdmin={listAdmin}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListAdmin: (page, limit, keyword) =>\n    AdminActions.getListAdminRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(AdminActions.setSelectedAdminData({}));\n    await dispatch(AdminActions.setSelectedAdminId(\"\"));\n    dispatch(AdminActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    AdminActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(AdminActions.setFormStatus(\"edit\"));\n    await dispatch(AdminActions.setSelectedAdminId(record.id));\n    await dispatch(AdminActions.setSelectedAdminData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await AdminActions.mapDetailAdminToForm();\n  },\n  handlePressDelete: async (adminId) => {\n    await dispatch(AdminActions.setSelectedAdminId(adminId));\n    AdminActions.deleteAdminRequested(adminId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"adminForm\",\n})(EnhanceContainer);\n","import React from \"react\";\n\nconst NotFound = (props) => {\n  return (\n    // <div class=\"main-wrapper\">\n    //   <div class=\"page-wrapper full-page\">\n    <div class=\"page-content d-flex align-items-center justify-content-center\">\n      <div class=\"row w-100 mx-0 auth-page\">\n        <div class=\"col-md-8 col-xl-6 mx-auto d-flex flex-column align-items-center\">\n          <img\n            src=\"../../../assets/images/404.svg\"\n            class=\"img-fluid mb-2\"\n            alt=\"404\"\n          />\n          <h1 class=\"font-weight-bold mb-22 mt-2 tx-80 text-muted\">404</h1>\n          <h4 class=\"mb-2\">Page Not Found</h4>\n          <h6 class=\"text-muted mb-3 text-center\">\n            Oopps!! The page you were looking for doesn't exist.\n          </h6>\n          <a href=\"/dashboard\" class=\"btn btn-primary\">\n            Back to home\n          </a>\n        </div>\n      </div>\n    </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport history from \"./History\";\nimport { connect } from \"react-redux\";\nimport { createStructuredSelector } from \"reselect\";\nimport * as Selectors from \"../modules/Auth/Selector/AuthSelector\";\nimport ConfigAxios from \"./axios/ConfigAxios\";\n\nconst AuthMiddleware = (ComposedComponent) => {\n  const returnData = (props) => {\n    const { isAuthenticated, redirect } = props;\n\n    if (!isAuthenticated) {\n      redirect();\n    } else {\n      ConfigAxios.defaults.headers[\n        \"Authorization\"\n      ] = `Bearer ${isAuthenticated}`;\n    }\n\n    return (\n      <div>{isAuthenticated ? <ComposedComponent {...props} /> : null}</div>\n    );\n  };\n\n  const mapStateToProps = createStructuredSelector({\n    isAuthenticated: Selectors.Token(),\n  });\n  const mapDispatchToProps = (dispatch) => ({\n    redirect: () => history.push(\"/auth\"),\n  });\n  return connect(mapStateToProps, mapDispatchToProps)(returnData);\n};\n\nexport default AuthMiddleware;\n","import React from \"react\";\n\ninterface IProps {\n  type:\n    | \"primary\"\n    | \"danger\"\n    | \"warning\"\n    | \"info\"\n    | \"success\"\n    | \"secondary\"\n    | \"light\"\n    | \"dark\";\n}\n\nconst CBadgeText: React.FC<IProps> = (props) => {\n  return <span className={`badge badge-${props.type}`}>{props.children}</span>;\n};\n\nexport default CBadgeText;\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumEmployee }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Teknisi</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <CSelect\n            showSearch\n            data={enumEmployee}\n            name=\"employee\"\n            label=\"Pilih Teknisi\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst AddEmployeeModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    handleCancel,\n    enumEmployee,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          enumEmployee={enumEmployee}\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n        />\n      }\n    />\n  );\n};\n\nexport default AddEmployeeModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateServiceEmployeeForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport AddEmployeeModalComponent from \"../Component/AddEmployeeModalComponent\";\n\nconst AddEmployeeModalContainer = (props) => {\n  const {\n    handleCancel,\n    services: { selectedJobService },\n    component: { isModalVisible },\n    employees: { listEmployees },\n    valid,\n  } = props;\n\n  const SelectEmployee = [];\n  listEmployees.map((item, index) => {\n    SelectEmployee.push({\n      id: `employee-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      const employee = values.employee.split(\"|\");\n      DetailServiceTransactionAction.handleAddNewEmployeeService(\n        selectedJobService.id,\n        employee[0]\n      );\n    } else {\n    }\n  };\n\n  return (\n    <AddEmployeeModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      enumEmployee={SelectEmployee}\n      submitForm={submitForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(AddEmployeeModalContainer);\n\nexport default reduxForm({\n  form: \"serviceEmployeeForm\",\n  validate: validateServiceEmployeeForm,\n})(EnhanceContainer);\n","export const Themes = {\n  success: \"#17B794\",\n  error: \"#f50\",\n  warning: \"#FEC260\",\n  secondary: \"#A5A5A5\",\n};\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"reason\"\n            label=\"Alasan Reject\"\n            component={CInput}\n            typeComponent=\"textarea\"\n            placeholder=\"Masukan alasan reject\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst RejectedModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RejectedModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRejected, validateFormRoles } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionActions from \"../Store/DetailServiceTransactionAction\";\nimport RejectedModalComponent from \"../Component/RejectedModalComponent\";\n\nconst RejectedModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { rejectionsModal },\n    services: { selectedJobService },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(selectedJobService.id, values);\n    } else {\n    }\n  };\n\n  return (\n    <RejectedModalComponent\n      isModalVisible={rejectionsModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formName={\"Alasan Reject\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  detailService: state.detailService,\n  masters: state.masters,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionActions.setRejectionsModal(false)),\n\n  handleSubmitForm: (jobId, values) => {\n    DetailServiceTransactionActions.handlePressRejectedRequested(jobId, values);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RejectedModalContainer);\n\nexport default reduxForm({\n  form: \"editRejecetdForm\",\n  validate: validateFormRejected,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, InputNumber, Row, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumWarranty, warrantyMonths } from \"../../../app/Helpers\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">Ubah Service</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={enumWarranty}\n              name=\"warranty\"\n              label=\"Warranty\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-7\">\n            <CSelect\n              // onChange={(val) => onChangeProvince(val)}\n              data={warrantyMonths()}\n              name=\"warrantyMonths\"\n              label=\"Warranty Months\"\n            />\n          </div>\n          <div class=\"col-md-5\">\n            <Field\n              name=\"warrantyYears\"\n              label=\"Warranty Year\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"jobPerform\"\n              label=\"Job Perform\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalTransactionComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalTransactionComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTransaction } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\nimport EditModalTransactionComponent from \"../Component/EditModalTransactionComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editTransactionModal },\n    masters: { listMenu },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      // handleSubmitForm(\"edit\", values, menuSelected);\n      DetailServiceTransactionAction.handlePressEditRequested(values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <EditModalTransactionComponent\n      isModalVisible={editTransactionModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditTransactionModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) => {},\n  // DetailServiceTransactionAction.saveRoleRequested(\n  //   type,\n  //   values,\n  //   menuSelected\n  // ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editTransactionForm\",\n  validate: validateFormTransaction,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Divider, InputNumber, Row, Typography } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport { CheckOutlined, CloseOutlined } from \"@ant-design/icons\";\nimport { enumWarranty, warrantyMonths } from \"../../../app/Helpers\";\n\nconst RenderFooter = ({ handleSaveForm, handleClose }) => {\n  return [\n    <CButtonAntd\n      icon={<CloseOutlined />}\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleClose}\n      danger\n    >\n      Tutup\n    </CButtonAntd>,\n    <CButtonAntd\n      key=\"submit\"\n      icon={<CheckOutlined />}\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const { data, defaultValuesMenu, onChangeRoleMenu } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n  handleCancel,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <Divider orientation=\"left\">Ubah Catatan Teknisi</Divider>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"title\"\n              label=\"Judul\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"startDate\" label=\"Tanggal Mulai\" />\n          </div>\n          <div class=\"col-md-4\">\n            <CDatePicker name=\"endDate\" label=\"Tanggal Akhir\" />\n          </div>\n        </div>\n        <div class=\"row mt-2\">\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              // placeholder=\"\"\n              component={CInput}\n              typeComponents=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst EditModalDailiesComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={\n        <RenderFooter\n          handleSaveForm={handleSubmit}\n          handleClose={handleCancel}\n        />\n      }\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default EditModalDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTransaction } from \"../../../app/validateForm\";\nimport * as DetailServiceTransactionAction from \"../Store/DetailServiceTransactionAction\";\n\nimport EditModalDailiesComponent from \"../Component/EditModalDailiesComponent\";\n\nconst EditModalDailiesContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    detailService: { editDailiesModal },\n    masters: { listMenu },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      DetailServiceTransactionAction.handlePressEditDailiesRequested(values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <EditModalDailiesComponent\n      isModalVisible={editDailiesModal}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumMenu={SelectMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n  detailService: state.detailService,\n  services: state.services,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () =>\n    dispatch(DetailServiceTransactionAction.setEditDailiesModal(false)),\n  handleClearModalContent: () => {\n    // dispatch(DetailServiceTransactionAction.setSelectedRoleMenu([]));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EditModalDailiesContainer);\n\nexport default reduxForm({\n  form: \"editDailiesForm\",\n  validate: validateFormTransaction,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Button, Tabs } from \"antd\";\nimport { Typography } from \"antd\";\nimport CBadgeText from \"../../../components/CBadgeText/CBadgeText\";\nimport moment from \"moment\";\nimport AddEmployeeModalContainer from \"../Container/AddEmployeeModalContainer\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n  EditOutlined,\n  CheckCircleOutlined,\n  CloseCircleOutlined,\n} from \"@ant-design/icons\";\nimport { Themes } from \"../../../property/colors\";\nimport RejectedModalContainer from \"../Container/RejectedModalContainer\";\nimport EditModalTransactionContainer from \"../Container/EditModalTransactionContainer\";\nimport EditModalDailiesContainer from \"../Container/EditModalDailiesContainer\";\n// import ReactToPrint from \"react-to-print\";\n// import ServiceReportPdfPrint from \"./ServiceReportPdfPrint\";\n\nconst { Text } = Typography;\nconst { TabPane } = Tabs;\n\n// const pageStyle = `\n//   @page {\n//     size: 80mm 50mm;\n//   }\n\n//   @media all {\n//     .pagebreak {\n//       display: none;\n//     }\n//   }\n\n//   @media print {\n//     .pagebreak {\n//       page-break-before: always;\n//     }\n//   }\n// `;\n\nconst DetailServiceTransactionComponent = (props) => {\n  const {\n    data,\n    TabPanel,\n    onChangeTab,\n    handlePressGeneratePdf,\n    goBack,\n    handlePressActions,\n    handlePressEdit,\n    // medias,\n    // checklist,\n    // employees,\n    // dailies,\n    // summary,\n  } = props;\n  // let componentRef = React.useRef();\n\n  const RenderButtonAction = ({ status }) => {\n    let button;\n    switch (status.toLowerCase()) {\n      case \"completed\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"approved\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Approve\n            </CButtonAntd>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"rejected\")}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"approved\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              onClick={() => handlePressActions(data.id, \"finished\")}\n              type=\"primary\"\n              icon={<CheckCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.success}\n            >\n              Finished\n            </CButtonAntd>\n          </>\n        );\n        break;\n      case \"finished\":\n        button = (\n          <>\n            <div class=\"ml-3\" />\n            <CButtonAntd\n              // onClick={handlePressAddNew}\n              type=\"primary\"\n              icon={<CloseCircleOutlined />}\n              size=\"middle\"\n              backgroundColor={Themes.warning}\n            >\n              Reject\n            </CButtonAntd>\n          </>\n        );\n        break;\n\n      default:\n        return <div />;\n    }\n    return button;\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"col-md-12 grid-margin stretch-card\">\n          <div class=\"card\">\n            <div class=\"card-body\">\n              <div class=\"row align-items-center justify-content-between\">\n                <div>\n                  <h6 class=\"card-title\">Detail Transaksi</h6>\n                </div>\n                <div class=\"row mb-3 ml-2 mr-2\">\n                  <CButtonAntd\n                    onClick={goBack}\n                    type=\"primary\"\n                    icon={<ArrowLeftOutlined />}\n                    size=\"middle\"\n                    danger\n                  >\n                    Kembali\n                  </CButtonAntd>\n                  <div class=\"ml-3\" />\n                  {data.status.toLowerCase() !== \"approved\" && (\n                    <CButtonAntd\n                      onClick={handlePressEdit}\n                      type=\"primary\"\n                      icon={<EditOutlined />}\n                      size=\"middle\"\n                    >\n                      Ubah\n                    </CButtonAntd>\n                  )}\n                  <RenderButtonAction status={data.status} />\n                  <div class=\"mr-3\" />\n                  {/* button to trigger printing of target component */}\n                  <CButtonAntd\n                    onClick={handlePressGeneratePdf}\n                    type=\"primary\"\n                    icon={<FilePdfOutlined />}\n                    size=\"middle\"\n                  >\n                    Cetak Formulir\n                  </CButtonAntd>\n                  {/* <ReactToPrint\n                    fonts={[\n                      {\n                        name: \"'Courier Prime', monospace\",\n                        url: \"https://fonts.googleapis.com/css2?family=Courier+Prime&display=swap\",\n                      },\n                    ]}\n                    pageStyle={pageStyle}\n                    trigger={() => (\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Formulir\n                      </CButtonAntd>\n                    )}\n                    content={() => componentRef}\n                  /> */}\n                </div>\n              </div>\n              <div\n                id=\"header-detail-transaction\"\n                class=\"d-flex justify-content-between align-items-baseline\"\n              >\n                <div class=\"col-md-6\">\n                  <Text>Tipe : </Text>\n                  <CBadgeText type={data.is_external ? \"success\" : \"info\"}>\n                    {data.type ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Unit : </Text>\n                  <Text>{data.unit ?? \"-\"}</Text>\n                  <br />\n                  <Text>Model (SN) : </Text>\n                  <Text>{data.model ?? \"-\"}</Text>\n                  <br />\n                  <Text>Job Forms : </Text>\n                  <Text>{data.job_form_name ?? \"-\"}</Text>\n                  <br />\n                  <Text>Customer : </Text>\n                  <Text strong>{data.customer_name}</Text>\n                  <br />\n                  <Text>Warranty : </Text>\n                  <Text strong>\n                    {data.warranty ? \"Warranty\" : \"No Warranty\"}\n                  </Text>\n                  <br />\n                  <Text>PIC : </Text>\n                  <Text strong>{data.customer_pic_name ?? \"()\"}</Text>\n                </div>\n                <div class=\"col-md-6\">\n                  <Text>Status Transaksi : </Text>\n                  <CBadgeText\n                    type={\n                      data.status.toLowerCase() === \"draft\"\n                        ? \"warning\"\n                        : \"success\"\n                    }\n                  >\n                    {data.status ?? \"-\"}\n                  </CBadgeText>\n                  <br />\n                  <Text>Job Perform : </Text>\n                  <Text strong>{data.job_perform}</Text>\n                  <br />\n                  <Text>Start - Due : </Text>\n                  <Text strong>{`${moment(data.start).format(\n                    \"DD-MMM-YYYY\"\n                  )} - ${moment(data.due).format(\"DD-MMM-YYYY\")}`}</Text>\n\n                  <br />\n                  <Text>Dibuat : </Text>\n                  <Text strong>{data.created_date}</Text>\n                  <br />\n                  <Text>Lokasi : </Text>\n                  <Text strong>{data.location ?? \"-\"}</Text>\n                </div>\n                <div class=\"col-md-4\"></div>\n              </div>\n\n              <div class=\"ml-2 mt-3\">\n                <Tabs defaultActiveKey=\"1\" onChange={onChangeTab}>\n                  {TabPanel.map((item, index) => (\n                    <TabPane\n                      tab={\n                        <span>\n                          {item.icon}\n                          {item.title}\n                        </span>\n                      }\n                      key={item.key}\n                    >\n                      {item.component}\n                    </TabPane>\n                  ))}\n                </Tabs>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <AddEmployeeModalContainer />\n      <RejectedModalContainer />\n      <EditModalTransactionContainer />\n      <EditModalDailiesContainer />\n      {/* component to be printed */}\n      {/* <div style={{ display: \"none\", width: \"100%\", flex: 1 }}>\n        <ServiceReportPdfPrint\n          ref={(el) => (componentRef = el)}\n          data={data}\n          medias={medias}\n          checklist={checklist}\n          employees={employees}\n          dailies={dailies}\n          summary={summary}\n        />\n      </div> */}\n    </div>\n  );\n};\n\nexport default DetailServiceTransactionComponent;\n","import React from \"react\";\nimport { Card, Typography, Col, Row, Image } from \"antd\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  CheckCircleOutlined,\n} from \"@ant-design/icons\";\n\nconst { Meta } = Card;\nconst { Text } = Typography;\n\nconst RenderDescription = ({\n  data,\n  handlePressNonactive,\n  handlePressActive,\n}) => {\n  return (\n    <div>\n      <hr />\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Nik</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.nik}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Telepon</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.phone}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Alamat</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong style={{ fontSize: 12 }}>\n            {data.address}\n          </Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#FFFFFF\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Tanggal Mulai</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <Text strong>{data.created_date}</Text>\n        </div>\n      </Row>\n      <Row style={{ backgroundColor: \"#F6F7FA\", padding: 4 }}>\n        <div class=\"col-md-5\">\n          <Text>Status</Text>\n        </div>\n        <div class=\"col-md-1\">:</div>\n        <div class=\"col-md-6\">\n          <CBadgeText type={data.active ? \"success\" : \"danger\"}>\n            {data.active ? \"Aktif\" : \"Tidak Aktif\"}\n          </CBadgeText>\n        </div>\n      </Row>\n      <div class=\"mt-3\">\n        {data.active ? (\n          <CButtonAntd\n            onClick={handlePressNonactive}\n            type=\"primary\"\n            icon={<DeleteOutlined />}\n            size=\"middle\"\n            danger\n          >\n            Non-Aktifkan Teknisi\n          </CButtonAntd>\n        ) : (\n          <CButtonAntd\n            onClick={handlePressActive}\n            type=\"primary\"\n            icon={<CheckCircleOutlined />}\n            size=\"middle\"\n          >\n            Aktifkan teknisi\n          </CButtonAntd>\n        )}\n      </div>\n    </div>\n  );\n};\n\nconst TabPanelEmployeeComponent = (props) => {\n  const {\n    employees,\n    handlePressAddNew,\n    handlePressNonactive,\n    jobId,\n    handlePressActive,\n  } = props;\n  return (\n    <div class=\"page-content\">\n      <Row style={{ marginLeft: 16 }}>\n        <CButtonAntd\n          onClick={handlePressAddNew}\n          type=\"primary\"\n          icon={<PlusOutlined />}\n          size=\"middle\"\n        >\n          Tambah Teknisi\n        </CButtonAntd>\n      </Row>\n      <Row>\n        {employees.map((item, index) => {\n          return (\n            <Col style={{ margin: 16 }} key={`employee-${index}`}>\n              <Text strong>{`Teknisi-${index + 1}`}</Text>\n              <Card\n                style={{ width: 350, marginTop: 8 }}\n                cover={\n                  <Image\n                    alt=\"example\"\n                    src={\n                      item.photo ??\n                      \"https://gw.alipayobjects.com/zos/rmsportal/JiqGstEfoWAOHiTxclqi.png\"\n                    }\n                    width=\"100%\"\n                    height={200}\n                  />\n                }\n              >\n                <Meta\n                  title={item.name}\n                  description={\n                    <RenderDescription\n                      data={item}\n                      handlePressNonactive={() =>\n                        handlePressNonactive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                      handlePressActive={() =>\n                        handlePressActive(\n                          jobId,\n                          item.employee_service_id,\n                          item.id\n                        )\n                      }\n                    />\n                  }\n                />\n              </Card>\n            </Col>\n          );\n        })}\n      </Row>\n    </div>\n  );\n};\n\nexport default TabPanelEmployeeComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport TabPanelEmployeeComponent from \"../../Component/TabPanel/TabPanelEmployeeComponent\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DetailServiceTransactionActions from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelEmployeeContainer = (props) => {\n  const {\n    services: { selectedJobService },\n  } = props;\n  return <TabPanelEmployeeComponent jobId={selectedJobService.id} {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  component: state.component,\n  masters: state.masters,\n  services: state.services,\n  detailService: state.detailService,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressAddNew: () => {\n    dispatch(ComponentActions.setGlobalModal(true));\n  },\n  handlePressNonactive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      false\n    ),\n  handlePressActive: (jobId, employeeServiceId, employeeId) =>\n    DetailServiceTransactionActions.setStatusEmployee(\n      jobId,\n      employeeServiceId,\n      employeeId,\n      true\n    ),\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelEmployeeContainer);\n","import React from \"react\";\nimport { Typography, Row, Empty, Divider, Col } from \"antd\";\nimport { FileOutlined } from \"@ant-design/icons\";\n\nconst { Paragraph } = Typography;\n\nconst RenderItemSummary = ({ summary, index }) => {\n  return summary.length > 0 ? (\n    summary.map((item, indexText) => (\n      <Typography key={`item-summary${index}-text-${indexText}`}>\n        {item}\n      </Typography>\n    ))\n  ) : (\n    <Typography>Summary belum ada</Typography>\n  );\n};\n\nconst TabPanelSummaryComponent = (props) => {\n  const { summaryArr } = props;\n\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <FileOutlined />\n        <Typography style={{ marginLeft: 5 }}>Laporan Akhir</Typography>\n      </Row>\n      <hr />\n      <Row gutter={[16, 16]}>\n        {summaryArr.length > 0 ? (\n          summaryArr.map((item, index) => (\n            <Col key={`col-unit-${index}`} span={12}>\n              <div class=\"card p-2\">\n                <Divider\n                  style={{\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                    textTransform: \"uppercase\",\n                  }}\n                  plain\n                >{`Unit ${item.unitName}`}</Divider>\n                <RenderItemSummary index={index} summary={item.summary} />\n              </div>\n            </Col>\n          ))\n        ) : (\n          <div>\n            <Empty />\n          </div>\n        )}\n      </Row>\n    </div>\n  );\n};\n\nexport default TabPanelSummaryComponent;\n","import React from \"react\";\nimport TabPanelSummaryComponent from \"../../Component/TabPanel/TabPanelSummaryComponent\";\n\nconst TabPanelSummaryContainer = (props) => {\n  const { summary } = props;\n  const [summaryArr, setSummaryArr] = React.useState([]);\n\n  React.useEffect(() => {\n    const summaryMapping = [];\n\n    summary.map((item, index) => {\n      const summaryText = item.summary;\n      const splitSummary = summaryText.split(\"\\n\");\n      summaryMapping.push({ unitName: item.unitName, summary: splitSummary });\n    });\n    setSummaryArr(summaryMapping);\n  }, [summary]);\n\n  return <TabPanelSummaryComponent summaryArr={summaryArr} {...props} />;\n};\n\nexport default TabPanelSummaryContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Card, Col, Image, Divider } from \"antd\";\nimport { CameraOutlined } from \"@ant-design/icons\";\n\nconst { Meta } = Card;\n\nconst RenderImage = ({ medias, unit }) => {\n  return medias.map((item, index) => {\n    return (\n      <Col\n        style={{\n          marginLeft: 10,\n          marginRight: 10,\n        }}\n      >\n        <Card\n          hoverable\n          style={{ width: 240, height: 200 }}\n          cover={<Image width={\"100%\"} height={150} src={item.path} />}\n        >\n          <Meta\n            style={{ marginTop: -10 }}\n            title={`Gambar Penting ${index + 1}`}\n          />\n        </Card>\n      </Col>\n    );\n  });\n};\n\nconst TabPanelImagesComponent = (props) => {\n  const { medias } = props;\n\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <CameraOutlined />\n        <Typography style={{ marginLeft: 5 }}>Media</Typography>\n      </Row>\n      <hr />\n      {medias && medias.length > 0 ? (\n        medias.map((item, index) => (\n          <div>\n            <Divider\n              style={{\n                textTransform: \"uppercase\",\n                fontSize: 12,\n                fontWeight: \"bold\",\n              }}\n              plain\n            >{`Unit ${item.unitName}`}</Divider>\n            <Row>\n              <RenderImage medias={item.image} unit={item.unitName} />\n            </Row>\n          </div>\n        ))\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelImagesComponent;\n","import React from \"react\";\nimport TabPanelImagesComponent from \"../../Component/TabPanel/TabPanelImagesComponent\";\n\nconst TabPanelImagesContainer = (props) => {\n  return <TabPanelImagesComponent {...props} />;\n};\n\nexport default TabPanelImagesContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table, Space } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst RenderDailies = ({ dailies, handlePressEdit }) => {\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"karyawan\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"deskripsi\",\n    },\n    {\n      title: \"Mulai\",\n      dataIndex: \"mulai\",\n    },\n    {\n      title: \"Selesai\",\n      dataIndex: \"selesai\",\n    },\n    {\n      title: \"Jam\",\n      dataIndex: \"jam\",\n    },\n  ];\n  columns.push({\n    align: \"center\",\n    title: \"Aksi\",\n    key: \"action\",\n    width: \"10%\",\n    render: renderActionTable,\n  });\n  const data = [];\n  dailies.map((item, index) => {\n    data.push({\n      key: index,\n      id: item.id,\n      karyawan: item.employee_name,\n      title: item.title,\n      deskripsi: item.description,\n      mulai: moment(item.daily_start).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      selesai: moment(item.daily_end).format(\"DD-MMM-YYYY HH:mm:ss\"),\n      jam: item.hours,\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelDailiesComponent = (props) => {\n  const { dailies, handlePressEdit } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Catatan</Typography>\n      </Row>\n      <hr />\n      {dailies && dailies.length > 0 ? (\n        <RenderDailies dailies={dailies} handlePressEdit={handlePressEdit} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelDailiesComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport TabPanelDailiesComponent from \"../../Component/TabPanel/TabPanelDailiesComponent\";\nimport {\n  mapDailiesToForm,\n  setEditDailiesModal,\n  setSelectedEditDailiesData,\n} from \"../../Store/DetailServiceTransactionAction\";\n\nconst TabPanelDailiesContainer = (props) => {\n  return <TabPanelDailiesComponent {...props} />;\n};\n\nconst mapStateToProps = (state) => ({\n  // dailies: state.dailies,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressEdit: async (values) => {\n    await dispatch(setSelectedEditDailiesData(values));\n    store.dispatch(setEditDailiesModal(true));\n    mapDailiesToForm();\n  },\n  handlePressCancel: () => {\n    store.dispatch(setEditDailiesModal(false));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(TabPanelDailiesContainer);\n\nexport default EnhanceContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderHistories = ({ histories }) => {\n  const columns = [\n    {\n      title: \"Karyawan\",\n      dataIndex: \"user_name\",\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  histories.map((item, index) => {\n    data.push({\n      key: index,\n      user_name: item.user_name,\n      title: item.title,\n      description: item.description,\n      created_date: moment(item.created_date).format(\"DD-MMM-YYYY\"),\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelHistoriesComponent = (props) => {\n  const { histories } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Riwayat</Typography>\n      </Row>\n      <hr />\n      {histories.length > 0 ? (\n        <RenderHistories histories={histories} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelHistoriesComponent;\n","import React from \"react\";\nimport TabPanelHistoriesComponent from \"../../Component/TabPanel/TabPanelHistoriesComponent\";\n\nconst TabPanelHistoriesContainer = (props) => {\n  return <TabPanelHistoriesComponent {...props} />;\n};\n\nexport default TabPanelHistoriesContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Table } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport moment from \"moment\";\n\nconst RenderDailies = ({ rejections }) => {\n  const columns = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n    },\n    {\n      title: \"NIK\",\n      dataIndex: \"nik\",\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n    },\n    {\n      title: \"Alasan Reject\",\n      dataIndex: \"reason\",\n    },\n    {\n      title: \"Tanggal Di-Reject\",\n      dataIndex: \"created_date\",\n    },\n  ];\n  const data = [];\n  rejections.map((item, index) => {\n    data.push({\n      no: index + 1,\n      nik: item.nik,\n      employee_name: item.employee_name,\n      reason: item.reason,\n      created_date: moment(item.created_date).format(\"DD-MMM-YYYY\"),\n    });\n  });\n  return <Table bordered columns={columns} dataSource={data} size=\"middle\" />;\n};\n\nconst TabPanelRejectionsComponent = (props) => {\n  const { rejections } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Alasan Reject</Typography>\n      </Row>\n      <hr />\n      {rejections.length > 0 ? (\n        <RenderDailies rejections={rejections} />\n      ) : (\n        <div>\n          <Empty />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TabPanelRejectionsComponent;\n","import React from \"react\";\nimport TabPanelRejectionsComponent from \"../../Component/TabPanel/TabPanelRejectionsComponent\";\n\nconst TabPanelRejectionsContainer = (props) => {\n  return <TabPanelRejectionsComponent {...props} />;\n};\n\nexport default TabPanelRejectionsContainer;\n","import React from \"react\";\nimport { Typography, Row, Empty, Col, Checkbox, Divider, Spin } from \"antd\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { Radio } from \"antd\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Themes } from \"../../../../property/colors\";\n\nconst TabPanelChecklistComponent = (props) => {\n  const { checklistArr, isLoaded } = props;\n  return (\n    <div class=\"page-content\">\n      <Row\n        style={{\n          alignItems: \"center\",\n        }}\n      >\n        <EditOutlined />\n        <Typography style={{ marginLeft: 5 }}>Checklist</Typography>\n      </Row>\n      <hr />\n      {!isLoaded ? (\n        <div class=\"d-flex justify-content-center align-items-center\">\n          <Spin />\n        </div>\n      ) : (\n        <div class=\"row d-flex flex-wrap col md-12\">\n          {checklistArr.length > 0 ? (\n            checklistArr.map((itemUnit, indexUnit) => (\n              <div key={`checklist-unit-${indexUnit}`}>\n                <Divider\n                  style={{\n                    textTransform: \"uppercase\",\n                    fontSize: 12,\n                    fontWeight: \"bold\",\n                  }}\n                  plain\n                >{`Unit ${itemUnit.unitName}`}</Divider>\n                <Row gutter={[16, 16]}>\n                  {itemUnit.checklist.map((itemChecklist, indexChecklist) => (\n                    <Col key={`item-unit-checklist-${indexChecklist}`} span={12}>\n                      <div style={{ width: \"100%\" }}>\n                        <div>\n                          <div class=\"mb-2 mt-2 pb-2\">\n                            <Row\n                              gutter={16}\n                              style={{\n                                alignItems: \"center\",\n                                padding: \"8px\",\n                                borderBottom: \"1px solid #020202\",\n                                marginRight: \"20px\",\n                                marginTop: \"20px\",\n                              }}\n                            >\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={7}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  {itemChecklist.category_form_name}\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  ADJUST\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  CHECK\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={4}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPAIR\n                                </Text>\n                              </Col>\n                              <Col\n                                style={style}\n                                className=\"gutter-row\"\n                                span={5}\n                              >\n                                <Text strong style={{ fontSize: 10 }}>\n                                  REPLACE\n                                </Text>\n                              </Col>\n                            </Row>\n                          </div>\n\n                          <Radio.Group disabled>\n                            {itemChecklist.fields &&\n                              itemChecklist.fields.map(\n                                (itemFields, indexFields) => {\n                                  return (\n                                    <Row\n                                      key={`item-fields-${indexFields}`}\n                                      gutter={16}\n                                      style={{\n                                        alignItems: \"center\",\n                                        padding: \"8px\",\n                                        borderBottom: \"1px solid #020202\",\n                                        marginRight: \"30px\",\n                                      }}\n                                    >\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={8}\n                                      >\n                                        <div>\n                                          <Typography\n                                            style={{\n                                              fontSize: 12,\n                                              color: Themes.secondary,\n                                            }}\n                                          >\n                                            {itemFields.field_name}\n                                          </Typography>\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                      <Col\n                                        style={style}\n                                        className=\"gutter-row\"\n                                        span={4}\n                                      >\n                                        <div>\n                                          <Checkbox\n                                            checked={\n                                              itemChecklist.fields[indexFields]\n                                                .is_check\n                                            }\n                                            disabled={true}\n                                          />\n                                        </div>\n                                      </Col>\n                                    </Row>\n                                  );\n                                }\n                              )}\n                          </Radio.Group>\n                        </div>\n                        <div class=\"mr-3\" />\n                      </div>\n                    </Col>\n                  ))}\n                </Row>\n              </div>\n            ))\n          ) : (\n            <div class=\"page-content\">\n              <Empty />\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nconst style = {\n  width: \"200px\",\n  alignContent: \"center\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n};\n\nexport default TabPanelChecklistComponent;\n","import React, { useState } from \"react\";\nimport TabPanelChecklistComponent from \"../../Component/TabPanel/TabPanelChecklistComponent\";\n\nconst TabPanelChecklistContainer = (props) => {\n  const { checklist, isLoaded } = props;\n  const [checklistArr, setchecklistArr] = useState([]);\n\n  React.useEffect(() => {\n    setchecklistArr(checklist);\n  }, [checklist]);\n\n  return (\n    <TabPanelChecklistComponent\n      isLoaded={isLoaded}\n      checklistArr={checklistArr}\n      {...props}\n    />\n  );\n};\n\nexport default TabPanelChecklistContainer;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport DetailServiceTransactionComponent from \"../Component/DetailServiceTransactionComponent\";\nimport {\n  FileImageOutlined,\n  UsergroupAddOutlined,\n  CheckCircleOutlined,\n  EditOutlined,\n  FileTextOutlined,\n  CloseSquareOutlined,\n  HistoryOutlined,\n} from \"@ant-design/icons\";\nimport TabPanelEmployeeContainer from \"./TabPanel/TabPanelEmployeeContainer\";\nimport * as DetailServiceActions from \"../Store/DetailServiceTransactionAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport TabPanelSummaryContainer from \"./TabPanel/TabPanelSummaryContainer\";\nimport TabPanelImagesContainer from \"./TabPanel/TabPanelImagesContainer\";\nimport TabPanelDailiesContainer from \"./TabPanel/TabPanelDailiesContainer\";\nimport TabPanelHistoriesContainer from \"./TabPanel/TabPanelHistoriesContainer\";\nimport { exportDetailServicePdf } from \"../Store/DetailServiceTransactionReport\";\nimport * as ListServiceActions from \"../../ListServices/Store/ListServicesActions\";\nimport TabPanelRejectionsContainer from \"./TabPanel/TabPanelRejectionsContainer\";\nimport TabPanelChecklistContainer from \"./TabPanel/TabPanelChecklistContainer\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { navigate } from \"../../../app/Helpers\";\nimport { exportDetailServicePdfRevision } from \"../Store/DetailServiceTransactionReportRevision\";\n\nconst DetailServiceTransactionContainer = (props) => {\n  const {\n    services: { selectedJobService },\n    detailService: {\n      selectedServiceEmployeeList,\n      groupingSelectedServiceMedia,\n      groupingSelectedServiceSummary,\n      groupingSelectedServiceChecklist,\n      selectedServiceDailies,\n      selectedServiceHistories,\n      selectedServiceRejected,\n    },\n  } = props;\n  const { dispatch } = store;\n  const [isLoadedChecklist, setIsLoadedChecklist] = React.useState(false);\n\n  const TabPanel = [\n    {\n      key: \"panel-gambar\",\n      title: \"Gambar\",\n      icon: <FileImageOutlined />,\n      component: (\n        <TabPanelImagesContainer medias={groupingSelectedServiceMedia} />\n      ),\n    },\n    {\n      key: \"panel-summary\",\n      title: \"Summary\",\n      icon: <FileTextOutlined />,\n      component: (\n        <TabPanelSummaryContainer summary={groupingSelectedServiceSummary} />\n      ),\n    },\n    {\n      key: \"panel-teknisi\",\n      title: \"Teknisi\",\n      icon: <UsergroupAddOutlined />,\n      component: (\n        <TabPanelEmployeeContainer employees={selectedServiceEmployeeList} />\n      ),\n    },\n    {\n      key: \"panel-rejected\",\n      title: \"Alasan Reject\",\n      icon: <CloseSquareOutlined />,\n      component: (\n        <TabPanelRejectionsContainer rejections={selectedServiceRejected} />\n      ),\n    },\n    {\n      key: \"panel-dailies\",\n      title: \"Catatan Teknisi\",\n      icon: <EditOutlined />,\n      component: <TabPanelDailiesContainer dailies={selectedServiceDailies} />,\n    },\n    {\n      key: \"panel-histories\",\n      title: \"History\",\n      icon: <HistoryOutlined />,\n      component: (\n        <TabPanelHistoriesContainer\n          title=\"History\"\n          histories={selectedServiceHistories}\n        />\n      ),\n    },\n  ];\n\n  if (selectedJobService.is_external) {\n    TabPanel.push({\n      key: \"panel-checklist\",\n      title: \"Checklist\",\n      icon: <CheckCircleOutlined />,\n      component: (\n        <TabPanelChecklistContainer\n          isLoaded={isLoadedChecklist}\n          checklist={groupingSelectedServiceChecklist}\n        />\n      ),\n    });\n\n    // Move content of checklist to index 0\n    const fromIndex = TabPanel.indexOf(\"panel-checklist\"); // 👉️ 0\n    const toIndex = 0;\n\n    const element = TabPanel.splice(fromIndex, 1)[0];\n    console.log(element); // ['panel-checklist']\n\n    TabPanel.splice(toIndex, 0, element);\n  }\n\n  const onChangeTab = (activeTab) => {\n    switch (activeTab.toLowerCase()) {\n      case \"panel-teknisi\":\n        DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n        break;\n\n      case \"panel-summary\":\n        // DetailServiceActions.getJobServiceSummary(selectedJobService.id);\n        break;\n\n      case \"panel-gambar\":\n        // DetailServiceActions.getJobServiceMedia(selectedJobService.id);\n        break;\n\n      case \"panel-dailies\":\n        DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n        break;\n\n      case \"panel-histories\":\n        DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n        break;\n\n      case \"panel-checklist\":\n        // DetailServiceActions.getChecklistData(selectedJobService.id);\n        break;\n\n      case \"panel-rejected\":\n        DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n        break;\n\n      default:\n        console.log(\"no panel selected...\");\n        break;\n    }\n  };\n\n  const callInitialize = async () => {\n    await EmployeesActions.loadEmployeeListData(1, 99999);\n    await DetailServiceActions.getJobServiceEmployeeList(selectedJobService.id);\n    await DetailServiceActions.getJobServiceDailies(selectedJobService.id);\n    await DetailServiceActions.getJobServiceHistories(selectedJobService.id);\n    await DetailServiceActions.getJobServiceRejections(selectedJobService.id);\n    await getGroupingUnitData();\n  };\n\n  const getGroupingUnitData = async () => {\n    // Hit media api and grouping by units :\n    let groupingMediaList = [];\n    let groupingSummaryList = [];\n    let groupingChecklist = [];\n    if (selectedJobService.units) {\n      await selectedJobService.units.map(async (item, index) => {\n        const { data: dataMedia } = await Invoke.getJobServiceMedia(\n          selectedJobService.id,\n          item.id\n        );\n        const { data: dataSummary } = await Invoke.getJobServiceSummary(\n          selectedJobService.id,\n          item.id\n        );\n        Invoke.getChecklistData(item.id)\n          .then((dataChecklist) => {\n            console.log(\"=== dataChecklist : \", dataChecklist);\n            groupingChecklist.push({\n              unitName: item.unit_name,\n              checklist: dataChecklist.data.callback,\n            });\n            if (index + 1 === selectedJobService.units.length) {\n              setIsLoadedChecklist(true);\n            }\n          })\n          .catch(() => setIsLoadedChecklist(true));\n\n        // Push to tempporary array\n        groupingMediaList.push({\n          unitName: item.unit_name,\n          image: dataMedia.callback.data,\n        });\n        groupingSummaryList.push({\n          unitName: item.unit_name,\n          summary: dataSummary.callback.summary,\n        });\n      });\n\n      // Save to reducer\n      await dispatch(\n        DetailServiceActions.setGroupingSelectedServicesMediaData(\n          groupingMediaList\n        )\n      );\n      await dispatch(\n        DetailServiceActions.setGroupingSummaryData(groupingSummaryList)\n      );\n      await dispatch(\n        DetailServiceActions.setGroupingChecklistData(groupingChecklist)\n      );\n    }\n  };\n\n  React.useEffect(() => {\n    callInitialize();\n  }, []);\n\n  const handlePressGeneratePdf = () => {\n    // exportDetailServicePdfRevision(printedData);\n    DetailServiceActions.downloadTransactionPdf()\n  };\n\n  const handleBackToListService = () => {\n    store.dispatch(DetailServiceActions.resetDetailService());\n    setTimeout(() => {\n      navigate(\"list_service\");\n    }, 500);\n  };\n\n  return (\n    <DetailServiceTransactionComponent\n      data={selectedJobService}\n      TabPanel={TabPanel}\n      onChangeTab={onChangeTab}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      goBack={handleBackToListService}\n      medias={groupingSelectedServiceMedia}\n      checklist={groupingSelectedServiceChecklist}\n      employees={selectedServiceEmployeeList}\n      dailies={selectedServiceDailies}\n      summary={groupingSelectedServiceSummary}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  units: state.units,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handlePressDelete: (jobId) => {\n    ListServiceActions.deleteJobServiceRequested(jobId);\n  },\n  handlePressActions: (jobId, type) => {\n    ListServiceActions.handlePressActionsRequested(jobId, type);\n  },\n  handlePressEdit: async () => {\n    await dispatch(DetailServiceActions.setEditTransactionModal(true));\n    await DetailServiceActions.mapDetailTransactionToForm();\n    dispatch(DetailServiceActions.setEditTransactionModal(true));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DetailServiceTransactionContainer);\n\nexport default reduxForm({\n  form: \"detailJobServices\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Checkbox, Col, Row } from \"antd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst SelectRole = (props) => {\n  const {\n    data,\n    defaultValuesMenu,\n    onChangeRoleMenu,\n    // options,\n    // plainOptions,\n    // optionsWithDisabled,\n  } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        defaultValue={defaultValuesMenu}\n        onChange={onChangeRoleMenu}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumMenu,\n  defaultValuesMenu,\n  formStatus,\n  onChangeRoleMenu,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"Role ID\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Role\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n      {formStatus === \"edit\" && (\n        <>\n          <hr />\n          <h6 class=\"card-title text-center\">Pilih Menu</h6>\n          <SelectRole\n            data={enumMenu}\n            defaultValuesMenu={defaultValuesMenu}\n            onChangeRoleMenu={onChangeRoleMenu}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nconst RolesEditModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    menuChecked,\n    formStatus,\n    onChangeRoleMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          defaultValuesMenu={menuChecked}\n          formStatus={formStatus}\n          onChangeRoleMenu={onChangeRoleMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default RolesEditModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport RolesEditModalComponent from \"../Component/RolesEditModalComponent\";\n\nconst RolesEditModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { formStatus, selectedRoleMenu },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n  const [menuSelected, setMenuSelected] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values, menuSelected);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  const onChangeRoleMenu = (menus) => {\n    setMenuSelected(menus);\n  };\n\n  return (\n    <RolesEditModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumMenu={SelectMenu}\n      menuChecked={selectedRoleMenu}\n      onChangeRoleMenu={onChangeRoleMenu}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values, menuSelected) =>\n    RolesActions.saveRoleRequested(type, values, menuSelected),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesEditModalContainer);\n\nexport default reduxForm({\n  form: \"editRolesForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport RolesEditModalContainer from \"../Container/RolesEditModalContainer\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nconst RolesComponent = (props) => {\n  const { headers, listRoles, renderActionTable, handlePressAddNew } = props;\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Roles</h6>\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Roles\n                  </CButtonAntd>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <RolesEditModalContainer />\n    </div>\n  );\n};\n\nexport default RolesComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport RolesComponent from \"../Component/RolesComponent\";\nimport * as RolesActions from \"../Store/RolesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RolesContainer = (props) => {\n  const {\n    getListRoles,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    roles: { listRoles },\n  } = props;\n\n  if (listRoles.length > 0) {\n    listRoles.map((item, index) => {\n      listRoles[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListRoles();\n  }, []);\n\n  return (\n    <RolesComponent\n      headers={headers}\n      listRoles={listRoles}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  roles: state.roles,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListRoles: () => RolesActions.getListRolesRequested(),\n  handlePressAddNew: async () => {\n    await dispatch(RolesActions.setSelectedRoleDetail({}));\n    await dispatch(RolesActions.setSelectedRoleId(\"\"));\n    dispatch(RolesActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    RolesActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(RolesActions.setFormStatus(\"edit\"));\n    await dispatch(RolesActions.setSelectedRoleId(record.id));\n    await dispatch(RolesActions.setSelectedRoleDetail(record));\n    await RolesActions.getMenuByRolesId(record.id);\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await RolesActions.mapDetailRoleToForm();\n  },\n  handlePressDelete: async (roleId) => {\n    await dispatch(RolesActions.setSelectedRoleId(roleId));\n    RolesActions.deleteRoleRequested(roleId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(RolesContainer);\n\nexport default reduxForm({\n  form: \"rolesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst EmployeeListComponent = (props) => {\n  const {\n    headers,\n    listEmployees,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    enumRoles,\n    enumDivision,\n    employeeFormValues,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Karyawan</h6>\n                </div>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Karyawan\n                    </CButtonAntd>\n                  </div>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2\">\n                  {/* This Filter */}\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumRoles ?? []}\n                      name=\"role\"\n                      label=\"Filter Role\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Filter Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CSelect\n                      data={enumDivision ?? []}\n                      name=\"division\"\n                      label=\"Filter Divisi\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployees}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeListComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as EmployeeActions from \"../Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ToolsActions from \"../../Tools/Store/ToolsActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  SettingOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport EmployeesListComponent from \"../Component/EmployeesListComponent\";\nimport {\n  enumSelectGenerator,\n  getIndex,\n  getRolesEnum,\n  navigate,\n} from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getDivisionListDataRequested } from \"../../Division/Store/DivisionActions\";\n\nconst EmployeesListContainer = (props) => {\n  const {\n    getListEmployees,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressEmployeeTools,\n    employees: { listEmployees, paging },\n    roles: { listRoles },\n    branch: { listBranch },\n    division: { listDivision },\n    employeesFormValues,\n    getListTools,\n  } = props;\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployees.length > 0) {\n    listEmployees.map((item, index) => {\n      listEmployees[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, name: item.title };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"NIK\",\n      dataIndex: \"nik\",\n      key: \"nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.nik - b.nik,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name - b.name,\n    },\n    {\n      title: \"Nomor Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => handlePressEdit(record)}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressEmployeeTools(record)}\n        type=\"primary\"\n        icon={<SettingOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployees(1, 10);\n    getDivisionListDataRequested(1, 100);\n    getListTools(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage ?? 1;\n    paging.limit = pageSize ?? 10;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeActions.setPagingEmployees(paging));\n    getListEmployees(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    EmployeeActions.handleSearch(keyword, employeesFormValues);\n  };\n\n  const SelectRoles = listRoles.length > 0 ? getRolesEnum(listRoles) : [];\n  const SelectBranch =\n    listBranch.length > 0 ? enumSelectGenerator(listBranch, \"branch\") : [];\n  const SelectDivision =\n    listDivision.length > 0\n      ? enumSelectGenerator(listDivision, \"division\")\n      : [];\n\n  return (\n    <EmployeesListComponent\n      headers={headers}\n      listEmployees={listEmployees}\n      renderActionTable={renderActionTable}\n      paging={paging}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      enumRoles={SelectRoles}\n      enumDivision={SelectDivision}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  roles: state.roles,\n  branch: state.branch,\n  division: state.division,\n  employeesFormValues: getFormValues(\"employeesForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployees: (page, limit, keyword) =>\n    EmployeeActions.loadEmployeeListData(page, limit, keyword),\n  getListTools: (page, limit) => {\n    ToolsActions.getToolsListDataRequested(page, limit);\n  },\n  handlePressEdit: async (employee) => {\n    dispatch(ComponentActions.setGlobalLoading(true));\n    dispatch(EmployeeActions.setFormStatus(\"edit\"));\n    await EmployeesActions.getRolesByEmployeeId(employee.id);\n    await MasterDataActions.loadCityListData(employee.province_id);\n    await dispatch(EmployeeActions.setSelectedEmployeeId(employee.id));\n    await EmployeesActions.getEmployeeDataByIdRequested(employee.id);\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n      dispatch(ComponentActions.setGlobalLoading(false));\n    }, 500);\n  },\n  handlePressAddNew: async () => {\n    dispatch(EmployeesActions.setFormStatus(\"add\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeId(\"\"));\n    await dispatch(EmployeesActions.setSelectedEmployeeData({}));\n    EmployeesActions.resetForm();\n    setTimeout(() => {\n      navigate(\"/edit-employee\");\n    }, 500);\n  },\n  handlePressDelete: async (employeeId) => {\n    await dispatch(EmployeesActions.setSelectedEmployeeId(employeeId));\n    EmployeesActions.deleteEmployeeRequested(employeeId);\n  },\n  handlePressEmployeeTools: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(EmployeeActions.setSelectedEmployeeId(record.id));\n    await dispatch(EmployeeActions.setSelectedEmployeeData(record));\n    setTimeout(() => {\n      navigate(\"employee-tools\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeesListContainer);\n\nexport default reduxForm({\n  form: \"employeesForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport {\n  LoadingOutlined,\n  PlusOutlined,\n  ArrowLeftOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport { Checkbox, Col, message, Row, Typography, Upload } from \"antd\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst SelectRole = (props) => {\n  const { data, defaultValues, onChangeRoleEmployee } = props;\n\n  const Item = ({ item }) => {\n    return (\n      <Checkbox name={`item.${item.value}`} value={item.value}>\n        {item.label}\n      </Checkbox>\n    );\n  };\n\n  return (\n    <>\n      <Checkbox.Group\n        {...props.input}\n        style={{ width: \"100%\" }}\n        onChange={onChangeRoleEmployee}\n        defaultValue={defaultValues}\n      >\n        <Row>\n          {data.map((item, index) => {\n            return (\n              <Col span={8}>\n                <Field\n                  item={item}\n                  name={`item.${item.value}`}\n                  component={Item}\n                />\n              </Col>\n            );\n          })}\n        </Row>\n      </Checkbox.Group>\n    </>\n  );\n};\n\nconst EmployeeEditComponent = (props) => {\n  const {\n    handleSubmit,\n    submitForm,\n    enumBranch,\n    enumRole,\n    enumProvince,\n    enumCity,\n    selectedRoleEmployee,\n    onChangeRoleEmployee,\n    handleUploadPhoto,\n    defaultImage,\n    onChangeProvince,\n    onBackAction,\n    formStatus,\n  } = props;\n\n  const [loading, setLoading] = React.useState(false);\n  const [imageUrl, setImageUrl] = React.useState(\"\");\n\n  React.useEffect(() => {\n    if (defaultImage) {\n      setImageUrl(defaultImage);\n    }\n  }, [defaultImage]);\n\n  const beforeUpload = (file) => {\n    const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n    if (!isJpgOrPng) {\n      message.error(\"You can only upload JPG/PNG file!\");\n    }\n    const isLt2M = file.size / 1024 / 1024 < 2;\n    if (!isLt2M) {\n      message.error(\"Image must smaller than 2MB!\");\n    }\n    return isJpgOrPng && isLt2M;\n  };\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <h1 class=\"card-title\">Profil Karyawan</h1>\n                <p class=\"card-description\">\n                  Anda dapat mengelola role ataupun mengubah data karyawan pada\n                  halaman ini.\n                </p>\n                <Form>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name=\"nik\"\n                        label=\"NIK\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <CSelect\n                        data={enumProvince}\n                        name=\"province\"\n                        label=\"Nama Provinsi\"\n                        onChange={(val) => onChangeProvince(val)}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name=\"password\"\n                        label=\"Password\"\n                        placeholder=\"* Isi jika ingin merubah password\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <CSelect\n                        name=\"city\"\n                        data={enumCity}\n                        label=\"Kota/Kabupaten\"\n                        disabled={enumCity.length <= 0}\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name={\"name\"}\n                        label=\"Nama Karyawan\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                    <div class=\"col-md-6\">\n                      <Typography style={{ textAlign: \"left\" }}>\n                        Foto Profil\n                      </Typography>\n                      <div\n                        class=\"card-body\"\n                        style={{\n                          marginLeft: -22,\n                          marginTop: -20,\n                        }}\n                      >\n                        <Upload\n                          name=\"avatar\"\n                          listType=\"picture-card\"\n                          className=\"avatar-uploader overflow-hidden\"\n                          showUploadList={false}\n                          beforeUpload={beforeUpload}\n                          onChange={handleChange}\n                        >\n                          {imageUrl || defaultImage ? (\n                            <>\n                              <img\n                                src={imageUrl}\n                                alt=\"avatar\"\n                                style={{\n                                  width: \"100%\",\n                                  height: \"100%\",\n                                  resizeMode: \"stretch\",\n                                  borderRadius: 5,\n                                }}\n                              />\n                              <div\n                                class=\"row\"\n                                style={{\n                                  backgroundColor: \"#F3F3F3\",\n                                  position: \"absolute\",\n                                  width: 80,\n                                  heigh: 30,\n                                  borderRadius: 50,\n                                  alignItems: \"center\",\n                                  justifyContent: \"center\",\n                                  opacity: 0.7,\n                                }}\n                              >\n                                <Typography style={{ fontSize: 10 }}>\n                                  Ubah\n                                </Typography>\n                                <EditOutlined\n                                  style={{\n                                    color: \"#020202\",\n                                    fontSize: 10,\n                                    marginLeft: 5,\n                                  }}\n                                />\n                              </div>\n                            </>\n                          ) : (\n                            uploadButton\n                          )}\n                        </Upload>\n                      </div>\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <Field\n                        name={`phone`}\n                        label=\"No. Telepon\"\n                        placeholder=\"-\"\n                        component={CInput}\n                        type=\"text\"\n                      />\n                    </div>\n                  </div>\n                  <div class=\"row\">\n                    <div class=\"col-md-6\">\n                      <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n                      <Field\n                        name=\"address\"\n                        label=\"Alamat\"\n                        component={CInput}\n                        typeComponent=\"textarea\"\n                      />\n                      <hr />\n                      {formStatus === \"edit\" && (\n                        <div class=\"card\">\n                          <div class=\"card-body\">\n                            <h6 class=\"card-title text-center\">Pilih Role</h6>\n                            <SelectRole\n                              data={enumRole}\n                              defaultValues={selectedRoleEmployee}\n                              onChangeRoleEmployee={onChangeRoleEmployee}\n                            />\n                          </div>\n                        </div>\n                      )}\n                      <br />\n                    </div>\n                  </div>\n                  <div class=\"row ml-2\">\n                    <CButtonAntd\n                      key=\"submit\"\n                      type=\"primary\"\n                      loading={false}\n                      onClick={onBackAction}\n                      danger\n                      icon={<ArrowLeftOutlined />}\n                    >\n                      Kembali\n                    </CButtonAntd>\n                    <div class=\"ml-3\" />\n                    <CButtonAntd\n                      key=\"submit\"\n                      type=\"primary\"\n                      loading={false}\n                      onClick={handleSubmit(submitForm)}\n                    >\n                      Simpan\n                    </CButtonAntd>\n                  </div>\n                </Form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default EmployeeEditComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as EmployeesActions from \"../../Employees/Store/EmployeesActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport EmployeeEditComponent from \"../Component/EmployeeEditComponent\";\nimport { validateFormEmployee } from \"../../../app/validateForm\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getCitiesEnum, navigate } from \"../../../app/Helpers\";\nimport Invoke from \"../../../app/axios/Invoke\";\n\nconst EmployeeEditContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    roles: { listRoles },\n    branch: { listBranch, paging, keyword },\n    employees: { formStatus, selectedEmployeeData, selectedRoleEmployee },\n    masters: { listProvince, listCity },\n    handleClearSelectedEmployeeRole,\n  } = props;\n  const [listCityState, setListCityState] = React.useState([]);\n  const [roleSelected, setRoleSelected] = React.useState([]);\n  const [defaultImage, setDefaultImage] = React.useState(\"\");\n\n  const { page, limit } = paging;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      EmployeesActions.saveEmployeeRequested(formStatus, values, roleSelected);\n    } else {\n    }\n  };\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editEmployeeForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  const SelectEmployeeRole = [];\n  listRoles.map((item, index) => {\n    SelectEmployeeRole.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    let subItem = [];\n    listCity.map((item, index) => {\n      subItem.push({\n        id: `city-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setListCityState(subItem);\n    // Mapping detail data employee when edit\n    if (formStatus === \"edit\") {\n      MasterDataActions.loadCityListData(selectedEmployeeData.province_id);\n      EmployeesActions.mapDetailEmployeeToForm();\n      // convert image url to base64\n      setDefaultImage(selectedEmployeeData.photo);\n      // set selected roles to redux-form\n      store.dispatch(\n        change(\"editEmployeeForm\", \"selectedRoles\", selectedRoleEmployee)\n      );\n    }\n    return () => {\n      handleClearSelectedEmployeeRole();\n    };\n  }, []);\n\n  React.useEffect(() => {\n    setListCityState([]);\n    if (formStatus === \"edit\" && selectedEmployeeData.province_id) {\n      const provinceId =\n        selectedEmployeeData.province_id +\n        \"|\" +\n        selectedEmployeeData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedEmployeeData.province_id]);\n\n  const onChangeRoleEmployee = (roles) => {\n    console.log(\"=== roles : \", roles);\n    setRoleSelected(roles);\n    store.dispatch(change(\"editEmployeeForm\", \"selectedRoles\", roles));\n  };\n\n  const onChangeProvince = async (provinceId) => {\n    setListCityState([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setListCityState(provinceMapping);\n      } else {\n        store.dispatch(change(\"editEmployeeForm\", `city`, \"\"));\n        setListCityState([]);\n      }\n    } catch (error) {\n      setListCityState([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onBackAction = async () => {\n    await handleClearSelectedEmployeeRole();\n    setTimeout(() => {\n      navigate(\"employees\");\n    }, 500);\n  };\n\n  return (\n    <EmployeeEditComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      enumBranch={SelectBranch}\n      enumRole={SelectEmployeeRole}\n      enumProvince={SelectProvince}\n      enumCity={listCityState}\n      detailEmployee={selectedEmployeeData}\n      handleUploadPhoto={handleUploadPhoto}\n      formStatus={formStatus}\n      selectedRoleEmployee={selectedRoleEmployee}\n      onChangeRoleEmployee={onChangeRoleEmployee}\n      defaultImage={defaultImage}\n      onChangeProvince={onChangeProvince}\n      onBackAction={onBackAction}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  roles: state.roles,\n  component: state.component,\n  employees: state.employees,\n  branch: state.branch,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  getDetailEmployee: async (employeeId) =>\n    await EmployeesActions.getEmployeeDataByIdRequested(employeeId),\n  setAutoPopulateEmployee: () => EmployeesActions.setAutoPopulateEmployee(),\n  handleClearSelectedEmployeeRole: () => {\n    dispatch(EmployeesActions.setSelectedRoleEmployee([]));\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeEditContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeForm\",\n  validate: validateFormEmployee,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"id\"\n            label=\"ID Cabang\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n            disabled\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Nama Cabang\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst BranchModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default BranchModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as RolesActions from \"../../Roles/Store/RolesActions\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport BranchModalComponent from \"../Component/BranchModalComponent\";\n\nconst BranchModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n    handleClearModalContent,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  React.useEffect(() => {\n    if (isModalVisible === false) {\n      handleClearModalContent();\n    }\n  }, [isModalVisible]);\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    dispatch(RolesActions.setSelectedRoleMenu([]));\n  },\n  handleSubmitForm: (type, values) =>\n    BranchActions.saveBranchRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchModalContainer);\n\nexport default reduxForm({\n  form: \"editBranchForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport BranchModalContainer from \"../Container/BranchModalContainer\";\n\nconst { Search } = Input;\n\nconst BranchComponent = (props) => {\n  const {\n    headers,\n    listRoles,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Cabang</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Branch\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listRoles}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <BranchModalContainer />\n    </div>\n  );\n};\n\nexport default BranchComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as BranchActions from \"../Store/BranchActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport BranchComponent from \"../Component/BranchComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst BranchContainer = (props) => {\n  const {\n    getListBranch,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    branch: { listBranch, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listBranch.length > 0) {\n    listBranch.map((item, index) => {\n      listBranch[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Cabang\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListBranch(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(BranchActions.setPagingBranch(paging));\n    getListBranch(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListBranch(page, limit, val);\n  };\n\n  return (\n    <BranchComponent\n      headers={headers}\n      listRoles={listBranch}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListBranch: (page, limit, keyword) =>\n    BranchActions.getBranchListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(BranchActions.setSelectedBranchData({}));\n    await dispatch(BranchActions.setSelectedBranchId(\"\"));\n    dispatch(BranchActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    BranchActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(BranchActions.setFormStatus(\"edit\"));\n    await dispatch(BranchActions.setSelectedBranchId(record.id));\n    await dispatch(BranchActions.setSelectedBranchData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await BranchActions.mapDetailBranchToForm();\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(BranchActions.setSelectedBranchId(branchId));\n    BranchActions.deleteBranchRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(BranchContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field name=\"name\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst JobFormsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default JobFormsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport JobFormsModalComponent from \"../Component/JobFormsModalComponent\";\n\nconst JobFormsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    jobForms: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `job-forms-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <JobFormsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  jobForms: state.jobForms,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    JobFormsActions.saveJobFormsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsModalContainer);\n\nexport default reduxForm({\n  form: \"editJobForms\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport JobFormsModalContainer from \"../Container/JobFormsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst JobFormsComponent = (props) => {\n  const {\n    headers,\n    listJobForms,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Job Forms</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Job Forms\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listJobForms}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <JobFormsModalContainer />\n    </div>\n  );\n};\n\nexport default JobFormsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as JobFormsActions from \"../Store/JobFormsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport JobFormsComponent from \"../Component/JobFormsComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst JobFormsContainer = (props) => {\n  const {\n    getListJobForms,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    jobForms: { listJobForms, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listJobForms.length > 0) {\n    listJobForms.map((item, index) => {\n      listJobForms[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"40%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListJobForms(page, limit);\n  }, []);\n\n  const onSearch = (val) => {\n    getListJobForms(page, limit, val);\n  };\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(JobFormsActions.setPagingJobForm(paging));\n    getListJobForms(nextPage, pageSize);\n  };\n\n  return (\n    <JobFormsComponent\n      headers={headers}\n      listJobForms={listJobForms}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onSearch={onSearch}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  jobForms: state.jobForms,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListJobForms: (page, limit, val) =>\n    JobFormsActions.getJobFormsListDataRequested(page, limit, val),\n  handlePressAddNew: async () => {\n    await dispatch(JobFormsActions.setSelectedJobFormsData({}));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(\"\"));\n    dispatch(JobFormsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    JobFormsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(JobFormsActions.setFormStatus(\"edit\"));\n    await dispatch(JobFormsActions.setSelectedJobFormsId(record.id));\n    await dispatch(JobFormsActions.setSelectedJobFormsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await JobFormsActions.mapDetailJobFormsToForm();\n  },\n  handlePressDelete: async (jobFormsId) => {\n    await dispatch(JobFormsActions.setSelectedJobFormsId(jobFormsId));\n    JobFormsActions.deleteJobFormsRequested(jobFormsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(JobFormsContainer);\n\nexport default reduxForm({\n  form: \"branchForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect data={enumInstanceType} name=\"instanceType\" label=\"Tipe\" />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"riceTrademark\"\n            label=\"Merek Dagang Beras\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerAddress\"\n            label=\"Alamat\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"phone\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingCapacity\"\n            label=\"Kapasitas Penggilingan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"millingWorkCapacityPerDay\"\n            label=\"Kapasitas Kerja Penggilingan (Per Hari)\"\n            placeholder=\"-\"\n            component={CInput}\n            labelSize={12}\n            type=\"text\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentUnitComponent = () => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"serialNumber\"\n            label=\"Nomor Seri\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"engineNumber\"\n            label=\"Nomor Mesin\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <Field\n            name=\"gearboxNumber\"\n            label=\"Nomor Gearbox\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\">\n          <Field\n            name=\"production_unit_year\"\n            label=\"Tahun Produksi Unit\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Jam Kerja</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>\n          (per Hari & Hour Meter )\n        </Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <Field\n            name=\"perHour\"\n            label=\"Per Hour\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"hourMeter\"\n            label=\"Hour Meter\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-6\"></div>\n      </div>\n      <hr />\n      <div className=\"row ml-3\">\n        <h5 className=\"card-title\">Tanggal Transaksi Produk</h5>\n        <Text style={{ fontSize: 11, marginLeft: 3 }}>(Bulan & Tahun)</Text>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Pembelian\" />\n        </div>\n        <div class=\"col-md-6\">\n          <CDatePicker name=\"startDate\" label=\"Tanggal Terima Bantuan\" />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentUnitComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport Text from \"antd/lib/typography/Text\";\n\nconst ContentSparePartComponent = ({ onChangeServiced, isServiced }) => {\n  const [listServices] = React.useState([\n    {\n      id: `serviced-1`,\n      value: \"true\",\n      label: \"Pernah\",\n    },\n    {\n      id: `serviced-2`,\n      value: \"false\",\n      label: \"Tidak\",\n    },\n  ]);\n\n  const RenderServiceHistory = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_buy_place`}\n                    label=\"Tempat Pembelian Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartSelling = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_name`}\n                    label=\"Nama Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.spare_part_qty`}\n                    label=\"Qty\"\n                    placeholder=\"Jumlah Penjualan Spare Part\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  const RenderSparePartNeeded = ({ fields }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 5) {\n                return;\n              }\n              fields.push({});\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`Spare Part ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_name`}\n                    label=\"Nama Produk Spare Part\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.product_code`}\n                    label=\"Kode Produk\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.part_number`}\n                    label=\"Part Number\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"-\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-3\">\n          <CSelect\n            onChange={(val) => onChangeServiced(val)}\n            data={listServices}\n            label=\"Pernah Diservis\"\n            name=\"location\"\n          />\n        </div>\n      </div>\n      {isServiced && (\n        <div class=\"row m-2 text-left\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_place\"\n              label=\"Perbaikan Dilakukan Di\"\n              placeholder=\"cth: Blitar\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"history_service_type\"\n              label=\"Jenis Perbaikan\"\n              placeholder=\"cth: Service Sikring\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      )}\n      <div className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">Riwayat Penggantian Spare Part</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan service, maksimal 5 unit.\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_changing_histories\"\n          component={RenderServiceHistory}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Penjualan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>\n            (pada saat kunjuangan)\n          </Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi jika pernah dilakukan penjualan, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_selling_histories\"\n          component={(_props) => <RenderSparePartSelling {..._props} />}\n        />\n        <hr />\n      </div>\n      <div className=\"col m-2 text-left\">\n        <div className=\"row ml-1\">\n          <h5 className=\"card-title\">Daftar Kebutuhan Spare Part</h5>\n          <Text style={{ fontSize: 11, marginLeft: 3 }}>(per Quartal)</Text>\n        </div>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Isi apabila terdapat kebutuhan spare part, maksimal 5 unit\n          </p>\n        </div>\n        <FieldArray\n          name=\"spare_part_needs\"\n          component={(_props) => <RenderSparePartNeeded {..._props} />}\n        />\n        <hr />\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-12\">\n          <Field\n            name=\"note\"\n            label=\"Keterangan\"\n            placeholder=\"cth: Pernah dilakukan service namun tidak rampung\"\n            component={CInput}\n            typeComponent=\"textarea\"\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentSparePartComponent;\n","import React from \"react\";\n\nimport { Steps, Button, message } from \"antd\";\nimport { Typography } from \"antd\";\nimport styled from \"styled-components\";\nimport CBadgeText from \"../../../../components/CBadgeText/CBadgeText\";\n\nconst { Text } = Typography;\n\nconst StepsContent = styled.div`\n  min-height: 200px;\n  margin-top: 16px;\n  padding-top: 22px;\n  text-align: center;\n  background-color: #fafafa;\n  border: 1px dashed #e9e9e9;\n  border-radius: 2px;\n`;\n\nconst StepsAction = styled.div`\n  margin-top: 24px;\n`;\n\nconst { Step } = Steps;\n\nconst FormWizardIdentificationComponent = (props) => {\n  const { data, steps, saveFormChanges } = props;\n  const [current, setCurrent] = React.useState(0);\n\n  const onClickNext = () => {\n    setCurrent(current + 1);\n    saveFormChanges(false);\n  };\n\n  const onClickPrevious = () => {\n    setCurrent(current - 1);\n  };\n\n  const onFinished = () => {\n    message.success(\"Processing complete!\");\n    saveFormChanges(true);\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"card\">\n          <div class=\"card-body\">\n            <h4 class=\"card-title\">Form Identification</h4>\n            <h6 class=\"text-small\">\n              {data.milling ? \"(Penggilingan)\" : \"(Non Penggilingan)\"}\n            </h6>\n            <hr />\n            <div class=\"d-flex justify-content-between align-items-baseline\">\n              <div class=\"col-md-6 mb-3\">\n                <Text>Nama Customer : </Text>\n                <Text strong>{data.customer_name ?? \"-\"}</Text>\n                <br />\n                <Text>Tipe : </Text>\n                <Text strong>{data.type ?? \"-\"}</Text>\n                <br />\n                <Text>Cabang : </Text>\n                <Text strong>{data.branch_name ?? \"-\"}</Text>\n                <br />\n                <Text>Status : </Text>\n                <CBadgeText type=\"info\">{data.status ?? \"-\"}</CBadgeText>\n                <br />\n                <Text>Dibuat : </Text>\n                <Text strong>{data.created_date ?? \"-\"}</Text>\n              </div>\n            </div>\n            <Steps current={current}>\n              {steps.map((item) => (\n                <Step\n                  description={item.description}\n                  key={item.title}\n                  title={item.title}\n                />\n              ))}\n            </Steps>\n            <StepsContent>{steps[current].content}</StepsContent>\n            <StepsAction>\n              {current < steps.length - 1 && (\n                <Button type=\"primary\" onClick={onClickNext}>\n                  Next\n                </Button>\n              )}\n              {current === steps.length - 1 && (\n                <Button type=\"primary\" onClick={onFinished}>\n                  Done\n                </Button>\n              )}\n              {current > 0 && (\n                <Button style={{ margin: \"0 8px\" }} onClick={onClickPrevious}>\n                  Previous\n                </Button>\n              )}\n            </StepsAction>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default FormWizardIdentificationComponent;\n","import React, { Fragment } from \"react\";\nimport { Field, FieldArray } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport {\n  DeleteOutlined,\n  PlusOutlined,\n  InfoCircleTwoTone,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\n\nconst ContentMachineConfigurationComponent = ({\n  machineConf,\n  onAddMachineConf,\n}) => {\n  const RenderBodyHusker = ({ fields, item }) => {\n    const handleRemoveField = (index) => {\n      fields.remove(index);\n    };\n    return (\n      <Fragment>\n        <div class=\"d-flex flex-row-reverse\">\n          <div class=\"ml-2\" />\n          <CButtonAntd\n            key={`plusUnit`}\n            type=\"primary\"\n            icon={<PlusOutlined />}\n            onClick={() => {\n              if (fields.length >= 2) {\n                return;\n              }\n              fields.push({});\n              setTimeout(() => {\n                onAddMachineConf(item);\n              }, 500);\n            }}\n          >\n            Tambah\n          </CButtonAntd>\n        </div>\n        <br />\n        {fields.map((itemUnit, indexUnit) => {\n          return (\n            <div key={`unit-item-${indexUnit}`}>\n              <div class=\"row mr-2\">\n                <div class=\"col\">\n                  <h5 class=\"card-title\">{`${item.type} ${indexUnit + 1}`}</h5>\n                </div>\n                <CButtonAntd\n                  key={`remove-unit-btn-${indexUnit}`}\n                  type=\"primary\"\n                  icon={<DeleteOutlined />}\n                  onClick={() => handleRemoveField(indexUnit)}\n                  danger\n                  size=\"small\"\n                />\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.brand`}\n                    label=\"Merek\"\n                    placeholder=\"cth: merek_1, merek_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-5\">\n                  <Field\n                    name={`${itemUnit}.type`}\n                    label=\"Tipe\"\n                    placeholder=\"cth: tipe_1, tipe_2, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-2\">\n                  <Field\n                    name={`${itemUnit}.qty`}\n                    label=\"Qty\"\n                    placeholder=\"cth: 12, 5, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n              <div class=\"row mr-2\">\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.buy_and_use_year`}\n                    label=\"Tahun Pembelian & Pemakaian\"\n                    placeholder=\"cth: 2015, 2017, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n                <div class=\"col-md-6\">\n                  <Field\n                    name={`${itemUnit}.serial_number`}\n                    label=\"Nomor Seri\"\n                    placeholder=\"cth: 77888, 66555, ...\"\n                    component={CInput}\n                    type=\"text\"\n                  />\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </Fragment>\n    );\n  };\n\n  return machineConf.map((item, index) => {\n    return (\n      <div key={`machine-conf-${index}`} className=\"col m-2 text-left\">\n        <h5 className=\"card-title\">{item.type}</h5>\n        <div className=\"row text-left ml-1\">\n          <InfoCircleTwoTone />\n          <p className=\"text-small ml-2\">\n            Tips : Maksimal hanya input 2 field.\n          </p>\n        </div>\n        <FieldArray\n          name={`engine_confs.${item.name}.list`}\n          component={(_props) => <RenderBodyHusker item={item} {..._props} />}\n        />\n        <hr />\n      </div>\n    );\n  });\n};\n\nexport default ContentMachineConfigurationComponent;\n","import React from \"react\";\nimport { Field } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CDatePicker from \"../../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst ContentStepOneRegularComponent = ({\n  provinces,\n  cities,\n  onChangeProvince,\n  enumInstanceType,\n  enumStatusMilling,\n}) => {\n  return (\n    <>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumInstanceType}\n            name=\"instanceType\"\n            label=\"Tipe Instansi\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instanceName\"\n            label=\"Nama Instansi\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"ktp_npwp\"\n            label=\"NPWP/No.KTP\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <div class=\"row m-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"customerName\"\n            label=\"Nama Customer\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"productName\"\n            label=\"Nama Produk\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={enumStatusMilling}\n            name=\"millingStatus\"\n            label=\"Status\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <Field\n            name=\"instancePhoneNumber\"\n            label=\"No. Telepon\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </div>\n      <hr />\n      <div className=\"row ml-4\">\n        <h5 className=\"card-title\">Alamat Customer</h5>\n      </div>\n      <div class=\"row ml-2 mr-2 text-left\">\n        <div class=\"col-md-4\">\n          <Field\n            name=\"kelurahan\"\n            label=\"Kelurahan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n          <Field\n            name=\"kecamatan\"\n            label=\"Kecamatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            onChange={(val) => onChangeProvince(val)}\n            data={provinces}\n            name=\"province\"\n            label=\"Nama Provinsi\"\n          />\n          <Field\n            name=\"postalCode\"\n            label=\"Kode Pos\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-4\">\n          <CSelect\n            data={cities}\n            name=\"city\"\n            label=\"Kota/Kabupaten\"\n            disabled={cities.length <= 0}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default ContentStepOneRegularComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, getFormValues, reduxForm } from \"redux-form\";\nimport Invoke from \"../../../../app/axios/Invoke\";\nimport {\n  getCitiesEnum,\n  getMachineConf,\n  getProvinceEnum,\n  SelectInstanceType,\n  SelectInstanceTypeRegular,\n  SelectStatusMilling,\n} from \"../../../../app/Helpers\";\nimport ContentStepOneComponent from \"../../Component/Wizard/ContentStepOneComponent\";\nimport ContentUnitComponent from \"../../Component/Wizard/ContentUnitComponent\";\nimport ContentSparePartComponent from \"../../Component/Wizard/ContentSparePartComponent\";\nimport FormWizardIdentificationComponent from \"../../Component/Wizard/FormWizardIdentificationComponent\";\nimport ContentMachineConfigurationComponent from \"../../Component/Wizard/ContentMachineConfigurationComponent\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport ContentStepOneRegularComponent from \"../../Component/Wizard/ContentStepOneRegularComponent\";\nimport * as IdentificationActions from \"../../Store/IdentificationActions\";\n\nconst FormWizardIdentificationContainer = (props) => {\n  const [cities, setCities] = React.useState([]);\n  const [serviced, setServiced] = React.useState(false);\n  const {\n    identification: { selectedIdentificationData, formStatus },\n    masters: { listProvince },\n    machineConfiguration: { listMachine },\n    identificationFormValues,\n  } = props;\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"wizardIdentificationForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  const onChangeServiced = (val) => {\n    const isServiced = val.split(\"|\");\n    if (isServiced[0] === \"true\") {\n      setServiced(true);\n    } else {\n      setServiced(false);\n    }\n  };\n\n  const onAddMachineConf = (item) => {\n    store.dispatch(\n      change(\n        \"wizardIdentificationForm\",\n        `engine_confs.${item.name}.id`,\n        item.id\n      )\n    );\n  };\n\n  const saveFormChanges = (isLastStep) => {\n    IdentificationActions.saveIdentificationRequested(\n      formStatus,\n      identificationFormValues,\n      isLastStep\n    );\n  };\n\n  const steps = [];\n\n  if (selectedIdentificationData.milling) {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceType}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Konfigurasi Mesin\",\n      content: (\n        <ContentMachineConfigurationComponent\n          machineConf={getMachineConf(listMachine)}\n          onAddMachineConf={onAddMachineConf}\n        />\n      ),\n    });\n  } else {\n    steps.push({\n      title: \"Customer\",\n      content: (\n        <ContentStepOneRegularComponent\n          provinces={getProvinceEnum(listProvince)}\n          cities={cities}\n          onChangeProvince={onChangeProvince}\n          enumInstanceType={SelectInstanceTypeRegular}\n          enumStatusMilling={SelectStatusMilling}\n        />\n      ),\n    });\n    steps.push({\n      title: \"Unit\",\n      content: <ContentUnitComponent />,\n    });\n  }\n\n  steps.push({\n    title: \"Spare Part\",\n    content: (\n      <ContentSparePartComponent\n        onChangeServiced={onChangeServiced}\n        isServiced={serviced}\n      />\n    ),\n  });\n\n  return (\n    <FormWizardIdentificationComponent\n      data={selectedIdentificationData}\n      steps={steps}\n      saveFormChanges={saveFormChanges}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  services: state.services,\n  detailService: state.detailService,\n  identification: state.identification,\n  masters: state.masters,\n  machineConfiguration: state.machineConfiguration,\n  identificationFormValues: getFormValues(\"wizardIdentificationForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormWizardIdentificationContainer);\n\nexport default reduxForm({\n  form: \"wizardIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  formStatus,\n  listCustomer,\n  listType,\n  listBranch,\n  listLocation,\n  listMilling\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          {formStatus === \"edit\" && (\n            <Field\n              name=\"id\"\n              label=\"ID Cabang\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          )}\n        </div>\n        <div class=\"col-md-12\">\n          <CSelect\n            // onChange={(val) => handleAutoPopulateUnitModel(val, indexUnit)}\n            showSearch\n            data={listCustomer}\n            label=\"Nama Customer\"\n            name=\"customer\"\n          />\n          <div class=\"row\">\n            <div class=\"col-md-6\">\n              <CSelect data={listBranch} label=\"Cabang\" name=\"branch\" />\n            </div>\n            <div class=\"col-md-6\">\n              <CSelect data={listLocation} label=\"Lokasi\" name=\"location\" />\n            </div>\n          </div>\n          <CSelect data={listType} label=\"Tipe Identifikasi\" name=\"type\" />\n          <CSelect data={listMilling} label=\"Milling\" name=\"milling\" />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst IdentificationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n    enumCustomers,\n    enumType,\n    enumBranch,\n    enumLocation,\n    enumMilling,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n          listCustomer={enumCustomers}\n          listType={enumType}\n          listBranch={enumBranch}\n          listLocation={enumLocation}\n          listMilling={enumMilling}\n        />\n      }\n    />\n  );\n};\n\nexport default IdentificationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as CustomersActions from \"../../Customers/Store/CustomersActions\";\nimport IdentificationModalComponent from \"../Component/IdentificationModalComponent\";\nimport {\n  SelectLocation,\n  SelectMilling,\n  SelectType,\n} from \"../../../app/Helpers\";\n\nconst IdentificationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    identification: { formStatus },\n    handleSubmitForm,\n    customers: { listCustomers },\n    branch: { listBranch },\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomer = [];\n  listCustomers.map((item, index) => {\n    SelectCustomer.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    CustomersActions.getCustomerListDataByPaging(1, 300);\n  }, []);\n\n  return (\n    <IdentificationModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumCustomers={SelectCustomer}\n      enumType={SelectType}\n      enumBranch={SelectBranch}\n      enumLocation={SelectLocation}\n      enumMilling={SelectMilling}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  identification: state.identification,\n  component: state.component,\n  masters: state.masters,\n  customers: state.customers,\n  branch: state.branch,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    IdentificationActions.saveIdentificationRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(IdentificationModalContainer);\n\nexport default reduxForm({\n  form: \"editIdentificationhForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport IdentificationModalContainer from \"../Container/IdentificationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ListIdentificationComponent = (props) => {\n  const {\n    headers,\n    listIdentification,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Identifikasi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Identifikasi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listIdentification}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    size=\"small\"\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <IdentificationModalContainer />\n    </div>\n  );\n};\n\nexport default ListIdentificationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as IdentificationActions from \"../Store/IdentificationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ListIdentificationComponent from \"../Component/ListIdentificationComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ListIdentificationContainer = (props) => {\n  const {\n    getListIdentification,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    identification: { listIdentification, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listIdentification.length > 0) {\n    listIdentification.map((item, index) => {\n      listIdentification[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_id\",\n      width: \"30%\",\n      sorter: (a, b) => a.branch_id.length - b.branch_id.length,\n    },\n    {\n      title: \"Tipe Identifikasi\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"20%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListIdentification(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(IdentificationActions.setPagingIdentification(paging));\n    getListIdentification(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListIdentification(page, limit, val);\n  };\n\n  return (\n    <ListIdentificationComponent\n      headers={headers}\n      listIdentification={listIdentification}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  identification: state.identification,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListIdentification: (page, limit, keyword) =>\n    IdentificationActions.getIdentificationListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(IdentificationActions.setSelectedIdentificationData({}));\n    await dispatch(IdentificationActions.setSelectedIdentificationId(\"\"));\n    dispatch(IdentificationActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    IdentificationActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(IdentificationActions.setFormStatus(\"edit\"));\n    await dispatch(\n      IdentificationActions.setSelectedIdentificationId(record.id)\n    );\n    await dispatch(IdentificationActions.setSelectedIdentificationData(record));\n    setTimeout(() => {\n      navigate(\"form-identification\");\n    }, 500);\n  },\n  handlePressDelete: async (branchId) => {\n    await dispatch(IdentificationActions.setSelectedIdentificationId(branchId));\n    IdentificationActions.deleteIdentificationRequested(branchId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ListIdentificationContainer);\n\nexport default reduxForm({\n  form: \"identificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, formStatus }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {formStatus === \"edit\" && (\n          <div class=\"col-md-12\">\n            <Field\n              name=\"id\"\n              label=\"ID Konfigurasi Mesin\"\n              placeholder=\"-\"\n              component={CInput}\n              type=\"text\"\n              disabled\n            />\n          </div>\n        )}\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Konfigurasi Mesin\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst MachineConfigurationModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          formStatus={formStatus}\n        />\n      }\n    />\n  );\n};\n\nexport default MachineConfigurationModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as MachineConfigurationActions from \"../Store/MachineConfigurationActions\";\nimport BranchModalComponent from \"../Component/MachineConfigurationModalComponent\";\n\nconst MachineConfigurationModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    MachineConfigurationActions.saveMachineRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationModalContainer);\n\nexport default reduxForm({\n  form: \"editMachineConfigurationForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport MachineConfigurationModalContainer from \"../Container/MachineConfigurationModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst MachineConfigurationComponent = (props) => {\n  const {\n    headers,\n    listMachine,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Konfigurasi Mesin</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Konfigurasi Mesin\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listMachine}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <MachineConfigurationModalContainer />\n    </div>\n  );\n};\n\nexport default MachineConfigurationComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as MachineActions from \"../Store/MachineConfigurationActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport MachineConfigurationComponent from \"../Component/MachineConfigurationComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex } from \"../../../app/Helpers\";\n\nconst MachineConfigurationContainer = (props) => {\n  const {\n    getListMachine,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    machineConfiguration: { listMachine, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listMachine.length > 0) {\n    listMachine.map((item, index) => {\n      listMachine[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Konfigurasi Mesin\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"50%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListMachine(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(MachineActions.setPagingMachineConf(paging));\n    getListMachine(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListMachine(page, limit, val);\n  };\n\n  return (\n    <MachineConfigurationComponent\n      headers={headers}\n      listMachine={listMachine}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  branch: state.branch,\n  machineConfiguration: state.machineConfiguration,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListMachine: (page, limit, keyword) =>\n    MachineActions.getMachineListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(MachineActions.setSelectedMachineData({}));\n    await dispatch(MachineActions.setSelectedMachineId(\"\"));\n    dispatch(MachineActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    MachineActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(MachineActions.setFormStatus(\"edit\"));\n    await dispatch(MachineActions.setSelectedMachineId(record.id));\n    await dispatch(MachineActions.setSelectedMachineData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await MachineActions.mapDetailMachineToForm();\n  },\n  handlePressDelete: async (machineId) => {\n    await dispatch(MachineActions.setSelectedMachineId(machineId));\n    MachineActions.deleteMachineRequested(machineId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(MachineConfigurationContainer);\n\nexport default reduxForm({\n  form: \"machineConfigurationForm\",\n})(EnhanceContainer);\n","import React, { useState } from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Upload, message, Typography } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { getBase64 } from \"../../../app/Helpers\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\n\nconst beforeUpload = (file) => {\n  const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n  if (!isJpgOrPng) {\n    message.error(\"You can only upload JPG/PNG file!\");\n  }\n  const isLt2M = file.size / 1024 / 1024 < 2;\n  if (!isLt2M) {\n    message.error(\"Image must smaller than 2MB!\");\n  }\n  return isJpgOrPng && isLt2M;\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  handleUploadPhoto,\n  selectedUnitsData,\n}) => {\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [loading, setLoading] = useState(\"\");\n\n  const handleChange = (info) => {\n    if (info.file.status === \"uploading\") {\n      setLoading(true);\n      info.file.status = \"done\";\n    }\n    if (info.file.status === \"done\") {\n      // Get this url from response in real world.\n      getBase64(info.file.originFileObj, (imageUrl) => {\n        setImageUrl(imageUrl);\n        setLoading(false);\n        handleUploadPhoto(imageUrl);\n      });\n    }\n  };\n\n  const uploadButton = (\n    <div>\n      {loading ? <LoadingOutlined /> : <PlusOutlined />}\n      <div style={{ marginTop: 8 }}>Upload</div>\n    </div>\n  );\n\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        {/* <div class=\"col-md-12\">\n          <Text style={{ marginBottom: 10 }}>Foto Unit</Text>\n          <Upload\n            name=\"avatar\"\n            listType=\"picture-card\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n            // action=\"https://www.mocky.io/v2/5cc8019d300000980a055e76\"\n            beforeUpload={beforeUpload}\n            onChange={handleChange}\n          >\n            {imageUrl ? (\n              <img\n                src={imageUrl}\n                alt=\"avatar\"\n                style={{ height: \"100%\", width: \"100%\" }}\n              />\n            ) : (\n              uploadButton\n            )}\n          </Upload>\n        </div> */}\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"name\" label=\"Nama Unit\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport UnitsModalComponent from \"../Component/UnitsModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    UnitsActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    UnitsActions.saveUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitForm\",\n  validate: validateFormUnit,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input, Table, Tooltip } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport UnitsModalContainer from \"../Container/UnitsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <Tooltip placement=\"top\" title=\"Edit unit\">\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </Tooltip>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    size=\"small\"\n                    columns={headers}\n                    dataSource={listUnits}\n                    // renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitsComponent;\n","import { Button, Space, Tooltip, Typography } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitsActions from \"../Store/UnitsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  BoxPlotOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/UnitsComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressUnitModel,\n    handlePressUnitFields,\n    handlePressLink,\n    units: { listUnits, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const tooltipText = <span>Unit Model</span>;\n\n  if (listUnits.length > 0) {\n    listUnits.map((item, index) => {\n      listUnits[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <Tooltip placement=\"topLeft\" title=\"Edit unit\">\n        <CButtonAntd\n          onClick={() => {\n            handlePressEdit(record);\n          }}\n          type=\"primary\"\n          icon={<EditOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n      <Tooltip placement=\"top\" title={tooltipText}>\n        <CButtonAntd\n          onClick={() => handlePressUnitModel(record.id)}\n          type=\"primary\"\n          icon={<BoxPlotOutlined />}\n          size=\"middle\"\n        />\n      </Tooltip>\n      <CButtonAntd\n        onClick={() => handlePressUnitFields(record)}\n        type=\"primary\"\n        icon={<FileAddOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n      render: (unit, record) => (\n        <Button\n          block\n          onClick={() => handlePressLink(record)}\n          type=\"link\"\n          style={{ whiteSpace: \"normal\", textAlign: \"left\" }}\n        >\n          <Typography\n            style={{ color: \"#1890ff\", fontWeight: \"bold\", fontSize: 11 }}\n          >\n            {unit}\n          </Typography>\n        </Button>\n      ),\n    },\n    {\n      title: \"Divisi\",\n      dataIndex: \"division\",\n      key: \"division\",\n      width: \"10%\",\n      sorter: (a, b) => a.division.length - b.division.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      align: \"center\",\n      title: \"Aksi\",\n      key: \"action\",\n      width: \"30%\",\n      render: renderActionTable,\n    },\n  ];\n\n  React.useEffect(() => {\n    getListUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitsActions.setPagingUnit(paging));\n    getListUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnit(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listUnits}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnit: (page, limit, keyword) =>\n    UnitsActions.getUnitListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitsActions.setSelectedUnitData({}));\n    await dispatch(UnitsActions.setSelectedUnitId(\"\"));\n    dispatch(UnitsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitsActions.mapDetailUnitToForm();\n  },\n  handlePressDelete: async (unitId) => {\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    UnitsActions.deleteUnitRequested(unitId);\n  },\n  handlePressUnitModel: async (unitId) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(unitId));\n    setTimeout(() => {\n      navigate(\"unit-models\");\n    }, 500);\n  },\n  handlePressUnitFields: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    setTimeout(() => {\n      navigate(\"unit-fields\");\n    }, 500);\n  },\n  handlePressLink: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitsActions.setSelectedUnitId(record.id));\n    await dispatch(UnitsActions.setSelectedUnitData(record));\n    setTimeout(() => {\n      navigate(\"unit-job-forms\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"unitsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumProvince,\n  onChangeProvince,\n  cities,\n  enumBranch,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"name\"\n              label=\"Nama Customer\"\n              placeholder=\"Nama..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"picPhone\"\n              label=\"Telepon PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"username\"\n              label=\"Username\"\n              placeholder=\"Username..\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              onChange={(val) => onChangeProvince(val)}\n              data={enumProvince}\n              name=\"province\"\n              label=\"Nama Provinsi\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"password\"\n              label=\"Password\"\n              placeholder=\"Password..\"\n              component={CInput}\n              type=\"password\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect\n              data={cities}\n              name=\"city\"\n              label=\"Kota/Kabupaten\"\n              disabled={cities.length <= 0}\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"phone\"\n              label=\"Telepon\"\n              placeholder=\"cth: 0821xxx\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <CSelect data={enumBranch} name=\"branch\" label=\"Cabang\" />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"workHour\"\n              label=\"Jam Kerja\"\n              placeholder=\"cth : 08:00 - 15:20\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-6\">\n            <Field\n              name=\"pic\"\n              label=\"PIC\"\n              placeholder=\"PIC\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"col-md-6\">\n            <Field\n              name=\"address\"\n              label=\"Alamat\"\n              component={CInput}\n              type=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst CustomerModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    enumProvince,\n    onChangeProvince,\n    cities,\n    enumBranch,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      width={900}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n          enumProvince={enumProvince}\n          onChangeProvince={onChangeProvince}\n          cities={cities}\n          enumBranch={enumBranch}\n        />\n      }\n    />\n  );\n};\n\nexport default CustomerModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormRoles } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as CustomersActions from \"../Store/CustomersActions\";\nimport CustomerModalComponent from \"../Component/CustomerModalComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport Invoke from \"../../../app/axios/Invoke\";\nimport { getCitiesEnum } from \"../../../app/Helpers\";\n\nconst CustomerModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { listBranch },\n    masters: { listMenu, listProvince },\n    customers: { selectedCustomerData, formStatus },\n    handleSubmitForm,\n  } = props;\n  const [cities, setCities] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const SelectProvince = [];\n  listProvince.map((item, index) => {\n    SelectProvince.push({\n      id: `province-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    setCities([]);\n    if (formStatus === \"edit\" && selectedCustomerData.province_id) {\n      const provinceId =\n        selectedCustomerData.province_id +\n        \"|\" +\n        selectedCustomerData.province_name;\n      onChangeProvince(provinceId);\n    }\n  }, [formStatus, selectedCustomerData.province_id]);\n\n  React.useEffect(() => {\n    return () => {\n      CustomersActions.setFormStatus(\"add\");\n    };\n  });\n\n  const onChangeProvince = async (provinceId) => {\n    setCities([]);\n    try {\n      if (provinceId) {\n        const splitProvince = provinceId.split(\"|\");\n        const { data } = await Invoke.getCityList(1, 100, splitProvince[0]);\n        const provinceMapping = getCitiesEnum(data.callback.data);\n        setCities(provinceMapping);\n      } else {\n        store.dispatch(change(\"editCustomerForm\", `city`, \"\"));\n        setCities([]);\n      }\n    } catch (error) {\n      setCities([]);\n      console.log(\"Error : \", error);\n    }\n  };\n\n  return (\n    <CustomerModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumProvince={SelectProvince}\n      onChangeProvince={onChangeProvince}\n      cities={cities}\n      enumBranch={SelectBranch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  customers: state.customers,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    CustomersActions.saveCustomerRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerModalContainer);\n\nexport default reduxForm({\n  form: \"editCustomerForm\",\n  validate: validateFormRoles,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Divider, Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport CustomerModalContainer from \"../Container/CustomerModalContainer\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Search } = Input;\n\nconst CustomerComponent = (props) => {\n  const {\n    headers,\n    listCustomers,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    enumBranch,\n    isBlocked\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Customer</h6>\n                </div>\n                <div class=\"row align-items-center\">\n                  <CButtonAntd\n                    onClick={handlePressAddNew}\n                    type=\"primary\"\n                    icon={<PlusOutlined />}\n                    size=\"middle\"\n                  >\n                    Tambah Customers\n                  </CButtonAntd>\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row d-flex mb-2 mt-3\">\n                  {!isBlocked && <div class=\"col-md-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>}\n                  <div class=\"col-md-4 mt-4\">\n                    <div class=\"mt-2\" />\n                    <Search\n                      placeholder=\"Cari Customer\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listCustomers}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <CustomerModalContainer />\n    </div>\n  );\n};\n\nexport default CustomerComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { formValueSelector, reduxForm } from \"redux-form\";\nimport * as CustomerActions from \"../Store/CustomersActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport * as MasterDataActions from \"../../MasterData/Store/MasterDataActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CustomerComponent from \"../Component/CustomerComponent\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport { getIndex, isBlockedRoleCustomer } from \"../../../app/Helpers\";\n\nconst selector = formValueSelector(\"customerForm\");\n\nconst CustomerContainer = (props) => {\n  const {\n    user: { roles },\n    getListCustomer,\n    getListBranch,\n    getListProvince,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    customerBranchValue,\n    customers: { listCustomers, paging, keyword },\n    branch: { listBranch },\n  } = props;\n  const [isBlocked, setisBlocked] = React.useState(false);\n\n  const { page, totalPage, limit } = paging;\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  if (listCustomers.length > 0) {\n    listCustomers.map((item, index) => {\n      listCustomers[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Telepon\",\n      dataIndex: \"phone\",\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n    {\n      title: \"PIC | Phone\",\n      dataIndex: `phone`,\n      key: \"phone\",\n      width: \"20%\",\n      sorter: (a, b) => a.phone.length - b.phone.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  const checkBlockedRole = () => {\n    getListCustomer(1, 10, \"\");\n\n    const roleId = roles[0].role_id;\n    const isBlockedRole = isBlockedRoleCustomer(roleId);\n    if (isBlockedRole) {\n      setisBlocked(isBlockedRole);\n    } else {\n      setisBlocked(false);\n    }\n  };\n\n  React.useEffect(() => {\n    getListBranch();\n    getListProvince();\n    checkBlockedRole();\n  }, []);\n\n  const onChangePagination = async (nextPage) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n    await store.dispatch(CustomerActions.setPagingCustomer(paging));\n    getListCustomer(nextPage, limit, keyword);\n  };\n\n  const onSearch = (val) => {\n    getListCustomer(page, limit, val, customerBranchValue);\n  };\n\n  return (\n    <CustomerComponent\n      headers={headers}\n      paging={paging}\n      isBlocked={isBlocked}\n      listCustomers={listCustomers}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  customers: state.customers,\n  branch: state.branch,\n  customerBranchValue: selector(state, \"branch\"),\n  user: state.auth.userDetail,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListCustomer: (page, limit, keyword, branchId) => {\n    const splitBranch = branchId ? branchId.split(\"|\") : [\"\"];\n    CustomerActions.getCustomerListDataByPaging(\n      page,\n      limit,\n      keyword,\n      splitBranch[0]\n    );\n  },\n  getListBranch: () => BranchActions.getBranchListDataRequested(1, 250),\n  getListProvince: () => MasterDataActions.loadProvinceListData(),\n  handlePressAddNew: async () => {\n    await dispatch(CustomerActions.setSelectedCustomerData({}));\n    await dispatch(CustomerActions.setSelectedCustomerId(\"\"));\n    dispatch(CustomerActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    CustomerActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(CustomerActions.setFormStatus(\"edit\"));\n    await dispatch(CustomerActions.setSelectedCustomerId(record.id));\n    await dispatch(CustomerActions.setSelectedCustomerData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await CustomerActions.mapDetailCustomerToForm();\n  },\n  handlePressDelete: async (customerId) => {\n    await dispatch(CustomerActions.setSelectedCustomerId(customerId));\n    CustomerActions.deleteCustomerRequested(customerId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(CustomerContainer);\n\nexport default reduxForm({\n  form: \"customerForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Nama Peralatan\"\n            placeholder=\"-\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default ToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormTools } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport ToolsModalComponent from \"../Component/ToolsModalComponent\";\n\nconst ToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    tools: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <ToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    ToolsActions.saveToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editToolsForm\",\n  validate: validateFormTools,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport ToolsModalContainer from \"../Container/ToolsModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst ToolsComponent = (props) => {\n  const {\n    headers,\n    listTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Peralatan</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Peralatan\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ToolsModalContainer />\n    </div>\n  );\n};\n\nexport default ToolsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as ToolsActions from \"../Store/ToolsActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ToolsComponent from \"../Component/ToolsComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst ToolsContainer = (props) => {\n  const {\n    getListTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    tools: { listTools, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listTools.length > 0) {\n    listTools.map((item, index) => {\n      listTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListTools(1, 10);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(ToolsActions.setPagingTools(paging));\n    getListTools(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListTools(page, limit, val);\n  };\n\n  return (\n    <ToolsComponent\n      headers={headers}\n      listTools={listTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      onSearch={onSearch}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListTools: (page, limit, keyword) =>\n    ToolsActions.getToolsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(ToolsActions.setSelectedToolsData({}));\n    await dispatch(ToolsActions.setSelectedToolsId(\"\"));\n    dispatch(ToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    ToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(ToolsActions.setFormStatus(\"edit\"));\n    await dispatch(ToolsActions.setSelectedToolsId(record.id));\n    await dispatch(ToolsActions.setSelectedToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await ToolsActions.mapDetailToolsToForm();\n  },\n  handlePressDelete: async (toolsId) => {\n    await dispatch(ToolsActions.setSelectedToolsId(toolsId));\n    ToolsActions.deleteToolsRequested(toolsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ToolsContainer);\n\nexport default reduxForm({\n  form: \"toolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"name\"\n            label=\"Judul\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n            placeholder=\"Judul kategori\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst FormCategoryModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          enumMenu={enumMenu}\n        />\n      }\n    />\n  );\n};\n\nexport default FormCategoryModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormCategory } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport BranchModalComponent from \"../Component/FormCategoryModalComponent\";\n\nconst FormCategoryModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    branch: { formStatus },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  return (\n    <BranchModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  branch: state.branch,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    FormCategoryActions.saveFormCategoryRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryModalContainer);\n\nexport default reduxForm({\n  form: \"editFormCategory\",\n  validate: validateFormCategory,\n})(EnhanceContainer);\n","import React from \"react\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport FormCategoryModalContainer from \"../Container/FormCategoryModalContainer\";\nimport { Input } from \"antd\";\n\nconst { Search } = Input;\n\nconst FormCategoryComponent = (props) => {\n  const {\n    headers,\n    listFormCategory,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Data Kategori Form</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Kategori Form\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listFormCategory}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <FormCategoryModalContainer />\n    </div>\n  );\n};\n\nexport default FormCategoryComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as FormCategoryActions from \"../Store/FormCategoryActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport FormCategoryComponent from \"../Component/FormCategoryComponent\";\nimport { getIndex } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst FormCategoryContainer = (props) => {\n  const {\n    getListFormCategory,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    formCategory: { listFormCategory, paging, keyword },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listFormCategory.length > 0) {\n    listFormCategory.map((item, index) => {\n      listFormCategory[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Roles\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListFormCategory(page, limit, keyword);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(FormCategoryActions.setPagingFormCategory(paging));\n    getListFormCategory(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListFormCategory(page, limit, val);\n  };\n\n  return (\n    <FormCategoryComponent\n      headers={headers}\n      listFormCategory={listFormCategory}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  formCategory: state.formCategory,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListFormCategory: (page, limit, keyword) =>\n    FormCategoryActions.getFormCatgeoryListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData({}));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(\"\"));\n    dispatch(FormCategoryActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    FormCategoryActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(FormCategoryActions.setFormStatus(\"edit\"));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryId(record.id));\n    await dispatch(FormCategoryActions.setSelectedFormCategoryData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await FormCategoryActions.mapDetailCategoryToForm();\n  },\n  handlePressDelete: async (formCategoryId) => {\n    await dispatch(\n      FormCategoryActions.setSelectedFormCategoryId(formCategoryId)\n    );\n    FormCategoryActions.deleteFormCategoryRequested(formCategoryId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(FormCategoryContainer);\n\nexport default reduxForm({\n  form: \"formCategory\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row\">\n          <div class=\"col-md-12 mt-3\">\n            <Field\n              name=\"name\"\n              label=\"Nama Model\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitsModelsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitsModelsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnit, validateFormUnitModel } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitsModelsModalComponent from \"../Component/UnitsModelsModalComponent\";\n\nconst UnitModelsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    masters: { listMenu },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectMenu = [];\n  listMenu.map((item, index) => {\n    SelectMenu.push({\n      id: `role-${index}`,\n      value: item.id,\n      label: item.menu,\n    });\n  });\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitsModelsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitModelActions.saveUnitModelsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitModelForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport UnitModelsModalContainer from \"../Container/UnitModelsModalContainer\";\nimport { navigate } from \"../../../app/Helpers\";\n\nconst { Search } = Input;\n\nconst UnitModelsComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Unit Model</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Model\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitModelsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitModelsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitModelActions from \"../Store/UnitModelActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FieldNumberOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport UnitModelsComponent from \"../Component/UnitModelsComponent\";\n\nconst UnitModelsContainer = (props) => {\n  const {\n    getListUnitModels,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressSerialNumber,\n    unitModels: { listUnitModels, paging },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitModels.length > 0) {\n    listUnitModels.map((item, index) => {\n      listUnitModels[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Model\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"30%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_at\",\n      key: \"created_at\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_at.length - b.created_at.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressSerialNumber(record)}\n        type=\"ghost\"\n        icon={<FieldNumberOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitModels(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitModelActions.setPagingUnitModel(paging));\n    getListUnitModels(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitModels(page, limit, val);\n  };\n\n  return (\n    <UnitModelsComponent\n      headers={headers}\n      listUnits={listUnitModels}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitModels: state.unitModels,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitModels: (page, limit, keyword) =>\n    UnitModelActions.getUnitModelListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitModelActions.setSelectedUnitModelData({}));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(\"\"));\n    dispatch(UnitModelActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitModelActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitModelActions.setFormStatus(\"edit\"));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitModelActions.mapDetailUnitModelToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(UnitModelActions.setSelectedUnitModelId(unitModelId));\n    UnitModelActions.deleteUnitModelRequested(unitModelId);\n  },\n  handlePressSerialNumber: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(UnitModelActions.setSelectedUnitModelId(record.id));\n    await dispatch(UnitModelActions.setSelectedUnitModelData(record));\n    setTimeout(() => {\n      navigate(\"unit-serial-number\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitModelsContainer);\n\nexport default reduxForm({\n  form: \"unitsModelsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumFormCategory,\n  enumJobForm,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumFormCategory ?? []}\n              name=\"formCategory\"\n              label=\"Kategori\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"fieldName\"\n              label=\"Nama Field\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumJobForm ?? []}\n              name=\"jobForm\"\n              label=\"Jenis Form\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst UnitFieldsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumFormCategory,\n    enumJobForm,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumFormCategory={enumFormCategory}\n          enumJobForm={enumJobForm}\n        />\n      }\n    />\n  );\n};\n\nexport default UnitFieldsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { change, reduxForm } from \"redux-form\";\nimport { validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsModalComponent from \"../../Component/UnitFields/UnitFieldsModalComponent\";\nimport Invoke from \"../../../../app/axios/Invoke\";\n\nconst UnitFieldsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    handleSubmitForm,\n  } = props;\n  const [formCategory, setFormCategory] = React.useState([]);\n  const [jobForm, setJobForm] = React.useState([]);\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const loadOption = async () => {\n    const { data } = await Invoke.getFormCategory(1, 100, \"\");\n    const dataJobForm = await Invoke.getListJobForm(1, 100, \"\");\n    const listFormCategory = data.callback.data;\n    const listJobForm = dataJobForm.data.callback.data;\n\n    const SelectFormCategory = [];\n    listFormCategory.map((item, index) => {\n      SelectFormCategory.push({\n        id: `form-category-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    const SelectJobForm = [];\n    listJobForm.map((item, index) => {\n      SelectJobForm.push({\n        id: `job-form-${index}`,\n        value: item.id,\n        label: item.name,\n      });\n    });\n    setFormCategory(SelectFormCategory);\n    setJobForm(SelectJobForm);\n  };\n\n  React.useEffect(() => {\n    loadOption();\n  }, []);\n\n  const handleUploadPhoto = (base64) => {\n    store.dispatch(change(\"editUnitForm\", `imageUrl`, base64 ?? \"\"));\n  };\n\n  return (\n    <UnitFieldsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      handleUploadPhoto={handleUploadPhoto}\n      selectedUnitsData={selectedUnitsData}\n      enumFormCategory={formCategory}\n      enumJobForm={jobForm}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitFieldsActions.saveUnitFieldsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsModalContainer);\n\nexport default reduxForm({\n  form: \"editUnitFieldsForm\",\n  validate: validateFormUnitModel,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/UnitFields/UnitFieldsModalContainer\";\n\nconst { Search } = Input;\n\nconst UnitFieldsComponent = (props) => {\n  const {\n    headers,\n    listUnitFields,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitsData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Field Unit : ${selectedUnitsData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Field\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitFields}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default UnitFieldsComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as UnitFieldsActions from \"../../Store/UnitFieldsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitFieldsComponent from \"../../Component/UnitFields/UnitFieldsComponent\";\n\nconst UnitFieldsContainer = (props) => {\n  const {\n    getListUnitFields,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitFields: { listUnitFields, paging },\n    units: { selectedUnitsData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitFields.length > 0) {\n    listUnitFields.map((item, index) => {\n      listUnitFields[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Job Form\",\n      dataIndex: \"job_form_name\",\n      key: \"job_form_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\n    },\n    {\n      title: \"Nama Field\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n    {\n      title: \"Kategori\",\n      dataIndex: \"category_form_name\",\n      key: \"category_form_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.category_form_name.length - b.category_form_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"40%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListUnitFields(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitFieldsActions.setPagingUnitFields(paging));\n    getListUnitFields(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListUnitFields(page, limit, val);\n  };\n\n  return (\n    <UnitFieldsComponent\n      headers={headers}\n      listUnitFields={listUnitFields}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedUnitsData={selectedUnitsData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitFields: state.unitFields,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListUnitFields: (page, limit, keyword) =>\n    UnitFieldsActions.getUnitFieldsListDataRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData({}));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(\"\"));\n    dispatch(UnitFieldsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitFieldsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitFieldsActions.setFormStatus(\"edit\"));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(record.id));\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitFieldsActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(UnitFieldsActions.setSelectedUnitFieldsId(unitFieldsId));\n    UnitFieldsActions.deleteUnitFieldRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitFieldsContainer);\n\nexport default reduxForm({\n  form: \"unitFieldsForm\",\n})(EnhanceContainer);\n","import Invoke from \"../../../app/axios/Invoke\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport moment from \"moment\";\n\nexport const SET_REPORT_IDENTIFICATION_LIST_DATA =\n  \"SET_REPORT_IDENTIFICATION_LIST_DATA\";\nexport const SET_PAGING_REPORT_IDENTIFICATION =\n  \"SET_PAGING_REPORT_IDENTIFICATION\";\nexport const SET_FORM_STATUS = \"SET_FORM_STATUS\";\n\nexport const setReportIdentificationListData = (payload) => {\n  return {\n    type: SET_REPORT_IDENTIFICATION_LIST_DATA,\n    payload,\n  };\n};\n\nexport const setPagingReportIdentification = (payload) => {\n  return {\n    type: SET_PAGING_REPORT_IDENTIFICATION,\n    payload,\n  };\n};\n\nexport const setFormStatus = (payload) => {\n  return {\n    type: SET_FORM_STATUS,\n    payload,\n  };\n};\n\nexport const getReportEmployeeDataRequested = async (\n  page = 1,\n  limit = 999999,\n  keyword = \"\",\n  type = \"all\",\n  branchId = \"\",\n  from = moment().format(\"YYYY-MM-DD\").toString(),\n  until = moment().format(\"YYYY-MM-DD\").toString()\n) => {\n  const { getState } = store;\n  const paging = getState().reportEmployee.paging;\n  const { totalPage } = paging;\n  try {\n    const { data } = await Invoke.getReportEmployee(\n      page,\n      limit,\n      from,\n      until,\n      keyword,\n      branchId\n    );\n    const paging = {};\n    paging.page = page;\n    paging.limit = limit;\n    paging.totalPage = totalPage;\n\n    const newReportEmployee = [];\n\n    if (data.message.length > 0) {\n      data.message.map((item, index) => {\n        item.data.map((itemData, indexData) => {\n          newReportEmployee.push({\n            ...itemData,\n          });\n        });\n      });\n    }\n\n    store.dispatch(setReportIdentificationListData(newReportEmployee ?? []));\n    store.dispatch(setPagingReportIdentification(paging));\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport const handleSearch = async (values) => {\n  const { getState } = store;\n  const { page, limit } = getState().reportEmployee;\n\n  if (!values) {\n    await getReportEmployeeDataRequested(page, limit);\n    return;\n  }\n\n  const keyword = values.keyword ?? \"\";\n  const splitBranch = values.branch ? values.branch.split(\"|\") : \"\";\n  const startDate = moment(values.startDate).format(\"YYYY-MM-DD\") ?? \"\";\n  const endDate = moment(values.endDate).format(\"YYYY-MM-DD\") ?? \"\";\n\n  const branch = values.branch ? splitBranch[0] : \"\";\n\n  try {\n    await getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      branch,\n      startDate,\n      endDate\n    );\n  } catch (error) {\n    console.log(error);\n  }\n};\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport { categoryServices } from \"../../../app/Helpers\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst ReportIdentificationComponent = (props) => {\n  const { headers, listReportEmployee, onSearch, enumBranch } = props;\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Laporan Identifikasi</h6>\n                </div>\n                <Divider orientation=\"left\">Keterangan</Divider>\n                <div class=\"row\">\n                  {categoryServices.map((item, index) => (\n                    <div class=\"ml-3\" key={(\"service\", index)}>\n                      <Badge status={item.status} text={item.name} />\n                    </div>\n                  ))}\n                </div>\n                <Divider orientation=\"left\">Filter Data</Divider>\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-2\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <CSelect\n                      data={enumBranch ?? []}\n                      name=\"branch\"\n                      label=\"Cabang\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"Karyawan\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-2 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listReportEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ReportIdentificationComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport { EditOutlined } from \"@ant-design/icons\";\nimport { enumTypeMonitoringEmployee } from \"../../../app/Helpers\";\nimport * as ReportEmployeeActions from \"../Store/ReportIdentificationActions\";\nimport Text from \"antd/lib/typography/Text\";\nimport { Space, Tag } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport ReportEmployeeComponent from \"../Component/ReportIdentificationComponent\";\n\nconst ReportIdentificationContainer = (props) => {\n  const {\n    reportEmployee: { listReportEmployee, paging },\n    branch: { listBranch },\n    reportEmployeeFormValues,\n    getReportEmployee,\n    handlePressEdit,\n  } = props;\n\n  const { page, limit } = paging;\n\n  if (listReportEmployee.length > 0) {\n    listReportEmployee.map((item, index) => {\n      listReportEmployee[index] = { ...item, no: index + 1 };\n    });\n  }\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n    </Space>\n  );\n\n  const switchColorType = (isExternal, isWarranty) => {\n    if (isWarranty) {\n      return \"#ffc018\";\n    }\n    switch (isExternal) {\n      case true:\n        return \"#87d068\";\n        break;\n\n      default:\n        return \"#108ee9\";\n        break;\n    }\n  };\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Tanggal\",\n      dataIndex: \"jd_date\",\n      key: \"jd_date\",\n      width: \"20%\",\n      sorter: (a, b) => a.jd_date.length - b.jd_date.length,\n    },\n    {\n      title: \"Cabang\",\n      dataIndex: \"branch_name\",\n      key: \"branch_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.branch_name.length - b.branch_name.length,\n    },\n    {\n      title: \"Teknisi\",\n      dataIndex: \"technition\",\n      key: \"technition\",\n      width: \"20%\",\n      sorter: (a, b) => a.technition.length - b.technition.length,\n    },\n    {\n      title: \"Tipe\",\n      dataIndex: \"type\",\n      key: \"type\",\n      width: \"20%\",\n      render: (type, items) => {\n        let color = switchColorType(items.is_external, items.warranty);\n        return (\n          <Tag\n            style={{ borderRadius: 10, width: 115, textAlign: \"center\" }}\n            color={color}\n            key={type}\n          >\n            {type.toUpperCase()}\n          </Tag>\n        );\n      },\n      sorter: (a, b) => a.type.length - b.type.length,\n    },\n    {\n      title: \"Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Unit\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n    },\n    {\n      title: \"Model\",\n      dataIndex: \"unit_models\",\n      render: (units) =>\n        units.map((unit) => (\n          <Text>\n            {unit.unit_model_name}\n            {units.length <= 1 ? \"\" : \", \"}\n          </Text>\n        )),\n      key: \"unit_models\",\n      width: \"15%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Progress\",\n      dataIndex: \"status\",\n      key: \"status\",\n      render: (status) => {\n        let color = status === \"Progress\" ? \"#108ee9\" : \"#f50\";\n        return (\n          <Tag\n            style={{ width: 80, textAlign: \"center\" }}\n            color={color}\n            key={status}\n          >\n            {status.toUpperCase()}\n          </Tag>\n        );\n      },\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranch.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getReportEmployee(page, limit);\n  }, []);\n\n  const onSearch = () => {\n    ReportEmployeeActions.handleSearch(reportEmployeeFormValues);\n  };\n\n  return (\n    <ReportEmployeeComponent\n      headers={headers}\n      listReportEmployee={listReportEmployee}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  reportEmployee: state.reportEmployee,\n  branch: state.branch,\n  reportEmployeeFormValues: getFormValues(\"reportEmployeeForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getReportEmployee: (page, limit, keyword, from, until) =>\n    ReportEmployeeActions.getReportEmployeeDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ReportIdentificationContainer);\n\nexport default reduxForm({\n  form: \"reportIdentificationForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { Typography } from \"antd\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\n\nconst { Text } = Typography;\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumHeadDivision,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"col-md-12 mt-3\">\n          <Field name=\"title\" label=\"Judul\" component={CInput} type=\"text\" />\n        </div>\n        <div class=\"col-md-12 mt-3\">\n          <CSelect\n            showSearch\n            data={enumHeadDivision}\n            name=\"headDivision\"\n            label=\"Kepala Divisi\"\n          />\n        </div>\n        <div class=\"col-md-12\">\n          <Field\n            name=\"description\"\n            label=\"Deskripsi\"\n            component={CInput}\n            type=\"text\"\n          />\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumHeadDivision,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumHeadDivision={enumHeadDivision}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionForm } from \"../../../app/validateForm\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport DivisionModalComponent from \"../Component/DivisionModalComponent\";\nimport { enumSelectGenerator } from \"../../../app/Helpers\";\n\nconst DivisionModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    division: { formStatus },\n    masters: { listMenu },\n    employees: { listEmployees },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectEmployees = enumSelectGenerator(listEmployees, \"employee\");\n\n  return (\n    <DivisionModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      enumHeadDivision={SelectEmployees}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  division: state.division,\n  component: state.component,\n  masters: state.masters,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleClearModalContent: () => {\n    DivisionActions.resetForm();\n  },\n  handleSubmitForm: (type, values) =>\n    DivisionActions.saveDivisionRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionForm\",\n  validate: validateDivisionForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\nimport { PlusOutlined } from \"@ant-design/icons\";\nimport DivisionModalContainer from \"../Container/DivisionModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionComponent = (props) => {\n  const {\n    headers,\n    listUnits,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">Data Divisi</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <CButtonAntd\n                      onClick={handlePressAddNew}\n                      type=\"primary\"\n                      icon={<PlusOutlined />}\n                      size=\"middle\"\n                    >\n                      Tambah Divisi\n                    </CButtonAntd>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnits}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <DivisionModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionActions from \"../Store/DivisionActions\";\nimport * as DivisionUnitActions from \"../Store/DivisionUnitActions\";\nimport * as EmployeeActions from \"../../Employees/Store/EmployeesActions\";\nimport * as ComponentActions from \"../../App/Store/ComponentAction\";\nimport {\n  EditOutlined,\n  DeleteOutlined,\n  FileAddOutlined,\n} from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport UnitsComponent from \"../Component/DivisionComponent\";\nimport { getIndex, navigate } from \"../../../app/Helpers\";\nimport { store } from \"../../../app/ConfigureStore\";\n\nconst UnitsContainer = (props) => {\n  const {\n    getListDivision,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    handlePressDivisionUnit,\n    division: { listDivision, paging },\n    getListEmlpoyee \n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivision.length > 0) {\n    listDivision.map((item, index) => {\n      listDivision[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Judul\",\n      dataIndex: \"title\",\n      key: \"title\",\n      width: \"30%\",\n      sorter: (a, b) => a.title.length - b.title.length,\n    },\n    {\n      title: \"Kepala Divisi\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"30%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"15%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDivisionUnit(record)}\n        type=\"primary\"\n        icon={<FileAddOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivision(page, limit);\n    getListEmlpoyee(1, 99999);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionActions.setPagingDivision(paging));\n    getListDivision(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivision(page, limit, val);\n  };\n\n  return (\n    <UnitsComponent\n      headers={headers}\n      listUnits={listDivision}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivision: (page, limit, keyword) =>\n    DivisionActions.getDivisionListDataRequested(page, limit, keyword),\n  getListEmlpoyee: (page, limit) => {\n    EmployeeActions.loadEmployeeListData(page, limit);\n  },\n  handlePressAddNew: async () => {\n    await dispatch(DivisionActions.setSelectedDivisionData({}));\n    await dispatch(DivisionActions.setSelectedDivisionId(\"\"));\n    dispatch(DivisionActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionActions.mapDetailDivisionToForm();\n  },\n  handlePressDelete: async (divisionId) => {\n    await dispatch(DivisionActions.setSelectedDivisionId(divisionId));\n    DivisionActions.deleteDivisionRequested(divisionId);\n  },\n  handlePressDivisionUnit: async (record) => {\n    await dispatch(ComponentActions.setGlobalLoading(true));\n    await dispatch(DivisionActions.setSelectedDivisionId(record.id));\n    await dispatch(DivisionActions.setSelectedDivisionData(record));\n    setTimeout(() => {\n      navigate(\"division-unit\");\n    }, 500);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitsContainer);\n\nexport default reduxForm({\n  form: \"divisionForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, enumTools }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">Tambah Peralatan Karyawan</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumTools}\n              name=\"tools\"\n              label=\"Peralatan\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst EmployeeToolsModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    enumTools,\n    formStatus,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formStatus={formStatus}\n          enumTools={enumTools}\n        />\n      }\n    />\n  );\n};\n\nexport default EmployeeToolsModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateEmployeeToolsForm, validateFormUnitModel } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport EmployeeToolsModalComponent from \"../../Component/EmployeeTools/EmployeeToolsModalComponent\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\n\nconst EmployeeToolsModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    employeeTools: { formStatus },\n    tools: { listTools },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectTools = enumSelectGenerator(listTools);\n\n  return (\n    <EmployeeToolsModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      enumTools={SelectTools}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  tools: state.tools,\n  employeeTools: state.employeeTools,\n  component: state.component,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    EmployeeToolsActions.saveEmployeeToolsRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsModalContainer);\n\nexport default reduxForm({\n  form: \"editEmployeeToolsForm\",\n  validate: validateEmployeeToolsForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport {\n  PlusOutlined,\n  ArrowLeftOutlined,\n  FilePdfOutlined,\n} from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport EmployeeToolsModalContainer from \"../../Container/EmployeeTools/EmployeeToolsModalContainer\";\n\nconst { Search } = Input;\n\nconst EmployeeToolsComponent = (props) => {\n  const {\n    headers,\n    listEmployeeTools,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedEmployeeData,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Karyawan : ${selectedEmployeeData.name}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-2 mb-2\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"employees\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Peralatan\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak PDF\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listEmployeeTools}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <EmployeeToolsModalContainer />\n    </div>\n  );\n};\n\nexport default EmployeeToolsComponent;\n","import jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nexport const generateEmployeeToolsReport = async (data) => {\n  const { selectedEmployeeData, listEmployeeTools } = data;\n  const newListData = [];\n\n  // eslint-disable-next-line array-callback-return\n  await listEmployeeTools.map((item, index) => {\n    newListData.push({ no: index + 1, name: item.name, check: \"-\" });\n  });\n\n  const doc = new jsPDF();\n\n  doc.setFontSize(20);\n  doc.setFont(\"courier\");\n  doc.text(\"Peralatan Karyawan\", 100, 20, \"center\");\n\n  doc.setFontSize(12);\n  doc.setFont(\"courier\");\n  //   Line 1\n  doc.text(15, 42, `Karyawan`);\n  doc.text(`: ${selectedEmployeeData.name.toUpperCase()}`, 50, 42);\n\n  doc.text(15, 49, `Cabang`);\n  doc.text(`: ${selectedEmployeeData.branch_name ?? \"-\"}`, 50, 49);\n\n  // drawCell is function for styling font, color and add content to every cell\n  const drawCell = (dataCell) => {\n    let docCell = dataCell.doc;\n\n    // --> Draw Circle shape for checklist\n    if (dataCell.cell.section === \"body\" && dataCell.column.index === 2) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 22, dataCell.cell.y + 4, 2, \"FD\");\n    } else if (\n      dataCell.cell.section === \"body\" &&\n      dataCell.column.index === 3\n    ) {\n      // --> set width of line Circle\n      docCell.setLineWidth(0.3);\n      // --> set fill color of circle\n      doc.setFillColor(255, 255, 255);\n      // --> Draw circle :)\n      // penjelasan parameter (x, y, r(panjang jari-jari lingkaran), style (\"F\"|\"FD\"))\n      doc.circle(dataCell.cell.x + 12, dataCell.cell.y + 4, 2, \"FD\");\n    }\n    // --> This for custom styling font too\n    // else if (dataCell.column.dataKey === \"no\") {\n    //   docCell.setFont(\"Verdana\", \"bold\");\n    //   docCell.setFontSize(12);\n    // }\n  };\n\n  // --> didParseCell is function for styling border, line, etc of every cell\n  const didParseCell = (dataCell) => {\n    let s = dataCell.cell.styles;\n    s.lineColor = [0, 0, 0];\n    s.lineWidth = 0.1;\n    s.font = \"courier\";\n\n    // --> This for spesific custom cell with spesific index\n    // if (dataCell.row.index === 1) {\n    //   s.lineColor = [0, 0, 0];\n    //   s.borders = \"t\";\n    // }\n  };\n\n  doc.autoTable({\n    startY: 57,\n    body: newListData,\n    theme: \"plain\",\n    headStyles: { halign: \"center\" },\n    styles: { overflow: \"linebreak\" },\n    columns: [\n      { header: \"#\", dataKey: \"no\" },\n      { header: \"Nama Peralatan\", dataKey: \"name\" },\n      { header: \"Check\", dataKey: \"test1\" },\n      { header: \"NA\", dataKey: \"test2\" },\n    ],\n    willDrawCell: drawCell,\n    didParseCell: didParseCell,\n    columnStyles: {\n      0: { halign: \"center\" },\n    },\n    tableLineColor: [0, 0, 0],\n    tableLineWidth: 0.3,\n  });\n\n  // === Signature ===\n  doc.addPage();\n  doc.setFontSize(16);\n  doc.setFont(\"Times-Roman\", \"regular\");\n  //   Line 2\n  doc.setFontSize(12);\n\n  doc.setFontSize(16);\n  doc.text(80, 90, `MENGETAHUI`);\n\n  //   Line 1\n  doc.text(45, 120, `Karyawan`);\n  doc.text(130, 120, `Coordinator /`);\n  doc.text(130, 127, `Supervisor`);\n\n  doc.text(45, 163, `(...........................)`);\n  doc.text(130, 163, `(...........................)`);\n\n  //   Export\n  doc.save(\n    `Peralatan-Karyawan-${selectedEmployeeData.name.replace(\" \", \"-\")}.pdf`\n  );\n};\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as EmployeeToolsActions from \"../../Store/EmployeeTools/EmployeeToolsActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport EmployeeToolsComponent from \"../../Component/EmployeeTools/EmployeeToolsComponent\";\nimport { generateEmployeeToolsReport } from \"../../Store/EmployeeTools/EmployeeToolsReport\";\n\nconst EmployeeToolsContainer = (props) => {\n  const {\n    getListEmployeeTools,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    employeeTools: { listEmployeeTools, paging },\n    employees: { selectedEmployeeData, selectedEmployeeId },\n    employeeToolsFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listEmployeeTools.length > 0) {\n    listEmployeeTools.map((item, index) => {\n      listEmployeeTools[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Peralatan\",\n      dataIndex: \"name\",\n      key: \"name\",\n      width: \"20%\",\n      sorter: (a, b) => a.name.length - b.name.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListEmployeeTools(selectedEmployeeId, page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(EmployeeToolsActions.setPagingEmployeeTools(paging));\n    getListEmployeeTools(selectedEmployeeId, nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListEmployeeTools(selectedEmployeeId, page, limit, val);\n  };\n\n  const handlePressGeneratePdf = () => {\n    const dataPrinted = {\n      selectedEmployeeData,\n      listEmployeeTools,\n    };\n    generateEmployeeToolsReport(dataPrinted, employeeToolsFormValues);\n  };\n\n  return (\n    <EmployeeToolsComponent\n      headers={headers}\n      listEmployeeTools={listEmployeeTools}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedEmployeeData={selectedEmployeeData}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  employees: state.employees,\n  employeeTools: state.employeeTools,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListEmployeeTools: (employeeId, page, limit, keyword) =>\n    EmployeeToolsActions.getEmployeeToolsRequested(\n      employeeId,\n      page,\n      limit,\n      keyword\n    ),\n  handlePressAddNew: async () => {\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData({}));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(\"\"));\n    dispatch(EmployeeToolsActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    EmployeeToolsActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(EmployeeToolsActions.setFormStatus(\"edit\"));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsId(record.id));\n    await dispatch(EmployeeToolsActions.setSelectedEmployeeToolsData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await EmployeeToolsActions.mapDetailEmployeeToolsToForm();\n  },\n  handlePressDelete: async (unitFieldsId) => {\n    await dispatch(\n      EmployeeToolsActions.setSelectedEmployeeToolsId(unitFieldsId)\n    );\n    EmployeeToolsActions.deleteEmployeeToolsRequested(unitFieldsId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(EmployeeToolsContainer);\n\nexport default reduxForm({\n  form: \"employeeToolsForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({ handleSubmit, submitForm, formName, enumUnits }) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect showSearch data={enumUnits} name=\"unit\" label=\"Unit\" />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst DivisionUnitModalComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    formStatus,\n    enumUnits,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumUnits={enumUnits}\n        />\n      }\n    />\n  );\n};\n\nexport default DivisionUnitModalComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateDivisionUnitForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport { enumSelectGenerator } from \"../../../../app/Helpers\";\nimport DivisionUnitModalComponent from \"../../Component/DivisionUnit/DivisionUnitModalComponent\";\n\nconst DivisionUnitModalContainer = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    divisionUnit: { formStatus, selectedDivisionUnitData },\n    units: { listUnits },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectUnits = enumSelectGenerator(listUnits, \"unit\");\n\n  return (\n    <DivisionUnitModalComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedDivisionUnitData={selectedDivisionUnitData}\n      enumUnits={SelectUnits}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    DivisionUnitActions.saveDivisionUnitRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitModalContainer);\n\nexport default reduxForm({\n  form: \"editDivisionUnitForm\",\n  validate: validateDivisionUnitForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport UnitFieldsModalContainer from \"../../Container/DivisionUnit/DivisionUnitModalContainer\";\n\nconst { Search } = Input;\n\nconst DivisionUnitComponent = (props) => {\n  const {\n    headers,\n    listDivisionUnit,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedDivisionData,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <h6 class=\"ml-3 card-title\">{`Divisi : ${selectedDivisionData.title}`}</h6>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"division\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Unit\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-4\">\n                    <Search\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listDivisionUnit}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <UnitFieldsModalContainer />\n    </div>\n  );\n};\n\nexport default DivisionUnitComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport * as DivisionUnitActions from \"../../Store/DivisionUnitActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport DivisionUnitComponent from \"../../Component/DivisionUnit/DivisionUnitComponent\";\n\nconst DivisionUnitContainer = (props) => {\n  const {\n    getListDivisionUnit,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    divisionUnit: { listDivisionUnit, paging },\n    division: { selectedDivisionData },\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  if (listDivisionUnit.length > 0) {\n    listDivisionUnit.map((item, index) => {\n      listDivisionUnit[index] = { ...item, no: getIndex(page, limit)[index] };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Unit\",\n      dataIndex: \"unit_name\",\n      key: \"unit_name\",\n      width: \"20%\",\n      sorter: (a, b) => a.unit_name.length - b.unit_name.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"description\",\n      key: \"description\",\n      width: \"20%\",\n      sorter: (a, b) => a.description.length - b.description.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created_date\",\n      key: \"created_date\",\n      width: \"30%\",\n      sorter: (a, b) => a.created_date.length - b.created_date.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    getListDivisionUnit(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(DivisionUnitActions.setPagingDivisionUnit(paging));\n    getListDivisionUnit(nextPage, pageSize);\n  };\n\n  const onSearch = (val) => {\n    getListDivisionUnit(page, limit, val);\n  };\n\n  return (\n    <DivisionUnitComponent\n      headers={headers}\n      listDivisionUnit={listDivisionUnit}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      selectedDivisionData={selectedDivisionData}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  division: state.division,\n  divisionUnit: state.divisionUnit,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListDivisionUnit: (page, limit, keyword) =>\n    DivisionUnitActions.getDivisionUnitListRequested(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData({}));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(\"\"));\n    dispatch(DivisionUnitActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    DivisionUnitActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(DivisionUnitActions.setFormStatus(\"edit\"));\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(record.id));\n    await dispatch(DivisionUnitActions.setSelectedDivisionUnitData(record));\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await DivisionUnitActions.mapDetailUnitFieldToForm();\n  },\n  handlePressDelete: async (divisionUnitId) => {\n    await dispatch(DivisionUnitActions.setSelectedDivisonUnitId(divisionUnitId));\n    DivisionUnitActions.deleteUnitFieldRequested(divisionUnitId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(DivisionUnitContainer);\n\nexport default reduxForm({\n  form: \"divisionUnitForm\",\n})(EnhanceContainer);\n","import React from \"react\";\nimport {\n  Page,\n  Text,\n  View,\n  Document,\n  StyleSheet,\n  PDFViewer,\n  Image,\n} from \"@react-pdf/renderer\";\n\n// Create styles\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: \"row\",\n    backgroundColor: \"#E4E4E4\",\n  },\n  section: {\n    margin: 10,\n    padding: 10,\n    flexGrow: 1,\n  },\n});\n\nconst DetailServiceReportComponent = () => {\n  return (\n    <PDFViewer style={{ flex: 1 }}>\n      <Document>\n        <Page size=\"A4\" style={styles.page}>\n          <View style={styles.section}>\n            <Text>Section #1</Text>\n          </View>\n          <View style={styles.section}>\n            <Text>Section #2</Text>\n          </View>\n          <View style={styles.section}>\n            <Image\n              style={{\n                width: 300,\n                height: 100,\n              }}\n              src=\"https://cors-anywhere.herokuapp.com/https://drive.google.com/file/d/1hwrQUgM6CvBwxIZUu1fRASxKQr0FxfsM/view\"\n            />\n          </View>\n        </Page>\n      </Document>\n    </PDFViewer>\n  );\n};\n\nexport default DetailServiceReportComponent;\n","import React from \"react\";\nimport DetailServiceReportComponent from \"../Components/DetailServiceReportComponent\";\n\nconst DetailServiceReportContainer = () => {\n  return <DetailServiceReportComponent />;\n};\n\nexport default DetailServiceReportContainer;\n","import React from \"react\";\nimport CModal from \"../../../../components/CModal/CModal\";\nimport { Field, Form } from \"redux-form\";\nimport CInput from \"../../../../components/CInput/CInput\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\n\nconst RenderFooter = ({ handleSaveForm }) => {\n  return [\n    <CButtonAntd\n      key=\"submit\"\n      type=\"primary\"\n      loading={false}\n      onClick={handleSaveForm}\n    >\n      Simpan\n    </CButtonAntd>,\n  ];\n};\n\nconst RenderContent = ({\n  handleSubmit,\n  submitForm,\n  formName,\n  enumCustomer,\n}) => {\n  return (\n    <div class=\"page-content\">\n      <h6 class=\"card-title text-center\">{formName}</h6>\n      <Form onSubmit={handleSubmit(submitForm)}>\n        <div class=\"row mt-3\">\n          <div class=\"col-md-12\">\n            <CSelect\n              showSearch\n              data={enumCustomer ?? []}\n              name=\"customer\"\n              label=\"Pilih Customer\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"serialNumber\"\n              label=\"Serial Number\"\n              component={CInput}\n              type=\"text\"\n            />\n          </div>\n          <div class=\"col-md-12\">\n            <Field\n              name=\"description\"\n              label=\"Deskripsi\"\n              component={CInput}\n              typeComponent=\"textarea\"\n            />\n          </div>\n        </div>\n      </Form>\n    </div>\n  );\n};\n\nconst ModalUnitSerialNumberComponent = (props) => {\n  const {\n    isModalVisible,\n    handleSubmit,\n    submitForm,\n    isLoadingFormGlobal,\n    handleCancel,\n    formName,\n    enumMenu,\n    handleUploadPhoto,\n    formStatus,\n    selectedUnitsData,\n    enumCustomer,\n  } = props;\n\n  return (\n    <CModal\n      visible={isModalVisible}\n      onCancel={handleCancel}\n      footer={<RenderFooter handleSaveForm={handleSubmit} />}\n      content={\n        <RenderContent\n          handleSubmit={handleSubmit}\n          submitForm={submitForm}\n          isLoadingFormGlobal={isLoadingFormGlobal}\n          formName={formName}\n          formStatus={formStatus}\n          enumMenu={enumMenu}\n          handleUploadPhoto={handleUploadPhoto}\n          selectedUnitsData={selectedUnitsData}\n          enumCustomer={enumCustomer}\n        />\n      }\n    />\n  );\n};\n\nexport default ModalUnitSerialNumberComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { reduxForm } from \"redux-form\";\nimport { validateFormUnitModel, validateUnitSerialNumberForm } from \"../../../../app/validateForm\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport ModalUnitSerialNumberComponent from \"../../Component/UnitSerialNumber/ModalUnitSerialNumberComponent\";\n\nconst ModalUnitSerialNumber = (props) => {\n  const {\n    valid,\n    handleCancel,\n    component: { isModalVisible },\n    units: { formStatus, selectedUnitsData },\n    customers: { listCustomersDropdown },\n    handleSubmitForm,\n  } = props;\n\n  const submitForm = (values) => {\n    if (valid) {\n      console.log(\"valid\");\n      handleSubmitForm(formStatus, values);\n    } else {\n    }\n  };\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  return (\n    <ModalUnitSerialNumberComponent\n      isModalVisible={isModalVisible}\n      handleCancel={handleCancel}\n      submitForm={submitForm}\n      formStatus={formStatus}\n      formName={formStatus === \"add\" ? \"Tambah Data\" : \"Ubah Data\"}\n      selectedUnitsData={selectedUnitsData}\n      enumCustomer={SelectCustomerData}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  admins: state.admins,\n  units: state.units,\n  component: state.component,\n  customers: state.customers,\n});\nconst mapDispatchToProps = (dispatch) => ({\n  handleCancel: () => dispatch(ComponentActions.setGlobalModal(false)),\n  handleSubmitForm: (type, values) =>\n    UnitSerialNumberActions.saveUnitSerialNumberRequested(type, values),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(ModalUnitSerialNumber);\n\nexport default reduxForm({\n  form: \"editUnitSerialNumberForm\",\n  validate: validateUnitSerialNumberForm,\n})(EnhanceContainer);\n","import React from \"react\";\nimport { Input } from \"antd\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport CTableAntd from \"../../../../components/CTable/CTableAntd\";\nimport { PlusOutlined, ArrowLeftOutlined } from \"@ant-design/icons\";\nimport { navigate } from \"../../../../app/Helpers\";\nimport CSelect from \"../../../../components/CSelect/CSelect\";\nimport ModalUnitSerialNumberContainer from \"../../Container/UnitSerialNumber/ModalUnitSerialNumberContainer\";\n\nconst { Search } = Input;\n\nconst UnitSerialNumberComponent = (props) => {\n  const {\n    headers,\n    listUnitSerialNumber,\n    listCustomer,\n    renderActionTable,\n    handlePressAddNew,\n    onChangePagination,\n    paging,\n    onSearch,\n    selectedUnitModelsData,\n    onChangeCustomer,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"mb-2\">\n                  <h6 class=\"ml-1 card-title\">{`Unit Serial Number : ${selectedUnitModelsData.name}`}</h6>\n                  <p class=\"card-description ml-1\">\n                    Silahkan pilih customer untuk menampilkan data serial number\n                  </p>\n                </div>\n                <div class=\"row d-flex justify-content-between mb-2\">\n                  <div class=\"col-md-7\">\n                    <div class=\"row ml-1 mb-3\">\n                      <CButtonAntd\n                        onClick={() => navigate(\"unit-models\")}\n                        type=\"primary\"\n                        icon={<ArrowLeftOutlined />}\n                        size=\"middle\"\n                        danger\n                      >\n                        Kembali\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressAddNew}\n                        type=\"primary\"\n                        icon={<PlusOutlined />}\n                        size=\"middle\"\n                      >\n                        Tambah Serial Number\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                  <div class=\"col-md-7\">\n                    <CSelect\n                      showSearch\n                      data={listCustomer}\n                      name=\"customer\"\n                      label=\"Pilih Customer\"\n                      onChange={(customer) => {\n                        onChangeCustomer(customer);\n                      }}\n                    />\n                  </div>\n                  <div class=\"col-md-4 mt-4\">\n                    <Search\n                      name=\"keyword\"\n                      placeholder=\"Cari\"\n                      onSearch={onSearch}\n                      enterButton\n                    />\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <CTableAntd\n                    data={listUnitSerialNumber}\n                    headers={headers}\n                    renderActions={renderActionTable}\n                    pagination={pagination}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <ModalUnitSerialNumberContainer />\n    </div>\n  );\n};\n\nexport default UnitSerialNumberComponent;\n","import { Space } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as UnitSerialNumberActions from \"../../Store/UnitSerialNumberActions\";\nimport * as CustomerActions from \"../../../Customers/Store/CustomersActions\";\nimport * as ComponentActions from \"../../../App/Store/ComponentAction\";\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\nimport CButtonAntd from \"../../../../components/CButton/CButtonAntd\";\nimport { getIndex } from \"../../../../app/Helpers\";\nimport { store } from \"../../../../app/ConfigureStore\";\nimport UnitSerialNumberComponent from \"../../Component/UnitSerialNumber/UnitSerialNumberComponent\";\n\nconst UnitSerialNumberContainer = (props) => {\n  const {\n    getUnitSerialNumber,\n    handlePressEdit,\n    handlePressDelete,\n    handlePressAddNew,\n    unitSerialNumber: {\n      listUnitSerialNumber,\n      paging,\n      selectedtUnitSerialNumber,\n    },\n    unitModels: { selectedUnitModelsData },\n    customers: { listCustomersDropdown },\n    unitSerialNumberFormValues,\n  } = props;\n\n  const { dispatch } = store;\n  const { page, limit, totalPage } = paging;\n\n  if (listUnitSerialNumber.length > 0) {\n    listUnitSerialNumber.map((item, index) => {\n      listUnitSerialNumber[index] = {\n        ...item,\n        no: getIndex(page, limit)[index],\n      };\n    });\n  }\n\n  const SelectCustomerData = [];\n  listCustomersDropdown.map((item, index) => {\n    SelectCustomerData.push({\n      id: `customer-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Serial Number\",\n      dataIndex: \"serial_number\",\n      key: \"serial_number\",\n      width: \"30%\",\n      sorter: (a, b) => a.serial_number.length - b.serial_number.length,\n    },\n    {\n      title: \"Deskripsi\",\n      dataIndex: \"descriptions\",\n      key: \"descriptions\",\n      width: \"30%\",\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\n    },\n  ];\n\n  const renderActionTable = (text, record) => (\n    <Space size=\"middle\">\n      <CButtonAntd\n        onClick={() => {\n          handlePressEdit(record);\n        }}\n        type=\"primary\"\n        icon={<EditOutlined />}\n        size=\"middle\"\n      />\n      <CButtonAntd\n        onClick={() => handlePressDelete(record.id)}\n        type=\"primary\"\n        icon={<DeleteOutlined />}\n        size=\"middle\"\n        danger\n      />\n    </Space>\n  );\n\n  React.useEffect(() => {\n    CustomerActions.getCustomerListDataByPaging(1, 999999, \"\", \"\", true);\n    // getUnitSerialNumber(page, limit);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(UnitSerialNumberActions.setPagingUnitModel(paging));\n    getUnitSerialNumber(nextPage, pageSize);\n  };\n\n  const onSearch = (keyword) => {\n    UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\n  };\n\n  const handleOnchangeCustomer = (customer) => {\n    if (!customer) {\n      dispatch(UnitSerialNumberActions.setUnitSerialNumberData([]));\n      return;\n    }\n\n    const splitCustomerId = customer.split(\"|\");\n    UnitSerialNumberActions.getUnitSerialNumber(\n      page,\n      limit,\n      \"\",\n      splitCustomerId[0]\n    );\n  };\n\n  return (\n    <UnitSerialNumberComponent\n      headers={headers}\n      listUnitSerialNumber={listUnitSerialNumber}\n      renderActionTable={renderActionTable}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      onSearch={onSearch}\n      paging={paging}\n      listCustomer={SelectCustomerData}\n      selectedUnitModelsData={selectedUnitModelsData}\n      selectedtUnitSerialNumber={selectedtUnitSerialNumber}\n      onChangeCustomer={handleOnchangeCustomer}\n      // {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  units: state.units,\n  unitSerialNumber: state.unitSerialNumber,\n  unitModels: state.unitModels,\n  customers: state.customers,\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getUnitSerialNumber: (page, limit, keyword) =>\n    UnitSerialNumberActions.getUnitSerialNumber(page, limit, keyword),\n  handlePressAddNew: async () => {\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberData({}));\n    await dispatch(UnitSerialNumberActions.setSelectedUnitSerialNumberId(\"\"));\n    dispatch(UnitSerialNumberActions.setFormStatus(\"add\"));\n    dispatch(ComponentActions.setGlobalModal(true));\n    UnitSerialNumberActions.resetForm();\n  },\n  handlePressEdit: async (record) => {\n    await dispatch(UnitSerialNumberActions.setFormStatus(\"edit\"));\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(record.id)\n    );\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberData(record)\n    );\n    await dispatch(ComponentActions.setGlobalModal(true));\n    await UnitSerialNumberActions.mapDetailUnitSerialNumberToForm();\n  },\n  handlePressDelete: async (unitModelId) => {\n    await dispatch(\n      UnitSerialNumberActions.setSelectedUnitSerialNumberId(unitModelId)\n    );\n    UnitSerialNumberActions.deleteUnitModelRequested(unitModelId);\n  },\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(UnitSerialNumberContainer);\n\nexport default reduxForm({\n  form: \"unitSerialNumberForm\",\n})(EnhanceContainer);\n","import React from \"react\";\r\nimport { Input } from \"antd\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport CTableAntd from \"../../../components/CTable/CTableAntd\";\r\nimport { ArrowLeftOutlined } from \"@ant-design/icons\";\r\nimport { navigate } from \"../../../app/Helpers\";\r\n\r\nconst { Search } = Input;\r\n\r\nconst UnitJobFormsComponent = (props) => {\r\n  const {\r\n    headers,\r\n    listUnitJobForms,\r\n    renderActionTable,\r\n    onSearch,\r\n    selectedUnitsData,\r\n  } = props;\r\n\r\n  return (\r\n    <div class=\"page-content\">\r\n      <div class=\"mt-5\">\r\n        <div class=\"row\">\r\n          <div class=\"col-md-12 grid-margin stretch-card\">\r\n            <div class=\"card\">\r\n              <div class=\"card-body\">\r\n                <div class=\"mb-2\">\r\n                  <h6 class=\"ml-1 card-title\">{`Unit : ${selectedUnitsData.name}`}</h6>\r\n                  {/* <p class=\"card-description ml-1\">\r\n                    Silahkan pilih customer untuk menampilkan data \r\n                  </p> */}\r\n                </div>\r\n                <div class=\"row d-flex justify-content-between mb-2\">\r\n                  <div class=\"col-md-7\">\r\n                    <div class=\"row ml-1 mb-3\">\r\n                      <CButtonAntd\r\n                        onClick={() => navigate(\"unit\")}\r\n                        type=\"primary\"\r\n                        icon={<ArrowLeftOutlined />}\r\n                        size=\"middle\"\r\n                        danger\r\n                      >\r\n                        Kembali\r\n                      </CButtonAntd>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-4 mt-4\">\r\n                    <Search\r\n                      name=\"keyword\"\r\n                      placeholder=\"Cari\"\r\n                      onSearch={onSearch}\r\n                      enterButton\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div class=\"table-responsive\">\r\n                  <CTableAntd data={listUnitJobForms} headers={headers} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitJobFormsComponent;\r\n","import { Space } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getFormValues, reduxForm } from \"redux-form\";\r\nimport * as UnitJobFormsActions from \"../../Units/Store/UnitJobFormActions\";\r\nimport { EditOutlined, DeleteOutlined } from \"@ant-design/icons\";\r\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\r\nimport { store } from \"../../../app/ConfigureStore\";\r\nimport UnitJobFormsComponent from \"../Component/UnitJobFormsComponent\";\r\n\r\nconst UnitJobFormsContainer = (props) => {\r\n  const {\r\n    units: { selectedUnitsData },\r\n    unitJobForms: { listUnitJobForms },\r\n    handlePressEdit,\r\n    handlePressDelete,\r\n  } = props;\r\n\r\n  const { dispatch } = store;\r\n  //   const { page, limit, totalPage } = paging;\r\n\r\n  if (listUnitJobForms.length > 0) {\r\n    listUnitJobForms.map((item, index) => {\r\n      listUnitJobForms[index] = {\r\n        ...item,\r\n        no: index + 1,\r\n      };\r\n    });\r\n  }\r\n\r\n  const headers = [\r\n    {\r\n      title: \"No\",\r\n      dataIndex: \"no\",\r\n      key: \"no\",\r\n      width: \"7%\",\r\n      sorter: (a, b) => a.no - b.no,\r\n    },\r\n    {\r\n      title: \"Job Form\",\r\n      dataIndex: \"job_form_name\",\r\n      key: \"job_form_name\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.job_form_name.length - b.job_form_name.length,\r\n    },\r\n    {\r\n      title: \"Deskripsi\",\r\n      dataIndex: \"descriptions\",\r\n      key: \"descriptions\",\r\n      width: \"30%\",\r\n      sorter: (a, b) => a.descriptions.length - b.descriptions.length,\r\n    },\r\n  ];\r\n\r\n  React.useEffect(() => {\r\n    UnitJobFormsActions.getUnitJobFormsListDataRequested(\"\");\r\n    // getUnitSerialNumber(page, limit);\r\n  }, []);\r\n\r\n  const onSearch = (keyword) => {\r\n    // UnitSerialNumberActions.handleSearch(unitSerialNumberFormValues, keyword);\r\n  };\r\n\r\n  return (\r\n    <UnitJobFormsComponent\r\n      headers={headers}\r\n      selectedUnitsData={selectedUnitsData}\r\n      listUnitJobForms={listUnitJobForms}\r\n      onSearch={onSearch}\r\n      // {...props}\r\n    />\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  units: state.units,\r\n  unitJobForms: state.unitJobForms,\r\n  unitSerialNumberFormValues: getFormValues(\"unitSerialNumberForm\")(state),\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({});\r\n\r\nconst EnhanceContainer = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(UnitJobFormsContainer);\r\n\r\nexport default reduxForm({\r\n  form: \"unitJobForms\",\r\n})(EnhanceContainer);\r\n","import React from \"react\";\nimport { Badge, Divider, Table } from \"antd\";\nimport CDatePicker from \"../../../components/CDatePicker/CDatePicker\";\nimport CSelect from \"../../../components/CSelect/CSelect\";\nimport CButtonAntd from \"../../../components/CButton/CButtonAntd\";\nimport { SearchOutlined, FilePdfOutlined } from \"@ant-design/icons\";\nimport CInput from \"../../../components/CInput/CInput\";\nimport { Field } from \"redux-form\";\n\n// const { Search } = Input;\n\nconst WorkingHoursComponent = (props) => {\n  const {\n    headers,\n    listMonitoringEmployee,\n    onChangePagination,\n    paging,\n    onSearch,\n    handlePressGeneratePdf,\n  } = props;\n\n  const pagination = {\n    total: paging.totalPage * paging.limit,\n    current: paging.page,\n    pageSize: paging.limit,\n    onChange: onChangePagination,\n  };\n\n  return (\n    <div class=\"page-content\">\n      <div class=\"mt-5\">\n        <div class=\"row\">\n          <div class=\"col-md-12 grid-margin stretch-card\">\n            <div class=\"card\">\n              <div class=\"card-body\">\n                <div class=\"row d-flex justify-content-between mb-2 align-items-center\">\n                  <h6 class=\"ml-3 card-title\">Jam Kerja Karyawan</h6>\n                </div>\n\n                <div class=\"row mb-4 align-items-center\">\n                  <div class=\"col-md-3\">\n                    <CDatePicker name=\"startDate\" label=\"Dari\" />\n                  </div>\n                  <div class=\"col-md-3\">\n                    <CDatePicker name=\"endDate\" label=\"Sampai\" />\n                  </div>\n                  <div class=\"col-md-3 mt-3\">\n                    <Field\n                      name=\"keyword\"\n                      label=\"No. Service\"\n                      component={CInput}\n                      type=\"text\"\n                    />\n                  </div>\n                  <div class=\"col-md-3 mt-4\">\n                    <div class=\"row d-flex\">\n                      <CButtonAntd\n                        onClick={onSearch}\n                        type=\"primary\"\n                        icon={<SearchOutlined />}\n                        size=\"middle\"\n                      >\n                        Cari\n                      </CButtonAntd>\n                      <div class=\"ml-2\" />\n                      <CButtonAntd\n                        onClick={handlePressGeneratePdf}\n                        type=\"primary\"\n                        icon={<FilePdfOutlined />}\n                        size=\"middle\"\n                      >\n                        Cetak Laporan\n                      </CButtonAntd>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"table-responsive\">\n                  <Table\n                    bordered\n                    columns={headers}\n                    dataSource={listMonitoringEmployee}\n                    size={\"small\"}\n                  />\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default WorkingHoursComponent;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { getFormValues, reduxForm } from \"redux-form\";\nimport * as WorkingHoursActions from \"../Store/WorkingHoursActions\";\nimport * as BranchActions from \"../../Branch/Store/BranchActions\";\nimport { store } from \"../../../app/ConfigureStore\";\nimport {\n  enumTypeMonitoringEmployee,\n  getStatusWorkingHours,\n} from \"../../../app/Helpers\";\nimport { Tag, Typography } from \"antd\";\nimport WorkingHoursComponent from \"../Component/WorkingHoursComponent\";\nimport { exportWorkingHoursReportPdf } from \"../Store/WorkingHoursReport\";\nimport moment from \"moment\";\n\nconst WorkingHoursContainer = (props) => {\n  const {\n    getListWorkingHours,\n    handlePressAddNew,\n    workingHours: { listWorkingHours, paging },\n    branch: { listBranchDropdown },\n    workingHoursFormValues,\n  } = props;\n\n  const { page, limit, totalPage } = paging;\n\n  const printedData = {\n    listWorkingHours,\n    from: moment(),\n    until: moment(),\n  };\n\n  if (listWorkingHours.length > 0) {\n    listWorkingHours.map((item, index) => {\n      listWorkingHours[index] = {\n        ...item,\n        no: index + 1,\n      };\n    });\n  }\n\n  const headers = [\n    {\n      title: \"No\",\n      dataIndex: \"no\",\n      key: \"no\",\n      width: \"7%\",\n      sorter: (a, b) => a.no - b.no,\n    },\n    {\n      title: \"Nama Karyawan\",\n      dataIndex: \"employee_name\",\n      key: \"employee_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.employee_name.length - b.employee_name.length,\n    },\n    {\n      title: \"No. Service\",\n      dataIndex: \"no_service\",\n      key: \"no_service\",\n      width: \"20%\",\n      sorter: (a, b) => a.no_service.length - b.no_service.length,\n      render: (no_service) => {\n        return (\n          <Tag style={{ width: 100, textAlign: \"center\" }} color={\"#f0f0f0\"}>\n            <Typography style={{ fontWeight: \"bold\" }}>\n              {no_service ? `${no_service}` : \"-\"}\n            </Typography>\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Nik\",\n      dataIndex: \"employee_nik\",\n      key: \"employee_nik\",\n      width: \"20%\",\n      sorter: (a, b) => a.employee_nik.length - b.employee_nik.length,\n    },\n    {\n      title: \"Nama Customer\",\n      dataIndex: \"customer_name\",\n      key: \"customer_name\",\n      width: \"30%\",\n      sorter: (a, b) => a.customer_name.length - b.customer_name.length,\n    },\n    {\n      title: \"Dibuat\",\n      dataIndex: \"created\",\n      key: \"created\",\n      width: \"30%\",\n      sorter: (a, b) => a.created.length - b.created.length,\n    },\n    {\n      title: \"Jam Kerja\",\n      dataIndex: \"total_hours\",\n      key: \"total_hours\",\n      render: (total_hours) => {\n        return (\n          <Tag style={{ width: 80, textAlign: \"center\" }} color={\"#1890ff\"}>\n            {total_hours ? `${total_hours} Jam` : \"-\"}\n          </Tag>\n        );\n      },\n      width: \"30%\",\n      sorter: (a, b) => a.total_hours - b.total_hours,\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      key: \"status\",\n      width: \"30%\",\n      sorter: (a, b) => a.status.length - b.status.length,\n      render: (status) => {\n        let color = getStatusWorkingHours(status).color;\n        return (\n          <Tag style={{ width: 112, textAlign: \"center\" }} color={color}>\n            {status ? getStatusWorkingHours(status).value : \"-\"}\n          </Tag>\n        );\n      },\n    },\n    {\n      title: \"Tanggal Selesai\",\n      dataIndex: \"done\",\n      key: \"done\",\n      width: \"30%\",\n      sorter: (a, b) => a.done.length - b.done.length,\n    },\n  ];\n\n  const SelectBranch = [];\n  listBranchDropdown.map((item, index) => {\n    SelectBranch.push({\n      id: `branch-${index}`,\n      value: item.id,\n      label: item.name,\n    });\n  });\n\n  React.useEffect(() => {\n    getListWorkingHours(page, limit);\n    BranchActions.getBranchListDataRequested(1, 99999, \"\", true);\n  }, []);\n\n  const onChangePagination = async (nextPage, pageSize) => {\n    const paging = {};\n    paging.page = nextPage;\n    paging.limit = pageSize;\n    paging.totalPage = totalPage;\n    await store.dispatch(\n      WorkingHoursActions.setPagingMonitoringEmployee(paging)\n    );\n    getListWorkingHours(nextPage, pageSize);\n  };\n\n  const onSearch = () => {\n    WorkingHoursActions.handleSearch(workingHoursFormValues);\n  };\n\n  const handlePressGeneratePdf = () => {\n    exportWorkingHoursReportPdf(printedData, workingHoursFormValues);\n  };\n\n  return (\n    <WorkingHoursComponent\n      headers={headers}\n      listMonitoringEmployee={listWorkingHours}\n      handlePressAddNew={handlePressAddNew}\n      onChangePagination={onChangePagination}\n      paging={paging}\n      enumTypeReport={enumTypeMonitoringEmployee}\n      enumBranch={SelectBranch}\n      onSearch={onSearch}\n      handlePressGeneratePdf={handlePressGeneratePdf}\n      // onShowSizeChange={onShowSizeChange}\n      {...props}\n    />\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  workingHours: state.workingHours,\n  branch: state.branch,\n  workingHoursFormValues: getFormValues(\"workingHoursForm\")(state),\n});\nconst mapDispatchToProps = (dispatch) => ({\n  getListWorkingHours: (page, limit, from, until, keyword) =>\n    WorkingHoursActions.getWorkingHoursListDataRequested(\n      page,\n      limit,\n      keyword,\n      from,\n      until\n    ),\n});\n\nconst EnhanceContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(WorkingHoursContainer);\n\nexport default reduxForm({\n  form: \"workingHoursForm\",\n})(EnhanceContainer);\n","import jsPDF from \"jspdf\";\r\nimport \"jspdf-autotable\";\r\nimport moment from \"moment\";\r\nimport { getStatusWorkingHours } from \"../../../app/Helpers\";\r\n\r\nexport const exportWorkingHoursReportPdf = (data, values) => {\r\n  const { listWorkingHours, from, until } = data;\r\n  const startDate = moment(from).format(\"YYYY-MM-DD\");\r\n  const dueDate = moment(until).format(\"YYYY-MM-DD\");\r\n  const workingHoursList = [];\r\n\r\n  listWorkingHours.map((item, index) => {\r\n    workingHoursList.push({\r\n      no: index + 1,\r\n      employeeNik: item.employee_nik,\r\n      employeeName: item.employee_name,\r\n      noService: item.no_service,\r\n      customerName: item.customer_name,\r\n      type: item.job_type,\r\n      totalHours: item.total_hours,\r\n      status: item.status ? getStatusWorkingHours(item.status).value : \"-\",\r\n      createdDate: item.created,\r\n      doneDate: item.done,\r\n    });\r\n  });\r\n\r\n  const doc = new jsPDF();\r\n  // doc.text({from_left}, {from_top})\r\n  doc.setFontSize(20);\r\n  doc.setFont(\"courier\");\r\n  doc.text(\"Jam Kerja Karyawan\", 100, 20, \"center\");\r\n  doc.setFontSize(16);\r\n  doc.text(\"PT Rutan\", 100, 30, \"center\");\r\n\r\n  doc.setFontSize(12);\r\n\r\n  //   Line 1\r\n  doc.text(15, 42, `Dari Tanggal`);\r\n  doc.text(`: ${startDate ?? \"-\"}`, 50, 42);\r\n  doc.text(15, 49, `Sampai Tanggal`);\r\n  doc.text(`: ${dueDate ?? \"-\"}`, 50, 49);\r\n\r\n  // Check if filtered by branch\r\n  if (values) {\r\n    if (values.branch) {\r\n      const splitBranch = values.branch.split(\"|\");\r\n      doc.text(15, 56, `Cabang`);\r\n      doc.text(`: ${splitBranch[1] ?? \"-\"}`, 50, 56);\r\n    }\r\n  }\r\n\r\n  // drawCell is function for styling font, color and add content to every cell\r\n  const drawCell = (dataCell) => {\r\n    // --> This for custom styling font too\r\n    // else if (dataCell.column.dataKey === \"no\") {\r\n    //   docCell.setFont(\"Verdana\", \"bold\");\r\n    //   docCell.setFontSize(12);\r\n    // }\r\n  };\r\n\r\n  // --> didParseCell is function for styling border, line, etc of every cell\r\n  const didParseCell = (dataCell) => {\r\n    let s = dataCell.cell.styles;\r\n    s.lineColor = [0, 0, 0];\r\n    s.lineWidth = 0.1;\r\n    s.font = \"courier\";\r\n\r\n    // --> This for spesific custom cell with spesific index\r\n    // if (dataCell.row.index === 1) {\r\n    //   s.lineColor = [0, 0, 0];\r\n    //   s.borders = \"t\";\r\n    // }\r\n  };\r\n\r\n  const headTable = [\r\n    [\r\n      \"No\",\r\n      \"NIK\",\r\n      \"Nama Karyawan\",\r\n      \"No. Service\",\r\n      \"Nama Customer\",\r\n      \"Dibuat\",\r\n      \"Jam Kerja\",\r\n      \"Status\",\r\n      \"Tanggal Selesai\",\r\n    ],\r\n  ];\r\n\r\n  doc.autoTable({\r\n    startY: values ? 65 : 60,\r\n    body: workingHoursList,\r\n    theme: \"plain\",\r\n    head: headTable,\r\n    headStyles: { halign: \"center\", valign: \"middle\" },\r\n    styles: { overflow: \"linebreak\", fontSize: 9, columnWidth: \"auto\" },\r\n    columns: [\r\n      { header: \"No\", dataKey: \"no\" },\r\n      { header: \"NIK\", dataKey: \"employeeNik\" },\r\n      { header: \"Nama Karyawan\", dataKey: \"employeeName\" },\r\n      { header: \"No. Service\", dataKey: \"noService\" },\r\n      { header: \"Nama Customer\", dataKey: \"customerName\" },\r\n      { header: \"Dibuat\", dataKey: \"createdDate\" },\r\n      { header: \"Jam Kerja\", dataKey: \"totalHours\" },\r\n      { header: \"Status\", dataKey: \"status\" },\r\n      { header: \"Tanggal Selesai\", dataKey: \"doneDate\" },\r\n    ],\r\n    willDrawCell: drawCell,\r\n    didParseCell: didParseCell,\r\n    columnStyles: {\r\n      0: { columnWidth: 28 },\r\n      1: { columnWidth: 20 },\r\n      // 2: { halign: \"center\" },\r\n      // 3: { halign: \"center\" },\r\n      // 4: { halign: \"center\" },\r\n      // 5: { halign: \"center\" },\r\n      // 6: { halign: \"center\" },\r\n    },\r\n    tableLineColor: [0, 0, 0],\r\n    tableLineWidth: 0.3,\r\n  });\r\n\r\n  //   Export\r\n  doc.save(\"working-hours.pdf\");\r\n};\r\n","import \"react-toastify/dist/ReactToastify.css\";\n\nimport React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet\";\nimport { ToastContainer } from \"react-toastify\";\nimport ReduxToastr from \"react-redux-toastr\";\nimport TemplateContainer from \"../modules/Template/Container/TemplateContainer\";\nimport withTemplate from \"./withTemplate\";\n\n// Pages\nimport DashboardContainer from \"../modules/Dashboard/Container/DashboardContainer\";\nimport LoginContainer from \"../modules/Auth/Container/LoginContainer\";\nimport InternalServiceContainer from \"../modules/InternalService/Container/InternalServiceContainer\";\nimport ExternalServiceContainer from \"../modules/ExternalService/Container/ExternalServiceContainer\";\nimport MonitoringEmployeeContainer from \"../modules/MonitoringEmployee/Container/MonitoringEmployeeContainer\";\nimport ReportServiceRepairContainer from \"../modules/ReportServiceRepair/Container/ReportServiceRepairContainer\";\nimport ReportEmployeeContainer from \"../modules/ReportEmployee/Container/ReportEmployeeContainer\";\nimport ListServicesContainer from \"../modules/ListServices/Container/ListServicesContainer\";\nimport AdminContainer from \"../modules/Admin/Container/AdminContainer\";\nimport NotFoundPage from \"../components/NotFound/NotFound\";\nimport AuthMiddleware from \"./AuthMiddleware\";\nimport DetailServiceTransactionContainer from \"../modules/DetailServiceTransaction/Container/DetailServiceTransactionContainer\";\nimport RolesContainer from \"../modules/Roles/Container/RolesContainer\";\nimport EmployeesListContainer from \"../modules/Employees/Container/EmployeesListContainer\";\nimport EmployeeEditContainer from \"../modules/Employees/Container/EmployeeEditContainer\";\nimport BranchContainer from \"../modules/Branch/Container/BranchContainer\";\nimport JobFormsContainer from \"../modules/JobForms/Container/JobFormsContainer\";\nimport FormWizardIdentificationContainer from \"../modules/Identification/Container/Wizard/FormWizardIdentificationContainer\";\nimport ListIdentificationContainer from \"../modules/Identification/Container/ListIdentificationContainer\";\nimport MachineConfigurationContainer from \"../modules/MachineConfiguration/Container/MachineConfigurationContainer\";\nimport UnitsContainer from \"../modules/Units/Container/UnitsContainer\";\nimport CustomerContainer from \"../modules/Customers/Container/CustomerContainer\";\nimport ToolsContainer from \"../modules/Tools/Container/ToolsContainer\";\nimport FormCategoryContainer from \"../modules/FormCategory/Container/FormCategoryContainer\";\nimport UnitModelsContainer from \"../modules/Units/Container/UnitModelsContainer\";\nimport UnitFieldsContainer from \"../modules/Units/Container/UnitFields/UnitFieldsContainer\";\nimport ReportIdentificationContainer from \"../modules/ReportIdentification/Container/ReportIdentificationContainer\";\nimport DivisionContainer from \"../modules/Division/Container/DivisionContainer\";\nimport EmployeeToolsContainer from \"../modules/Employees/Container/EmployeeTools/EmployeeToolsContainer\";\nimport DivisionUnitContainer from \"../modules/Division/Container/DivisionUnit/DivisionUnitContainer\";\nimport DetailServiceReportContainer from \"../modules/ReportPdf/Containers/DetailServiceReportContainer\";\nimport UnitSerialNumberContainer from \"../modules/Units/Container/UnitSerialNumber/UnitSerialNumberContainer\";\nimport UnitJobFormsContainer from \"../modules/Units/Container/UnitJobFormsContainer\";\nimport WorkingHoursContainer from \"../modules/WorkingHours/Container/WorkingHoursContainer\";\n\nexport default function Navigation() {\n  const authenticatedPage = (component, footerImg, footer) => {\n    return AuthMiddleware(\n      withTemplate(TemplateContainer, component, footerImg, footer)\n    );\n  };\n\n  const templating = (component, isLandingPage) => {\n    return withTemplate(TemplateContainer, component, isLandingPage);\n  };\n\n  const Login = templating(LoginContainer, false);\n  const NotFound = templating(NotFoundPage, false);\n  const Admin = authenticatedPage(AdminContainer, true);\n  const Roles = authenticatedPage(RolesContainer, true);\n  const JobForms = authenticatedPage(JobFormsContainer, true);\n  const Branches = authenticatedPage(BranchContainer, true);\n  const EmployeeList = authenticatedPage(EmployeesListContainer, true);\n  const EmployeeTools = authenticatedPage(EmployeeToolsContainer, true);\n  const Division = authenticatedPage(DivisionContainer, true);\n  const DivisionUnit = authenticatedPage(DivisionUnitContainer, true);\n  const EditEmployee = authenticatedPage(EmployeeEditContainer, true);\n  const Dashboard = authenticatedPage(DashboardContainer, true);\n  const Units = authenticatedPage(UnitsContainer, true);\n  const UnitModels = authenticatedPage(UnitModelsContainer, true);\n  const UnitFields = authenticatedPage(UnitFieldsContainer, true);\n  const UnitJobForms = authenticatedPage(UnitJobFormsContainer, true);\n  const UnitSerialNumber = authenticatedPage(UnitSerialNumberContainer, true);\n  const Tools = authenticatedPage(ToolsContainer, true);\n  const Customers = authenticatedPage(CustomerContainer, true);\n  const FormCategory = authenticatedPage(FormCategoryContainer, true);\n  const MachineConfiguration = authenticatedPage(\n    MachineConfigurationContainer,\n    true\n  );\n  const InternalService = authenticatedPage(InternalServiceContainer, true);\n  const ExternalService = authenticatedPage(ExternalServiceContainer, true);\n  const MonitoringEmployee = authenticatedPage(\n    MonitoringEmployeeContainer,\n    true\n  );\n  const ReportServiceRepair = authenticatedPage(\n    ReportServiceRepairContainer,\n    true\n  );\n  const ReportEmployee = authenticatedPage(ReportEmployeeContainer, true);\n  const WorkingHours = authenticatedPage(WorkingHoursContainer, true);\n  const ListServices = authenticatedPage(ListServicesContainer, true);\n  const ReportIdentification = authenticatedPage(\n    ReportIdentificationContainer,\n    true\n  );\n  const DetailService = authenticatedPage(\n    DetailServiceTransactionContainer,\n    true\n  );\n  const FormWizardIdentification = authenticatedPage(\n    FormWizardIdentificationContainer,\n    true\n  );\n  const ListIdentification = authenticatedPage(\n    ListIdentificationContainer,\n    true\n  );\n\n  return (\n    <>\n      <Helmet titleTemplate=\"PT. Rutan - \" defaultTitle=\"PT. Rutan\"></Helmet>\n      <ReduxToastr\n        timeOut={4000}\n        newestOnTop={false}\n        preventDuplicates={true}\n        position=\"top-right\"\n        transitionIn=\"fadeIn\"\n        transitionOut=\"fadeOut\"\n        progressBar={true}\n        closeOnToastrClick={true}\n      />\n      <ToastContainer autoClose={2000} />\n      <Switch>\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route exact path=\"/dashboard\" component={Dashboard} />\n        <Route exact path=\"/auth\" component={Login} />\n        <Route exact path=\"/admin\" component={Admin} />\n        <Route exact path=\"/role\" component={Roles} />\n        <Route exact path=\"/cabang\" component={Branches} />\n        <Route exact path=\"/machine\" component={MachineConfiguration} />\n        <Route exact path=\"/jobforms\" component={JobForms} />\n        <Route exact path=\"/unit\" component={Units} />\n        <Route exact path=\"/unit-models\" component={UnitModels} />\n        <Route exact path=\"/unit-fields\" component={UnitFields} />\n        <Route exact path=\"/unit-job-forms\" component={UnitJobForms} />\n        <Route exact path=\"/unit-serial-number\" component={UnitSerialNumber} />\n        <Route exact path=\"/tools\" component={Tools} />\n        <Route exact path=\"/customer\" component={Customers} />\n        <Route exact path=\"/category\" component={FormCategory} />\n        <Route exact path=\"/employees\" component={EmployeeList} />\n        <Route exact path=\"/division\" component={Division} />\n        <Route exact path=\"/division-unit\" component={DivisionUnit} />\n        <Route exact path=\"/edit-employee\" component={EditEmployee} />\n        <Route exact path=\"/internal-service\" component={InternalService} />\n        <Route exact path=\"/external-service\" component={ExternalService} />\n        <Route exact path=\"/employee-tools\" component={EmployeeTools} />\n        <Route\n          exact\n          path=\"/report-transaction\"\n          component={DetailServiceReportContainer}\n        />\n        <Route\n          exact\n          path=\"/monitoring-employee\"\n          component={MonitoringEmployee}\n        />\n        <Route exact path=\"/report_trans\" component={ReportServiceRepair} />\n        <Route exact path=\"/list_service\" component={ListServices} />\n        <Route exact path=\"/detail-services\" component={DetailService} />\n        <Route exact path=\"/report_employee\" component={ReportEmployee} />\n        <Route exact path=\"/working-hours\" component={WorkingHours} />\n        <Route\n          exact\n          path=\"/report_identification\"\n          component={ReportIdentification}\n        />\n        <Route\n          exact\n          path=\"/form-identification\"\n          component={FormWizardIdentification}\n        />\n        <Route exact path=\"/identification\" component={ListIdentification} />\n        <Route path={\"*\"} component={NotFound} />\n      </Switch>\n    </>\n  );\n}\n","import \"react-redux-toastr/lib/css/react-redux-toastr.min.css\";\nimport \"antd/dist/antd.css\";\nimport { ConnectedRouter } from \"connected-react-router\";\nimport history from \"./app/History\";\nimport { Provider } from \"react-redux\";\nimport { persistor, store } from \"./app/ConfigureStore\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport Navigation from \"./app/Navigation\";\n\nfunction App({ context }) {\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <ConnectedRouter history={history}>\n          <Navigation />\n        </ConnectedRouter>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}